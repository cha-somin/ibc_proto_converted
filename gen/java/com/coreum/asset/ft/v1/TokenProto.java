// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coreum/asset/ft/v1/token.proto

package com.coreum.asset.ft.v1;

public final class TokenProto {
  private TokenProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_coreum_asset_ft_v1_Definition_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_coreum_asset_ft_v1_Definition_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_coreum_asset_ft_v1_Token_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_coreum_asset_ft_v1_Token_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036coreum/asset/ft/v1/token.proto\022\022coreum" +
      ".asset.ft.v1\032\024gogoproto/gogo.proto\032\036cosm" +
      "os/base/v1beta1/coin.proto\"\254\002\n\nDefinitio" +
      "n\022\024\n\005denom\030\001 \001(\tR\005denom\022\026\n\006issuer\030\002 \001(\tR" +
      "\006issuer\0227\n\010features\030\003 \003(\0162\033.coreum.asset" +
      ".ft.v1.FeatureR\010features\022K\n\tburn_rate\030\004 " +
      "\001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sd" +
      "k/types.DecR\010burnRate\022`\n\024send_commission" +
      "_rate\030\005 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/c" +
      "osmos-sdk/types.DecR\022sendCommissionRate:" +
      "\010\210\240\037\000\350\240\037\000\"\302\003\n\005Token\022\024\n\005denom\030\001 \001(\tR\005deno" +
      "m\022\026\n\006issuer\030\002 \001(\tR\006issuer\022\026\n\006symbol\030\003 \001(" +
      "\tR\006symbol\022\030\n\007subunit\030\004 \001(\tR\007subunit\022\034\n\tp" +
      "recision\030\005 \001(\rR\tprecision\022 \n\013description" +
      "\030\006 \001(\tR\013description\022\'\n\017globally_frozen\030\007" +
      " \001(\010R\016globallyFrozen\0227\n\010features\030\010 \003(\0162\033" +
      ".coreum.asset.ft.v1.FeatureR\010features\022K\n" +
      "\tburn_rate\030\t \001(\tB.\310\336\037\000\332\336\037&github.com/cos" +
      "mos/cosmos-sdk/types.DecR\010burnRate\022`\n\024se" +
      "nd_commission_rate\030\n \001(\tB.\310\336\037\000\332\336\037&github" +
      ".com/cosmos/cosmos-sdk/types.DecR\022sendCo" +
      "mmissionRate:\010\210\240\037\000\350\240\037\000*C\n\007Feature\022\013\n\007min" +
      "ting\020\000\022\013\n\007burning\020\001\022\014\n\010freezing\020\002\022\020\n\014whi" +
      "telisting\020\003B\304\001\n\026com.coreum.asset.ft.v1B\n" +
      "TokenProtoP\001Z3github.com/CoreumFoundatio" +
      "n/coreum/x/asset/ft/types\242\002\003CAF\252\002\022Coreum" +
      ".Asset.Ft.V1\312\002\022Coreum\\Asset\\Ft\\V1\342\002\036Core" +
      "um\\Asset\\Ft\\V1\\GPBMetadata\352\002\025Coreum::Ass" +
      "et::Ft::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
        });
    internal_static_coreum_asset_ft_v1_Definition_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_coreum_asset_ft_v1_Definition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_coreum_asset_ft_v1_Definition_descriptor,
        new java.lang.String[] { "Denom", "Issuer", "Features", "BurnRate", "SendCommissionRate", });
    internal_static_coreum_asset_ft_v1_Token_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_coreum_asset_ft_v1_Token_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_coreum_asset_ft_v1_Token_descriptor,
        new java.lang.String[] { "Denom", "Issuer", "Symbol", "Subunit", "Precision", "Description", "GloballyFrozen", "Features", "BurnRate", "SendCommissionRate", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coreum/asset/nft/v1/genesis.proto

package com.coreum.asset.nft.v1;

/**
 * <pre>
 * GenesisState defines the nftasset module's genesis state.
 * </pre>
 *
 * Protobuf type {@code coreum.asset.nft.v1.GenesisState}
 */
public final class GenesisState extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:coreum.asset.nft.v1.GenesisState)
    GenesisStateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GenesisState.newBuilder() to construct.
  private GenesisState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GenesisState() {
    classDefinitions_ = java.util.Collections.emptyList();
    frozenNfts_ = java.util.Collections.emptyList();
    whitelistedNftAccounts_ = java.util.Collections.emptyList();
    burntNfts_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GenesisState();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.coreum.asset.nft.v1.GenesisProto.internal_static_coreum_asset_nft_v1_GenesisState_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.coreum.asset.nft.v1.GenesisProto.internal_static_coreum_asset_nft_v1_GenesisState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.coreum.asset.nft.v1.GenesisState.class, com.coreum.asset.nft.v1.GenesisState.Builder.class);
  }

  public static final int PARAMS_FIELD_NUMBER = 1;
  private com.coreum.asset.nft.v1.Params params_;
  /**
   * <pre>
   * params defines all the parameters of the module.
   * </pre>
   *
   * <code>.coreum.asset.nft.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return Whether the params field is set.
   */
  @java.lang.Override
  public boolean hasParams() {
    return params_ != null;
  }
  /**
   * <pre>
   * params defines all the parameters of the module.
   * </pre>
   *
   * <code>.coreum.asset.nft.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return The params.
   */
  @java.lang.Override
  public com.coreum.asset.nft.v1.Params getParams() {
    return params_ == null ? com.coreum.asset.nft.v1.Params.getDefaultInstance() : params_;
  }
  /**
   * <pre>
   * params defines all the parameters of the module.
   * </pre>
   *
   * <code>.coreum.asset.nft.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.coreum.asset.nft.v1.ParamsOrBuilder getParamsOrBuilder() {
    return params_ == null ? com.coreum.asset.nft.v1.Params.getDefaultInstance() : params_;
  }

  public static final int CLASS_DEFINITIONS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.coreum.asset.nft.v1.ClassDefinition> classDefinitions_;
  /**
   * <pre>
   * class_definitions keep the non-fungible token class definitions state
   * </pre>
   *
   * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<com.coreum.asset.nft.v1.ClassDefinition> getClassDefinitionsList() {
    return classDefinitions_;
  }
  /**
   * <pre>
   * class_definitions keep the non-fungible token class definitions state
   * </pre>
   *
   * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.coreum.asset.nft.v1.ClassDefinitionOrBuilder> 
      getClassDefinitionsOrBuilderList() {
    return classDefinitions_;
  }
  /**
   * <pre>
   * class_definitions keep the non-fungible token class definitions state
   * </pre>
   *
   * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public int getClassDefinitionsCount() {
    return classDefinitions_.size();
  }
  /**
   * <pre>
   * class_definitions keep the non-fungible token class definitions state
   * </pre>
   *
   * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.coreum.asset.nft.v1.ClassDefinition getClassDefinitions(int index) {
    return classDefinitions_.get(index);
  }
  /**
   * <pre>
   * class_definitions keep the non-fungible token class definitions state
   * </pre>
   *
   * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.coreum.asset.nft.v1.ClassDefinitionOrBuilder getClassDefinitionsOrBuilder(
      int index) {
    return classDefinitions_.get(index);
  }

  public static final int FROZEN_NFTS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.coreum.asset.nft.v1.FrozenNFT> frozenNfts_;
  /**
   * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
   */
  @java.lang.Override
  public java.util.List<com.coreum.asset.nft.v1.FrozenNFT> getFrozenNftsList() {
    return frozenNfts_;
  }
  /**
   * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.coreum.asset.nft.v1.FrozenNFTOrBuilder> 
      getFrozenNftsOrBuilderList() {
    return frozenNfts_;
  }
  /**
   * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
   */
  @java.lang.Override
  public int getFrozenNftsCount() {
    return frozenNfts_.size();
  }
  /**
   * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
   */
  @java.lang.Override
  public com.coreum.asset.nft.v1.FrozenNFT getFrozenNfts(int index) {
    return frozenNfts_.get(index);
  }
  /**
   * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
   */
  @java.lang.Override
  public com.coreum.asset.nft.v1.FrozenNFTOrBuilder getFrozenNftsOrBuilder(
      int index) {
    return frozenNfts_.get(index);
  }

  public static final int WHITELISTED_NFT_ACCOUNTS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.coreum.asset.nft.v1.WhitelistedNFTAccounts> whitelistedNftAccounts_;
  /**
   * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
   */
  @java.lang.Override
  public java.util.List<com.coreum.asset.nft.v1.WhitelistedNFTAccounts> getWhitelistedNftAccountsList() {
    return whitelistedNftAccounts_;
  }
  /**
   * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.coreum.asset.nft.v1.WhitelistedNFTAccountsOrBuilder> 
      getWhitelistedNftAccountsOrBuilderList() {
    return whitelistedNftAccounts_;
  }
  /**
   * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
   */
  @java.lang.Override
  public int getWhitelistedNftAccountsCount() {
    return whitelistedNftAccounts_.size();
  }
  /**
   * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
   */
  @java.lang.Override
  public com.coreum.asset.nft.v1.WhitelistedNFTAccounts getWhitelistedNftAccounts(int index) {
    return whitelistedNftAccounts_.get(index);
  }
  /**
   * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
   */
  @java.lang.Override
  public com.coreum.asset.nft.v1.WhitelistedNFTAccountsOrBuilder getWhitelistedNftAccountsOrBuilder(
      int index) {
    return whitelistedNftAccounts_.get(index);
  }

  public static final int BURNT_NFTS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<com.coreum.asset.nft.v1.BurntNFT> burntNfts_;
  /**
   * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
   */
  @java.lang.Override
  public java.util.List<com.coreum.asset.nft.v1.BurntNFT> getBurntNftsList() {
    return burntNfts_;
  }
  /**
   * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.coreum.asset.nft.v1.BurntNFTOrBuilder> 
      getBurntNftsOrBuilderList() {
    return burntNfts_;
  }
  /**
   * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
   */
  @java.lang.Override
  public int getBurntNftsCount() {
    return burntNfts_.size();
  }
  /**
   * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
   */
  @java.lang.Override
  public com.coreum.asset.nft.v1.BurntNFT getBurntNfts(int index) {
    return burntNfts_.get(index);
  }
  /**
   * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
   */
  @java.lang.Override
  public com.coreum.asset.nft.v1.BurntNFTOrBuilder getBurntNftsOrBuilder(
      int index) {
    return burntNfts_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (params_ != null) {
      output.writeMessage(1, getParams());
    }
    for (int i = 0; i < classDefinitions_.size(); i++) {
      output.writeMessage(2, classDefinitions_.get(i));
    }
    for (int i = 0; i < frozenNfts_.size(); i++) {
      output.writeMessage(3, frozenNfts_.get(i));
    }
    for (int i = 0; i < whitelistedNftAccounts_.size(); i++) {
      output.writeMessage(4, whitelistedNftAccounts_.get(i));
    }
    for (int i = 0; i < burntNfts_.size(); i++) {
      output.writeMessage(5, burntNfts_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (params_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getParams());
    }
    for (int i = 0; i < classDefinitions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, classDefinitions_.get(i));
    }
    for (int i = 0; i < frozenNfts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, frozenNfts_.get(i));
    }
    for (int i = 0; i < whitelistedNftAccounts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, whitelistedNftAccounts_.get(i));
    }
    for (int i = 0; i < burntNfts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, burntNfts_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.coreum.asset.nft.v1.GenesisState)) {
      return super.equals(obj);
    }
    com.coreum.asset.nft.v1.GenesisState other = (com.coreum.asset.nft.v1.GenesisState) obj;

    if (hasParams() != other.hasParams()) return false;
    if (hasParams()) {
      if (!getParams()
          .equals(other.getParams())) return false;
    }
    if (!getClassDefinitionsList()
        .equals(other.getClassDefinitionsList())) return false;
    if (!getFrozenNftsList()
        .equals(other.getFrozenNftsList())) return false;
    if (!getWhitelistedNftAccountsList()
        .equals(other.getWhitelistedNftAccountsList())) return false;
    if (!getBurntNftsList()
        .equals(other.getBurntNftsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasParams()) {
      hash = (37 * hash) + PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getParams().hashCode();
    }
    if (getClassDefinitionsCount() > 0) {
      hash = (37 * hash) + CLASS_DEFINITIONS_FIELD_NUMBER;
      hash = (53 * hash) + getClassDefinitionsList().hashCode();
    }
    if (getFrozenNftsCount() > 0) {
      hash = (37 * hash) + FROZEN_NFTS_FIELD_NUMBER;
      hash = (53 * hash) + getFrozenNftsList().hashCode();
    }
    if (getWhitelistedNftAccountsCount() > 0) {
      hash = (37 * hash) + WHITELISTED_NFT_ACCOUNTS_FIELD_NUMBER;
      hash = (53 * hash) + getWhitelistedNftAccountsList().hashCode();
    }
    if (getBurntNftsCount() > 0) {
      hash = (37 * hash) + BURNT_NFTS_FIELD_NUMBER;
      hash = (53 * hash) + getBurntNftsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.coreum.asset.nft.v1.GenesisState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.coreum.asset.nft.v1.GenesisState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.coreum.asset.nft.v1.GenesisState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.coreum.asset.nft.v1.GenesisState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.coreum.asset.nft.v1.GenesisState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.coreum.asset.nft.v1.GenesisState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.coreum.asset.nft.v1.GenesisState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.coreum.asset.nft.v1.GenesisState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.coreum.asset.nft.v1.GenesisState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.coreum.asset.nft.v1.GenesisState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.coreum.asset.nft.v1.GenesisState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.coreum.asset.nft.v1.GenesisState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.coreum.asset.nft.v1.GenesisState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * GenesisState defines the nftasset module's genesis state.
   * </pre>
   *
   * Protobuf type {@code coreum.asset.nft.v1.GenesisState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:coreum.asset.nft.v1.GenesisState)
      com.coreum.asset.nft.v1.GenesisStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.coreum.asset.nft.v1.GenesisProto.internal_static_coreum_asset_nft_v1_GenesisState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.coreum.asset.nft.v1.GenesisProto.internal_static_coreum_asset_nft_v1_GenesisState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.coreum.asset.nft.v1.GenesisState.class, com.coreum.asset.nft.v1.GenesisState.Builder.class);
    }

    // Construct using com.coreum.asset.nft.v1.GenesisState.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      params_ = null;
      if (paramsBuilder_ != null) {
        paramsBuilder_.dispose();
        paramsBuilder_ = null;
      }
      if (classDefinitionsBuilder_ == null) {
        classDefinitions_ = java.util.Collections.emptyList();
      } else {
        classDefinitions_ = null;
        classDefinitionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (frozenNftsBuilder_ == null) {
        frozenNfts_ = java.util.Collections.emptyList();
      } else {
        frozenNfts_ = null;
        frozenNftsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (whitelistedNftAccountsBuilder_ == null) {
        whitelistedNftAccounts_ = java.util.Collections.emptyList();
      } else {
        whitelistedNftAccounts_ = null;
        whitelistedNftAccountsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (burntNftsBuilder_ == null) {
        burntNfts_ = java.util.Collections.emptyList();
      } else {
        burntNfts_ = null;
        burntNftsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.coreum.asset.nft.v1.GenesisProto.internal_static_coreum_asset_nft_v1_GenesisState_descriptor;
    }

    @java.lang.Override
    public com.coreum.asset.nft.v1.GenesisState getDefaultInstanceForType() {
      return com.coreum.asset.nft.v1.GenesisState.getDefaultInstance();
    }

    @java.lang.Override
    public com.coreum.asset.nft.v1.GenesisState build() {
      com.coreum.asset.nft.v1.GenesisState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.coreum.asset.nft.v1.GenesisState buildPartial() {
      com.coreum.asset.nft.v1.GenesisState result = new com.coreum.asset.nft.v1.GenesisState(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.coreum.asset.nft.v1.GenesisState result) {
      if (classDefinitionsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          classDefinitions_ = java.util.Collections.unmodifiableList(classDefinitions_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.classDefinitions_ = classDefinitions_;
      } else {
        result.classDefinitions_ = classDefinitionsBuilder_.build();
      }
      if (frozenNftsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          frozenNfts_ = java.util.Collections.unmodifiableList(frozenNfts_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.frozenNfts_ = frozenNfts_;
      } else {
        result.frozenNfts_ = frozenNftsBuilder_.build();
      }
      if (whitelistedNftAccountsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          whitelistedNftAccounts_ = java.util.Collections.unmodifiableList(whitelistedNftAccounts_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.whitelistedNftAccounts_ = whitelistedNftAccounts_;
      } else {
        result.whitelistedNftAccounts_ = whitelistedNftAccountsBuilder_.build();
      }
      if (burntNftsBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          burntNfts_ = java.util.Collections.unmodifiableList(burntNfts_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.burntNfts_ = burntNfts_;
      } else {
        result.burntNfts_ = burntNftsBuilder_.build();
      }
    }

    private void buildPartial0(com.coreum.asset.nft.v1.GenesisState result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.params_ = paramsBuilder_ == null
            ? params_
            : paramsBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.coreum.asset.nft.v1.GenesisState) {
        return mergeFrom((com.coreum.asset.nft.v1.GenesisState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.coreum.asset.nft.v1.GenesisState other) {
      if (other == com.coreum.asset.nft.v1.GenesisState.getDefaultInstance()) return this;
      if (other.hasParams()) {
        mergeParams(other.getParams());
      }
      if (classDefinitionsBuilder_ == null) {
        if (!other.classDefinitions_.isEmpty()) {
          if (classDefinitions_.isEmpty()) {
            classDefinitions_ = other.classDefinitions_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureClassDefinitionsIsMutable();
            classDefinitions_.addAll(other.classDefinitions_);
          }
          onChanged();
        }
      } else {
        if (!other.classDefinitions_.isEmpty()) {
          if (classDefinitionsBuilder_.isEmpty()) {
            classDefinitionsBuilder_.dispose();
            classDefinitionsBuilder_ = null;
            classDefinitions_ = other.classDefinitions_;
            bitField0_ = (bitField0_ & ~0x00000002);
            classDefinitionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getClassDefinitionsFieldBuilder() : null;
          } else {
            classDefinitionsBuilder_.addAllMessages(other.classDefinitions_);
          }
        }
      }
      if (frozenNftsBuilder_ == null) {
        if (!other.frozenNfts_.isEmpty()) {
          if (frozenNfts_.isEmpty()) {
            frozenNfts_ = other.frozenNfts_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFrozenNftsIsMutable();
            frozenNfts_.addAll(other.frozenNfts_);
          }
          onChanged();
        }
      } else {
        if (!other.frozenNfts_.isEmpty()) {
          if (frozenNftsBuilder_.isEmpty()) {
            frozenNftsBuilder_.dispose();
            frozenNftsBuilder_ = null;
            frozenNfts_ = other.frozenNfts_;
            bitField0_ = (bitField0_ & ~0x00000004);
            frozenNftsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFrozenNftsFieldBuilder() : null;
          } else {
            frozenNftsBuilder_.addAllMessages(other.frozenNfts_);
          }
        }
      }
      if (whitelistedNftAccountsBuilder_ == null) {
        if (!other.whitelistedNftAccounts_.isEmpty()) {
          if (whitelistedNftAccounts_.isEmpty()) {
            whitelistedNftAccounts_ = other.whitelistedNftAccounts_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureWhitelistedNftAccountsIsMutable();
            whitelistedNftAccounts_.addAll(other.whitelistedNftAccounts_);
          }
          onChanged();
        }
      } else {
        if (!other.whitelistedNftAccounts_.isEmpty()) {
          if (whitelistedNftAccountsBuilder_.isEmpty()) {
            whitelistedNftAccountsBuilder_.dispose();
            whitelistedNftAccountsBuilder_ = null;
            whitelistedNftAccounts_ = other.whitelistedNftAccounts_;
            bitField0_ = (bitField0_ & ~0x00000008);
            whitelistedNftAccountsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getWhitelistedNftAccountsFieldBuilder() : null;
          } else {
            whitelistedNftAccountsBuilder_.addAllMessages(other.whitelistedNftAccounts_);
          }
        }
      }
      if (burntNftsBuilder_ == null) {
        if (!other.burntNfts_.isEmpty()) {
          if (burntNfts_.isEmpty()) {
            burntNfts_ = other.burntNfts_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureBurntNftsIsMutable();
            burntNfts_.addAll(other.burntNfts_);
          }
          onChanged();
        }
      } else {
        if (!other.burntNfts_.isEmpty()) {
          if (burntNftsBuilder_.isEmpty()) {
            burntNftsBuilder_.dispose();
            burntNftsBuilder_ = null;
            burntNfts_ = other.burntNfts_;
            bitField0_ = (bitField0_ & ~0x00000010);
            burntNftsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBurntNftsFieldBuilder() : null;
          } else {
            burntNftsBuilder_.addAllMessages(other.burntNfts_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getParamsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.coreum.asset.nft.v1.ClassDefinition m =
                  input.readMessage(
                      com.coreum.asset.nft.v1.ClassDefinition.parser(),
                      extensionRegistry);
              if (classDefinitionsBuilder_ == null) {
                ensureClassDefinitionsIsMutable();
                classDefinitions_.add(m);
              } else {
                classDefinitionsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.coreum.asset.nft.v1.FrozenNFT m =
                  input.readMessage(
                      com.coreum.asset.nft.v1.FrozenNFT.parser(),
                      extensionRegistry);
              if (frozenNftsBuilder_ == null) {
                ensureFrozenNftsIsMutable();
                frozenNfts_.add(m);
              } else {
                frozenNftsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.coreum.asset.nft.v1.WhitelistedNFTAccounts m =
                  input.readMessage(
                      com.coreum.asset.nft.v1.WhitelistedNFTAccounts.parser(),
                      extensionRegistry);
              if (whitelistedNftAccountsBuilder_ == null) {
                ensureWhitelistedNftAccountsIsMutable();
                whitelistedNftAccounts_.add(m);
              } else {
                whitelistedNftAccountsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              com.coreum.asset.nft.v1.BurntNFT m =
                  input.readMessage(
                      com.coreum.asset.nft.v1.BurntNFT.parser(),
                      extensionRegistry);
              if (burntNftsBuilder_ == null) {
                ensureBurntNftsIsMutable();
                burntNfts_.add(m);
              } else {
                burntNftsBuilder_.addMessage(m);
              }
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.coreum.asset.nft.v1.Params params_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.coreum.asset.nft.v1.Params, com.coreum.asset.nft.v1.Params.Builder, com.coreum.asset.nft.v1.ParamsOrBuilder> paramsBuilder_;
    /**
     * <pre>
     * params defines all the parameters of the module.
     * </pre>
     *
     * <code>.coreum.asset.nft.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return Whether the params field is set.
     */
    public boolean hasParams() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * params defines all the parameters of the module.
     * </pre>
     *
     * <code>.coreum.asset.nft.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return The params.
     */
    public com.coreum.asset.nft.v1.Params getParams() {
      if (paramsBuilder_ == null) {
        return params_ == null ? com.coreum.asset.nft.v1.Params.getDefaultInstance() : params_;
      } else {
        return paramsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * params defines all the parameters of the module.
     * </pre>
     *
     * <code>.coreum.asset.nft.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder setParams(com.coreum.asset.nft.v1.Params value) {
      if (paramsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
      } else {
        paramsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * params defines all the parameters of the module.
     * </pre>
     *
     * <code>.coreum.asset.nft.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder setParams(
        com.coreum.asset.nft.v1.Params.Builder builderForValue) {
      if (paramsBuilder_ == null) {
        params_ = builderForValue.build();
      } else {
        paramsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * params defines all the parameters of the module.
     * </pre>
     *
     * <code>.coreum.asset.nft.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeParams(com.coreum.asset.nft.v1.Params value) {
      if (paramsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          params_ != null &&
          params_ != com.coreum.asset.nft.v1.Params.getDefaultInstance()) {
          getParamsBuilder().mergeFrom(value);
        } else {
          params_ = value;
        }
      } else {
        paramsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * params defines all the parameters of the module.
     * </pre>
     *
     * <code>.coreum.asset.nft.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearParams() {
      bitField0_ = (bitField0_ & ~0x00000001);
      params_ = null;
      if (paramsBuilder_ != null) {
        paramsBuilder_.dispose();
        paramsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * params defines all the parameters of the module.
     * </pre>
     *
     * <code>.coreum.asset.nft.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public com.coreum.asset.nft.v1.Params.Builder getParamsBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getParamsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * params defines all the parameters of the module.
     * </pre>
     *
     * <code>.coreum.asset.nft.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public com.coreum.asset.nft.v1.ParamsOrBuilder getParamsOrBuilder() {
      if (paramsBuilder_ != null) {
        return paramsBuilder_.getMessageOrBuilder();
      } else {
        return params_ == null ?
            com.coreum.asset.nft.v1.Params.getDefaultInstance() : params_;
      }
    }
    /**
     * <pre>
     * params defines all the parameters of the module.
     * </pre>
     *
     * <code>.coreum.asset.nft.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.coreum.asset.nft.v1.Params, com.coreum.asset.nft.v1.Params.Builder, com.coreum.asset.nft.v1.ParamsOrBuilder> 
        getParamsFieldBuilder() {
      if (paramsBuilder_ == null) {
        paramsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.coreum.asset.nft.v1.Params, com.coreum.asset.nft.v1.Params.Builder, com.coreum.asset.nft.v1.ParamsOrBuilder>(
                getParams(),
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      return paramsBuilder_;
    }

    private java.util.List<com.coreum.asset.nft.v1.ClassDefinition> classDefinitions_ =
      java.util.Collections.emptyList();
    private void ensureClassDefinitionsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        classDefinitions_ = new java.util.ArrayList<com.coreum.asset.nft.v1.ClassDefinition>(classDefinitions_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.coreum.asset.nft.v1.ClassDefinition, com.coreum.asset.nft.v1.ClassDefinition.Builder, com.coreum.asset.nft.v1.ClassDefinitionOrBuilder> classDefinitionsBuilder_;

    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.coreum.asset.nft.v1.ClassDefinition> getClassDefinitionsList() {
      if (classDefinitionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(classDefinitions_);
      } else {
        return classDefinitionsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public int getClassDefinitionsCount() {
      if (classDefinitionsBuilder_ == null) {
        return classDefinitions_.size();
      } else {
        return classDefinitionsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public com.coreum.asset.nft.v1.ClassDefinition getClassDefinitions(int index) {
      if (classDefinitionsBuilder_ == null) {
        return classDefinitions_.get(index);
      } else {
        return classDefinitionsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public Builder setClassDefinitions(
        int index, com.coreum.asset.nft.v1.ClassDefinition value) {
      if (classDefinitionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClassDefinitionsIsMutable();
        classDefinitions_.set(index, value);
        onChanged();
      } else {
        classDefinitionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public Builder setClassDefinitions(
        int index, com.coreum.asset.nft.v1.ClassDefinition.Builder builderForValue) {
      if (classDefinitionsBuilder_ == null) {
        ensureClassDefinitionsIsMutable();
        classDefinitions_.set(index, builderForValue.build());
        onChanged();
      } else {
        classDefinitionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public Builder addClassDefinitions(com.coreum.asset.nft.v1.ClassDefinition value) {
      if (classDefinitionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClassDefinitionsIsMutable();
        classDefinitions_.add(value);
        onChanged();
      } else {
        classDefinitionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public Builder addClassDefinitions(
        int index, com.coreum.asset.nft.v1.ClassDefinition value) {
      if (classDefinitionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClassDefinitionsIsMutable();
        classDefinitions_.add(index, value);
        onChanged();
      } else {
        classDefinitionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public Builder addClassDefinitions(
        com.coreum.asset.nft.v1.ClassDefinition.Builder builderForValue) {
      if (classDefinitionsBuilder_ == null) {
        ensureClassDefinitionsIsMutable();
        classDefinitions_.add(builderForValue.build());
        onChanged();
      } else {
        classDefinitionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public Builder addClassDefinitions(
        int index, com.coreum.asset.nft.v1.ClassDefinition.Builder builderForValue) {
      if (classDefinitionsBuilder_ == null) {
        ensureClassDefinitionsIsMutable();
        classDefinitions_.add(index, builderForValue.build());
        onChanged();
      } else {
        classDefinitionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAllClassDefinitions(
        java.lang.Iterable<? extends com.coreum.asset.nft.v1.ClassDefinition> values) {
      if (classDefinitionsBuilder_ == null) {
        ensureClassDefinitionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, classDefinitions_);
        onChanged();
      } else {
        classDefinitionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearClassDefinitions() {
      if (classDefinitionsBuilder_ == null) {
        classDefinitions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        classDefinitionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public Builder removeClassDefinitions(int index) {
      if (classDefinitionsBuilder_ == null) {
        ensureClassDefinitionsIsMutable();
        classDefinitions_.remove(index);
        onChanged();
      } else {
        classDefinitionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public com.coreum.asset.nft.v1.ClassDefinition.Builder getClassDefinitionsBuilder(
        int index) {
      return getClassDefinitionsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public com.coreum.asset.nft.v1.ClassDefinitionOrBuilder getClassDefinitionsOrBuilder(
        int index) {
      if (classDefinitionsBuilder_ == null) {
        return classDefinitions_.get(index);  } else {
        return classDefinitionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<? extends com.coreum.asset.nft.v1.ClassDefinitionOrBuilder> 
         getClassDefinitionsOrBuilderList() {
      if (classDefinitionsBuilder_ != null) {
        return classDefinitionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(classDefinitions_);
      }
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public com.coreum.asset.nft.v1.ClassDefinition.Builder addClassDefinitionsBuilder() {
      return getClassDefinitionsFieldBuilder().addBuilder(
          com.coreum.asset.nft.v1.ClassDefinition.getDefaultInstance());
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public com.coreum.asset.nft.v1.ClassDefinition.Builder addClassDefinitionsBuilder(
        int index) {
      return getClassDefinitionsFieldBuilder().addBuilder(
          index, com.coreum.asset.nft.v1.ClassDefinition.getDefaultInstance());
    }
    /**
     * <pre>
     * class_definitions keep the non-fungible token class definitions state
     * </pre>
     *
     * <code>repeated .coreum.asset.nft.v1.ClassDefinition class_definitions = 2 [json_name = "classDefinitions", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.coreum.asset.nft.v1.ClassDefinition.Builder> 
         getClassDefinitionsBuilderList() {
      return getClassDefinitionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.coreum.asset.nft.v1.ClassDefinition, com.coreum.asset.nft.v1.ClassDefinition.Builder, com.coreum.asset.nft.v1.ClassDefinitionOrBuilder> 
        getClassDefinitionsFieldBuilder() {
      if (classDefinitionsBuilder_ == null) {
        classDefinitionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.coreum.asset.nft.v1.ClassDefinition, com.coreum.asset.nft.v1.ClassDefinition.Builder, com.coreum.asset.nft.v1.ClassDefinitionOrBuilder>(
                classDefinitions_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        classDefinitions_ = null;
      }
      return classDefinitionsBuilder_;
    }

    private java.util.List<com.coreum.asset.nft.v1.FrozenNFT> frozenNfts_ =
      java.util.Collections.emptyList();
    private void ensureFrozenNftsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        frozenNfts_ = new java.util.ArrayList<com.coreum.asset.nft.v1.FrozenNFT>(frozenNfts_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.coreum.asset.nft.v1.FrozenNFT, com.coreum.asset.nft.v1.FrozenNFT.Builder, com.coreum.asset.nft.v1.FrozenNFTOrBuilder> frozenNftsBuilder_;

    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public java.util.List<com.coreum.asset.nft.v1.FrozenNFT> getFrozenNftsList() {
      if (frozenNftsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(frozenNfts_);
      } else {
        return frozenNftsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public int getFrozenNftsCount() {
      if (frozenNftsBuilder_ == null) {
        return frozenNfts_.size();
      } else {
        return frozenNftsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public com.coreum.asset.nft.v1.FrozenNFT getFrozenNfts(int index) {
      if (frozenNftsBuilder_ == null) {
        return frozenNfts_.get(index);
      } else {
        return frozenNftsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public Builder setFrozenNfts(
        int index, com.coreum.asset.nft.v1.FrozenNFT value) {
      if (frozenNftsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFrozenNftsIsMutable();
        frozenNfts_.set(index, value);
        onChanged();
      } else {
        frozenNftsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public Builder setFrozenNfts(
        int index, com.coreum.asset.nft.v1.FrozenNFT.Builder builderForValue) {
      if (frozenNftsBuilder_ == null) {
        ensureFrozenNftsIsMutable();
        frozenNfts_.set(index, builderForValue.build());
        onChanged();
      } else {
        frozenNftsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public Builder addFrozenNfts(com.coreum.asset.nft.v1.FrozenNFT value) {
      if (frozenNftsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFrozenNftsIsMutable();
        frozenNfts_.add(value);
        onChanged();
      } else {
        frozenNftsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public Builder addFrozenNfts(
        int index, com.coreum.asset.nft.v1.FrozenNFT value) {
      if (frozenNftsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFrozenNftsIsMutable();
        frozenNfts_.add(index, value);
        onChanged();
      } else {
        frozenNftsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public Builder addFrozenNfts(
        com.coreum.asset.nft.v1.FrozenNFT.Builder builderForValue) {
      if (frozenNftsBuilder_ == null) {
        ensureFrozenNftsIsMutable();
        frozenNfts_.add(builderForValue.build());
        onChanged();
      } else {
        frozenNftsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public Builder addFrozenNfts(
        int index, com.coreum.asset.nft.v1.FrozenNFT.Builder builderForValue) {
      if (frozenNftsBuilder_ == null) {
        ensureFrozenNftsIsMutable();
        frozenNfts_.add(index, builderForValue.build());
        onChanged();
      } else {
        frozenNftsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public Builder addAllFrozenNfts(
        java.lang.Iterable<? extends com.coreum.asset.nft.v1.FrozenNFT> values) {
      if (frozenNftsBuilder_ == null) {
        ensureFrozenNftsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, frozenNfts_);
        onChanged();
      } else {
        frozenNftsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public Builder clearFrozenNfts() {
      if (frozenNftsBuilder_ == null) {
        frozenNfts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        frozenNftsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public Builder removeFrozenNfts(int index) {
      if (frozenNftsBuilder_ == null) {
        ensureFrozenNftsIsMutable();
        frozenNfts_.remove(index);
        onChanged();
      } else {
        frozenNftsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public com.coreum.asset.nft.v1.FrozenNFT.Builder getFrozenNftsBuilder(
        int index) {
      return getFrozenNftsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public com.coreum.asset.nft.v1.FrozenNFTOrBuilder getFrozenNftsOrBuilder(
        int index) {
      if (frozenNftsBuilder_ == null) {
        return frozenNfts_.get(index);  } else {
        return frozenNftsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public java.util.List<? extends com.coreum.asset.nft.v1.FrozenNFTOrBuilder> 
         getFrozenNftsOrBuilderList() {
      if (frozenNftsBuilder_ != null) {
        return frozenNftsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(frozenNfts_);
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public com.coreum.asset.nft.v1.FrozenNFT.Builder addFrozenNftsBuilder() {
      return getFrozenNftsFieldBuilder().addBuilder(
          com.coreum.asset.nft.v1.FrozenNFT.getDefaultInstance());
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public com.coreum.asset.nft.v1.FrozenNFT.Builder addFrozenNftsBuilder(
        int index) {
      return getFrozenNftsFieldBuilder().addBuilder(
          index, com.coreum.asset.nft.v1.FrozenNFT.getDefaultInstance());
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.FrozenNFT frozen_nfts = 3 [json_name = "frozenNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "FrozenNFTs"];</code>
     */
    public java.util.List<com.coreum.asset.nft.v1.FrozenNFT.Builder> 
         getFrozenNftsBuilderList() {
      return getFrozenNftsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.coreum.asset.nft.v1.FrozenNFT, com.coreum.asset.nft.v1.FrozenNFT.Builder, com.coreum.asset.nft.v1.FrozenNFTOrBuilder> 
        getFrozenNftsFieldBuilder() {
      if (frozenNftsBuilder_ == null) {
        frozenNftsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.coreum.asset.nft.v1.FrozenNFT, com.coreum.asset.nft.v1.FrozenNFT.Builder, com.coreum.asset.nft.v1.FrozenNFTOrBuilder>(
                frozenNfts_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        frozenNfts_ = null;
      }
      return frozenNftsBuilder_;
    }

    private java.util.List<com.coreum.asset.nft.v1.WhitelistedNFTAccounts> whitelistedNftAccounts_ =
      java.util.Collections.emptyList();
    private void ensureWhitelistedNftAccountsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        whitelistedNftAccounts_ = new java.util.ArrayList<com.coreum.asset.nft.v1.WhitelistedNFTAccounts>(whitelistedNftAccounts_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.coreum.asset.nft.v1.WhitelistedNFTAccounts, com.coreum.asset.nft.v1.WhitelistedNFTAccounts.Builder, com.coreum.asset.nft.v1.WhitelistedNFTAccountsOrBuilder> whitelistedNftAccountsBuilder_;

    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public java.util.List<com.coreum.asset.nft.v1.WhitelistedNFTAccounts> getWhitelistedNftAccountsList() {
      if (whitelistedNftAccountsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(whitelistedNftAccounts_);
      } else {
        return whitelistedNftAccountsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public int getWhitelistedNftAccountsCount() {
      if (whitelistedNftAccountsBuilder_ == null) {
        return whitelistedNftAccounts_.size();
      } else {
        return whitelistedNftAccountsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public com.coreum.asset.nft.v1.WhitelistedNFTAccounts getWhitelistedNftAccounts(int index) {
      if (whitelistedNftAccountsBuilder_ == null) {
        return whitelistedNftAccounts_.get(index);
      } else {
        return whitelistedNftAccountsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public Builder setWhitelistedNftAccounts(
        int index, com.coreum.asset.nft.v1.WhitelistedNFTAccounts value) {
      if (whitelistedNftAccountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWhitelistedNftAccountsIsMutable();
        whitelistedNftAccounts_.set(index, value);
        onChanged();
      } else {
        whitelistedNftAccountsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public Builder setWhitelistedNftAccounts(
        int index, com.coreum.asset.nft.v1.WhitelistedNFTAccounts.Builder builderForValue) {
      if (whitelistedNftAccountsBuilder_ == null) {
        ensureWhitelistedNftAccountsIsMutable();
        whitelistedNftAccounts_.set(index, builderForValue.build());
        onChanged();
      } else {
        whitelistedNftAccountsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public Builder addWhitelistedNftAccounts(com.coreum.asset.nft.v1.WhitelistedNFTAccounts value) {
      if (whitelistedNftAccountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWhitelistedNftAccountsIsMutable();
        whitelistedNftAccounts_.add(value);
        onChanged();
      } else {
        whitelistedNftAccountsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public Builder addWhitelistedNftAccounts(
        int index, com.coreum.asset.nft.v1.WhitelistedNFTAccounts value) {
      if (whitelistedNftAccountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWhitelistedNftAccountsIsMutable();
        whitelistedNftAccounts_.add(index, value);
        onChanged();
      } else {
        whitelistedNftAccountsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public Builder addWhitelistedNftAccounts(
        com.coreum.asset.nft.v1.WhitelistedNFTAccounts.Builder builderForValue) {
      if (whitelistedNftAccountsBuilder_ == null) {
        ensureWhitelistedNftAccountsIsMutable();
        whitelistedNftAccounts_.add(builderForValue.build());
        onChanged();
      } else {
        whitelistedNftAccountsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public Builder addWhitelistedNftAccounts(
        int index, com.coreum.asset.nft.v1.WhitelistedNFTAccounts.Builder builderForValue) {
      if (whitelistedNftAccountsBuilder_ == null) {
        ensureWhitelistedNftAccountsIsMutable();
        whitelistedNftAccounts_.add(index, builderForValue.build());
        onChanged();
      } else {
        whitelistedNftAccountsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public Builder addAllWhitelistedNftAccounts(
        java.lang.Iterable<? extends com.coreum.asset.nft.v1.WhitelistedNFTAccounts> values) {
      if (whitelistedNftAccountsBuilder_ == null) {
        ensureWhitelistedNftAccountsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, whitelistedNftAccounts_);
        onChanged();
      } else {
        whitelistedNftAccountsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public Builder clearWhitelistedNftAccounts() {
      if (whitelistedNftAccountsBuilder_ == null) {
        whitelistedNftAccounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        whitelistedNftAccountsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public Builder removeWhitelistedNftAccounts(int index) {
      if (whitelistedNftAccountsBuilder_ == null) {
        ensureWhitelistedNftAccountsIsMutable();
        whitelistedNftAccounts_.remove(index);
        onChanged();
      } else {
        whitelistedNftAccountsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public com.coreum.asset.nft.v1.WhitelistedNFTAccounts.Builder getWhitelistedNftAccountsBuilder(
        int index) {
      return getWhitelistedNftAccountsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public com.coreum.asset.nft.v1.WhitelistedNFTAccountsOrBuilder getWhitelistedNftAccountsOrBuilder(
        int index) {
      if (whitelistedNftAccountsBuilder_ == null) {
        return whitelistedNftAccounts_.get(index);  } else {
        return whitelistedNftAccountsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public java.util.List<? extends com.coreum.asset.nft.v1.WhitelistedNFTAccountsOrBuilder> 
         getWhitelistedNftAccountsOrBuilderList() {
      if (whitelistedNftAccountsBuilder_ != null) {
        return whitelistedNftAccountsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(whitelistedNftAccounts_);
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public com.coreum.asset.nft.v1.WhitelistedNFTAccounts.Builder addWhitelistedNftAccountsBuilder() {
      return getWhitelistedNftAccountsFieldBuilder().addBuilder(
          com.coreum.asset.nft.v1.WhitelistedNFTAccounts.getDefaultInstance());
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public com.coreum.asset.nft.v1.WhitelistedNFTAccounts.Builder addWhitelistedNftAccountsBuilder(
        int index) {
      return getWhitelistedNftAccountsFieldBuilder().addBuilder(
          index, com.coreum.asset.nft.v1.WhitelistedNFTAccounts.getDefaultInstance());
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.WhitelistedNFTAccounts whitelisted_nft_accounts = 4 [json_name = "whitelistedNftAccounts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "WhitelistedNFTAccounts"];</code>
     */
    public java.util.List<com.coreum.asset.nft.v1.WhitelistedNFTAccounts.Builder> 
         getWhitelistedNftAccountsBuilderList() {
      return getWhitelistedNftAccountsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.coreum.asset.nft.v1.WhitelistedNFTAccounts, com.coreum.asset.nft.v1.WhitelistedNFTAccounts.Builder, com.coreum.asset.nft.v1.WhitelistedNFTAccountsOrBuilder> 
        getWhitelistedNftAccountsFieldBuilder() {
      if (whitelistedNftAccountsBuilder_ == null) {
        whitelistedNftAccountsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.coreum.asset.nft.v1.WhitelistedNFTAccounts, com.coreum.asset.nft.v1.WhitelistedNFTAccounts.Builder, com.coreum.asset.nft.v1.WhitelistedNFTAccountsOrBuilder>(
                whitelistedNftAccounts_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        whitelistedNftAccounts_ = null;
      }
      return whitelistedNftAccountsBuilder_;
    }

    private java.util.List<com.coreum.asset.nft.v1.BurntNFT> burntNfts_ =
      java.util.Collections.emptyList();
    private void ensureBurntNftsIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        burntNfts_ = new java.util.ArrayList<com.coreum.asset.nft.v1.BurntNFT>(burntNfts_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.coreum.asset.nft.v1.BurntNFT, com.coreum.asset.nft.v1.BurntNFT.Builder, com.coreum.asset.nft.v1.BurntNFTOrBuilder> burntNftsBuilder_;

    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public java.util.List<com.coreum.asset.nft.v1.BurntNFT> getBurntNftsList() {
      if (burntNftsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(burntNfts_);
      } else {
        return burntNftsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public int getBurntNftsCount() {
      if (burntNftsBuilder_ == null) {
        return burntNfts_.size();
      } else {
        return burntNftsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public com.coreum.asset.nft.v1.BurntNFT getBurntNfts(int index) {
      if (burntNftsBuilder_ == null) {
        return burntNfts_.get(index);
      } else {
        return burntNftsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public Builder setBurntNfts(
        int index, com.coreum.asset.nft.v1.BurntNFT value) {
      if (burntNftsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBurntNftsIsMutable();
        burntNfts_.set(index, value);
        onChanged();
      } else {
        burntNftsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public Builder setBurntNfts(
        int index, com.coreum.asset.nft.v1.BurntNFT.Builder builderForValue) {
      if (burntNftsBuilder_ == null) {
        ensureBurntNftsIsMutable();
        burntNfts_.set(index, builderForValue.build());
        onChanged();
      } else {
        burntNftsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public Builder addBurntNfts(com.coreum.asset.nft.v1.BurntNFT value) {
      if (burntNftsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBurntNftsIsMutable();
        burntNfts_.add(value);
        onChanged();
      } else {
        burntNftsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public Builder addBurntNfts(
        int index, com.coreum.asset.nft.v1.BurntNFT value) {
      if (burntNftsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBurntNftsIsMutable();
        burntNfts_.add(index, value);
        onChanged();
      } else {
        burntNftsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public Builder addBurntNfts(
        com.coreum.asset.nft.v1.BurntNFT.Builder builderForValue) {
      if (burntNftsBuilder_ == null) {
        ensureBurntNftsIsMutable();
        burntNfts_.add(builderForValue.build());
        onChanged();
      } else {
        burntNftsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public Builder addBurntNfts(
        int index, com.coreum.asset.nft.v1.BurntNFT.Builder builderForValue) {
      if (burntNftsBuilder_ == null) {
        ensureBurntNftsIsMutable();
        burntNfts_.add(index, builderForValue.build());
        onChanged();
      } else {
        burntNftsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public Builder addAllBurntNfts(
        java.lang.Iterable<? extends com.coreum.asset.nft.v1.BurntNFT> values) {
      if (burntNftsBuilder_ == null) {
        ensureBurntNftsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, burntNfts_);
        onChanged();
      } else {
        burntNftsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public Builder clearBurntNfts() {
      if (burntNftsBuilder_ == null) {
        burntNfts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        burntNftsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public Builder removeBurntNfts(int index) {
      if (burntNftsBuilder_ == null) {
        ensureBurntNftsIsMutable();
        burntNfts_.remove(index);
        onChanged();
      } else {
        burntNftsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public com.coreum.asset.nft.v1.BurntNFT.Builder getBurntNftsBuilder(
        int index) {
      return getBurntNftsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public com.coreum.asset.nft.v1.BurntNFTOrBuilder getBurntNftsOrBuilder(
        int index) {
      if (burntNftsBuilder_ == null) {
        return burntNfts_.get(index);  } else {
        return burntNftsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public java.util.List<? extends com.coreum.asset.nft.v1.BurntNFTOrBuilder> 
         getBurntNftsOrBuilderList() {
      if (burntNftsBuilder_ != null) {
        return burntNftsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(burntNfts_);
      }
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public com.coreum.asset.nft.v1.BurntNFT.Builder addBurntNftsBuilder() {
      return getBurntNftsFieldBuilder().addBuilder(
          com.coreum.asset.nft.v1.BurntNFT.getDefaultInstance());
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public com.coreum.asset.nft.v1.BurntNFT.Builder addBurntNftsBuilder(
        int index) {
      return getBurntNftsFieldBuilder().addBuilder(
          index, com.coreum.asset.nft.v1.BurntNFT.getDefaultInstance());
    }
    /**
     * <code>repeated .coreum.asset.nft.v1.BurntNFT burnt_nfts = 5 [json_name = "burntNfts", (.gogoproto.nullable) = false, (.gogoproto.customname) = "BurntNFTs"];</code>
     */
    public java.util.List<com.coreum.asset.nft.v1.BurntNFT.Builder> 
         getBurntNftsBuilderList() {
      return getBurntNftsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.coreum.asset.nft.v1.BurntNFT, com.coreum.asset.nft.v1.BurntNFT.Builder, com.coreum.asset.nft.v1.BurntNFTOrBuilder> 
        getBurntNftsFieldBuilder() {
      if (burntNftsBuilder_ == null) {
        burntNftsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.coreum.asset.nft.v1.BurntNFT, com.coreum.asset.nft.v1.BurntNFT.Builder, com.coreum.asset.nft.v1.BurntNFTOrBuilder>(
                burntNfts_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        burntNfts_ = null;
      }
      return burntNftsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:coreum.asset.nft.v1.GenesisState)
  }

  // @@protoc_insertion_point(class_scope:coreum.asset.nft.v1.GenesisState)
  private static final com.coreum.asset.nft.v1.GenesisState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.coreum.asset.nft.v1.GenesisState();
  }

  public static com.coreum.asset.nft.v1.GenesisState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GenesisState>
      PARSER = new com.google.protobuf.AbstractParser<GenesisState>() {
    @java.lang.Override
    public GenesisState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GenesisState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GenesisState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.coreum.asset.nft.v1.GenesisState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


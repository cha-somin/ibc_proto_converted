// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/tss/exported/v1beta1/types.proto

package com.axelar.tss.exported.v1beta1;

/**
 * <pre>
 * KeyRequirement defines requirements for keys
 * </pre>
 *
 * Protobuf type {@code axelar.tss.exported.v1beta1.KeyRequirement}
 */
public final class KeyRequirement extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:axelar.tss.exported.v1beta1.KeyRequirement)
    KeyRequirementOrBuilder {
private static final long serialVersionUID = 0L;
  // Use KeyRequirement.newBuilder() to construct.
  private KeyRequirement(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private KeyRequirement() {
    keyRole_ = 0;
    keyType_ = 0;
    keyShareDistributionPolicy_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new KeyRequirement();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.axelar.tss.exported.v1beta1.TypesProto.internal_static_axelar_tss_exported_v1beta1_KeyRequirement_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.axelar.tss.exported.v1beta1.TypesProto.internal_static_axelar_tss_exported_v1beta1_KeyRequirement_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.axelar.tss.exported.v1beta1.KeyRequirement.class, com.axelar.tss.exported.v1beta1.KeyRequirement.Builder.class);
  }

  public static final int KEY_ROLE_FIELD_NUMBER = 1;
  private int keyRole_ = 0;
  /**
   * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1 [json_name = "keyRole"];</code>
   * @return The enum numeric value on the wire for keyRole.
   */
  @java.lang.Override public int getKeyRoleValue() {
    return keyRole_;
  }
  /**
   * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1 [json_name = "keyRole"];</code>
   * @return The keyRole.
   */
  @java.lang.Override public com.axelar.tss.exported.v1beta1.KeyRole getKeyRole() {
    com.axelar.tss.exported.v1beta1.KeyRole result = com.axelar.tss.exported.v1beta1.KeyRole.forNumber(keyRole_);
    return result == null ? com.axelar.tss.exported.v1beta1.KeyRole.UNRECOGNIZED : result;
  }

  public static final int KEY_TYPE_FIELD_NUMBER = 2;
  private int keyType_ = 0;
  /**
   * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2 [json_name = "keyType"];</code>
   * @return The enum numeric value on the wire for keyType.
   */
  @java.lang.Override public int getKeyTypeValue() {
    return keyType_;
  }
  /**
   * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2 [json_name = "keyType"];</code>
   * @return The keyType.
   */
  @java.lang.Override public com.axelar.tss.exported.v1beta1.KeyType getKeyType() {
    com.axelar.tss.exported.v1beta1.KeyType result = com.axelar.tss.exported.v1beta1.KeyType.forNumber(keyType_);
    return result == null ? com.axelar.tss.exported.v1beta1.KeyType.UNRECOGNIZED : result;
  }

  public static final int MIN_KEYGEN_THRESHOLD_FIELD_NUMBER = 3;
  private com.axelar.utils.v1beta1.Threshold minKeygenThreshold_;
  /**
   * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [json_name = "minKeygenThreshold", (.gogoproto.nullable) = false];</code>
   * @return Whether the minKeygenThreshold field is set.
   */
  @java.lang.Override
  public boolean hasMinKeygenThreshold() {
    return minKeygenThreshold_ != null;
  }
  /**
   * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [json_name = "minKeygenThreshold", (.gogoproto.nullable) = false];</code>
   * @return The minKeygenThreshold.
   */
  @java.lang.Override
  public com.axelar.utils.v1beta1.Threshold getMinKeygenThreshold() {
    return minKeygenThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : minKeygenThreshold_;
  }
  /**
   * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [json_name = "minKeygenThreshold", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.axelar.utils.v1beta1.ThresholdOrBuilder getMinKeygenThresholdOrBuilder() {
    return minKeygenThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : minKeygenThreshold_;
  }

  public static final int SAFETY_THRESHOLD_FIELD_NUMBER = 4;
  private com.axelar.utils.v1beta1.Threshold safetyThreshold_;
  /**
   * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [json_name = "safetyThreshold", (.gogoproto.nullable) = false];</code>
   * @return Whether the safetyThreshold field is set.
   */
  @java.lang.Override
  public boolean hasSafetyThreshold() {
    return safetyThreshold_ != null;
  }
  /**
   * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [json_name = "safetyThreshold", (.gogoproto.nullable) = false];</code>
   * @return The safetyThreshold.
   */
  @java.lang.Override
  public com.axelar.utils.v1beta1.Threshold getSafetyThreshold() {
    return safetyThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : safetyThreshold_;
  }
  /**
   * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [json_name = "safetyThreshold", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.axelar.utils.v1beta1.ThresholdOrBuilder getSafetyThresholdOrBuilder() {
    return safetyThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : safetyThreshold_;
  }

  public static final int KEY_SHARE_DISTRIBUTION_POLICY_FIELD_NUMBER = 5;
  private int keyShareDistributionPolicy_ = 0;
  /**
   * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5 [json_name = "keyShareDistributionPolicy"];</code>
   * @return The enum numeric value on the wire for keyShareDistributionPolicy.
   */
  @java.lang.Override public int getKeyShareDistributionPolicyValue() {
    return keyShareDistributionPolicy_;
  }
  /**
   * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5 [json_name = "keyShareDistributionPolicy"];</code>
   * @return The keyShareDistributionPolicy.
   */
  @java.lang.Override public com.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy getKeyShareDistributionPolicy() {
    com.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy result = com.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy.forNumber(keyShareDistributionPolicy_);
    return result == null ? com.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy.UNRECOGNIZED : result;
  }

  public static final int MAX_TOTAL_SHARE_COUNT_FIELD_NUMBER = 6;
  private long maxTotalShareCount_ = 0L;
  /**
   * <code>int64 max_total_share_count = 6 [json_name = "maxTotalShareCount"];</code>
   * @return The maxTotalShareCount.
   */
  @java.lang.Override
  public long getMaxTotalShareCount() {
    return maxTotalShareCount_;
  }

  public static final int MIN_TOTAL_SHARE_COUNT_FIELD_NUMBER = 7;
  private long minTotalShareCount_ = 0L;
  /**
   * <code>int64 min_total_share_count = 7 [json_name = "minTotalShareCount"];</code>
   * @return The minTotalShareCount.
   */
  @java.lang.Override
  public long getMinTotalShareCount() {
    return minTotalShareCount_;
  }

  public static final int KEYGEN_VOTING_THRESHOLD_FIELD_NUMBER = 8;
  private com.axelar.utils.v1beta1.Threshold keygenVotingThreshold_;
  /**
   * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [json_name = "keygenVotingThreshold", (.gogoproto.nullable) = false];</code>
   * @return Whether the keygenVotingThreshold field is set.
   */
  @java.lang.Override
  public boolean hasKeygenVotingThreshold() {
    return keygenVotingThreshold_ != null;
  }
  /**
   * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [json_name = "keygenVotingThreshold", (.gogoproto.nullable) = false];</code>
   * @return The keygenVotingThreshold.
   */
  @java.lang.Override
  public com.axelar.utils.v1beta1.Threshold getKeygenVotingThreshold() {
    return keygenVotingThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : keygenVotingThreshold_;
  }
  /**
   * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [json_name = "keygenVotingThreshold", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.axelar.utils.v1beta1.ThresholdOrBuilder getKeygenVotingThresholdOrBuilder() {
    return keygenVotingThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : keygenVotingThreshold_;
  }

  public static final int SIGN_VOTING_THRESHOLD_FIELD_NUMBER = 9;
  private com.axelar.utils.v1beta1.Threshold signVotingThreshold_;
  /**
   * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [json_name = "signVotingThreshold", (.gogoproto.nullable) = false];</code>
   * @return Whether the signVotingThreshold field is set.
   */
  @java.lang.Override
  public boolean hasSignVotingThreshold() {
    return signVotingThreshold_ != null;
  }
  /**
   * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [json_name = "signVotingThreshold", (.gogoproto.nullable) = false];</code>
   * @return The signVotingThreshold.
   */
  @java.lang.Override
  public com.axelar.utils.v1beta1.Threshold getSignVotingThreshold() {
    return signVotingThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : signVotingThreshold_;
  }
  /**
   * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [json_name = "signVotingThreshold", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.axelar.utils.v1beta1.ThresholdOrBuilder getSignVotingThresholdOrBuilder() {
    return signVotingThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : signVotingThreshold_;
  }

  public static final int KEYGEN_TIMEOUT_FIELD_NUMBER = 10;
  private long keygenTimeout_ = 0L;
  /**
   * <code>int64 keygen_timeout = 10 [json_name = "keygenTimeout"];</code>
   * @return The keygenTimeout.
   */
  @java.lang.Override
  public long getKeygenTimeout() {
    return keygenTimeout_;
  }

  public static final int SIGN_TIMEOUT_FIELD_NUMBER = 11;
  private long signTimeout_ = 0L;
  /**
   * <code>int64 sign_timeout = 11 [json_name = "signTimeout"];</code>
   * @return The signTimeout.
   */
  @java.lang.Override
  public long getSignTimeout() {
    return signTimeout_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (keyRole_ != com.axelar.tss.exported.v1beta1.KeyRole.KEY_ROLE_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, keyRole_);
    }
    if (keyType_ != com.axelar.tss.exported.v1beta1.KeyType.KEY_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, keyType_);
    }
    if (minKeygenThreshold_ != null) {
      output.writeMessage(3, getMinKeygenThreshold());
    }
    if (safetyThreshold_ != null) {
      output.writeMessage(4, getSafetyThreshold());
    }
    if (keyShareDistributionPolicy_ != com.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy.KEY_SHARE_DISTRIBUTION_POLICY_UNSPECIFIED.getNumber()) {
      output.writeEnum(5, keyShareDistributionPolicy_);
    }
    if (maxTotalShareCount_ != 0L) {
      output.writeInt64(6, maxTotalShareCount_);
    }
    if (minTotalShareCount_ != 0L) {
      output.writeInt64(7, minTotalShareCount_);
    }
    if (keygenVotingThreshold_ != null) {
      output.writeMessage(8, getKeygenVotingThreshold());
    }
    if (signVotingThreshold_ != null) {
      output.writeMessage(9, getSignVotingThreshold());
    }
    if (keygenTimeout_ != 0L) {
      output.writeInt64(10, keygenTimeout_);
    }
    if (signTimeout_ != 0L) {
      output.writeInt64(11, signTimeout_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (keyRole_ != com.axelar.tss.exported.v1beta1.KeyRole.KEY_ROLE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, keyRole_);
    }
    if (keyType_ != com.axelar.tss.exported.v1beta1.KeyType.KEY_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, keyType_);
    }
    if (minKeygenThreshold_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getMinKeygenThreshold());
    }
    if (safetyThreshold_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getSafetyThreshold());
    }
    if (keyShareDistributionPolicy_ != com.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy.KEY_SHARE_DISTRIBUTION_POLICY_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, keyShareDistributionPolicy_);
    }
    if (maxTotalShareCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, maxTotalShareCount_);
    }
    if (minTotalShareCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, minTotalShareCount_);
    }
    if (keygenVotingThreshold_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getKeygenVotingThreshold());
    }
    if (signVotingThreshold_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getSignVotingThreshold());
    }
    if (keygenTimeout_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(10, keygenTimeout_);
    }
    if (signTimeout_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(11, signTimeout_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.axelar.tss.exported.v1beta1.KeyRequirement)) {
      return super.equals(obj);
    }
    com.axelar.tss.exported.v1beta1.KeyRequirement other = (com.axelar.tss.exported.v1beta1.KeyRequirement) obj;

    if (keyRole_ != other.keyRole_) return false;
    if (keyType_ != other.keyType_) return false;
    if (hasMinKeygenThreshold() != other.hasMinKeygenThreshold()) return false;
    if (hasMinKeygenThreshold()) {
      if (!getMinKeygenThreshold()
          .equals(other.getMinKeygenThreshold())) return false;
    }
    if (hasSafetyThreshold() != other.hasSafetyThreshold()) return false;
    if (hasSafetyThreshold()) {
      if (!getSafetyThreshold()
          .equals(other.getSafetyThreshold())) return false;
    }
    if (keyShareDistributionPolicy_ != other.keyShareDistributionPolicy_) return false;
    if (getMaxTotalShareCount()
        != other.getMaxTotalShareCount()) return false;
    if (getMinTotalShareCount()
        != other.getMinTotalShareCount()) return false;
    if (hasKeygenVotingThreshold() != other.hasKeygenVotingThreshold()) return false;
    if (hasKeygenVotingThreshold()) {
      if (!getKeygenVotingThreshold()
          .equals(other.getKeygenVotingThreshold())) return false;
    }
    if (hasSignVotingThreshold() != other.hasSignVotingThreshold()) return false;
    if (hasSignVotingThreshold()) {
      if (!getSignVotingThreshold()
          .equals(other.getSignVotingThreshold())) return false;
    }
    if (getKeygenTimeout()
        != other.getKeygenTimeout()) return false;
    if (getSignTimeout()
        != other.getSignTimeout()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + KEY_ROLE_FIELD_NUMBER;
    hash = (53 * hash) + keyRole_;
    hash = (37 * hash) + KEY_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + keyType_;
    if (hasMinKeygenThreshold()) {
      hash = (37 * hash) + MIN_KEYGEN_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + getMinKeygenThreshold().hashCode();
    }
    if (hasSafetyThreshold()) {
      hash = (37 * hash) + SAFETY_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + getSafetyThreshold().hashCode();
    }
    hash = (37 * hash) + KEY_SHARE_DISTRIBUTION_POLICY_FIELD_NUMBER;
    hash = (53 * hash) + keyShareDistributionPolicy_;
    hash = (37 * hash) + MAX_TOTAL_SHARE_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxTotalShareCount());
    hash = (37 * hash) + MIN_TOTAL_SHARE_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMinTotalShareCount());
    if (hasKeygenVotingThreshold()) {
      hash = (37 * hash) + KEYGEN_VOTING_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + getKeygenVotingThreshold().hashCode();
    }
    if (hasSignVotingThreshold()) {
      hash = (37 * hash) + SIGN_VOTING_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + getSignVotingThreshold().hashCode();
    }
    hash = (37 * hash) + KEYGEN_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getKeygenTimeout());
    hash = (37 * hash) + SIGN_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSignTimeout());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.axelar.tss.exported.v1beta1.KeyRequirement parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.axelar.tss.exported.v1beta1.KeyRequirement parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.axelar.tss.exported.v1beta1.KeyRequirement parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.axelar.tss.exported.v1beta1.KeyRequirement parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.axelar.tss.exported.v1beta1.KeyRequirement parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.axelar.tss.exported.v1beta1.KeyRequirement parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.axelar.tss.exported.v1beta1.KeyRequirement parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.axelar.tss.exported.v1beta1.KeyRequirement parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.axelar.tss.exported.v1beta1.KeyRequirement parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.axelar.tss.exported.v1beta1.KeyRequirement parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.axelar.tss.exported.v1beta1.KeyRequirement parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.axelar.tss.exported.v1beta1.KeyRequirement parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.axelar.tss.exported.v1beta1.KeyRequirement prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * KeyRequirement defines requirements for keys
   * </pre>
   *
   * Protobuf type {@code axelar.tss.exported.v1beta1.KeyRequirement}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:axelar.tss.exported.v1beta1.KeyRequirement)
      com.axelar.tss.exported.v1beta1.KeyRequirementOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.axelar.tss.exported.v1beta1.TypesProto.internal_static_axelar_tss_exported_v1beta1_KeyRequirement_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.axelar.tss.exported.v1beta1.TypesProto.internal_static_axelar_tss_exported_v1beta1_KeyRequirement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.axelar.tss.exported.v1beta1.KeyRequirement.class, com.axelar.tss.exported.v1beta1.KeyRequirement.Builder.class);
    }

    // Construct using com.axelar.tss.exported.v1beta1.KeyRequirement.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      keyRole_ = 0;
      keyType_ = 0;
      minKeygenThreshold_ = null;
      if (minKeygenThresholdBuilder_ != null) {
        minKeygenThresholdBuilder_.dispose();
        minKeygenThresholdBuilder_ = null;
      }
      safetyThreshold_ = null;
      if (safetyThresholdBuilder_ != null) {
        safetyThresholdBuilder_.dispose();
        safetyThresholdBuilder_ = null;
      }
      keyShareDistributionPolicy_ = 0;
      maxTotalShareCount_ = 0L;
      minTotalShareCount_ = 0L;
      keygenVotingThreshold_ = null;
      if (keygenVotingThresholdBuilder_ != null) {
        keygenVotingThresholdBuilder_.dispose();
        keygenVotingThresholdBuilder_ = null;
      }
      signVotingThreshold_ = null;
      if (signVotingThresholdBuilder_ != null) {
        signVotingThresholdBuilder_.dispose();
        signVotingThresholdBuilder_ = null;
      }
      keygenTimeout_ = 0L;
      signTimeout_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.axelar.tss.exported.v1beta1.TypesProto.internal_static_axelar_tss_exported_v1beta1_KeyRequirement_descriptor;
    }

    @java.lang.Override
    public com.axelar.tss.exported.v1beta1.KeyRequirement getDefaultInstanceForType() {
      return com.axelar.tss.exported.v1beta1.KeyRequirement.getDefaultInstance();
    }

    @java.lang.Override
    public com.axelar.tss.exported.v1beta1.KeyRequirement build() {
      com.axelar.tss.exported.v1beta1.KeyRequirement result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.axelar.tss.exported.v1beta1.KeyRequirement buildPartial() {
      com.axelar.tss.exported.v1beta1.KeyRequirement result = new com.axelar.tss.exported.v1beta1.KeyRequirement(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.axelar.tss.exported.v1beta1.KeyRequirement result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.keyRole_ = keyRole_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.keyType_ = keyType_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.minKeygenThreshold_ = minKeygenThresholdBuilder_ == null
            ? minKeygenThreshold_
            : minKeygenThresholdBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.safetyThreshold_ = safetyThresholdBuilder_ == null
            ? safetyThreshold_
            : safetyThresholdBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.keyShareDistributionPolicy_ = keyShareDistributionPolicy_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.maxTotalShareCount_ = maxTotalShareCount_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.minTotalShareCount_ = minTotalShareCount_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.keygenVotingThreshold_ = keygenVotingThresholdBuilder_ == null
            ? keygenVotingThreshold_
            : keygenVotingThresholdBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.signVotingThreshold_ = signVotingThresholdBuilder_ == null
            ? signVotingThreshold_
            : signVotingThresholdBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.keygenTimeout_ = keygenTimeout_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.signTimeout_ = signTimeout_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.axelar.tss.exported.v1beta1.KeyRequirement) {
        return mergeFrom((com.axelar.tss.exported.v1beta1.KeyRequirement)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.axelar.tss.exported.v1beta1.KeyRequirement other) {
      if (other == com.axelar.tss.exported.v1beta1.KeyRequirement.getDefaultInstance()) return this;
      if (other.keyRole_ != 0) {
        setKeyRoleValue(other.getKeyRoleValue());
      }
      if (other.keyType_ != 0) {
        setKeyTypeValue(other.getKeyTypeValue());
      }
      if (other.hasMinKeygenThreshold()) {
        mergeMinKeygenThreshold(other.getMinKeygenThreshold());
      }
      if (other.hasSafetyThreshold()) {
        mergeSafetyThreshold(other.getSafetyThreshold());
      }
      if (other.keyShareDistributionPolicy_ != 0) {
        setKeyShareDistributionPolicyValue(other.getKeyShareDistributionPolicyValue());
      }
      if (other.getMaxTotalShareCount() != 0L) {
        setMaxTotalShareCount(other.getMaxTotalShareCount());
      }
      if (other.getMinTotalShareCount() != 0L) {
        setMinTotalShareCount(other.getMinTotalShareCount());
      }
      if (other.hasKeygenVotingThreshold()) {
        mergeKeygenVotingThreshold(other.getKeygenVotingThreshold());
      }
      if (other.hasSignVotingThreshold()) {
        mergeSignVotingThreshold(other.getSignVotingThreshold());
      }
      if (other.getKeygenTimeout() != 0L) {
        setKeygenTimeout(other.getKeygenTimeout());
      }
      if (other.getSignTimeout() != 0L) {
        setSignTimeout(other.getSignTimeout());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              keyRole_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              keyType_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              input.readMessage(
                  getMinKeygenThresholdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getSafetyThresholdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              keyShareDistributionPolicy_ = input.readEnum();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              maxTotalShareCount_ = input.readInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              minTotalShareCount_ = input.readInt64();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 66: {
              input.readMessage(
                  getKeygenVotingThresholdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              input.readMessage(
                  getSignVotingThresholdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            case 80: {
              keygenTimeout_ = input.readInt64();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 88: {
              signTimeout_ = input.readInt64();
              bitField0_ |= 0x00000400;
              break;
            } // case 88
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int keyRole_ = 0;
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1 [json_name = "keyRole"];</code>
     * @return The enum numeric value on the wire for keyRole.
     */
    @java.lang.Override public int getKeyRoleValue() {
      return keyRole_;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1 [json_name = "keyRole"];</code>
     * @param value The enum numeric value on the wire for keyRole to set.
     * @return This builder for chaining.
     */
    public Builder setKeyRoleValue(int value) {
      keyRole_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1 [json_name = "keyRole"];</code>
     * @return The keyRole.
     */
    @java.lang.Override
    public com.axelar.tss.exported.v1beta1.KeyRole getKeyRole() {
      com.axelar.tss.exported.v1beta1.KeyRole result = com.axelar.tss.exported.v1beta1.KeyRole.forNumber(keyRole_);
      return result == null ? com.axelar.tss.exported.v1beta1.KeyRole.UNRECOGNIZED : result;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1 [json_name = "keyRole"];</code>
     * @param value The keyRole to set.
     * @return This builder for chaining.
     */
    public Builder setKeyRole(com.axelar.tss.exported.v1beta1.KeyRole value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      keyRole_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1 [json_name = "keyRole"];</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyRole() {
      bitField0_ = (bitField0_ & ~0x00000001);
      keyRole_ = 0;
      onChanged();
      return this;
    }

    private int keyType_ = 0;
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2 [json_name = "keyType"];</code>
     * @return The enum numeric value on the wire for keyType.
     */
    @java.lang.Override public int getKeyTypeValue() {
      return keyType_;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2 [json_name = "keyType"];</code>
     * @param value The enum numeric value on the wire for keyType to set.
     * @return This builder for chaining.
     */
    public Builder setKeyTypeValue(int value) {
      keyType_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2 [json_name = "keyType"];</code>
     * @return The keyType.
     */
    @java.lang.Override
    public com.axelar.tss.exported.v1beta1.KeyType getKeyType() {
      com.axelar.tss.exported.v1beta1.KeyType result = com.axelar.tss.exported.v1beta1.KeyType.forNumber(keyType_);
      return result == null ? com.axelar.tss.exported.v1beta1.KeyType.UNRECOGNIZED : result;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2 [json_name = "keyType"];</code>
     * @param value The keyType to set.
     * @return This builder for chaining.
     */
    public Builder setKeyType(com.axelar.tss.exported.v1beta1.KeyType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      keyType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2 [json_name = "keyType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      keyType_ = 0;
      onChanged();
      return this;
    }

    private com.axelar.utils.v1beta1.Threshold minKeygenThreshold_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder> minKeygenThresholdBuilder_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [json_name = "minKeygenThreshold", (.gogoproto.nullable) = false];</code>
     * @return Whether the minKeygenThreshold field is set.
     */
    public boolean hasMinKeygenThreshold() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [json_name = "minKeygenThreshold", (.gogoproto.nullable) = false];</code>
     * @return The minKeygenThreshold.
     */
    public com.axelar.utils.v1beta1.Threshold getMinKeygenThreshold() {
      if (minKeygenThresholdBuilder_ == null) {
        return minKeygenThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : minKeygenThreshold_;
      } else {
        return minKeygenThresholdBuilder_.getMessage();
      }
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [json_name = "minKeygenThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder setMinKeygenThreshold(com.axelar.utils.v1beta1.Threshold value) {
      if (minKeygenThresholdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        minKeygenThreshold_ = value;
      } else {
        minKeygenThresholdBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [json_name = "minKeygenThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder setMinKeygenThreshold(
        com.axelar.utils.v1beta1.Threshold.Builder builderForValue) {
      if (minKeygenThresholdBuilder_ == null) {
        minKeygenThreshold_ = builderForValue.build();
      } else {
        minKeygenThresholdBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [json_name = "minKeygenThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeMinKeygenThreshold(com.axelar.utils.v1beta1.Threshold value) {
      if (minKeygenThresholdBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          minKeygenThreshold_ != null &&
          minKeygenThreshold_ != com.axelar.utils.v1beta1.Threshold.getDefaultInstance()) {
          getMinKeygenThresholdBuilder().mergeFrom(value);
        } else {
          minKeygenThreshold_ = value;
        }
      } else {
        minKeygenThresholdBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [json_name = "minKeygenThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearMinKeygenThreshold() {
      bitField0_ = (bitField0_ & ~0x00000004);
      minKeygenThreshold_ = null;
      if (minKeygenThresholdBuilder_ != null) {
        minKeygenThresholdBuilder_.dispose();
        minKeygenThresholdBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [json_name = "minKeygenThreshold", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.utils.v1beta1.Threshold.Builder getMinKeygenThresholdBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getMinKeygenThresholdFieldBuilder().getBuilder();
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [json_name = "minKeygenThreshold", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.utils.v1beta1.ThresholdOrBuilder getMinKeygenThresholdOrBuilder() {
      if (minKeygenThresholdBuilder_ != null) {
        return minKeygenThresholdBuilder_.getMessageOrBuilder();
      } else {
        return minKeygenThreshold_ == null ?
            com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : minKeygenThreshold_;
      }
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [json_name = "minKeygenThreshold", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder> 
        getMinKeygenThresholdFieldBuilder() {
      if (minKeygenThresholdBuilder_ == null) {
        minKeygenThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder>(
                getMinKeygenThreshold(),
                getParentForChildren(),
                isClean());
        minKeygenThreshold_ = null;
      }
      return minKeygenThresholdBuilder_;
    }

    private com.axelar.utils.v1beta1.Threshold safetyThreshold_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder> safetyThresholdBuilder_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [json_name = "safetyThreshold", (.gogoproto.nullable) = false];</code>
     * @return Whether the safetyThreshold field is set.
     */
    public boolean hasSafetyThreshold() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [json_name = "safetyThreshold", (.gogoproto.nullable) = false];</code>
     * @return The safetyThreshold.
     */
    public com.axelar.utils.v1beta1.Threshold getSafetyThreshold() {
      if (safetyThresholdBuilder_ == null) {
        return safetyThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : safetyThreshold_;
      } else {
        return safetyThresholdBuilder_.getMessage();
      }
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [json_name = "safetyThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder setSafetyThreshold(com.axelar.utils.v1beta1.Threshold value) {
      if (safetyThresholdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        safetyThreshold_ = value;
      } else {
        safetyThresholdBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [json_name = "safetyThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder setSafetyThreshold(
        com.axelar.utils.v1beta1.Threshold.Builder builderForValue) {
      if (safetyThresholdBuilder_ == null) {
        safetyThreshold_ = builderForValue.build();
      } else {
        safetyThresholdBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [json_name = "safetyThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeSafetyThreshold(com.axelar.utils.v1beta1.Threshold value) {
      if (safetyThresholdBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          safetyThreshold_ != null &&
          safetyThreshold_ != com.axelar.utils.v1beta1.Threshold.getDefaultInstance()) {
          getSafetyThresholdBuilder().mergeFrom(value);
        } else {
          safetyThreshold_ = value;
        }
      } else {
        safetyThresholdBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [json_name = "safetyThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearSafetyThreshold() {
      bitField0_ = (bitField0_ & ~0x00000008);
      safetyThreshold_ = null;
      if (safetyThresholdBuilder_ != null) {
        safetyThresholdBuilder_.dispose();
        safetyThresholdBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [json_name = "safetyThreshold", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.utils.v1beta1.Threshold.Builder getSafetyThresholdBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getSafetyThresholdFieldBuilder().getBuilder();
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [json_name = "safetyThreshold", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.utils.v1beta1.ThresholdOrBuilder getSafetyThresholdOrBuilder() {
      if (safetyThresholdBuilder_ != null) {
        return safetyThresholdBuilder_.getMessageOrBuilder();
      } else {
        return safetyThreshold_ == null ?
            com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : safetyThreshold_;
      }
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [json_name = "safetyThreshold", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder> 
        getSafetyThresholdFieldBuilder() {
      if (safetyThresholdBuilder_ == null) {
        safetyThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder>(
                getSafetyThreshold(),
                getParentForChildren(),
                isClean());
        safetyThreshold_ = null;
      }
      return safetyThresholdBuilder_;
    }

    private int keyShareDistributionPolicy_ = 0;
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5 [json_name = "keyShareDistributionPolicy"];</code>
     * @return The enum numeric value on the wire for keyShareDistributionPolicy.
     */
    @java.lang.Override public int getKeyShareDistributionPolicyValue() {
      return keyShareDistributionPolicy_;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5 [json_name = "keyShareDistributionPolicy"];</code>
     * @param value The enum numeric value on the wire for keyShareDistributionPolicy to set.
     * @return This builder for chaining.
     */
    public Builder setKeyShareDistributionPolicyValue(int value) {
      keyShareDistributionPolicy_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5 [json_name = "keyShareDistributionPolicy"];</code>
     * @return The keyShareDistributionPolicy.
     */
    @java.lang.Override
    public com.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy getKeyShareDistributionPolicy() {
      com.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy result = com.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy.forNumber(keyShareDistributionPolicy_);
      return result == null ? com.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy.UNRECOGNIZED : result;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5 [json_name = "keyShareDistributionPolicy"];</code>
     * @param value The keyShareDistributionPolicy to set.
     * @return This builder for chaining.
     */
    public Builder setKeyShareDistributionPolicy(com.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      keyShareDistributionPolicy_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5 [json_name = "keyShareDistributionPolicy"];</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyShareDistributionPolicy() {
      bitField0_ = (bitField0_ & ~0x00000010);
      keyShareDistributionPolicy_ = 0;
      onChanged();
      return this;
    }

    private long maxTotalShareCount_ ;
    /**
     * <code>int64 max_total_share_count = 6 [json_name = "maxTotalShareCount"];</code>
     * @return The maxTotalShareCount.
     */
    @java.lang.Override
    public long getMaxTotalShareCount() {
      return maxTotalShareCount_;
    }
    /**
     * <code>int64 max_total_share_count = 6 [json_name = "maxTotalShareCount"];</code>
     * @param value The maxTotalShareCount to set.
     * @return This builder for chaining.
     */
    public Builder setMaxTotalShareCount(long value) {

      maxTotalShareCount_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>int64 max_total_share_count = 6 [json_name = "maxTotalShareCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxTotalShareCount() {
      bitField0_ = (bitField0_ & ~0x00000020);
      maxTotalShareCount_ = 0L;
      onChanged();
      return this;
    }

    private long minTotalShareCount_ ;
    /**
     * <code>int64 min_total_share_count = 7 [json_name = "minTotalShareCount"];</code>
     * @return The minTotalShareCount.
     */
    @java.lang.Override
    public long getMinTotalShareCount() {
      return minTotalShareCount_;
    }
    /**
     * <code>int64 min_total_share_count = 7 [json_name = "minTotalShareCount"];</code>
     * @param value The minTotalShareCount to set.
     * @return This builder for chaining.
     */
    public Builder setMinTotalShareCount(long value) {

      minTotalShareCount_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>int64 min_total_share_count = 7 [json_name = "minTotalShareCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMinTotalShareCount() {
      bitField0_ = (bitField0_ & ~0x00000040);
      minTotalShareCount_ = 0L;
      onChanged();
      return this;
    }

    private com.axelar.utils.v1beta1.Threshold keygenVotingThreshold_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder> keygenVotingThresholdBuilder_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [json_name = "keygenVotingThreshold", (.gogoproto.nullable) = false];</code>
     * @return Whether the keygenVotingThreshold field is set.
     */
    public boolean hasKeygenVotingThreshold() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [json_name = "keygenVotingThreshold", (.gogoproto.nullable) = false];</code>
     * @return The keygenVotingThreshold.
     */
    public com.axelar.utils.v1beta1.Threshold getKeygenVotingThreshold() {
      if (keygenVotingThresholdBuilder_ == null) {
        return keygenVotingThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : keygenVotingThreshold_;
      } else {
        return keygenVotingThresholdBuilder_.getMessage();
      }
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [json_name = "keygenVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder setKeygenVotingThreshold(com.axelar.utils.v1beta1.Threshold value) {
      if (keygenVotingThresholdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        keygenVotingThreshold_ = value;
      } else {
        keygenVotingThresholdBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [json_name = "keygenVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder setKeygenVotingThreshold(
        com.axelar.utils.v1beta1.Threshold.Builder builderForValue) {
      if (keygenVotingThresholdBuilder_ == null) {
        keygenVotingThreshold_ = builderForValue.build();
      } else {
        keygenVotingThresholdBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [json_name = "keygenVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeKeygenVotingThreshold(com.axelar.utils.v1beta1.Threshold value) {
      if (keygenVotingThresholdBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          keygenVotingThreshold_ != null &&
          keygenVotingThreshold_ != com.axelar.utils.v1beta1.Threshold.getDefaultInstance()) {
          getKeygenVotingThresholdBuilder().mergeFrom(value);
        } else {
          keygenVotingThreshold_ = value;
        }
      } else {
        keygenVotingThresholdBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [json_name = "keygenVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearKeygenVotingThreshold() {
      bitField0_ = (bitField0_ & ~0x00000080);
      keygenVotingThreshold_ = null;
      if (keygenVotingThresholdBuilder_ != null) {
        keygenVotingThresholdBuilder_.dispose();
        keygenVotingThresholdBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [json_name = "keygenVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.utils.v1beta1.Threshold.Builder getKeygenVotingThresholdBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getKeygenVotingThresholdFieldBuilder().getBuilder();
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [json_name = "keygenVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.utils.v1beta1.ThresholdOrBuilder getKeygenVotingThresholdOrBuilder() {
      if (keygenVotingThresholdBuilder_ != null) {
        return keygenVotingThresholdBuilder_.getMessageOrBuilder();
      } else {
        return keygenVotingThreshold_ == null ?
            com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : keygenVotingThreshold_;
      }
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [json_name = "keygenVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder> 
        getKeygenVotingThresholdFieldBuilder() {
      if (keygenVotingThresholdBuilder_ == null) {
        keygenVotingThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder>(
                getKeygenVotingThreshold(),
                getParentForChildren(),
                isClean());
        keygenVotingThreshold_ = null;
      }
      return keygenVotingThresholdBuilder_;
    }

    private com.axelar.utils.v1beta1.Threshold signVotingThreshold_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder> signVotingThresholdBuilder_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [json_name = "signVotingThreshold", (.gogoproto.nullable) = false];</code>
     * @return Whether the signVotingThreshold field is set.
     */
    public boolean hasSignVotingThreshold() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [json_name = "signVotingThreshold", (.gogoproto.nullable) = false];</code>
     * @return The signVotingThreshold.
     */
    public com.axelar.utils.v1beta1.Threshold getSignVotingThreshold() {
      if (signVotingThresholdBuilder_ == null) {
        return signVotingThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : signVotingThreshold_;
      } else {
        return signVotingThresholdBuilder_.getMessage();
      }
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [json_name = "signVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder setSignVotingThreshold(com.axelar.utils.v1beta1.Threshold value) {
      if (signVotingThresholdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        signVotingThreshold_ = value;
      } else {
        signVotingThresholdBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [json_name = "signVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder setSignVotingThreshold(
        com.axelar.utils.v1beta1.Threshold.Builder builderForValue) {
      if (signVotingThresholdBuilder_ == null) {
        signVotingThreshold_ = builderForValue.build();
      } else {
        signVotingThresholdBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [json_name = "signVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeSignVotingThreshold(com.axelar.utils.v1beta1.Threshold value) {
      if (signVotingThresholdBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0) &&
          signVotingThreshold_ != null &&
          signVotingThreshold_ != com.axelar.utils.v1beta1.Threshold.getDefaultInstance()) {
          getSignVotingThresholdBuilder().mergeFrom(value);
        } else {
          signVotingThreshold_ = value;
        }
      } else {
        signVotingThresholdBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [json_name = "signVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearSignVotingThreshold() {
      bitField0_ = (bitField0_ & ~0x00000100);
      signVotingThreshold_ = null;
      if (signVotingThresholdBuilder_ != null) {
        signVotingThresholdBuilder_.dispose();
        signVotingThresholdBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [json_name = "signVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.utils.v1beta1.Threshold.Builder getSignVotingThresholdBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getSignVotingThresholdFieldBuilder().getBuilder();
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [json_name = "signVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.utils.v1beta1.ThresholdOrBuilder getSignVotingThresholdOrBuilder() {
      if (signVotingThresholdBuilder_ != null) {
        return signVotingThresholdBuilder_.getMessageOrBuilder();
      } else {
        return signVotingThreshold_ == null ?
            com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : signVotingThreshold_;
      }
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [json_name = "signVotingThreshold", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder> 
        getSignVotingThresholdFieldBuilder() {
      if (signVotingThresholdBuilder_ == null) {
        signVotingThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder>(
                getSignVotingThreshold(),
                getParentForChildren(),
                isClean());
        signVotingThreshold_ = null;
      }
      return signVotingThresholdBuilder_;
    }

    private long keygenTimeout_ ;
    /**
     * <code>int64 keygen_timeout = 10 [json_name = "keygenTimeout"];</code>
     * @return The keygenTimeout.
     */
    @java.lang.Override
    public long getKeygenTimeout() {
      return keygenTimeout_;
    }
    /**
     * <code>int64 keygen_timeout = 10 [json_name = "keygenTimeout"];</code>
     * @param value The keygenTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setKeygenTimeout(long value) {

      keygenTimeout_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <code>int64 keygen_timeout = 10 [json_name = "keygenTimeout"];</code>
     * @return This builder for chaining.
     */
    public Builder clearKeygenTimeout() {
      bitField0_ = (bitField0_ & ~0x00000200);
      keygenTimeout_ = 0L;
      onChanged();
      return this;
    }

    private long signTimeout_ ;
    /**
     * <code>int64 sign_timeout = 11 [json_name = "signTimeout"];</code>
     * @return The signTimeout.
     */
    @java.lang.Override
    public long getSignTimeout() {
      return signTimeout_;
    }
    /**
     * <code>int64 sign_timeout = 11 [json_name = "signTimeout"];</code>
     * @param value The signTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setSignTimeout(long value) {

      signTimeout_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <code>int64 sign_timeout = 11 [json_name = "signTimeout"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSignTimeout() {
      bitField0_ = (bitField0_ & ~0x00000400);
      signTimeout_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:axelar.tss.exported.v1beta1.KeyRequirement)
  }

  // @@protoc_insertion_point(class_scope:axelar.tss.exported.v1beta1.KeyRequirement)
  private static final com.axelar.tss.exported.v1beta1.KeyRequirement DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.axelar.tss.exported.v1beta1.KeyRequirement();
  }

  public static com.axelar.tss.exported.v1beta1.KeyRequirement getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<KeyRequirement>
      PARSER = new com.google.protobuf.AbstractParser<KeyRequirement>() {
    @java.lang.Override
    public KeyRequirement parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<KeyRequirement> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<KeyRequirement> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.axelar.tss.exported.v1beta1.KeyRequirement getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/tss/exported/v1beta1/types.proto

package com.axelar.tss.exported.v1beta1;

public final class TypesProto {
  private TypesProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_tss_exported_v1beta1_KeyRequirement_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_tss_exported_v1beta1_KeyRequirement_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_tss_exported_v1beta1_SigKeyPair_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_tss_exported_v1beta1_SigKeyPair_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'axelar/tss/exported/v1beta1/types.prot" +
      "o\022\033axelar.tss.exported.v1beta1\032\031google/p" +
      "rotobuf/any.proto\032\037google/protobuf/times" +
      "tamp.proto\032\031cosmos_proto/cosmos.proto\032$a" +
      "xelar/utils/v1beta1/threshold.proto\032\024gog" +
      "oproto/gogo.proto\"\243\006\n\016KeyRequirement\022?\n\010" +
      "key_role\030\001 \001(\0162$.axelar.tss.exported.v1b" +
      "eta1.KeyRoleR\007keyRole\022?\n\010key_type\030\002 \001(\0162" +
      "$.axelar.tss.exported.v1beta1.KeyTypeR\007k" +
      "eyType\022W\n\024min_keygen_threshold\030\003 \001(\0132\037.a" +
      "xelar.utils.v1beta1.ThresholdB\004\310\336\037\000R\022min" +
      "KeygenThreshold\022P\n\020safety_threshold\030\004 \001(" +
      "\0132\037.axelar.utils.v1beta1.ThresholdB\004\310\336\037\000" +
      "R\017safetyThreshold\022z\n\035key_share_distribut" +
      "ion_policy\030\005 \001(\01627.axelar.tss.exported.v" +
      "1beta1.KeyShareDistributionPolicyR\032keySh" +
      "areDistributionPolicy\0221\n\025max_total_share" +
      "_count\030\006 \001(\003R\022maxTotalShareCount\0221\n\025min_" +
      "total_share_count\030\007 \001(\003R\022minTotalShareCo" +
      "unt\022]\n\027keygen_voting_threshold\030\010 \001(\0132\037.a" +
      "xelar.utils.v1beta1.ThresholdB\004\310\336\037\000R\025key" +
      "genVotingThreshold\022Y\n\025sign_voting_thresh" +
      "old\030\t \001(\0132\037.axelar.utils.v1beta1.Thresho" +
      "ldB\004\310\336\037\000R\023signVotingThreshold\022%\n\016keygen_" +
      "timeout\030\n \001(\003R\rkeygenTimeout\022!\n\014sign_tim" +
      "eout\030\013 \001(\003R\013signTimeout\"C\n\nSigKeyPair\022\027\n" +
      "\007pub_key\030\001 \001(\014R\006pubKey\022\034\n\tsignature\030\002 \001(" +
      "\014R\tsignature*\274\001\n\007KeyRole\022%\n\024KEY_ROLE_UNS" +
      "PECIFIED\020\000\032\013\212\235 \007Unknown\022&\n\023KEY_ROLE_MAST" +
      "ER_KEY\020\001\032\r\212\235 \tMasterKey\022,\n\026KEY_ROLE_SECO" +
      "NDARY_KEY\020\002\032\020\212\235 \014SecondaryKey\022*\n\025KEY_ROL" +
      "E_EXTERNAL_KEY\020\003\032\017\212\235 \013ExternalKey\032\010\210\243\036\000\250" +
      "\244\036\001*\226\001\n\007KeyType\022\030\n\024KEY_TYPE_UNSPECIFIED\020" +
      "\000\022\033\n\rKEY_TYPE_NONE\020\001\032\010\212\235 \004None\022%\n\022KEY_TY" +
      "PE_THRESHOLD\020\002\032\r\212\235 \tThreshold\022#\n\021KEY_TYP" +
      "E_MULTISIG\020\003\032\014\212\235 \010Multisig\032\010\210\243\036\000\250\244\036\001*\372\001\n" +
      "\032KeyShareDistributionPolicy\022>\n)KEY_SHARE" +
      "_DISTRIBUTION_POLICY_UNSPECIFIED\020\000\032\017\212\235 \013" +
      "Unspecified\022H\n/KEY_SHARE_DISTRIBUTION_PO" +
      "LICY_WEIGHTED_BY_STAKE\020\001\032\023\212\235 \017WeightedBy" +
      "Stake\022H\n/KEY_SHARE_DISTRIBUTION_POLICY_O" +
      "NE_PER_VALIDATOR\020\002\032\023\212\235 \017OnePerValidator\032" +
      "\010\210\243\036\000\250\244\036\001B\361\001\n\037com.axelar.tss.exported.v1" +
      "beta1B\nTypesProtoP\001Z3github.com/axelarne" +
      "twork/axelar-core/x/tss/exported\242\002\003ATE\252\002" +
      "\033Axelar.Tss.Exported.V1beta1\312\002\033Axelar\\Ts" +
      "s\\Exported\\V1beta1\342\002\'Axelar\\Tss\\Exported" +
      "\\V1beta1\\GPBMetadata\352\002\036Axelar::Tss::Expo" +
      "rted::V1beta1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
          com.axelar.utils.v1beta1.ThresholdProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_axelar_tss_exported_v1beta1_KeyRequirement_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_axelar_tss_exported_v1beta1_KeyRequirement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_tss_exported_v1beta1_KeyRequirement_descriptor,
        new java.lang.String[] { "KeyRole", "KeyType", "MinKeygenThreshold", "SafetyThreshold", "KeyShareDistributionPolicy", "MaxTotalShareCount", "MinTotalShareCount", "KeygenVotingThreshold", "SignVotingThreshold", "KeygenTimeout", "SignTimeout", });
    internal_static_axelar_tss_exported_v1beta1_SigKeyPair_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_axelar_tss_exported_v1beta1_SigKeyPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_tss_exported_v1beta1_SigKeyPair_descriptor,
        new java.lang.String[] { "PubKey", "Signature", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.enumvalueCustomname);
    registry.add(com.gogoproto.GogoProto.goprotoEnumPrefix);
    registry.add(com.gogoproto.GogoProto.goprotoEnumStringer);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.AnyProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
    com.axelar.utils.v1beta1.ThresholdProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

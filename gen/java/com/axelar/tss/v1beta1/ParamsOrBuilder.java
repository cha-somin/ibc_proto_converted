// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/tss/v1beta1/params.proto

package com.axelar.tss.v1beta1;

public interface ParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:axelar.tss.v1beta1.Params)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * KeyRequirements defines the requirement for each key role
   * </pre>
   *
   * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<com.axelar.tss.exported.v1beta1.KeyRequirement> 
      getKeyRequirementsList();
  /**
   * <pre>
   * KeyRequirements defines the requirement for each key role
   * </pre>
   *
   * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
   */
  com.axelar.tss.exported.v1beta1.KeyRequirement getKeyRequirements(int index);
  /**
   * <pre>
   * KeyRequirements defines the requirement for each key role
   * </pre>
   *
   * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
   */
  int getKeyRequirementsCount();
  /**
   * <pre>
   * KeyRequirements defines the requirement for each key role
   * </pre>
   *
   * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<? extends com.axelar.tss.exported.v1beta1.KeyRequirementOrBuilder> 
      getKeyRequirementsOrBuilderList();
  /**
   * <pre>
   * KeyRequirements defines the requirement for each key role
   * </pre>
   *
   * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
   */
  com.axelar.tss.exported.v1beta1.KeyRequirementOrBuilder getKeyRequirementsOrBuilder(
      int index);

  /**
   * <pre>
   * SuspendDurationInBlocks defines the number of blocks a
   * validator is disallowed to participate in any TSS ceremony after
   * committing a malicious behaviour during signing
   * </pre>
   *
   * <code>int64 suspend_duration_in_blocks = 2 [json_name = "suspendDurationInBlocks"];</code>
   * @return The suspendDurationInBlocks.
   */
  long getSuspendDurationInBlocks();

  /**
   * <pre>
   * HeartBeatPeriodInBlocks defines the time period in blocks for tss to
   * emit the event asking validators to send their heartbeats
   * </pre>
   *
   * <code>int64 heartbeat_period_in_blocks = 3 [json_name = "heartbeatPeriodInBlocks"];</code>
   * @return The heartbeatPeriodInBlocks.
   */
  long getHeartbeatPeriodInBlocks();

  /**
   * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
   * @return Whether the maxMissedBlocksPerWindow field is set.
   */
  boolean hasMaxMissedBlocksPerWindow();
  /**
   * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
   * @return The maxMissedBlocksPerWindow.
   */
  com.axelar.utils.v1beta1.Threshold getMaxMissedBlocksPerWindow();
  /**
   * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
   */
  com.axelar.utils.v1beta1.ThresholdOrBuilder getMaxMissedBlocksPerWindowOrBuilder();

  /**
   * <code>int64 unbonding_locking_key_rotation_count = 5 [json_name = "unbondingLockingKeyRotationCount"];</code>
   * @return The unbondingLockingKeyRotationCount.
   */
  long getUnbondingLockingKeyRotationCount();

  /**
   * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
   * @return Whether the externalMultisigThreshold field is set.
   */
  boolean hasExternalMultisigThreshold();
  /**
   * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
   * @return The externalMultisigThreshold.
   */
  com.axelar.utils.v1beta1.Threshold getExternalMultisigThreshold();
  /**
   * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
   */
  com.axelar.utils.v1beta1.ThresholdOrBuilder getExternalMultisigThresholdOrBuilder();

  /**
   * <code>int64 max_sign_queue_size = 7 [json_name = "maxSignQueueSize"];</code>
   * @return The maxSignQueueSize.
   */
  long getMaxSignQueueSize();

  /**
   * <code>int64 max_simultaneous_sign_shares = 8 [json_name = "maxSimultaneousSignShares"];</code>
   * @return The maxSimultaneousSignShares.
   */
  long getMaxSimultaneousSignShares();

  /**
   * <code>int64 tss_signed_blocks_window = 9 [json_name = "tssSignedBlocksWindow"];</code>
   * @return The tssSignedBlocksWindow.
   */
  long getTssSignedBlocksWindow();
}

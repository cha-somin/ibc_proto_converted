// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/tss/v1beta1/params.proto

package com.axelar.tss.v1beta1;

/**
 * <pre>
 * Params is the parameter set for this module
 * </pre>
 *
 * Protobuf type {@code axelar.tss.v1beta1.Params}
 */
public final class Params extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:axelar.tss.v1beta1.Params)
    ParamsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Params.newBuilder() to construct.
  private Params(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Params() {
    keyRequirements_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Params();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.axelar.tss.v1beta1.ParamsProto.internal_static_axelar_tss_v1beta1_Params_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.axelar.tss.v1beta1.ParamsProto.internal_static_axelar_tss_v1beta1_Params_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.axelar.tss.v1beta1.Params.class, com.axelar.tss.v1beta1.Params.Builder.class);
  }

  public static final int KEY_REQUIREMENTS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.axelar.tss.exported.v1beta1.KeyRequirement> keyRequirements_;
  /**
   * <pre>
   * KeyRequirements defines the requirement for each key role
   * </pre>
   *
   * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<com.axelar.tss.exported.v1beta1.KeyRequirement> getKeyRequirementsList() {
    return keyRequirements_;
  }
  /**
   * <pre>
   * KeyRequirements defines the requirement for each key role
   * </pre>
   *
   * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.axelar.tss.exported.v1beta1.KeyRequirementOrBuilder> 
      getKeyRequirementsOrBuilderList() {
    return keyRequirements_;
  }
  /**
   * <pre>
   * KeyRequirements defines the requirement for each key role
   * </pre>
   *
   * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public int getKeyRequirementsCount() {
    return keyRequirements_.size();
  }
  /**
   * <pre>
   * KeyRequirements defines the requirement for each key role
   * </pre>
   *
   * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.axelar.tss.exported.v1beta1.KeyRequirement getKeyRequirements(int index) {
    return keyRequirements_.get(index);
  }
  /**
   * <pre>
   * KeyRequirements defines the requirement for each key role
   * </pre>
   *
   * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.axelar.tss.exported.v1beta1.KeyRequirementOrBuilder getKeyRequirementsOrBuilder(
      int index) {
    return keyRequirements_.get(index);
  }

  public static final int SUSPEND_DURATION_IN_BLOCKS_FIELD_NUMBER = 2;
  private long suspendDurationInBlocks_ = 0L;
  /**
   * <pre>
   * SuspendDurationInBlocks defines the number of blocks a
   * validator is disallowed to participate in any TSS ceremony after
   * committing a malicious behaviour during signing
   * </pre>
   *
   * <code>int64 suspend_duration_in_blocks = 2 [json_name = "suspendDurationInBlocks"];</code>
   * @return The suspendDurationInBlocks.
   */
  @java.lang.Override
  public long getSuspendDurationInBlocks() {
    return suspendDurationInBlocks_;
  }

  public static final int HEARTBEAT_PERIOD_IN_BLOCKS_FIELD_NUMBER = 3;
  private long heartbeatPeriodInBlocks_ = 0L;
  /**
   * <pre>
   * HeartBeatPeriodInBlocks defines the time period in blocks for tss to
   * emit the event asking validators to send their heartbeats
   * </pre>
   *
   * <code>int64 heartbeat_period_in_blocks = 3 [json_name = "heartbeatPeriodInBlocks"];</code>
   * @return The heartbeatPeriodInBlocks.
   */
  @java.lang.Override
  public long getHeartbeatPeriodInBlocks() {
    return heartbeatPeriodInBlocks_;
  }

  public static final int MAX_MISSED_BLOCKS_PER_WINDOW_FIELD_NUMBER = 4;
  private com.axelar.utils.v1beta1.Threshold maxMissedBlocksPerWindow_;
  /**
   * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
   * @return Whether the maxMissedBlocksPerWindow field is set.
   */
  @java.lang.Override
  public boolean hasMaxMissedBlocksPerWindow() {
    return maxMissedBlocksPerWindow_ != null;
  }
  /**
   * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
   * @return The maxMissedBlocksPerWindow.
   */
  @java.lang.Override
  public com.axelar.utils.v1beta1.Threshold getMaxMissedBlocksPerWindow() {
    return maxMissedBlocksPerWindow_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : maxMissedBlocksPerWindow_;
  }
  /**
   * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.axelar.utils.v1beta1.ThresholdOrBuilder getMaxMissedBlocksPerWindowOrBuilder() {
    return maxMissedBlocksPerWindow_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : maxMissedBlocksPerWindow_;
  }

  public static final int UNBONDING_LOCKING_KEY_ROTATION_COUNT_FIELD_NUMBER = 5;
  private long unbondingLockingKeyRotationCount_ = 0L;
  /**
   * <code>int64 unbonding_locking_key_rotation_count = 5 [json_name = "unbondingLockingKeyRotationCount"];</code>
   * @return The unbondingLockingKeyRotationCount.
   */
  @java.lang.Override
  public long getUnbondingLockingKeyRotationCount() {
    return unbondingLockingKeyRotationCount_;
  }

  public static final int EXTERNAL_MULTISIG_THRESHOLD_FIELD_NUMBER = 6;
  private com.axelar.utils.v1beta1.Threshold externalMultisigThreshold_;
  /**
   * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
   * @return Whether the externalMultisigThreshold field is set.
   */
  @java.lang.Override
  public boolean hasExternalMultisigThreshold() {
    return externalMultisigThreshold_ != null;
  }
  /**
   * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
   * @return The externalMultisigThreshold.
   */
  @java.lang.Override
  public com.axelar.utils.v1beta1.Threshold getExternalMultisigThreshold() {
    return externalMultisigThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : externalMultisigThreshold_;
  }
  /**
   * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.axelar.utils.v1beta1.ThresholdOrBuilder getExternalMultisigThresholdOrBuilder() {
    return externalMultisigThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : externalMultisigThreshold_;
  }

  public static final int MAX_SIGN_QUEUE_SIZE_FIELD_NUMBER = 7;
  private long maxSignQueueSize_ = 0L;
  /**
   * <code>int64 max_sign_queue_size = 7 [json_name = "maxSignQueueSize"];</code>
   * @return The maxSignQueueSize.
   */
  @java.lang.Override
  public long getMaxSignQueueSize() {
    return maxSignQueueSize_;
  }

  public static final int MAX_SIMULTANEOUS_SIGN_SHARES_FIELD_NUMBER = 8;
  private long maxSimultaneousSignShares_ = 0L;
  /**
   * <code>int64 max_simultaneous_sign_shares = 8 [json_name = "maxSimultaneousSignShares"];</code>
   * @return The maxSimultaneousSignShares.
   */
  @java.lang.Override
  public long getMaxSimultaneousSignShares() {
    return maxSimultaneousSignShares_;
  }

  public static final int TSS_SIGNED_BLOCKS_WINDOW_FIELD_NUMBER = 9;
  private long tssSignedBlocksWindow_ = 0L;
  /**
   * <code>int64 tss_signed_blocks_window = 9 [json_name = "tssSignedBlocksWindow"];</code>
   * @return The tssSignedBlocksWindow.
   */
  @java.lang.Override
  public long getTssSignedBlocksWindow() {
    return tssSignedBlocksWindow_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < keyRequirements_.size(); i++) {
      output.writeMessage(1, keyRequirements_.get(i));
    }
    if (suspendDurationInBlocks_ != 0L) {
      output.writeInt64(2, suspendDurationInBlocks_);
    }
    if (heartbeatPeriodInBlocks_ != 0L) {
      output.writeInt64(3, heartbeatPeriodInBlocks_);
    }
    if (maxMissedBlocksPerWindow_ != null) {
      output.writeMessage(4, getMaxMissedBlocksPerWindow());
    }
    if (unbondingLockingKeyRotationCount_ != 0L) {
      output.writeInt64(5, unbondingLockingKeyRotationCount_);
    }
    if (externalMultisigThreshold_ != null) {
      output.writeMessage(6, getExternalMultisigThreshold());
    }
    if (maxSignQueueSize_ != 0L) {
      output.writeInt64(7, maxSignQueueSize_);
    }
    if (maxSimultaneousSignShares_ != 0L) {
      output.writeInt64(8, maxSimultaneousSignShares_);
    }
    if (tssSignedBlocksWindow_ != 0L) {
      output.writeInt64(9, tssSignedBlocksWindow_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < keyRequirements_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, keyRequirements_.get(i));
    }
    if (suspendDurationInBlocks_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, suspendDurationInBlocks_);
    }
    if (heartbeatPeriodInBlocks_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, heartbeatPeriodInBlocks_);
    }
    if (maxMissedBlocksPerWindow_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getMaxMissedBlocksPerWindow());
    }
    if (unbondingLockingKeyRotationCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, unbondingLockingKeyRotationCount_);
    }
    if (externalMultisigThreshold_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getExternalMultisigThreshold());
    }
    if (maxSignQueueSize_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, maxSignQueueSize_);
    }
    if (maxSimultaneousSignShares_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(8, maxSimultaneousSignShares_);
    }
    if (tssSignedBlocksWindow_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(9, tssSignedBlocksWindow_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.axelar.tss.v1beta1.Params)) {
      return super.equals(obj);
    }
    com.axelar.tss.v1beta1.Params other = (com.axelar.tss.v1beta1.Params) obj;

    if (!getKeyRequirementsList()
        .equals(other.getKeyRequirementsList())) return false;
    if (getSuspendDurationInBlocks()
        != other.getSuspendDurationInBlocks()) return false;
    if (getHeartbeatPeriodInBlocks()
        != other.getHeartbeatPeriodInBlocks()) return false;
    if (hasMaxMissedBlocksPerWindow() != other.hasMaxMissedBlocksPerWindow()) return false;
    if (hasMaxMissedBlocksPerWindow()) {
      if (!getMaxMissedBlocksPerWindow()
          .equals(other.getMaxMissedBlocksPerWindow())) return false;
    }
    if (getUnbondingLockingKeyRotationCount()
        != other.getUnbondingLockingKeyRotationCount()) return false;
    if (hasExternalMultisigThreshold() != other.hasExternalMultisigThreshold()) return false;
    if (hasExternalMultisigThreshold()) {
      if (!getExternalMultisigThreshold()
          .equals(other.getExternalMultisigThreshold())) return false;
    }
    if (getMaxSignQueueSize()
        != other.getMaxSignQueueSize()) return false;
    if (getMaxSimultaneousSignShares()
        != other.getMaxSimultaneousSignShares()) return false;
    if (getTssSignedBlocksWindow()
        != other.getTssSignedBlocksWindow()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getKeyRequirementsCount() > 0) {
      hash = (37 * hash) + KEY_REQUIREMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getKeyRequirementsList().hashCode();
    }
    hash = (37 * hash) + SUSPEND_DURATION_IN_BLOCKS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSuspendDurationInBlocks());
    hash = (37 * hash) + HEARTBEAT_PERIOD_IN_BLOCKS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getHeartbeatPeriodInBlocks());
    if (hasMaxMissedBlocksPerWindow()) {
      hash = (37 * hash) + MAX_MISSED_BLOCKS_PER_WINDOW_FIELD_NUMBER;
      hash = (53 * hash) + getMaxMissedBlocksPerWindow().hashCode();
    }
    hash = (37 * hash) + UNBONDING_LOCKING_KEY_ROTATION_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUnbondingLockingKeyRotationCount());
    if (hasExternalMultisigThreshold()) {
      hash = (37 * hash) + EXTERNAL_MULTISIG_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + getExternalMultisigThreshold().hashCode();
    }
    hash = (37 * hash) + MAX_SIGN_QUEUE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxSignQueueSize());
    hash = (37 * hash) + MAX_SIMULTANEOUS_SIGN_SHARES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxSimultaneousSignShares());
    hash = (37 * hash) + TSS_SIGNED_BLOCKS_WINDOW_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTssSignedBlocksWindow());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.axelar.tss.v1beta1.Params parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.axelar.tss.v1beta1.Params parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.axelar.tss.v1beta1.Params parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.axelar.tss.v1beta1.Params parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.axelar.tss.v1beta1.Params parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.axelar.tss.v1beta1.Params parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.axelar.tss.v1beta1.Params parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.axelar.tss.v1beta1.Params parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.axelar.tss.v1beta1.Params parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.axelar.tss.v1beta1.Params parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.axelar.tss.v1beta1.Params parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.axelar.tss.v1beta1.Params parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.axelar.tss.v1beta1.Params prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Params is the parameter set for this module
   * </pre>
   *
   * Protobuf type {@code axelar.tss.v1beta1.Params}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:axelar.tss.v1beta1.Params)
      com.axelar.tss.v1beta1.ParamsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.axelar.tss.v1beta1.ParamsProto.internal_static_axelar_tss_v1beta1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.axelar.tss.v1beta1.ParamsProto.internal_static_axelar_tss_v1beta1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.axelar.tss.v1beta1.Params.class, com.axelar.tss.v1beta1.Params.Builder.class);
    }

    // Construct using com.axelar.tss.v1beta1.Params.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (keyRequirementsBuilder_ == null) {
        keyRequirements_ = java.util.Collections.emptyList();
      } else {
        keyRequirements_ = null;
        keyRequirementsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      suspendDurationInBlocks_ = 0L;
      heartbeatPeriodInBlocks_ = 0L;
      maxMissedBlocksPerWindow_ = null;
      if (maxMissedBlocksPerWindowBuilder_ != null) {
        maxMissedBlocksPerWindowBuilder_.dispose();
        maxMissedBlocksPerWindowBuilder_ = null;
      }
      unbondingLockingKeyRotationCount_ = 0L;
      externalMultisigThreshold_ = null;
      if (externalMultisigThresholdBuilder_ != null) {
        externalMultisigThresholdBuilder_.dispose();
        externalMultisigThresholdBuilder_ = null;
      }
      maxSignQueueSize_ = 0L;
      maxSimultaneousSignShares_ = 0L;
      tssSignedBlocksWindow_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.axelar.tss.v1beta1.ParamsProto.internal_static_axelar_tss_v1beta1_Params_descriptor;
    }

    @java.lang.Override
    public com.axelar.tss.v1beta1.Params getDefaultInstanceForType() {
      return com.axelar.tss.v1beta1.Params.getDefaultInstance();
    }

    @java.lang.Override
    public com.axelar.tss.v1beta1.Params build() {
      com.axelar.tss.v1beta1.Params result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.axelar.tss.v1beta1.Params buildPartial() {
      com.axelar.tss.v1beta1.Params result = new com.axelar.tss.v1beta1.Params(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.axelar.tss.v1beta1.Params result) {
      if (keyRequirementsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          keyRequirements_ = java.util.Collections.unmodifiableList(keyRequirements_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.keyRequirements_ = keyRequirements_;
      } else {
        result.keyRequirements_ = keyRequirementsBuilder_.build();
      }
    }

    private void buildPartial0(com.axelar.tss.v1beta1.Params result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.suspendDurationInBlocks_ = suspendDurationInBlocks_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.heartbeatPeriodInBlocks_ = heartbeatPeriodInBlocks_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.maxMissedBlocksPerWindow_ = maxMissedBlocksPerWindowBuilder_ == null
            ? maxMissedBlocksPerWindow_
            : maxMissedBlocksPerWindowBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.unbondingLockingKeyRotationCount_ = unbondingLockingKeyRotationCount_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.externalMultisigThreshold_ = externalMultisigThresholdBuilder_ == null
            ? externalMultisigThreshold_
            : externalMultisigThresholdBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.maxSignQueueSize_ = maxSignQueueSize_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.maxSimultaneousSignShares_ = maxSimultaneousSignShares_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.tssSignedBlocksWindow_ = tssSignedBlocksWindow_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.axelar.tss.v1beta1.Params) {
        return mergeFrom((com.axelar.tss.v1beta1.Params)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.axelar.tss.v1beta1.Params other) {
      if (other == com.axelar.tss.v1beta1.Params.getDefaultInstance()) return this;
      if (keyRequirementsBuilder_ == null) {
        if (!other.keyRequirements_.isEmpty()) {
          if (keyRequirements_.isEmpty()) {
            keyRequirements_ = other.keyRequirements_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeyRequirementsIsMutable();
            keyRequirements_.addAll(other.keyRequirements_);
          }
          onChanged();
        }
      } else {
        if (!other.keyRequirements_.isEmpty()) {
          if (keyRequirementsBuilder_.isEmpty()) {
            keyRequirementsBuilder_.dispose();
            keyRequirementsBuilder_ = null;
            keyRequirements_ = other.keyRequirements_;
            bitField0_ = (bitField0_ & ~0x00000001);
            keyRequirementsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getKeyRequirementsFieldBuilder() : null;
          } else {
            keyRequirementsBuilder_.addAllMessages(other.keyRequirements_);
          }
        }
      }
      if (other.getSuspendDurationInBlocks() != 0L) {
        setSuspendDurationInBlocks(other.getSuspendDurationInBlocks());
      }
      if (other.getHeartbeatPeriodInBlocks() != 0L) {
        setHeartbeatPeriodInBlocks(other.getHeartbeatPeriodInBlocks());
      }
      if (other.hasMaxMissedBlocksPerWindow()) {
        mergeMaxMissedBlocksPerWindow(other.getMaxMissedBlocksPerWindow());
      }
      if (other.getUnbondingLockingKeyRotationCount() != 0L) {
        setUnbondingLockingKeyRotationCount(other.getUnbondingLockingKeyRotationCount());
      }
      if (other.hasExternalMultisigThreshold()) {
        mergeExternalMultisigThreshold(other.getExternalMultisigThreshold());
      }
      if (other.getMaxSignQueueSize() != 0L) {
        setMaxSignQueueSize(other.getMaxSignQueueSize());
      }
      if (other.getMaxSimultaneousSignShares() != 0L) {
        setMaxSimultaneousSignShares(other.getMaxSimultaneousSignShares());
      }
      if (other.getTssSignedBlocksWindow() != 0L) {
        setTssSignedBlocksWindow(other.getTssSignedBlocksWindow());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.axelar.tss.exported.v1beta1.KeyRequirement m =
                  input.readMessage(
                      com.axelar.tss.exported.v1beta1.KeyRequirement.parser(),
                      extensionRegistry);
              if (keyRequirementsBuilder_ == null) {
                ensureKeyRequirementsIsMutable();
                keyRequirements_.add(m);
              } else {
                keyRequirementsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 16: {
              suspendDurationInBlocks_ = input.readInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              heartbeatPeriodInBlocks_ = input.readInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              input.readMessage(
                  getMaxMissedBlocksPerWindowFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              unbondingLockingKeyRotationCount_ = input.readInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              input.readMessage(
                  getExternalMultisigThresholdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 56: {
              maxSignQueueSize_ = input.readInt64();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              maxSimultaneousSignShares_ = input.readInt64();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              tssSignedBlocksWindow_ = input.readInt64();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.axelar.tss.exported.v1beta1.KeyRequirement> keyRequirements_ =
      java.util.Collections.emptyList();
    private void ensureKeyRequirementsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        keyRequirements_ = new java.util.ArrayList<com.axelar.tss.exported.v1beta1.KeyRequirement>(keyRequirements_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.axelar.tss.exported.v1beta1.KeyRequirement, com.axelar.tss.exported.v1beta1.KeyRequirement.Builder, com.axelar.tss.exported.v1beta1.KeyRequirementOrBuilder> keyRequirementsBuilder_;

    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.axelar.tss.exported.v1beta1.KeyRequirement> getKeyRequirementsList() {
      if (keyRequirementsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(keyRequirements_);
      } else {
        return keyRequirementsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public int getKeyRequirementsCount() {
      if (keyRequirementsBuilder_ == null) {
        return keyRequirements_.size();
      } else {
        return keyRequirementsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.tss.exported.v1beta1.KeyRequirement getKeyRequirements(int index) {
      if (keyRequirementsBuilder_ == null) {
        return keyRequirements_.get(index);
      } else {
        return keyRequirementsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public Builder setKeyRequirements(
        int index, com.axelar.tss.exported.v1beta1.KeyRequirement value) {
      if (keyRequirementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureKeyRequirementsIsMutable();
        keyRequirements_.set(index, value);
        onChanged();
      } else {
        keyRequirementsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public Builder setKeyRequirements(
        int index, com.axelar.tss.exported.v1beta1.KeyRequirement.Builder builderForValue) {
      if (keyRequirementsBuilder_ == null) {
        ensureKeyRequirementsIsMutable();
        keyRequirements_.set(index, builderForValue.build());
        onChanged();
      } else {
        keyRequirementsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public Builder addKeyRequirements(com.axelar.tss.exported.v1beta1.KeyRequirement value) {
      if (keyRequirementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureKeyRequirementsIsMutable();
        keyRequirements_.add(value);
        onChanged();
      } else {
        keyRequirementsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public Builder addKeyRequirements(
        int index, com.axelar.tss.exported.v1beta1.KeyRequirement value) {
      if (keyRequirementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureKeyRequirementsIsMutable();
        keyRequirements_.add(index, value);
        onChanged();
      } else {
        keyRequirementsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public Builder addKeyRequirements(
        com.axelar.tss.exported.v1beta1.KeyRequirement.Builder builderForValue) {
      if (keyRequirementsBuilder_ == null) {
        ensureKeyRequirementsIsMutable();
        keyRequirements_.add(builderForValue.build());
        onChanged();
      } else {
        keyRequirementsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public Builder addKeyRequirements(
        int index, com.axelar.tss.exported.v1beta1.KeyRequirement.Builder builderForValue) {
      if (keyRequirementsBuilder_ == null) {
        ensureKeyRequirementsIsMutable();
        keyRequirements_.add(index, builderForValue.build());
        onChanged();
      } else {
        keyRequirementsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAllKeyRequirements(
        java.lang.Iterable<? extends com.axelar.tss.exported.v1beta1.KeyRequirement> values) {
      if (keyRequirementsBuilder_ == null) {
        ensureKeyRequirementsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keyRequirements_);
        onChanged();
      } else {
        keyRequirementsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearKeyRequirements() {
      if (keyRequirementsBuilder_ == null) {
        keyRequirements_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        keyRequirementsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public Builder removeKeyRequirements(int index) {
      if (keyRequirementsBuilder_ == null) {
        ensureKeyRequirementsIsMutable();
        keyRequirements_.remove(index);
        onChanged();
      } else {
        keyRequirementsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.tss.exported.v1beta1.KeyRequirement.Builder getKeyRequirementsBuilder(
        int index) {
      return getKeyRequirementsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.tss.exported.v1beta1.KeyRequirementOrBuilder getKeyRequirementsOrBuilder(
        int index) {
      if (keyRequirementsBuilder_ == null) {
        return keyRequirements_.get(index);  } else {
        return keyRequirementsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<? extends com.axelar.tss.exported.v1beta1.KeyRequirementOrBuilder> 
         getKeyRequirementsOrBuilderList() {
      if (keyRequirementsBuilder_ != null) {
        return keyRequirementsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(keyRequirements_);
      }
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.tss.exported.v1beta1.KeyRequirement.Builder addKeyRequirementsBuilder() {
      return getKeyRequirementsFieldBuilder().addBuilder(
          com.axelar.tss.exported.v1beta1.KeyRequirement.getDefaultInstance());
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.tss.exported.v1beta1.KeyRequirement.Builder addKeyRequirementsBuilder(
        int index) {
      return getKeyRequirementsFieldBuilder().addBuilder(
          index, com.axelar.tss.exported.v1beta1.KeyRequirement.getDefaultInstance());
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [json_name = "keyRequirements", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.axelar.tss.exported.v1beta1.KeyRequirement.Builder> 
         getKeyRequirementsBuilderList() {
      return getKeyRequirementsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.axelar.tss.exported.v1beta1.KeyRequirement, com.axelar.tss.exported.v1beta1.KeyRequirement.Builder, com.axelar.tss.exported.v1beta1.KeyRequirementOrBuilder> 
        getKeyRequirementsFieldBuilder() {
      if (keyRequirementsBuilder_ == null) {
        keyRequirementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.axelar.tss.exported.v1beta1.KeyRequirement, com.axelar.tss.exported.v1beta1.KeyRequirement.Builder, com.axelar.tss.exported.v1beta1.KeyRequirementOrBuilder>(
                keyRequirements_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        keyRequirements_ = null;
      }
      return keyRequirementsBuilder_;
    }

    private long suspendDurationInBlocks_ ;
    /**
     * <pre>
     * SuspendDurationInBlocks defines the number of blocks a
     * validator is disallowed to participate in any TSS ceremony after
     * committing a malicious behaviour during signing
     * </pre>
     *
     * <code>int64 suspend_duration_in_blocks = 2 [json_name = "suspendDurationInBlocks"];</code>
     * @return The suspendDurationInBlocks.
     */
    @java.lang.Override
    public long getSuspendDurationInBlocks() {
      return suspendDurationInBlocks_;
    }
    /**
     * <pre>
     * SuspendDurationInBlocks defines the number of blocks a
     * validator is disallowed to participate in any TSS ceremony after
     * committing a malicious behaviour during signing
     * </pre>
     *
     * <code>int64 suspend_duration_in_blocks = 2 [json_name = "suspendDurationInBlocks"];</code>
     * @param value The suspendDurationInBlocks to set.
     * @return This builder for chaining.
     */
    public Builder setSuspendDurationInBlocks(long value) {

      suspendDurationInBlocks_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SuspendDurationInBlocks defines the number of blocks a
     * validator is disallowed to participate in any TSS ceremony after
     * committing a malicious behaviour during signing
     * </pre>
     *
     * <code>int64 suspend_duration_in_blocks = 2 [json_name = "suspendDurationInBlocks"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSuspendDurationInBlocks() {
      bitField0_ = (bitField0_ & ~0x00000002);
      suspendDurationInBlocks_ = 0L;
      onChanged();
      return this;
    }

    private long heartbeatPeriodInBlocks_ ;
    /**
     * <pre>
     * HeartBeatPeriodInBlocks defines the time period in blocks for tss to
     * emit the event asking validators to send their heartbeats
     * </pre>
     *
     * <code>int64 heartbeat_period_in_blocks = 3 [json_name = "heartbeatPeriodInBlocks"];</code>
     * @return The heartbeatPeriodInBlocks.
     */
    @java.lang.Override
    public long getHeartbeatPeriodInBlocks() {
      return heartbeatPeriodInBlocks_;
    }
    /**
     * <pre>
     * HeartBeatPeriodInBlocks defines the time period in blocks for tss to
     * emit the event asking validators to send their heartbeats
     * </pre>
     *
     * <code>int64 heartbeat_period_in_blocks = 3 [json_name = "heartbeatPeriodInBlocks"];</code>
     * @param value The heartbeatPeriodInBlocks to set.
     * @return This builder for chaining.
     */
    public Builder setHeartbeatPeriodInBlocks(long value) {

      heartbeatPeriodInBlocks_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * HeartBeatPeriodInBlocks defines the time period in blocks for tss to
     * emit the event asking validators to send their heartbeats
     * </pre>
     *
     * <code>int64 heartbeat_period_in_blocks = 3 [json_name = "heartbeatPeriodInBlocks"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHeartbeatPeriodInBlocks() {
      bitField0_ = (bitField0_ & ~0x00000004);
      heartbeatPeriodInBlocks_ = 0L;
      onChanged();
      return this;
    }

    private com.axelar.utils.v1beta1.Threshold maxMissedBlocksPerWindow_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder> maxMissedBlocksPerWindowBuilder_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
     * @return Whether the maxMissedBlocksPerWindow field is set.
     */
    public boolean hasMaxMissedBlocksPerWindow() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
     * @return The maxMissedBlocksPerWindow.
     */
    public com.axelar.utils.v1beta1.Threshold getMaxMissedBlocksPerWindow() {
      if (maxMissedBlocksPerWindowBuilder_ == null) {
        return maxMissedBlocksPerWindow_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : maxMissedBlocksPerWindow_;
      } else {
        return maxMissedBlocksPerWindowBuilder_.getMessage();
      }
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
     */
    public Builder setMaxMissedBlocksPerWindow(com.axelar.utils.v1beta1.Threshold value) {
      if (maxMissedBlocksPerWindowBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxMissedBlocksPerWindow_ = value;
      } else {
        maxMissedBlocksPerWindowBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
     */
    public Builder setMaxMissedBlocksPerWindow(
        com.axelar.utils.v1beta1.Threshold.Builder builderForValue) {
      if (maxMissedBlocksPerWindowBuilder_ == null) {
        maxMissedBlocksPerWindow_ = builderForValue.build();
      } else {
        maxMissedBlocksPerWindowBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeMaxMissedBlocksPerWindow(com.axelar.utils.v1beta1.Threshold value) {
      if (maxMissedBlocksPerWindowBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          maxMissedBlocksPerWindow_ != null &&
          maxMissedBlocksPerWindow_ != com.axelar.utils.v1beta1.Threshold.getDefaultInstance()) {
          getMaxMissedBlocksPerWindowBuilder().mergeFrom(value);
        } else {
          maxMissedBlocksPerWindow_ = value;
        }
      } else {
        maxMissedBlocksPerWindowBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearMaxMissedBlocksPerWindow() {
      bitField0_ = (bitField0_ & ~0x00000008);
      maxMissedBlocksPerWindow_ = null;
      if (maxMissedBlocksPerWindowBuilder_ != null) {
        maxMissedBlocksPerWindowBuilder_.dispose();
        maxMissedBlocksPerWindowBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.utils.v1beta1.Threshold.Builder getMaxMissedBlocksPerWindowBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getMaxMissedBlocksPerWindowFieldBuilder().getBuilder();
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.utils.v1beta1.ThresholdOrBuilder getMaxMissedBlocksPerWindowOrBuilder() {
      if (maxMissedBlocksPerWindowBuilder_ != null) {
        return maxMissedBlocksPerWindowBuilder_.getMessageOrBuilder();
      } else {
        return maxMissedBlocksPerWindow_ == null ?
            com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : maxMissedBlocksPerWindow_;
      }
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [json_name = "maxMissedBlocksPerWindow", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder> 
        getMaxMissedBlocksPerWindowFieldBuilder() {
      if (maxMissedBlocksPerWindowBuilder_ == null) {
        maxMissedBlocksPerWindowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder>(
                getMaxMissedBlocksPerWindow(),
                getParentForChildren(),
                isClean());
        maxMissedBlocksPerWindow_ = null;
      }
      return maxMissedBlocksPerWindowBuilder_;
    }

    private long unbondingLockingKeyRotationCount_ ;
    /**
     * <code>int64 unbonding_locking_key_rotation_count = 5 [json_name = "unbondingLockingKeyRotationCount"];</code>
     * @return The unbondingLockingKeyRotationCount.
     */
    @java.lang.Override
    public long getUnbondingLockingKeyRotationCount() {
      return unbondingLockingKeyRotationCount_;
    }
    /**
     * <code>int64 unbonding_locking_key_rotation_count = 5 [json_name = "unbondingLockingKeyRotationCount"];</code>
     * @param value The unbondingLockingKeyRotationCount to set.
     * @return This builder for chaining.
     */
    public Builder setUnbondingLockingKeyRotationCount(long value) {

      unbondingLockingKeyRotationCount_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>int64 unbonding_locking_key_rotation_count = 5 [json_name = "unbondingLockingKeyRotationCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUnbondingLockingKeyRotationCount() {
      bitField0_ = (bitField0_ & ~0x00000010);
      unbondingLockingKeyRotationCount_ = 0L;
      onChanged();
      return this;
    }

    private com.axelar.utils.v1beta1.Threshold externalMultisigThreshold_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder> externalMultisigThresholdBuilder_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
     * @return Whether the externalMultisigThreshold field is set.
     */
    public boolean hasExternalMultisigThreshold() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
     * @return The externalMultisigThreshold.
     */
    public com.axelar.utils.v1beta1.Threshold getExternalMultisigThreshold() {
      if (externalMultisigThresholdBuilder_ == null) {
        return externalMultisigThreshold_ == null ? com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : externalMultisigThreshold_;
      } else {
        return externalMultisigThresholdBuilder_.getMessage();
      }
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder setExternalMultisigThreshold(com.axelar.utils.v1beta1.Threshold value) {
      if (externalMultisigThresholdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        externalMultisigThreshold_ = value;
      } else {
        externalMultisigThresholdBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder setExternalMultisigThreshold(
        com.axelar.utils.v1beta1.Threshold.Builder builderForValue) {
      if (externalMultisigThresholdBuilder_ == null) {
        externalMultisigThreshold_ = builderForValue.build();
      } else {
        externalMultisigThresholdBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeExternalMultisigThreshold(com.axelar.utils.v1beta1.Threshold value) {
      if (externalMultisigThresholdBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          externalMultisigThreshold_ != null &&
          externalMultisigThreshold_ != com.axelar.utils.v1beta1.Threshold.getDefaultInstance()) {
          getExternalMultisigThresholdBuilder().mergeFrom(value);
        } else {
          externalMultisigThreshold_ = value;
        }
      } else {
        externalMultisigThresholdBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearExternalMultisigThreshold() {
      bitField0_ = (bitField0_ & ~0x00000020);
      externalMultisigThreshold_ = null;
      if (externalMultisigThresholdBuilder_ != null) {
        externalMultisigThresholdBuilder_.dispose();
        externalMultisigThresholdBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.utils.v1beta1.Threshold.Builder getExternalMultisigThresholdBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getExternalMultisigThresholdFieldBuilder().getBuilder();
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
     */
    public com.axelar.utils.v1beta1.ThresholdOrBuilder getExternalMultisigThresholdOrBuilder() {
      if (externalMultisigThresholdBuilder_ != null) {
        return externalMultisigThresholdBuilder_.getMessageOrBuilder();
      } else {
        return externalMultisigThreshold_ == null ?
            com.axelar.utils.v1beta1.Threshold.getDefaultInstance() : externalMultisigThreshold_;
      }
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [json_name = "externalMultisigThreshold", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder> 
        getExternalMultisigThresholdFieldBuilder() {
      if (externalMultisigThresholdBuilder_ == null) {
        externalMultisigThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.axelar.utils.v1beta1.Threshold, com.axelar.utils.v1beta1.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdOrBuilder>(
                getExternalMultisigThreshold(),
                getParentForChildren(),
                isClean());
        externalMultisigThreshold_ = null;
      }
      return externalMultisigThresholdBuilder_;
    }

    private long maxSignQueueSize_ ;
    /**
     * <code>int64 max_sign_queue_size = 7 [json_name = "maxSignQueueSize"];</code>
     * @return The maxSignQueueSize.
     */
    @java.lang.Override
    public long getMaxSignQueueSize() {
      return maxSignQueueSize_;
    }
    /**
     * <code>int64 max_sign_queue_size = 7 [json_name = "maxSignQueueSize"];</code>
     * @param value The maxSignQueueSize to set.
     * @return This builder for chaining.
     */
    public Builder setMaxSignQueueSize(long value) {

      maxSignQueueSize_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>int64 max_sign_queue_size = 7 [json_name = "maxSignQueueSize"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxSignQueueSize() {
      bitField0_ = (bitField0_ & ~0x00000040);
      maxSignQueueSize_ = 0L;
      onChanged();
      return this;
    }

    private long maxSimultaneousSignShares_ ;
    /**
     * <code>int64 max_simultaneous_sign_shares = 8 [json_name = "maxSimultaneousSignShares"];</code>
     * @return The maxSimultaneousSignShares.
     */
    @java.lang.Override
    public long getMaxSimultaneousSignShares() {
      return maxSimultaneousSignShares_;
    }
    /**
     * <code>int64 max_simultaneous_sign_shares = 8 [json_name = "maxSimultaneousSignShares"];</code>
     * @param value The maxSimultaneousSignShares to set.
     * @return This builder for chaining.
     */
    public Builder setMaxSimultaneousSignShares(long value) {

      maxSimultaneousSignShares_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>int64 max_simultaneous_sign_shares = 8 [json_name = "maxSimultaneousSignShares"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxSimultaneousSignShares() {
      bitField0_ = (bitField0_ & ~0x00000080);
      maxSimultaneousSignShares_ = 0L;
      onChanged();
      return this;
    }

    private long tssSignedBlocksWindow_ ;
    /**
     * <code>int64 tss_signed_blocks_window = 9 [json_name = "tssSignedBlocksWindow"];</code>
     * @return The tssSignedBlocksWindow.
     */
    @java.lang.Override
    public long getTssSignedBlocksWindow() {
      return tssSignedBlocksWindow_;
    }
    /**
     * <code>int64 tss_signed_blocks_window = 9 [json_name = "tssSignedBlocksWindow"];</code>
     * @param value The tssSignedBlocksWindow to set.
     * @return This builder for chaining.
     */
    public Builder setTssSignedBlocksWindow(long value) {

      tssSignedBlocksWindow_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>int64 tss_signed_blocks_window = 9 [json_name = "tssSignedBlocksWindow"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTssSignedBlocksWindow() {
      bitField0_ = (bitField0_ & ~0x00000100);
      tssSignedBlocksWindow_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:axelar.tss.v1beta1.Params)
  }

  // @@protoc_insertion_point(class_scope:axelar.tss.v1beta1.Params)
  private static final com.axelar.tss.v1beta1.Params DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.axelar.tss.v1beta1.Params();
  }

  public static com.axelar.tss.v1beta1.Params getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Params>
      PARSER = new com.google.protobuf.AbstractParser<Params>() {
    @java.lang.Override
    public Params parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Params> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Params> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.axelar.tss.v1beta1.Params getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/tss/v1beta1/types.proto

package com.axelar.tss.v1beta1;

public interface ExternalKeysOrBuilder extends
    // @@protoc_insertion_point(interface_extends:axelar.tss.v1beta1.ExternalKeys)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string chain = 1 [json_name = "chain", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName"];</code>
   * @return The chain.
   */
  java.lang.String getChain();
  /**
   * <code>string chain = 1 [json_name = "chain", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName"];</code>
   * @return The bytes for chain.
   */
  com.google.protobuf.ByteString
      getChainBytes();

  /**
   * <code>repeated string key_ids = 2 [json_name = "keyIds", (.gogoproto.customname) = "KeyIDs", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
   * @return A list containing the keyIds.
   */
  java.util.List<java.lang.String>
      getKeyIdsList();
  /**
   * <code>repeated string key_ids = 2 [json_name = "keyIds", (.gogoproto.customname) = "KeyIDs", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
   * @return The count of keyIds.
   */
  int getKeyIdsCount();
  /**
   * <code>repeated string key_ids = 2 [json_name = "keyIds", (.gogoproto.customname) = "KeyIDs", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
   * @param index The index of the element to return.
   * @return The keyIds at the given index.
   */
  java.lang.String getKeyIds(int index);
  /**
   * <code>repeated string key_ids = 2 [json_name = "keyIds", (.gogoproto.customname) = "KeyIDs", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the keyIds at the given index.
   */
  com.google.protobuf.ByteString
      getKeyIdsBytes(int index);
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/multisig/v1beta1/types.proto

package com.axelar.multisig.v1beta1;

public interface KeyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:axelar.multisig.v1beta1.Key)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string id = 1 [json_name = "id", (.gogoproto.customname) = "ID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/multisig/exported.KeyID"];</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <code>string id = 1 [json_name = "id", (.gogoproto.customname) = "ID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/multisig/exported.KeyID"];</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <code>.axelar.snapshot.exported.v1beta1.Snapshot snapshot = 2 [json_name = "snapshot", (.gogoproto.nullable) = false];</code>
   * @return Whether the snapshot field is set.
   */
  boolean hasSnapshot();
  /**
   * <code>.axelar.snapshot.exported.v1beta1.Snapshot snapshot = 2 [json_name = "snapshot", (.gogoproto.nullable) = false];</code>
   * @return The snapshot.
   */
  com.axelar.snapshot.exported.v1beta1.Snapshot getSnapshot();
  /**
   * <code>.axelar.snapshot.exported.v1beta1.Snapshot snapshot = 2 [json_name = "snapshot", (.gogoproto.nullable) = false];</code>
   */
  com.axelar.snapshot.exported.v1beta1.SnapshotOrBuilder getSnapshotOrBuilder();

  /**
   * <code>map&lt;string, bytes&gt; pub_keys = 3 [json_name = "pubKeys", (.gogoproto.castvalue) = "github.com/axelarnetwork/axelar-core/x/multisig/exported.PublicKey"];</code>
   */
  int getPubKeysCount();
  /**
   * <code>map&lt;string, bytes&gt; pub_keys = 3 [json_name = "pubKeys", (.gogoproto.castvalue) = "github.com/axelarnetwork/axelar-core/x/multisig/exported.PublicKey"];</code>
   */
  boolean containsPubKeys(
      java.lang.String key);
  /**
   * Use {@link #getPubKeysMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.protobuf.ByteString>
  getPubKeys();
  /**
   * <code>map&lt;string, bytes&gt; pub_keys = 3 [json_name = "pubKeys", (.gogoproto.castvalue) = "github.com/axelarnetwork/axelar-core/x/multisig/exported.PublicKey"];</code>
   */
  java.util.Map<java.lang.String, com.google.protobuf.ByteString>
  getPubKeysMap();
  /**
   * <code>map&lt;string, bytes&gt; pub_keys = 3 [json_name = "pubKeys", (.gogoproto.castvalue) = "github.com/axelarnetwork/axelar-core/x/multisig/exported.PublicKey"];</code>
   */
  /* nullable */
com.google.protobuf.ByteString getPubKeysOrDefault(
      java.lang.String key,
      /* nullable */
com.google.protobuf.ByteString defaultValue);
  /**
   * <code>map&lt;string, bytes&gt; pub_keys = 3 [json_name = "pubKeys", (.gogoproto.castvalue) = "github.com/axelarnetwork/axelar-core/x/multisig/exported.PublicKey"];</code>
   */
  com.google.protobuf.ByteString getPubKeysOrThrow(
      java.lang.String key);

  /**
   * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 4 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
   * @return Whether the signingThreshold field is set.
   */
  boolean hasSigningThreshold();
  /**
   * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 4 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
   * @return The signingThreshold.
   */
  com.axelar.utils.v1beta1.Threshold getSigningThreshold();
  /**
   * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 4 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
   */
  com.axelar.utils.v1beta1.ThresholdOrBuilder getSigningThresholdOrBuilder();

  /**
   * <code>.axelar.multisig.exported.v1beta1.KeyState state = 5 [json_name = "state"];</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <code>.axelar.multisig.exported.v1beta1.KeyState state = 5 [json_name = "state"];</code>
   * @return The state.
   */
  com.axelar.multisig.exported.v1beta1.KeyState getState();
}

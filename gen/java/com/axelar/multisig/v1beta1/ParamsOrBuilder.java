// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/multisig/v1beta1/params.proto

package com.axelar.multisig.v1beta1;

public interface ParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:axelar.multisig.v1beta1.Params)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
   * @return Whether the keygenThreshold field is set.
   */
  boolean hasKeygenThreshold();
  /**
   * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
   * @return The keygenThreshold.
   */
  com.axelar.utils.v1beta1.Threshold getKeygenThreshold();
  /**
   * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
   */
  com.axelar.utils.v1beta1.ThresholdOrBuilder getKeygenThresholdOrBuilder();

  /**
   * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
   * @return Whether the signingThreshold field is set.
   */
  boolean hasSigningThreshold();
  /**
   * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
   * @return The signingThreshold.
   */
  com.axelar.utils.v1beta1.Threshold getSigningThreshold();
  /**
   * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
   */
  com.axelar.utils.v1beta1.ThresholdOrBuilder getSigningThresholdOrBuilder();

  /**
   * <code>int64 keygen_timeout = 3 [json_name = "keygenTimeout"];</code>
   * @return The keygenTimeout.
   */
  long getKeygenTimeout();

  /**
   * <code>int64 keygen_grace_period = 4 [json_name = "keygenGracePeriod"];</code>
   * @return The keygenGracePeriod.
   */
  long getKeygenGracePeriod();

  /**
   * <code>int64 signing_timeout = 5 [json_name = "signingTimeout"];</code>
   * @return The signingTimeout.
   */
  long getSigningTimeout();

  /**
   * <code>int64 signing_grace_period = 6 [json_name = "signingGracePeriod"];</code>
   * @return The signingGracePeriod.
   */
  long getSigningGracePeriod();

  /**
   * <code>uint64 active_epoch_count = 7 [json_name = "activeEpochCount"];</code>
   * @return The activeEpochCount.
   */
  long getActiveEpochCount();
}

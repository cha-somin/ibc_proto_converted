// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/multisig/v1beta1/types.proto

package com.axelar.multisig.v1beta1;

public final class TypesProto {
  private TypesProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_multisig_v1beta1_Key_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_multisig_v1beta1_Key_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_multisig_v1beta1_Key_PubKeysEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_multisig_v1beta1_Key_PubKeysEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_multisig_v1beta1_KeygenSession_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_multisig_v1beta1_KeygenSession_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_multisig_v1beta1_KeygenSession_IsPubKeyReceivedEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_multisig_v1beta1_KeygenSession_IsPubKeyReceivedEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_multisig_v1beta1_MultiSig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_multisig_v1beta1_MultiSig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_multisig_v1beta1_MultiSig_SigsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_multisig_v1beta1_MultiSig_SigsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_multisig_v1beta1_SigningSession_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_multisig_v1beta1_SigningSession_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_multisig_v1beta1_KeyEpoch_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_multisig_v1beta1_KeyEpoch_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#axelar/multisig/v1beta1/types.proto\022\027a" +
      "xelar.multisig.v1beta1\032\031google/protobuf/" +
      "any.proto\032\024gogoproto/gogo.proto\032\031cosmos_" +
      "proto/cosmos.proto\032$axelar/utils/v1beta1" +
      "/threshold.proto\032,axelar/snapshot/export" +
      "ed/v1beta1/types.proto\032,axelar/multisig/" +
      "exported/v1beta1/types.proto\"\224\004\n\003Key\022X\n\002" +
      "id\030\001 \001(\tBH\342\336\037\002ID\372\336\037>github.com/axelarnet" +
      "work/axelar-core/x/multisig/exported.Key" +
      "IDR\002id\022L\n\010snapshot\030\002 \001(\0132*.axelar.snapsh" +
      "ot.exported.v1beta1.SnapshotB\004\310\336\037\000R\010snap" +
      "shot\022\214\001\n\010pub_keys\030\003 \003(\0132).axelar.multisi" +
      "g.v1beta1.Key.PubKeysEntryBF\212\337\037Bgithub.c" +
      "om/axelarnetwork/axelar-core/x/multisig/" +
      "exported.PublicKeyR\007pubKeys\022R\n\021signing_t" +
      "hreshold\030\004 \001(\0132\037.axelar.utils.v1beta1.Th" +
      "resholdB\004\310\336\037\000R\020signingThreshold\022@\n\005state" +
      "\030\005 \001(\0162*.axelar.multisig.exported.v1beta" +
      "1.KeyStateR\005state\032:\n\014PubKeysEntry\022\020\n\003key" +
      "\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\014R\005value:\0028\001:\004\230" +
      "\241\037\001\"\373\003\n\rKeygenSession\0224\n\003key\030\001 \001(\0132\034.axe" +
      "lar.multisig.v1beta1.KeyB\004\310\336\037\000R\003key\022E\n\005s" +
      "tate\030\002 \001(\0162/.axelar.multisig.exported.v1" +
      "beta1.MultisigStateR\005state\022P\n\020keygen_thr" +
      "eshold\030\003 \001(\0132\037.axelar.utils.v1beta1.Thre" +
      "sholdB\004\310\336\037\000R\017keygenThreshold\022\035\n\nexpires_" +
      "at\030\004 \001(\003R\texpiresAt\022!\n\014completed_at\030\005 \001(" +
      "\003R\013completedAt\022k\n\023is_pub_key_received\030\006 " +
      "\003(\0132<.axelar.multisig.v1beta1.KeygenSess" +
      "ion.IsPubKeyReceivedEntryR\020isPubKeyRecei" +
      "ved\022!\n\014grace_period\030\007 \001(\003R\013gracePeriod\032C" +
      "\n\025IsPubKeyReceivedEntry\022\020\n\003key\030\001 \001(\tR\003ke" +
      "y\022\024\n\005value\030\002 \001(\010R\005value:\0028\001:\004\230\241\037\001\"\343\002\n\010Mu" +
      "ltiSig\022b\n\006key_id\030\001 \001(\tBK\342\336\037\005KeyID\372\336\037>git" +
      "hub.com/axelarnetwork/axelar-core/x/mult" +
      "isig/exported.KeyIDR\005keyId\022d\n\014payload_ha" +
      "sh\030\002 \001(\014BA\372\336\037=github.com/axelarnetwork/a" +
      "xelar-core/x/multisig/exported.HashR\013pay" +
      "loadHash\022N\n\004sigs\030\003 \003(\0132+.axelar.multisig" +
      ".v1beta1.MultiSig.SigsEntryB\r\212\337\037\tSignatu" +
      "reR\004sigs\0327\n\tSigsEntry\022\020\n\003key\030\001 \001(\tR\003key\022" +
      "\024\n\005value\030\002 \001(\014R\005value:\0028\001:\004\230\241\037\001\"\331\003\n\016Sign" +
      "ingSession\022\026\n\002id\030\001 \001(\004B\006\342\336\037\002IDR\002id\022D\n\tmu" +
      "lti_sig\030\002 \001(\0132!.axelar.multisig.v1beta1." +
      "MultiSigB\004\310\336\037\000R\010multiSig\022E\n\005state\030\003 \001(\0162" +
      "/.axelar.multisig.exported.v1beta1.Multi" +
      "sigStateR\005state\0224\n\003key\030\004 \001(\0132\034.axelar.mu" +
      "ltisig.v1beta1.KeyB\004\310\336\037\000R\003key\022\035\n\nexpires" +
      "_at\030\005 \001(\003R\texpiresAt\022!\n\014completed_at\030\006 \001" +
      "(\003R\013completedAt\022!\n\014grace_period\030\007 \001(\003R\013g" +
      "racePeriod\022\026\n\006module\030\010 \001(\tR\006module\022i\n\017mo" +
      "dule_metadata\030\t \001(\0132\024.google.protobuf.An" +
      "yB*\312\264-&github.com/cosmos/codec/ProtoMars" +
      "halerR\016moduleMetadata:\004\230\241\037\001\"\337\001\n\010KeyEpoch" +
      "\022\024\n\005epoch\030\001 \001(\004R\005epoch\022Y\n\005chain\030\002 \001(\tBC\372" +
      "\336\037?github.com/axelarnetwork/axelar-core/" +
      "x/nexus/exported.ChainNameR\005chain\022b\n\006key" +
      "_id\030\003 \001(\tBK\342\336\037\005KeyID\372\336\037>github.com/axela" +
      "rnetwork/axelar-core/x/multisig/exported" +
      ".KeyIDR\005keyIdB\336\001\n\033com.axelar.multisig.v1" +
      "beta1B\nTypesProtoP\001Z5github.com/axelarne" +
      "twork/axelar-core/x/multisig/types\242\002\003AMX" +
      "\252\002\027Axelar.Multisig.V1beta1\312\002\027Axelar\\Mult" +
      "isig\\V1beta1\342\002#Axelar\\Multisig\\V1beta1\\G" +
      "PBMetadata\352\002\031Axelar::Multisig::V1beta1b\006" +
      "proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
          com.axelar.utils.v1beta1.ThresholdProto.getDescriptor(),
          com.axelar.snapshot.exported.v1beta1.TypesProto.getDescriptor(),
          com.axelar.multisig.exported.v1beta1.TypesProto.getDescriptor(),
        });
    internal_static_axelar_multisig_v1beta1_Key_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_axelar_multisig_v1beta1_Key_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_multisig_v1beta1_Key_descriptor,
        new java.lang.String[] { "Id", "Snapshot", "PubKeys", "SigningThreshold", "State", });
    internal_static_axelar_multisig_v1beta1_Key_PubKeysEntry_descriptor =
      internal_static_axelar_multisig_v1beta1_Key_descriptor.getNestedTypes().get(0);
    internal_static_axelar_multisig_v1beta1_Key_PubKeysEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_multisig_v1beta1_Key_PubKeysEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_axelar_multisig_v1beta1_KeygenSession_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_axelar_multisig_v1beta1_KeygenSession_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_multisig_v1beta1_KeygenSession_descriptor,
        new java.lang.String[] { "Key", "State", "KeygenThreshold", "ExpiresAt", "CompletedAt", "IsPubKeyReceived", "GracePeriod", });
    internal_static_axelar_multisig_v1beta1_KeygenSession_IsPubKeyReceivedEntry_descriptor =
      internal_static_axelar_multisig_v1beta1_KeygenSession_descriptor.getNestedTypes().get(0);
    internal_static_axelar_multisig_v1beta1_KeygenSession_IsPubKeyReceivedEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_multisig_v1beta1_KeygenSession_IsPubKeyReceivedEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_axelar_multisig_v1beta1_MultiSig_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_axelar_multisig_v1beta1_MultiSig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_multisig_v1beta1_MultiSig_descriptor,
        new java.lang.String[] { "KeyId", "PayloadHash", "Sigs", });
    internal_static_axelar_multisig_v1beta1_MultiSig_SigsEntry_descriptor =
      internal_static_axelar_multisig_v1beta1_MultiSig_descriptor.getNestedTypes().get(0);
    internal_static_axelar_multisig_v1beta1_MultiSig_SigsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_multisig_v1beta1_MultiSig_SigsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_axelar_multisig_v1beta1_SigningSession_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_axelar_multisig_v1beta1_SigningSession_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_multisig_v1beta1_SigningSession_descriptor,
        new java.lang.String[] { "Id", "MultiSig", "State", "Key", "ExpiresAt", "CompletedAt", "GracePeriod", "Module", "ModuleMetadata", });
    internal_static_axelar_multisig_v1beta1_KeyEpoch_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_axelar_multisig_v1beta1_KeyEpoch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_multisig_v1beta1_KeyEpoch_descriptor,
        new java.lang.String[] { "Epoch", "Chain", "KeyId", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.cosmos_proto.CosmosProto.acceptsInterface);
    registry.add(com.gogoproto.GogoProto.casttype);
    registry.add(com.gogoproto.GogoProto.castvalue);
    registry.add(com.gogoproto.GogoProto.customname);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stableMarshaler);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.AnyProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
    com.axelar.utils.v1beta1.ThresholdProto.getDescriptor();
    com.axelar.snapshot.exported.v1beta1.TypesProto.getDescriptor();
    com.axelar.multisig.exported.v1beta1.TypesProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/multisig/v1beta1/params.proto

package com.axelar.multisig.v1beta1;

public final class ParamsProto {
  private ParamsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axelar.multisig.v1beta1.Params)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
     * @return Whether the keygenThreshold field is set.
     */
    boolean hasKeygenThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
     * @return The keygenThreshold.
     */
    com.axelar.utils.v1beta1.ThresholdProto.Threshold getKeygenThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
     */
    com.axelar.utils.v1beta1.ThresholdProto.ThresholdOrBuilder getKeygenThresholdOrBuilder();

    /**
     * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
     * @return Whether the signingThreshold field is set.
     */
    boolean hasSigningThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
     * @return The signingThreshold.
     */
    com.axelar.utils.v1beta1.ThresholdProto.Threshold getSigningThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
     */
    com.axelar.utils.v1beta1.ThresholdProto.ThresholdOrBuilder getSigningThresholdOrBuilder();

    /**
     * <code>int64 keygen_timeout = 3 [json_name = "keygenTimeout"];</code>
     * @return The keygenTimeout.
     */
    long getKeygenTimeout();

    /**
     * <code>int64 keygen_grace_period = 4 [json_name = "keygenGracePeriod"];</code>
     * @return The keygenGracePeriod.
     */
    long getKeygenGracePeriod();

    /**
     * <code>int64 signing_timeout = 5 [json_name = "signingTimeout"];</code>
     * @return The signingTimeout.
     */
    long getSigningTimeout();

    /**
     * <code>int64 signing_grace_period = 6 [json_name = "signingGracePeriod"];</code>
     * @return The signingGracePeriod.
     */
    long getSigningGracePeriod();

    /**
     * <code>uint64 active_epoch_count = 7 [json_name = "activeEpochCount"];</code>
     * @return The activeEpochCount.
     */
    long getActiveEpochCount();
  }
  /**
   * <pre>
   * Params represent the genesis parameters for the module
   * </pre>
   *
   * Protobuf type {@code axelar.multisig.v1beta1.Params}
   */
  public static final class Params extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axelar.multisig.v1beta1.Params)
      ParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Params.newBuilder() to construct.
    private Params(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Params() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Params();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.axelar.multisig.v1beta1.ParamsProto.internal_static_axelar_multisig_v1beta1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.axelar.multisig.v1beta1.ParamsProto.internal_static_axelar_multisig_v1beta1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.axelar.multisig.v1beta1.ParamsProto.Params.class, com.axelar.multisig.v1beta1.ParamsProto.Params.Builder.class);
    }

    private int bitField0_;
    public static final int KEYGEN_THRESHOLD_FIELD_NUMBER = 1;
    private com.axelar.utils.v1beta1.ThresholdProto.Threshold keygenThreshold_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
     * @return Whether the keygenThreshold field is set.
     */
    @java.lang.Override
    public boolean hasKeygenThreshold() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
     * @return The keygenThreshold.
     */
    @java.lang.Override
    public com.axelar.utils.v1beta1.ThresholdProto.Threshold getKeygenThreshold() {
      return keygenThreshold_ == null ? com.axelar.utils.v1beta1.ThresholdProto.Threshold.getDefaultInstance() : keygenThreshold_;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public com.axelar.utils.v1beta1.ThresholdProto.ThresholdOrBuilder getKeygenThresholdOrBuilder() {
      return keygenThreshold_ == null ? com.axelar.utils.v1beta1.ThresholdProto.Threshold.getDefaultInstance() : keygenThreshold_;
    }

    public static final int SIGNING_THRESHOLD_FIELD_NUMBER = 2;
    private com.axelar.utils.v1beta1.ThresholdProto.Threshold signingThreshold_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
     * @return Whether the signingThreshold field is set.
     */
    @java.lang.Override
    public boolean hasSigningThreshold() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
     * @return The signingThreshold.
     */
    @java.lang.Override
    public com.axelar.utils.v1beta1.ThresholdProto.Threshold getSigningThreshold() {
      return signingThreshold_ == null ? com.axelar.utils.v1beta1.ThresholdProto.Threshold.getDefaultInstance() : signingThreshold_;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public com.axelar.utils.v1beta1.ThresholdProto.ThresholdOrBuilder getSigningThresholdOrBuilder() {
      return signingThreshold_ == null ? com.axelar.utils.v1beta1.ThresholdProto.Threshold.getDefaultInstance() : signingThreshold_;
    }

    public static final int KEYGEN_TIMEOUT_FIELD_NUMBER = 3;
    private long keygenTimeout_ = 0L;
    /**
     * <code>int64 keygen_timeout = 3 [json_name = "keygenTimeout"];</code>
     * @return The keygenTimeout.
     */
    @java.lang.Override
    public long getKeygenTimeout() {
      return keygenTimeout_;
    }

    public static final int KEYGEN_GRACE_PERIOD_FIELD_NUMBER = 4;
    private long keygenGracePeriod_ = 0L;
    /**
     * <code>int64 keygen_grace_period = 4 [json_name = "keygenGracePeriod"];</code>
     * @return The keygenGracePeriod.
     */
    @java.lang.Override
    public long getKeygenGracePeriod() {
      return keygenGracePeriod_;
    }

    public static final int SIGNING_TIMEOUT_FIELD_NUMBER = 5;
    private long signingTimeout_ = 0L;
    /**
     * <code>int64 signing_timeout = 5 [json_name = "signingTimeout"];</code>
     * @return The signingTimeout.
     */
    @java.lang.Override
    public long getSigningTimeout() {
      return signingTimeout_;
    }

    public static final int SIGNING_GRACE_PERIOD_FIELD_NUMBER = 6;
    private long signingGracePeriod_ = 0L;
    /**
     * <code>int64 signing_grace_period = 6 [json_name = "signingGracePeriod"];</code>
     * @return The signingGracePeriod.
     */
    @java.lang.Override
    public long getSigningGracePeriod() {
      return signingGracePeriod_;
    }

    public static final int ACTIVE_EPOCH_COUNT_FIELD_NUMBER = 7;
    private long activeEpochCount_ = 0L;
    /**
     * <code>uint64 active_epoch_count = 7 [json_name = "activeEpochCount"];</code>
     * @return The activeEpochCount.
     */
    @java.lang.Override
    public long getActiveEpochCount() {
      return activeEpochCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getKeygenThreshold());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getSigningThreshold());
      }
      if (keygenTimeout_ != 0L) {
        output.writeInt64(3, keygenTimeout_);
      }
      if (keygenGracePeriod_ != 0L) {
        output.writeInt64(4, keygenGracePeriod_);
      }
      if (signingTimeout_ != 0L) {
        output.writeInt64(5, signingTimeout_);
      }
      if (signingGracePeriod_ != 0L) {
        output.writeInt64(6, signingGracePeriod_);
      }
      if (activeEpochCount_ != 0L) {
        output.writeUInt64(7, activeEpochCount_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getKeygenThreshold());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSigningThreshold());
      }
      if (keygenTimeout_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, keygenTimeout_);
      }
      if (keygenGracePeriod_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, keygenGracePeriod_);
      }
      if (signingTimeout_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, signingTimeout_);
      }
      if (signingGracePeriod_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, signingGracePeriod_);
      }
      if (activeEpochCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, activeEpochCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.axelar.multisig.v1beta1.ParamsProto.Params)) {
        return super.equals(obj);
      }
      com.axelar.multisig.v1beta1.ParamsProto.Params other = (com.axelar.multisig.v1beta1.ParamsProto.Params) obj;

      if (hasKeygenThreshold() != other.hasKeygenThreshold()) return false;
      if (hasKeygenThreshold()) {
        if (!getKeygenThreshold()
            .equals(other.getKeygenThreshold())) return false;
      }
      if (hasSigningThreshold() != other.hasSigningThreshold()) return false;
      if (hasSigningThreshold()) {
        if (!getSigningThreshold()
            .equals(other.getSigningThreshold())) return false;
      }
      if (getKeygenTimeout()
          != other.getKeygenTimeout()) return false;
      if (getKeygenGracePeriod()
          != other.getKeygenGracePeriod()) return false;
      if (getSigningTimeout()
          != other.getSigningTimeout()) return false;
      if (getSigningGracePeriod()
          != other.getSigningGracePeriod()) return false;
      if (getActiveEpochCount()
          != other.getActiveEpochCount()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKeygenThreshold()) {
        hash = (37 * hash) + KEYGEN_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getKeygenThreshold().hashCode();
      }
      if (hasSigningThreshold()) {
        hash = (37 * hash) + SIGNING_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getSigningThreshold().hashCode();
      }
      hash = (37 * hash) + KEYGEN_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getKeygenTimeout());
      hash = (37 * hash) + KEYGEN_GRACE_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getKeygenGracePeriod());
      hash = (37 * hash) + SIGNING_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSigningTimeout());
      hash = (37 * hash) + SIGNING_GRACE_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSigningGracePeriod());
      hash = (37 * hash) + ACTIVE_EPOCH_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getActiveEpochCount());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.axelar.multisig.v1beta1.ParamsProto.Params parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.axelar.multisig.v1beta1.ParamsProto.Params parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.axelar.multisig.v1beta1.ParamsProto.Params parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.axelar.multisig.v1beta1.ParamsProto.Params parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.axelar.multisig.v1beta1.ParamsProto.Params parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.axelar.multisig.v1beta1.ParamsProto.Params parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.axelar.multisig.v1beta1.ParamsProto.Params parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.axelar.multisig.v1beta1.ParamsProto.Params parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.axelar.multisig.v1beta1.ParamsProto.Params parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.axelar.multisig.v1beta1.ParamsProto.Params parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.axelar.multisig.v1beta1.ParamsProto.Params parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.axelar.multisig.v1beta1.ParamsProto.Params parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.axelar.multisig.v1beta1.ParamsProto.Params prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Params represent the genesis parameters for the module
     * </pre>
     *
     * Protobuf type {@code axelar.multisig.v1beta1.Params}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axelar.multisig.v1beta1.Params)
        com.axelar.multisig.v1beta1.ParamsProto.ParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.axelar.multisig.v1beta1.ParamsProto.internal_static_axelar_multisig_v1beta1_Params_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.axelar.multisig.v1beta1.ParamsProto.internal_static_axelar_multisig_v1beta1_Params_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.axelar.multisig.v1beta1.ParamsProto.Params.class, com.axelar.multisig.v1beta1.ParamsProto.Params.Builder.class);
      }

      // Construct using com.axelar.multisig.v1beta1.ParamsProto.Params.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getKeygenThresholdFieldBuilder();
          getSigningThresholdFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        keygenThreshold_ = null;
        if (keygenThresholdBuilder_ != null) {
          keygenThresholdBuilder_.dispose();
          keygenThresholdBuilder_ = null;
        }
        signingThreshold_ = null;
        if (signingThresholdBuilder_ != null) {
          signingThresholdBuilder_.dispose();
          signingThresholdBuilder_ = null;
        }
        keygenTimeout_ = 0L;
        keygenGracePeriod_ = 0L;
        signingTimeout_ = 0L;
        signingGracePeriod_ = 0L;
        activeEpochCount_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.axelar.multisig.v1beta1.ParamsProto.internal_static_axelar_multisig_v1beta1_Params_descriptor;
      }

      @java.lang.Override
      public com.axelar.multisig.v1beta1.ParamsProto.Params getDefaultInstanceForType() {
        return com.axelar.multisig.v1beta1.ParamsProto.Params.getDefaultInstance();
      }

      @java.lang.Override
      public com.axelar.multisig.v1beta1.ParamsProto.Params build() {
        com.axelar.multisig.v1beta1.ParamsProto.Params result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.axelar.multisig.v1beta1.ParamsProto.Params buildPartial() {
        com.axelar.multisig.v1beta1.ParamsProto.Params result = new com.axelar.multisig.v1beta1.ParamsProto.Params(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.axelar.multisig.v1beta1.ParamsProto.Params result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.keygenThreshold_ = keygenThresholdBuilder_ == null
              ? keygenThreshold_
              : keygenThresholdBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.signingThreshold_ = signingThresholdBuilder_ == null
              ? signingThreshold_
              : signingThresholdBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.keygenTimeout_ = keygenTimeout_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.keygenGracePeriod_ = keygenGracePeriod_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.signingTimeout_ = signingTimeout_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.signingGracePeriod_ = signingGracePeriod_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.activeEpochCount_ = activeEpochCount_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.axelar.multisig.v1beta1.ParamsProto.Params) {
          return mergeFrom((com.axelar.multisig.v1beta1.ParamsProto.Params)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.axelar.multisig.v1beta1.ParamsProto.Params other) {
        if (other == com.axelar.multisig.v1beta1.ParamsProto.Params.getDefaultInstance()) return this;
        if (other.hasKeygenThreshold()) {
          mergeKeygenThreshold(other.getKeygenThreshold());
        }
        if (other.hasSigningThreshold()) {
          mergeSigningThreshold(other.getSigningThreshold());
        }
        if (other.getKeygenTimeout() != 0L) {
          setKeygenTimeout(other.getKeygenTimeout());
        }
        if (other.getKeygenGracePeriod() != 0L) {
          setKeygenGracePeriod(other.getKeygenGracePeriod());
        }
        if (other.getSigningTimeout() != 0L) {
          setSigningTimeout(other.getSigningTimeout());
        }
        if (other.getSigningGracePeriod() != 0L) {
          setSigningGracePeriod(other.getSigningGracePeriod());
        }
        if (other.getActiveEpochCount() != 0L) {
          setActiveEpochCount(other.getActiveEpochCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getKeygenThresholdFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getSigningThresholdFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                keygenTimeout_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                keygenGracePeriod_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                signingTimeout_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                signingGracePeriod_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                activeEpochCount_ = input.readUInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.axelar.utils.v1beta1.ThresholdProto.Threshold keygenThreshold_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.axelar.utils.v1beta1.ThresholdProto.Threshold, com.axelar.utils.v1beta1.ThresholdProto.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdProto.ThresholdOrBuilder> keygenThresholdBuilder_;
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
       * @return Whether the keygenThreshold field is set.
       */
      public boolean hasKeygenThreshold() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
       * @return The keygenThreshold.
       */
      public com.axelar.utils.v1beta1.ThresholdProto.Threshold getKeygenThreshold() {
        if (keygenThresholdBuilder_ == null) {
          return keygenThreshold_ == null ? com.axelar.utils.v1beta1.ThresholdProto.Threshold.getDefaultInstance() : keygenThreshold_;
        } else {
          return keygenThresholdBuilder_.getMessage();
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
       */
      public Builder setKeygenThreshold(com.axelar.utils.v1beta1.ThresholdProto.Threshold value) {
        if (keygenThresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keygenThreshold_ = value;
        } else {
          keygenThresholdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
       */
      public Builder setKeygenThreshold(
          com.axelar.utils.v1beta1.ThresholdProto.Threshold.Builder builderForValue) {
        if (keygenThresholdBuilder_ == null) {
          keygenThreshold_ = builderForValue.build();
        } else {
          keygenThresholdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
       */
      public Builder mergeKeygenThreshold(com.axelar.utils.v1beta1.ThresholdProto.Threshold value) {
        if (keygenThresholdBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            keygenThreshold_ != null &&
            keygenThreshold_ != com.axelar.utils.v1beta1.ThresholdProto.Threshold.getDefaultInstance()) {
            getKeygenThresholdBuilder().mergeFrom(value);
          } else {
            keygenThreshold_ = value;
          }
        } else {
          keygenThresholdBuilder_.mergeFrom(value);
        }
        if (keygenThreshold_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
       */
      public Builder clearKeygenThreshold() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keygenThreshold_ = null;
        if (keygenThresholdBuilder_ != null) {
          keygenThresholdBuilder_.dispose();
          keygenThresholdBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
       */
      public com.axelar.utils.v1beta1.ThresholdProto.Threshold.Builder getKeygenThresholdBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getKeygenThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
       */
      public com.axelar.utils.v1beta1.ThresholdProto.ThresholdOrBuilder getKeygenThresholdOrBuilder() {
        if (keygenThresholdBuilder_ != null) {
          return keygenThresholdBuilder_.getMessageOrBuilder();
        } else {
          return keygenThreshold_ == null ?
              com.axelar.utils.v1beta1.ThresholdProto.Threshold.getDefaultInstance() : keygenThreshold_;
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 1 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.axelar.utils.v1beta1.ThresholdProto.Threshold, com.axelar.utils.v1beta1.ThresholdProto.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdProto.ThresholdOrBuilder> 
          getKeygenThresholdFieldBuilder() {
        if (keygenThresholdBuilder_ == null) {
          keygenThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.axelar.utils.v1beta1.ThresholdProto.Threshold, com.axelar.utils.v1beta1.ThresholdProto.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdProto.ThresholdOrBuilder>(
                  getKeygenThreshold(),
                  getParentForChildren(),
                  isClean());
          keygenThreshold_ = null;
        }
        return keygenThresholdBuilder_;
      }

      private com.axelar.utils.v1beta1.ThresholdProto.Threshold signingThreshold_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.axelar.utils.v1beta1.ThresholdProto.Threshold, com.axelar.utils.v1beta1.ThresholdProto.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdProto.ThresholdOrBuilder> signingThresholdBuilder_;
      /**
       * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
       * @return Whether the signingThreshold field is set.
       */
      public boolean hasSigningThreshold() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
       * @return The signingThreshold.
       */
      public com.axelar.utils.v1beta1.ThresholdProto.Threshold getSigningThreshold() {
        if (signingThresholdBuilder_ == null) {
          return signingThreshold_ == null ? com.axelar.utils.v1beta1.ThresholdProto.Threshold.getDefaultInstance() : signingThreshold_;
        } else {
          return signingThresholdBuilder_.getMessage();
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
       */
      public Builder setSigningThreshold(com.axelar.utils.v1beta1.ThresholdProto.Threshold value) {
        if (signingThresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signingThreshold_ = value;
        } else {
          signingThresholdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
       */
      public Builder setSigningThreshold(
          com.axelar.utils.v1beta1.ThresholdProto.Threshold.Builder builderForValue) {
        if (signingThresholdBuilder_ == null) {
          signingThreshold_ = builderForValue.build();
        } else {
          signingThresholdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
       */
      public Builder mergeSigningThreshold(com.axelar.utils.v1beta1.ThresholdProto.Threshold value) {
        if (signingThresholdBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            signingThreshold_ != null &&
            signingThreshold_ != com.axelar.utils.v1beta1.ThresholdProto.Threshold.getDefaultInstance()) {
            getSigningThresholdBuilder().mergeFrom(value);
          } else {
            signingThreshold_ = value;
          }
        } else {
          signingThresholdBuilder_.mergeFrom(value);
        }
        if (signingThreshold_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
       */
      public Builder clearSigningThreshold() {
        bitField0_ = (bitField0_ & ~0x00000002);
        signingThreshold_ = null;
        if (signingThresholdBuilder_ != null) {
          signingThresholdBuilder_.dispose();
          signingThresholdBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
       */
      public com.axelar.utils.v1beta1.ThresholdProto.Threshold.Builder getSigningThresholdBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSigningThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
       */
      public com.axelar.utils.v1beta1.ThresholdProto.ThresholdOrBuilder getSigningThresholdOrBuilder() {
        if (signingThresholdBuilder_ != null) {
          return signingThresholdBuilder_.getMessageOrBuilder();
        } else {
          return signingThreshold_ == null ?
              com.axelar.utils.v1beta1.ThresholdProto.Threshold.getDefaultInstance() : signingThreshold_;
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold signing_threshold = 2 [json_name = "signingThreshold", (.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.axelar.utils.v1beta1.ThresholdProto.Threshold, com.axelar.utils.v1beta1.ThresholdProto.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdProto.ThresholdOrBuilder> 
          getSigningThresholdFieldBuilder() {
        if (signingThresholdBuilder_ == null) {
          signingThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.axelar.utils.v1beta1.ThresholdProto.Threshold, com.axelar.utils.v1beta1.ThresholdProto.Threshold.Builder, com.axelar.utils.v1beta1.ThresholdProto.ThresholdOrBuilder>(
                  getSigningThreshold(),
                  getParentForChildren(),
                  isClean());
          signingThreshold_ = null;
        }
        return signingThresholdBuilder_;
      }

      private long keygenTimeout_ ;
      /**
       * <code>int64 keygen_timeout = 3 [json_name = "keygenTimeout"];</code>
       * @return The keygenTimeout.
       */
      @java.lang.Override
      public long getKeygenTimeout() {
        return keygenTimeout_;
      }
      /**
       * <code>int64 keygen_timeout = 3 [json_name = "keygenTimeout"];</code>
       * @param value The keygenTimeout to set.
       * @return This builder for chaining.
       */
      public Builder setKeygenTimeout(long value) {

        keygenTimeout_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int64 keygen_timeout = 3 [json_name = "keygenTimeout"];</code>
       * @return This builder for chaining.
       */
      public Builder clearKeygenTimeout() {
        bitField0_ = (bitField0_ & ~0x00000004);
        keygenTimeout_ = 0L;
        onChanged();
        return this;
      }

      private long keygenGracePeriod_ ;
      /**
       * <code>int64 keygen_grace_period = 4 [json_name = "keygenGracePeriod"];</code>
       * @return The keygenGracePeriod.
       */
      @java.lang.Override
      public long getKeygenGracePeriod() {
        return keygenGracePeriod_;
      }
      /**
       * <code>int64 keygen_grace_period = 4 [json_name = "keygenGracePeriod"];</code>
       * @param value The keygenGracePeriod to set.
       * @return This builder for chaining.
       */
      public Builder setKeygenGracePeriod(long value) {

        keygenGracePeriod_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int64 keygen_grace_period = 4 [json_name = "keygenGracePeriod"];</code>
       * @return This builder for chaining.
       */
      public Builder clearKeygenGracePeriod() {
        bitField0_ = (bitField0_ & ~0x00000008);
        keygenGracePeriod_ = 0L;
        onChanged();
        return this;
      }

      private long signingTimeout_ ;
      /**
       * <code>int64 signing_timeout = 5 [json_name = "signingTimeout"];</code>
       * @return The signingTimeout.
       */
      @java.lang.Override
      public long getSigningTimeout() {
        return signingTimeout_;
      }
      /**
       * <code>int64 signing_timeout = 5 [json_name = "signingTimeout"];</code>
       * @param value The signingTimeout to set.
       * @return This builder for chaining.
       */
      public Builder setSigningTimeout(long value) {

        signingTimeout_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int64 signing_timeout = 5 [json_name = "signingTimeout"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSigningTimeout() {
        bitField0_ = (bitField0_ & ~0x00000010);
        signingTimeout_ = 0L;
        onChanged();
        return this;
      }

      private long signingGracePeriod_ ;
      /**
       * <code>int64 signing_grace_period = 6 [json_name = "signingGracePeriod"];</code>
       * @return The signingGracePeriod.
       */
      @java.lang.Override
      public long getSigningGracePeriod() {
        return signingGracePeriod_;
      }
      /**
       * <code>int64 signing_grace_period = 6 [json_name = "signingGracePeriod"];</code>
       * @param value The signingGracePeriod to set.
       * @return This builder for chaining.
       */
      public Builder setSigningGracePeriod(long value) {

        signingGracePeriod_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int64 signing_grace_period = 6 [json_name = "signingGracePeriod"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSigningGracePeriod() {
        bitField0_ = (bitField0_ & ~0x00000020);
        signingGracePeriod_ = 0L;
        onChanged();
        return this;
      }

      private long activeEpochCount_ ;
      /**
       * <code>uint64 active_epoch_count = 7 [json_name = "activeEpochCount"];</code>
       * @return The activeEpochCount.
       */
      @java.lang.Override
      public long getActiveEpochCount() {
        return activeEpochCount_;
      }
      /**
       * <code>uint64 active_epoch_count = 7 [json_name = "activeEpochCount"];</code>
       * @param value The activeEpochCount to set.
       * @return This builder for chaining.
       */
      public Builder setActiveEpochCount(long value) {

        activeEpochCount_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 active_epoch_count = 7 [json_name = "activeEpochCount"];</code>
       * @return This builder for chaining.
       */
      public Builder clearActiveEpochCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        activeEpochCount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axelar.multisig.v1beta1.Params)
    }

    // @@protoc_insertion_point(class_scope:axelar.multisig.v1beta1.Params)
    private static final com.axelar.multisig.v1beta1.ParamsProto.Params DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.axelar.multisig.v1beta1.ParamsProto.Params();
    }

    public static com.axelar.multisig.v1beta1.ParamsProto.Params getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Params>
        PARSER = new com.google.protobuf.AbstractParser<Params>() {
      @java.lang.Override
      public Params parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Params> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Params> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.axelar.multisig.v1beta1.ParamsProto.Params getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_multisig_v1beta1_Params_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_multisig_v1beta1_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$axelar/multisig/v1beta1/params.proto\022\027" +
      "axelar.multisig.v1beta1\032\024gogoproto/gogo." +
      "proto\032$axelar/utils/v1beta1/threshold.pr" +
      "oto\"\216\003\n\006Params\022P\n\020keygen_threshold\030\001 \001(\013" +
      "2\037.axelar.utils.v1beta1.ThresholdB\004\310\336\037\000R" +
      "\017keygenThreshold\022R\n\021signing_threshold\030\002 " +
      "\001(\0132\037.axelar.utils.v1beta1.ThresholdB\004\310\336" +
      "\037\000R\020signingThreshold\022%\n\016keygen_timeout\030\003" +
      " \001(\003R\rkeygenTimeout\022.\n\023keygen_grace_peri" +
      "od\030\004 \001(\003R\021keygenGracePeriod\022\'\n\017signing_t" +
      "imeout\030\005 \001(\003R\016signingTimeout\0220\n\024signing_" +
      "grace_period\030\006 \001(\003R\022signingGracePeriod\022," +
      "\n\022active_epoch_count\030\007 \001(\004R\020activeEpochC" +
      "ountB\341\001\n\033com.axelar.multisig.v1beta1B\013Pa" +
      "ramsProtoZ5github.com/axelarnetwork/axel" +
      "ar-core/x/multisig/types\242\002\003AMX\252\002\027Axelar." +
      "Multisig.V1beta1\312\002\027Axelar\\Multisig\\V1bet" +
      "a1\342\002#Axelar\\Multisig\\V1beta1\\GPBMetadata" +
      "\352\002\031Axelar::Multisig::V1beta1\310\341\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.axelar.utils.v1beta1.ThresholdProto.getDescriptor(),
        });
    internal_static_axelar_multisig_v1beta1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_axelar_multisig_v1beta1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_multisig_v1beta1_Params_descriptor,
        new java.lang.String[] { "KeygenThreshold", "SigningThreshold", "KeygenTimeout", "KeygenGracePeriod", "SigningTimeout", "SigningGracePeriod", "ActiveEpochCount", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.goprotoGettersAll);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.axelar.utils.v1beta1.ThresholdProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

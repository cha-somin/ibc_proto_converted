// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/multisig/v1beta1/types.proto

package com.axelar.multisig.v1beta1;

public interface KeygenSessionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:axelar.multisig.v1beta1.KeygenSession)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.axelar.multisig.v1beta1.Key key = 1 [json_name = "key", (.gogoproto.nullable) = false];</code>
   * @return Whether the key field is set.
   */
  boolean hasKey();
  /**
   * <code>.axelar.multisig.v1beta1.Key key = 1 [json_name = "key", (.gogoproto.nullable) = false];</code>
   * @return The key.
   */
  com.axelar.multisig.v1beta1.Key getKey();
  /**
   * <code>.axelar.multisig.v1beta1.Key key = 1 [json_name = "key", (.gogoproto.nullable) = false];</code>
   */
  com.axelar.multisig.v1beta1.KeyOrBuilder getKeyOrBuilder();

  /**
   * <code>.axelar.multisig.exported.v1beta1.MultisigState state = 2 [json_name = "state"];</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <code>.axelar.multisig.exported.v1beta1.MultisigState state = 2 [json_name = "state"];</code>
   * @return The state.
   */
  com.axelar.multisig.exported.v1beta1.MultisigState getState();

  /**
   * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 3 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
   * @return Whether the keygenThreshold field is set.
   */
  boolean hasKeygenThreshold();
  /**
   * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 3 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
   * @return The keygenThreshold.
   */
  com.axelar.utils.v1beta1.Threshold getKeygenThreshold();
  /**
   * <code>.axelar.utils.v1beta1.Threshold keygen_threshold = 3 [json_name = "keygenThreshold", (.gogoproto.nullable) = false];</code>
   */
  com.axelar.utils.v1beta1.ThresholdOrBuilder getKeygenThresholdOrBuilder();

  /**
   * <code>int64 expires_at = 4 [json_name = "expiresAt"];</code>
   * @return The expiresAt.
   */
  long getExpiresAt();

  /**
   * <code>int64 completed_at = 5 [json_name = "completedAt"];</code>
   * @return The completedAt.
   */
  long getCompletedAt();

  /**
   * <code>map&lt;string, bool&gt; is_pub_key_received = 6 [json_name = "isPubKeyReceived"];</code>
   */
  int getIsPubKeyReceivedCount();
  /**
   * <code>map&lt;string, bool&gt; is_pub_key_received = 6 [json_name = "isPubKeyReceived"];</code>
   */
  boolean containsIsPubKeyReceived(
      java.lang.String key);
  /**
   * Use {@link #getIsPubKeyReceivedMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Boolean>
  getIsPubKeyReceived();
  /**
   * <code>map&lt;string, bool&gt; is_pub_key_received = 6 [json_name = "isPubKeyReceived"];</code>
   */
  java.util.Map<java.lang.String, java.lang.Boolean>
  getIsPubKeyReceivedMap();
  /**
   * <code>map&lt;string, bool&gt; is_pub_key_received = 6 [json_name = "isPubKeyReceived"];</code>
   */
  boolean getIsPubKeyReceivedOrDefault(
      java.lang.String key,
      boolean defaultValue);
  /**
   * <code>map&lt;string, bool&gt; is_pub_key_received = 6 [json_name = "isPubKeyReceived"];</code>
   */
  boolean getIsPubKeyReceivedOrThrow(
      java.lang.String key);

  /**
   * <code>int64 grace_period = 7 [json_name = "gracePeriod"];</code>
   * @return The gracePeriod.
   */
  long getGracePeriod();
}

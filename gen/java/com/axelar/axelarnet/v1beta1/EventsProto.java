// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/axelarnet/v1beta1/events.proto

package com.axelar.axelarnet.v1beta1;

public final class EventsProto {
  private EventsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_IBCTransferSent_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_IBCTransferSent_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_IBCTransferCompleted_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_IBCTransferCompleted_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_IBCTransferFailed_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_IBCTransferFailed_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_IBCTransferRetried_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_IBCTransferRetried_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_AxelarTransferCompleted_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_AxelarTransferCompleted_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_FeeCollected_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_FeeCollected_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_FeePaid_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_FeePaid_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_ContractCallSubmitted_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_ContractCallSubmitted_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_ContractCallWithTokenSubmitted_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_ContractCallWithTokenSubmitted_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_TokenSent_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_TokenSent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%axelar/axelarnet/v1beta1/events.proto\022" +
      "\030axelar.axelarnet.v1beta1\032\024gogoproto/gog" +
      "o.proto\032\036cosmos/base/v1beta1/coin.proto\"" +
      "\325\002\n\017IBCTransferSent\022Z\n\002id\030\001 \001(\004BJ\342\336\037\002ID\372" +
      "\336\037@github.com/axelarnetwork/axelar-core/" +
      "x/nexus/exported.TransferIDR\002id\022\"\n\nrecei" +
      "pient\030\002 \001(\tB\002\030\001R\nreceipient\0225\n\005asset\030\003 \001" +
      "(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000R\005ass" +
      "et\022\032\n\010sequence\030\004 \001(\004R\010sequence\022#\n\007port_i" +
      "d\030\005 \001(\tB\n\342\336\037\006PortIDR\006portId\022,\n\nchannel_i" +
      "d\030\006 \001(\tB\r\342\336\037\tChannelIDR\tchannelId\022\034\n\trec" +
      "ipient\030\007 \001(\tR\trecipient\"\341\001\n\024IBCTransferC" +
      "ompleted\022Z\n\002id\030\001 \001(\004BJ\342\336\037\002ID\372\336\037@github.c" +
      "om/axelarnetwork/axelar-core/x/nexus/exp" +
      "orted.TransferIDR\002id\022\032\n\010sequence\030\002 \001(\004R\010" +
      "sequence\022#\n\007port_id\030\003 \001(\tB\n\342\336\037\006PortIDR\006p" +
      "ortId\022,\n\nchannel_id\030\004 \001(\tB\r\342\336\037\tChannelID" +
      "R\tchannelId\"\336\001\n\021IBCTransferFailed\022Z\n\002id\030" +
      "\001 \001(\004BJ\342\336\037\002ID\372\336\037@github.com/axelarnetwor" +
      "k/axelar-core/x/nexus/exported.TransferI" +
      "DR\002id\022\032\n\010sequence\030\002 \001(\004R\010sequence\022#\n\007por" +
      "t_id\030\003 \001(\tB\n\342\336\037\006PortIDR\006portId\022,\n\nchanne" +
      "l_id\030\004 \001(\tB\r\342\336\037\tChannelIDR\tchannelId\"\330\002\n" +
      "\022IBCTransferRetried\022Z\n\002id\030\001 \001(\004BJ\342\336\037\002ID\372" +
      "\336\037@github.com/axelarnetwork/axelar-core/" +
      "x/nexus/exported.TransferIDR\002id\022\"\n\nrecei" +
      "pient\030\002 \001(\tB\002\030\001R\nreceipient\0225\n\005asset\030\003 \001" +
      "(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000R\005ass" +
      "et\022\032\n\010sequence\030\004 \001(\004R\010sequence\022#\n\007port_i" +
      "d\030\005 \001(\tB\n\342\336\037\006PortIDR\006portId\022,\n\nchannel_i" +
      "d\030\006 \001(\tB\r\342\336\037\tChannelIDR\tchannelId\022\034\n\trec" +
      "ipient\030\007 \001(\tR\trecipient\"\356\001\n\027AxelarTransf" +
      "erCompleted\022Z\n\002id\030\001 \001(\004BJ\342\336\037\002ID\372\336\037@githu" +
      "b.com/axelarnetwork/axelar-core/x/nexus/" +
      "exported.TransferIDR\002id\022\"\n\nreceipient\030\002 " +
      "\001(\tB\002\030\001R\nreceipient\0225\n\005asset\030\003 \001(\0132\031.cos" +
      "mos.base.v1beta1.CoinB\004\310\336\037\000R\005asset\022\034\n\tre" +
      "cipient\030\004 \001(\tR\trecipient\"\222\001\n\014FeeCollecte" +
      "d\022O\n\tcollector\030\001 \001(\014B1\372\336\037-github.com/cos" +
      "mos/cosmos-sdk/types.AccAddressR\tcollect" +
      "or\0221\n\003fee\030\002 \001(\0132\031.cosmos.base.v1beta1.Co" +
      "inB\004\310\336\037\000R\003fee\"\273\001\n\007FeePaid\022,\n\nmessage_id\030" +
      "\001 \001(\tB\r\342\336\037\tMessageIDR\tmessageId\022O\n\trecip" +
      "ient\030\002 \001(\014B1\372\336\037-github.com/cosmos/cosmos" +
      "-sdk/types.AccAddressR\trecipient\0221\n\003fee\030" +
      "\003 \001(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000R\003" +
      "fee\"\237\003\n\025ContractCallSubmitted\022,\n\nmessage" +
      "_id\030\001 \001(\tB\r\342\336\037\tMessageIDR\tmessageId\022\026\n\006s" +
      "ender\030\002 \001(\tR\006sender\022f\n\014source_chain\030\003 \001(" +
      "\tBC\372\336\037?github.com/axelarnetwork/axelar-c" +
      "ore/x/nexus/exported.ChainNameR\013sourceCh" +
      "ain\022p\n\021destination_chain\030\004 \001(\tBC\372\336\037?gith" +
      "ub.com/axelarnetwork/axelar-core/x/nexus" +
      "/exported.ChainNameR\020destinationChain\022)\n" +
      "\020contract_address\030\005 \001(\tR\017contractAddress" +
      "\022\030\n\007payload\030\006 \001(\014R\007payload\022!\n\014payload_ha" +
      "sh\030\007 \001(\014R\013payloadHash\"\337\003\n\036ContractCallWi" +
      "thTokenSubmitted\022,\n\nmessage_id\030\001 \001(\tB\r\342\336" +
      "\037\tMessageIDR\tmessageId\022\026\n\006sender\030\002 \001(\tR\006" +
      "sender\022f\n\014source_chain\030\003 \001(\tBC\372\336\037?github" +
      ".com/axelarnetwork/axelar-core/x/nexus/e" +
      "xported.ChainNameR\013sourceChain\022p\n\021destin" +
      "ation_chain\030\004 \001(\tBC\372\336\037?github.com/axelar" +
      "network/axelar-core/x/nexus/exported.Cha" +
      "inNameR\020destinationChain\022)\n\020contract_add" +
      "ress\030\005 \001(\tR\017contractAddress\022\030\n\007payload\030\006" +
      " \001(\014R\007payload\022!\n\014payload_hash\030\007 \001(\014R\013pay" +
      "loadHash\0225\n\005asset\030\010 \001(\0132\031.cosmos.base.v1" +
      "beta1.CoinB\004\310\336\037\000R\005asset\"\332\003\n\tTokenSent\022s\n" +
      "\013transfer_id\030\001 \001(\004BR\342\336\037\nTransferID\372\336\037@gi" +
      "thub.com/axelarnetwork/axelar-core/x/nex" +
      "us/exported.TransferIDR\ntransferId\022\026\n\006se" +
      "nder\030\002 \001(\tR\006sender\022f\n\014source_chain\030\003 \001(\t" +
      "BC\372\336\037?github.com/axelarnetwork/axelar-co" +
      "re/x/nexus/exported.ChainNameR\013sourceCha" +
      "in\022p\n\021destination_chain\030\004 \001(\tBC\372\336\037?githu" +
      "b.com/axelarnetwork/axelar-core/x/nexus/" +
      "exported.ChainNameR\020destinationChain\022/\n\023" +
      "destination_address\030\005 \001(\tR\022destinationAd" +
      "dress\0225\n\005asset\030\006 \001(\0132\031.cosmos.base.v1bet" +
      "a1.CoinB\004\310\336\037\000R\005assetB\351\001\n\034com.axelar.axel" +
      "arnet.v1beta1B\013EventsProtoP\001Z6github.com" +
      "/axelarnetwork/axelar-core/x/axelarnet/t" +
      "ypes\242\002\003AAX\252\002\030Axelar.Axelarnet.V1beta1\312\002\030" +
      "Axelar\\Axelarnet\\V1beta1\342\002$Axelar\\Axelar" +
      "net\\V1beta1\\GPBMetadata\352\002\032Axelar::Axelar" +
      "net::V1beta1\310\343\036\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
        });
    internal_static_axelar_axelarnet_v1beta1_IBCTransferSent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_axelar_axelarnet_v1beta1_IBCTransferSent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_IBCTransferSent_descriptor,
        new java.lang.String[] { "Id", "Receipient", "Asset", "Sequence", "PortId", "ChannelId", "Recipient", });
    internal_static_axelar_axelarnet_v1beta1_IBCTransferCompleted_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_axelar_axelarnet_v1beta1_IBCTransferCompleted_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_IBCTransferCompleted_descriptor,
        new java.lang.String[] { "Id", "Sequence", "PortId", "ChannelId", });
    internal_static_axelar_axelarnet_v1beta1_IBCTransferFailed_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_axelar_axelarnet_v1beta1_IBCTransferFailed_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_IBCTransferFailed_descriptor,
        new java.lang.String[] { "Id", "Sequence", "PortId", "ChannelId", });
    internal_static_axelar_axelarnet_v1beta1_IBCTransferRetried_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_axelar_axelarnet_v1beta1_IBCTransferRetried_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_IBCTransferRetried_descriptor,
        new java.lang.String[] { "Id", "Receipient", "Asset", "Sequence", "PortId", "ChannelId", "Recipient", });
    internal_static_axelar_axelarnet_v1beta1_AxelarTransferCompleted_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_axelar_axelarnet_v1beta1_AxelarTransferCompleted_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_AxelarTransferCompleted_descriptor,
        new java.lang.String[] { "Id", "Receipient", "Asset", "Recipient", });
    internal_static_axelar_axelarnet_v1beta1_FeeCollected_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_axelar_axelarnet_v1beta1_FeeCollected_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_FeeCollected_descriptor,
        new java.lang.String[] { "Collector", "Fee", });
    internal_static_axelar_axelarnet_v1beta1_FeePaid_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_axelar_axelarnet_v1beta1_FeePaid_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_FeePaid_descriptor,
        new java.lang.String[] { "MessageId", "Recipient", "Fee", });
    internal_static_axelar_axelarnet_v1beta1_ContractCallSubmitted_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_axelar_axelarnet_v1beta1_ContractCallSubmitted_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_ContractCallSubmitted_descriptor,
        new java.lang.String[] { "MessageId", "Sender", "SourceChain", "DestinationChain", "ContractAddress", "Payload", "PayloadHash", });
    internal_static_axelar_axelarnet_v1beta1_ContractCallWithTokenSubmitted_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_axelar_axelarnet_v1beta1_ContractCallWithTokenSubmitted_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_ContractCallWithTokenSubmitted_descriptor,
        new java.lang.String[] { "MessageId", "Sender", "SourceChain", "DestinationChain", "ContractAddress", "Payload", "PayloadHash", "Asset", });
    internal_static_axelar_axelarnet_v1beta1_TokenSent_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_axelar_axelarnet_v1beta1_TokenSent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_TokenSent_descriptor,
        new java.lang.String[] { "TransferId", "Sender", "SourceChain", "DestinationChain", "DestinationAddress", "Asset", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.casttype);
    registry.add(com.gogoproto.GogoProto.customname);
    registry.add(com.gogoproto.GogoProto.messagenameAll);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

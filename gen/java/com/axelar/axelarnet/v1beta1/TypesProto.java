// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/axelarnet/v1beta1/types.proto

package com.axelar.axelarnet.v1beta1;

public final class TypesProto {
  private TypesProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_IBCTransfer_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_IBCTransfer_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_CosmosChain_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_CosmosChain_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_Asset_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_Asset_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_axelarnet_v1beta1_Fee_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_axelarnet_v1beta1_Fee_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$axelar/axelarnet/v1beta1/types.proto\022\030" +
      "axelar.axelarnet.v1beta1\032\024gogoproto/gogo" +
      ".proto\032\036cosmos/base/v1beta1/coin.proto\"\203" +
      "\005\n\013IBCTransfer\022I\n\006sender\030\001 \001(\014B1\372\336\037-gith" +
      "ub.com/cosmos/cosmos-sdk/types.AccAddres" +
      "sR\006sender\022\032\n\010receiver\030\002 \001(\tR\010receiver\0225\n" +
      "\005token\030\003 \001(\0132\031.cosmos.base.v1beta1.CoinB" +
      "\004\310\336\037\000R\005token\022#\n\007port_id\030\004 \001(\tB\n\342\336\037\006PortI" +
      "DR\006portId\022,\n\nchannel_id\030\005 \001(\tB\r\342\336\037\tChann" +
      "elIDR\tchannelId\022\036\n\010sequence\030\006 \001(\004B\002\030\001R\010s" +
      "equence\022Z\n\002id\030\007 \001(\004BJ\342\336\037\002ID\372\336\037@github.co" +
      "m/axelarnetwork/axelar-core/x/nexus/expo" +
      "rted.TransferIDR\002id\022D\n\006status\030\010 \001(\0162,.ax" +
      "elar.axelarnet.v1beta1.IBCTransfer.Statu" +
      "sR\006status\"\300\001\n\006Status\022/\n\022STATUS_UNSPECIFI" +
      "ED\020\000\032\027\212\235 \023TransferNonExistent\022\'\n\016STATUS_" +
      "PENDING\020\001\032\023\212\235 \017TransferPending\022+\n\020STATUS" +
      "_COMPLETED\020\002\032\025\212\235 \021TransferCompleted\022%\n\rS" +
      "TATUS_FAILED\020\003\032\022\212\235 \016TransferFailed\032\010\210\243\036\000" +
      "\250\244\036\001\"\360\001\n\013CosmosChain\022W\n\004name\030\001 \001(\tBC\372\336\037?" +
      "github.com/axelarnetwork/axelar-core/x/n" +
      "exus/exported.ChainNameR\004name\022&\n\010ibc_pat" +
      "h\030\002 \001(\tB\013\342\336\037\007IBCPathR\007ibcPath\022?\n\006assets\030" +
      "\003 \003(\0132\037.axelar.axelarnet.v1beta1.AssetB\006" +
      "\030\001\310\336\037\000R\006assets\022\037\n\013addr_prefix\030\004 \001(\tR\nadd" +
      "rPrefix\"p\n\005Asset\022\024\n\005denom\030\001 \001(\tR\005denom\022M" +
      "\n\nmin_amount\030\002 \001(\014B.\310\336\037\000\332\336\037&github.com/c" +
      "osmos/cosmos-sdk/types.IntR\tminAmount:\002\030" +
      "\001\"\217\001\n\003Fee\0227\n\006amount\030\001 \001(\0132\031.cosmos.base." +
      "v1beta1.CoinB\004\310\336\037\000R\006amount\022O\n\trecipient\030" +
      "\002 \001(\014B1\372\336\037-github.com/cosmos/cosmos-sdk/" +
      "types.AccAddressR\trecipientB\350\001\n\034com.axel" +
      "ar.axelarnet.v1beta1B\nTypesProtoP\001Z6gith" +
      "ub.com/axelarnetwork/axelar-core/x/axela" +
      "rnet/types\242\002\003AAX\252\002\030Axelar.Axelarnet.V1be" +
      "ta1\312\002\030Axelar\\Axelarnet\\V1beta1\342\002$Axelar\\" +
      "Axelarnet\\V1beta1\\GPBMetadata\352\002\032Axelar::" +
      "Axelarnet::V1beta1\310\341\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
        });
    internal_static_axelar_axelarnet_v1beta1_IBCTransfer_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_axelar_axelarnet_v1beta1_IBCTransfer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_IBCTransfer_descriptor,
        new java.lang.String[] { "Sender", "Receiver", "Token", "PortId", "ChannelId", "Sequence", "Id", "Status", });
    internal_static_axelar_axelarnet_v1beta1_CosmosChain_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_axelar_axelarnet_v1beta1_CosmosChain_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_CosmosChain_descriptor,
        new java.lang.String[] { "Name", "IbcPath", "Assets", "AddrPrefix", });
    internal_static_axelar_axelarnet_v1beta1_Asset_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_axelar_axelarnet_v1beta1_Asset_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_Asset_descriptor,
        new java.lang.String[] { "Denom", "MinAmount", });
    internal_static_axelar_axelarnet_v1beta1_Fee_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_axelar_axelarnet_v1beta1_Fee_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_axelarnet_v1beta1_Fee_descriptor,
        new java.lang.String[] { "Amount", "Recipient", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.casttype);
    registry.add(com.gogoproto.GogoProto.customname);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.enumvalueCustomname);
    registry.add(com.gogoproto.GogoProto.goprotoEnumPrefix);
    registry.add(com.gogoproto.GogoProto.goprotoEnumStringer);
    registry.add(com.gogoproto.GogoProto.goprotoGettersAll);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

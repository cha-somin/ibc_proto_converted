// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sommelier/cork/v2/genesis.proto

package com.cork.v2;

public final class GenesisProto {
  private GenesisProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cork_v2_GenesisState_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cork_v2_GenesisState_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cork_v2_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cork_v2_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037sommelier/cork/v2/genesis.proto\022\007cork." +
      "v2\032\034sommelier/cork/v2/cork.proto\032\024gogopr" +
      "oto/gogo.proto\"\240\002\n\014GenesisState\022-\n\006param" +
      "s\030\001 \001(\0132\017.cork.v2.ParamsB\004\310\336\037\000R\006params\0229" +
      "\n\ncellar_ids\030\002 \001(\0132\024.cork.v2.CellarIDSet" +
      "B\004\310\336\037\000R\tcellarIds\022-\n\022invalidation_nonce\030" +
      "\003 \001(\004R\021invalidationNonce\022?\n\017scheduled_co" +
      "rks\030\004 \003(\0132\026.cork.v2.ScheduledCorkR\016sched" +
      "uledCorks\0226\n\014cork_results\030\005 \003(\0132\023.cork.v" +
      "2.CorkResultR\013corkResults\"x\n\006Params\022n\n\016v" +
      "ote_threshold\030\001 \001(\tBG\310\336\037\000\332\336\037&github.com/" +
      "cosmos/cosmos-sdk/types.Dec\362\336\037\025yaml:\"vot" +
      "e_threshold\"R\rvoteThresholdB\206\001\n\013com.cork" +
      ".v2B\014GenesisProtoP\001Z,github.com/peggyjv/" +
      "sommelier/v4/x/cork/types\242\002\003CXX\252\002\007Cork.V" +
      "2\312\002\007Cork\\V2\342\002\023Cork\\V2\\GPBMetadata\352\002\010Cork" +
      "::V2b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.cork.v2.CorkProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_cork_v2_GenesisState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cork_v2_GenesisState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cork_v2_GenesisState_descriptor,
        new java.lang.String[] { "Params", "CellarIds", "InvalidationNonce", "ScheduledCorks", "CorkResults", });
    internal_static_cork_v2_Params_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cork_v2_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cork_v2_Params_descriptor,
        new java.lang.String[] { "VoteThreshold", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.cork.v2.CorkProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

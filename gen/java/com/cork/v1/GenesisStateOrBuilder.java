// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sommelier/cork/v1/genesis.proto

package com.cork.v1;

public interface GenesisStateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cork.v1.GenesisState)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.cork.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return Whether the params field is set.
   */
  boolean hasParams();
  /**
   * <code>.cork.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return The params.
   */
  com.cork.v1.Params getParams();
  /**
   * <code>.cork.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   */
  com.cork.v1.ParamsOrBuilder getParamsOrBuilder();

  /**
   * <code>.cork.v1.CellarIDSet cellar_ids = 2 [json_name = "cellarIds", (.gogoproto.nullable) = false];</code>
   * @return Whether the cellarIds field is set.
   */
  boolean hasCellarIds();
  /**
   * <code>.cork.v1.CellarIDSet cellar_ids = 2 [json_name = "cellarIds", (.gogoproto.nullable) = false];</code>
   * @return The cellarIds.
   */
  com.cork.v1.CellarIDSet getCellarIds();
  /**
   * <code>.cork.v1.CellarIDSet cellar_ids = 2 [json_name = "cellarIds", (.gogoproto.nullable) = false];</code>
   */
  com.cork.v1.CellarIDSetOrBuilder getCellarIdsOrBuilder();

  /**
   * <code>uint64 invalidation_nonce = 3 [json_name = "invalidationNonce"];</code>
   * @return The invalidationNonce.
   */
  long getInvalidationNonce();

  /**
   * <code>repeated .cork.v1.ValidatorCork corks = 4 [json_name = "corks"];</code>
   */
  java.util.List<com.cork.v1.ValidatorCork> 
      getCorksList();
  /**
   * <code>repeated .cork.v1.ValidatorCork corks = 4 [json_name = "corks"];</code>
   */
  com.cork.v1.ValidatorCork getCorks(int index);
  /**
   * <code>repeated .cork.v1.ValidatorCork corks = 4 [json_name = "corks"];</code>
   */
  int getCorksCount();
  /**
   * <code>repeated .cork.v1.ValidatorCork corks = 4 [json_name = "corks"];</code>
   */
  java.util.List<? extends com.cork.v1.ValidatorCorkOrBuilder> 
      getCorksOrBuilderList();
  /**
   * <code>repeated .cork.v1.ValidatorCork corks = 4 [json_name = "corks"];</code>
   */
  com.cork.v1.ValidatorCorkOrBuilder getCorksOrBuilder(
      int index);

  /**
   * <code>repeated .cork.v1.ScheduledCork scheduled_corks = 5 [json_name = "scheduledCorks"];</code>
   */
  java.util.List<com.cork.v1.ScheduledCork> 
      getScheduledCorksList();
  /**
   * <code>repeated .cork.v1.ScheduledCork scheduled_corks = 5 [json_name = "scheduledCorks"];</code>
   */
  com.cork.v1.ScheduledCork getScheduledCorks(int index);
  /**
   * <code>repeated .cork.v1.ScheduledCork scheduled_corks = 5 [json_name = "scheduledCorks"];</code>
   */
  int getScheduledCorksCount();
  /**
   * <code>repeated .cork.v1.ScheduledCork scheduled_corks = 5 [json_name = "scheduledCorks"];</code>
   */
  java.util.List<? extends com.cork.v1.ScheduledCorkOrBuilder> 
      getScheduledCorksOrBuilderList();
  /**
   * <code>repeated .cork.v1.ScheduledCork scheduled_corks = 5 [json_name = "scheduledCorks"];</code>
   */
  com.cork.v1.ScheduledCorkOrBuilder getScheduledCorksOrBuilder(
      int index);
}

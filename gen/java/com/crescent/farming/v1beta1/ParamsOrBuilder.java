// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/farming/v1beta1/farming.proto

package com.crescent.farming.v1beta1;

public interface ParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:crescent.farming.v1beta1.Params)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * private_plan_creation_fee specifies the fee for plan creation
   * this fee prevents from spamming and is collected in the community pool
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [json_name = "privatePlanCreationFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.Coin> 
      getPrivatePlanCreationFeeList();
  /**
   * <pre>
   * private_plan_creation_fee specifies the fee for plan creation
   * this fee prevents from spamming and is collected in the community pool
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [json_name = "privatePlanCreationFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.Coin getPrivatePlanCreationFee(int index);
  /**
   * <pre>
   * private_plan_creation_fee specifies the fee for plan creation
   * this fee prevents from spamming and is collected in the community pool
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [json_name = "privatePlanCreationFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  int getPrivatePlanCreationFeeCount();
  /**
   * <pre>
   * private_plan_creation_fee specifies the fee for plan creation
   * this fee prevents from spamming and is collected in the community pool
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [json_name = "privatePlanCreationFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getPrivatePlanCreationFeeOrBuilderList();
  /**
   * <pre>
   * private_plan_creation_fee specifies the fee for plan creation
   * this fee prevents from spamming and is collected in the community pool
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [json_name = "privatePlanCreationFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getPrivatePlanCreationFeeOrBuilder(
      int index);

  /**
   * <pre>
   * next_epoch_days is the epoch length in number of days
   * it updates internal state called CurrentEpochDays that is used to process
   * staking and reward distribution in end blocker
   * </pre>
   *
   * <code>uint32 next_epoch_days = 2 [json_name = "nextEpochDays", (.gogoproto.moretags) = "yaml:&#92;"next_epoch_days&#92;""];</code>
   * @return The nextEpochDays.
   */
  int getNextEpochDays();

  /**
   * <pre>
   * farming_fee_collector is the module account address to collect fees within the farming module
   * </pre>
   *
   * <code>string farming_fee_collector = 3 [json_name = "farmingFeeCollector", (.gogoproto.moretags) = "yaml:&#92;"farming_fee_collector&#92;""];</code>
   * @return The farmingFeeCollector.
   */
  java.lang.String getFarmingFeeCollector();
  /**
   * <pre>
   * farming_fee_collector is the module account address to collect fees within the farming module
   * </pre>
   *
   * <code>string farming_fee_collector = 3 [json_name = "farmingFeeCollector", (.gogoproto.moretags) = "yaml:&#92;"farming_fee_collector&#92;""];</code>
   * @return The bytes for farmingFeeCollector.
   */
  com.google.protobuf.ByteString
      getFarmingFeeCollectorBytes();

  /**
   * <pre>
   * delayed_staking_gas_fee is used to impose gas fee for the delayed staking
   * </pre>
   *
   * <code>uint64 delayed_staking_gas_fee = 4 [json_name = "delayedStakingGasFee", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas", (.gogoproto.moretags) = "yaml:&#92;"delayed_staking_gas_fee&#92;""];</code>
   * @return The delayedStakingGasFee.
   */
  long getDelayedStakingGasFee();

  /**
   * <pre>
   * max_num_private_plans is the maximum number of active private plans
   * </pre>
   *
   * <code>uint32 max_num_private_plans = 5 [json_name = "maxNumPrivatePlans", (.gogoproto.moretags) = "yaml:&#92;"max_num_private_plans&#92;""];</code>
   * @return The maxNumPrivatePlans.
   */
  int getMaxNumPrivatePlans();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/farming/v1beta1/farming.proto

package com.crescent.farming.v1beta1;

public interface FixedAmountPlanOrBuilder extends
    // @@protoc_insertion_point(interface_extends:crescent.farming.v1beta1.FixedAmountPlan)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
   * @return Whether the basePlan field is set.
   */
  boolean hasBasePlan();
  /**
   * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
   * @return The basePlan.
   */
  com.crescent.farming.v1beta1.BasePlan getBasePlan();
  /**
   * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
   */
  com.crescent.farming.v1beta1.BasePlanOrBuilder getBasePlanOrBuilder();

  /**
   * <pre>
   * epoch_amount specifies the distributing amount for each epoch
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.Coin> 
      getEpochAmountList();
  /**
   * <pre>
   * epoch_amount specifies the distributing amount for each epoch
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.Coin getEpochAmount(int index);
  /**
   * <pre>
   * epoch_amount specifies the distributing amount for each epoch
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  int getEpochAmountCount();
  /**
   * <pre>
   * epoch_amount specifies the distributing amount for each epoch
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getEpochAmountOrBuilderList();
  /**
   * <pre>
   * epoch_amount specifies the distributing amount for each epoch
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getEpochAmountOrBuilder(
      int index);
}

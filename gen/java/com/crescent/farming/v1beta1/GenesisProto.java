// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/farming/v1beta1/genesis.proto

package com.crescent.farming.v1beta1;

public final class GenesisProto {
  private GenesisProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_GenesisState_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_GenesisState_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_PlanRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_PlanRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_StakingRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_StakingRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_QueuedStakingRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_QueuedStakingRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_TotalStakingsRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_TotalStakingsRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_HistoricalRewardsRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_HistoricalRewardsRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_OutstandingRewardsRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_OutstandingRewardsRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_UnharvestedRewardsRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_UnharvestedRewardsRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_CurrentEpochRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_CurrentEpochRecord_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&crescent/farming/v1beta1/genesis.proto" +
      "\022\030crescent.farming.v1beta1\032\031google/proto" +
      "buf/any.proto\032\024gogoproto/gogo.proto\032\031cos" +
      "mos_proto/cosmos.proto\032\036cosmos/base/v1be" +
      "ta1/coin.proto\032&crescent/farming/v1beta1" +
      "/farming.proto\032\037google/protobuf/timestam" +
      "p.proto\"\233\014\n\014GenesisState\022>\n\006params\030\001 \001(\013" +
      "2 .crescent.farming.v1beta1.ParamsB\004\310\336\037\000" +
      "R\006params\022?\n\016global_plan_id\030\002 \001(\004B\031\362\336\037\025ya" +
      "ml:\"global_plan_id\"R\014globalPlanId\022d\n\014pla" +
      "n_records\030\003 \003(\0132$.crescent.farming.v1bet" +
      "a1.PlanRecordB\033\310\336\037\000\362\336\037\023yaml:\"plan_record" +
      "s\"R\013planRecords\022p\n\017staking_records\030\004 \003(\013" +
      "2\'.crescent.farming.v1beta1.StakingRecor" +
      "dB\036\310\336\037\000\362\336\037\026yaml:\"staking_records\"R\016staki" +
      "ngRecords\022\212\001\n\026queued_staking_records\030\005 \003" +
      "(\0132-.crescent.farming.v1beta1.QueuedStak" +
      "ingRecordB%\310\336\037\000\362\336\037\035yaml:\"queued_staking_" +
      "records\"R\024queuedStakingRecords\022\232\001\n\032histo" +
      "rical_rewards_records\030\006 \003(\01321.crescent.f" +
      "arming.v1beta1.HistoricalRewardsRecordB)" +
      "\310\336\037\000\362\336\037!yaml:\"historical_rewards_records" +
      "\"R\030historicalRewardsRecords\022\236\001\n\033outstand" +
      "ing_rewards_records\030\007 \003(\01322.crescent.far" +
      "ming.v1beta1.OutstandingRewardsRecordB*\310" +
      "\336\037\000\362\336\037\"yaml:\"outstanding_rewards_records" +
      "\"R\031outstandingRewardsRecords\022\236\001\n\033unharve" +
      "sted_rewards_records\030\010 \003(\01322.crescent.fa" +
      "rming.v1beta1.UnharvestedRewardsRecordB*" +
      "\310\336\037\000\362\336\037\"yaml:\"unharvested_rewards_record" +
      "s\"R\031unharvestedRewardsRecords\022\206\001\n\025curren" +
      "t_epoch_records\030\t \003(\0132,.crescent.farming" +
      ".v1beta1.CurrentEpochRecordB$\310\336\037\000\362\336\037\034yam" +
      "l:\"current_epoch_records\"R\023currentEpochR" +
      "ecords\022\212\001\n\026total_stakings_records\030\n \003(\0132" +
      "-.crescent.farming.v1beta1.TotalStakings" +
      "RecordB%\310\336\037\000\362\336\037\035yaml:\"total_stakings_rec" +
      "ords\"R\024totalStakingsRecords\022\223\001\n\021reward_p" +
      "ool_coins\030\013 \003(\0132\031.cosmos.base.v1beta1.Co" +
      "inBL\310\336\037\000\362\336\037\030yaml:\"reward_pool_coins\"\252\337\037(" +
      "github.com/cosmos/cosmos-sdk/types.Coins" +
      "R\017rewardPoolCoins\022b\n\017last_epoch_time\030\014 \001" +
      "(\0132\032.google.protobuf.TimestampB\036\362\336\037\026yaml" +
      ":\"last_epoch_time\"\220\337\037\001R\rlastEpochTime\022,\n" +
      "\022current_epoch_days\030\r \001(\rR\020currentEpochD" +
      "ays:\010\210\240\037\000\350\240\037\000\"\350\001\n\nPlanRecord\0227\n\004plan\030\001 \001" +
      "(\0132\024.google.protobuf.AnyB\r\310\336\037\000\312\264-\005PlanIR" +
      "\004plan\022\226\001\n\022farming_pool_coins\030\002 \003(\0132\031.cos" +
      "mos.base.v1beta1.CoinBM\310\336\037\000\362\336\037\031yaml:\"far" +
      "ming_pool_coins\"\252\337\037(github.com/cosmos/co" +
      "smos-sdk/types.CoinsR\020farmingPoolCoins:\010" +
      "\210\240\037\000\350\240\037\000\"\301\001\n\rStakingRecord\022K\n\022staking_co" +
      "in_denom\030\001 \001(\tB\035\362\336\037\031yaml:\"staking_coin_d" +
      "enom\"R\020stakingCoinDenom\022\026\n\006farmer\030\002 \001(\tR" +
      "\006farmer\022A\n\007staking\030\003 \001(\0132!.crescent.farm" +
      "ing.v1beta1.StakingB\004\310\336\037\000R\007staking:\010\210\240\037\000" +
      "\350\240\037\000\"\307\002\n\023QueuedStakingRecord\022R\n\010end_time" +
      "\030\001 \001(\0132\032.google.protobuf.TimestampB\033\310\336\037\000" +
      "\362\336\037\017yaml:\"end_time\"\220\337\037\001R\007endTime\022K\n\022stak" +
      "ing_coin_denom\030\002 \001(\tB\035\362\336\037\031yaml:\"staking_" +
      "coin_denom\"R\020stakingCoinDenom\022\026\n\006farmer\030" +
      "\003 \001(\tR\006farmer\022m\n\016queued_staking\030\004 \001(\0132\'." +
      "crescent.farming.v1beta1.QueuedStakingB\035" +
      "\310\336\037\000\362\336\037\025yaml:\"queued_staking\"R\rqueuedSta" +
      "king:\010\210\240\037\000\350\240\037\000\"\326\002\n\023TotalStakingsRecord\022K" +
      "\n\022staking_coin_denom\030\001 \001(\tB\035\362\336\037\031yaml:\"st" +
      "aking_coin_denom\"R\020stakingCoinDenom\022F\n\006a" +
      "mount\030\002 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/c" +
      "osmos-sdk/types.IntR\006amount\022\237\001\n\025staking_" +
      "reserve_coins\030\t \003(\0132\031.cosmos.base.v1beta" +
      "1.CoinBP\310\336\037\000\362\336\037\034yaml:\"staking_reserve_co" +
      "ins\"\252\337\037(github.com/cosmos/cosmos-sdk/typ" +
      "es.CoinsR\023stakingReserveCoins:\010\210\240\037\000\350\240\037\000\"" +
      "\205\002\n\027HistoricalRewardsRecord\022K\n\022staking_c" +
      "oin_denom\030\001 \001(\tB\035\362\336\037\031yaml:\"staking_coin_" +
      "denom\"R\020stakingCoinDenom\022\024\n\005epoch\030\002 \001(\004R" +
      "\005epoch\022}\n\022historical_rewards\030\003 \001(\0132+.cre" +
      "scent.farming.v1beta1.HistoricalRewardsB" +
      "!\310\336\037\000\362\336\037\031yaml:\"historical_rewards\"R\021hist" +
      "oricalRewards:\010\210\240\037\000\350\240\037\000\"\365\001\n\030OutstandingR" +
      "ewardsRecord\022K\n\022staking_coin_denom\030\001 \001(\t" +
      "B\035\362\336\037\031yaml:\"staking_coin_denom\"R\020staking" +
      "CoinDenom\022\201\001\n\023outstanding_rewards\030\002 \001(\0132" +
      ",.crescent.farming.v1beta1.OutstandingRe" +
      "wardsB\"\310\336\037\000\362\336\037\032yaml:\"outstanding_rewards" +
      "\"R\022outstandingRewards:\010\210\240\037\000\350\240\037\000\"\215\002\n\030Unha" +
      "rvestedRewardsRecord\022\026\n\006farmer\030\001 \001(\tR\006fa" +
      "rmer\022K\n\022staking_coin_denom\030\002 \001(\tB\035\362\336\037\031ya" +
      "ml:\"staking_coin_denom\"R\020stakingCoinDeno" +
      "m\022\201\001\n\023unharvested_rewards\030\003 \001(\0132,.cresce" +
      "nt.farming.v1beta1.UnharvestedRewardsB\"\310" +
      "\336\037\000\362\336\037\032yaml:\"unharvested_rewards\"R\022unhar" +
      "vestedRewards:\010\210\240\037\000\350\240\037\000\"\252\001\n\022CurrentEpoch" +
      "Record\022K\n\022staking_coin_denom\030\001 \001(\tB\035\362\336\037\031" +
      "yaml:\"staking_coin_denom\"R\020stakingCoinDe" +
      "nom\022=\n\rcurrent_epoch\030\002 \001(\004B\030\362\336\037\024yaml:\"cu" +
      "rrent_epoch\"R\014currentEpoch:\010\210\240\037\000\350\240\037\000B\353\001\n" +
      "\034com.crescent.farming.v1beta1B\014GenesisPr" +
      "otoP\001Z7github.com/crescent-network/cresc" +
      "ent/v5/x/farming/types\242\002\003CFX\252\002\030Crescent." +
      "Farming.V1beta1\312\002\030Crescent\\Farming\\V1bet" +
      "a1\342\002$Crescent\\Farming\\V1beta1\\GPBMetadat" +
      "a\352\002\032Crescent::Farming::V1beta1\250\342\036\001b\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.crescent.farming.v1beta1.FarmingProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_crescent_farming_v1beta1_GenesisState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_crescent_farming_v1beta1_GenesisState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_GenesisState_descriptor,
        new java.lang.String[] { "Params", "GlobalPlanId", "PlanRecords", "StakingRecords", "QueuedStakingRecords", "HistoricalRewardsRecords", "OutstandingRewardsRecords", "UnharvestedRewardsRecords", "CurrentEpochRecords", "TotalStakingsRecords", "RewardPoolCoins", "LastEpochTime", "CurrentEpochDays", });
    internal_static_crescent_farming_v1beta1_PlanRecord_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_crescent_farming_v1beta1_PlanRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_PlanRecord_descriptor,
        new java.lang.String[] { "Plan", "FarmingPoolCoins", });
    internal_static_crescent_farming_v1beta1_StakingRecord_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_crescent_farming_v1beta1_StakingRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_StakingRecord_descriptor,
        new java.lang.String[] { "StakingCoinDenom", "Farmer", "Staking", });
    internal_static_crescent_farming_v1beta1_QueuedStakingRecord_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_crescent_farming_v1beta1_QueuedStakingRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_QueuedStakingRecord_descriptor,
        new java.lang.String[] { "EndTime", "StakingCoinDenom", "Farmer", "QueuedStaking", });
    internal_static_crescent_farming_v1beta1_TotalStakingsRecord_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_crescent_farming_v1beta1_TotalStakingsRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_TotalStakingsRecord_descriptor,
        new java.lang.String[] { "StakingCoinDenom", "Amount", "StakingReserveCoins", });
    internal_static_crescent_farming_v1beta1_HistoricalRewardsRecord_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_crescent_farming_v1beta1_HistoricalRewardsRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_HistoricalRewardsRecord_descriptor,
        new java.lang.String[] { "StakingCoinDenom", "Epoch", "HistoricalRewards", });
    internal_static_crescent_farming_v1beta1_OutstandingRewardsRecord_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_crescent_farming_v1beta1_OutstandingRewardsRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_OutstandingRewardsRecord_descriptor,
        new java.lang.String[] { "StakingCoinDenom", "OutstandingRewards", });
    internal_static_crescent_farming_v1beta1_UnharvestedRewardsRecord_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_crescent_farming_v1beta1_UnharvestedRewardsRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_UnharvestedRewardsRecord_descriptor,
        new java.lang.String[] { "Farmer", "StakingCoinDenom", "UnharvestedRewards", });
    internal_static_crescent_farming_v1beta1_CurrentEpochRecord_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_crescent_farming_v1beta1_CurrentEpochRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_CurrentEpochRecord_descriptor,
        new java.lang.String[] { "StakingCoinDenom", "CurrentEpoch", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.cosmos_proto.CosmosProto.acceptsInterface);
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.equalAll);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.AnyProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.crescent.farming.v1beta1.FarmingProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

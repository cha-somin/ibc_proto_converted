// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/farming/v1beta1/proposal.proto

package com.crescent.farming.v1beta1;

/**
 * <pre>
 * AddPlanRequest details a proposal for creating a public plan.
 * </pre>
 *
 * Protobuf type {@code crescent.farming.v1beta1.AddPlanRequest}
 */
public final class AddPlanRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.AddPlanRequest)
    AddPlanRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AddPlanRequest.newBuilder() to construct.
  private AddPlanRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AddPlanRequest() {
    name_ = "";
    farmingPoolAddress_ = "";
    terminationAddress_ = "";
    stakingCoinWeights_ = java.util.Collections.emptyList();
    epochAmount_ = java.util.Collections.emptyList();
    epochRatio_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AddPlanRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.crescent.farming.v1beta1.ProposalProto.internal_static_crescent_farming_v1beta1_AddPlanRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.crescent.farming.v1beta1.ProposalProto.internal_static_crescent_farming_v1beta1_AddPlanRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.crescent.farming.v1beta1.AddPlanRequest.class, com.crescent.farming.v1beta1.AddPlanRequest.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * name specifies the plan name for display
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * name specifies the plan name for display
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FARMING_POOL_ADDRESS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object farmingPoolAddress_ = "";
  /**
   * <pre>
   * farming_pool_address defines the bech32-encoded address of the farming pool
   * </pre>
   *
   * <code>string farming_pool_address = 2 [json_name = "farmingPoolAddress", (.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
   * @return The farmingPoolAddress.
   */
  @java.lang.Override
  public java.lang.String getFarmingPoolAddress() {
    java.lang.Object ref = farmingPoolAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      farmingPoolAddress_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * farming_pool_address defines the bech32-encoded address of the farming pool
   * </pre>
   *
   * <code>string farming_pool_address = 2 [json_name = "farmingPoolAddress", (.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
   * @return The bytes for farmingPoolAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFarmingPoolAddressBytes() {
    java.lang.Object ref = farmingPoolAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      farmingPoolAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TERMINATION_ADDRESS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object terminationAddress_ = "";
  /**
   * <pre>
   * termination_address defines the bech32-encoded address that terminates plan
   * when the plan ends after the end time, the balance of farming pool address
   * is transferred to the termination address
   * </pre>
   *
   * <code>string termination_address = 3 [json_name = "terminationAddress", (.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
   * @return The terminationAddress.
   */
  @java.lang.Override
  public java.lang.String getTerminationAddress() {
    java.lang.Object ref = terminationAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      terminationAddress_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * termination_address defines the bech32-encoded address that terminates plan
   * when the plan ends after the end time, the balance of farming pool address
   * is transferred to the termination address
   * </pre>
   *
   * <code>string termination_address = 3 [json_name = "terminationAddress", (.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
   * @return The bytes for terminationAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTerminationAddressBytes() {
    java.lang.Object ref = terminationAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      terminationAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STAKING_COIN_WEIGHTS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.DecCoin> stakingCoinWeights_;
  /**
   * <pre>
   * staking_coin_weights specifies coin weights for the plan
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.DecCoin> getStakingCoinWeightsList() {
    return stakingCoinWeights_;
  }
  /**
   * <pre>
   * staking_coin_weights specifies coin weights for the plan
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.DecCoinOrBuilder> 
      getStakingCoinWeightsOrBuilderList() {
    return stakingCoinWeights_;
  }
  /**
   * <pre>
   * staking_coin_weights specifies coin weights for the plan
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
   */
  @java.lang.Override
  public int getStakingCoinWeightsCount() {
    return stakingCoinWeights_.size();
  }
  /**
   * <pre>
   * staking_coin_weights specifies coin weights for the plan
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.DecCoin getStakingCoinWeights(int index) {
    return stakingCoinWeights_.get(index);
  }
  /**
   * <pre>
   * staking_coin_weights specifies coin weights for the plan
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.DecCoinOrBuilder getStakingCoinWeightsOrBuilder(
      int index) {
    return stakingCoinWeights_.get(index);
  }

  public static final int START_TIME_FIELD_NUMBER = 5;
  private com.google.protobuf.Timestamp startTime_;
  /**
   * <pre>
   * start_time specifies the start time of the plan
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 5 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
   * @return Whether the startTime field is set.
   */
  @java.lang.Override
  public boolean hasStartTime() {
    return startTime_ != null;
  }
  /**
   * <pre>
   * start_time specifies the start time of the plan
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 5 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
   * @return The startTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getStartTime() {
    return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
  }
  /**
   * <pre>
   * start_time specifies the start time of the plan
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 5 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
    return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
  }

  public static final int END_TIME_FIELD_NUMBER = 6;
  private com.google.protobuf.Timestamp endTime_;
  /**
   * <pre>
   * end_time specifies the end time of the plan
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 6 [json_name = "endTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
   * @return Whether the endTime field is set.
   */
  @java.lang.Override
  public boolean hasEndTime() {
    return endTime_ != null;
  }
  /**
   * <pre>
   * end_time specifies the end time of the plan
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 6 [json_name = "endTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
   * @return The endTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getEndTime() {
    return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
  }
  /**
   * <pre>
   * end_time specifies the end time of the plan
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 6 [json_name = "endTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
    return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
  }

  public static final int EPOCH_AMOUNT_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> epochAmount_;
  /**
   * <pre>
   * epoch_amount specifies the distributing amount for each epoch
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getEpochAmountList() {
    return epochAmount_;
  }
  /**
   * <pre>
   * epoch_amount specifies the distributing amount for each epoch
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getEpochAmountOrBuilderList() {
    return epochAmount_;
  }
  /**
   * <pre>
   * epoch_amount specifies the distributing amount for each epoch
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getEpochAmountCount() {
    return epochAmount_.size();
  }
  /**
   * <pre>
   * epoch_amount specifies the distributing amount for each epoch
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getEpochAmount(int index) {
    return epochAmount_.get(index);
  }
  /**
   * <pre>
   * epoch_amount specifies the distributing amount for each epoch
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getEpochAmountOrBuilder(
      int index) {
    return epochAmount_.get(index);
  }

  public static final int EPOCH_RATIO_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object epochRatio_ = "";
  /**
   * <pre>
   * epoch_ratio specifies the distributing amount by ratio
   * </pre>
   *
   * <code>string epoch_ratio = 8 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
   * @return The epochRatio.
   */
  @java.lang.Override
  public java.lang.String getEpochRatio() {
    java.lang.Object ref = epochRatio_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      epochRatio_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * epoch_ratio specifies the distributing amount by ratio
   * </pre>
   *
   * <code>string epoch_ratio = 8 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
   * @return The bytes for epochRatio.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEpochRatioBytes() {
    java.lang.Object ref = epochRatio_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      epochRatio_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(farmingPoolAddress_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, farmingPoolAddress_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(terminationAddress_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, terminationAddress_);
    }
    for (int i = 0; i < stakingCoinWeights_.size(); i++) {
      output.writeMessage(4, stakingCoinWeights_.get(i));
    }
    if (startTime_ != null) {
      output.writeMessage(5, getStartTime());
    }
    if (endTime_ != null) {
      output.writeMessage(6, getEndTime());
    }
    for (int i = 0; i < epochAmount_.size(); i++) {
      output.writeMessage(7, epochAmount_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(epochRatio_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, epochRatio_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(farmingPoolAddress_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, farmingPoolAddress_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(terminationAddress_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, terminationAddress_);
    }
    for (int i = 0; i < stakingCoinWeights_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, stakingCoinWeights_.get(i));
    }
    if (startTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getStartTime());
    }
    if (endTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getEndTime());
    }
    for (int i = 0; i < epochAmount_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, epochAmount_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(epochRatio_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, epochRatio_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.crescent.farming.v1beta1.AddPlanRequest)) {
      return super.equals(obj);
    }
    com.crescent.farming.v1beta1.AddPlanRequest other = (com.crescent.farming.v1beta1.AddPlanRequest) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getFarmingPoolAddress()
        .equals(other.getFarmingPoolAddress())) return false;
    if (!getTerminationAddress()
        .equals(other.getTerminationAddress())) return false;
    if (!getStakingCoinWeightsList()
        .equals(other.getStakingCoinWeightsList())) return false;
    if (hasStartTime() != other.hasStartTime()) return false;
    if (hasStartTime()) {
      if (!getStartTime()
          .equals(other.getStartTime())) return false;
    }
    if (hasEndTime() != other.hasEndTime()) return false;
    if (hasEndTime()) {
      if (!getEndTime()
          .equals(other.getEndTime())) return false;
    }
    if (!getEpochAmountList()
        .equals(other.getEpochAmountList())) return false;
    if (!getEpochRatio()
        .equals(other.getEpochRatio())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + FARMING_POOL_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getFarmingPoolAddress().hashCode();
    hash = (37 * hash) + TERMINATION_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getTerminationAddress().hashCode();
    if (getStakingCoinWeightsCount() > 0) {
      hash = (37 * hash) + STAKING_COIN_WEIGHTS_FIELD_NUMBER;
      hash = (53 * hash) + getStakingCoinWeightsList().hashCode();
    }
    if (hasStartTime()) {
      hash = (37 * hash) + START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime().hashCode();
    }
    if (hasEndTime()) {
      hash = (37 * hash) + END_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getEndTime().hashCode();
    }
    if (getEpochAmountCount() > 0) {
      hash = (37 * hash) + EPOCH_AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getEpochAmountList().hashCode();
    }
    hash = (37 * hash) + EPOCH_RATIO_FIELD_NUMBER;
    hash = (53 * hash) + getEpochRatio().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.crescent.farming.v1beta1.AddPlanRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.AddPlanRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.AddPlanRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.AddPlanRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.AddPlanRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.AddPlanRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.AddPlanRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.farming.v1beta1.AddPlanRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.crescent.farming.v1beta1.AddPlanRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.crescent.farming.v1beta1.AddPlanRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.AddPlanRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.farming.v1beta1.AddPlanRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.crescent.farming.v1beta1.AddPlanRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * AddPlanRequest details a proposal for creating a public plan.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.AddPlanRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.AddPlanRequest)
      com.crescent.farming.v1beta1.AddPlanRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.crescent.farming.v1beta1.ProposalProto.internal_static_crescent_farming_v1beta1_AddPlanRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.crescent.farming.v1beta1.ProposalProto.internal_static_crescent_farming_v1beta1_AddPlanRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.crescent.farming.v1beta1.AddPlanRequest.class, com.crescent.farming.v1beta1.AddPlanRequest.Builder.class);
    }

    // Construct using com.crescent.farming.v1beta1.AddPlanRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      farmingPoolAddress_ = "";
      terminationAddress_ = "";
      if (stakingCoinWeightsBuilder_ == null) {
        stakingCoinWeights_ = java.util.Collections.emptyList();
      } else {
        stakingCoinWeights_ = null;
        stakingCoinWeightsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      startTime_ = null;
      if (startTimeBuilder_ != null) {
        startTimeBuilder_.dispose();
        startTimeBuilder_ = null;
      }
      endTime_ = null;
      if (endTimeBuilder_ != null) {
        endTimeBuilder_.dispose();
        endTimeBuilder_ = null;
      }
      if (epochAmountBuilder_ == null) {
        epochAmount_ = java.util.Collections.emptyList();
      } else {
        epochAmount_ = null;
        epochAmountBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      epochRatio_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.crescent.farming.v1beta1.ProposalProto.internal_static_crescent_farming_v1beta1_AddPlanRequest_descriptor;
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.AddPlanRequest getDefaultInstanceForType() {
      return com.crescent.farming.v1beta1.AddPlanRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.AddPlanRequest build() {
      com.crescent.farming.v1beta1.AddPlanRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.AddPlanRequest buildPartial() {
      com.crescent.farming.v1beta1.AddPlanRequest result = new com.crescent.farming.v1beta1.AddPlanRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.crescent.farming.v1beta1.AddPlanRequest result) {
      if (stakingCoinWeightsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          stakingCoinWeights_ = java.util.Collections.unmodifiableList(stakingCoinWeights_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.stakingCoinWeights_ = stakingCoinWeights_;
      } else {
        result.stakingCoinWeights_ = stakingCoinWeightsBuilder_.build();
      }
      if (epochAmountBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          epochAmount_ = java.util.Collections.unmodifiableList(epochAmount_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.epochAmount_ = epochAmount_;
      } else {
        result.epochAmount_ = epochAmountBuilder_.build();
      }
    }

    private void buildPartial0(com.crescent.farming.v1beta1.AddPlanRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.farmingPoolAddress_ = farmingPoolAddress_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.terminationAddress_ = terminationAddress_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.startTime_ = startTimeBuilder_ == null
            ? startTime_
            : startTimeBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.endTime_ = endTimeBuilder_ == null
            ? endTime_
            : endTimeBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.epochRatio_ = epochRatio_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.crescent.farming.v1beta1.AddPlanRequest) {
        return mergeFrom((com.crescent.farming.v1beta1.AddPlanRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.crescent.farming.v1beta1.AddPlanRequest other) {
      if (other == com.crescent.farming.v1beta1.AddPlanRequest.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getFarmingPoolAddress().isEmpty()) {
        farmingPoolAddress_ = other.farmingPoolAddress_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getTerminationAddress().isEmpty()) {
        terminationAddress_ = other.terminationAddress_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (stakingCoinWeightsBuilder_ == null) {
        if (!other.stakingCoinWeights_.isEmpty()) {
          if (stakingCoinWeights_.isEmpty()) {
            stakingCoinWeights_ = other.stakingCoinWeights_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureStakingCoinWeightsIsMutable();
            stakingCoinWeights_.addAll(other.stakingCoinWeights_);
          }
          onChanged();
        }
      } else {
        if (!other.stakingCoinWeights_.isEmpty()) {
          if (stakingCoinWeightsBuilder_.isEmpty()) {
            stakingCoinWeightsBuilder_.dispose();
            stakingCoinWeightsBuilder_ = null;
            stakingCoinWeights_ = other.stakingCoinWeights_;
            bitField0_ = (bitField0_ & ~0x00000008);
            stakingCoinWeightsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStakingCoinWeightsFieldBuilder() : null;
          } else {
            stakingCoinWeightsBuilder_.addAllMessages(other.stakingCoinWeights_);
          }
        }
      }
      if (other.hasStartTime()) {
        mergeStartTime(other.getStartTime());
      }
      if (other.hasEndTime()) {
        mergeEndTime(other.getEndTime());
      }
      if (epochAmountBuilder_ == null) {
        if (!other.epochAmount_.isEmpty()) {
          if (epochAmount_.isEmpty()) {
            epochAmount_ = other.epochAmount_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureEpochAmountIsMutable();
            epochAmount_.addAll(other.epochAmount_);
          }
          onChanged();
        }
      } else {
        if (!other.epochAmount_.isEmpty()) {
          if (epochAmountBuilder_.isEmpty()) {
            epochAmountBuilder_.dispose();
            epochAmountBuilder_ = null;
            epochAmount_ = other.epochAmount_;
            bitField0_ = (bitField0_ & ~0x00000040);
            epochAmountBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getEpochAmountFieldBuilder() : null;
          } else {
            epochAmountBuilder_.addAllMessages(other.epochAmount_);
          }
        }
      }
      if (!other.getEpochRatio().isEmpty()) {
        epochRatio_ = other.epochRatio_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              farmingPoolAddress_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              terminationAddress_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              com.cosmos.base.v1beta1.DecCoin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.DecCoin.parser(),
                      extensionRegistry);
              if (stakingCoinWeightsBuilder_ == null) {
                ensureStakingCoinWeightsIsMutable();
                stakingCoinWeights_.add(m);
              } else {
                stakingCoinWeightsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getStartTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getEndTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (epochAmountBuilder_ == null) {
                ensureEpochAmountIsMutable();
                epochAmount_.add(m);
              } else {
                epochAmountBuilder_.addMessage(m);
              }
              break;
            } // case 58
            case 66: {
              epochRatio_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * name specifies the plan name for display
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * name specifies the plan name for display
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * name specifies the plan name for display
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * name specifies the plan name for display
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * name specifies the plan name for display
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object farmingPoolAddress_ = "";
    /**
     * <pre>
     * farming_pool_address defines the bech32-encoded address of the farming pool
     * </pre>
     *
     * <code>string farming_pool_address = 2 [json_name = "farmingPoolAddress", (.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
     * @return The farmingPoolAddress.
     */
    public java.lang.String getFarmingPoolAddress() {
      java.lang.Object ref = farmingPoolAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        farmingPoolAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * farming_pool_address defines the bech32-encoded address of the farming pool
     * </pre>
     *
     * <code>string farming_pool_address = 2 [json_name = "farmingPoolAddress", (.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
     * @return The bytes for farmingPoolAddress.
     */
    public com.google.protobuf.ByteString
        getFarmingPoolAddressBytes() {
      java.lang.Object ref = farmingPoolAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        farmingPoolAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * farming_pool_address defines the bech32-encoded address of the farming pool
     * </pre>
     *
     * <code>string farming_pool_address = 2 [json_name = "farmingPoolAddress", (.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
     * @param value The farmingPoolAddress to set.
     * @return This builder for chaining.
     */
    public Builder setFarmingPoolAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      farmingPoolAddress_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * farming_pool_address defines the bech32-encoded address of the farming pool
     * </pre>
     *
     * <code>string farming_pool_address = 2 [json_name = "farmingPoolAddress", (.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearFarmingPoolAddress() {
      farmingPoolAddress_ = getDefaultInstance().getFarmingPoolAddress();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * farming_pool_address defines the bech32-encoded address of the farming pool
     * </pre>
     *
     * <code>string farming_pool_address = 2 [json_name = "farmingPoolAddress", (.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
     * @param value The bytes for farmingPoolAddress to set.
     * @return This builder for chaining.
     */
    public Builder setFarmingPoolAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      farmingPoolAddress_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object terminationAddress_ = "";
    /**
     * <pre>
     * termination_address defines the bech32-encoded address that terminates plan
     * when the plan ends after the end time, the balance of farming pool address
     * is transferred to the termination address
     * </pre>
     *
     * <code>string termination_address = 3 [json_name = "terminationAddress", (.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
     * @return The terminationAddress.
     */
    public java.lang.String getTerminationAddress() {
      java.lang.Object ref = terminationAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        terminationAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * termination_address defines the bech32-encoded address that terminates plan
     * when the plan ends after the end time, the balance of farming pool address
     * is transferred to the termination address
     * </pre>
     *
     * <code>string termination_address = 3 [json_name = "terminationAddress", (.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
     * @return The bytes for terminationAddress.
     */
    public com.google.protobuf.ByteString
        getTerminationAddressBytes() {
      java.lang.Object ref = terminationAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        terminationAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * termination_address defines the bech32-encoded address that terminates plan
     * when the plan ends after the end time, the balance of farming pool address
     * is transferred to the termination address
     * </pre>
     *
     * <code>string termination_address = 3 [json_name = "terminationAddress", (.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
     * @param value The terminationAddress to set.
     * @return This builder for chaining.
     */
    public Builder setTerminationAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      terminationAddress_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * termination_address defines the bech32-encoded address that terminates plan
     * when the plan ends after the end time, the balance of farming pool address
     * is transferred to the termination address
     * </pre>
     *
     * <code>string termination_address = 3 [json_name = "terminationAddress", (.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearTerminationAddress() {
      terminationAddress_ = getDefaultInstance().getTerminationAddress();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * termination_address defines the bech32-encoded address that terminates plan
     * when the plan ends after the end time, the balance of farming pool address
     * is transferred to the termination address
     * </pre>
     *
     * <code>string termination_address = 3 [json_name = "terminationAddress", (.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
     * @param value The bytes for terminationAddress to set.
     * @return This builder for chaining.
     */
    public Builder setTerminationAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      terminationAddress_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.util.List<com.cosmos.base.v1beta1.DecCoin> stakingCoinWeights_ =
      java.util.Collections.emptyList();
    private void ensureStakingCoinWeightsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        stakingCoinWeights_ = new java.util.ArrayList<com.cosmos.base.v1beta1.DecCoin>(stakingCoinWeights_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.DecCoin, com.cosmos.base.v1beta1.DecCoin.Builder, com.cosmos.base.v1beta1.DecCoinOrBuilder> stakingCoinWeightsBuilder_;

    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.DecCoin> getStakingCoinWeightsList() {
      if (stakingCoinWeightsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(stakingCoinWeights_);
      } else {
        return stakingCoinWeightsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public int getStakingCoinWeightsCount() {
      if (stakingCoinWeightsBuilder_ == null) {
        return stakingCoinWeights_.size();
      } else {
        return stakingCoinWeightsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public com.cosmos.base.v1beta1.DecCoin getStakingCoinWeights(int index) {
      if (stakingCoinWeightsBuilder_ == null) {
        return stakingCoinWeights_.get(index);
      } else {
        return stakingCoinWeightsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public Builder setStakingCoinWeights(
        int index, com.cosmos.base.v1beta1.DecCoin value) {
      if (stakingCoinWeightsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStakingCoinWeightsIsMutable();
        stakingCoinWeights_.set(index, value);
        onChanged();
      } else {
        stakingCoinWeightsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public Builder setStakingCoinWeights(
        int index, com.cosmos.base.v1beta1.DecCoin.Builder builderForValue) {
      if (stakingCoinWeightsBuilder_ == null) {
        ensureStakingCoinWeightsIsMutable();
        stakingCoinWeights_.set(index, builderForValue.build());
        onChanged();
      } else {
        stakingCoinWeightsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public Builder addStakingCoinWeights(com.cosmos.base.v1beta1.DecCoin value) {
      if (stakingCoinWeightsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStakingCoinWeightsIsMutable();
        stakingCoinWeights_.add(value);
        onChanged();
      } else {
        stakingCoinWeightsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public Builder addStakingCoinWeights(
        int index, com.cosmos.base.v1beta1.DecCoin value) {
      if (stakingCoinWeightsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStakingCoinWeightsIsMutable();
        stakingCoinWeights_.add(index, value);
        onChanged();
      } else {
        stakingCoinWeightsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public Builder addStakingCoinWeights(
        com.cosmos.base.v1beta1.DecCoin.Builder builderForValue) {
      if (stakingCoinWeightsBuilder_ == null) {
        ensureStakingCoinWeightsIsMutable();
        stakingCoinWeights_.add(builderForValue.build());
        onChanged();
      } else {
        stakingCoinWeightsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public Builder addStakingCoinWeights(
        int index, com.cosmos.base.v1beta1.DecCoin.Builder builderForValue) {
      if (stakingCoinWeightsBuilder_ == null) {
        ensureStakingCoinWeightsIsMutable();
        stakingCoinWeights_.add(index, builderForValue.build());
        onChanged();
      } else {
        stakingCoinWeightsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public Builder addAllStakingCoinWeights(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.DecCoin> values) {
      if (stakingCoinWeightsBuilder_ == null) {
        ensureStakingCoinWeightsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stakingCoinWeights_);
        onChanged();
      } else {
        stakingCoinWeightsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public Builder clearStakingCoinWeights() {
      if (stakingCoinWeightsBuilder_ == null) {
        stakingCoinWeights_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        stakingCoinWeightsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public Builder removeStakingCoinWeights(int index) {
      if (stakingCoinWeightsBuilder_ == null) {
        ensureStakingCoinWeightsIsMutable();
        stakingCoinWeights_.remove(index);
        onChanged();
      } else {
        stakingCoinWeightsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public com.cosmos.base.v1beta1.DecCoin.Builder getStakingCoinWeightsBuilder(
        int index) {
      return getStakingCoinWeightsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public com.cosmos.base.v1beta1.DecCoinOrBuilder getStakingCoinWeightsOrBuilder(
        int index) {
      if (stakingCoinWeightsBuilder_ == null) {
        return stakingCoinWeights_.get(index);  } else {
        return stakingCoinWeightsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.DecCoinOrBuilder> 
         getStakingCoinWeightsOrBuilderList() {
      if (stakingCoinWeightsBuilder_ != null) {
        return stakingCoinWeightsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(stakingCoinWeights_);
      }
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public com.cosmos.base.v1beta1.DecCoin.Builder addStakingCoinWeightsBuilder() {
      return getStakingCoinWeightsFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.DecCoin.getDefaultInstance());
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public com.cosmos.base.v1beta1.DecCoin.Builder addStakingCoinWeightsBuilder(
        int index) {
      return getStakingCoinWeightsFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.DecCoin.getDefaultInstance());
    }
    /**
     * <pre>
     * staking_coin_weights specifies coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 4 [json_name = "stakingCoinWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.DecCoin.Builder> 
         getStakingCoinWeightsBuilderList() {
      return getStakingCoinWeightsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.DecCoin, com.cosmos.base.v1beta1.DecCoin.Builder, com.cosmos.base.v1beta1.DecCoinOrBuilder> 
        getStakingCoinWeightsFieldBuilder() {
      if (stakingCoinWeightsBuilder_ == null) {
        stakingCoinWeightsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.DecCoin, com.cosmos.base.v1beta1.DecCoin.Builder, com.cosmos.base.v1beta1.DecCoinOrBuilder>(
                stakingCoinWeights_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        stakingCoinWeights_ = null;
      }
      return stakingCoinWeightsBuilder_;
    }

    private com.google.protobuf.Timestamp startTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> startTimeBuilder_;
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 5 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return Whether the startTime field is set.
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 5 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return The startTime.
     */
    public com.google.protobuf.Timestamp getStartTime() {
      if (startTimeBuilder_ == null) {
        return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
      } else {
        return startTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 5 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public Builder setStartTime(com.google.protobuf.Timestamp value) {
      if (startTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        startTime_ = value;
      } else {
        startTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 5 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public Builder setStartTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (startTimeBuilder_ == null) {
        startTime_ = builderForValue.build();
      } else {
        startTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 5 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public Builder mergeStartTime(com.google.protobuf.Timestamp value) {
      if (startTimeBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          startTime_ != null &&
          startTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getStartTimeBuilder().mergeFrom(value);
        } else {
          startTime_ = value;
        }
      } else {
        startTimeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 5 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public Builder clearStartTime() {
      bitField0_ = (bitField0_ & ~0x00000010);
      startTime_ = null;
      if (startTimeBuilder_ != null) {
        startTimeBuilder_.dispose();
        startTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 5 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public com.google.protobuf.Timestamp.Builder getStartTimeBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getStartTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 5 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
      if (startTimeBuilder_ != null) {
        return startTimeBuilder_.getMessageOrBuilder();
      } else {
        return startTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
      }
    }
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 5 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getStartTimeFieldBuilder() {
      if (startTimeBuilder_ == null) {
        startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getStartTime(),
                getParentForChildren(),
                isClean());
        startTime_ = null;
      }
      return startTimeBuilder_;
    }

    private com.google.protobuf.Timestamp endTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> endTimeBuilder_;
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 6 [json_name = "endTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return Whether the endTime field is set.
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 6 [json_name = "endTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return The endTime.
     */
    public com.google.protobuf.Timestamp getEndTime() {
      if (endTimeBuilder_ == null) {
        return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
      } else {
        return endTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 6 [json_name = "endTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public Builder setEndTime(com.google.protobuf.Timestamp value) {
      if (endTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        endTime_ = value;
      } else {
        endTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 6 [json_name = "endTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public Builder setEndTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (endTimeBuilder_ == null) {
        endTime_ = builderForValue.build();
      } else {
        endTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 6 [json_name = "endTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public Builder mergeEndTime(com.google.protobuf.Timestamp value) {
      if (endTimeBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          endTime_ != null &&
          endTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getEndTimeBuilder().mergeFrom(value);
        } else {
          endTime_ = value;
        }
      } else {
        endTimeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 6 [json_name = "endTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public Builder clearEndTime() {
      bitField0_ = (bitField0_ & ~0x00000020);
      endTime_ = null;
      if (endTimeBuilder_ != null) {
        endTimeBuilder_.dispose();
        endTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 6 [json_name = "endTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public com.google.protobuf.Timestamp.Builder getEndTimeBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getEndTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 6 [json_name = "endTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
      if (endTimeBuilder_ != null) {
        return endTimeBuilder_.getMessageOrBuilder();
      } else {
        return endTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
      }
    }
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 6 [json_name = "endTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getEndTimeFieldBuilder() {
      if (endTimeBuilder_ == null) {
        endTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getEndTime(),
                getParentForChildren(),
                isClean());
        endTime_ = null;
      }
      return endTimeBuilder_;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> epochAmount_ =
      java.util.Collections.emptyList();
    private void ensureEpochAmountIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        epochAmount_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(epochAmount_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> epochAmountBuilder_;

    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getEpochAmountList() {
      if (epochAmountBuilder_ == null) {
        return java.util.Collections.unmodifiableList(epochAmount_);
      } else {
        return epochAmountBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getEpochAmountCount() {
      if (epochAmountBuilder_ == null) {
        return epochAmount_.size();
      } else {
        return epochAmountBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getEpochAmount(int index) {
      if (epochAmountBuilder_ == null) {
        return epochAmount_.get(index);
      } else {
        return epochAmountBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setEpochAmount(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (epochAmountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEpochAmountIsMutable();
        epochAmount_.set(index, value);
        onChanged();
      } else {
        epochAmountBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setEpochAmount(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (epochAmountBuilder_ == null) {
        ensureEpochAmountIsMutable();
        epochAmount_.set(index, builderForValue.build());
        onChanged();
      } else {
        epochAmountBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addEpochAmount(com.cosmos.base.v1beta1.Coin value) {
      if (epochAmountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEpochAmountIsMutable();
        epochAmount_.add(value);
        onChanged();
      } else {
        epochAmountBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addEpochAmount(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (epochAmountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEpochAmountIsMutable();
        epochAmount_.add(index, value);
        onChanged();
      } else {
        epochAmountBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addEpochAmount(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (epochAmountBuilder_ == null) {
        ensureEpochAmountIsMutable();
        epochAmount_.add(builderForValue.build());
        onChanged();
      } else {
        epochAmountBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addEpochAmount(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (epochAmountBuilder_ == null) {
        ensureEpochAmountIsMutable();
        epochAmount_.add(index, builderForValue.build());
        onChanged();
      } else {
        epochAmountBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllEpochAmount(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (epochAmountBuilder_ == null) {
        ensureEpochAmountIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, epochAmount_);
        onChanged();
      } else {
        epochAmountBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearEpochAmount() {
      if (epochAmountBuilder_ == null) {
        epochAmount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        epochAmountBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeEpochAmount(int index) {
      if (epochAmountBuilder_ == null) {
        ensureEpochAmountIsMutable();
        epochAmount_.remove(index);
        onChanged();
      } else {
        epochAmountBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getEpochAmountBuilder(
        int index) {
      return getEpochAmountFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getEpochAmountOrBuilder(
        int index) {
      if (epochAmountBuilder_ == null) {
        return epochAmount_.get(index);  } else {
        return epochAmountBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getEpochAmountOrBuilderList() {
      if (epochAmountBuilder_ != null) {
        return epochAmountBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(epochAmount_);
      }
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addEpochAmountBuilder() {
      return getEpochAmountFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addEpochAmountBuilder(
        int index) {
      return getEpochAmountFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 7 [json_name = "epochAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getEpochAmountBuilderList() {
      return getEpochAmountFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getEpochAmountFieldBuilder() {
      if (epochAmountBuilder_ == null) {
        epochAmountBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                epochAmount_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        epochAmount_ = null;
      }
      return epochAmountBuilder_;
    }

    private java.lang.Object epochRatio_ = "";
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 8 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @return The epochRatio.
     */
    public java.lang.String getEpochRatio() {
      java.lang.Object ref = epochRatio_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        epochRatio_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 8 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @return The bytes for epochRatio.
     */
    public com.google.protobuf.ByteString
        getEpochRatioBytes() {
      java.lang.Object ref = epochRatio_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        epochRatio_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 8 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @param value The epochRatio to set.
     * @return This builder for chaining.
     */
    public Builder setEpochRatio(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      epochRatio_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 8 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearEpochRatio() {
      epochRatio_ = getDefaultInstance().getEpochRatio();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 8 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @param value The bytes for epochRatio to set.
     * @return This builder for chaining.
     */
    public Builder setEpochRatioBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      epochRatio_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.AddPlanRequest)
  }

  // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.AddPlanRequest)
  private static final com.crescent.farming.v1beta1.AddPlanRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.crescent.farming.v1beta1.AddPlanRequest();
  }

  public static com.crescent.farming.v1beta1.AddPlanRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AddPlanRequest>
      PARSER = new com.google.protobuf.AbstractParser<AddPlanRequest>() {
    @java.lang.Override
    public AddPlanRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AddPlanRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AddPlanRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.crescent.farming.v1beta1.AddPlanRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/farming/v1beta1/tx.proto

package com.crescent.farming.v1beta1;

/**
 * <pre>
 * MsgHarvest defines a SDK message for claiming rewards from the farming plan.
 * </pre>
 *
 * Protobuf type {@code crescent.farming.v1beta1.MsgHarvest}
 */
public final class MsgHarvest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.MsgHarvest)
    MsgHarvestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MsgHarvest.newBuilder() to construct.
  private MsgHarvest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MsgHarvest() {
    farmer_ = "";
    stakingCoinDenoms_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MsgHarvest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.crescent.farming.v1beta1.TxProto.internal_static_crescent_farming_v1beta1_MsgHarvest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.crescent.farming.v1beta1.TxProto.internal_static_crescent_farming_v1beta1_MsgHarvest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.crescent.farming.v1beta1.MsgHarvest.class, com.crescent.farming.v1beta1.MsgHarvest.Builder.class);
  }

  public static final int FARMER_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object farmer_ = "";
  /**
   * <pre>
   * farmer defines the bech32-encoded address of the farmer
   * </pre>
   *
   * <code>string farmer = 1 [json_name = "farmer"];</code>
   * @return The farmer.
   */
  @java.lang.Override
  public java.lang.String getFarmer() {
    java.lang.Object ref = farmer_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      farmer_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * farmer defines the bech32-encoded address of the farmer
   * </pre>
   *
   * <code>string farmer = 1 [json_name = "farmer"];</code>
   * @return The bytes for farmer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFarmerBytes() {
    java.lang.Object ref = farmer_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      farmer_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STAKING_COIN_DENOMS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList stakingCoinDenoms_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
   * harvesting
   * </pre>
   *
   * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
   * @return A list containing the stakingCoinDenoms.
   */
  public com.google.protobuf.ProtocolStringList
      getStakingCoinDenomsList() {
    return stakingCoinDenoms_;
  }
  /**
   * <pre>
   * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
   * harvesting
   * </pre>
   *
   * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
   * @return The count of stakingCoinDenoms.
   */
  public int getStakingCoinDenomsCount() {
    return stakingCoinDenoms_.size();
  }
  /**
   * <pre>
   * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
   * harvesting
   * </pre>
   *
   * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
   * @param index The index of the element to return.
   * @return The stakingCoinDenoms at the given index.
   */
  public java.lang.String getStakingCoinDenoms(int index) {
    return stakingCoinDenoms_.get(index);
  }
  /**
   * <pre>
   * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
   * harvesting
   * </pre>
   *
   * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
   * @param index The index of the value to return.
   * @return The bytes of the stakingCoinDenoms at the given index.
   */
  public com.google.protobuf.ByteString
      getStakingCoinDenomsBytes(int index) {
    return stakingCoinDenoms_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(farmer_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, farmer_);
    }
    for (int i = 0; i < stakingCoinDenoms_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, stakingCoinDenoms_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(farmer_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, farmer_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < stakingCoinDenoms_.size(); i++) {
        dataSize += computeStringSizeNoTag(stakingCoinDenoms_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getStakingCoinDenomsList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.crescent.farming.v1beta1.MsgHarvest)) {
      return super.equals(obj);
    }
    com.crescent.farming.v1beta1.MsgHarvest other = (com.crescent.farming.v1beta1.MsgHarvest) obj;

    if (!getFarmer()
        .equals(other.getFarmer())) return false;
    if (!getStakingCoinDenomsList()
        .equals(other.getStakingCoinDenomsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FARMER_FIELD_NUMBER;
    hash = (53 * hash) + getFarmer().hashCode();
    if (getStakingCoinDenomsCount() > 0) {
      hash = (37 * hash) + STAKING_COIN_DENOMS_FIELD_NUMBER;
      hash = (53 * hash) + getStakingCoinDenomsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.crescent.farming.v1beta1.MsgHarvest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.MsgHarvest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.MsgHarvest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.MsgHarvest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.MsgHarvest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.MsgHarvest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.MsgHarvest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.farming.v1beta1.MsgHarvest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.crescent.farming.v1beta1.MsgHarvest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.crescent.farming.v1beta1.MsgHarvest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.MsgHarvest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.farming.v1beta1.MsgHarvest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.crescent.farming.v1beta1.MsgHarvest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * MsgHarvest defines a SDK message for claiming rewards from the farming plan.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.MsgHarvest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.MsgHarvest)
      com.crescent.farming.v1beta1.MsgHarvestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.crescent.farming.v1beta1.TxProto.internal_static_crescent_farming_v1beta1_MsgHarvest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.crescent.farming.v1beta1.TxProto.internal_static_crescent_farming_v1beta1_MsgHarvest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.crescent.farming.v1beta1.MsgHarvest.class, com.crescent.farming.v1beta1.MsgHarvest.Builder.class);
    }

    // Construct using com.crescent.farming.v1beta1.MsgHarvest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      farmer_ = "";
      stakingCoinDenoms_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.crescent.farming.v1beta1.TxProto.internal_static_crescent_farming_v1beta1_MsgHarvest_descriptor;
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.MsgHarvest getDefaultInstanceForType() {
      return com.crescent.farming.v1beta1.MsgHarvest.getDefaultInstance();
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.MsgHarvest build() {
      com.crescent.farming.v1beta1.MsgHarvest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.MsgHarvest buildPartial() {
      com.crescent.farming.v1beta1.MsgHarvest result = new com.crescent.farming.v1beta1.MsgHarvest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.crescent.farming.v1beta1.MsgHarvest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.farmer_ = farmer_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        stakingCoinDenoms_.makeImmutable();
        result.stakingCoinDenoms_ = stakingCoinDenoms_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.crescent.farming.v1beta1.MsgHarvest) {
        return mergeFrom((com.crescent.farming.v1beta1.MsgHarvest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.crescent.farming.v1beta1.MsgHarvest other) {
      if (other == com.crescent.farming.v1beta1.MsgHarvest.getDefaultInstance()) return this;
      if (!other.getFarmer().isEmpty()) {
        farmer_ = other.farmer_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.stakingCoinDenoms_.isEmpty()) {
        if (stakingCoinDenoms_.isEmpty()) {
          stakingCoinDenoms_ = other.stakingCoinDenoms_;
          bitField0_ |= 0x00000002;
        } else {
          ensureStakingCoinDenomsIsMutable();
          stakingCoinDenoms_.addAll(other.stakingCoinDenoms_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              farmer_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureStakingCoinDenomsIsMutable();
              stakingCoinDenoms_.add(s);
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object farmer_ = "";
    /**
     * <pre>
     * farmer defines the bech32-encoded address of the farmer
     * </pre>
     *
     * <code>string farmer = 1 [json_name = "farmer"];</code>
     * @return The farmer.
     */
    public java.lang.String getFarmer() {
      java.lang.Object ref = farmer_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        farmer_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * farmer defines the bech32-encoded address of the farmer
     * </pre>
     *
     * <code>string farmer = 1 [json_name = "farmer"];</code>
     * @return The bytes for farmer.
     */
    public com.google.protobuf.ByteString
        getFarmerBytes() {
      java.lang.Object ref = farmer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        farmer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * farmer defines the bech32-encoded address of the farmer
     * </pre>
     *
     * <code>string farmer = 1 [json_name = "farmer"];</code>
     * @param value The farmer to set.
     * @return This builder for chaining.
     */
    public Builder setFarmer(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      farmer_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * farmer defines the bech32-encoded address of the farmer
     * </pre>
     *
     * <code>string farmer = 1 [json_name = "farmer"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFarmer() {
      farmer_ = getDefaultInstance().getFarmer();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * farmer defines the bech32-encoded address of the farmer
     * </pre>
     *
     * <code>string farmer = 1 [json_name = "farmer"];</code>
     * @param value The bytes for farmer to set.
     * @return This builder for chaining.
     */
    public Builder setFarmerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      farmer_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList stakingCoinDenoms_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureStakingCoinDenomsIsMutable() {
      if (!stakingCoinDenoms_.isModifiable()) {
        stakingCoinDenoms_ = new com.google.protobuf.LazyStringArrayList(stakingCoinDenoms_);
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
     * harvesting
     * </pre>
     *
     * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
     * @return A list containing the stakingCoinDenoms.
     */
    public com.google.protobuf.ProtocolStringList
        getStakingCoinDenomsList() {
      stakingCoinDenoms_.makeImmutable();
      return stakingCoinDenoms_;
    }
    /**
     * <pre>
     * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
     * harvesting
     * </pre>
     *
     * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
     * @return The count of stakingCoinDenoms.
     */
    public int getStakingCoinDenomsCount() {
      return stakingCoinDenoms_.size();
    }
    /**
     * <pre>
     * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
     * harvesting
     * </pre>
     *
     * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
     * @param index The index of the element to return.
     * @return The stakingCoinDenoms at the given index.
     */
    public java.lang.String getStakingCoinDenoms(int index) {
      return stakingCoinDenoms_.get(index);
    }
    /**
     * <pre>
     * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
     * harvesting
     * </pre>
     *
     * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
     * @param index The index of the value to return.
     * @return The bytes of the stakingCoinDenoms at the given index.
     */
    public com.google.protobuf.ByteString
        getStakingCoinDenomsBytes(int index) {
      return stakingCoinDenoms_.getByteString(index);
    }
    /**
     * <pre>
     * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
     * harvesting
     * </pre>
     *
     * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
     * @param index The index to set the value at.
     * @param value The stakingCoinDenoms to set.
     * @return This builder for chaining.
     */
    public Builder setStakingCoinDenoms(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureStakingCoinDenomsIsMutable();
      stakingCoinDenoms_.set(index, value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
     * harvesting
     * </pre>
     *
     * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
     * @param value The stakingCoinDenoms to add.
     * @return This builder for chaining.
     */
    public Builder addStakingCoinDenoms(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureStakingCoinDenomsIsMutable();
      stakingCoinDenoms_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
     * harvesting
     * </pre>
     *
     * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
     * @param values The stakingCoinDenoms to add.
     * @return This builder for chaining.
     */
    public Builder addAllStakingCoinDenoms(
        java.lang.Iterable<java.lang.String> values) {
      ensureStakingCoinDenomsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, stakingCoinDenoms_);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
     * harvesting
     * </pre>
     *
     * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearStakingCoinDenoms() {
      stakingCoinDenoms_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * staking_coin_denoms is the set of denoms of staked coins as a source of the reward for
     * harvesting
     * </pre>
     *
     * <code>repeated string staking_coin_denoms = 2 [json_name = "stakingCoinDenoms", (.gogoproto.moretags) = "yaml:&#92;"staking_coin_denoms&#92;""];</code>
     * @param value The bytes of the stakingCoinDenoms to add.
     * @return This builder for chaining.
     */
    public Builder addStakingCoinDenomsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureStakingCoinDenomsIsMutable();
      stakingCoinDenoms_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.MsgHarvest)
  }

  // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.MsgHarvest)
  private static final com.crescent.farming.v1beta1.MsgHarvest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.crescent.farming.v1beta1.MsgHarvest();
  }

  public static com.crescent.farming.v1beta1.MsgHarvest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MsgHarvest>
      PARSER = new com.google.protobuf.AbstractParser<MsgHarvest>() {
    @java.lang.Override
    public MsgHarvest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MsgHarvest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MsgHarvest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.crescent.farming.v1beta1.MsgHarvest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


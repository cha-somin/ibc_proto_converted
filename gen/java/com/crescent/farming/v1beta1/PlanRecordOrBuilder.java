// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/farming/v1beta1/genesis.proto

package com.crescent.farming.v1beta1;

public interface PlanRecordOrBuilder extends
    // @@protoc_insertion_point(interface_extends:crescent.farming.v1beta1.PlanRecord)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * plan specifies the plan interface; it can be FixedAmountPlan or RatioPlan
   * </pre>
   *
   * <code>.google.protobuf.Any plan = 1 [json_name = "plan", (.gogoproto.nullable) = false, (.cosmos_proto.accepts_interface) = "PlanI"];</code>
   * @return Whether the plan field is set.
   */
  boolean hasPlan();
  /**
   * <pre>
   * plan specifies the plan interface; it can be FixedAmountPlan or RatioPlan
   * </pre>
   *
   * <code>.google.protobuf.Any plan = 1 [json_name = "plan", (.gogoproto.nullable) = false, (.cosmos_proto.accepts_interface) = "PlanI"];</code>
   * @return The plan.
   */
  com.google.protobuf.Any getPlan();
  /**
   * <pre>
   * plan specifies the plan interface; it can be FixedAmountPlan or RatioPlan
   * </pre>
   *
   * <code>.google.protobuf.Any plan = 1 [json_name = "plan", (.gogoproto.nullable) = false, (.cosmos_proto.accepts_interface) = "PlanI"];</code>
   */
  com.google.protobuf.AnyOrBuilder getPlanOrBuilder();

  /**
   * <pre>
   * farming_pool_coins specifies balance of the farming pool for the plan
   * this param is needed for import/export validation
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin farming_pool_coins = 2 [json_name = "farmingPoolCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"farming_pool_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.Coin> 
      getFarmingPoolCoinsList();
  /**
   * <pre>
   * farming_pool_coins specifies balance of the farming pool for the plan
   * this param is needed for import/export validation
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin farming_pool_coins = 2 [json_name = "farmingPoolCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"farming_pool_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.Coin getFarmingPoolCoins(int index);
  /**
   * <pre>
   * farming_pool_coins specifies balance of the farming pool for the plan
   * this param is needed for import/export validation
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin farming_pool_coins = 2 [json_name = "farmingPoolCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"farming_pool_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  int getFarmingPoolCoinsCount();
  /**
   * <pre>
   * farming_pool_coins specifies balance of the farming pool for the plan
   * this param is needed for import/export validation
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin farming_pool_coins = 2 [json_name = "farmingPoolCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"farming_pool_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getFarmingPoolCoinsOrBuilderList();
  /**
   * <pre>
   * farming_pool_coins specifies balance of the farming pool for the plan
   * this param is needed for import/export validation
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin farming_pool_coins = 2 [json_name = "farmingPoolCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"farming_pool_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getFarmingPoolCoinsOrBuilder(
      int index);
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/farming/v1beta1/query.proto

package com.crescent.farming.v1beta1;

/**
 * <pre>
 * QueryPositionResponse is the response type for the Query/Position RPC method.
 * </pre>
 *
 * Protobuf type {@code crescent.farming.v1beta1.QueryPositionResponse}
 */
public final class QueryPositionResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.QueryPositionResponse)
    QueryPositionResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use QueryPositionResponse.newBuilder() to construct.
  private QueryPositionResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private QueryPositionResponse() {
    stakedCoins_ = java.util.Collections.emptyList();
    queuedCoins_ = java.util.Collections.emptyList();
    rewards_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new QueryPositionResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.crescent.farming.v1beta1.QueryProto.internal_static_crescent_farming_v1beta1_QueryPositionResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.crescent.farming.v1beta1.QueryProto.internal_static_crescent_farming_v1beta1_QueryPositionResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.crescent.farming.v1beta1.QueryPositionResponse.class, com.crescent.farming.v1beta1.QueryPositionResponse.Builder.class);
  }

  public static final int STAKED_COINS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> stakedCoins_;
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getStakedCoinsList() {
    return stakedCoins_;
  }
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getStakedCoinsOrBuilderList() {
    return stakedCoins_;
  }
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getStakedCoinsCount() {
    return stakedCoins_.size();
  }
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getStakedCoins(int index) {
    return stakedCoins_.get(index);
  }
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getStakedCoinsOrBuilder(
      int index) {
    return stakedCoins_.get(index);
  }

  public static final int QUEUED_COINS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> queuedCoins_;
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getQueuedCoinsList() {
    return queuedCoins_;
  }
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getQueuedCoinsOrBuilderList() {
    return queuedCoins_;
  }
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getQueuedCoinsCount() {
    return queuedCoins_.size();
  }
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getQueuedCoins(int index) {
    return queuedCoins_.get(index);
  }
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getQueuedCoinsOrBuilder(
      int index) {
    return queuedCoins_.get(index);
  }

  public static final int REWARDS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> rewards_;
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getRewardsList() {
    return rewards_;
  }
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getRewardsOrBuilderList() {
    return rewards_;
  }
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getRewardsCount() {
    return rewards_.size();
  }
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getRewards(int index) {
    return rewards_.get(index);
  }
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getRewardsOrBuilder(
      int index) {
    return rewards_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < stakedCoins_.size(); i++) {
      output.writeMessage(1, stakedCoins_.get(i));
    }
    for (int i = 0; i < queuedCoins_.size(); i++) {
      output.writeMessage(2, queuedCoins_.get(i));
    }
    for (int i = 0; i < rewards_.size(); i++) {
      output.writeMessage(3, rewards_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < stakedCoins_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, stakedCoins_.get(i));
    }
    for (int i = 0; i < queuedCoins_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, queuedCoins_.get(i));
    }
    for (int i = 0; i < rewards_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, rewards_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.crescent.farming.v1beta1.QueryPositionResponse)) {
      return super.equals(obj);
    }
    com.crescent.farming.v1beta1.QueryPositionResponse other = (com.crescent.farming.v1beta1.QueryPositionResponse) obj;

    if (!getStakedCoinsList()
        .equals(other.getStakedCoinsList())) return false;
    if (!getQueuedCoinsList()
        .equals(other.getQueuedCoinsList())) return false;
    if (!getRewardsList()
        .equals(other.getRewardsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getStakedCoinsCount() > 0) {
      hash = (37 * hash) + STAKED_COINS_FIELD_NUMBER;
      hash = (53 * hash) + getStakedCoinsList().hashCode();
    }
    if (getQueuedCoinsCount() > 0) {
      hash = (37 * hash) + QUEUED_COINS_FIELD_NUMBER;
      hash = (53 * hash) + getQueuedCoinsList().hashCode();
    }
    if (getRewardsCount() > 0) {
      hash = (37 * hash) + REWARDS_FIELD_NUMBER;
      hash = (53 * hash) + getRewardsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.crescent.farming.v1beta1.QueryPositionResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.QueryPositionResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.QueryPositionResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.QueryPositionResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.QueryPositionResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.QueryPositionResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.QueryPositionResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.farming.v1beta1.QueryPositionResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.crescent.farming.v1beta1.QueryPositionResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.crescent.farming.v1beta1.QueryPositionResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.QueryPositionResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.farming.v1beta1.QueryPositionResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.crescent.farming.v1beta1.QueryPositionResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * QueryPositionResponse is the response type for the Query/Position RPC method.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.QueryPositionResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.QueryPositionResponse)
      com.crescent.farming.v1beta1.QueryPositionResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.crescent.farming.v1beta1.QueryProto.internal_static_crescent_farming_v1beta1_QueryPositionResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.crescent.farming.v1beta1.QueryProto.internal_static_crescent_farming_v1beta1_QueryPositionResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.crescent.farming.v1beta1.QueryPositionResponse.class, com.crescent.farming.v1beta1.QueryPositionResponse.Builder.class);
    }

    // Construct using com.crescent.farming.v1beta1.QueryPositionResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (stakedCoinsBuilder_ == null) {
        stakedCoins_ = java.util.Collections.emptyList();
      } else {
        stakedCoins_ = null;
        stakedCoinsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (queuedCoinsBuilder_ == null) {
        queuedCoins_ = java.util.Collections.emptyList();
      } else {
        queuedCoins_ = null;
        queuedCoinsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (rewardsBuilder_ == null) {
        rewards_ = java.util.Collections.emptyList();
      } else {
        rewards_ = null;
        rewardsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.crescent.farming.v1beta1.QueryProto.internal_static_crescent_farming_v1beta1_QueryPositionResponse_descriptor;
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.QueryPositionResponse getDefaultInstanceForType() {
      return com.crescent.farming.v1beta1.QueryPositionResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.QueryPositionResponse build() {
      com.crescent.farming.v1beta1.QueryPositionResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.QueryPositionResponse buildPartial() {
      com.crescent.farming.v1beta1.QueryPositionResponse result = new com.crescent.farming.v1beta1.QueryPositionResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.crescent.farming.v1beta1.QueryPositionResponse result) {
      if (stakedCoinsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          stakedCoins_ = java.util.Collections.unmodifiableList(stakedCoins_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.stakedCoins_ = stakedCoins_;
      } else {
        result.stakedCoins_ = stakedCoinsBuilder_.build();
      }
      if (queuedCoinsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          queuedCoins_ = java.util.Collections.unmodifiableList(queuedCoins_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.queuedCoins_ = queuedCoins_;
      } else {
        result.queuedCoins_ = queuedCoinsBuilder_.build();
      }
      if (rewardsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          rewards_ = java.util.Collections.unmodifiableList(rewards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.rewards_ = rewards_;
      } else {
        result.rewards_ = rewardsBuilder_.build();
      }
    }

    private void buildPartial0(com.crescent.farming.v1beta1.QueryPositionResponse result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.crescent.farming.v1beta1.QueryPositionResponse) {
        return mergeFrom((com.crescent.farming.v1beta1.QueryPositionResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.crescent.farming.v1beta1.QueryPositionResponse other) {
      if (other == com.crescent.farming.v1beta1.QueryPositionResponse.getDefaultInstance()) return this;
      if (stakedCoinsBuilder_ == null) {
        if (!other.stakedCoins_.isEmpty()) {
          if (stakedCoins_.isEmpty()) {
            stakedCoins_ = other.stakedCoins_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureStakedCoinsIsMutable();
            stakedCoins_.addAll(other.stakedCoins_);
          }
          onChanged();
        }
      } else {
        if (!other.stakedCoins_.isEmpty()) {
          if (stakedCoinsBuilder_.isEmpty()) {
            stakedCoinsBuilder_.dispose();
            stakedCoinsBuilder_ = null;
            stakedCoins_ = other.stakedCoins_;
            bitField0_ = (bitField0_ & ~0x00000001);
            stakedCoinsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStakedCoinsFieldBuilder() : null;
          } else {
            stakedCoinsBuilder_.addAllMessages(other.stakedCoins_);
          }
        }
      }
      if (queuedCoinsBuilder_ == null) {
        if (!other.queuedCoins_.isEmpty()) {
          if (queuedCoins_.isEmpty()) {
            queuedCoins_ = other.queuedCoins_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureQueuedCoinsIsMutable();
            queuedCoins_.addAll(other.queuedCoins_);
          }
          onChanged();
        }
      } else {
        if (!other.queuedCoins_.isEmpty()) {
          if (queuedCoinsBuilder_.isEmpty()) {
            queuedCoinsBuilder_.dispose();
            queuedCoinsBuilder_ = null;
            queuedCoins_ = other.queuedCoins_;
            bitField0_ = (bitField0_ & ~0x00000002);
            queuedCoinsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getQueuedCoinsFieldBuilder() : null;
          } else {
            queuedCoinsBuilder_.addAllMessages(other.queuedCoins_);
          }
        }
      }
      if (rewardsBuilder_ == null) {
        if (!other.rewards_.isEmpty()) {
          if (rewards_.isEmpty()) {
            rewards_ = other.rewards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRewardsIsMutable();
            rewards_.addAll(other.rewards_);
          }
          onChanged();
        }
      } else {
        if (!other.rewards_.isEmpty()) {
          if (rewardsBuilder_.isEmpty()) {
            rewardsBuilder_.dispose();
            rewardsBuilder_ = null;
            rewards_ = other.rewards_;
            bitField0_ = (bitField0_ & ~0x00000004);
            rewardsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRewardsFieldBuilder() : null;
          } else {
            rewardsBuilder_.addAllMessages(other.rewards_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (stakedCoinsBuilder_ == null) {
                ensureStakedCoinsIsMutable();
                stakedCoins_.add(m);
              } else {
                stakedCoinsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (queuedCoinsBuilder_ == null) {
                ensureQueuedCoinsIsMutable();
                queuedCoins_.add(m);
              } else {
                queuedCoinsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (rewardsBuilder_ == null) {
                ensureRewardsIsMutable();
                rewards_.add(m);
              } else {
                rewardsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.cosmos.base.v1beta1.Coin> stakedCoins_ =
      java.util.Collections.emptyList();
    private void ensureStakedCoinsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        stakedCoins_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(stakedCoins_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> stakedCoinsBuilder_;

    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getStakedCoinsList() {
      if (stakedCoinsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(stakedCoins_);
      } else {
        return stakedCoinsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getStakedCoinsCount() {
      if (stakedCoinsBuilder_ == null) {
        return stakedCoins_.size();
      } else {
        return stakedCoinsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getStakedCoins(int index) {
      if (stakedCoinsBuilder_ == null) {
        return stakedCoins_.get(index);
      } else {
        return stakedCoinsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setStakedCoins(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (stakedCoinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStakedCoinsIsMutable();
        stakedCoins_.set(index, value);
        onChanged();
      } else {
        stakedCoinsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setStakedCoins(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (stakedCoinsBuilder_ == null) {
        ensureStakedCoinsIsMutable();
        stakedCoins_.set(index, builderForValue.build());
        onChanged();
      } else {
        stakedCoinsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addStakedCoins(com.cosmos.base.v1beta1.Coin value) {
      if (stakedCoinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStakedCoinsIsMutable();
        stakedCoins_.add(value);
        onChanged();
      } else {
        stakedCoinsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addStakedCoins(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (stakedCoinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStakedCoinsIsMutable();
        stakedCoins_.add(index, value);
        onChanged();
      } else {
        stakedCoinsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addStakedCoins(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (stakedCoinsBuilder_ == null) {
        ensureStakedCoinsIsMutable();
        stakedCoins_.add(builderForValue.build());
        onChanged();
      } else {
        stakedCoinsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addStakedCoins(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (stakedCoinsBuilder_ == null) {
        ensureStakedCoinsIsMutable();
        stakedCoins_.add(index, builderForValue.build());
        onChanged();
      } else {
        stakedCoinsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllStakedCoins(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (stakedCoinsBuilder_ == null) {
        ensureStakedCoinsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stakedCoins_);
        onChanged();
      } else {
        stakedCoinsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearStakedCoins() {
      if (stakedCoinsBuilder_ == null) {
        stakedCoins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        stakedCoinsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeStakedCoins(int index) {
      if (stakedCoinsBuilder_ == null) {
        ensureStakedCoinsIsMutable();
        stakedCoins_.remove(index);
        onChanged();
      } else {
        stakedCoinsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getStakedCoinsBuilder(
        int index) {
      return getStakedCoinsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getStakedCoinsOrBuilder(
        int index) {
      if (stakedCoinsBuilder_ == null) {
        return stakedCoins_.get(index);  } else {
        return stakedCoinsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getStakedCoinsOrBuilderList() {
      if (stakedCoinsBuilder_ != null) {
        return stakedCoinsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(stakedCoins_);
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addStakedCoinsBuilder() {
      return getStakedCoinsFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addStakedCoinsBuilder(
        int index) {
      return getStakedCoinsFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin staked_coins = 1 [json_name = "stakedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getStakedCoinsBuilderList() {
      return getStakedCoinsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getStakedCoinsFieldBuilder() {
      if (stakedCoinsBuilder_ == null) {
        stakedCoinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                stakedCoins_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        stakedCoins_ = null;
      }
      return stakedCoinsBuilder_;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> queuedCoins_ =
      java.util.Collections.emptyList();
    private void ensureQueuedCoinsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        queuedCoins_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(queuedCoins_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> queuedCoinsBuilder_;

    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getQueuedCoinsList() {
      if (queuedCoinsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(queuedCoins_);
      } else {
        return queuedCoinsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getQueuedCoinsCount() {
      if (queuedCoinsBuilder_ == null) {
        return queuedCoins_.size();
      } else {
        return queuedCoinsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getQueuedCoins(int index) {
      if (queuedCoinsBuilder_ == null) {
        return queuedCoins_.get(index);
      } else {
        return queuedCoinsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setQueuedCoins(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (queuedCoinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQueuedCoinsIsMutable();
        queuedCoins_.set(index, value);
        onChanged();
      } else {
        queuedCoinsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setQueuedCoins(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (queuedCoinsBuilder_ == null) {
        ensureQueuedCoinsIsMutable();
        queuedCoins_.set(index, builderForValue.build());
        onChanged();
      } else {
        queuedCoinsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addQueuedCoins(com.cosmos.base.v1beta1.Coin value) {
      if (queuedCoinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQueuedCoinsIsMutable();
        queuedCoins_.add(value);
        onChanged();
      } else {
        queuedCoinsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addQueuedCoins(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (queuedCoinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQueuedCoinsIsMutable();
        queuedCoins_.add(index, value);
        onChanged();
      } else {
        queuedCoinsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addQueuedCoins(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (queuedCoinsBuilder_ == null) {
        ensureQueuedCoinsIsMutable();
        queuedCoins_.add(builderForValue.build());
        onChanged();
      } else {
        queuedCoinsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addQueuedCoins(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (queuedCoinsBuilder_ == null) {
        ensureQueuedCoinsIsMutable();
        queuedCoins_.add(index, builderForValue.build());
        onChanged();
      } else {
        queuedCoinsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllQueuedCoins(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (queuedCoinsBuilder_ == null) {
        ensureQueuedCoinsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, queuedCoins_);
        onChanged();
      } else {
        queuedCoinsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearQueuedCoins() {
      if (queuedCoinsBuilder_ == null) {
        queuedCoins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        queuedCoinsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeQueuedCoins(int index) {
      if (queuedCoinsBuilder_ == null) {
        ensureQueuedCoinsIsMutable();
        queuedCoins_.remove(index);
        onChanged();
      } else {
        queuedCoinsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getQueuedCoinsBuilder(
        int index) {
      return getQueuedCoinsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getQueuedCoinsOrBuilder(
        int index) {
      if (queuedCoinsBuilder_ == null) {
        return queuedCoins_.get(index);  } else {
        return queuedCoinsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getQueuedCoinsOrBuilderList() {
      if (queuedCoinsBuilder_ != null) {
        return queuedCoinsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(queuedCoins_);
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addQueuedCoinsBuilder() {
      return getQueuedCoinsFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addQueuedCoinsBuilder(
        int index) {
      return getQueuedCoinsFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin queued_coins = 2 [json_name = "queuedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getQueuedCoinsBuilderList() {
      return getQueuedCoinsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getQueuedCoinsFieldBuilder() {
      if (queuedCoinsBuilder_ == null) {
        queuedCoinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                queuedCoins_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        queuedCoins_ = null;
      }
      return queuedCoinsBuilder_;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> rewards_ =
      java.util.Collections.emptyList();
    private void ensureRewardsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        rewards_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(rewards_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> rewardsBuilder_;

    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getRewardsList() {
      if (rewardsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(rewards_);
      } else {
        return rewardsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getRewardsCount() {
      if (rewardsBuilder_ == null) {
        return rewards_.size();
      } else {
        return rewardsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getRewards(int index) {
      if (rewardsBuilder_ == null) {
        return rewards_.get(index);
      } else {
        return rewardsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setRewards(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (rewardsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRewardsIsMutable();
        rewards_.set(index, value);
        onChanged();
      } else {
        rewardsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setRewards(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (rewardsBuilder_ == null) {
        ensureRewardsIsMutable();
        rewards_.set(index, builderForValue.build());
        onChanged();
      } else {
        rewardsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addRewards(com.cosmos.base.v1beta1.Coin value) {
      if (rewardsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRewardsIsMutable();
        rewards_.add(value);
        onChanged();
      } else {
        rewardsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addRewards(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (rewardsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRewardsIsMutable();
        rewards_.add(index, value);
        onChanged();
      } else {
        rewardsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addRewards(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (rewardsBuilder_ == null) {
        ensureRewardsIsMutable();
        rewards_.add(builderForValue.build());
        onChanged();
      } else {
        rewardsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addRewards(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (rewardsBuilder_ == null) {
        ensureRewardsIsMutable();
        rewards_.add(index, builderForValue.build());
        onChanged();
      } else {
        rewardsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllRewards(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (rewardsBuilder_ == null) {
        ensureRewardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rewards_);
        onChanged();
      } else {
        rewardsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearRewards() {
      if (rewardsBuilder_ == null) {
        rewards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        rewardsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeRewards(int index) {
      if (rewardsBuilder_ == null) {
        ensureRewardsIsMutable();
        rewards_.remove(index);
        onChanged();
      } else {
        rewardsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getRewardsBuilder(
        int index) {
      return getRewardsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getRewardsOrBuilder(
        int index) {
      if (rewardsBuilder_ == null) {
        return rewards_.get(index);  } else {
        return rewardsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getRewardsOrBuilderList() {
      if (rewardsBuilder_ != null) {
        return rewardsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(rewards_);
      }
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addRewardsBuilder() {
      return getRewardsFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addRewardsBuilder(
        int index) {
      return getRewardsFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.Coin rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getRewardsBuilderList() {
      return getRewardsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getRewardsFieldBuilder() {
      if (rewardsBuilder_ == null) {
        rewardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                rewards_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        rewards_ = null;
      }
      return rewardsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.QueryPositionResponse)
  }

  // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.QueryPositionResponse)
  private static final com.crescent.farming.v1beta1.QueryPositionResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.crescent.farming.v1beta1.QueryPositionResponse();
  }

  public static com.crescent.farming.v1beta1.QueryPositionResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<QueryPositionResponse>
      PARSER = new com.google.protobuf.AbstractParser<QueryPositionResponse>() {
    @java.lang.Override
    public QueryPositionResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<QueryPositionResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<QueryPositionResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.crescent.farming.v1beta1.QueryPositionResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


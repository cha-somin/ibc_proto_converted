// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/farming/v1beta1/farming.proto

package com.crescent.farming.v1beta1;

/**
 * <pre>
 * RatioPlan defines a plan that distributes to farmers by ratio
 * distribution for every epoch day.
 * </pre>
 *
 * Protobuf type {@code crescent.farming.v1beta1.RatioPlan}
 */
public final class RatioPlan extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.RatioPlan)
    RatioPlanOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RatioPlan.newBuilder() to construct.
  private RatioPlan(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RatioPlan() {
    epochRatio_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RatioPlan();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.crescent.farming.v1beta1.FarmingProto.internal_static_crescent_farming_v1beta1_RatioPlan_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.crescent.farming.v1beta1.FarmingProto.internal_static_crescent_farming_v1beta1_RatioPlan_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.crescent.farming.v1beta1.RatioPlan.class, com.crescent.farming.v1beta1.RatioPlan.Builder.class);
  }

  public static final int BASE_PLAN_FIELD_NUMBER = 1;
  private com.crescent.farming.v1beta1.BasePlan basePlan_;
  /**
   * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
   * @return Whether the basePlan field is set.
   */
  @java.lang.Override
  public boolean hasBasePlan() {
    return basePlan_ != null;
  }
  /**
   * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
   * @return The basePlan.
   */
  @java.lang.Override
  public com.crescent.farming.v1beta1.BasePlan getBasePlan() {
    return basePlan_ == null ? com.crescent.farming.v1beta1.BasePlan.getDefaultInstance() : basePlan_;
  }
  /**
   * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
   */
  @java.lang.Override
  public com.crescent.farming.v1beta1.BasePlanOrBuilder getBasePlanOrBuilder() {
    return basePlan_ == null ? com.crescent.farming.v1beta1.BasePlan.getDefaultInstance() : basePlan_;
  }

  public static final int EPOCH_RATIO_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object epochRatio_ = "";
  /**
   * <pre>
   * epoch_ratio specifies the distributing amount by ratio
   * </pre>
   *
   * <code>string epoch_ratio = 2 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
   * @return The epochRatio.
   */
  @java.lang.Override
  public java.lang.String getEpochRatio() {
    java.lang.Object ref = epochRatio_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      epochRatio_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * epoch_ratio specifies the distributing amount by ratio
   * </pre>
   *
   * <code>string epoch_ratio = 2 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
   * @return The bytes for epochRatio.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEpochRatioBytes() {
    java.lang.Object ref = epochRatio_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      epochRatio_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (basePlan_ != null) {
      output.writeMessage(1, getBasePlan());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(epochRatio_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, epochRatio_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (basePlan_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBasePlan());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(epochRatio_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, epochRatio_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.crescent.farming.v1beta1.RatioPlan)) {
      return super.equals(obj);
    }
    com.crescent.farming.v1beta1.RatioPlan other = (com.crescent.farming.v1beta1.RatioPlan) obj;

    if (hasBasePlan() != other.hasBasePlan()) return false;
    if (hasBasePlan()) {
      if (!getBasePlan()
          .equals(other.getBasePlan())) return false;
    }
    if (!getEpochRatio()
        .equals(other.getEpochRatio())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBasePlan()) {
      hash = (37 * hash) + BASE_PLAN_FIELD_NUMBER;
      hash = (53 * hash) + getBasePlan().hashCode();
    }
    hash = (37 * hash) + EPOCH_RATIO_FIELD_NUMBER;
    hash = (53 * hash) + getEpochRatio().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.crescent.farming.v1beta1.RatioPlan parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.RatioPlan parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.RatioPlan parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.RatioPlan parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.RatioPlan parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.RatioPlan parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.RatioPlan parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.farming.v1beta1.RatioPlan parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.crescent.farming.v1beta1.RatioPlan parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.crescent.farming.v1beta1.RatioPlan parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.RatioPlan parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.farming.v1beta1.RatioPlan parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.crescent.farming.v1beta1.RatioPlan prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * RatioPlan defines a plan that distributes to farmers by ratio
   * distribution for every epoch day.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.RatioPlan}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.RatioPlan)
      com.crescent.farming.v1beta1.RatioPlanOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.crescent.farming.v1beta1.FarmingProto.internal_static_crescent_farming_v1beta1_RatioPlan_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.crescent.farming.v1beta1.FarmingProto.internal_static_crescent_farming_v1beta1_RatioPlan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.crescent.farming.v1beta1.RatioPlan.class, com.crescent.farming.v1beta1.RatioPlan.Builder.class);
    }

    // Construct using com.crescent.farming.v1beta1.RatioPlan.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      basePlan_ = null;
      if (basePlanBuilder_ != null) {
        basePlanBuilder_.dispose();
        basePlanBuilder_ = null;
      }
      epochRatio_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.crescent.farming.v1beta1.FarmingProto.internal_static_crescent_farming_v1beta1_RatioPlan_descriptor;
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.RatioPlan getDefaultInstanceForType() {
      return com.crescent.farming.v1beta1.RatioPlan.getDefaultInstance();
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.RatioPlan build() {
      com.crescent.farming.v1beta1.RatioPlan result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.RatioPlan buildPartial() {
      com.crescent.farming.v1beta1.RatioPlan result = new com.crescent.farming.v1beta1.RatioPlan(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.crescent.farming.v1beta1.RatioPlan result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.basePlan_ = basePlanBuilder_ == null
            ? basePlan_
            : basePlanBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.epochRatio_ = epochRatio_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.crescent.farming.v1beta1.RatioPlan) {
        return mergeFrom((com.crescent.farming.v1beta1.RatioPlan)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.crescent.farming.v1beta1.RatioPlan other) {
      if (other == com.crescent.farming.v1beta1.RatioPlan.getDefaultInstance()) return this;
      if (other.hasBasePlan()) {
        mergeBasePlan(other.getBasePlan());
      }
      if (!other.getEpochRatio().isEmpty()) {
        epochRatio_ = other.epochRatio_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getBasePlanFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              epochRatio_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.crescent.farming.v1beta1.BasePlan basePlan_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.crescent.farming.v1beta1.BasePlan, com.crescent.farming.v1beta1.BasePlan.Builder, com.crescent.farming.v1beta1.BasePlanOrBuilder> basePlanBuilder_;
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     * @return Whether the basePlan field is set.
     */
    public boolean hasBasePlan() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     * @return The basePlan.
     */
    public com.crescent.farming.v1beta1.BasePlan getBasePlan() {
      if (basePlanBuilder_ == null) {
        return basePlan_ == null ? com.crescent.farming.v1beta1.BasePlan.getDefaultInstance() : basePlan_;
      } else {
        return basePlanBuilder_.getMessage();
      }
    }
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     */
    public Builder setBasePlan(com.crescent.farming.v1beta1.BasePlan value) {
      if (basePlanBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        basePlan_ = value;
      } else {
        basePlanBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     */
    public Builder setBasePlan(
        com.crescent.farming.v1beta1.BasePlan.Builder builderForValue) {
      if (basePlanBuilder_ == null) {
        basePlan_ = builderForValue.build();
      } else {
        basePlanBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     */
    public Builder mergeBasePlan(com.crescent.farming.v1beta1.BasePlan value) {
      if (basePlanBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          basePlan_ != null &&
          basePlan_ != com.crescent.farming.v1beta1.BasePlan.getDefaultInstance()) {
          getBasePlanBuilder().mergeFrom(value);
        } else {
          basePlan_ = value;
        }
      } else {
        basePlanBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     */
    public Builder clearBasePlan() {
      bitField0_ = (bitField0_ & ~0x00000001);
      basePlan_ = null;
      if (basePlanBuilder_ != null) {
        basePlanBuilder_.dispose();
        basePlanBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     */
    public com.crescent.farming.v1beta1.BasePlan.Builder getBasePlanBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getBasePlanFieldBuilder().getBuilder();
    }
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     */
    public com.crescent.farming.v1beta1.BasePlanOrBuilder getBasePlanOrBuilder() {
      if (basePlanBuilder_ != null) {
        return basePlanBuilder_.getMessageOrBuilder();
      } else {
        return basePlan_ == null ?
            com.crescent.farming.v1beta1.BasePlan.getDefaultInstance() : basePlan_;
      }
    }
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [json_name = "basePlan", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.crescent.farming.v1beta1.BasePlan, com.crescent.farming.v1beta1.BasePlan.Builder, com.crescent.farming.v1beta1.BasePlanOrBuilder> 
        getBasePlanFieldBuilder() {
      if (basePlanBuilder_ == null) {
        basePlanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.crescent.farming.v1beta1.BasePlan, com.crescent.farming.v1beta1.BasePlan.Builder, com.crescent.farming.v1beta1.BasePlanOrBuilder>(
                getBasePlan(),
                getParentForChildren(),
                isClean());
        basePlan_ = null;
      }
      return basePlanBuilder_;
    }

    private java.lang.Object epochRatio_ = "";
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 2 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @return The epochRatio.
     */
    public java.lang.String getEpochRatio() {
      java.lang.Object ref = epochRatio_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        epochRatio_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 2 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @return The bytes for epochRatio.
     */
    public com.google.protobuf.ByteString
        getEpochRatioBytes() {
      java.lang.Object ref = epochRatio_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        epochRatio_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 2 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @param value The epochRatio to set.
     * @return This builder for chaining.
     */
    public Builder setEpochRatio(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      epochRatio_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 2 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearEpochRatio() {
      epochRatio_ = getDefaultInstance().getEpochRatio();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 2 [json_name = "epochRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @param value The bytes for epochRatio to set.
     * @return This builder for chaining.
     */
    public Builder setEpochRatioBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      epochRatio_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.RatioPlan)
  }

  // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.RatioPlan)
  private static final com.crescent.farming.v1beta1.RatioPlan DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.crescent.farming.v1beta1.RatioPlan();
  }

  public static com.crescent.farming.v1beta1.RatioPlan getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RatioPlan>
      PARSER = new com.google.protobuf.AbstractParser<RatioPlan>() {
    @java.lang.Override
    public RatioPlan parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RatioPlan> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RatioPlan> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.crescent.farming.v1beta1.RatioPlan getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


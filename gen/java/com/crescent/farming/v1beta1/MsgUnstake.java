// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/farming/v1beta1/tx.proto

package com.crescent.farming.v1beta1;

/**
 * <pre>
 * MsgUnstake defines a SDK message for performing unstaking of coins from the
 * farming plan.
 * </pre>
 *
 * Protobuf type {@code crescent.farming.v1beta1.MsgUnstake}
 */
public final class MsgUnstake extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.MsgUnstake)
    MsgUnstakeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MsgUnstake.newBuilder() to construct.
  private MsgUnstake(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MsgUnstake() {
    farmer_ = "";
    unstakingCoins_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MsgUnstake();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.crescent.farming.v1beta1.TxProto.internal_static_crescent_farming_v1beta1_MsgUnstake_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.crescent.farming.v1beta1.TxProto.internal_static_crescent_farming_v1beta1_MsgUnstake_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.crescent.farming.v1beta1.MsgUnstake.class, com.crescent.farming.v1beta1.MsgUnstake.Builder.class);
  }

  public static final int FARMER_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object farmer_ = "";
  /**
   * <pre>
   * farmer defines the bech32-encoded address of the farmer
   * </pre>
   *
   * <code>string farmer = 1 [json_name = "farmer"];</code>
   * @return The farmer.
   */
  @java.lang.Override
  public java.lang.String getFarmer() {
    java.lang.Object ref = farmer_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      farmer_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * farmer defines the bech32-encoded address of the farmer
   * </pre>
   *
   * <code>string farmer = 1 [json_name = "farmer"];</code>
   * @return The bytes for farmer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFarmerBytes() {
    java.lang.Object ref = farmer_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      farmer_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UNSTAKING_COINS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> unstakingCoins_;
  /**
   * <pre>
   * unstaking_coins specifies coins to stake
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getUnstakingCoinsList() {
    return unstakingCoins_;
  }
  /**
   * <pre>
   * unstaking_coins specifies coins to stake
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getUnstakingCoinsOrBuilderList() {
    return unstakingCoins_;
  }
  /**
   * <pre>
   * unstaking_coins specifies coins to stake
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getUnstakingCoinsCount() {
    return unstakingCoins_.size();
  }
  /**
   * <pre>
   * unstaking_coins specifies coins to stake
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getUnstakingCoins(int index) {
    return unstakingCoins_.get(index);
  }
  /**
   * <pre>
   * unstaking_coins specifies coins to stake
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getUnstakingCoinsOrBuilder(
      int index) {
    return unstakingCoins_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(farmer_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, farmer_);
    }
    for (int i = 0; i < unstakingCoins_.size(); i++) {
      output.writeMessage(2, unstakingCoins_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(farmer_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, farmer_);
    }
    for (int i = 0; i < unstakingCoins_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, unstakingCoins_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.crescent.farming.v1beta1.MsgUnstake)) {
      return super.equals(obj);
    }
    com.crescent.farming.v1beta1.MsgUnstake other = (com.crescent.farming.v1beta1.MsgUnstake) obj;

    if (!getFarmer()
        .equals(other.getFarmer())) return false;
    if (!getUnstakingCoinsList()
        .equals(other.getUnstakingCoinsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FARMER_FIELD_NUMBER;
    hash = (53 * hash) + getFarmer().hashCode();
    if (getUnstakingCoinsCount() > 0) {
      hash = (37 * hash) + UNSTAKING_COINS_FIELD_NUMBER;
      hash = (53 * hash) + getUnstakingCoinsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.crescent.farming.v1beta1.MsgUnstake parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.MsgUnstake parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.MsgUnstake parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.MsgUnstake parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.MsgUnstake parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.farming.v1beta1.MsgUnstake parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.MsgUnstake parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.farming.v1beta1.MsgUnstake parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.crescent.farming.v1beta1.MsgUnstake parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.crescent.farming.v1beta1.MsgUnstake parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.crescent.farming.v1beta1.MsgUnstake parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.farming.v1beta1.MsgUnstake parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.crescent.farming.v1beta1.MsgUnstake prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * MsgUnstake defines a SDK message for performing unstaking of coins from the
   * farming plan.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.MsgUnstake}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.MsgUnstake)
      com.crescent.farming.v1beta1.MsgUnstakeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.crescent.farming.v1beta1.TxProto.internal_static_crescent_farming_v1beta1_MsgUnstake_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.crescent.farming.v1beta1.TxProto.internal_static_crescent_farming_v1beta1_MsgUnstake_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.crescent.farming.v1beta1.MsgUnstake.class, com.crescent.farming.v1beta1.MsgUnstake.Builder.class);
    }

    // Construct using com.crescent.farming.v1beta1.MsgUnstake.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      farmer_ = "";
      if (unstakingCoinsBuilder_ == null) {
        unstakingCoins_ = java.util.Collections.emptyList();
      } else {
        unstakingCoins_ = null;
        unstakingCoinsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.crescent.farming.v1beta1.TxProto.internal_static_crescent_farming_v1beta1_MsgUnstake_descriptor;
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.MsgUnstake getDefaultInstanceForType() {
      return com.crescent.farming.v1beta1.MsgUnstake.getDefaultInstance();
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.MsgUnstake build() {
      com.crescent.farming.v1beta1.MsgUnstake result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.crescent.farming.v1beta1.MsgUnstake buildPartial() {
      com.crescent.farming.v1beta1.MsgUnstake result = new com.crescent.farming.v1beta1.MsgUnstake(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.crescent.farming.v1beta1.MsgUnstake result) {
      if (unstakingCoinsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          unstakingCoins_ = java.util.Collections.unmodifiableList(unstakingCoins_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.unstakingCoins_ = unstakingCoins_;
      } else {
        result.unstakingCoins_ = unstakingCoinsBuilder_.build();
      }
    }

    private void buildPartial0(com.crescent.farming.v1beta1.MsgUnstake result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.farmer_ = farmer_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.crescent.farming.v1beta1.MsgUnstake) {
        return mergeFrom((com.crescent.farming.v1beta1.MsgUnstake)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.crescent.farming.v1beta1.MsgUnstake other) {
      if (other == com.crescent.farming.v1beta1.MsgUnstake.getDefaultInstance()) return this;
      if (!other.getFarmer().isEmpty()) {
        farmer_ = other.farmer_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (unstakingCoinsBuilder_ == null) {
        if (!other.unstakingCoins_.isEmpty()) {
          if (unstakingCoins_.isEmpty()) {
            unstakingCoins_ = other.unstakingCoins_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureUnstakingCoinsIsMutable();
            unstakingCoins_.addAll(other.unstakingCoins_);
          }
          onChanged();
        }
      } else {
        if (!other.unstakingCoins_.isEmpty()) {
          if (unstakingCoinsBuilder_.isEmpty()) {
            unstakingCoinsBuilder_.dispose();
            unstakingCoinsBuilder_ = null;
            unstakingCoins_ = other.unstakingCoins_;
            bitField0_ = (bitField0_ & ~0x00000002);
            unstakingCoinsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getUnstakingCoinsFieldBuilder() : null;
          } else {
            unstakingCoinsBuilder_.addAllMessages(other.unstakingCoins_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              farmer_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (unstakingCoinsBuilder_ == null) {
                ensureUnstakingCoinsIsMutable();
                unstakingCoins_.add(m);
              } else {
                unstakingCoinsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object farmer_ = "";
    /**
     * <pre>
     * farmer defines the bech32-encoded address of the farmer
     * </pre>
     *
     * <code>string farmer = 1 [json_name = "farmer"];</code>
     * @return The farmer.
     */
    public java.lang.String getFarmer() {
      java.lang.Object ref = farmer_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        farmer_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * farmer defines the bech32-encoded address of the farmer
     * </pre>
     *
     * <code>string farmer = 1 [json_name = "farmer"];</code>
     * @return The bytes for farmer.
     */
    public com.google.protobuf.ByteString
        getFarmerBytes() {
      java.lang.Object ref = farmer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        farmer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * farmer defines the bech32-encoded address of the farmer
     * </pre>
     *
     * <code>string farmer = 1 [json_name = "farmer"];</code>
     * @param value The farmer to set.
     * @return This builder for chaining.
     */
    public Builder setFarmer(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      farmer_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * farmer defines the bech32-encoded address of the farmer
     * </pre>
     *
     * <code>string farmer = 1 [json_name = "farmer"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFarmer() {
      farmer_ = getDefaultInstance().getFarmer();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * farmer defines the bech32-encoded address of the farmer
     * </pre>
     *
     * <code>string farmer = 1 [json_name = "farmer"];</code>
     * @param value The bytes for farmer to set.
     * @return This builder for chaining.
     */
    public Builder setFarmerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      farmer_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> unstakingCoins_ =
      java.util.Collections.emptyList();
    private void ensureUnstakingCoinsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        unstakingCoins_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(unstakingCoins_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> unstakingCoinsBuilder_;

    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getUnstakingCoinsList() {
      if (unstakingCoinsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(unstakingCoins_);
      } else {
        return unstakingCoinsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getUnstakingCoinsCount() {
      if (unstakingCoinsBuilder_ == null) {
        return unstakingCoins_.size();
      } else {
        return unstakingCoinsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getUnstakingCoins(int index) {
      if (unstakingCoinsBuilder_ == null) {
        return unstakingCoins_.get(index);
      } else {
        return unstakingCoinsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setUnstakingCoins(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (unstakingCoinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnstakingCoinsIsMutable();
        unstakingCoins_.set(index, value);
        onChanged();
      } else {
        unstakingCoinsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setUnstakingCoins(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (unstakingCoinsBuilder_ == null) {
        ensureUnstakingCoinsIsMutable();
        unstakingCoins_.set(index, builderForValue.build());
        onChanged();
      } else {
        unstakingCoinsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addUnstakingCoins(com.cosmos.base.v1beta1.Coin value) {
      if (unstakingCoinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnstakingCoinsIsMutable();
        unstakingCoins_.add(value);
        onChanged();
      } else {
        unstakingCoinsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addUnstakingCoins(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (unstakingCoinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnstakingCoinsIsMutable();
        unstakingCoins_.add(index, value);
        onChanged();
      } else {
        unstakingCoinsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addUnstakingCoins(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (unstakingCoinsBuilder_ == null) {
        ensureUnstakingCoinsIsMutable();
        unstakingCoins_.add(builderForValue.build());
        onChanged();
      } else {
        unstakingCoinsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addUnstakingCoins(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (unstakingCoinsBuilder_ == null) {
        ensureUnstakingCoinsIsMutable();
        unstakingCoins_.add(index, builderForValue.build());
        onChanged();
      } else {
        unstakingCoinsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllUnstakingCoins(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (unstakingCoinsBuilder_ == null) {
        ensureUnstakingCoinsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, unstakingCoins_);
        onChanged();
      } else {
        unstakingCoinsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearUnstakingCoins() {
      if (unstakingCoinsBuilder_ == null) {
        unstakingCoins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        unstakingCoinsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeUnstakingCoins(int index) {
      if (unstakingCoinsBuilder_ == null) {
        ensureUnstakingCoinsIsMutable();
        unstakingCoins_.remove(index);
        onChanged();
      } else {
        unstakingCoinsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getUnstakingCoinsBuilder(
        int index) {
      return getUnstakingCoinsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getUnstakingCoinsOrBuilder(
        int index) {
      if (unstakingCoinsBuilder_ == null) {
        return unstakingCoins_.get(index);  } else {
        return unstakingCoinsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getUnstakingCoinsOrBuilderList() {
      if (unstakingCoinsBuilder_ != null) {
        return unstakingCoinsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(unstakingCoins_);
      }
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addUnstakingCoinsBuilder() {
      return getUnstakingCoinsFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addUnstakingCoinsBuilder(
        int index) {
      return getUnstakingCoinsFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * unstaking_coins specifies coins to stake
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin unstaking_coins = 2 [json_name = "unstakingCoins", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"unstaking_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getUnstakingCoinsBuilderList() {
      return getUnstakingCoinsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getUnstakingCoinsFieldBuilder() {
      if (unstakingCoinsBuilder_ == null) {
        unstakingCoinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                unstakingCoins_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        unstakingCoins_ = null;
      }
      return unstakingCoinsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.MsgUnstake)
  }

  // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.MsgUnstake)
  private static final com.crescent.farming.v1beta1.MsgUnstake DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.crescent.farming.v1beta1.MsgUnstake();
  }

  public static com.crescent.farming.v1beta1.MsgUnstake getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MsgUnstake>
      PARSER = new com.google.protobuf.AbstractParser<MsgUnstake>() {
    @java.lang.Override
    public MsgUnstake parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MsgUnstake> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MsgUnstake> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.crescent.farming.v1beta1.MsgUnstake getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


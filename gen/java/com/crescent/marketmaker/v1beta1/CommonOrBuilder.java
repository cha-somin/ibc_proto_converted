// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/marketmaker/v1beta1/marketmaker.proto

package com.crescent.marketmaker.v1beta1;

public interface CommonOrBuilder extends
    // @@protoc_insertion_point(interface_extends:crescent.marketmaker.v1beta1.Common)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Minimum ratio to maintain the tick order
   * </pre>
   *
   * <code>string min_open_ratio = 1 [json_name = "minOpenRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"min_open_ratio&#92;""];</code>
   * @return The minOpenRatio.
   */
  java.lang.String getMinOpenRatio();
  /**
   * <pre>
   * Minimum ratio to maintain the tick order
   * </pre>
   *
   * <code>string min_open_ratio = 1 [json_name = "minOpenRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"min_open_ratio&#92;""];</code>
   * @return The bytes for minOpenRatio.
   */
  com.google.protobuf.ByteString
      getMinOpenRatioBytes();

  /**
   * <pre>
   * Minimum ratio of open amount to MinDepth
   * </pre>
   *
   * <code>string min_open_depth_ratio = 2 [json_name = "minOpenDepthRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"min_open_depth_ratio&#92;""];</code>
   * @return The minOpenDepthRatio.
   */
  java.lang.String getMinOpenDepthRatio();
  /**
   * <pre>
   * Minimum ratio of open amount to MinDepth
   * </pre>
   *
   * <code>string min_open_depth_ratio = 2 [json_name = "minOpenDepthRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"min_open_depth_ratio&#92;""];</code>
   * @return The bytes for minOpenDepthRatio.
   */
  com.google.protobuf.ByteString
      getMinOpenDepthRatioBytes();

  /**
   * <pre>
   * Maximum allowable consecutive blocks of outage
   * </pre>
   *
   * <code>uint32 max_downtime = 3 [json_name = "maxDowntime", (.gogoproto.moretags) = "yaml:&#92;"max_downtime&#92;""];</code>
   * @return The maxDowntime.
   */
  int getMaxDowntime();

  /**
   * <pre>
   * Maximum allowable sum of blocks in an hour
   * </pre>
   *
   * <code>uint32 max_total_downtime = 4 [json_name = "maxTotalDowntime", (.gogoproto.moretags) = "yaml:&#92;"max_total_downtime&#92;""];</code>
   * @return The maxTotalDowntime.
   */
  int getMaxTotalDowntime();

  /**
   * <pre>
   * Minimum value of LiveHour to achieve LiveDay
   * </pre>
   *
   * <code>uint32 min_hours = 5 [json_name = "minHours", (.gogoproto.moretags) = "yaml:&#92;"min_hours&#92;""];</code>
   * @return The minHours.
   */
  int getMinHours();

  /**
   * <pre>
   * Minimum value of LiveDay to maintain MM eligibility
   * </pre>
   *
   * <code>uint32 min_days = 6 [json_name = "minDays", (.gogoproto.moretags) = "yaml:&#92;"min_days&#92;""];</code>
   * @return The minDays.
   */
  int getMinDays();
}

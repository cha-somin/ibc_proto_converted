// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/marketmaker/v1beta1/proposal.proto

package com.crescent.marketmaker.v1beta1;

public final class ProposalProto {
  private ProposalProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_marketmaker_v1beta1_MarketMakerProposal_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_marketmaker_v1beta1_MarketMakerProposal_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_marketmaker_v1beta1_MarketMakerHandle_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_marketmaker_v1beta1_MarketMakerHandle_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_marketmaker_v1beta1_IncentiveDistribution_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_marketmaker_v1beta1_IncentiveDistribution_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+crescent/marketmaker/v1beta1/proposal." +
      "proto\022\034crescent.marketmaker.v1beta1\032\024gog" +
      "oproto/gogo.proto\032\031cosmos_proto/cosmos.p" +
      "roto\032\036cosmos/base/v1beta1/coin.proto\032.cr" +
      "escent/marketmaker/v1beta1/marketmaker.p" +
      "roto\032\037google/protobuf/timestamp.proto\"\224\004" +
      "\n\023MarketMakerProposal\022\024\n\005title\030\001 \001(\tR\005ti" +
      "tle\022 \n\013description\030\002 \001(\tR\013description\022j\n" +
      "\ninclusions\030\003 \003(\0132/.crescent.marketmaker" +
      ".v1beta1.MarketMakerHandleB\031\310\336\037\000\362\336\037\021yaml" +
      ":\"inclusions\"R\ninclusions\022j\n\nexclusions\030" +
      "\004 \003(\0132/.crescent.marketmaker.v1beta1.Mar" +
      "ketMakerHandleB\031\310\336\037\000\362\336\037\021yaml:\"exclusions" +
      "\"R\nexclusions\022j\n\nrejections\030\005 \003(\0132/.cres" +
      "cent.marketmaker.v1beta1.MarketMakerHand" +
      "leB\031\310\336\037\000\362\336\037\021yaml:\"rejections\"R\nrejection" +
      "s\022w\n\rdistributions\030\006 \003(\01323.crescent.mark" +
      "etmaker.v1beta1.IncentiveDistributionB\034\310" +
      "\336\037\000\362\336\037\024yaml:\"distributions\"R\rdistributio" +
      "ns:\010\210\240\037\000\230\240\037\000\"x\n\021MarketMakerHandle\022,\n\007add" +
      "ress\030\001 \001(\tB\022\362\336\037\016yaml:\"address\"R\007address\022" +
      "+\n\007pair_id\030\002 \001(\004B\022\362\336\037\016yaml:\"pair_id\"R\006pa" +
      "irId:\010\210\240\037\000\350\240\037\000\"\362\001\n\025IncentiveDistribution" +
      "\022,\n\007address\030\001 \001(\tB\022\362\336\037\016yaml:\"address\"R\007a" +
      "ddress\022+\n\007pair_id\030\002 \001(\004B\022\362\336\037\016yaml:\"pair_" +
      "id\"R\006pairId\022t\n\006amount\030\003 \003(\0132\031.cosmos.bas" +
      "e.v1beta1.CoinBA\310\336\037\000\362\336\037\ryaml:\"amount\"\252\337\037" +
      "(github.com/cosmos/cosmos-sdk/types.Coin" +
      "sR\006amount:\010\210\240\037\000\350\240\037\000B\200\002\n com.crescent.mar" +
      "ketmaker.v1beta1B\rProposalProtoP\001Z;githu" +
      "b.com/crescent-network/crescent/v5/x/mar" +
      "ketmaker/types\242\002\003CMX\252\002\034Crescent.Marketma" +
      "ker.V1beta1\312\002\034Crescent\\Marketmaker\\V1bet" +
      "a1\342\002(Crescent\\Marketmaker\\V1beta1\\GPBMet" +
      "adata\352\002\036Crescent::Marketmaker::V1beta1b\006" +
      "proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.crescent.marketmaker.v1beta1.MarketmakerProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_crescent_marketmaker_v1beta1_MarketMakerProposal_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_crescent_marketmaker_v1beta1_MarketMakerProposal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_marketmaker_v1beta1_MarketMakerProposal_descriptor,
        new java.lang.String[] { "Title", "Description", "Inclusions", "Exclusions", "Rejections", "Distributions", });
    internal_static_crescent_marketmaker_v1beta1_MarketMakerHandle_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_crescent_marketmaker_v1beta1_MarketMakerHandle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_marketmaker_v1beta1_MarketMakerHandle_descriptor,
        new java.lang.String[] { "Address", "PairId", });
    internal_static_crescent_marketmaker_v1beta1_IncentiveDistribution_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_crescent_marketmaker_v1beta1_IncentiveDistribution_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_marketmaker_v1beta1_IncentiveDistribution_descriptor,
        new java.lang.String[] { "Address", "PairId", "Amount", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.crescent.marketmaker.v1beta1.MarketmakerProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

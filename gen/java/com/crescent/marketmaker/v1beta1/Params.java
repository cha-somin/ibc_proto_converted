// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/marketmaker/v1beta1/marketmaker.proto

package com.crescent.marketmaker.v1beta1;

/**
 * <pre>
 * Params defines the set of params for the marketmaker module.
 * </pre>
 *
 * Protobuf type {@code crescent.marketmaker.v1beta1.Params}
 */
public final class Params extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:crescent.marketmaker.v1beta1.Params)
    ParamsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Params.newBuilder() to construct.
  private Params(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Params() {
    incentiveBudgetAddress_ = "";
    depositAmount_ = java.util.Collections.emptyList();
    incentivePairs_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Params();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.crescent.marketmaker.v1beta1.MarketmakerProto.internal_static_crescent_marketmaker_v1beta1_Params_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.crescent.marketmaker.v1beta1.MarketmakerProto.internal_static_crescent_marketmaker_v1beta1_Params_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.crescent.marketmaker.v1beta1.Params.class, com.crescent.marketmaker.v1beta1.Params.Builder.class);
  }

  public static final int INCENTIVE_BUDGET_ADDRESS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object incentiveBudgetAddress_ = "";
  /**
   * <pre>
   * Address containing the funds used to distribute incentives
   * </pre>
   *
   * <code>string incentive_budget_address = 1 [json_name = "incentiveBudgetAddress", (.gogoproto.moretags) = "yaml:&#92;"incentive_budget_address&#92;""];</code>
   * @return The incentiveBudgetAddress.
   */
  @java.lang.Override
  public java.lang.String getIncentiveBudgetAddress() {
    java.lang.Object ref = incentiveBudgetAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      incentiveBudgetAddress_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Address containing the funds used to distribute incentives
   * </pre>
   *
   * <code>string incentive_budget_address = 1 [json_name = "incentiveBudgetAddress", (.gogoproto.moretags) = "yaml:&#92;"incentive_budget_address&#92;""];</code>
   * @return The bytes for incentiveBudgetAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIncentiveBudgetAddressBytes() {
    java.lang.Object ref = incentiveBudgetAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      incentiveBudgetAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEPOSIT_AMOUNT_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> depositAmount_;
  /**
   * <pre>
   * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
   * market maker included or rejected through the MarketMaker Proposal
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getDepositAmountList() {
    return depositAmount_;
  }
  /**
   * <pre>
   * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
   * market maker included or rejected through the MarketMaker Proposal
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getDepositAmountOrBuilderList() {
    return depositAmount_;
  }
  /**
   * <pre>
   * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
   * market maker included or rejected through the MarketMaker Proposal
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getDepositAmountCount() {
    return depositAmount_.size();
  }
  /**
   * <pre>
   * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
   * market maker included or rejected through the MarketMaker Proposal
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getDepositAmount(int index) {
    return depositAmount_.get(index);
  }
  /**
   * <pre>
   * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
   * market maker included or rejected through the MarketMaker Proposal
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getDepositAmountOrBuilder(
      int index) {
    return depositAmount_.get(index);
  }

  public static final int COMMON_FIELD_NUMBER = 3;
  private com.crescent.marketmaker.v1beta1.Common common_;
  /**
   * <pre>
   * Common variables used in market maker scoring system
   * </pre>
   *
   * <code>.crescent.marketmaker.v1beta1.Common common = 3 [json_name = "common", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"common&#92;""];</code>
   * @return Whether the common field is set.
   */
  @java.lang.Override
  public boolean hasCommon() {
    return common_ != null;
  }
  /**
   * <pre>
   * Common variables used in market maker scoring system
   * </pre>
   *
   * <code>.crescent.marketmaker.v1beta1.Common common = 3 [json_name = "common", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"common&#92;""];</code>
   * @return The common.
   */
  @java.lang.Override
  public com.crescent.marketmaker.v1beta1.Common getCommon() {
    return common_ == null ? com.crescent.marketmaker.v1beta1.Common.getDefaultInstance() : common_;
  }
  /**
   * <pre>
   * Common variables used in market maker scoring system
   * </pre>
   *
   * <code>.crescent.marketmaker.v1beta1.Common common = 3 [json_name = "common", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"common&#92;""];</code>
   */
  @java.lang.Override
  public com.crescent.marketmaker.v1beta1.CommonOrBuilder getCommonOrBuilder() {
    return common_ == null ? com.crescent.marketmaker.v1beta1.Common.getDefaultInstance() : common_;
  }

  public static final int INCENTIVE_PAIRS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.crescent.marketmaker.v1beta1.IncentivePair> incentivePairs_;
  /**
   * <pre>
   * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
   * </pre>
   *
   * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
   */
  @java.lang.Override
  public java.util.List<com.crescent.marketmaker.v1beta1.IncentivePair> getIncentivePairsList() {
    return incentivePairs_;
  }
  /**
   * <pre>
   * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
   * </pre>
   *
   * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.crescent.marketmaker.v1beta1.IncentivePairOrBuilder> 
      getIncentivePairsOrBuilderList() {
    return incentivePairs_;
  }
  /**
   * <pre>
   * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
   * </pre>
   *
   * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
   */
  @java.lang.Override
  public int getIncentivePairsCount() {
    return incentivePairs_.size();
  }
  /**
   * <pre>
   * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
   * </pre>
   *
   * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
   */
  @java.lang.Override
  public com.crescent.marketmaker.v1beta1.IncentivePair getIncentivePairs(int index) {
    return incentivePairs_.get(index);
  }
  /**
   * <pre>
   * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
   * </pre>
   *
   * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
   */
  @java.lang.Override
  public com.crescent.marketmaker.v1beta1.IncentivePairOrBuilder getIncentivePairsOrBuilder(
      int index) {
    return incentivePairs_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(incentiveBudgetAddress_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, incentiveBudgetAddress_);
    }
    for (int i = 0; i < depositAmount_.size(); i++) {
      output.writeMessage(2, depositAmount_.get(i));
    }
    if (common_ != null) {
      output.writeMessage(3, getCommon());
    }
    for (int i = 0; i < incentivePairs_.size(); i++) {
      output.writeMessage(4, incentivePairs_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(incentiveBudgetAddress_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, incentiveBudgetAddress_);
    }
    for (int i = 0; i < depositAmount_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, depositAmount_.get(i));
    }
    if (common_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getCommon());
    }
    for (int i = 0; i < incentivePairs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, incentivePairs_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.crescent.marketmaker.v1beta1.Params)) {
      return super.equals(obj);
    }
    com.crescent.marketmaker.v1beta1.Params other = (com.crescent.marketmaker.v1beta1.Params) obj;

    if (!getIncentiveBudgetAddress()
        .equals(other.getIncentiveBudgetAddress())) return false;
    if (!getDepositAmountList()
        .equals(other.getDepositAmountList())) return false;
    if (hasCommon() != other.hasCommon()) return false;
    if (hasCommon()) {
      if (!getCommon()
          .equals(other.getCommon())) return false;
    }
    if (!getIncentivePairsList()
        .equals(other.getIncentivePairsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INCENTIVE_BUDGET_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getIncentiveBudgetAddress().hashCode();
    if (getDepositAmountCount() > 0) {
      hash = (37 * hash) + DEPOSIT_AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getDepositAmountList().hashCode();
    }
    if (hasCommon()) {
      hash = (37 * hash) + COMMON_FIELD_NUMBER;
      hash = (53 * hash) + getCommon().hashCode();
    }
    if (getIncentivePairsCount() > 0) {
      hash = (37 * hash) + INCENTIVE_PAIRS_FIELD_NUMBER;
      hash = (53 * hash) + getIncentivePairsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.crescent.marketmaker.v1beta1.Params parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.marketmaker.v1beta1.Params parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.marketmaker.v1beta1.Params parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.marketmaker.v1beta1.Params parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.marketmaker.v1beta1.Params parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.marketmaker.v1beta1.Params parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.marketmaker.v1beta1.Params parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.marketmaker.v1beta1.Params parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.crescent.marketmaker.v1beta1.Params parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.crescent.marketmaker.v1beta1.Params parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.crescent.marketmaker.v1beta1.Params parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.marketmaker.v1beta1.Params parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.crescent.marketmaker.v1beta1.Params prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Params defines the set of params for the marketmaker module.
   * </pre>
   *
   * Protobuf type {@code crescent.marketmaker.v1beta1.Params}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:crescent.marketmaker.v1beta1.Params)
      com.crescent.marketmaker.v1beta1.ParamsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.crescent.marketmaker.v1beta1.MarketmakerProto.internal_static_crescent_marketmaker_v1beta1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.crescent.marketmaker.v1beta1.MarketmakerProto.internal_static_crescent_marketmaker_v1beta1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.crescent.marketmaker.v1beta1.Params.class, com.crescent.marketmaker.v1beta1.Params.Builder.class);
    }

    // Construct using com.crescent.marketmaker.v1beta1.Params.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      incentiveBudgetAddress_ = "";
      if (depositAmountBuilder_ == null) {
        depositAmount_ = java.util.Collections.emptyList();
      } else {
        depositAmount_ = null;
        depositAmountBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      common_ = null;
      if (commonBuilder_ != null) {
        commonBuilder_.dispose();
        commonBuilder_ = null;
      }
      if (incentivePairsBuilder_ == null) {
        incentivePairs_ = java.util.Collections.emptyList();
      } else {
        incentivePairs_ = null;
        incentivePairsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.crescent.marketmaker.v1beta1.MarketmakerProto.internal_static_crescent_marketmaker_v1beta1_Params_descriptor;
    }

    @java.lang.Override
    public com.crescent.marketmaker.v1beta1.Params getDefaultInstanceForType() {
      return com.crescent.marketmaker.v1beta1.Params.getDefaultInstance();
    }

    @java.lang.Override
    public com.crescent.marketmaker.v1beta1.Params build() {
      com.crescent.marketmaker.v1beta1.Params result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.crescent.marketmaker.v1beta1.Params buildPartial() {
      com.crescent.marketmaker.v1beta1.Params result = new com.crescent.marketmaker.v1beta1.Params(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.crescent.marketmaker.v1beta1.Params result) {
      if (depositAmountBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          depositAmount_ = java.util.Collections.unmodifiableList(depositAmount_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.depositAmount_ = depositAmount_;
      } else {
        result.depositAmount_ = depositAmountBuilder_.build();
      }
      if (incentivePairsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          incentivePairs_ = java.util.Collections.unmodifiableList(incentivePairs_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.incentivePairs_ = incentivePairs_;
      } else {
        result.incentivePairs_ = incentivePairsBuilder_.build();
      }
    }

    private void buildPartial0(com.crescent.marketmaker.v1beta1.Params result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.incentiveBudgetAddress_ = incentiveBudgetAddress_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.common_ = commonBuilder_ == null
            ? common_
            : commonBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.crescent.marketmaker.v1beta1.Params) {
        return mergeFrom((com.crescent.marketmaker.v1beta1.Params)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.crescent.marketmaker.v1beta1.Params other) {
      if (other == com.crescent.marketmaker.v1beta1.Params.getDefaultInstance()) return this;
      if (!other.getIncentiveBudgetAddress().isEmpty()) {
        incentiveBudgetAddress_ = other.incentiveBudgetAddress_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (depositAmountBuilder_ == null) {
        if (!other.depositAmount_.isEmpty()) {
          if (depositAmount_.isEmpty()) {
            depositAmount_ = other.depositAmount_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDepositAmountIsMutable();
            depositAmount_.addAll(other.depositAmount_);
          }
          onChanged();
        }
      } else {
        if (!other.depositAmount_.isEmpty()) {
          if (depositAmountBuilder_.isEmpty()) {
            depositAmountBuilder_.dispose();
            depositAmountBuilder_ = null;
            depositAmount_ = other.depositAmount_;
            bitField0_ = (bitField0_ & ~0x00000002);
            depositAmountBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDepositAmountFieldBuilder() : null;
          } else {
            depositAmountBuilder_.addAllMessages(other.depositAmount_);
          }
        }
      }
      if (other.hasCommon()) {
        mergeCommon(other.getCommon());
      }
      if (incentivePairsBuilder_ == null) {
        if (!other.incentivePairs_.isEmpty()) {
          if (incentivePairs_.isEmpty()) {
            incentivePairs_ = other.incentivePairs_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureIncentivePairsIsMutable();
            incentivePairs_.addAll(other.incentivePairs_);
          }
          onChanged();
        }
      } else {
        if (!other.incentivePairs_.isEmpty()) {
          if (incentivePairsBuilder_.isEmpty()) {
            incentivePairsBuilder_.dispose();
            incentivePairsBuilder_ = null;
            incentivePairs_ = other.incentivePairs_;
            bitField0_ = (bitField0_ & ~0x00000008);
            incentivePairsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getIncentivePairsFieldBuilder() : null;
          } else {
            incentivePairsBuilder_.addAllMessages(other.incentivePairs_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              incentiveBudgetAddress_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (depositAmountBuilder_ == null) {
                ensureDepositAmountIsMutable();
                depositAmount_.add(m);
              } else {
                depositAmountBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getCommonFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              com.crescent.marketmaker.v1beta1.IncentivePair m =
                  input.readMessage(
                      com.crescent.marketmaker.v1beta1.IncentivePair.parser(),
                      extensionRegistry);
              if (incentivePairsBuilder_ == null) {
                ensureIncentivePairsIsMutable();
                incentivePairs_.add(m);
              } else {
                incentivePairsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object incentiveBudgetAddress_ = "";
    /**
     * <pre>
     * Address containing the funds used to distribute incentives
     * </pre>
     *
     * <code>string incentive_budget_address = 1 [json_name = "incentiveBudgetAddress", (.gogoproto.moretags) = "yaml:&#92;"incentive_budget_address&#92;""];</code>
     * @return The incentiveBudgetAddress.
     */
    public java.lang.String getIncentiveBudgetAddress() {
      java.lang.Object ref = incentiveBudgetAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        incentiveBudgetAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Address containing the funds used to distribute incentives
     * </pre>
     *
     * <code>string incentive_budget_address = 1 [json_name = "incentiveBudgetAddress", (.gogoproto.moretags) = "yaml:&#92;"incentive_budget_address&#92;""];</code>
     * @return The bytes for incentiveBudgetAddress.
     */
    public com.google.protobuf.ByteString
        getIncentiveBudgetAddressBytes() {
      java.lang.Object ref = incentiveBudgetAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        incentiveBudgetAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Address containing the funds used to distribute incentives
     * </pre>
     *
     * <code>string incentive_budget_address = 1 [json_name = "incentiveBudgetAddress", (.gogoproto.moretags) = "yaml:&#92;"incentive_budget_address&#92;""];</code>
     * @param value The incentiveBudgetAddress to set.
     * @return This builder for chaining.
     */
    public Builder setIncentiveBudgetAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      incentiveBudgetAddress_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Address containing the funds used to distribute incentives
     * </pre>
     *
     * <code>string incentive_budget_address = 1 [json_name = "incentiveBudgetAddress", (.gogoproto.moretags) = "yaml:&#92;"incentive_budget_address&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearIncentiveBudgetAddress() {
      incentiveBudgetAddress_ = getDefaultInstance().getIncentiveBudgetAddress();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Address containing the funds used to distribute incentives
     * </pre>
     *
     * <code>string incentive_budget_address = 1 [json_name = "incentiveBudgetAddress", (.gogoproto.moretags) = "yaml:&#92;"incentive_budget_address&#92;""];</code>
     * @param value The bytes for incentiveBudgetAddress to set.
     * @return This builder for chaining.
     */
    public Builder setIncentiveBudgetAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      incentiveBudgetAddress_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> depositAmount_ =
      java.util.Collections.emptyList();
    private void ensureDepositAmountIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        depositAmount_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(depositAmount_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> depositAmountBuilder_;

    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getDepositAmountList() {
      if (depositAmountBuilder_ == null) {
        return java.util.Collections.unmodifiableList(depositAmount_);
      } else {
        return depositAmountBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getDepositAmountCount() {
      if (depositAmountBuilder_ == null) {
        return depositAmount_.size();
      } else {
        return depositAmountBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getDepositAmount(int index) {
      if (depositAmountBuilder_ == null) {
        return depositAmount_.get(index);
      } else {
        return depositAmountBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setDepositAmount(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (depositAmountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDepositAmountIsMutable();
        depositAmount_.set(index, value);
        onChanged();
      } else {
        depositAmountBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setDepositAmount(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (depositAmountBuilder_ == null) {
        ensureDepositAmountIsMutable();
        depositAmount_.set(index, builderForValue.build());
        onChanged();
      } else {
        depositAmountBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addDepositAmount(com.cosmos.base.v1beta1.Coin value) {
      if (depositAmountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDepositAmountIsMutable();
        depositAmount_.add(value);
        onChanged();
      } else {
        depositAmountBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addDepositAmount(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (depositAmountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDepositAmountIsMutable();
        depositAmount_.add(index, value);
        onChanged();
      } else {
        depositAmountBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addDepositAmount(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (depositAmountBuilder_ == null) {
        ensureDepositAmountIsMutable();
        depositAmount_.add(builderForValue.build());
        onChanged();
      } else {
        depositAmountBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addDepositAmount(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (depositAmountBuilder_ == null) {
        ensureDepositAmountIsMutable();
        depositAmount_.add(index, builderForValue.build());
        onChanged();
      } else {
        depositAmountBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllDepositAmount(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (depositAmountBuilder_ == null) {
        ensureDepositAmountIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, depositAmount_);
        onChanged();
      } else {
        depositAmountBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearDepositAmount() {
      if (depositAmountBuilder_ == null) {
        depositAmount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        depositAmountBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeDepositAmount(int index) {
      if (depositAmountBuilder_ == null) {
        ensureDepositAmountIsMutable();
        depositAmount_.remove(index);
        onChanged();
      } else {
        depositAmountBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getDepositAmountBuilder(
        int index) {
      return getDepositAmountFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getDepositAmountOrBuilder(
        int index) {
      if (depositAmountBuilder_ == null) {
        return depositAmount_.get(index);  } else {
        return depositAmountBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getDepositAmountOrBuilderList() {
      if (depositAmountBuilder_ != null) {
        return depositAmountBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(depositAmount_);
      }
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addDepositAmountBuilder() {
      return getDepositAmountFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addDepositAmountBuilder(
        int index) {
      return getDepositAmountFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * The amount of deposit to be applied to the market maker, which is calculated per pair and is refunded when the
     * market maker included or rejected through the MarketMaker Proposal
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_amount = 2 [json_name = "depositAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"deposit_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getDepositAmountBuilderList() {
      return getDepositAmountFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getDepositAmountFieldBuilder() {
      if (depositAmountBuilder_ == null) {
        depositAmountBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                depositAmount_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        depositAmount_ = null;
      }
      return depositAmountBuilder_;
    }

    private com.crescent.marketmaker.v1beta1.Common common_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.crescent.marketmaker.v1beta1.Common, com.crescent.marketmaker.v1beta1.Common.Builder, com.crescent.marketmaker.v1beta1.CommonOrBuilder> commonBuilder_;
    /**
     * <pre>
     * Common variables used in market maker scoring system
     * </pre>
     *
     * <code>.crescent.marketmaker.v1beta1.Common common = 3 [json_name = "common", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"common&#92;""];</code>
     * @return Whether the common field is set.
     */
    public boolean hasCommon() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Common variables used in market maker scoring system
     * </pre>
     *
     * <code>.crescent.marketmaker.v1beta1.Common common = 3 [json_name = "common", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"common&#92;""];</code>
     * @return The common.
     */
    public com.crescent.marketmaker.v1beta1.Common getCommon() {
      if (commonBuilder_ == null) {
        return common_ == null ? com.crescent.marketmaker.v1beta1.Common.getDefaultInstance() : common_;
      } else {
        return commonBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Common variables used in market maker scoring system
     * </pre>
     *
     * <code>.crescent.marketmaker.v1beta1.Common common = 3 [json_name = "common", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"common&#92;""];</code>
     */
    public Builder setCommon(com.crescent.marketmaker.v1beta1.Common value) {
      if (commonBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        common_ = value;
      } else {
        commonBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Common variables used in market maker scoring system
     * </pre>
     *
     * <code>.crescent.marketmaker.v1beta1.Common common = 3 [json_name = "common", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"common&#92;""];</code>
     */
    public Builder setCommon(
        com.crescent.marketmaker.v1beta1.Common.Builder builderForValue) {
      if (commonBuilder_ == null) {
        common_ = builderForValue.build();
      } else {
        commonBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Common variables used in market maker scoring system
     * </pre>
     *
     * <code>.crescent.marketmaker.v1beta1.Common common = 3 [json_name = "common", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"common&#92;""];</code>
     */
    public Builder mergeCommon(com.crescent.marketmaker.v1beta1.Common value) {
      if (commonBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          common_ != null &&
          common_ != com.crescent.marketmaker.v1beta1.Common.getDefaultInstance()) {
          getCommonBuilder().mergeFrom(value);
        } else {
          common_ = value;
        }
      } else {
        commonBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Common variables used in market maker scoring system
     * </pre>
     *
     * <code>.crescent.marketmaker.v1beta1.Common common = 3 [json_name = "common", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"common&#92;""];</code>
     */
    public Builder clearCommon() {
      bitField0_ = (bitField0_ & ~0x00000004);
      common_ = null;
      if (commonBuilder_ != null) {
        commonBuilder_.dispose();
        commonBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Common variables used in market maker scoring system
     * </pre>
     *
     * <code>.crescent.marketmaker.v1beta1.Common common = 3 [json_name = "common", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"common&#92;""];</code>
     */
    public com.crescent.marketmaker.v1beta1.Common.Builder getCommonBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getCommonFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Common variables used in market maker scoring system
     * </pre>
     *
     * <code>.crescent.marketmaker.v1beta1.Common common = 3 [json_name = "common", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"common&#92;""];</code>
     */
    public com.crescent.marketmaker.v1beta1.CommonOrBuilder getCommonOrBuilder() {
      if (commonBuilder_ != null) {
        return commonBuilder_.getMessageOrBuilder();
      } else {
        return common_ == null ?
            com.crescent.marketmaker.v1beta1.Common.getDefaultInstance() : common_;
      }
    }
    /**
     * <pre>
     * Common variables used in market maker scoring system
     * </pre>
     *
     * <code>.crescent.marketmaker.v1beta1.Common common = 3 [json_name = "common", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"common&#92;""];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.crescent.marketmaker.v1beta1.Common, com.crescent.marketmaker.v1beta1.Common.Builder, com.crescent.marketmaker.v1beta1.CommonOrBuilder> 
        getCommonFieldBuilder() {
      if (commonBuilder_ == null) {
        commonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.crescent.marketmaker.v1beta1.Common, com.crescent.marketmaker.v1beta1.Common.Builder, com.crescent.marketmaker.v1beta1.CommonOrBuilder>(
                getCommon(),
                getParentForChildren(),
                isClean());
        common_ = null;
      }
      return commonBuilder_;
    }

    private java.util.List<com.crescent.marketmaker.v1beta1.IncentivePair> incentivePairs_ =
      java.util.Collections.emptyList();
    private void ensureIncentivePairsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        incentivePairs_ = new java.util.ArrayList<com.crescent.marketmaker.v1beta1.IncentivePair>(incentivePairs_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.crescent.marketmaker.v1beta1.IncentivePair, com.crescent.marketmaker.v1beta1.IncentivePair.Builder, com.crescent.marketmaker.v1beta1.IncentivePairOrBuilder> incentivePairsBuilder_;

    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public java.util.List<com.crescent.marketmaker.v1beta1.IncentivePair> getIncentivePairsList() {
      if (incentivePairsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(incentivePairs_);
      } else {
        return incentivePairsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public int getIncentivePairsCount() {
      if (incentivePairsBuilder_ == null) {
        return incentivePairs_.size();
      } else {
        return incentivePairsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public com.crescent.marketmaker.v1beta1.IncentivePair getIncentivePairs(int index) {
      if (incentivePairsBuilder_ == null) {
        return incentivePairs_.get(index);
      } else {
        return incentivePairsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public Builder setIncentivePairs(
        int index, com.crescent.marketmaker.v1beta1.IncentivePair value) {
      if (incentivePairsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIncentivePairsIsMutable();
        incentivePairs_.set(index, value);
        onChanged();
      } else {
        incentivePairsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public Builder setIncentivePairs(
        int index, com.crescent.marketmaker.v1beta1.IncentivePair.Builder builderForValue) {
      if (incentivePairsBuilder_ == null) {
        ensureIncentivePairsIsMutable();
        incentivePairs_.set(index, builderForValue.build());
        onChanged();
      } else {
        incentivePairsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public Builder addIncentivePairs(com.crescent.marketmaker.v1beta1.IncentivePair value) {
      if (incentivePairsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIncentivePairsIsMutable();
        incentivePairs_.add(value);
        onChanged();
      } else {
        incentivePairsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public Builder addIncentivePairs(
        int index, com.crescent.marketmaker.v1beta1.IncentivePair value) {
      if (incentivePairsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIncentivePairsIsMutable();
        incentivePairs_.add(index, value);
        onChanged();
      } else {
        incentivePairsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public Builder addIncentivePairs(
        com.crescent.marketmaker.v1beta1.IncentivePair.Builder builderForValue) {
      if (incentivePairsBuilder_ == null) {
        ensureIncentivePairsIsMutable();
        incentivePairs_.add(builderForValue.build());
        onChanged();
      } else {
        incentivePairsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public Builder addIncentivePairs(
        int index, com.crescent.marketmaker.v1beta1.IncentivePair.Builder builderForValue) {
      if (incentivePairsBuilder_ == null) {
        ensureIncentivePairsIsMutable();
        incentivePairs_.add(index, builderForValue.build());
        onChanged();
      } else {
        incentivePairsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public Builder addAllIncentivePairs(
        java.lang.Iterable<? extends com.crescent.marketmaker.v1beta1.IncentivePair> values) {
      if (incentivePairsBuilder_ == null) {
        ensureIncentivePairsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, incentivePairs_);
        onChanged();
      } else {
        incentivePairsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public Builder clearIncentivePairs() {
      if (incentivePairsBuilder_ == null) {
        incentivePairs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        incentivePairsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public Builder removeIncentivePairs(int index) {
      if (incentivePairsBuilder_ == null) {
        ensureIncentivePairsIsMutable();
        incentivePairs_.remove(index);
        onChanged();
      } else {
        incentivePairsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public com.crescent.marketmaker.v1beta1.IncentivePair.Builder getIncentivePairsBuilder(
        int index) {
      return getIncentivePairsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public com.crescent.marketmaker.v1beta1.IncentivePairOrBuilder getIncentivePairsOrBuilder(
        int index) {
      if (incentivePairsBuilder_ == null) {
        return incentivePairs_.get(index);  } else {
        return incentivePairsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public java.util.List<? extends com.crescent.marketmaker.v1beta1.IncentivePairOrBuilder> 
         getIncentivePairsOrBuilderList() {
      if (incentivePairsBuilder_ != null) {
        return incentivePairsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(incentivePairs_);
      }
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public com.crescent.marketmaker.v1beta1.IncentivePair.Builder addIncentivePairsBuilder() {
      return getIncentivePairsFieldBuilder().addBuilder(
          com.crescent.marketmaker.v1beta1.IncentivePair.getDefaultInstance());
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public com.crescent.marketmaker.v1beta1.IncentivePair.Builder addIncentivePairsBuilder(
        int index) {
      return getIncentivePairsFieldBuilder().addBuilder(
          index, com.crescent.marketmaker.v1beta1.IncentivePair.getDefaultInstance());
    }
    /**
     * <pre>
     * Include the pairs that are incentive target pairs and the variables used in market maker scoring system
     * </pre>
     *
     * <code>repeated .crescent.marketmaker.v1beta1.IncentivePair incentive_pairs = 4 [json_name = "incentivePairs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"incentive_pairs&#92;""];</code>
     */
    public java.util.List<com.crescent.marketmaker.v1beta1.IncentivePair.Builder> 
         getIncentivePairsBuilderList() {
      return getIncentivePairsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.crescent.marketmaker.v1beta1.IncentivePair, com.crescent.marketmaker.v1beta1.IncentivePair.Builder, com.crescent.marketmaker.v1beta1.IncentivePairOrBuilder> 
        getIncentivePairsFieldBuilder() {
      if (incentivePairsBuilder_ == null) {
        incentivePairsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.crescent.marketmaker.v1beta1.IncentivePair, com.crescent.marketmaker.v1beta1.IncentivePair.Builder, com.crescent.marketmaker.v1beta1.IncentivePairOrBuilder>(
                incentivePairs_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        incentivePairs_ = null;
      }
      return incentivePairsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:crescent.marketmaker.v1beta1.Params)
  }

  // @@protoc_insertion_point(class_scope:crescent.marketmaker.v1beta1.Params)
  private static final com.crescent.marketmaker.v1beta1.Params DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.crescent.marketmaker.v1beta1.Params();
  }

  public static com.crescent.marketmaker.v1beta1.Params getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Params>
      PARSER = new com.google.protobuf.AbstractParser<Params>() {
    @java.lang.Override
    public Params parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Params> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Params> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.crescent.marketmaker.v1beta1.Params getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


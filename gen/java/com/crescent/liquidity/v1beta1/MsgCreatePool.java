// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/liquidity/v1beta1/tx.proto

package com.crescent.liquidity.v1beta1;

/**
 * <pre>
 * MsgCreatePool defines an SDK message for creating a pool.
 * </pre>
 *
 * Protobuf type {@code crescent.liquidity.v1beta1.MsgCreatePool}
 */
public final class MsgCreatePool extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:crescent.liquidity.v1beta1.MsgCreatePool)
    MsgCreatePoolOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MsgCreatePool.newBuilder() to construct.
  private MsgCreatePool(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MsgCreatePool() {
    creator_ = "";
    depositCoins_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MsgCreatePool();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.crescent.liquidity.v1beta1.TxProto.internal_static_crescent_liquidity_v1beta1_MsgCreatePool_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.crescent.liquidity.v1beta1.TxProto.internal_static_crescent_liquidity_v1beta1_MsgCreatePool_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.crescent.liquidity.v1beta1.MsgCreatePool.class, com.crescent.liquidity.v1beta1.MsgCreatePool.Builder.class);
  }

  public static final int CREATOR_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object creator_ = "";
  /**
   * <pre>
   * creator specifies the bech32-encoded address that is the pool creator
   * </pre>
   *
   * <code>string creator = 1 [json_name = "creator"];</code>
   * @return The creator.
   */
  @java.lang.Override
  public java.lang.String getCreator() {
    java.lang.Object ref = creator_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      creator_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * creator specifies the bech32-encoded address that is the pool creator
   * </pre>
   *
   * <code>string creator = 1 [json_name = "creator"];</code>
   * @return The bytes for creator.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCreatorBytes() {
    java.lang.Object ref = creator_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      creator_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PAIR_ID_FIELD_NUMBER = 2;
  private long pairId_ = 0L;
  /**
   * <pre>
   * pair_id specifies the pair id.
   * </pre>
   *
   * <code>uint64 pair_id = 2 [json_name = "pairId"];</code>
   * @return The pairId.
   */
  @java.lang.Override
  public long getPairId() {
    return pairId_;
  }

  public static final int DEPOSIT_COINS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> depositCoins_;
  /**
   * <pre>
   * deposit_coins specifies the amount of coins to deposit.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getDepositCoinsList() {
    return depositCoins_;
  }
  /**
   * <pre>
   * deposit_coins specifies the amount of coins to deposit.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getDepositCoinsOrBuilderList() {
    return depositCoins_;
  }
  /**
   * <pre>
   * deposit_coins specifies the amount of coins to deposit.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getDepositCoinsCount() {
    return depositCoins_.size();
  }
  /**
   * <pre>
   * deposit_coins specifies the amount of coins to deposit.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getDepositCoins(int index) {
    return depositCoins_.get(index);
  }
  /**
   * <pre>
   * deposit_coins specifies the amount of coins to deposit.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getDepositCoinsOrBuilder(
      int index) {
    return depositCoins_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(creator_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, creator_);
    }
    if (pairId_ != 0L) {
      output.writeUInt64(2, pairId_);
    }
    for (int i = 0; i < depositCoins_.size(); i++) {
      output.writeMessage(3, depositCoins_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(creator_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, creator_);
    }
    if (pairId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, pairId_);
    }
    for (int i = 0; i < depositCoins_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, depositCoins_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.crescent.liquidity.v1beta1.MsgCreatePool)) {
      return super.equals(obj);
    }
    com.crescent.liquidity.v1beta1.MsgCreatePool other = (com.crescent.liquidity.v1beta1.MsgCreatePool) obj;

    if (!getCreator()
        .equals(other.getCreator())) return false;
    if (getPairId()
        != other.getPairId()) return false;
    if (!getDepositCoinsList()
        .equals(other.getDepositCoinsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CREATOR_FIELD_NUMBER;
    hash = (53 * hash) + getCreator().hashCode();
    hash = (37 * hash) + PAIR_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPairId());
    if (getDepositCoinsCount() > 0) {
      hash = (37 * hash) + DEPOSIT_COINS_FIELD_NUMBER;
      hash = (53 * hash) + getDepositCoinsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.crescent.liquidity.v1beta1.MsgCreatePool parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.liquidity.v1beta1.MsgCreatePool parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.liquidity.v1beta1.MsgCreatePool parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.liquidity.v1beta1.MsgCreatePool parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.liquidity.v1beta1.MsgCreatePool parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.liquidity.v1beta1.MsgCreatePool parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.liquidity.v1beta1.MsgCreatePool parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.liquidity.v1beta1.MsgCreatePool parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.crescent.liquidity.v1beta1.MsgCreatePool parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.crescent.liquidity.v1beta1.MsgCreatePool parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.crescent.liquidity.v1beta1.MsgCreatePool parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.liquidity.v1beta1.MsgCreatePool parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.crescent.liquidity.v1beta1.MsgCreatePool prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * MsgCreatePool defines an SDK message for creating a pool.
   * </pre>
   *
   * Protobuf type {@code crescent.liquidity.v1beta1.MsgCreatePool}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:crescent.liquidity.v1beta1.MsgCreatePool)
      com.crescent.liquidity.v1beta1.MsgCreatePoolOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.crescent.liquidity.v1beta1.TxProto.internal_static_crescent_liquidity_v1beta1_MsgCreatePool_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.crescent.liquidity.v1beta1.TxProto.internal_static_crescent_liquidity_v1beta1_MsgCreatePool_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.crescent.liquidity.v1beta1.MsgCreatePool.class, com.crescent.liquidity.v1beta1.MsgCreatePool.Builder.class);
    }

    // Construct using com.crescent.liquidity.v1beta1.MsgCreatePool.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      creator_ = "";
      pairId_ = 0L;
      if (depositCoinsBuilder_ == null) {
        depositCoins_ = java.util.Collections.emptyList();
      } else {
        depositCoins_ = null;
        depositCoinsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.crescent.liquidity.v1beta1.TxProto.internal_static_crescent_liquidity_v1beta1_MsgCreatePool_descriptor;
    }

    @java.lang.Override
    public com.crescent.liquidity.v1beta1.MsgCreatePool getDefaultInstanceForType() {
      return com.crescent.liquidity.v1beta1.MsgCreatePool.getDefaultInstance();
    }

    @java.lang.Override
    public com.crescent.liquidity.v1beta1.MsgCreatePool build() {
      com.crescent.liquidity.v1beta1.MsgCreatePool result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.crescent.liquidity.v1beta1.MsgCreatePool buildPartial() {
      com.crescent.liquidity.v1beta1.MsgCreatePool result = new com.crescent.liquidity.v1beta1.MsgCreatePool(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.crescent.liquidity.v1beta1.MsgCreatePool result) {
      if (depositCoinsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          depositCoins_ = java.util.Collections.unmodifiableList(depositCoins_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.depositCoins_ = depositCoins_;
      } else {
        result.depositCoins_ = depositCoinsBuilder_.build();
      }
    }

    private void buildPartial0(com.crescent.liquidity.v1beta1.MsgCreatePool result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.creator_ = creator_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.pairId_ = pairId_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.crescent.liquidity.v1beta1.MsgCreatePool) {
        return mergeFrom((com.crescent.liquidity.v1beta1.MsgCreatePool)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.crescent.liquidity.v1beta1.MsgCreatePool other) {
      if (other == com.crescent.liquidity.v1beta1.MsgCreatePool.getDefaultInstance()) return this;
      if (!other.getCreator().isEmpty()) {
        creator_ = other.creator_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getPairId() != 0L) {
        setPairId(other.getPairId());
      }
      if (depositCoinsBuilder_ == null) {
        if (!other.depositCoins_.isEmpty()) {
          if (depositCoins_.isEmpty()) {
            depositCoins_ = other.depositCoins_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDepositCoinsIsMutable();
            depositCoins_.addAll(other.depositCoins_);
          }
          onChanged();
        }
      } else {
        if (!other.depositCoins_.isEmpty()) {
          if (depositCoinsBuilder_.isEmpty()) {
            depositCoinsBuilder_.dispose();
            depositCoinsBuilder_ = null;
            depositCoins_ = other.depositCoins_;
            bitField0_ = (bitField0_ & ~0x00000004);
            depositCoinsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDepositCoinsFieldBuilder() : null;
          } else {
            depositCoinsBuilder_.addAllMessages(other.depositCoins_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              creator_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              pairId_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (depositCoinsBuilder_ == null) {
                ensureDepositCoinsIsMutable();
                depositCoins_.add(m);
              } else {
                depositCoinsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object creator_ = "";
    /**
     * <pre>
     * creator specifies the bech32-encoded address that is the pool creator
     * </pre>
     *
     * <code>string creator = 1 [json_name = "creator"];</code>
     * @return The creator.
     */
    public java.lang.String getCreator() {
      java.lang.Object ref = creator_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        creator_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * creator specifies the bech32-encoded address that is the pool creator
     * </pre>
     *
     * <code>string creator = 1 [json_name = "creator"];</code>
     * @return The bytes for creator.
     */
    public com.google.protobuf.ByteString
        getCreatorBytes() {
      java.lang.Object ref = creator_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        creator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * creator specifies the bech32-encoded address that is the pool creator
     * </pre>
     *
     * <code>string creator = 1 [json_name = "creator"];</code>
     * @param value The creator to set.
     * @return This builder for chaining.
     */
    public Builder setCreator(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      creator_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * creator specifies the bech32-encoded address that is the pool creator
     * </pre>
     *
     * <code>string creator = 1 [json_name = "creator"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCreator() {
      creator_ = getDefaultInstance().getCreator();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * creator specifies the bech32-encoded address that is the pool creator
     * </pre>
     *
     * <code>string creator = 1 [json_name = "creator"];</code>
     * @param value The bytes for creator to set.
     * @return This builder for chaining.
     */
    public Builder setCreatorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      creator_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private long pairId_ ;
    /**
     * <pre>
     * pair_id specifies the pair id.
     * </pre>
     *
     * <code>uint64 pair_id = 2 [json_name = "pairId"];</code>
     * @return The pairId.
     */
    @java.lang.Override
    public long getPairId() {
      return pairId_;
    }
    /**
     * <pre>
     * pair_id specifies the pair id.
     * </pre>
     *
     * <code>uint64 pair_id = 2 [json_name = "pairId"];</code>
     * @param value The pairId to set.
     * @return This builder for chaining.
     */
    public Builder setPairId(long value) {

      pairId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * pair_id specifies the pair id.
     * </pre>
     *
     * <code>uint64 pair_id = 2 [json_name = "pairId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPairId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      pairId_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> depositCoins_ =
      java.util.Collections.emptyList();
    private void ensureDepositCoinsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        depositCoins_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(depositCoins_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> depositCoinsBuilder_;

    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getDepositCoinsList() {
      if (depositCoinsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(depositCoins_);
      } else {
        return depositCoinsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getDepositCoinsCount() {
      if (depositCoinsBuilder_ == null) {
        return depositCoins_.size();
      } else {
        return depositCoinsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getDepositCoins(int index) {
      if (depositCoinsBuilder_ == null) {
        return depositCoins_.get(index);
      } else {
        return depositCoinsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setDepositCoins(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (depositCoinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDepositCoinsIsMutable();
        depositCoins_.set(index, value);
        onChanged();
      } else {
        depositCoinsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setDepositCoins(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (depositCoinsBuilder_ == null) {
        ensureDepositCoinsIsMutable();
        depositCoins_.set(index, builderForValue.build());
        onChanged();
      } else {
        depositCoinsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addDepositCoins(com.cosmos.base.v1beta1.Coin value) {
      if (depositCoinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDepositCoinsIsMutable();
        depositCoins_.add(value);
        onChanged();
      } else {
        depositCoinsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addDepositCoins(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (depositCoinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDepositCoinsIsMutable();
        depositCoins_.add(index, value);
        onChanged();
      } else {
        depositCoinsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addDepositCoins(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (depositCoinsBuilder_ == null) {
        ensureDepositCoinsIsMutable();
        depositCoins_.add(builderForValue.build());
        onChanged();
      } else {
        depositCoinsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addDepositCoins(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (depositCoinsBuilder_ == null) {
        ensureDepositCoinsIsMutable();
        depositCoins_.add(index, builderForValue.build());
        onChanged();
      } else {
        depositCoinsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllDepositCoins(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (depositCoinsBuilder_ == null) {
        ensureDepositCoinsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, depositCoins_);
        onChanged();
      } else {
        depositCoinsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearDepositCoins() {
      if (depositCoinsBuilder_ == null) {
        depositCoins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        depositCoinsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeDepositCoins(int index) {
      if (depositCoinsBuilder_ == null) {
        ensureDepositCoinsIsMutable();
        depositCoins_.remove(index);
        onChanged();
      } else {
        depositCoinsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getDepositCoinsBuilder(
        int index) {
      return getDepositCoinsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getDepositCoinsOrBuilder(
        int index) {
      if (depositCoinsBuilder_ == null) {
        return depositCoins_.get(index);  } else {
        return depositCoinsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getDepositCoinsOrBuilderList() {
      if (depositCoinsBuilder_ != null) {
        return depositCoinsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(depositCoins_);
      }
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addDepositCoinsBuilder() {
      return getDepositCoinsFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addDepositCoinsBuilder(
        int index) {
      return getDepositCoinsFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * deposit_coins specifies the amount of coins to deposit.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin deposit_coins = 3 [json_name = "depositCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getDepositCoinsBuilderList() {
      return getDepositCoinsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getDepositCoinsFieldBuilder() {
      if (depositCoinsBuilder_ == null) {
        depositCoinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                depositCoins_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        depositCoins_ = null;
      }
      return depositCoinsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:crescent.liquidity.v1beta1.MsgCreatePool)
  }

  // @@protoc_insertion_point(class_scope:crescent.liquidity.v1beta1.MsgCreatePool)
  private static final com.crescent.liquidity.v1beta1.MsgCreatePool DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.crescent.liquidity.v1beta1.MsgCreatePool();
  }

  public static com.crescent.liquidity.v1beta1.MsgCreatePool getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MsgCreatePool>
      PARSER = new com.google.protobuf.AbstractParser<MsgCreatePool>() {
    @java.lang.Override
    public MsgCreatePool parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MsgCreatePool> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MsgCreatePool> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.crescent.liquidity.v1beta1.MsgCreatePool getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/liquidity/v1beta1/liquidity.proto

package com.crescent.liquidity.v1beta1;

public final class LiquidityProto {
  private LiquidityProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_liquidity_v1beta1_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_liquidity_v1beta1_Params_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_liquidity_v1beta1_Pair_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_liquidity_v1beta1_Pair_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_liquidity_v1beta1_Pool_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_liquidity_v1beta1_Pool_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_liquidity_v1beta1_DepositRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_liquidity_v1beta1_DepositRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_liquidity_v1beta1_WithdrawRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_liquidity_v1beta1_WithdrawRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_liquidity_v1beta1_Order_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_liquidity_v1beta1_Order_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*crescent/liquidity/v1beta1/liquidity.p" +
      "roto\022\032crescent.liquidity.v1beta1\032\024gogopr" +
      "oto/gogo.proto\032\036cosmos/base/v1beta1/coin" +
      ".proto\032\037google/protobuf/timestamp.proto\032" +
      "\036google/protobuf/duration.proto\"\331\013\n\006Para" +
      "ms\022\035\n\nbatch_size\030\001 \001(\rR\tbatchSize\022%\n\016tic" +
      "k_precision\030\002 \001(\rR\rtickPrecision\0222\n\025fee_" +
      "collector_address\030\003 \001(\tR\023feeCollectorAdd" +
      "ress\0224\n\026dust_collector_address\030\004 \001(\tR\024du" +
      "stCollectorAddress\022n\n\034min_initial_pool_c" +
      "oin_supply\030\005 \001(\tB.\310\336\037\000\332\336\037&github.com/cos" +
      "mos/cosmos-sdk/types.IntR\030minInitialPool" +
      "CoinSupply\022w\n\021pair_creation_fee\030\006 \003(\0132\031." +
      "cosmos.base.v1beta1.CoinB0\310\336\037\000\252\337\037(github" +
      ".com/cosmos/cosmos-sdk/types.CoinsR\017pair" +
      "CreationFee\022w\n\021pool_creation_fee\030\007 \003(\0132\031" +
      ".cosmos.base.v1beta1.CoinB0\310\336\037\000\252\337\037(githu" +
      "b.com/cosmos/cosmos-sdk/types.CoinsR\017poo" +
      "lCreationFee\022k\n\032min_initial_deposit_amou" +
      "nt\030\010 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosm" +
      "os-sdk/types.IntR\027minInitialDepositAmoun" +
      "t\022a\n\025max_price_limit_ratio\030\t \001(\tB.\310\336\037\000\332\336" +
      "\037&github.com/cosmos/cosmos-sdk/types.Dec" +
      "R\022maxPriceLimitRatio\022G\n!max_num_market_m" +
      "aking_order_ticks\030\n \001(\rR\034maxNumMarketMak" +
      "ingOrderTicks\022N\n%max_num_market_making_o" +
      "rders_per_pair\030\013 \001(\rR\037maxNumMarketMaking" +
      "OrdersPerPair\022Q\n\022max_order_lifespan\030\014 \001(" +
      "\0132\031.google.protobuf.DurationB\010\310\336\037\000\230\337\037\001R\020" +
      "maxOrderLifespan\022R\n\rswap_fee_rate\030\r \001(\tB" +
      ".\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/ty" +
      "pes.DecR\013swapFeeRate\022Z\n\021withdraw_fee_rat" +
      "e\030\016 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmo" +
      "s-sdk/types.DecR\017withdrawFeeRate\022Z\n\021depo" +
      "sit_extra_gas\030\017 \001(\004B.\310\336\037\000\332\336\037&github.com/" +
      "cosmos/cosmos-sdk/types.GasR\017depositExtr" +
      "aGas\022\\\n\022withdraw_extra_gas\030\020 \001(\004B.\310\336\037\000\332\336" +
      "\037&github.com/cosmos/cosmos-sdk/types.Gas" +
      "R\020withdrawExtraGas\022V\n\017order_extra_gas\030\021 " +
      "\001(\004B.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sd" +
      "k/types.GasR\rorderExtraGas\022?\n\035max_num_ac" +
      "tive_pools_per_pair\030\022 \001(\rR\030maxNumActiveP" +
      "oolsPerPair\"\250\002\n\004Pair\022\016\n\002id\030\001 \001(\004R\002id\022&\n\017" +
      "base_coin_denom\030\002 \001(\tR\rbaseCoinDenom\022(\n\020" +
      "quote_coin_denom\030\003 \001(\tR\016quoteCoinDenom\022%" +
      "\n\016escrow_address\030\004 \001(\tR\rescrowAddress\022\"\n" +
      "\rlast_order_id\030\005 \001(\004R\013lastOrderId\022I\n\nlas" +
      "t_price\030\006 \001(\tB*\332\336\037&github.com/cosmos/cos" +
      "mos-sdk/types.DecR\tlastPrice\022(\n\020current_" +
      "batch_id\030\007 \001(\004R\016currentBatchId\"\362\003\n\004Pool\022" +
      "8\n\004type\030\001 \001(\0162$.crescent.liquidity.v1bet" +
      "a1.PoolTypeR\004type\022\016\n\002id\030\002 \001(\004R\002id\022\027\n\007pai" +
      "r_id\030\003 \001(\004R\006pairId\022\030\n\007creator\030\004 \001(\tR\007cre" +
      "ator\022\'\n\017reserve_address\030\005 \001(\tR\016reserveAd" +
      "dress\022&\n\017pool_coin_denom\030\006 \001(\tR\rpoolCoin" +
      "Denom\022G\n\tmin_price\030\007 \001(\tB*\332\336\037&github.com" +
      "/cosmos/cosmos-sdk/types.DecR\010minPrice\022G" +
      "\n\tmax_price\030\010 \001(\tB*\332\336\037&github.com/cosmos" +
      "/cosmos-sdk/types.DecR\010maxPrice\0225\n\027last_" +
      "deposit_request_id\030\t \001(\004R\024lastDepositReq" +
      "uestId\0227\n\030last_withdraw_request_id\030\n \001(\004" +
      "R\025lastWithdrawRequestId\022\032\n\010disabled\030\013 \001(" +
      "\010R\010disabled\"\352\003\n\016DepositRequest\022\016\n\002id\030\001 \001" +
      "(\004R\002id\022\027\n\007pool_id\030\002 \001(\004R\006poolId\022\035\n\nmsg_h" +
      "eight\030\003 \001(\003R\tmsgHeight\022\034\n\tdepositor\030\004 \001(" +
      "\tR\tdepositor\022p\n\rdeposit_coins\030\005 \003(\0132\031.co" +
      "smos.base.v1beta1.CoinB0\310\336\037\000\252\337\037(github.c" +
      "om/cosmos/cosmos-sdk/types.CoinsR\014deposi" +
      "tCoins\022r\n\016accepted_coins\030\006 \003(\0132\031.cosmos." +
      "base.v1beta1.CoinB0\310\336\037\000\252\337\037(github.com/co" +
      "smos/cosmos-sdk/types.CoinsR\racceptedCoi" +
      "ns\022I\n\020minted_pool_coin\030\007 \001(\0132\031.cosmos.ba" +
      "se.v1beta1.CoinB\004\310\336\037\000R\016mintedPoolCoin\022A\n" +
      "\006status\030\010 \001(\0162).crescent.liquidity.v1bet" +
      "a1.RequestStatusR\006status\"\360\002\n\017WithdrawReq" +
      "uest\022\016\n\002id\030\001 \001(\004R\002id\022\027\n\007pool_id\030\002 \001(\004R\006p" +
      "oolId\022\035\n\nmsg_height\030\003 \001(\003R\tmsgHeight\022\036\n\n" +
      "withdrawer\030\004 \001(\tR\nwithdrawer\022<\n\tpool_coi" +
      "n\030\005 \001(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000" +
      "R\010poolCoin\022t\n\017withdrawn_coins\030\006 \003(\0132\031.co" +
      "smos.base.v1beta1.CoinB0\310\336\037\000\252\337\037(github.c" +
      "om/cosmos/cosmos-sdk/types.CoinsR\016withdr" +
      "awnCoins\022A\n\006status\030\007 \001(\0162).crescent.liqu" +
      "idity.v1beta1.RequestStatusR\006status\"\305\006\n\005" +
      "Order\0229\n\004type\030\001 \001(\0162%.crescent.liquidity" +
      ".v1beta1.OrderTypeR\004type\022\016\n\002id\030\002 \001(\004R\002id" +
      "\022\027\n\007pair_id\030\003 \001(\004R\006pairId\022\035\n\nmsg_height\030" +
      "\004 \001(\003R\tmsgHeight\022\030\n\007orderer\030\005 \001(\tR\007order" +
      "er\022H\n\tdirection\030\006 \001(\0162*.crescent.liquidi" +
      "ty.v1beta1.OrderDirectionR\tdirection\022>\n\n" +
      "offer_coin\030\007 \001(\0132\031.cosmos.base.v1beta1.C" +
      "oinB\004\310\336\037\000R\tofferCoin\022Q\n\024remaining_offer_" +
      "coin\030\010 \001(\0132\031.cosmos.base.v1beta1.CoinB\004\310" +
      "\336\037\000R\022remainingOfferCoin\022D\n\rreceived_coin" +
      "\030\t \001(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000R" +
      "\014receivedCoin\022D\n\005price\030\n \001(\tB.\310\336\037\000\332\336\037&gi" +
      "thub.com/cosmos/cosmos-sdk/types.DecR\005pr" +
      "ice\022F\n\006amount\030\013 \001(\tB.\310\336\037\000\332\336\037&github.com/" +
      "cosmos/cosmos-sdk/types.IntR\006amount\022O\n\013o" +
      "pen_amount\030\014 \001(\tB.\310\336\037\000\332\336\037&github.com/cos" +
      "mos/cosmos-sdk/types.IntR\nopenAmount\022\031\n\010" +
      "batch_id\030\r \001(\004R\007batchId\022A\n\texpire_at\030\016 \001" +
      "(\0132\032.google.protobuf.TimestampB\010\310\336\037\000\220\337\037\001" +
      "R\010expireAt\022?\n\006status\030\017 \001(\0162\'.crescent.li" +
      "quidity.v1beta1.OrderStatusR\006status*\226\001\n\010" +
      "PoolType\0222\n\025POOL_TYPE_UNSPECIFIED\020\000\032\027\212\235 " +
      "\023PoolTypeUnspecified\022&\n\017POOL_TYPE_BASIC\020" +
      "\001\032\021\212\235 \rPoolTypeBasic\022(\n\020POOL_TYPE_RANGED" +
      "\020\002\032\022\212\235 \016PoolTypeRanged\032\004\210\243\036\000*\301\001\n\tOrderTy" +
      "pe\0224\n\026ORDER_TYPE_UNSPECIFIED\020\000\032\030\212\235 \024Orde" +
      "rTypeUnspecified\022(\n\020ORDER_TYPE_LIMIT\020\001\032\022" +
      "\212\235 \016OrderTypeLimit\022*\n\021ORDER_TYPE_MARKET\020" +
      "\002\032\023\212\235 \017OrderTypeMarket\022\"\n\rORDER_TYPE_MM\020" +
      "\003\032\017\212\235 \013OrderTypeMM\032\004\210\243\036\000*\270\001\n\016OrderDirect" +
      "ion\022>\n\033ORDER_DIRECTION_UNSPECIFIED\020\000\032\035\212\235" +
      " \031OrderDirectionUnspecified\022.\n\023ORDER_DIR" +
      "ECTION_BUY\020\001\032\025\212\235 \021OrderDirectionBuy\0220\n\024O" +
      "RDER_DIRECTION_SELL\020\002\032\026\212\235 \022OrderDirectio" +
      "nSell\032\004\210\243\036\000*\200\002\n\rRequestStatus\022<\n\032REQUEST" +
      "_STATUS_UNSPECIFIED\020\000\032\034\212\235 \030RequestStatus" +
      "Unspecified\022=\n\033REQUEST_STATUS_NOT_EXECUT" +
      "ED\020\001\032\034\212\235 \030RequestStatusNotExecuted\0228\n\030RE" +
      "QUEST_STATUS_SUCCEEDED\020\002\032\032\212\235 \026RequestSta" +
      "tusSucceeded\0222\n\025REQUEST_STATUS_FAILED\020\003\032" +
      "\027\212\235 \023RequestStatusFailed\032\004\210\243\036\000*\242\003\n\013Order" +
      "Status\0228\n\030ORDER_STATUS_UNSPECIFIED\020\000\032\032\212\235" +
      " \026OrderStatusUnspecified\0229\n\031ORDER_STATUS" +
      "_NOT_EXECUTED\020\001\032\032\212\235 \026OrderStatusNotExecu" +
      "ted\0227\n\030ORDER_STATUS_NOT_MATCHED\020\002\032\031\212\235 \025O" +
      "rderStatusNotMatched\022C\n\036ORDER_STATUS_PAR" +
      "TIALLY_MATCHED\020\003\032\037\212\235 \033OrderStatusPartial" +
      "lyMatched\0224\n\026ORDER_STATUS_COMPLETED\020\004\032\030\212" +
      "\235 \024OrderStatusCompleted\0222\n\025ORDER_STATUS_" +
      "CANCELED\020\005\032\027\212\235 \023OrderStatusCanceled\0220\n\024O" +
      "RDER_STATUS_EXPIRED\020\006\032\026\212\235 \022OrderStatusEx" +
      "pired\032\004\210\243\036\000B\371\001\n\036com.crescent.liquidity.v" +
      "1beta1B\016LiquidityProtoP\001Z9github.com/cre" +
      "scent-network/crescent/v5/x/liquidity/ty" +
      "pes\242\002\003CLX\252\002\032Crescent.Liquidity.V1beta1\312\002" +
      "\032Crescent\\Liquidity\\V1beta1\342\002&Crescent\\L" +
      "iquidity\\V1beta1\\GPBMetadata\352\002\034Crescent:" +
      ":Liquidity::V1beta1\310\341\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
        });
    internal_static_crescent_liquidity_v1beta1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_crescent_liquidity_v1beta1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_liquidity_v1beta1_Params_descriptor,
        new java.lang.String[] { "BatchSize", "TickPrecision", "FeeCollectorAddress", "DustCollectorAddress", "MinInitialPoolCoinSupply", "PairCreationFee", "PoolCreationFee", "MinInitialDepositAmount", "MaxPriceLimitRatio", "MaxNumMarketMakingOrderTicks", "MaxNumMarketMakingOrdersPerPair", "MaxOrderLifespan", "SwapFeeRate", "WithdrawFeeRate", "DepositExtraGas", "WithdrawExtraGas", "OrderExtraGas", "MaxNumActivePoolsPerPair", });
    internal_static_crescent_liquidity_v1beta1_Pair_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_crescent_liquidity_v1beta1_Pair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_liquidity_v1beta1_Pair_descriptor,
        new java.lang.String[] { "Id", "BaseCoinDenom", "QuoteCoinDenom", "EscrowAddress", "LastOrderId", "LastPrice", "CurrentBatchId", });
    internal_static_crescent_liquidity_v1beta1_Pool_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_crescent_liquidity_v1beta1_Pool_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_liquidity_v1beta1_Pool_descriptor,
        new java.lang.String[] { "Type", "Id", "PairId", "Creator", "ReserveAddress", "PoolCoinDenom", "MinPrice", "MaxPrice", "LastDepositRequestId", "LastWithdrawRequestId", "Disabled", });
    internal_static_crescent_liquidity_v1beta1_DepositRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_crescent_liquidity_v1beta1_DepositRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_liquidity_v1beta1_DepositRequest_descriptor,
        new java.lang.String[] { "Id", "PoolId", "MsgHeight", "Depositor", "DepositCoins", "AcceptedCoins", "MintedPoolCoin", "Status", });
    internal_static_crescent_liquidity_v1beta1_WithdrawRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_crescent_liquidity_v1beta1_WithdrawRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_liquidity_v1beta1_WithdrawRequest_descriptor,
        new java.lang.String[] { "Id", "PoolId", "MsgHeight", "Withdrawer", "PoolCoin", "WithdrawnCoins", "Status", });
    internal_static_crescent_liquidity_v1beta1_Order_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_crescent_liquidity_v1beta1_Order_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_liquidity_v1beta1_Order_descriptor,
        new java.lang.String[] { "Type", "Id", "PairId", "MsgHeight", "Orderer", "Direction", "OfferCoin", "RemainingOfferCoin", "ReceivedCoin", "Price", "Amount", "OpenAmount", "BatchId", "ExpireAt", "Status", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.enumvalueCustomname);
    registry.add(com.gogoproto.GogoProto.goprotoEnumPrefix);
    registry.add(com.gogoproto.GogoProto.goprotoGettersAll);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stdduration);
    registry.add(com.gogoproto.GogoProto.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

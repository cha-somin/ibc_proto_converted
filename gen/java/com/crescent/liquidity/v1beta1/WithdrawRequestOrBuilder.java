// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/liquidity/v1beta1/liquidity.proto

package com.crescent.liquidity.v1beta1;

public interface WithdrawRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:crescent.liquidity.v1beta1.WithdrawRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * id specifies the id for the request
   * </pre>
   *
   * <code>uint64 id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  long getId();

  /**
   * <pre>
   * pool_id specifies the pool id
   * </pre>
   *
   * <code>uint64 pool_id = 2 [json_name = "poolId"];</code>
   * @return The poolId.
   */
  long getPoolId();

  /**
   * <pre>
   * msg_height specifies the block height when the request is stored for the batch execution
   * </pre>
   *
   * <code>int64 msg_height = 3 [json_name = "msgHeight"];</code>
   * @return The msgHeight.
   */
  long getMsgHeight();

  /**
   * <pre>
   * withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
   * </pre>
   *
   * <code>string withdrawer = 4 [json_name = "withdrawer"];</code>
   * @return The withdrawer.
   */
  java.lang.String getWithdrawer();
  /**
   * <pre>
   * withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
   * </pre>
   *
   * <code>string withdrawer = 4 [json_name = "withdrawer"];</code>
   * @return The bytes for withdrawer.
   */
  com.google.protobuf.ByteString
      getWithdrawerBytes();

  /**
   * <pre>
   * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin pool_coin = 5 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
   * @return Whether the poolCoin field is set.
   */
  boolean hasPoolCoin();
  /**
   * <pre>
   * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin pool_coin = 5 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
   * @return The poolCoin.
   */
  com.cosmos.base.v1beta1.Coin getPoolCoin();
  /**
   * <pre>
   * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin pool_coin = 5 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getPoolCoinOrBuilder();

  /**
   * <pre>
   * withdrawn_coins specifies the amount of coins that are withdrawn.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin withdrawn_coins = 6 [json_name = "withdrawnCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.Coin> 
      getWithdrawnCoinsList();
  /**
   * <pre>
   * withdrawn_coins specifies the amount of coins that are withdrawn.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin withdrawn_coins = 6 [json_name = "withdrawnCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.Coin getWithdrawnCoins(int index);
  /**
   * <pre>
   * withdrawn_coins specifies the amount of coins that are withdrawn.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin withdrawn_coins = 6 [json_name = "withdrawnCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  int getWithdrawnCoinsCount();
  /**
   * <pre>
   * withdrawn_coins specifies the amount of coins that are withdrawn.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin withdrawn_coins = 6 [json_name = "withdrawnCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getWithdrawnCoinsOrBuilderList();
  /**
   * <pre>
   * withdrawn_coins specifies the amount of coins that are withdrawn.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin withdrawn_coins = 6 [json_name = "withdrawnCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getWithdrawnCoinsOrBuilder(
      int index);

  /**
   * <code>.crescent.liquidity.v1beta1.RequestStatus status = 7 [json_name = "status"];</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <code>.crescent.liquidity.v1beta1.RequestStatus status = 7 [json_name = "status"];</code>
   * @return The status.
   */
  com.crescent.liquidity.v1beta1.RequestStatus getStatus();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/liquidity/v1beta1/tx.proto

package com.crescent.liquidity.v1beta1;

public interface MsgWithdrawOrBuilder extends
    // @@protoc_insertion_point(interface_extends:crescent.liquidity.v1beta1.MsgWithdraw)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
   * </pre>
   *
   * <code>string withdrawer = 1 [json_name = "withdrawer"];</code>
   * @return The withdrawer.
   */
  java.lang.String getWithdrawer();
  /**
   * <pre>
   * withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
   * </pre>
   *
   * <code>string withdrawer = 1 [json_name = "withdrawer"];</code>
   * @return The bytes for withdrawer.
   */
  com.google.protobuf.ByteString
      getWithdrawerBytes();

  /**
   * <pre>
   * pool_id specifies the pool id
   * </pre>
   *
   * <code>uint64 pool_id = 2 [json_name = "poolId"];</code>
   * @return The poolId.
   */
  long getPoolId();

  /**
   * <pre>
   * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
   * @return Whether the poolCoin field is set.
   */
  boolean hasPoolCoin();
  /**
   * <pre>
   * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
   * @return The poolCoin.
   */
  com.cosmos.base.v1beta1.Coin getPoolCoin();
  /**
   * <pre>
   * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getPoolCoinOrBuilder();
}

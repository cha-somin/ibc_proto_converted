// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/liquidstaking/v1beta1/liquidstaking.proto

package com.crescent.liquidstaking.v1beta1;

/**
 * <pre>
 * LiquidValidatorState is type LiquidValidator with state added to return to query results.
 * </pre>
 *
 * Protobuf type {@code crescent.liquidstaking.v1beta1.LiquidValidatorState}
 */
public final class LiquidValidatorState extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:crescent.liquidstaking.v1beta1.LiquidValidatorState)
    LiquidValidatorStateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LiquidValidatorState.newBuilder() to construct.
  private LiquidValidatorState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LiquidValidatorState() {
    operatorAddress_ = "";
    weight_ = "";
    status_ = 0;
    delShares_ = "";
    liquidTokens_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LiquidValidatorState();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.crescent.liquidstaking.v1beta1.LiquidstakingProto.internal_static_crescent_liquidstaking_v1beta1_LiquidValidatorState_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.crescent.liquidstaking.v1beta1.LiquidstakingProto.internal_static_crescent_liquidstaking_v1beta1_LiquidValidatorState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.crescent.liquidstaking.v1beta1.LiquidValidatorState.class, com.crescent.liquidstaking.v1beta1.LiquidValidatorState.Builder.class);
  }

  public static final int OPERATOR_ADDRESS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object operatorAddress_ = "";
  /**
   * <pre>
   * operator_address defines the address of the validator's operator; bech encoded in JSON.
   * </pre>
   *
   * <code>string operator_address = 1 [json_name = "operatorAddress", (.gogoproto.moretags) = "yaml:&#92;"operator_address&#92;""];</code>
   * @return The operatorAddress.
   */
  @java.lang.Override
  public java.lang.String getOperatorAddress() {
    java.lang.Object ref = operatorAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      operatorAddress_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * operator_address defines the address of the validator's operator; bech encoded in JSON.
   * </pre>
   *
   * <code>string operator_address = 1 [json_name = "operatorAddress", (.gogoproto.moretags) = "yaml:&#92;"operator_address&#92;""];</code>
   * @return The bytes for operatorAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOperatorAddressBytes() {
    java.lang.Object ref = operatorAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      operatorAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WEIGHT_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object weight_ = "";
  /**
   * <pre>
   * weight specifies the weight for liquid staking, unstaking amount
   * </pre>
   *
   * <code>string weight = 2 [json_name = "weight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "yaml:&#92;"weight&#92;""];</code>
   * @return The weight.
   */
  @java.lang.Override
  public java.lang.String getWeight() {
    java.lang.Object ref = weight_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      weight_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * weight specifies the weight for liquid staking, unstaking amount
   * </pre>
   *
   * <code>string weight = 2 [json_name = "weight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "yaml:&#92;"weight&#92;""];</code>
   * @return The bytes for weight.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getWeightBytes() {
    java.lang.Object ref = weight_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      weight_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STATUS_FIELD_NUMBER = 3;
  private int status_ = 0;
  /**
   * <pre>
   * status is the liquid validator status
   * </pre>
   *
   * <code>.crescent.liquidstaking.v1beta1.ValidatorStatus status = 3 [json_name = "status"];</code>
   * @return The enum numeric value on the wire for status.
   */
  @java.lang.Override public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   * status is the liquid validator status
   * </pre>
   *
   * <code>.crescent.liquidstaking.v1beta1.ValidatorStatus status = 3 [json_name = "status"];</code>
   * @return The status.
   */
  @java.lang.Override public com.crescent.liquidstaking.v1beta1.ValidatorStatus getStatus() {
    com.crescent.liquidstaking.v1beta1.ValidatorStatus result = com.crescent.liquidstaking.v1beta1.ValidatorStatus.forNumber(status_);
    return result == null ? com.crescent.liquidstaking.v1beta1.ValidatorStatus.UNRECOGNIZED : result;
  }

  public static final int DEL_SHARES_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object delShares_ = "";
  /**
   * <pre>
   * del_shares define the delegation shares of the validator
   * </pre>
   *
   * <code>string del_shares = 4 [json_name = "delShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The delShares.
   */
  @java.lang.Override
  public java.lang.String getDelShares() {
    java.lang.Object ref = delShares_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      delShares_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * del_shares define the delegation shares of the validator
   * </pre>
   *
   * <code>string del_shares = 4 [json_name = "delShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for delShares.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDelSharesBytes() {
    java.lang.Object ref = delShares_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      delShares_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LIQUID_TOKENS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object liquidTokens_ = "";
  /**
   * <pre>
   * liquid_tokens define the token amount worth of delegation shares of the validator (slashing applied amount)
   * </pre>
   *
   * <code>string liquid_tokens = 5 [json_name = "liquidTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
   * @return The liquidTokens.
   */
  @java.lang.Override
  public java.lang.String getLiquidTokens() {
    java.lang.Object ref = liquidTokens_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      liquidTokens_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * liquid_tokens define the token amount worth of delegation shares of the validator (slashing applied amount)
   * </pre>
   *
   * <code>string liquid_tokens = 5 [json_name = "liquidTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
   * @return The bytes for liquidTokens.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLiquidTokensBytes() {
    java.lang.Object ref = liquidTokens_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      liquidTokens_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(operatorAddress_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, operatorAddress_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(weight_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, weight_);
    }
    if (status_ != com.crescent.liquidstaking.v1beta1.ValidatorStatus.VALIDATOR_STATUS_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, status_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(delShares_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, delShares_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(liquidTokens_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, liquidTokens_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(operatorAddress_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, operatorAddress_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(weight_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, weight_);
    }
    if (status_ != com.crescent.liquidstaking.v1beta1.ValidatorStatus.VALIDATOR_STATUS_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, status_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(delShares_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, delShares_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(liquidTokens_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, liquidTokens_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.crescent.liquidstaking.v1beta1.LiquidValidatorState)) {
      return super.equals(obj);
    }
    com.crescent.liquidstaking.v1beta1.LiquidValidatorState other = (com.crescent.liquidstaking.v1beta1.LiquidValidatorState) obj;

    if (!getOperatorAddress()
        .equals(other.getOperatorAddress())) return false;
    if (!getWeight()
        .equals(other.getWeight())) return false;
    if (status_ != other.status_) return false;
    if (!getDelShares()
        .equals(other.getDelShares())) return false;
    if (!getLiquidTokens()
        .equals(other.getLiquidTokens())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + OPERATOR_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getOperatorAddress().hashCode();
    hash = (37 * hash) + WEIGHT_FIELD_NUMBER;
    hash = (53 * hash) + getWeight().hashCode();
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    hash = (37 * hash) + DEL_SHARES_FIELD_NUMBER;
    hash = (53 * hash) + getDelShares().hashCode();
    hash = (37 * hash) + LIQUID_TOKENS_FIELD_NUMBER;
    hash = (53 * hash) + getLiquidTokens().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.crescent.liquidstaking.v1beta1.LiquidValidatorState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * LiquidValidatorState is type LiquidValidator with state added to return to query results.
   * </pre>
   *
   * Protobuf type {@code crescent.liquidstaking.v1beta1.LiquidValidatorState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:crescent.liquidstaking.v1beta1.LiquidValidatorState)
      com.crescent.liquidstaking.v1beta1.LiquidValidatorStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.crescent.liquidstaking.v1beta1.LiquidstakingProto.internal_static_crescent_liquidstaking_v1beta1_LiquidValidatorState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.crescent.liquidstaking.v1beta1.LiquidstakingProto.internal_static_crescent_liquidstaking_v1beta1_LiquidValidatorState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.crescent.liquidstaking.v1beta1.LiquidValidatorState.class, com.crescent.liquidstaking.v1beta1.LiquidValidatorState.Builder.class);
    }

    // Construct using com.crescent.liquidstaking.v1beta1.LiquidValidatorState.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      operatorAddress_ = "";
      weight_ = "";
      status_ = 0;
      delShares_ = "";
      liquidTokens_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.crescent.liquidstaking.v1beta1.LiquidstakingProto.internal_static_crescent_liquidstaking_v1beta1_LiquidValidatorState_descriptor;
    }

    @java.lang.Override
    public com.crescent.liquidstaking.v1beta1.LiquidValidatorState getDefaultInstanceForType() {
      return com.crescent.liquidstaking.v1beta1.LiquidValidatorState.getDefaultInstance();
    }

    @java.lang.Override
    public com.crescent.liquidstaking.v1beta1.LiquidValidatorState build() {
      com.crescent.liquidstaking.v1beta1.LiquidValidatorState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.crescent.liquidstaking.v1beta1.LiquidValidatorState buildPartial() {
      com.crescent.liquidstaking.v1beta1.LiquidValidatorState result = new com.crescent.liquidstaking.v1beta1.LiquidValidatorState(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.crescent.liquidstaking.v1beta1.LiquidValidatorState result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.operatorAddress_ = operatorAddress_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.weight_ = weight_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.status_ = status_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.delShares_ = delShares_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.liquidTokens_ = liquidTokens_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.crescent.liquidstaking.v1beta1.LiquidValidatorState) {
        return mergeFrom((com.crescent.liquidstaking.v1beta1.LiquidValidatorState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.crescent.liquidstaking.v1beta1.LiquidValidatorState other) {
      if (other == com.crescent.liquidstaking.v1beta1.LiquidValidatorState.getDefaultInstance()) return this;
      if (!other.getOperatorAddress().isEmpty()) {
        operatorAddress_ = other.operatorAddress_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getWeight().isEmpty()) {
        weight_ = other.weight_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      if (!other.getDelShares().isEmpty()) {
        delShares_ = other.delShares_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getLiquidTokens().isEmpty()) {
        liquidTokens_ = other.liquidTokens_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              operatorAddress_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              weight_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              status_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              delShares_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              liquidTokens_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object operatorAddress_ = "";
    /**
     * <pre>
     * operator_address defines the address of the validator's operator; bech encoded in JSON.
     * </pre>
     *
     * <code>string operator_address = 1 [json_name = "operatorAddress", (.gogoproto.moretags) = "yaml:&#92;"operator_address&#92;""];</code>
     * @return The operatorAddress.
     */
    public java.lang.String getOperatorAddress() {
      java.lang.Object ref = operatorAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operatorAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * operator_address defines the address of the validator's operator; bech encoded in JSON.
     * </pre>
     *
     * <code>string operator_address = 1 [json_name = "operatorAddress", (.gogoproto.moretags) = "yaml:&#92;"operator_address&#92;""];</code>
     * @return The bytes for operatorAddress.
     */
    public com.google.protobuf.ByteString
        getOperatorAddressBytes() {
      java.lang.Object ref = operatorAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operatorAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * operator_address defines the address of the validator's operator; bech encoded in JSON.
     * </pre>
     *
     * <code>string operator_address = 1 [json_name = "operatorAddress", (.gogoproto.moretags) = "yaml:&#92;"operator_address&#92;""];</code>
     * @param value The operatorAddress to set.
     * @return This builder for chaining.
     */
    public Builder setOperatorAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      operatorAddress_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * operator_address defines the address of the validator's operator; bech encoded in JSON.
     * </pre>
     *
     * <code>string operator_address = 1 [json_name = "operatorAddress", (.gogoproto.moretags) = "yaml:&#92;"operator_address&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearOperatorAddress() {
      operatorAddress_ = getDefaultInstance().getOperatorAddress();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * operator_address defines the address of the validator's operator; bech encoded in JSON.
     * </pre>
     *
     * <code>string operator_address = 1 [json_name = "operatorAddress", (.gogoproto.moretags) = "yaml:&#92;"operator_address&#92;""];</code>
     * @param value The bytes for operatorAddress to set.
     * @return This builder for chaining.
     */
    public Builder setOperatorAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      operatorAddress_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object weight_ = "";
    /**
     * <pre>
     * weight specifies the weight for liquid staking, unstaking amount
     * </pre>
     *
     * <code>string weight = 2 [json_name = "weight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "yaml:&#92;"weight&#92;""];</code>
     * @return The weight.
     */
    public java.lang.String getWeight() {
      java.lang.Object ref = weight_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        weight_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * weight specifies the weight for liquid staking, unstaking amount
     * </pre>
     *
     * <code>string weight = 2 [json_name = "weight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "yaml:&#92;"weight&#92;""];</code>
     * @return The bytes for weight.
     */
    public com.google.protobuf.ByteString
        getWeightBytes() {
      java.lang.Object ref = weight_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        weight_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * weight specifies the weight for liquid staking, unstaking amount
     * </pre>
     *
     * <code>string weight = 2 [json_name = "weight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "yaml:&#92;"weight&#92;""];</code>
     * @param value The weight to set.
     * @return This builder for chaining.
     */
    public Builder setWeight(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      weight_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * weight specifies the weight for liquid staking, unstaking amount
     * </pre>
     *
     * <code>string weight = 2 [json_name = "weight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "yaml:&#92;"weight&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearWeight() {
      weight_ = getDefaultInstance().getWeight();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * weight specifies the weight for liquid staking, unstaking amount
     * </pre>
     *
     * <code>string weight = 2 [json_name = "weight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "yaml:&#92;"weight&#92;""];</code>
     * @param value The bytes for weight to set.
     * @return This builder for chaining.
     */
    public Builder setWeightBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      weight_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private int status_ = 0;
    /**
     * <pre>
     * status is the liquid validator status
     * </pre>
     *
     * <code>.crescent.liquidstaking.v1beta1.ValidatorStatus status = 3 [json_name = "status"];</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * status is the liquid validator status
     * </pre>
     *
     * <code>.crescent.liquidstaking.v1beta1.ValidatorStatus status = 3 [json_name = "status"];</code>
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatusValue(int value) {
      status_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * status is the liquid validator status
     * </pre>
     *
     * <code>.crescent.liquidstaking.v1beta1.ValidatorStatus status = 3 [json_name = "status"];</code>
     * @return The status.
     */
    @java.lang.Override
    public com.crescent.liquidstaking.v1beta1.ValidatorStatus getStatus() {
      com.crescent.liquidstaking.v1beta1.ValidatorStatus result = com.crescent.liquidstaking.v1beta1.ValidatorStatus.forNumber(status_);
      return result == null ? com.crescent.liquidstaking.v1beta1.ValidatorStatus.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * status is the liquid validator status
     * </pre>
     *
     * <code>.crescent.liquidstaking.v1beta1.ValidatorStatus status = 3 [json_name = "status"];</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(com.crescent.liquidstaking.v1beta1.ValidatorStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * status is the liquid validator status
     * </pre>
     *
     * <code>.crescent.liquidstaking.v1beta1.ValidatorStatus status = 3 [json_name = "status"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000004);
      status_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object delShares_ = "";
    /**
     * <pre>
     * del_shares define the delegation shares of the validator
     * </pre>
     *
     * <code>string del_shares = 4 [json_name = "delShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @return The delShares.
     */
    public java.lang.String getDelShares() {
      java.lang.Object ref = delShares_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        delShares_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * del_shares define the delegation shares of the validator
     * </pre>
     *
     * <code>string del_shares = 4 [json_name = "delShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @return The bytes for delShares.
     */
    public com.google.protobuf.ByteString
        getDelSharesBytes() {
      java.lang.Object ref = delShares_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        delShares_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * del_shares define the delegation shares of the validator
     * </pre>
     *
     * <code>string del_shares = 4 [json_name = "delShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @param value The delShares to set.
     * @return This builder for chaining.
     */
    public Builder setDelShares(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      delShares_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * del_shares define the delegation shares of the validator
     * </pre>
     *
     * <code>string del_shares = 4 [json_name = "delShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDelShares() {
      delShares_ = getDefaultInstance().getDelShares();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * del_shares define the delegation shares of the validator
     * </pre>
     *
     * <code>string del_shares = 4 [json_name = "delShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @param value The bytes for delShares to set.
     * @return This builder for chaining.
     */
    public Builder setDelSharesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      delShares_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object liquidTokens_ = "";
    /**
     * <pre>
     * liquid_tokens define the token amount worth of delegation shares of the validator (slashing applied amount)
     * </pre>
     *
     * <code>string liquid_tokens = 5 [json_name = "liquidTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The liquidTokens.
     */
    public java.lang.String getLiquidTokens() {
      java.lang.Object ref = liquidTokens_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        liquidTokens_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * liquid_tokens define the token amount worth of delegation shares of the validator (slashing applied amount)
     * </pre>
     *
     * <code>string liquid_tokens = 5 [json_name = "liquidTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The bytes for liquidTokens.
     */
    public com.google.protobuf.ByteString
        getLiquidTokensBytes() {
      java.lang.Object ref = liquidTokens_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liquidTokens_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * liquid_tokens define the token amount worth of delegation shares of the validator (slashing applied amount)
     * </pre>
     *
     * <code>string liquid_tokens = 5 [json_name = "liquidTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @param value The liquidTokens to set.
     * @return This builder for chaining.
     */
    public Builder setLiquidTokens(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      liquidTokens_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * liquid_tokens define the token amount worth of delegation shares of the validator (slashing applied amount)
     * </pre>
     *
     * <code>string liquid_tokens = 5 [json_name = "liquidTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLiquidTokens() {
      liquidTokens_ = getDefaultInstance().getLiquidTokens();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * liquid_tokens define the token amount worth of delegation shares of the validator (slashing applied amount)
     * </pre>
     *
     * <code>string liquid_tokens = 5 [json_name = "liquidTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @param value The bytes for liquidTokens to set.
     * @return This builder for chaining.
     */
    public Builder setLiquidTokensBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      liquidTokens_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:crescent.liquidstaking.v1beta1.LiquidValidatorState)
  }

  // @@protoc_insertion_point(class_scope:crescent.liquidstaking.v1beta1.LiquidValidatorState)
  private static final com.crescent.liquidstaking.v1beta1.LiquidValidatorState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.crescent.liquidstaking.v1beta1.LiquidValidatorState();
  }

  public static com.crescent.liquidstaking.v1beta1.LiquidValidatorState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LiquidValidatorState>
      PARSER = new com.google.protobuf.AbstractParser<LiquidValidatorState>() {
    @java.lang.Override
    public LiquidValidatorState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<LiquidValidatorState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LiquidValidatorState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.crescent.liquidstaking.v1beta1.LiquidValidatorState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


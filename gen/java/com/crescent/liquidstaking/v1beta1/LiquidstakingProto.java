// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/liquidstaking/v1beta1/liquidstaking.proto

package com.crescent.liquidstaking.v1beta1;

public final class LiquidstakingProto {
  private LiquidstakingProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_liquidstaking_v1beta1_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_liquidstaking_v1beta1_Params_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_liquidstaking_v1beta1_WhitelistedValidator_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_liquidstaking_v1beta1_WhitelistedValidator_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_liquidstaking_v1beta1_LiquidValidator_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_liquidstaking_v1beta1_LiquidValidator_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_liquidstaking_v1beta1_LiquidValidatorState_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_liquidstaking_v1beta1_LiquidValidatorState_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_liquidstaking_v1beta1_NetAmountState_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_liquidstaking_v1beta1_NetAmountState_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_liquidstaking_v1beta1_VotingPower_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_liquidstaking_v1beta1_VotingPower_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n2crescent/liquidstaking/v1beta1/liquids" +
      "taking.proto\022\036crescent.liquidstaking.v1b" +
      "eta1\032\024gogoproto/gogo.proto\032\031cosmos_proto" +
      "/cosmos.proto\032\036cosmos/base/v1beta1/coin." +
      "proto\032\037google/protobuf/timestamp.proto\"\366" +
      "\003\n\006Params\022H\n\021liquid_bond_denom\030\001 \001(\tB\034\362\336" +
      "\037\030yaml:\"liquid_bond_denom\"R\017liquidBondDe" +
      "nom\022\222\001\n\026whitelisted_validators\030\002 \003(\01324.c" +
      "rescent.liquidstaking.v1beta1.Whiteliste" +
      "dValidatorB%\310\336\037\000\362\336\037\035yaml:\"whitelisted_va" +
      "lidators\"R\025whitelistedValidators\022s\n\020unst" +
      "ake_fee_rate\030\003 \001(\tBI\310\336\037\000\332\336\037&github.com/c" +
      "osmos/cosmos-sdk/types.Dec\362\336\037\027yaml:\"unst" +
      "ake_fee_rate\"R\016unstakeFeeRate\022\215\001\n\031min_li" +
      "quid_staking_amount\030\005 \001(\tBR\310\336\037\000\332\336\037&githu" +
      "b.com/cosmos/cosmos-sdk/types.Int\362\336\037 yam" +
      "l:\"min_liquid_staking_amount\"R\026minLiquid" +
      "StakingAmount:\010\210\240\037\000\230\240\037\000\"\324\001\n\024WhitelistedV" +
      "alidator\022I\n\021validator_address\030\001 \001(\tB\034\362\336\037" +
      "\030yaml:\"validator_address\"R\020validatorAddr" +
      "ess\022k\n\rtarget_weight\030\002 \001(\tBF\310\336\037\000\332\336\037&gith" +
      "ub.com/cosmos/cosmos-sdk/types.Int\362\336\037\024ya" +
      "ml:\"target_weight\"R\014targetWeight:\004\210\240\037\000\"c" +
      "\n\017LiquidValidator\022F\n\020operator_address\030\001 " +
      "\001(\tB\033\362\336\037\027yaml:\"operator_address\"R\017operat" +
      "orAddress:\010\210\240\037\000\350\240\037\000\"\256\003\n\024LiquidValidatorS" +
      "tate\022F\n\020operator_address\030\001 \001(\tB\033\362\336\037\027yaml" +
      ":\"operator_address\"R\017operatorAddress\022W\n\006" +
      "weight\030\002 \001(\tB?\310\336\037\000\332\336\037&github.com/cosmos/" +
      "cosmos-sdk/types.Int\362\336\037\ryaml:\"weight\"R\006w" +
      "eight\022G\n\006status\030\003 \001(\0162/.crescent.liquids" +
      "taking.v1beta1.ValidatorStatusR\006status\022M" +
      "\n\ndel_shares\030\004 \001(\tB.\310\336\037\000\332\336\037&github.com/c" +
      "osmos/cosmos-sdk/types.DecR\tdelShares\022S\n" +
      "\rliquid_tokens\030\005 \001(\tB.\310\336\037\000\332\336\037&github.com" +
      "/cosmos/cosmos-sdk/types.IntR\014liquidToke" +
      "ns:\010\210\240\037\000\350\240\037\000\"\374\005\n\016NetAmountState\022K\n\tmint_" +
      "rate\030\001 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/co" +
      "smos-sdk/types.DecR\010mintRate\022^\n\023btoken_t" +
      "otal_supply\030\002 \001(\tB.\310\336\037\000\332\336\037&github.com/co" +
      "smos/cosmos-sdk/types.IntR\021btokenTotalSu" +
      "pply\022M\n\nnet_amount\030\003 \001(\tB.\310\336\037\000\332\336\037&github" +
      ".com/cosmos/cosmos-sdk/types.DecR\tnetAmo" +
      "unt\022X\n\020total_del_shares\030\004 \001(\tB.\310\336\037\000\332\336\037&g" +
      "ithub.com/cosmos/cosmos-sdk/types.DecR\016t" +
      "otalDelShares\022^\n\023total_liquid_tokens\030\005 \001" +
      "(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk" +
      "/types.IntR\021totalLiquidTokens\022f\n\027total_r" +
      "emaining_rewards\030\006 \001(\tB.\310\336\037\000\332\336\037&github.c" +
      "om/cosmos/cosmos-sdk/types.DecR\025totalRem" +
      "ainingRewards\022f\n\027total_unbonding_balance" +
      "\030\007 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos" +
      "-sdk/types.IntR\025totalUnbondingBalance\022Z\n" +
      "\021proxy_acc_balance\030\010 \001(\tB.\310\336\037\000\332\336\037&github" +
      ".com/cosmos/cosmos-sdk/types.IntR\017proxyA" +
      "ccBalance:\010\210\240\037\001\350\240\037\000\"\344\002\n\013VotingPower\022\024\n\005v" +
      "oter\030\001 \001(\tR\005voter\022`\n\024staking_voting_powe" +
      "r\030\002 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmo" +
      "s-sdk/types.IntR\022stakingVotingPower\022m\n\033l" +
      "iquid_staking_voting_power\030\003 \001(\tB.\310\336\037\000\332\336" +
      "\037&github.com/cosmos/cosmos-sdk/types.Int" +
      "R\030liquidStakingVotingPower\022d\n\026validator_" +
      "voting_power\030\004 \001(\tB.\310\336\037\000\332\336\037&github.com/c" +
      "osmos/cosmos-sdk/types.IntR\024validatorVot" +
      "ingPower:\010\210\240\037\000\350\240\037\000*\315\001\n\017ValidatorStatus\022@" +
      "\n\034VALIDATOR_STATUS_UNSPECIFIED\020\000\032\036\212\235 \032Va" +
      "lidatorStatusUnspecified\0226\n\027VALIDATOR_ST" +
      "ATUS_ACTIVE\020\001\032\031\212\235 \025ValidatorStatusActive" +
      "\022:\n\031VALIDATOR_STATUS_INACTIVE\020\002\032\033\212\235 \027Val" +
      "idatorStatusInactive\032\004\210\243\036\000B\221\002\n\"com.cresc" +
      "ent.liquidstaking.v1beta1B\022Liquidstaking" +
      "ProtoP\001Z=github.com/crescent-network/cre" +
      "scent/v5/x/liquidstaking/types\242\002\003CLX\252\002\036C" +
      "rescent.Liquidstaking.V1beta1\312\002\036Crescent" +
      "\\Liquidstaking\\V1beta1\342\002*Crescent\\Liquid" +
      "staking\\V1beta1\\GPBMetadata\352\002 Crescent::" +
      "Liquidstaking::V1beta1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_crescent_liquidstaking_v1beta1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_crescent_liquidstaking_v1beta1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_liquidstaking_v1beta1_Params_descriptor,
        new java.lang.String[] { "LiquidBondDenom", "WhitelistedValidators", "UnstakeFeeRate", "MinLiquidStakingAmount", });
    internal_static_crescent_liquidstaking_v1beta1_WhitelistedValidator_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_crescent_liquidstaking_v1beta1_WhitelistedValidator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_liquidstaking_v1beta1_WhitelistedValidator_descriptor,
        new java.lang.String[] { "ValidatorAddress", "TargetWeight", });
    internal_static_crescent_liquidstaking_v1beta1_LiquidValidator_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_crescent_liquidstaking_v1beta1_LiquidValidator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_liquidstaking_v1beta1_LiquidValidator_descriptor,
        new java.lang.String[] { "OperatorAddress", });
    internal_static_crescent_liquidstaking_v1beta1_LiquidValidatorState_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_crescent_liquidstaking_v1beta1_LiquidValidatorState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_liquidstaking_v1beta1_LiquidValidatorState_descriptor,
        new java.lang.String[] { "OperatorAddress", "Weight", "Status", "DelShares", "LiquidTokens", });
    internal_static_crescent_liquidstaking_v1beta1_NetAmountState_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_crescent_liquidstaking_v1beta1_NetAmountState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_liquidstaking_v1beta1_NetAmountState_descriptor,
        new java.lang.String[] { "MintRate", "BtokenTotalSupply", "NetAmount", "TotalDelShares", "TotalLiquidTokens", "TotalRemainingRewards", "TotalUnbondingBalance", "ProxyAccBalance", });
    internal_static_crescent_liquidstaking_v1beta1_VotingPower_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_crescent_liquidstaking_v1beta1_VotingPower_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_liquidstaking_v1beta1_VotingPower_descriptor,
        new java.lang.String[] { "Voter", "StakingVotingPower", "LiquidStakingVotingPower", "ValidatorVotingPower", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.enumvalueCustomname);
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.goprotoEnumPrefix);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/claim/v1beta1/claim.proto

package com.crescent.claim.v1beta1;

public final class ClaimProto {
  private ClaimProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_claim_v1beta1_Airdrop_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_claim_v1beta1_Airdrop_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_claim_v1beta1_ClaimRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_claim_v1beta1_ClaimRecord_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"crescent/claim/v1beta1/claim.proto\022\026cr" +
      "escent.claim.v1beta1\032\024gogoproto/gogo.pro" +
      "to\032\037google/protobuf/timestamp.proto\032\036cos" +
      "mos/base/v1beta1/coin.proto\"\215\002\n\007Airdrop\022" +
      "\016\n\002id\030\001 \001(\004R\002id\022%\n\016source_address\030\002 \001(\tR" +
      "\rsourceAddress\022E\n\nconditions\030\003 \003(\0162%.cre" +
      "scent.claim.v1beta1.ConditionTypeR\ncondi" +
      "tions\022C\n\nstart_time\030\004 \001(\0132\032.google.proto" +
      "buf.TimestampB\010\310\336\037\000\220\337\037\001R\tstartTime\022?\n\010en" +
      "d_time\030\005 \001(\0132\032.google.protobuf.Timestamp" +
      "B\010\310\336\037\000\220\337\037\001R\007endTime\"\234\003\n\013ClaimRecord\022\035\n\na" +
      "irdrop_id\030\001 \001(\004R\tairdropId\022\034\n\trecipient\030" +
      "\002 \001(\tR\trecipient\022\203\001\n\027initial_claimable_c" +
      "oins\030\003 \003(\0132\031.cosmos.base.v1beta1.CoinB0\310" +
      "\336\037\000\252\337\037(github.com/cosmos/cosmos-sdk/type" +
      "s.CoinsR\025initialClaimableCoins\022t\n\017claima" +
      "ble_coins\030\004 \003(\0132\031.cosmos.base.v1beta1.Co" +
      "inB0\310\336\037\000\252\337\037(github.com/cosmos/cosmos-sdk" +
      "/types.CoinsR\016claimableCoins\022T\n\022claimed_" +
      "conditions\030\005 \003(\0162%.crescent.claim.v1beta" +
      "1.ConditionTypeR\021claimedConditions*\247\002\n\rC" +
      "onditionType\022<\n\032CONDITION_TYPE_UNSPECIFI" +
      "ED\020\000\032\034\212\235 \030ConditionTypeUnspecified\0224\n\026CO" +
      "NDITION_TYPE_DEPOSIT\020\001\032\030\212\235 \024ConditionTyp" +
      "eDeposit\022.\n\023CONDITION_TYPE_SWAP\020\002\032\025\212\235 \021C" +
      "onditionTypeSwap\022<\n\032CONDITION_TYPE_LIQUI" +
      "DSTAKE\020\003\032\034\212\235 \030ConditionTypeLiquidStake\022." +
      "\n\023CONDITION_TYPE_VOTE\020\004\032\025\212\235 \021ConditionTy" +
      "peVote\032\004\210\243\036\000B\335\001\n\032com.crescent.claim.v1be" +
      "ta1B\nClaimProtoP\001Z5github.com/crescent-n" +
      "etwork/crescent/v5/x/claim/types\242\002\003CCX\252\002" +
      "\026Crescent.Claim.V1beta1\312\002\026Crescent\\Claim" +
      "\\V1beta1\342\002\"Crescent\\Claim\\V1beta1\\GPBMet" +
      "adata\352\002\030Crescent::Claim::V1beta1\310\341\036\000b\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
        });
    internal_static_crescent_claim_v1beta1_Airdrop_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_crescent_claim_v1beta1_Airdrop_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_claim_v1beta1_Airdrop_descriptor,
        new java.lang.String[] { "Id", "SourceAddress", "Conditions", "StartTime", "EndTime", });
    internal_static_crescent_claim_v1beta1_ClaimRecord_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_crescent_claim_v1beta1_ClaimRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_claim_v1beta1_ClaimRecord_descriptor,
        new java.lang.String[] { "AirdropId", "Recipient", "InitialClaimableCoins", "ClaimableCoins", "ClaimedConditions", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.enumvalueCustomname);
    registry.add(com.gogoproto.GogoProto.goprotoEnumPrefix);
    registry.add(com.gogoproto.GogoProto.goprotoGettersAll);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/claim/v1beta1/claim.proto

package com.crescent.claim.v1beta1;

public interface ClaimRecordOrBuilder extends
    // @@protoc_insertion_point(interface_extends:crescent.claim.v1beta1.ClaimRecord)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * airdrop_id specifies airdrop id
   * </pre>
   *
   * <code>uint64 airdrop_id = 1 [json_name = "airdropId"];</code>
   * @return The airdropId.
   */
  long getAirdropId();

  /**
   * <pre>
   * recipient specifies the bech32-encoded address that is eligible to claim airdrop
   * </pre>
   *
   * <code>string recipient = 2 [json_name = "recipient"];</code>
   * @return The recipient.
   */
  java.lang.String getRecipient();
  /**
   * <pre>
   * recipient specifies the bech32-encoded address that is eligible to claim airdrop
   * </pre>
   *
   * <code>string recipient = 2 [json_name = "recipient"];</code>
   * @return The bytes for recipient.
   */
  com.google.protobuf.ByteString
      getRecipientBytes();

  /**
   * <pre>
   * initial_claimable_coins specifies the initial claimable coins
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [json_name = "initialClaimableCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.Coin> 
      getInitialClaimableCoinsList();
  /**
   * <pre>
   * initial_claimable_coins specifies the initial claimable coins
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [json_name = "initialClaimableCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.Coin getInitialClaimableCoins(int index);
  /**
   * <pre>
   * initial_claimable_coins specifies the initial claimable coins
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [json_name = "initialClaimableCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  int getInitialClaimableCoinsCount();
  /**
   * <pre>
   * initial_claimable_coins specifies the initial claimable coins
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [json_name = "initialClaimableCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getInitialClaimableCoinsOrBuilderList();
  /**
   * <pre>
   * initial_claimable_coins specifies the initial claimable coins
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [json_name = "initialClaimableCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getInitialClaimableCoinsOrBuilder(
      int index);

  /**
   * <pre>
   * claimable_coins specifies the unclaimed claimable coins
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [json_name = "claimableCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.Coin> 
      getClaimableCoinsList();
  /**
   * <pre>
   * claimable_coins specifies the unclaimed claimable coins
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [json_name = "claimableCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.Coin getClaimableCoins(int index);
  /**
   * <pre>
   * claimable_coins specifies the unclaimed claimable coins
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [json_name = "claimableCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  int getClaimableCoinsCount();
  /**
   * <pre>
   * claimable_coins specifies the unclaimed claimable coins
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [json_name = "claimableCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getClaimableCoinsOrBuilderList();
  /**
   * <pre>
   * claimable_coins specifies the unclaimed claimable coins
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [json_name = "claimableCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getClaimableCoinsOrBuilder(
      int index);

  /**
   * <pre>
   * claimed_conditions specifies a list of condition types
   * initial values are empty and each condition type gets appended when claim is successfully executed
   * </pre>
   *
   * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5 [json_name = "claimedConditions"];</code>
   * @return A list containing the claimedConditions.
   */
  java.util.List<com.crescent.claim.v1beta1.ConditionType> getClaimedConditionsList();
  /**
   * <pre>
   * claimed_conditions specifies a list of condition types
   * initial values are empty and each condition type gets appended when claim is successfully executed
   * </pre>
   *
   * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5 [json_name = "claimedConditions"];</code>
   * @return The count of claimedConditions.
   */
  int getClaimedConditionsCount();
  /**
   * <pre>
   * claimed_conditions specifies a list of condition types
   * initial values are empty and each condition type gets appended when claim is successfully executed
   * </pre>
   *
   * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5 [json_name = "claimedConditions"];</code>
   * @param index The index of the element to return.
   * @return The claimedConditions at the given index.
   */
  com.crescent.claim.v1beta1.ConditionType getClaimedConditions(int index);
  /**
   * <pre>
   * claimed_conditions specifies a list of condition types
   * initial values are empty and each condition type gets appended when claim is successfully executed
   * </pre>
   *
   * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5 [json_name = "claimedConditions"];</code>
   * @return A list containing the enum numeric values on the wire for claimedConditions.
   */
  java.util.List<java.lang.Integer>
  getClaimedConditionsValueList();
  /**
   * <pre>
   * claimed_conditions specifies a list of condition types
   * initial values are empty and each condition type gets appended when claim is successfully executed
   * </pre>
   *
   * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5 [json_name = "claimedConditions"];</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of claimedConditions at the given index.
   */
  int getClaimedConditionsValue(int index);
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: neutron/feerefunder/fee.proto

package com.neutron.feerefunder;

public final class FeeProto {
  private FeeProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FeeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:neutron.feerefunder.Fee)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * the packet receive fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> 
        getRecvFeeList();
    /**
     * <pre>
     * the packet receive fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    com.cosmos.base.v1beta1.CoinProto.Coin getRecvFee(int index);
    /**
     * <pre>
     * the packet receive fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getRecvFeeCount();
    /**
     * <pre>
     * the packet receive fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
        getRecvFeeOrBuilderList();
    /**
     * <pre>
     * the packet receive fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getRecvFeeOrBuilder(
        int index);

    /**
     * <pre>
     * the packet acknowledgement fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> 
        getAckFeeList();
    /**
     * <pre>
     * the packet acknowledgement fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    com.cosmos.base.v1beta1.CoinProto.Coin getAckFee(int index);
    /**
     * <pre>
     * the packet acknowledgement fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getAckFeeCount();
    /**
     * <pre>
     * the packet acknowledgement fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
        getAckFeeOrBuilderList();
    /**
     * <pre>
     * the packet acknowledgement fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getAckFeeOrBuilder(
        int index);

    /**
     * <pre>
     * the packet timeout fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> 
        getTimeoutFeeList();
    /**
     * <pre>
     * the packet timeout fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    com.cosmos.base.v1beta1.CoinProto.Coin getTimeoutFee(int index);
    /**
     * <pre>
     * the packet timeout fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getTimeoutFeeCount();
    /**
     * <pre>
     * the packet timeout fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
        getTimeoutFeeOrBuilderList();
    /**
     * <pre>
     * the packet timeout fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getTimeoutFeeOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Fee defines the ICS29 receive, acknowledgement and timeout fees
   * </pre>
   *
   * Protobuf type {@code neutron.feerefunder.Fee}
   */
  public static final class Fee extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:neutron.feerefunder.Fee)
      FeeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Fee.newBuilder() to construct.
    private Fee(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Fee() {
      recvFee_ = java.util.Collections.emptyList();
      ackFee_ = java.util.Collections.emptyList();
      timeoutFee_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Fee();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.neutron.feerefunder.FeeProto.internal_static_neutron_feerefunder_Fee_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.neutron.feerefunder.FeeProto.internal_static_neutron_feerefunder_Fee_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.neutron.feerefunder.FeeProto.Fee.class, com.neutron.feerefunder.FeeProto.Fee.Builder.class);
    }

    public static final int RECV_FEE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> recvFee_;
    /**
     * <pre>
     * the packet receive fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> getRecvFeeList() {
      return recvFee_;
    }
    /**
     * <pre>
     * the packet receive fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
        getRecvFeeOrBuilderList() {
      return recvFee_;
    }
    /**
     * <pre>
     * the packet receive fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getRecvFeeCount() {
      return recvFee_.size();
    }
    /**
     * <pre>
     * the packet receive fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public com.cosmos.base.v1beta1.CoinProto.Coin getRecvFee(int index) {
      return recvFee_.get(index);
    }
    /**
     * <pre>
     * the packet receive fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getRecvFeeOrBuilder(
        int index) {
      return recvFee_.get(index);
    }

    public static final int ACK_FEE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> ackFee_;
    /**
     * <pre>
     * the packet acknowledgement fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> getAckFeeList() {
      return ackFee_;
    }
    /**
     * <pre>
     * the packet acknowledgement fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
        getAckFeeOrBuilderList() {
      return ackFee_;
    }
    /**
     * <pre>
     * the packet acknowledgement fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getAckFeeCount() {
      return ackFee_.size();
    }
    /**
     * <pre>
     * the packet acknowledgement fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public com.cosmos.base.v1beta1.CoinProto.Coin getAckFee(int index) {
      return ackFee_.get(index);
    }
    /**
     * <pre>
     * the packet acknowledgement fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getAckFeeOrBuilder(
        int index) {
      return ackFee_.get(index);
    }

    public static final int TIMEOUT_FEE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> timeoutFee_;
    /**
     * <pre>
     * the packet timeout fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> getTimeoutFeeList() {
      return timeoutFee_;
    }
    /**
     * <pre>
     * the packet timeout fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
        getTimeoutFeeOrBuilderList() {
      return timeoutFee_;
    }
    /**
     * <pre>
     * the packet timeout fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getTimeoutFeeCount() {
      return timeoutFee_.size();
    }
    /**
     * <pre>
     * the packet timeout fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public com.cosmos.base.v1beta1.CoinProto.Coin getTimeoutFee(int index) {
      return timeoutFee_.get(index);
    }
    /**
     * <pre>
     * the packet timeout fee
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getTimeoutFeeOrBuilder(
        int index) {
      return timeoutFee_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < recvFee_.size(); i++) {
        output.writeMessage(1, recvFee_.get(i));
      }
      for (int i = 0; i < ackFee_.size(); i++) {
        output.writeMessage(2, ackFee_.get(i));
      }
      for (int i = 0; i < timeoutFee_.size(); i++) {
        output.writeMessage(3, timeoutFee_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < recvFee_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, recvFee_.get(i));
      }
      for (int i = 0; i < ackFee_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, ackFee_.get(i));
      }
      for (int i = 0; i < timeoutFee_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, timeoutFee_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.neutron.feerefunder.FeeProto.Fee)) {
        return super.equals(obj);
      }
      com.neutron.feerefunder.FeeProto.Fee other = (com.neutron.feerefunder.FeeProto.Fee) obj;

      if (!getRecvFeeList()
          .equals(other.getRecvFeeList())) return false;
      if (!getAckFeeList()
          .equals(other.getAckFeeList())) return false;
      if (!getTimeoutFeeList()
          .equals(other.getTimeoutFeeList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRecvFeeCount() > 0) {
        hash = (37 * hash) + RECV_FEE_FIELD_NUMBER;
        hash = (53 * hash) + getRecvFeeList().hashCode();
      }
      if (getAckFeeCount() > 0) {
        hash = (37 * hash) + ACK_FEE_FIELD_NUMBER;
        hash = (53 * hash) + getAckFeeList().hashCode();
      }
      if (getTimeoutFeeCount() > 0) {
        hash = (37 * hash) + TIMEOUT_FEE_FIELD_NUMBER;
        hash = (53 * hash) + getTimeoutFeeList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.neutron.feerefunder.FeeProto.Fee parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.neutron.feerefunder.FeeProto.Fee parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.neutron.feerefunder.FeeProto.Fee parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.neutron.feerefunder.FeeProto.Fee parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.neutron.feerefunder.FeeProto.Fee parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.neutron.feerefunder.FeeProto.Fee parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.neutron.feerefunder.FeeProto.Fee parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.neutron.feerefunder.FeeProto.Fee parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.neutron.feerefunder.FeeProto.Fee parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.neutron.feerefunder.FeeProto.Fee parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.neutron.feerefunder.FeeProto.Fee parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.neutron.feerefunder.FeeProto.Fee parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.neutron.feerefunder.FeeProto.Fee prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Fee defines the ICS29 receive, acknowledgement and timeout fees
     * </pre>
     *
     * Protobuf type {@code neutron.feerefunder.Fee}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:neutron.feerefunder.Fee)
        com.neutron.feerefunder.FeeProto.FeeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.neutron.feerefunder.FeeProto.internal_static_neutron_feerefunder_Fee_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.neutron.feerefunder.FeeProto.internal_static_neutron_feerefunder_Fee_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.neutron.feerefunder.FeeProto.Fee.class, com.neutron.feerefunder.FeeProto.Fee.Builder.class);
      }

      // Construct using com.neutron.feerefunder.FeeProto.Fee.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (recvFeeBuilder_ == null) {
          recvFee_ = java.util.Collections.emptyList();
        } else {
          recvFee_ = null;
          recvFeeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (ackFeeBuilder_ == null) {
          ackFee_ = java.util.Collections.emptyList();
        } else {
          ackFee_ = null;
          ackFeeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (timeoutFeeBuilder_ == null) {
          timeoutFee_ = java.util.Collections.emptyList();
        } else {
          timeoutFee_ = null;
          timeoutFeeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.neutron.feerefunder.FeeProto.internal_static_neutron_feerefunder_Fee_descriptor;
      }

      @java.lang.Override
      public com.neutron.feerefunder.FeeProto.Fee getDefaultInstanceForType() {
        return com.neutron.feerefunder.FeeProto.Fee.getDefaultInstance();
      }

      @java.lang.Override
      public com.neutron.feerefunder.FeeProto.Fee build() {
        com.neutron.feerefunder.FeeProto.Fee result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.neutron.feerefunder.FeeProto.Fee buildPartial() {
        com.neutron.feerefunder.FeeProto.Fee result = new com.neutron.feerefunder.FeeProto.Fee(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.neutron.feerefunder.FeeProto.Fee result) {
        if (recvFeeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            recvFee_ = java.util.Collections.unmodifiableList(recvFee_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.recvFee_ = recvFee_;
        } else {
          result.recvFee_ = recvFeeBuilder_.build();
        }
        if (ackFeeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            ackFee_ = java.util.Collections.unmodifiableList(ackFee_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.ackFee_ = ackFee_;
        } else {
          result.ackFee_ = ackFeeBuilder_.build();
        }
        if (timeoutFeeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            timeoutFee_ = java.util.Collections.unmodifiableList(timeoutFee_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.timeoutFee_ = timeoutFee_;
        } else {
          result.timeoutFee_ = timeoutFeeBuilder_.build();
        }
      }

      private void buildPartial0(com.neutron.feerefunder.FeeProto.Fee result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.neutron.feerefunder.FeeProto.Fee) {
          return mergeFrom((com.neutron.feerefunder.FeeProto.Fee)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.neutron.feerefunder.FeeProto.Fee other) {
        if (other == com.neutron.feerefunder.FeeProto.Fee.getDefaultInstance()) return this;
        if (recvFeeBuilder_ == null) {
          if (!other.recvFee_.isEmpty()) {
            if (recvFee_.isEmpty()) {
              recvFee_ = other.recvFee_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRecvFeeIsMutable();
              recvFee_.addAll(other.recvFee_);
            }
            onChanged();
          }
        } else {
          if (!other.recvFee_.isEmpty()) {
            if (recvFeeBuilder_.isEmpty()) {
              recvFeeBuilder_.dispose();
              recvFeeBuilder_ = null;
              recvFee_ = other.recvFee_;
              bitField0_ = (bitField0_ & ~0x00000001);
              recvFeeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRecvFeeFieldBuilder() : null;
            } else {
              recvFeeBuilder_.addAllMessages(other.recvFee_);
            }
          }
        }
        if (ackFeeBuilder_ == null) {
          if (!other.ackFee_.isEmpty()) {
            if (ackFee_.isEmpty()) {
              ackFee_ = other.ackFee_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAckFeeIsMutable();
              ackFee_.addAll(other.ackFee_);
            }
            onChanged();
          }
        } else {
          if (!other.ackFee_.isEmpty()) {
            if (ackFeeBuilder_.isEmpty()) {
              ackFeeBuilder_.dispose();
              ackFeeBuilder_ = null;
              ackFee_ = other.ackFee_;
              bitField0_ = (bitField0_ & ~0x00000002);
              ackFeeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAckFeeFieldBuilder() : null;
            } else {
              ackFeeBuilder_.addAllMessages(other.ackFee_);
            }
          }
        }
        if (timeoutFeeBuilder_ == null) {
          if (!other.timeoutFee_.isEmpty()) {
            if (timeoutFee_.isEmpty()) {
              timeoutFee_ = other.timeoutFee_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTimeoutFeeIsMutable();
              timeoutFee_.addAll(other.timeoutFee_);
            }
            onChanged();
          }
        } else {
          if (!other.timeoutFee_.isEmpty()) {
            if (timeoutFeeBuilder_.isEmpty()) {
              timeoutFeeBuilder_.dispose();
              timeoutFeeBuilder_ = null;
              timeoutFee_ = other.timeoutFee_;
              bitField0_ = (bitField0_ & ~0x00000004);
              timeoutFeeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTimeoutFeeFieldBuilder() : null;
            } else {
              timeoutFeeBuilder_.addAllMessages(other.timeoutFee_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.cosmos.base.v1beta1.CoinProto.Coin m =
                    input.readMessage(
                        com.cosmos.base.v1beta1.CoinProto.Coin.parser(),
                        extensionRegistry);
                if (recvFeeBuilder_ == null) {
                  ensureRecvFeeIsMutable();
                  recvFee_.add(m);
                } else {
                  recvFeeBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                com.cosmos.base.v1beta1.CoinProto.Coin m =
                    input.readMessage(
                        com.cosmos.base.v1beta1.CoinProto.Coin.parser(),
                        extensionRegistry);
                if (ackFeeBuilder_ == null) {
                  ensureAckFeeIsMutable();
                  ackFee_.add(m);
                } else {
                  ackFeeBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                com.cosmos.base.v1beta1.CoinProto.Coin m =
                    input.readMessage(
                        com.cosmos.base.v1beta1.CoinProto.Coin.parser(),
                        extensionRegistry);
                if (timeoutFeeBuilder_ == null) {
                  ensureTimeoutFeeIsMutable();
                  timeoutFee_.add(m);
                } else {
                  timeoutFeeBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> recvFee_ =
        java.util.Collections.emptyList();
      private void ensureRecvFeeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          recvFee_ = new java.util.ArrayList<com.cosmos.base.v1beta1.CoinProto.Coin>(recvFee_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> recvFeeBuilder_;

      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> getRecvFeeList() {
        if (recvFeeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(recvFee_);
        } else {
          return recvFeeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getRecvFeeCount() {
        if (recvFeeBuilder_ == null) {
          return recvFee_.size();
        } else {
          return recvFeeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin getRecvFee(int index) {
        if (recvFeeBuilder_ == null) {
          return recvFee_.get(index);
        } else {
          return recvFeeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setRecvFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (recvFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecvFeeIsMutable();
          recvFee_.set(index, value);
          onChanged();
        } else {
          recvFeeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setRecvFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (recvFeeBuilder_ == null) {
          ensureRecvFeeIsMutable();
          recvFee_.set(index, builderForValue.build());
          onChanged();
        } else {
          recvFeeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addRecvFee(com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (recvFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecvFeeIsMutable();
          recvFee_.add(value);
          onChanged();
        } else {
          recvFeeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addRecvFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (recvFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecvFeeIsMutable();
          recvFee_.add(index, value);
          onChanged();
        } else {
          recvFeeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addRecvFee(
          com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (recvFeeBuilder_ == null) {
          ensureRecvFeeIsMutable();
          recvFee_.add(builderForValue.build());
          onChanged();
        } else {
          recvFeeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addRecvFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (recvFeeBuilder_ == null) {
          ensureRecvFeeIsMutable();
          recvFee_.add(index, builderForValue.build());
          onChanged();
        } else {
          recvFeeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllRecvFee(
          java.lang.Iterable<? extends com.cosmos.base.v1beta1.CoinProto.Coin> values) {
        if (recvFeeBuilder_ == null) {
          ensureRecvFeeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, recvFee_);
          onChanged();
        } else {
          recvFeeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearRecvFee() {
        if (recvFeeBuilder_ == null) {
          recvFee_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          recvFeeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removeRecvFee(int index) {
        if (recvFeeBuilder_ == null) {
          ensureRecvFeeIsMutable();
          recvFee_.remove(index);
          onChanged();
        } else {
          recvFeeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder getRecvFeeBuilder(
          int index) {
        return getRecvFeeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getRecvFeeOrBuilder(
          int index) {
        if (recvFeeBuilder_ == null) {
          return recvFee_.get(index);  } else {
          return recvFeeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
           getRecvFeeOrBuilderList() {
        if (recvFeeBuilder_ != null) {
          return recvFeeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(recvFee_);
        }
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder addRecvFeeBuilder() {
        return getRecvFeeFieldBuilder().addBuilder(
            com.cosmos.base.v1beta1.CoinProto.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder addRecvFeeBuilder(
          int index) {
        return getRecvFeeFieldBuilder().addBuilder(
            index, com.cosmos.base.v1beta1.CoinProto.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * the packet receive fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin recv_fee = 1 [json_name = "recvFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"recv_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin.Builder> 
           getRecvFeeBuilderList() {
        return getRecvFeeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
          getRecvFeeFieldBuilder() {
        if (recvFeeBuilder_ == null) {
          recvFeeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder>(
                  recvFee_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          recvFee_ = null;
        }
        return recvFeeBuilder_;
      }

      private java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> ackFee_ =
        java.util.Collections.emptyList();
      private void ensureAckFeeIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          ackFee_ = new java.util.ArrayList<com.cosmos.base.v1beta1.CoinProto.Coin>(ackFee_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> ackFeeBuilder_;

      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> getAckFeeList() {
        if (ackFeeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ackFee_);
        } else {
          return ackFeeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getAckFeeCount() {
        if (ackFeeBuilder_ == null) {
          return ackFee_.size();
        } else {
          return ackFeeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin getAckFee(int index) {
        if (ackFeeBuilder_ == null) {
          return ackFee_.get(index);
        } else {
          return ackFeeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setAckFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (ackFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAckFeeIsMutable();
          ackFee_.set(index, value);
          onChanged();
        } else {
          ackFeeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setAckFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (ackFeeBuilder_ == null) {
          ensureAckFeeIsMutable();
          ackFee_.set(index, builderForValue.build());
          onChanged();
        } else {
          ackFeeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAckFee(com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (ackFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAckFeeIsMutable();
          ackFee_.add(value);
          onChanged();
        } else {
          ackFeeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAckFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (ackFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAckFeeIsMutable();
          ackFee_.add(index, value);
          onChanged();
        } else {
          ackFeeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAckFee(
          com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (ackFeeBuilder_ == null) {
          ensureAckFeeIsMutable();
          ackFee_.add(builderForValue.build());
          onChanged();
        } else {
          ackFeeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAckFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (ackFeeBuilder_ == null) {
          ensureAckFeeIsMutable();
          ackFee_.add(index, builderForValue.build());
          onChanged();
        } else {
          ackFeeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllAckFee(
          java.lang.Iterable<? extends com.cosmos.base.v1beta1.CoinProto.Coin> values) {
        if (ackFeeBuilder_ == null) {
          ensureAckFeeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ackFee_);
          onChanged();
        } else {
          ackFeeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearAckFee() {
        if (ackFeeBuilder_ == null) {
          ackFee_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          ackFeeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removeAckFee(int index) {
        if (ackFeeBuilder_ == null) {
          ensureAckFeeIsMutable();
          ackFee_.remove(index);
          onChanged();
        } else {
          ackFeeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder getAckFeeBuilder(
          int index) {
        return getAckFeeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getAckFeeOrBuilder(
          int index) {
        if (ackFeeBuilder_ == null) {
          return ackFee_.get(index);  } else {
          return ackFeeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
           getAckFeeOrBuilderList() {
        if (ackFeeBuilder_ != null) {
          return ackFeeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ackFee_);
        }
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder addAckFeeBuilder() {
        return getAckFeeFieldBuilder().addBuilder(
            com.cosmos.base.v1beta1.CoinProto.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder addAckFeeBuilder(
          int index) {
        return getAckFeeFieldBuilder().addBuilder(
            index, com.cosmos.base.v1beta1.CoinProto.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * the packet acknowledgement fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin ack_fee = 2 [json_name = "ackFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"ack_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin.Builder> 
           getAckFeeBuilderList() {
        return getAckFeeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
          getAckFeeFieldBuilder() {
        if (ackFeeBuilder_ == null) {
          ackFeeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder>(
                  ackFee_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          ackFee_ = null;
        }
        return ackFeeBuilder_;
      }

      private java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> timeoutFee_ =
        java.util.Collections.emptyList();
      private void ensureTimeoutFeeIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          timeoutFee_ = new java.util.ArrayList<com.cosmos.base.v1beta1.CoinProto.Coin>(timeoutFee_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> timeoutFeeBuilder_;

      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> getTimeoutFeeList() {
        if (timeoutFeeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(timeoutFee_);
        } else {
          return timeoutFeeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getTimeoutFeeCount() {
        if (timeoutFeeBuilder_ == null) {
          return timeoutFee_.size();
        } else {
          return timeoutFeeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin getTimeoutFee(int index) {
        if (timeoutFeeBuilder_ == null) {
          return timeoutFee_.get(index);
        } else {
          return timeoutFeeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setTimeoutFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (timeoutFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimeoutFeeIsMutable();
          timeoutFee_.set(index, value);
          onChanged();
        } else {
          timeoutFeeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setTimeoutFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (timeoutFeeBuilder_ == null) {
          ensureTimeoutFeeIsMutable();
          timeoutFee_.set(index, builderForValue.build());
          onChanged();
        } else {
          timeoutFeeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addTimeoutFee(com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (timeoutFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimeoutFeeIsMutable();
          timeoutFee_.add(value);
          onChanged();
        } else {
          timeoutFeeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addTimeoutFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (timeoutFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimeoutFeeIsMutable();
          timeoutFee_.add(index, value);
          onChanged();
        } else {
          timeoutFeeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addTimeoutFee(
          com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (timeoutFeeBuilder_ == null) {
          ensureTimeoutFeeIsMutable();
          timeoutFee_.add(builderForValue.build());
          onChanged();
        } else {
          timeoutFeeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addTimeoutFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (timeoutFeeBuilder_ == null) {
          ensureTimeoutFeeIsMutable();
          timeoutFee_.add(index, builderForValue.build());
          onChanged();
        } else {
          timeoutFeeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllTimeoutFee(
          java.lang.Iterable<? extends com.cosmos.base.v1beta1.CoinProto.Coin> values) {
        if (timeoutFeeBuilder_ == null) {
          ensureTimeoutFeeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, timeoutFee_);
          onChanged();
        } else {
          timeoutFeeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearTimeoutFee() {
        if (timeoutFeeBuilder_ == null) {
          timeoutFee_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          timeoutFeeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removeTimeoutFee(int index) {
        if (timeoutFeeBuilder_ == null) {
          ensureTimeoutFeeIsMutable();
          timeoutFee_.remove(index);
          onChanged();
        } else {
          timeoutFeeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder getTimeoutFeeBuilder(
          int index) {
        return getTimeoutFeeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getTimeoutFeeOrBuilder(
          int index) {
        if (timeoutFeeBuilder_ == null) {
          return timeoutFee_.get(index);  } else {
          return timeoutFeeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
           getTimeoutFeeOrBuilderList() {
        if (timeoutFeeBuilder_ != null) {
          return timeoutFeeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(timeoutFee_);
        }
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder addTimeoutFeeBuilder() {
        return getTimeoutFeeFieldBuilder().addBuilder(
            com.cosmos.base.v1beta1.CoinProto.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder addTimeoutFeeBuilder(
          int index) {
        return getTimeoutFeeFieldBuilder().addBuilder(
            index, com.cosmos.base.v1beta1.CoinProto.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * the packet timeout fee
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin timeout_fee = 3 [json_name = "timeoutFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin.Builder> 
           getTimeoutFeeBuilderList() {
        return getTimeoutFeeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
          getTimeoutFeeFieldBuilder() {
        if (timeoutFeeBuilder_ == null) {
          timeoutFeeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder>(
                  timeoutFee_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          timeoutFee_ = null;
        }
        return timeoutFeeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:neutron.feerefunder.Fee)
    }

    // @@protoc_insertion_point(class_scope:neutron.feerefunder.Fee)
    private static final com.neutron.feerefunder.FeeProto.Fee DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.neutron.feerefunder.FeeProto.Fee();
    }

    public static com.neutron.feerefunder.FeeProto.Fee getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Fee>
        PARSER = new com.google.protobuf.AbstractParser<Fee>() {
      @java.lang.Override
      public Fee parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Fee> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Fee> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.neutron.feerefunder.FeeProto.Fee getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PacketIDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:neutron.feerefunder.PacketID)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string channel_id = 1 [json_name = "channelId"];</code>
     * @return The channelId.
     */
    java.lang.String getChannelId();
    /**
     * <code>string channel_id = 1 [json_name = "channelId"];</code>
     * @return The bytes for channelId.
     */
    com.google.protobuf.ByteString
        getChannelIdBytes();

    /**
     * <code>string port_id = 2 [json_name = "portId"];</code>
     * @return The portId.
     */
    java.lang.String getPortId();
    /**
     * <code>string port_id = 2 [json_name = "portId"];</code>
     * @return The bytes for portId.
     */
    com.google.protobuf.ByteString
        getPortIdBytes();

    /**
     * <code>uint64 sequence = 3 [json_name = "sequence"];</code>
     * @return The sequence.
     */
    long getSequence();
  }
  /**
   * Protobuf type {@code neutron.feerefunder.PacketID}
   */
  public static final class PacketID extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:neutron.feerefunder.PacketID)
      PacketIDOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PacketID.newBuilder() to construct.
    private PacketID(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PacketID() {
      channelId_ = "";
      portId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PacketID();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.neutron.feerefunder.FeeProto.internal_static_neutron_feerefunder_PacketID_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.neutron.feerefunder.FeeProto.internal_static_neutron_feerefunder_PacketID_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.neutron.feerefunder.FeeProto.PacketID.class, com.neutron.feerefunder.FeeProto.PacketID.Builder.class);
    }

    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object channelId_ = "";
    /**
     * <code>string channel_id = 1 [json_name = "channelId"];</code>
     * @return The channelId.
     */
    @java.lang.Override
    public java.lang.String getChannelId() {
      java.lang.Object ref = channelId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        channelId_ = s;
        return s;
      }
    }
    /**
     * <code>string channel_id = 1 [json_name = "channelId"];</code>
     * @return The bytes for channelId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelIdBytes() {
      java.lang.Object ref = channelId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_ID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object portId_ = "";
    /**
     * <code>string port_id = 2 [json_name = "portId"];</code>
     * @return The portId.
     */
    @java.lang.Override
    public java.lang.String getPortId() {
      java.lang.Object ref = portId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        portId_ = s;
        return s;
      }
    }
    /**
     * <code>string port_id = 2 [json_name = "portId"];</code>
     * @return The bytes for portId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPortIdBytes() {
      java.lang.Object ref = portId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        portId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEQUENCE_FIELD_NUMBER = 3;
    private long sequence_ = 0L;
    /**
     * <code>uint64 sequence = 3 [json_name = "sequence"];</code>
     * @return The sequence.
     */
    @java.lang.Override
    public long getSequence() {
      return sequence_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(channelId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, channelId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(portId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, portId_);
      }
      if (sequence_ != 0L) {
        output.writeUInt64(3, sequence_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(channelId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, channelId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(portId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, portId_);
      }
      if (sequence_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, sequence_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.neutron.feerefunder.FeeProto.PacketID)) {
        return super.equals(obj);
      }
      com.neutron.feerefunder.FeeProto.PacketID other = (com.neutron.feerefunder.FeeProto.PacketID) obj;

      if (!getChannelId()
          .equals(other.getChannelId())) return false;
      if (!getPortId()
          .equals(other.getPortId())) return false;
      if (getSequence()
          != other.getSequence()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
      hash = (53 * hash) + getChannelId().hashCode();
      hash = (37 * hash) + PORT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPortId().hashCode();
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSequence());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.neutron.feerefunder.FeeProto.PacketID parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.neutron.feerefunder.FeeProto.PacketID parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.neutron.feerefunder.FeeProto.PacketID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.neutron.feerefunder.FeeProto.PacketID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.neutron.feerefunder.FeeProto.PacketID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.neutron.feerefunder.FeeProto.PacketID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.neutron.feerefunder.FeeProto.PacketID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.neutron.feerefunder.FeeProto.PacketID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.neutron.feerefunder.FeeProto.PacketID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.neutron.feerefunder.FeeProto.PacketID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.neutron.feerefunder.FeeProto.PacketID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.neutron.feerefunder.FeeProto.PacketID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.neutron.feerefunder.FeeProto.PacketID prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code neutron.feerefunder.PacketID}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:neutron.feerefunder.PacketID)
        com.neutron.feerefunder.FeeProto.PacketIDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.neutron.feerefunder.FeeProto.internal_static_neutron_feerefunder_PacketID_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.neutron.feerefunder.FeeProto.internal_static_neutron_feerefunder_PacketID_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.neutron.feerefunder.FeeProto.PacketID.class, com.neutron.feerefunder.FeeProto.PacketID.Builder.class);
      }

      // Construct using com.neutron.feerefunder.FeeProto.PacketID.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelId_ = "";
        portId_ = "";
        sequence_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.neutron.feerefunder.FeeProto.internal_static_neutron_feerefunder_PacketID_descriptor;
      }

      @java.lang.Override
      public com.neutron.feerefunder.FeeProto.PacketID getDefaultInstanceForType() {
        return com.neutron.feerefunder.FeeProto.PacketID.getDefaultInstance();
      }

      @java.lang.Override
      public com.neutron.feerefunder.FeeProto.PacketID build() {
        com.neutron.feerefunder.FeeProto.PacketID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.neutron.feerefunder.FeeProto.PacketID buildPartial() {
        com.neutron.feerefunder.FeeProto.PacketID result = new com.neutron.feerefunder.FeeProto.PacketID(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.neutron.feerefunder.FeeProto.PacketID result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelId_ = channelId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.portId_ = portId_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.sequence_ = sequence_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.neutron.feerefunder.FeeProto.PacketID) {
          return mergeFrom((com.neutron.feerefunder.FeeProto.PacketID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.neutron.feerefunder.FeeProto.PacketID other) {
        if (other == com.neutron.feerefunder.FeeProto.PacketID.getDefaultInstance()) return this;
        if (!other.getChannelId().isEmpty()) {
          channelId_ = other.channelId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getPortId().isEmpty()) {
          portId_ = other.portId_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.getSequence() != 0L) {
          setSequence(other.getSequence());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                channelId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                portId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                sequence_ = input.readUInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object channelId_ = "";
      /**
       * <code>string channel_id = 1 [json_name = "channelId"];</code>
       * @return The channelId.
       */
      public java.lang.String getChannelId() {
        java.lang.Object ref = channelId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          channelId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string channel_id = 1 [json_name = "channelId"];</code>
       * @return The bytes for channelId.
       */
      public com.google.protobuf.ByteString
          getChannelIdBytes() {
        java.lang.Object ref = channelId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string channel_id = 1 [json_name = "channelId"];</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        channelId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string channel_id = 1 [json_name = "channelId"];</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        channelId_ = getDefaultInstance().getChannelId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string channel_id = 1 [json_name = "channelId"];</code>
       * @param value The bytes for channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        channelId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object portId_ = "";
      /**
       * <code>string port_id = 2 [json_name = "portId"];</code>
       * @return The portId.
       */
      public java.lang.String getPortId() {
        java.lang.Object ref = portId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          portId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string port_id = 2 [json_name = "portId"];</code>
       * @return The bytes for portId.
       */
      public com.google.protobuf.ByteString
          getPortIdBytes() {
        java.lang.Object ref = portId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          portId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string port_id = 2 [json_name = "portId"];</code>
       * @param value The portId to set.
       * @return This builder for chaining.
       */
      public Builder setPortId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        portId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string port_id = 2 [json_name = "portId"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPortId() {
        portId_ = getDefaultInstance().getPortId();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string port_id = 2 [json_name = "portId"];</code>
       * @param value The bytes for portId to set.
       * @return This builder for chaining.
       */
      public Builder setPortIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        portId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private long sequence_ ;
      /**
       * <code>uint64 sequence = 3 [json_name = "sequence"];</code>
       * @return The sequence.
       */
      @java.lang.Override
      public long getSequence() {
        return sequence_;
      }
      /**
       * <code>uint64 sequence = 3 [json_name = "sequence"];</code>
       * @param value The sequence to set.
       * @return This builder for chaining.
       */
      public Builder setSequence(long value) {

        sequence_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 sequence = 3 [json_name = "sequence"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSequence() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sequence_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:neutron.feerefunder.PacketID)
    }

    // @@protoc_insertion_point(class_scope:neutron.feerefunder.PacketID)
    private static final com.neutron.feerefunder.FeeProto.PacketID DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.neutron.feerefunder.FeeProto.PacketID();
    }

    public static com.neutron.feerefunder.FeeProto.PacketID getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PacketID>
        PARSER = new com.google.protobuf.AbstractParser<PacketID>() {
      @java.lang.Override
      public PacketID parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PacketID> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PacketID> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.neutron.feerefunder.FeeProto.PacketID getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_neutron_feerefunder_Fee_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_neutron_feerefunder_Fee_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_neutron_feerefunder_PacketID_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_neutron_feerefunder_PacketID_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035neutron/feerefunder/fee.proto\022\023neutron" +
      ".feerefunder\032\036cosmos/base/v1beta1/coin.p" +
      "roto\032\024gogoproto/gogo.proto\"\375\002\n\003Fee\022y\n\010re" +
      "cv_fee\030\001 \003(\0132\031.cosmos.base.v1beta1.CoinB" +
      "C\310\336\037\000\362\336\037\017yaml:\"recv_fee\"\252\337\037(github.com/c" +
      "osmos/cosmos-sdk/types.CoinsR\007recvFee\022v\n" +
      "\007ack_fee\030\002 \003(\0132\031.cosmos.base.v1beta1.Coi" +
      "nBB\310\336\037\000\362\336\037\016yaml:\"ack_fee\"\252\337\037(github.com/" +
      "cosmos/cosmos-sdk/types.CoinsR\006ackFee\022\202\001" +
      "\n\013timeout_fee\030\003 \003(\0132\031.cosmos.base.v1beta" +
      "1.CoinBF\310\336\037\000\362\336\037\022yaml:\"timeout_fee\"\252\337\037(gi" +
      "thub.com/cosmos/cosmos-sdk/types.CoinsR\n" +
      "timeoutFee\"^\n\010PacketID\022\035\n\nchannel_id\030\001 \001" +
      "(\tR\tchannelId\022\027\n\007port_id\030\002 \001(\tR\006portId\022\032" +
      "\n\010sequence\030\003 \001(\004R\010sequenceB\305\001\n\027com.neutr" +
      "on.feerefunderB\010FeeProtoZ5github.com/neu" +
      "tron-org/neutron/v4/x/feerefunder/types\242" +
      "\002\003NFX\252\002\023Neutron.Feerefunder\312\002\023Neutron\\Fe" +
      "erefunder\342\002\037Neutron\\Feerefunder\\GPBMetad" +
      "ata\352\002\024Neutron::Feerefunderb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_neutron_feerefunder_Fee_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_neutron_feerefunder_Fee_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_neutron_feerefunder_Fee_descriptor,
        new java.lang.String[] { "RecvFee", "AckFee", "TimeoutFee", });
    internal_static_neutron_feerefunder_PacketID_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_neutron_feerefunder_PacketID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_neutron_feerefunder_PacketID_descriptor,
        new java.lang.String[] { "ChannelId", "PortId", "Sequence", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

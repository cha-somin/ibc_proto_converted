// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: neutron/interchainqueries/tx.proto

package com.neutron.interchainqueries;

/**
 * Protobuf type {@code neutron.interchainqueries.MsgRegisterInterchainQuery}
 */
public final class MsgRegisterInterchainQuery extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:neutron.interchainqueries.MsgRegisterInterchainQuery)
    MsgRegisterInterchainQueryOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MsgRegisterInterchainQuery.newBuilder() to construct.
  private MsgRegisterInterchainQuery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MsgRegisterInterchainQuery() {
    queryType_ = "";
    keys_ = java.util.Collections.emptyList();
    transactionsFilter_ = "";
    connectionId_ = "";
    sender_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MsgRegisterInterchainQuery();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.neutron.interchainqueries.TxProto.internal_static_neutron_interchainqueries_MsgRegisterInterchainQuery_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.neutron.interchainqueries.TxProto.internal_static_neutron_interchainqueries_MsgRegisterInterchainQuery_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.neutron.interchainqueries.MsgRegisterInterchainQuery.class, com.neutron.interchainqueries.MsgRegisterInterchainQuery.Builder.class);
  }

  public static final int QUERY_TYPE_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object queryType_ = "";
  /**
   * <pre>
   * defines a query type: `kv` or `tx` now
   * </pre>
   *
   * <code>string query_type = 1 [json_name = "queryType"];</code>
   * @return The queryType.
   */
  @java.lang.Override
  public java.lang.String getQueryType() {
    java.lang.Object ref = queryType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      queryType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * defines a query type: `kv` or `tx` now
   * </pre>
   *
   * <code>string query_type = 1 [json_name = "queryType"];</code>
   * @return The bytes for queryType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getQueryTypeBytes() {
    java.lang.Object ref = queryType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      queryType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KEYS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.neutron.interchainqueries.KVKey> keys_;
  /**
   * <pre>
   * is used to define KV-storage keys for which we want to get values from
   * remote chain
   * </pre>
   *
   * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
   */
  @java.lang.Override
  public java.util.List<com.neutron.interchainqueries.KVKey> getKeysList() {
    return keys_;
  }
  /**
   * <pre>
   * is used to define KV-storage keys for which we want to get values from
   * remote chain
   * </pre>
   *
   * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.neutron.interchainqueries.KVKeyOrBuilder> 
      getKeysOrBuilderList() {
    return keys_;
  }
  /**
   * <pre>
   * is used to define KV-storage keys for which we want to get values from
   * remote chain
   * </pre>
   *
   * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
   */
  @java.lang.Override
  public int getKeysCount() {
    return keys_.size();
  }
  /**
   * <pre>
   * is used to define KV-storage keys for which we want to get values from
   * remote chain
   * </pre>
   *
   * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
   */
  @java.lang.Override
  public com.neutron.interchainqueries.KVKey getKeys(int index) {
    return keys_.get(index);
  }
  /**
   * <pre>
   * is used to define KV-storage keys for which we want to get values from
   * remote chain
   * </pre>
   *
   * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
   */
  @java.lang.Override
  public com.neutron.interchainqueries.KVKeyOrBuilder getKeysOrBuilder(
      int index) {
    return keys_.get(index);
  }

  public static final int TRANSACTIONS_FILTER_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object transactionsFilter_ = "";
  /**
   * <pre>
   * is used to define a filter for transaction search ICQ
   * </pre>
   *
   * <code>string transactions_filter = 3 [json_name = "transactionsFilter"];</code>
   * @return The transactionsFilter.
   */
  @java.lang.Override
  public java.lang.String getTransactionsFilter() {
    java.lang.Object ref = transactionsFilter_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      transactionsFilter_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * is used to define a filter for transaction search ICQ
   * </pre>
   *
   * <code>string transactions_filter = 3 [json_name = "transactionsFilter"];</code>
   * @return The bytes for transactionsFilter.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTransactionsFilterBytes() {
    java.lang.Object ref = transactionsFilter_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      transactionsFilter_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONNECTION_ID_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object connectionId_ = "";
  /**
   * <pre>
   * is IBC connection ID for getting ConsensusState to verify proofs
   * </pre>
   *
   * <code>string connection_id = 4 [json_name = "connectionId"];</code>
   * @return The connectionId.
   */
  @java.lang.Override
  public java.lang.String getConnectionId() {
    java.lang.Object ref = connectionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      connectionId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * is IBC connection ID for getting ConsensusState to verify proofs
   * </pre>
   *
   * <code>string connection_id = 4 [json_name = "connectionId"];</code>
   * @return The bytes for connectionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getConnectionIdBytes() {
    java.lang.Object ref = connectionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      connectionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UPDATE_PERIOD_FIELD_NUMBER = 5;
  private long updatePeriod_ = 0L;
  /**
   * <pre>
   * is used to specify how often (in neutron blocks) the query must be updated
   * </pre>
   *
   * <code>uint64 update_period = 5 [json_name = "updatePeriod"];</code>
   * @return The updatePeriod.
   */
  @java.lang.Override
  public long getUpdatePeriod() {
    return updatePeriod_;
  }

  public static final int SENDER_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object sender_ = "";
  /**
   * <pre>
   * is the signer of the message
   * </pre>
   *
   * <code>string sender = 6 [json_name = "sender"];</code>
   * @return The sender.
   */
  @java.lang.Override
  public java.lang.String getSender() {
    java.lang.Object ref = sender_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sender_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * is the signer of the message
   * </pre>
   *
   * <code>string sender = 6 [json_name = "sender"];</code>
   * @return The bytes for sender.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSenderBytes() {
    java.lang.Object ref = sender_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sender_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(queryType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, queryType_);
    }
    for (int i = 0; i < keys_.size(); i++) {
      output.writeMessage(2, keys_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transactionsFilter_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, transactionsFilter_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(connectionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, connectionId_);
    }
    if (updatePeriod_ != 0L) {
      output.writeUInt64(5, updatePeriod_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sender_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, sender_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(queryType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, queryType_);
    }
    for (int i = 0; i < keys_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, keys_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transactionsFilter_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, transactionsFilter_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(connectionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, connectionId_);
    }
    if (updatePeriod_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, updatePeriod_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sender_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, sender_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.neutron.interchainqueries.MsgRegisterInterchainQuery)) {
      return super.equals(obj);
    }
    com.neutron.interchainqueries.MsgRegisterInterchainQuery other = (com.neutron.interchainqueries.MsgRegisterInterchainQuery) obj;

    if (!getQueryType()
        .equals(other.getQueryType())) return false;
    if (!getKeysList()
        .equals(other.getKeysList())) return false;
    if (!getTransactionsFilter()
        .equals(other.getTransactionsFilter())) return false;
    if (!getConnectionId()
        .equals(other.getConnectionId())) return false;
    if (getUpdatePeriod()
        != other.getUpdatePeriod()) return false;
    if (!getSender()
        .equals(other.getSender())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + QUERY_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getQueryType().hashCode();
    if (getKeysCount() > 0) {
      hash = (37 * hash) + KEYS_FIELD_NUMBER;
      hash = (53 * hash) + getKeysList().hashCode();
    }
    hash = (37 * hash) + TRANSACTIONS_FILTER_FIELD_NUMBER;
    hash = (53 * hash) + getTransactionsFilter().hashCode();
    hash = (37 * hash) + CONNECTION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getConnectionId().hashCode();
    hash = (37 * hash) + UPDATE_PERIOD_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUpdatePeriod());
    hash = (37 * hash) + SENDER_FIELD_NUMBER;
    hash = (53 * hash) + getSender().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.neutron.interchainqueries.MsgRegisterInterchainQuery prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code neutron.interchainqueries.MsgRegisterInterchainQuery}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:neutron.interchainqueries.MsgRegisterInterchainQuery)
      com.neutron.interchainqueries.MsgRegisterInterchainQueryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.neutron.interchainqueries.TxProto.internal_static_neutron_interchainqueries_MsgRegisterInterchainQuery_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.neutron.interchainqueries.TxProto.internal_static_neutron_interchainqueries_MsgRegisterInterchainQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.neutron.interchainqueries.MsgRegisterInterchainQuery.class, com.neutron.interchainqueries.MsgRegisterInterchainQuery.Builder.class);
    }

    // Construct using com.neutron.interchainqueries.MsgRegisterInterchainQuery.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      queryType_ = "";
      if (keysBuilder_ == null) {
        keys_ = java.util.Collections.emptyList();
      } else {
        keys_ = null;
        keysBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      transactionsFilter_ = "";
      connectionId_ = "";
      updatePeriod_ = 0L;
      sender_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.neutron.interchainqueries.TxProto.internal_static_neutron_interchainqueries_MsgRegisterInterchainQuery_descriptor;
    }

    @java.lang.Override
    public com.neutron.interchainqueries.MsgRegisterInterchainQuery getDefaultInstanceForType() {
      return com.neutron.interchainqueries.MsgRegisterInterchainQuery.getDefaultInstance();
    }

    @java.lang.Override
    public com.neutron.interchainqueries.MsgRegisterInterchainQuery build() {
      com.neutron.interchainqueries.MsgRegisterInterchainQuery result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.neutron.interchainqueries.MsgRegisterInterchainQuery buildPartial() {
      com.neutron.interchainqueries.MsgRegisterInterchainQuery result = new com.neutron.interchainqueries.MsgRegisterInterchainQuery(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.neutron.interchainqueries.MsgRegisterInterchainQuery result) {
      if (keysBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          keys_ = java.util.Collections.unmodifiableList(keys_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.keys_ = keys_;
      } else {
        result.keys_ = keysBuilder_.build();
      }
    }

    private void buildPartial0(com.neutron.interchainqueries.MsgRegisterInterchainQuery result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.queryType_ = queryType_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.transactionsFilter_ = transactionsFilter_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.connectionId_ = connectionId_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.updatePeriod_ = updatePeriod_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.sender_ = sender_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.neutron.interchainqueries.MsgRegisterInterchainQuery) {
        return mergeFrom((com.neutron.interchainqueries.MsgRegisterInterchainQuery)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.neutron.interchainqueries.MsgRegisterInterchainQuery other) {
      if (other == com.neutron.interchainqueries.MsgRegisterInterchainQuery.getDefaultInstance()) return this;
      if (!other.getQueryType().isEmpty()) {
        queryType_ = other.queryType_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (keysBuilder_ == null) {
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          onChanged();
        }
      } else {
        if (!other.keys_.isEmpty()) {
          if (keysBuilder_.isEmpty()) {
            keysBuilder_.dispose();
            keysBuilder_ = null;
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000002);
            keysBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getKeysFieldBuilder() : null;
          } else {
            keysBuilder_.addAllMessages(other.keys_);
          }
        }
      }
      if (!other.getTransactionsFilter().isEmpty()) {
        transactionsFilter_ = other.transactionsFilter_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getConnectionId().isEmpty()) {
        connectionId_ = other.connectionId_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.getUpdatePeriod() != 0L) {
        setUpdatePeriod(other.getUpdatePeriod());
      }
      if (!other.getSender().isEmpty()) {
        sender_ = other.sender_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              queryType_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.neutron.interchainqueries.KVKey m =
                  input.readMessage(
                      com.neutron.interchainqueries.KVKey.parser(),
                      extensionRegistry);
              if (keysBuilder_ == null) {
                ensureKeysIsMutable();
                keys_.add(m);
              } else {
                keysBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              transactionsFilter_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              connectionId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              updatePeriod_ = input.readUInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              sender_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object queryType_ = "";
    /**
     * <pre>
     * defines a query type: `kv` or `tx` now
     * </pre>
     *
     * <code>string query_type = 1 [json_name = "queryType"];</code>
     * @return The queryType.
     */
    public java.lang.String getQueryType() {
      java.lang.Object ref = queryType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        queryType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * defines a query type: `kv` or `tx` now
     * </pre>
     *
     * <code>string query_type = 1 [json_name = "queryType"];</code>
     * @return The bytes for queryType.
     */
    public com.google.protobuf.ByteString
        getQueryTypeBytes() {
      java.lang.Object ref = queryType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        queryType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * defines a query type: `kv` or `tx` now
     * </pre>
     *
     * <code>string query_type = 1 [json_name = "queryType"];</code>
     * @param value The queryType to set.
     * @return This builder for chaining.
     */
    public Builder setQueryType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      queryType_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * defines a query type: `kv` or `tx` now
     * </pre>
     *
     * <code>string query_type = 1 [json_name = "queryType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearQueryType() {
      queryType_ = getDefaultInstance().getQueryType();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * defines a query type: `kv` or `tx` now
     * </pre>
     *
     * <code>string query_type = 1 [json_name = "queryType"];</code>
     * @param value The bytes for queryType to set.
     * @return This builder for chaining.
     */
    public Builder setQueryTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      queryType_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<com.neutron.interchainqueries.KVKey> keys_ =
      java.util.Collections.emptyList();
    private void ensureKeysIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        keys_ = new java.util.ArrayList<com.neutron.interchainqueries.KVKey>(keys_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.neutron.interchainqueries.KVKey, com.neutron.interchainqueries.KVKey.Builder, com.neutron.interchainqueries.KVKeyOrBuilder> keysBuilder_;

    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public java.util.List<com.neutron.interchainqueries.KVKey> getKeysList() {
      if (keysBuilder_ == null) {
        return java.util.Collections.unmodifiableList(keys_);
      } else {
        return keysBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public int getKeysCount() {
      if (keysBuilder_ == null) {
        return keys_.size();
      } else {
        return keysBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public com.neutron.interchainqueries.KVKey getKeys(int index) {
      if (keysBuilder_ == null) {
        return keys_.get(index);
      } else {
        return keysBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public Builder setKeys(
        int index, com.neutron.interchainqueries.KVKey value) {
      if (keysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureKeysIsMutable();
        keys_.set(index, value);
        onChanged();
      } else {
        keysBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public Builder setKeys(
        int index, com.neutron.interchainqueries.KVKey.Builder builderForValue) {
      if (keysBuilder_ == null) {
        ensureKeysIsMutable();
        keys_.set(index, builderForValue.build());
        onChanged();
      } else {
        keysBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public Builder addKeys(com.neutron.interchainqueries.KVKey value) {
      if (keysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
      } else {
        keysBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public Builder addKeys(
        int index, com.neutron.interchainqueries.KVKey value) {
      if (keysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureKeysIsMutable();
        keys_.add(index, value);
        onChanged();
      } else {
        keysBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public Builder addKeys(
        com.neutron.interchainqueries.KVKey.Builder builderForValue) {
      if (keysBuilder_ == null) {
        ensureKeysIsMutable();
        keys_.add(builderForValue.build());
        onChanged();
      } else {
        keysBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public Builder addKeys(
        int index, com.neutron.interchainqueries.KVKey.Builder builderForValue) {
      if (keysBuilder_ == null) {
        ensureKeysIsMutable();
        keys_.add(index, builderForValue.build());
        onChanged();
      } else {
        keysBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public Builder addAllKeys(
        java.lang.Iterable<? extends com.neutron.interchainqueries.KVKey> values) {
      if (keysBuilder_ == null) {
        ensureKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keys_);
        onChanged();
      } else {
        keysBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public Builder clearKeys() {
      if (keysBuilder_ == null) {
        keys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        keysBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public Builder removeKeys(int index) {
      if (keysBuilder_ == null) {
        ensureKeysIsMutable();
        keys_.remove(index);
        onChanged();
      } else {
        keysBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public com.neutron.interchainqueries.KVKey.Builder getKeysBuilder(
        int index) {
      return getKeysFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public com.neutron.interchainqueries.KVKeyOrBuilder getKeysOrBuilder(
        int index) {
      if (keysBuilder_ == null) {
        return keys_.get(index);  } else {
        return keysBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public java.util.List<? extends com.neutron.interchainqueries.KVKeyOrBuilder> 
         getKeysOrBuilderList() {
      if (keysBuilder_ != null) {
        return keysBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(keys_);
      }
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public com.neutron.interchainqueries.KVKey.Builder addKeysBuilder() {
      return getKeysFieldBuilder().addBuilder(
          com.neutron.interchainqueries.KVKey.getDefaultInstance());
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public com.neutron.interchainqueries.KVKey.Builder addKeysBuilder(
        int index) {
      return getKeysFieldBuilder().addBuilder(
          index, com.neutron.interchainqueries.KVKey.getDefaultInstance());
    }
    /**
     * <pre>
     * is used to define KV-storage keys for which we want to get values from
     * remote chain
     * </pre>
     *
     * <code>repeated .neutron.interchainqueries.KVKey keys = 2 [json_name = "keys"];</code>
     */
    public java.util.List<com.neutron.interchainqueries.KVKey.Builder> 
         getKeysBuilderList() {
      return getKeysFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.neutron.interchainqueries.KVKey, com.neutron.interchainqueries.KVKey.Builder, com.neutron.interchainqueries.KVKeyOrBuilder> 
        getKeysFieldBuilder() {
      if (keysBuilder_ == null) {
        keysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.neutron.interchainqueries.KVKey, com.neutron.interchainqueries.KVKey.Builder, com.neutron.interchainqueries.KVKeyOrBuilder>(
                keys_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        keys_ = null;
      }
      return keysBuilder_;
    }

    private java.lang.Object transactionsFilter_ = "";
    /**
     * <pre>
     * is used to define a filter for transaction search ICQ
     * </pre>
     *
     * <code>string transactions_filter = 3 [json_name = "transactionsFilter"];</code>
     * @return The transactionsFilter.
     */
    public java.lang.String getTransactionsFilter() {
      java.lang.Object ref = transactionsFilter_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        transactionsFilter_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * is used to define a filter for transaction search ICQ
     * </pre>
     *
     * <code>string transactions_filter = 3 [json_name = "transactionsFilter"];</code>
     * @return The bytes for transactionsFilter.
     */
    public com.google.protobuf.ByteString
        getTransactionsFilterBytes() {
      java.lang.Object ref = transactionsFilter_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        transactionsFilter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * is used to define a filter for transaction search ICQ
     * </pre>
     *
     * <code>string transactions_filter = 3 [json_name = "transactionsFilter"];</code>
     * @param value The transactionsFilter to set.
     * @return This builder for chaining.
     */
    public Builder setTransactionsFilter(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      transactionsFilter_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * is used to define a filter for transaction search ICQ
     * </pre>
     *
     * <code>string transactions_filter = 3 [json_name = "transactionsFilter"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTransactionsFilter() {
      transactionsFilter_ = getDefaultInstance().getTransactionsFilter();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * is used to define a filter for transaction search ICQ
     * </pre>
     *
     * <code>string transactions_filter = 3 [json_name = "transactionsFilter"];</code>
     * @param value The bytes for transactionsFilter to set.
     * @return This builder for chaining.
     */
    public Builder setTransactionsFilterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      transactionsFilter_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object connectionId_ = "";
    /**
     * <pre>
     * is IBC connection ID for getting ConsensusState to verify proofs
     * </pre>
     *
     * <code>string connection_id = 4 [json_name = "connectionId"];</code>
     * @return The connectionId.
     */
    public java.lang.String getConnectionId() {
      java.lang.Object ref = connectionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        connectionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * is IBC connection ID for getting ConsensusState to verify proofs
     * </pre>
     *
     * <code>string connection_id = 4 [json_name = "connectionId"];</code>
     * @return The bytes for connectionId.
     */
    public com.google.protobuf.ByteString
        getConnectionIdBytes() {
      java.lang.Object ref = connectionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        connectionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * is IBC connection ID for getting ConsensusState to verify proofs
     * </pre>
     *
     * <code>string connection_id = 4 [json_name = "connectionId"];</code>
     * @param value The connectionId to set.
     * @return This builder for chaining.
     */
    public Builder setConnectionId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      connectionId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * is IBC connection ID for getting ConsensusState to verify proofs
     * </pre>
     *
     * <code>string connection_id = 4 [json_name = "connectionId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearConnectionId() {
      connectionId_ = getDefaultInstance().getConnectionId();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * is IBC connection ID for getting ConsensusState to verify proofs
     * </pre>
     *
     * <code>string connection_id = 4 [json_name = "connectionId"];</code>
     * @param value The bytes for connectionId to set.
     * @return This builder for chaining.
     */
    public Builder setConnectionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      connectionId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private long updatePeriod_ ;
    /**
     * <pre>
     * is used to specify how often (in neutron blocks) the query must be updated
     * </pre>
     *
     * <code>uint64 update_period = 5 [json_name = "updatePeriod"];</code>
     * @return The updatePeriod.
     */
    @java.lang.Override
    public long getUpdatePeriod() {
      return updatePeriod_;
    }
    /**
     * <pre>
     * is used to specify how often (in neutron blocks) the query must be updated
     * </pre>
     *
     * <code>uint64 update_period = 5 [json_name = "updatePeriod"];</code>
     * @param value The updatePeriod to set.
     * @return This builder for chaining.
     */
    public Builder setUpdatePeriod(long value) {

      updatePeriod_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * is used to specify how often (in neutron blocks) the query must be updated
     * </pre>
     *
     * <code>uint64 update_period = 5 [json_name = "updatePeriod"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUpdatePeriod() {
      bitField0_ = (bitField0_ & ~0x00000010);
      updatePeriod_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object sender_ = "";
    /**
     * <pre>
     * is the signer of the message
     * </pre>
     *
     * <code>string sender = 6 [json_name = "sender"];</code>
     * @return The sender.
     */
    public java.lang.String getSender() {
      java.lang.Object ref = sender_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sender_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * is the signer of the message
     * </pre>
     *
     * <code>string sender = 6 [json_name = "sender"];</code>
     * @return The bytes for sender.
     */
    public com.google.protobuf.ByteString
        getSenderBytes() {
      java.lang.Object ref = sender_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sender_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * is the signer of the message
     * </pre>
     *
     * <code>string sender = 6 [json_name = "sender"];</code>
     * @param value The sender to set.
     * @return This builder for chaining.
     */
    public Builder setSender(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      sender_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * is the signer of the message
     * </pre>
     *
     * <code>string sender = 6 [json_name = "sender"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSender() {
      sender_ = getDefaultInstance().getSender();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * is the signer of the message
     * </pre>
     *
     * <code>string sender = 6 [json_name = "sender"];</code>
     * @param value The bytes for sender to set.
     * @return This builder for chaining.
     */
    public Builder setSenderBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      sender_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:neutron.interchainqueries.MsgRegisterInterchainQuery)
  }

  // @@protoc_insertion_point(class_scope:neutron.interchainqueries.MsgRegisterInterchainQuery)
  private static final com.neutron.interchainqueries.MsgRegisterInterchainQuery DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.neutron.interchainqueries.MsgRegisterInterchainQuery();
  }

  public static com.neutron.interchainqueries.MsgRegisterInterchainQuery getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MsgRegisterInterchainQuery>
      PARSER = new com.google.protobuf.AbstractParser<MsgRegisterInterchainQuery>() {
    @java.lang.Override
    public MsgRegisterInterchainQuery parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MsgRegisterInterchainQuery> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MsgRegisterInterchainQuery> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.neutron.interchainqueries.MsgRegisterInterchainQuery getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


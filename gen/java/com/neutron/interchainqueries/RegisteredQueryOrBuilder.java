// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: neutron/interchainqueries/genesis.proto

package com.neutron.interchainqueries;

public interface RegisteredQueryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:neutron.interchainqueries.RegisteredQuery)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The unique id of the registered query.
   * </pre>
   *
   * <code>uint64 id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  long getId();

  /**
   * <pre>
   * The address that registered the query.
   * </pre>
   *
   * <code>string owner = 2 [json_name = "owner"];</code>
   * @return The owner.
   */
  java.lang.String getOwner();
  /**
   * <pre>
   * The address that registered the query.
   * </pre>
   *
   * <code>string owner = 2 [json_name = "owner"];</code>
   * @return The bytes for owner.
   */
  com.google.protobuf.ByteString
      getOwnerBytes();

  /**
   * <pre>
   * The query type identifier: `kv` or `tx` now
   * </pre>
   *
   * <code>string query_type = 3 [json_name = "queryType"];</code>
   * @return The queryType.
   */
  java.lang.String getQueryType();
  /**
   * <pre>
   * The query type identifier: `kv` or `tx` now
   * </pre>
   *
   * <code>string query_type = 3 [json_name = "queryType"];</code>
   * @return The bytes for queryType.
   */
  com.google.protobuf.ByteString
      getQueryTypeBytes();

  /**
   * <pre>
   * The KV-storage keys for which we want to get values from remote chain
   * </pre>
   *
   * <code>repeated .neutron.interchainqueries.KVKey keys = 4 [json_name = "keys"];</code>
   */
  java.util.List<com.neutron.interchainqueries.KVKey> 
      getKeysList();
  /**
   * <pre>
   * The KV-storage keys for which we want to get values from remote chain
   * </pre>
   *
   * <code>repeated .neutron.interchainqueries.KVKey keys = 4 [json_name = "keys"];</code>
   */
  com.neutron.interchainqueries.KVKey getKeys(int index);
  /**
   * <pre>
   * The KV-storage keys for which we want to get values from remote chain
   * </pre>
   *
   * <code>repeated .neutron.interchainqueries.KVKey keys = 4 [json_name = "keys"];</code>
   */
  int getKeysCount();
  /**
   * <pre>
   * The KV-storage keys for which we want to get values from remote chain
   * </pre>
   *
   * <code>repeated .neutron.interchainqueries.KVKey keys = 4 [json_name = "keys"];</code>
   */
  java.util.List<? extends com.neutron.interchainqueries.KVKeyOrBuilder> 
      getKeysOrBuilderList();
  /**
   * <pre>
   * The KV-storage keys for which we want to get values from remote chain
   * </pre>
   *
   * <code>repeated .neutron.interchainqueries.KVKey keys = 4 [json_name = "keys"];</code>
   */
  com.neutron.interchainqueries.KVKeyOrBuilder getKeysOrBuilder(
      int index);

  /**
   * <pre>
   * The filter for transaction search ICQ
   * </pre>
   *
   * <code>string transactions_filter = 5 [json_name = "transactionsFilter"];</code>
   * @return The transactionsFilter.
   */
  java.lang.String getTransactionsFilter();
  /**
   * <pre>
   * The filter for transaction search ICQ
   * </pre>
   *
   * <code>string transactions_filter = 5 [json_name = "transactionsFilter"];</code>
   * @return The bytes for transactionsFilter.
   */
  com.google.protobuf.ByteString
      getTransactionsFilterBytes();

  /**
   * <pre>
   * The IBC connection ID for getting ConsensusState to verify proofs
   * </pre>
   *
   * <code>string connection_id = 6 [json_name = "connectionId"];</code>
   * @return The connectionId.
   */
  java.lang.String getConnectionId();
  /**
   * <pre>
   * The IBC connection ID for getting ConsensusState to verify proofs
   * </pre>
   *
   * <code>string connection_id = 6 [json_name = "connectionId"];</code>
   * @return The bytes for connectionId.
   */
  com.google.protobuf.ByteString
      getConnectionIdBytes();

  /**
   * <pre>
   * Parameter that defines how often the query must be updated.
   * </pre>
   *
   * <code>uint64 update_period = 7 [json_name = "updatePeriod"];</code>
   * @return The updatePeriod.
   */
  long getUpdatePeriod();

  /**
   * <pre>
   * The local chain last block height when the query result was updated.
   * </pre>
   *
   * <code>uint64 last_submitted_result_local_height = 8 [json_name = "lastSubmittedResultLocalHeight"];</code>
   * @return The lastSubmittedResultLocalHeight.
   */
  long getLastSubmittedResultLocalHeight();

  /**
   * <pre>
   * The remote chain last block height when the query result was updated.
   * </pre>
   *
   * <code>.ibc.core.client.v1.Height last_submitted_result_remote_height = 9 [json_name = "lastSubmittedResultRemoteHeight"];</code>
   * @return Whether the lastSubmittedResultRemoteHeight field is set.
   */
  boolean hasLastSubmittedResultRemoteHeight();
  /**
   * <pre>
   * The remote chain last block height when the query result was updated.
   * </pre>
   *
   * <code>.ibc.core.client.v1.Height last_submitted_result_remote_height = 9 [json_name = "lastSubmittedResultRemoteHeight"];</code>
   * @return The lastSubmittedResultRemoteHeight.
   */
  com.ibc.core.client.v1.Height getLastSubmittedResultRemoteHeight();
  /**
   * <pre>
   * The remote chain last block height when the query result was updated.
   * </pre>
   *
   * <code>.ibc.core.client.v1.Height last_submitted_result_remote_height = 9 [json_name = "lastSubmittedResultRemoteHeight"];</code>
   */
  com.ibc.core.client.v1.HeightOrBuilder getLastSubmittedResultRemoteHeightOrBuilder();

  /**
   * <pre>
   * Amount of coins deposited for the query.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit = 10 [json_name = "deposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.Coin> 
      getDepositList();
  /**
   * <pre>
   * Amount of coins deposited for the query.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit = 10 [json_name = "deposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.Coin getDeposit(int index);
  /**
   * <pre>
   * Amount of coins deposited for the query.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit = 10 [json_name = "deposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  int getDepositCount();
  /**
   * <pre>
   * Amount of coins deposited for the query.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit = 10 [json_name = "deposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getDepositOrBuilderList();
  /**
   * <pre>
   * Amount of coins deposited for the query.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin deposit = 10 [json_name = "deposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getDepositOrBuilder(
      int index);

  /**
   * <pre>
   * Timeout before query becomes available for everybody to remove.
   * </pre>
   *
   * <code>uint64 submit_timeout = 11 [json_name = "submitTimeout"];</code>
   * @return The submitTimeout.
   */
  long getSubmitTimeout();

  /**
   * <pre>
   * The local chain height when the query was registered.
   * </pre>
   *
   * <code>uint64 registered_at_height = 12 [json_name = "registeredAtHeight"];</code>
   * @return The registeredAtHeight.
   */
  long getRegisteredAtHeight();
}

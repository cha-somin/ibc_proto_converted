// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: neutron/interchaintxs/v1/params.proto

package com.neutron.interchaintxs.v1;

public final class ParamsProto {
  private ParamsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:neutron.interchaintxs.v1.Params)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Defines maximum amount of messages to be passed in MsgSubmitTx
     * </pre>
     *
     * <code>uint64 msg_submit_tx_max_messages = 1 [json_name = "msgSubmitTxMaxMessages"];</code>
     * @return The msgSubmitTxMaxMessages.
     */
    long getMsgSubmitTxMaxMessages();

    /**
     * <pre>
     * Defines a minimum fee required to register interchain account
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
     */
    java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> 
        getRegisterFeeList();
    /**
     * <pre>
     * Defines a minimum fee required to register interchain account
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
     */
    com.cosmos.base.v1beta1.CoinProto.Coin getRegisterFee(int index);
    /**
     * <pre>
     * Defines a minimum fee required to register interchain account
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
     */
    int getRegisterFeeCount();
    /**
     * <pre>
     * Defines a minimum fee required to register interchain account
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
     */
    java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
        getRegisterFeeOrBuilderList();
    /**
     * <pre>
     * Defines a minimum fee required to register interchain account
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
     */
    com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getRegisterFeeOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Params defines the parameters for the module.
   * </pre>
   *
   * Protobuf type {@code neutron.interchaintxs.v1.Params}
   */
  public static final class Params extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:neutron.interchaintxs.v1.Params)
      ParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Params.newBuilder() to construct.
    private Params(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Params() {
      registerFee_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Params();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.neutron.interchaintxs.v1.ParamsProto.internal_static_neutron_interchaintxs_v1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.neutron.interchaintxs.v1.ParamsProto.internal_static_neutron_interchaintxs_v1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.neutron.interchaintxs.v1.ParamsProto.Params.class, com.neutron.interchaintxs.v1.ParamsProto.Params.Builder.class);
    }

    public static final int MSG_SUBMIT_TX_MAX_MESSAGES_FIELD_NUMBER = 1;
    private long msgSubmitTxMaxMessages_ = 0L;
    /**
     * <pre>
     * Defines maximum amount of messages to be passed in MsgSubmitTx
     * </pre>
     *
     * <code>uint64 msg_submit_tx_max_messages = 1 [json_name = "msgSubmitTxMaxMessages"];</code>
     * @return The msgSubmitTxMaxMessages.
     */
    @java.lang.Override
    public long getMsgSubmitTxMaxMessages() {
      return msgSubmitTxMaxMessages_;
    }

    public static final int REGISTER_FEE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> registerFee_;
    /**
     * <pre>
     * Defines a minimum fee required to register interchain account
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> getRegisterFeeList() {
      return registerFee_;
    }
    /**
     * <pre>
     * Defines a minimum fee required to register interchain account
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
        getRegisterFeeOrBuilderList() {
      return registerFee_;
    }
    /**
     * <pre>
     * Defines a minimum fee required to register interchain account
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public int getRegisterFeeCount() {
      return registerFee_.size();
    }
    /**
     * <pre>
     * Defines a minimum fee required to register interchain account
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public com.cosmos.base.v1beta1.CoinProto.Coin getRegisterFee(int index) {
      return registerFee_.get(index);
    }
    /**
     * <pre>
     * Defines a minimum fee required to register interchain account
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getRegisterFeeOrBuilder(
        int index) {
      return registerFee_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (msgSubmitTxMaxMessages_ != 0L) {
        output.writeUInt64(1, msgSubmitTxMaxMessages_);
      }
      for (int i = 0; i < registerFee_.size(); i++) {
        output.writeMessage(2, registerFee_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (msgSubmitTxMaxMessages_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, msgSubmitTxMaxMessages_);
      }
      for (int i = 0; i < registerFee_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, registerFee_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.neutron.interchaintxs.v1.ParamsProto.Params)) {
        return super.equals(obj);
      }
      com.neutron.interchaintxs.v1.ParamsProto.Params other = (com.neutron.interchaintxs.v1.ParamsProto.Params) obj;

      if (getMsgSubmitTxMaxMessages()
          != other.getMsgSubmitTxMaxMessages()) return false;
      if (!getRegisterFeeList()
          .equals(other.getRegisterFeeList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MSG_SUBMIT_TX_MAX_MESSAGES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMsgSubmitTxMaxMessages());
      if (getRegisterFeeCount() > 0) {
        hash = (37 * hash) + REGISTER_FEE_FIELD_NUMBER;
        hash = (53 * hash) + getRegisterFeeList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.neutron.interchaintxs.v1.ParamsProto.Params parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.neutron.interchaintxs.v1.ParamsProto.Params parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.neutron.interchaintxs.v1.ParamsProto.Params parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.neutron.interchaintxs.v1.ParamsProto.Params parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.neutron.interchaintxs.v1.ParamsProto.Params parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.neutron.interchaintxs.v1.ParamsProto.Params parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.neutron.interchaintxs.v1.ParamsProto.Params parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.neutron.interchaintxs.v1.ParamsProto.Params parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.neutron.interchaintxs.v1.ParamsProto.Params parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.neutron.interchaintxs.v1.ParamsProto.Params parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.neutron.interchaintxs.v1.ParamsProto.Params parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.neutron.interchaintxs.v1.ParamsProto.Params parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.neutron.interchaintxs.v1.ParamsProto.Params prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Params defines the parameters for the module.
     * </pre>
     *
     * Protobuf type {@code neutron.interchaintxs.v1.Params}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:neutron.interchaintxs.v1.Params)
        com.neutron.interchaintxs.v1.ParamsProto.ParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.neutron.interchaintxs.v1.ParamsProto.internal_static_neutron_interchaintxs_v1_Params_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.neutron.interchaintxs.v1.ParamsProto.internal_static_neutron_interchaintxs_v1_Params_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.neutron.interchaintxs.v1.ParamsProto.Params.class, com.neutron.interchaintxs.v1.ParamsProto.Params.Builder.class);
      }

      // Construct using com.neutron.interchaintxs.v1.ParamsProto.Params.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        msgSubmitTxMaxMessages_ = 0L;
        if (registerFeeBuilder_ == null) {
          registerFee_ = java.util.Collections.emptyList();
        } else {
          registerFee_ = null;
          registerFeeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.neutron.interchaintxs.v1.ParamsProto.internal_static_neutron_interchaintxs_v1_Params_descriptor;
      }

      @java.lang.Override
      public com.neutron.interchaintxs.v1.ParamsProto.Params getDefaultInstanceForType() {
        return com.neutron.interchaintxs.v1.ParamsProto.Params.getDefaultInstance();
      }

      @java.lang.Override
      public com.neutron.interchaintxs.v1.ParamsProto.Params build() {
        com.neutron.interchaintxs.v1.ParamsProto.Params result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.neutron.interchaintxs.v1.ParamsProto.Params buildPartial() {
        com.neutron.interchaintxs.v1.ParamsProto.Params result = new com.neutron.interchaintxs.v1.ParamsProto.Params(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.neutron.interchaintxs.v1.ParamsProto.Params result) {
        if (registerFeeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            registerFee_ = java.util.Collections.unmodifiableList(registerFee_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.registerFee_ = registerFee_;
        } else {
          result.registerFee_ = registerFeeBuilder_.build();
        }
      }

      private void buildPartial0(com.neutron.interchaintxs.v1.ParamsProto.Params result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.msgSubmitTxMaxMessages_ = msgSubmitTxMaxMessages_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.neutron.interchaintxs.v1.ParamsProto.Params) {
          return mergeFrom((com.neutron.interchaintxs.v1.ParamsProto.Params)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.neutron.interchaintxs.v1.ParamsProto.Params other) {
        if (other == com.neutron.interchaintxs.v1.ParamsProto.Params.getDefaultInstance()) return this;
        if (other.getMsgSubmitTxMaxMessages() != 0L) {
          setMsgSubmitTxMaxMessages(other.getMsgSubmitTxMaxMessages());
        }
        if (registerFeeBuilder_ == null) {
          if (!other.registerFee_.isEmpty()) {
            if (registerFee_.isEmpty()) {
              registerFee_ = other.registerFee_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRegisterFeeIsMutable();
              registerFee_.addAll(other.registerFee_);
            }
            onChanged();
          }
        } else {
          if (!other.registerFee_.isEmpty()) {
            if (registerFeeBuilder_.isEmpty()) {
              registerFeeBuilder_.dispose();
              registerFeeBuilder_ = null;
              registerFee_ = other.registerFee_;
              bitField0_ = (bitField0_ & ~0x00000002);
              registerFeeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRegisterFeeFieldBuilder() : null;
            } else {
              registerFeeBuilder_.addAllMessages(other.registerFee_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                msgSubmitTxMaxMessages_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                com.cosmos.base.v1beta1.CoinProto.Coin m =
                    input.readMessage(
                        com.cosmos.base.v1beta1.CoinProto.Coin.parser(),
                        extensionRegistry);
                if (registerFeeBuilder_ == null) {
                  ensureRegisterFeeIsMutable();
                  registerFee_.add(m);
                } else {
                  registerFeeBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long msgSubmitTxMaxMessages_ ;
      /**
       * <pre>
       * Defines maximum amount of messages to be passed in MsgSubmitTx
       * </pre>
       *
       * <code>uint64 msg_submit_tx_max_messages = 1 [json_name = "msgSubmitTxMaxMessages"];</code>
       * @return The msgSubmitTxMaxMessages.
       */
      @java.lang.Override
      public long getMsgSubmitTxMaxMessages() {
        return msgSubmitTxMaxMessages_;
      }
      /**
       * <pre>
       * Defines maximum amount of messages to be passed in MsgSubmitTx
       * </pre>
       *
       * <code>uint64 msg_submit_tx_max_messages = 1 [json_name = "msgSubmitTxMaxMessages"];</code>
       * @param value The msgSubmitTxMaxMessages to set.
       * @return This builder for chaining.
       */
      public Builder setMsgSubmitTxMaxMessages(long value) {

        msgSubmitTxMaxMessages_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defines maximum amount of messages to be passed in MsgSubmitTx
       * </pre>
       *
       * <code>uint64 msg_submit_tx_max_messages = 1 [json_name = "msgSubmitTxMaxMessages"];</code>
       * @return This builder for chaining.
       */
      public Builder clearMsgSubmitTxMaxMessages() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgSubmitTxMaxMessages_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> registerFee_ =
        java.util.Collections.emptyList();
      private void ensureRegisterFeeIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          registerFee_ = new java.util.ArrayList<com.cosmos.base.v1beta1.CoinProto.Coin>(registerFee_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> registerFeeBuilder_;

      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> getRegisterFeeList() {
        if (registerFeeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(registerFee_);
        } else {
          return registerFeeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public int getRegisterFeeCount() {
        if (registerFeeBuilder_ == null) {
          return registerFee_.size();
        } else {
          return registerFeeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin getRegisterFee(int index) {
        if (registerFeeBuilder_ == null) {
          return registerFee_.get(index);
        } else {
          return registerFeeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder setRegisterFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (registerFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRegisterFeeIsMutable();
          registerFee_.set(index, value);
          onChanged();
        } else {
          registerFeeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder setRegisterFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (registerFeeBuilder_ == null) {
          ensureRegisterFeeIsMutable();
          registerFee_.set(index, builderForValue.build());
          onChanged();
        } else {
          registerFeeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder addRegisterFee(com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (registerFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRegisterFeeIsMutable();
          registerFee_.add(value);
          onChanged();
        } else {
          registerFeeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder addRegisterFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (registerFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRegisterFeeIsMutable();
          registerFee_.add(index, value);
          onChanged();
        } else {
          registerFeeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder addRegisterFee(
          com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (registerFeeBuilder_ == null) {
          ensureRegisterFeeIsMutable();
          registerFee_.add(builderForValue.build());
          onChanged();
        } else {
          registerFeeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder addRegisterFee(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (registerFeeBuilder_ == null) {
          ensureRegisterFeeIsMutable();
          registerFee_.add(index, builderForValue.build());
          onChanged();
        } else {
          registerFeeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder addAllRegisterFee(
          java.lang.Iterable<? extends com.cosmos.base.v1beta1.CoinProto.Coin> values) {
        if (registerFeeBuilder_ == null) {
          ensureRegisterFeeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, registerFee_);
          onChanged();
        } else {
          registerFeeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder clearRegisterFee() {
        if (registerFeeBuilder_ == null) {
          registerFee_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          registerFeeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder removeRegisterFee(int index) {
        if (registerFeeBuilder_ == null) {
          ensureRegisterFeeIsMutable();
          registerFee_.remove(index);
          onChanged();
        } else {
          registerFeeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder getRegisterFeeBuilder(
          int index) {
        return getRegisterFeeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getRegisterFeeOrBuilder(
          int index) {
        if (registerFeeBuilder_ == null) {
          return registerFee_.get(index);  } else {
          return registerFeeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
           getRegisterFeeOrBuilderList() {
        if (registerFeeBuilder_ != null) {
          return registerFeeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(registerFee_);
        }
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder addRegisterFeeBuilder() {
        return getRegisterFeeFieldBuilder().addBuilder(
            com.cosmos.base.v1beta1.CoinProto.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder addRegisterFeeBuilder(
          int index) {
        return getRegisterFeeFieldBuilder().addBuilder(
            index, com.cosmos.base.v1beta1.CoinProto.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * Defines a minimum fee required to register interchain account
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin register_fee = 2 [json_name = "registerFee", (.gogoproto.nullable) = false];</code>
       */
      public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin.Builder> 
           getRegisterFeeBuilderList() {
        return getRegisterFeeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
          getRegisterFeeFieldBuilder() {
        if (registerFeeBuilder_ == null) {
          registerFeeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder>(
                  registerFee_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          registerFee_ = null;
        }
        return registerFeeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:neutron.interchaintxs.v1.Params)
    }

    // @@protoc_insertion_point(class_scope:neutron.interchaintxs.v1.Params)
    private static final com.neutron.interchaintxs.v1.ParamsProto.Params DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.neutron.interchaintxs.v1.ParamsProto.Params();
    }

    public static com.neutron.interchaintxs.v1.ParamsProto.Params getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Params>
        PARSER = new com.google.protobuf.AbstractParser<Params>() {
      @java.lang.Override
      public Params parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Params> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Params> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.neutron.interchaintxs.v1.ParamsProto.Params getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_neutron_interchaintxs_v1_Params_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_neutron_interchaintxs_v1_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%neutron/interchaintxs/v1/params.proto\022" +
      "\030neutron.interchaintxs.v1\032\036cosmos/base/v" +
      "1beta1/coin.proto\032\024gogoproto/gogo.proto\"" +
      "\216\001\n\006Params\022:\n\032msg_submit_tx_max_messages" +
      "\030\001 \001(\004R\026msgSubmitTxMaxMessages\022B\n\014regist" +
      "er_fee\030\002 \003(\0132\031.cosmos.base.v1beta1.CoinB" +
      "\004\310\336\037\000R\013registerFee:\004\230\240\037\000B\344\001\n\034com.neutron" +
      ".interchaintxs.v1B\013ParamsProtoZ7github.c" +
      "om/neutron-org/neutron/v4/x/interchaintx" +
      "s/types\242\002\003NIX\252\002\030Neutron.Interchaintxs.V1" +
      "\312\002\030Neutron\\Interchaintxs\\V1\342\002$Neutron\\In" +
      "terchaintxs\\V1\\GPBMetadata\352\002\032Neutron::In" +
      "terchaintxs::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_neutron_interchaintxs_v1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_neutron_interchaintxs_v1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_neutron_interchaintxs_v1_Params_descriptor,
        new java.lang.String[] { "MsgSubmitTxMaxMessages", "RegisterFee", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

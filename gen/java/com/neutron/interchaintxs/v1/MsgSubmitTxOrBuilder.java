// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: neutron/interchaintxs/v1/tx.proto

package com.neutron.interchaintxs.v1;

public interface MsgSubmitTxOrBuilder extends
    // @@protoc_insertion_point(interface_extends:neutron.interchaintxs.v1.MsgSubmitTx)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string from_address = 1 [json_name = "fromAddress"];</code>
   * @return The fromAddress.
   */
  java.lang.String getFromAddress();
  /**
   * <code>string from_address = 1 [json_name = "fromAddress"];</code>
   * @return The bytes for fromAddress.
   */
  com.google.protobuf.ByteString
      getFromAddressBytes();

  /**
   * <pre>
   * interchain_account_id is supposed to be the unique identifier, e.g.,
   * lido/kava. This allows contracts to have more than one interchain accounts
   * on remote zone This identifier will be a part of the portID that we'll
   * claim our capability for.
   * </pre>
   *
   * <code>string interchain_account_id = 2 [json_name = "interchainAccountId"];</code>
   * @return The interchainAccountId.
   */
  java.lang.String getInterchainAccountId();
  /**
   * <pre>
   * interchain_account_id is supposed to be the unique identifier, e.g.,
   * lido/kava. This allows contracts to have more than one interchain accounts
   * on remote zone This identifier will be a part of the portID that we'll
   * claim our capability for.
   * </pre>
   *
   * <code>string interchain_account_id = 2 [json_name = "interchainAccountId"];</code>
   * @return The bytes for interchainAccountId.
   */
  com.google.protobuf.ByteString
      getInterchainAccountIdBytes();

  /**
   * <code>string connection_id = 3 [json_name = "connectionId"];</code>
   * @return The connectionId.
   */
  java.lang.String getConnectionId();
  /**
   * <code>string connection_id = 3 [json_name = "connectionId"];</code>
   * @return The bytes for connectionId.
   */
  com.google.protobuf.ByteString
      getConnectionIdBytes();

  /**
   * <code>repeated .google.protobuf.Any msgs = 4 [json_name = "msgs"];</code>
   */
  java.util.List<com.google.protobuf.Any> 
      getMsgsList();
  /**
   * <code>repeated .google.protobuf.Any msgs = 4 [json_name = "msgs"];</code>
   */
  com.google.protobuf.Any getMsgs(int index);
  /**
   * <code>repeated .google.protobuf.Any msgs = 4 [json_name = "msgs"];</code>
   */
  int getMsgsCount();
  /**
   * <code>repeated .google.protobuf.Any msgs = 4 [json_name = "msgs"];</code>
   */
  java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
      getMsgsOrBuilderList();
  /**
   * <code>repeated .google.protobuf.Any msgs = 4 [json_name = "msgs"];</code>
   */
  com.google.protobuf.AnyOrBuilder getMsgsOrBuilder(
      int index);

  /**
   * <code>string memo = 5 [json_name = "memo"];</code>
   * @return The memo.
   */
  java.lang.String getMemo();
  /**
   * <code>string memo = 5 [json_name = "memo"];</code>
   * @return The bytes for memo.
   */
  com.google.protobuf.ByteString
      getMemoBytes();

  /**
   * <pre>
   * timeout in seconds after which the packet times out
   * </pre>
   *
   * <code>uint64 timeout = 6 [json_name = "timeout"];</code>
   * @return The timeout.
   */
  long getTimeout();

  /**
   * <code>.neutron.feerefunder.Fee fee = 7 [json_name = "fee", (.gogoproto.nullable) = false];</code>
   * @return Whether the fee field is set.
   */
  boolean hasFee();
  /**
   * <code>.neutron.feerefunder.Fee fee = 7 [json_name = "fee", (.gogoproto.nullable) = false];</code>
   * @return The fee.
   */
  com.neutron.feerefunder.Fee getFee();
  /**
   * <code>.neutron.feerefunder.Fee fee = 7 [json_name = "fee", (.gogoproto.nullable) = false];</code>
   */
  com.neutron.feerefunder.FeeOrBuilder getFeeOrBuilder();
}

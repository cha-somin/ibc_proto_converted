// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: neutron/dex/tick_liquidity.proto

package com.neutron.dex;

public final class TickLiquidityProto {
  private TickLiquidityProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TickLiquidityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:neutron.dex.TickLiquidity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
     * @return Whether the poolReserves field is set.
     */
    boolean hasPoolReserves();
    /**
     * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
     * @return The poolReserves.
     */
    com.neutron.dex.PoolReservesProto.PoolReserves getPoolReserves();
    /**
     * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
     */
    com.neutron.dex.PoolReservesProto.PoolReservesOrBuilder getPoolReservesOrBuilder();

    /**
     * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
     * @return Whether the limitOrderTranche field is set.
     */
    boolean hasLimitOrderTranche();
    /**
     * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
     * @return The limitOrderTranche.
     */
    com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche getLimitOrderTranche();
    /**
     * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
     */
    com.neutron.dex.LimitOrderTrancheProto.LimitOrderTrancheOrBuilder getLimitOrderTrancheOrBuilder();

    com.neutron.dex.TickLiquidityProto.TickLiquidity.LiquidityCase getLiquidityCase();
  }
  /**
   * Protobuf type {@code neutron.dex.TickLiquidity}
   */
  public static final class TickLiquidity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:neutron.dex.TickLiquidity)
      TickLiquidityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TickLiquidity.newBuilder() to construct.
    private TickLiquidity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TickLiquidity() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TickLiquidity();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.neutron.dex.TickLiquidityProto.internal_static_neutron_dex_TickLiquidity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.neutron.dex.TickLiquidityProto.internal_static_neutron_dex_TickLiquidity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.neutron.dex.TickLiquidityProto.TickLiquidity.class, com.neutron.dex.TickLiquidityProto.TickLiquidity.Builder.class);
    }

    private int liquidityCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object liquidity_;
    public enum LiquidityCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      POOL_RESERVES(1),
      LIMIT_ORDER_TRANCHE(2),
      LIQUIDITY_NOT_SET(0);
      private final int value;
      private LiquidityCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LiquidityCase valueOf(int value) {
        return forNumber(value);
      }

      public static LiquidityCase forNumber(int value) {
        switch (value) {
          case 1: return POOL_RESERVES;
          case 2: return LIMIT_ORDER_TRANCHE;
          case 0: return LIQUIDITY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public LiquidityCase
    getLiquidityCase() {
      return LiquidityCase.forNumber(
          liquidityCase_);
    }

    public static final int POOL_RESERVES_FIELD_NUMBER = 1;
    /**
     * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
     * @return Whether the poolReserves field is set.
     */
    @java.lang.Override
    public boolean hasPoolReserves() {
      return liquidityCase_ == 1;
    }
    /**
     * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
     * @return The poolReserves.
     */
    @java.lang.Override
    public com.neutron.dex.PoolReservesProto.PoolReserves getPoolReserves() {
      if (liquidityCase_ == 1) {
         return (com.neutron.dex.PoolReservesProto.PoolReserves) liquidity_;
      }
      return com.neutron.dex.PoolReservesProto.PoolReserves.getDefaultInstance();
    }
    /**
     * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
     */
    @java.lang.Override
    public com.neutron.dex.PoolReservesProto.PoolReservesOrBuilder getPoolReservesOrBuilder() {
      if (liquidityCase_ == 1) {
         return (com.neutron.dex.PoolReservesProto.PoolReserves) liquidity_;
      }
      return com.neutron.dex.PoolReservesProto.PoolReserves.getDefaultInstance();
    }

    public static final int LIMIT_ORDER_TRANCHE_FIELD_NUMBER = 2;
    /**
     * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
     * @return Whether the limitOrderTranche field is set.
     */
    @java.lang.Override
    public boolean hasLimitOrderTranche() {
      return liquidityCase_ == 2;
    }
    /**
     * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
     * @return The limitOrderTranche.
     */
    @java.lang.Override
    public com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche getLimitOrderTranche() {
      if (liquidityCase_ == 2) {
         return (com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche) liquidity_;
      }
      return com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.getDefaultInstance();
    }
    /**
     * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
     */
    @java.lang.Override
    public com.neutron.dex.LimitOrderTrancheProto.LimitOrderTrancheOrBuilder getLimitOrderTrancheOrBuilder() {
      if (liquidityCase_ == 2) {
         return (com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche) liquidity_;
      }
      return com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (liquidityCase_ == 1) {
        output.writeMessage(1, (com.neutron.dex.PoolReservesProto.PoolReserves) liquidity_);
      }
      if (liquidityCase_ == 2) {
        output.writeMessage(2, (com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche) liquidity_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (liquidityCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.neutron.dex.PoolReservesProto.PoolReserves) liquidity_);
      }
      if (liquidityCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche) liquidity_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.neutron.dex.TickLiquidityProto.TickLiquidity)) {
        return super.equals(obj);
      }
      com.neutron.dex.TickLiquidityProto.TickLiquidity other = (com.neutron.dex.TickLiquidityProto.TickLiquidity) obj;

      if (!getLiquidityCase().equals(other.getLiquidityCase())) return false;
      switch (liquidityCase_) {
        case 1:
          if (!getPoolReserves()
              .equals(other.getPoolReserves())) return false;
          break;
        case 2:
          if (!getLimitOrderTranche()
              .equals(other.getLimitOrderTranche())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (liquidityCase_) {
        case 1:
          hash = (37 * hash) + POOL_RESERVES_FIELD_NUMBER;
          hash = (53 * hash) + getPoolReserves().hashCode();
          break;
        case 2:
          hash = (37 * hash) + LIMIT_ORDER_TRANCHE_FIELD_NUMBER;
          hash = (53 * hash) + getLimitOrderTranche().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.neutron.dex.TickLiquidityProto.TickLiquidity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.neutron.dex.TickLiquidityProto.TickLiquidity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.neutron.dex.TickLiquidityProto.TickLiquidity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.neutron.dex.TickLiquidityProto.TickLiquidity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.neutron.dex.TickLiquidityProto.TickLiquidity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.neutron.dex.TickLiquidityProto.TickLiquidity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.neutron.dex.TickLiquidityProto.TickLiquidity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.neutron.dex.TickLiquidityProto.TickLiquidity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.neutron.dex.TickLiquidityProto.TickLiquidity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.neutron.dex.TickLiquidityProto.TickLiquidity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.neutron.dex.TickLiquidityProto.TickLiquidity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.neutron.dex.TickLiquidityProto.TickLiquidity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.neutron.dex.TickLiquidityProto.TickLiquidity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code neutron.dex.TickLiquidity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:neutron.dex.TickLiquidity)
        com.neutron.dex.TickLiquidityProto.TickLiquidityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.neutron.dex.TickLiquidityProto.internal_static_neutron_dex_TickLiquidity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.neutron.dex.TickLiquidityProto.internal_static_neutron_dex_TickLiquidity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.neutron.dex.TickLiquidityProto.TickLiquidity.class, com.neutron.dex.TickLiquidityProto.TickLiquidity.Builder.class);
      }

      // Construct using com.neutron.dex.TickLiquidityProto.TickLiquidity.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (poolReservesBuilder_ != null) {
          poolReservesBuilder_.clear();
        }
        if (limitOrderTrancheBuilder_ != null) {
          limitOrderTrancheBuilder_.clear();
        }
        liquidityCase_ = 0;
        liquidity_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.neutron.dex.TickLiquidityProto.internal_static_neutron_dex_TickLiquidity_descriptor;
      }

      @java.lang.Override
      public com.neutron.dex.TickLiquidityProto.TickLiquidity getDefaultInstanceForType() {
        return com.neutron.dex.TickLiquidityProto.TickLiquidity.getDefaultInstance();
      }

      @java.lang.Override
      public com.neutron.dex.TickLiquidityProto.TickLiquidity build() {
        com.neutron.dex.TickLiquidityProto.TickLiquidity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.neutron.dex.TickLiquidityProto.TickLiquidity buildPartial() {
        com.neutron.dex.TickLiquidityProto.TickLiquidity result = new com.neutron.dex.TickLiquidityProto.TickLiquidity(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.neutron.dex.TickLiquidityProto.TickLiquidity result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(com.neutron.dex.TickLiquidityProto.TickLiquidity result) {
        result.liquidityCase_ = liquidityCase_;
        result.liquidity_ = this.liquidity_;
        if (liquidityCase_ == 1 &&
            poolReservesBuilder_ != null) {
          result.liquidity_ = poolReservesBuilder_.build();
        }
        if (liquidityCase_ == 2 &&
            limitOrderTrancheBuilder_ != null) {
          result.liquidity_ = limitOrderTrancheBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.neutron.dex.TickLiquidityProto.TickLiquidity) {
          return mergeFrom((com.neutron.dex.TickLiquidityProto.TickLiquidity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.neutron.dex.TickLiquidityProto.TickLiquidity other) {
        if (other == com.neutron.dex.TickLiquidityProto.TickLiquidity.getDefaultInstance()) return this;
        switch (other.getLiquidityCase()) {
          case POOL_RESERVES: {
            mergePoolReserves(other.getPoolReserves());
            break;
          }
          case LIMIT_ORDER_TRANCHE: {
            mergeLimitOrderTranche(other.getLimitOrderTranche());
            break;
          }
          case LIQUIDITY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPoolReservesFieldBuilder().getBuilder(),
                    extensionRegistry);
                liquidityCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getLimitOrderTrancheFieldBuilder().getBuilder(),
                    extensionRegistry);
                liquidityCase_ = 2;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int liquidityCase_ = 0;
      private java.lang.Object liquidity_;
      public LiquidityCase
          getLiquidityCase() {
        return LiquidityCase.forNumber(
            liquidityCase_);
      }

      public Builder clearLiquidity() {
        liquidityCase_ = 0;
        liquidity_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          com.neutron.dex.PoolReservesProto.PoolReserves, com.neutron.dex.PoolReservesProto.PoolReserves.Builder, com.neutron.dex.PoolReservesProto.PoolReservesOrBuilder> poolReservesBuilder_;
      /**
       * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
       * @return Whether the poolReserves field is set.
       */
      @java.lang.Override
      public boolean hasPoolReserves() {
        return liquidityCase_ == 1;
      }
      /**
       * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
       * @return The poolReserves.
       */
      @java.lang.Override
      public com.neutron.dex.PoolReservesProto.PoolReserves getPoolReserves() {
        if (poolReservesBuilder_ == null) {
          if (liquidityCase_ == 1) {
            return (com.neutron.dex.PoolReservesProto.PoolReserves) liquidity_;
          }
          return com.neutron.dex.PoolReservesProto.PoolReserves.getDefaultInstance();
        } else {
          if (liquidityCase_ == 1) {
            return poolReservesBuilder_.getMessage();
          }
          return com.neutron.dex.PoolReservesProto.PoolReserves.getDefaultInstance();
        }
      }
      /**
       * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
       */
      public Builder setPoolReserves(com.neutron.dex.PoolReservesProto.PoolReserves value) {
        if (poolReservesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          liquidity_ = value;
          onChanged();
        } else {
          poolReservesBuilder_.setMessage(value);
        }
        liquidityCase_ = 1;
        return this;
      }
      /**
       * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
       */
      public Builder setPoolReserves(
          com.neutron.dex.PoolReservesProto.PoolReserves.Builder builderForValue) {
        if (poolReservesBuilder_ == null) {
          liquidity_ = builderForValue.build();
          onChanged();
        } else {
          poolReservesBuilder_.setMessage(builderForValue.build());
        }
        liquidityCase_ = 1;
        return this;
      }
      /**
       * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
       */
      public Builder mergePoolReserves(com.neutron.dex.PoolReservesProto.PoolReserves value) {
        if (poolReservesBuilder_ == null) {
          if (liquidityCase_ == 1 &&
              liquidity_ != com.neutron.dex.PoolReservesProto.PoolReserves.getDefaultInstance()) {
            liquidity_ = com.neutron.dex.PoolReservesProto.PoolReserves.newBuilder((com.neutron.dex.PoolReservesProto.PoolReserves) liquidity_)
                .mergeFrom(value).buildPartial();
          } else {
            liquidity_ = value;
          }
          onChanged();
        } else {
          if (liquidityCase_ == 1) {
            poolReservesBuilder_.mergeFrom(value);
          } else {
            poolReservesBuilder_.setMessage(value);
          }
        }
        liquidityCase_ = 1;
        return this;
      }
      /**
       * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
       */
      public Builder clearPoolReserves() {
        if (poolReservesBuilder_ == null) {
          if (liquidityCase_ == 1) {
            liquidityCase_ = 0;
            liquidity_ = null;
            onChanged();
          }
        } else {
          if (liquidityCase_ == 1) {
            liquidityCase_ = 0;
            liquidity_ = null;
          }
          poolReservesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
       */
      public com.neutron.dex.PoolReservesProto.PoolReserves.Builder getPoolReservesBuilder() {
        return getPoolReservesFieldBuilder().getBuilder();
      }
      /**
       * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
       */
      @java.lang.Override
      public com.neutron.dex.PoolReservesProto.PoolReservesOrBuilder getPoolReservesOrBuilder() {
        if ((liquidityCase_ == 1) && (poolReservesBuilder_ != null)) {
          return poolReservesBuilder_.getMessageOrBuilder();
        } else {
          if (liquidityCase_ == 1) {
            return (com.neutron.dex.PoolReservesProto.PoolReserves) liquidity_;
          }
          return com.neutron.dex.PoolReservesProto.PoolReserves.getDefaultInstance();
        }
      }
      /**
       * <code>.neutron.dex.PoolReserves pool_reserves = 1 [json_name = "poolReserves"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.neutron.dex.PoolReservesProto.PoolReserves, com.neutron.dex.PoolReservesProto.PoolReserves.Builder, com.neutron.dex.PoolReservesProto.PoolReservesOrBuilder> 
          getPoolReservesFieldBuilder() {
        if (poolReservesBuilder_ == null) {
          if (!(liquidityCase_ == 1)) {
            liquidity_ = com.neutron.dex.PoolReservesProto.PoolReserves.getDefaultInstance();
          }
          poolReservesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.neutron.dex.PoolReservesProto.PoolReserves, com.neutron.dex.PoolReservesProto.PoolReserves.Builder, com.neutron.dex.PoolReservesProto.PoolReservesOrBuilder>(
                  (com.neutron.dex.PoolReservesProto.PoolReserves) liquidity_,
                  getParentForChildren(),
                  isClean());
          liquidity_ = null;
        }
        liquidityCase_ = 1;
        onChanged();
        return poolReservesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche, com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.Builder, com.neutron.dex.LimitOrderTrancheProto.LimitOrderTrancheOrBuilder> limitOrderTrancheBuilder_;
      /**
       * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
       * @return Whether the limitOrderTranche field is set.
       */
      @java.lang.Override
      public boolean hasLimitOrderTranche() {
        return liquidityCase_ == 2;
      }
      /**
       * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
       * @return The limitOrderTranche.
       */
      @java.lang.Override
      public com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche getLimitOrderTranche() {
        if (limitOrderTrancheBuilder_ == null) {
          if (liquidityCase_ == 2) {
            return (com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche) liquidity_;
          }
          return com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.getDefaultInstance();
        } else {
          if (liquidityCase_ == 2) {
            return limitOrderTrancheBuilder_.getMessage();
          }
          return com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.getDefaultInstance();
        }
      }
      /**
       * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
       */
      public Builder setLimitOrderTranche(com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche value) {
        if (limitOrderTrancheBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          liquidity_ = value;
          onChanged();
        } else {
          limitOrderTrancheBuilder_.setMessage(value);
        }
        liquidityCase_ = 2;
        return this;
      }
      /**
       * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
       */
      public Builder setLimitOrderTranche(
          com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.Builder builderForValue) {
        if (limitOrderTrancheBuilder_ == null) {
          liquidity_ = builderForValue.build();
          onChanged();
        } else {
          limitOrderTrancheBuilder_.setMessage(builderForValue.build());
        }
        liquidityCase_ = 2;
        return this;
      }
      /**
       * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
       */
      public Builder mergeLimitOrderTranche(com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche value) {
        if (limitOrderTrancheBuilder_ == null) {
          if (liquidityCase_ == 2 &&
              liquidity_ != com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.getDefaultInstance()) {
            liquidity_ = com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.newBuilder((com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche) liquidity_)
                .mergeFrom(value).buildPartial();
          } else {
            liquidity_ = value;
          }
          onChanged();
        } else {
          if (liquidityCase_ == 2) {
            limitOrderTrancheBuilder_.mergeFrom(value);
          } else {
            limitOrderTrancheBuilder_.setMessage(value);
          }
        }
        liquidityCase_ = 2;
        return this;
      }
      /**
       * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
       */
      public Builder clearLimitOrderTranche() {
        if (limitOrderTrancheBuilder_ == null) {
          if (liquidityCase_ == 2) {
            liquidityCase_ = 0;
            liquidity_ = null;
            onChanged();
          }
        } else {
          if (liquidityCase_ == 2) {
            liquidityCase_ = 0;
            liquidity_ = null;
          }
          limitOrderTrancheBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
       */
      public com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.Builder getLimitOrderTrancheBuilder() {
        return getLimitOrderTrancheFieldBuilder().getBuilder();
      }
      /**
       * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
       */
      @java.lang.Override
      public com.neutron.dex.LimitOrderTrancheProto.LimitOrderTrancheOrBuilder getLimitOrderTrancheOrBuilder() {
        if ((liquidityCase_ == 2) && (limitOrderTrancheBuilder_ != null)) {
          return limitOrderTrancheBuilder_.getMessageOrBuilder();
        } else {
          if (liquidityCase_ == 2) {
            return (com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche) liquidity_;
          }
          return com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.getDefaultInstance();
        }
      }
      /**
       * <code>.neutron.dex.LimitOrderTranche limit_order_tranche = 2 [json_name = "limitOrderTranche"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche, com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.Builder, com.neutron.dex.LimitOrderTrancheProto.LimitOrderTrancheOrBuilder> 
          getLimitOrderTrancheFieldBuilder() {
        if (limitOrderTrancheBuilder_ == null) {
          if (!(liquidityCase_ == 2)) {
            liquidity_ = com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.getDefaultInstance();
          }
          limitOrderTrancheBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche, com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche.Builder, com.neutron.dex.LimitOrderTrancheProto.LimitOrderTrancheOrBuilder>(
                  (com.neutron.dex.LimitOrderTrancheProto.LimitOrderTranche) liquidity_,
                  getParentForChildren(),
                  isClean());
          liquidity_ = null;
        }
        liquidityCase_ = 2;
        onChanged();
        return limitOrderTrancheBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:neutron.dex.TickLiquidity)
    }

    // @@protoc_insertion_point(class_scope:neutron.dex.TickLiquidity)
    private static final com.neutron.dex.TickLiquidityProto.TickLiquidity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.neutron.dex.TickLiquidityProto.TickLiquidity();
    }

    public static com.neutron.dex.TickLiquidityProto.TickLiquidity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TickLiquidity>
        PARSER = new com.google.protobuf.AbstractParser<TickLiquidity>() {
      @java.lang.Override
      public TickLiquidity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TickLiquidity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TickLiquidity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.neutron.dex.TickLiquidityProto.TickLiquidity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_neutron_dex_TickLiquidity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_neutron_dex_TickLiquidity_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n neutron/dex/tick_liquidity.proto\022\013neut" +
      "ron.dex\032\024gogoproto/gogo.proto\032%neutron/d" +
      "ex/limit_order_tranche.proto\032\037neutron/de" +
      "x/pool_reserves.proto\"\260\001\n\rTickLiquidity\022" +
      "@\n\rpool_reserves\030\001 \001(\0132\031.neutron.dex.Poo" +
      "lReservesH\000R\014poolReserves\022P\n\023limit_order" +
      "_tranche\030\002 \001(\0132\036.neutron.dex.LimitOrderT" +
      "rancheH\000R\021limitOrderTrancheB\013\n\tliquidity" +
      "B\237\001\n\017com.neutron.dexB\022TickLiquidityProto" +
      "Z-github.com/neutron-org/neutron/v4/x/de" +
      "x/types\242\002\003NDX\252\002\013Neutron.Dex\312\002\013Neutron\\De" +
      "x\342\002\027Neutron\\Dex\\GPBMetadata\352\002\014Neutron::D" +
      "exb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.neutron.dex.LimitOrderTrancheProto.getDescriptor(),
          com.neutron.dex.PoolReservesProto.getDescriptor(),
        });
    internal_static_neutron_dex_TickLiquidity_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_neutron_dex_TickLiquidity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_neutron_dex_TickLiquidity_descriptor,
        new java.lang.String[] { "PoolReserves", "LimitOrderTranche", "Liquidity", });
    com.gogoproto.GogoProto.getDescriptor();
    com.neutron.dex.LimitOrderTrancheProto.getDescriptor();
    com.neutron.dex.PoolReservesProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rizon/tokenswap/tokenswap.proto

package com.rizonworld.rizon.tokenswap;

public interface TokenswapOrBuilder extends
    // @@protoc_insertion_point(interface_extends:rizonworld.rizon.tokenswap.Tokenswap)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * tx_hash is the tx hash of burn tx from legacy chain
   * tx_hash is used for store key
   * </pre>
   *
   * <code>string tx_hash = 1 [json_name = "txHash"];</code>
   * @return The txHash.
   */
  java.lang.String getTxHash();
  /**
   * <pre>
   * tx_hash is the tx hash of burn tx from legacy chain
   * tx_hash is used for store key
   * </pre>
   *
   * <code>string tx_hash = 1 [json_name = "txHash"];</code>
   * @return The bytes for txHash.
   */
  com.google.protobuf.ByteString
      getTxHashBytes();

  /**
   * <pre>
   * receiver is the target of tokenswap
   * </pre>
   *
   * <code>string receiver = 2 [json_name = "receiver"];</code>
   * @return The receiver.
   */
  java.lang.String getReceiver();
  /**
   * <pre>
   * receiver is the target of tokenswap
   * </pre>
   *
   * <code>string receiver = 2 [json_name = "receiver"];</code>
   * @return The bytes for receiver.
   */
  com.google.protobuf.ByteString
      getReceiverBytes();

  /**
   * <pre>
   * signer is who confirms the swap process
   * </pre>
   *
   * <code>string signer = 3 [json_name = "signer"];</code>
   * @return The signer.
   */
  java.lang.String getSigner();
  /**
   * <pre>
   * signer is who confirms the swap process
   * </pre>
   *
   * <code>string signer = 3 [json_name = "signer"];</code>
   * @return The bytes for signer.
   */
  com.google.protobuf.ByteString
      getSignerBytes();

  /**
   * <pre>
   * amount is the amount of swap process
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.Coin> 
      getAmountList();
  /**
   * <pre>
   * amount is the amount of swap process
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.Coin getAmount(int index);
  /**
   * <pre>
   * amount is the amount of swap process
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  int getAmountCount();
  /**
   * <pre>
   * amount is the amount of swap process
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getAmountOrBuilderList();
  /**
   * <pre>
   * amount is the amount of swap process
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getAmountOrBuilder(
      int index);
}

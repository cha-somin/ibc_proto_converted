// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rizon/tokenswap/params.proto

package com.rizonworld.rizon.tokenswap;

public final class ParamsProto {
  private ParamsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rizonworld_rizon_tokenswap_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rizonworld_rizon_tokenswap_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034rizon/tokenswap/params.proto\022\032rizonwor" +
      "ld.rizon.tokenswap\032\024gogoproto/gogo.proto" +
      "\"\225\001\n\006Params\0222\n\tswappable\030\001 \001(\010B\024\362\336\037\020yaml" +
      ":\"swappable\"R\tswappable\022)\n\006signer\030\002 \001(\tB" +
      "\021\362\336\037\ryaml:\"signer\"R\006signer\022&\n\005limit\030\003 \001(" +
      "\003B\020\362\336\037\014yaml:\"limit\"R\005limit:\004\230\240\037\000B\347\001\n\036com" +
      ".rizonworld.rizon.tokenswapB\013ParamsProto" +
      "P\001Z.github.com/rizon-world/rizon/x/token" +
      "swap/types\242\002\003RRT\252\002\032Rizonworld.Rizon.Toke" +
      "nswap\312\002\032Rizonworld\\Rizon\\Tokenswap\342\002&Riz" +
      "onworld\\Rizon\\Tokenswap\\GPBMetadata\352\002\034Ri" +
      "zonworld::Rizon::Tokenswapb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_rizonworld_rizon_tokenswap_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_rizonworld_rizon_tokenswap_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rizonworld_rizon_tokenswap_Params_descriptor,
        new java.lang.String[] { "Swappable", "Signer", "Limit", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.moretags);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: irismod/coinswap/coinswap.proto

package com.irismod.coinswap;

/**
 * Protobuf type {@code irismod.coinswap.Pool}
 */
public final class Pool extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:irismod.coinswap.Pool)
    PoolOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Pool.newBuilder() to construct.
  private Pool(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Pool() {
    id_ = "";
    standardDenom_ = "";
    counterpartyDenom_ = "";
    escrowAddress_ = "";
    lptDenom_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Pool();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.irismod.coinswap.CoinswapProto.internal_static_irismod_coinswap_Pool_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.irismod.coinswap.CoinswapProto.internal_static_irismod_coinswap_Pool_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.irismod.coinswap.Pool.class, com.irismod.coinswap.Pool.Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STANDARD_DENOM_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object standardDenom_ = "";
  /**
   * <pre>
   * denom of base coin of the pool
   * </pre>
   *
   * <code>string standard_denom = 2 [json_name = "standardDenom"];</code>
   * @return The standardDenom.
   */
  @java.lang.Override
  public java.lang.String getStandardDenom() {
    java.lang.Object ref = standardDenom_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      standardDenom_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * denom of base coin of the pool
   * </pre>
   *
   * <code>string standard_denom = 2 [json_name = "standardDenom"];</code>
   * @return The bytes for standardDenom.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStandardDenomBytes() {
    java.lang.Object ref = standardDenom_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      standardDenom_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COUNTERPARTY_DENOM_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object counterpartyDenom_ = "";
  /**
   * <pre>
   * denom of counterparty coin of the pool
   * </pre>
   *
   * <code>string counterparty_denom = 3 [json_name = "counterpartyDenom"];</code>
   * @return The counterpartyDenom.
   */
  @java.lang.Override
  public java.lang.String getCounterpartyDenom() {
    java.lang.Object ref = counterpartyDenom_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      counterpartyDenom_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * denom of counterparty coin of the pool
   * </pre>
   *
   * <code>string counterparty_denom = 3 [json_name = "counterpartyDenom"];</code>
   * @return The bytes for counterpartyDenom.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCounterpartyDenomBytes() {
    java.lang.Object ref = counterpartyDenom_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      counterpartyDenom_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ESCROW_ADDRESS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object escrowAddress_ = "";
  /**
   * <pre>
   * escrow account for deposit tokens
   * </pre>
   *
   * <code>string escrow_address = 4 [json_name = "escrowAddress"];</code>
   * @return The escrowAddress.
   */
  @java.lang.Override
  public java.lang.String getEscrowAddress() {
    java.lang.Object ref = escrowAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      escrowAddress_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * escrow account for deposit tokens
   * </pre>
   *
   * <code>string escrow_address = 4 [json_name = "escrowAddress"];</code>
   * @return The bytes for escrowAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEscrowAddressBytes() {
    java.lang.Object ref = escrowAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      escrowAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LPT_DENOM_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object lptDenom_ = "";
  /**
   * <pre>
   * denom of the liquidity pool coin
   * </pre>
   *
   * <code>string lpt_denom = 5 [json_name = "lptDenom"];</code>
   * @return The lptDenom.
   */
  @java.lang.Override
  public java.lang.String getLptDenom() {
    java.lang.Object ref = lptDenom_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      lptDenom_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * denom of the liquidity pool coin
   * </pre>
   *
   * <code>string lpt_denom = 5 [json_name = "lptDenom"];</code>
   * @return The bytes for lptDenom.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLptDenomBytes() {
    java.lang.Object ref = lptDenom_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      lptDenom_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(standardDenom_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, standardDenom_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(counterpartyDenom_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, counterpartyDenom_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(escrowAddress_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, escrowAddress_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(lptDenom_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, lptDenom_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(standardDenom_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, standardDenom_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(counterpartyDenom_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, counterpartyDenom_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(escrowAddress_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, escrowAddress_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(lptDenom_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, lptDenom_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.irismod.coinswap.Pool)) {
      return super.equals(obj);
    }
    com.irismod.coinswap.Pool other = (com.irismod.coinswap.Pool) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getStandardDenom()
        .equals(other.getStandardDenom())) return false;
    if (!getCounterpartyDenom()
        .equals(other.getCounterpartyDenom())) return false;
    if (!getEscrowAddress()
        .equals(other.getEscrowAddress())) return false;
    if (!getLptDenom()
        .equals(other.getLptDenom())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + STANDARD_DENOM_FIELD_NUMBER;
    hash = (53 * hash) + getStandardDenom().hashCode();
    hash = (37 * hash) + COUNTERPARTY_DENOM_FIELD_NUMBER;
    hash = (53 * hash) + getCounterpartyDenom().hashCode();
    hash = (37 * hash) + ESCROW_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getEscrowAddress().hashCode();
    hash = (37 * hash) + LPT_DENOM_FIELD_NUMBER;
    hash = (53 * hash) + getLptDenom().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.irismod.coinswap.Pool parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.irismod.coinswap.Pool parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.irismod.coinswap.Pool parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.irismod.coinswap.Pool parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.irismod.coinswap.Pool parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.irismod.coinswap.Pool parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.irismod.coinswap.Pool parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.irismod.coinswap.Pool parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.irismod.coinswap.Pool parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.irismod.coinswap.Pool parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.irismod.coinswap.Pool parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.irismod.coinswap.Pool parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.irismod.coinswap.Pool prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code irismod.coinswap.Pool}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:irismod.coinswap.Pool)
      com.irismod.coinswap.PoolOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.irismod.coinswap.CoinswapProto.internal_static_irismod_coinswap_Pool_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.irismod.coinswap.CoinswapProto.internal_static_irismod_coinswap_Pool_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.irismod.coinswap.Pool.class, com.irismod.coinswap.Pool.Builder.class);
    }

    // Construct using com.irismod.coinswap.Pool.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      id_ = "";
      standardDenom_ = "";
      counterpartyDenom_ = "";
      escrowAddress_ = "";
      lptDenom_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.irismod.coinswap.CoinswapProto.internal_static_irismod_coinswap_Pool_descriptor;
    }

    @java.lang.Override
    public com.irismod.coinswap.Pool getDefaultInstanceForType() {
      return com.irismod.coinswap.Pool.getDefaultInstance();
    }

    @java.lang.Override
    public com.irismod.coinswap.Pool build() {
      com.irismod.coinswap.Pool result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.irismod.coinswap.Pool buildPartial() {
      com.irismod.coinswap.Pool result = new com.irismod.coinswap.Pool(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.irismod.coinswap.Pool result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.id_ = id_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.standardDenom_ = standardDenom_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.counterpartyDenom_ = counterpartyDenom_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.escrowAddress_ = escrowAddress_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.lptDenom_ = lptDenom_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.irismod.coinswap.Pool) {
        return mergeFrom((com.irismod.coinswap.Pool)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.irismod.coinswap.Pool other) {
      if (other == com.irismod.coinswap.Pool.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getStandardDenom().isEmpty()) {
        standardDenom_ = other.standardDenom_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getCounterpartyDenom().isEmpty()) {
        counterpartyDenom_ = other.counterpartyDenom_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getEscrowAddress().isEmpty()) {
        escrowAddress_ = other.escrowAddress_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getLptDenom().isEmpty()) {
        lptDenom_ = other.lptDenom_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              standardDenom_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              counterpartyDenom_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              escrowAddress_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              lptDenom_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string id = 1 [json_name = "id"];</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object standardDenom_ = "";
    /**
     * <pre>
     * denom of base coin of the pool
     * </pre>
     *
     * <code>string standard_denom = 2 [json_name = "standardDenom"];</code>
     * @return The standardDenom.
     */
    public java.lang.String getStandardDenom() {
      java.lang.Object ref = standardDenom_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        standardDenom_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * denom of base coin of the pool
     * </pre>
     *
     * <code>string standard_denom = 2 [json_name = "standardDenom"];</code>
     * @return The bytes for standardDenom.
     */
    public com.google.protobuf.ByteString
        getStandardDenomBytes() {
      java.lang.Object ref = standardDenom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        standardDenom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * denom of base coin of the pool
     * </pre>
     *
     * <code>string standard_denom = 2 [json_name = "standardDenom"];</code>
     * @param value The standardDenom to set.
     * @return This builder for chaining.
     */
    public Builder setStandardDenom(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      standardDenom_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * denom of base coin of the pool
     * </pre>
     *
     * <code>string standard_denom = 2 [json_name = "standardDenom"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStandardDenom() {
      standardDenom_ = getDefaultInstance().getStandardDenom();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * denom of base coin of the pool
     * </pre>
     *
     * <code>string standard_denom = 2 [json_name = "standardDenom"];</code>
     * @param value The bytes for standardDenom to set.
     * @return This builder for chaining.
     */
    public Builder setStandardDenomBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      standardDenom_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object counterpartyDenom_ = "";
    /**
     * <pre>
     * denom of counterparty coin of the pool
     * </pre>
     *
     * <code>string counterparty_denom = 3 [json_name = "counterpartyDenom"];</code>
     * @return The counterpartyDenom.
     */
    public java.lang.String getCounterpartyDenom() {
      java.lang.Object ref = counterpartyDenom_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        counterpartyDenom_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * denom of counterparty coin of the pool
     * </pre>
     *
     * <code>string counterparty_denom = 3 [json_name = "counterpartyDenom"];</code>
     * @return The bytes for counterpartyDenom.
     */
    public com.google.protobuf.ByteString
        getCounterpartyDenomBytes() {
      java.lang.Object ref = counterpartyDenom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        counterpartyDenom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * denom of counterparty coin of the pool
     * </pre>
     *
     * <code>string counterparty_denom = 3 [json_name = "counterpartyDenom"];</code>
     * @param value The counterpartyDenom to set.
     * @return This builder for chaining.
     */
    public Builder setCounterpartyDenom(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      counterpartyDenom_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * denom of counterparty coin of the pool
     * </pre>
     *
     * <code>string counterparty_denom = 3 [json_name = "counterpartyDenom"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCounterpartyDenom() {
      counterpartyDenom_ = getDefaultInstance().getCounterpartyDenom();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * denom of counterparty coin of the pool
     * </pre>
     *
     * <code>string counterparty_denom = 3 [json_name = "counterpartyDenom"];</code>
     * @param value The bytes for counterpartyDenom to set.
     * @return This builder for chaining.
     */
    public Builder setCounterpartyDenomBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      counterpartyDenom_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object escrowAddress_ = "";
    /**
     * <pre>
     * escrow account for deposit tokens
     * </pre>
     *
     * <code>string escrow_address = 4 [json_name = "escrowAddress"];</code>
     * @return The escrowAddress.
     */
    public java.lang.String getEscrowAddress() {
      java.lang.Object ref = escrowAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        escrowAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * escrow account for deposit tokens
     * </pre>
     *
     * <code>string escrow_address = 4 [json_name = "escrowAddress"];</code>
     * @return The bytes for escrowAddress.
     */
    public com.google.protobuf.ByteString
        getEscrowAddressBytes() {
      java.lang.Object ref = escrowAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        escrowAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * escrow account for deposit tokens
     * </pre>
     *
     * <code>string escrow_address = 4 [json_name = "escrowAddress"];</code>
     * @param value The escrowAddress to set.
     * @return This builder for chaining.
     */
    public Builder setEscrowAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      escrowAddress_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * escrow account for deposit tokens
     * </pre>
     *
     * <code>string escrow_address = 4 [json_name = "escrowAddress"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEscrowAddress() {
      escrowAddress_ = getDefaultInstance().getEscrowAddress();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * escrow account for deposit tokens
     * </pre>
     *
     * <code>string escrow_address = 4 [json_name = "escrowAddress"];</code>
     * @param value The bytes for escrowAddress to set.
     * @return This builder for chaining.
     */
    public Builder setEscrowAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      escrowAddress_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object lptDenom_ = "";
    /**
     * <pre>
     * denom of the liquidity pool coin
     * </pre>
     *
     * <code>string lpt_denom = 5 [json_name = "lptDenom"];</code>
     * @return The lptDenom.
     */
    public java.lang.String getLptDenom() {
      java.lang.Object ref = lptDenom_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lptDenom_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * denom of the liquidity pool coin
     * </pre>
     *
     * <code>string lpt_denom = 5 [json_name = "lptDenom"];</code>
     * @return The bytes for lptDenom.
     */
    public com.google.protobuf.ByteString
        getLptDenomBytes() {
      java.lang.Object ref = lptDenom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lptDenom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * denom of the liquidity pool coin
     * </pre>
     *
     * <code>string lpt_denom = 5 [json_name = "lptDenom"];</code>
     * @param value The lptDenom to set.
     * @return This builder for chaining.
     */
    public Builder setLptDenom(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      lptDenom_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * denom of the liquidity pool coin
     * </pre>
     *
     * <code>string lpt_denom = 5 [json_name = "lptDenom"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLptDenom() {
      lptDenom_ = getDefaultInstance().getLptDenom();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * denom of the liquidity pool coin
     * </pre>
     *
     * <code>string lpt_denom = 5 [json_name = "lptDenom"];</code>
     * @param value The bytes for lptDenom to set.
     * @return This builder for chaining.
     */
    public Builder setLptDenomBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      lptDenom_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:irismod.coinswap.Pool)
  }

  // @@protoc_insertion_point(class_scope:irismod.coinswap.Pool)
  private static final com.irismod.coinswap.Pool DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.irismod.coinswap.Pool();
  }

  public static com.irismod.coinswap.Pool getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Pool>
      PARSER = new com.google.protobuf.AbstractParser<Pool>() {
    @java.lang.Override
    public Pool parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Pool> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Pool> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.irismod.coinswap.Pool getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


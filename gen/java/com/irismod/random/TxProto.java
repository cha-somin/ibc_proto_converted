// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: irismod/random/tx.proto

package com.irismod.random;

public final class TxProto {
  private TxProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_random_MsgRequestRandom_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_random_MsgRequestRandom_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_random_MsgRequestRandomResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_random_MsgRequestRandomResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027irismod/random/tx.proto\022\016irismod.rando" +
      "m\032\024gogoproto/gogo.proto\032\036cosmos/base/v1b" +
      "eta1/coin.proto\"\230\002\n\020MsgRequestRandom\022@\n\016" +
      "block_interval\030\001 \001(\004B\031\362\336\037\025yaml:\"block_in" +
      "terval\"R\rblockInterval\022\032\n\010consumer\030\002 \001(\t" +
      "R\010consumer\022\026\n\006oracle\030\003 \001(\010R\006oracle\022\215\001\n\017s" +
      "ervice_fee_cap\030\004 \003(\0132\031.cosmos.base.v1bet" +
      "a1.CoinBJ\310\336\037\000\362\336\037\026yaml:\"service_fee_cap\"\252" +
      "\337\037(github.com/cosmos/cosmos-sdk/types.Co" +
      "insR\rserviceFeeCap\"\032\n\030MsgRequestRandomRe" +
      "sponse2b\n\003Msg\022[\n\rRequestRandom\022 .irismod" +
      ".random.MsgRequestRandom\032(.irismod.rando" +
      "m.MsgRequestRandomResponseB\247\001\n\022com.irism" +
      "od.randomB\007TxProtoP\001Z/github.com/irisnet" +
      "/irismod/modules/random/types\242\002\003IRX\252\002\016Ir" +
      "ismod.Random\312\002\016Irismod\\Random\342\002\032Irismod\\" +
      "Random\\GPBMetadata\352\002\017Irismod::Randomb\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
        });
    internal_static_irismod_random_MsgRequestRandom_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_irismod_random_MsgRequestRandom_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_random_MsgRequestRandom_descriptor,
        new java.lang.String[] { "BlockInterval", "Consumer", "Oracle", "ServiceFeeCap", });
    internal_static_irismod_random_MsgRequestRandomResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_irismod_random_MsgRequestRandomResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_random_MsgRequestRandomResponse_descriptor,
        new java.lang.String[] { });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

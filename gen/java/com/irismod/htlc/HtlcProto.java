// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: irismod/htlc/htlc.proto

package com.irismod.htlc;

public final class HtlcProto {
  private HtlcProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_htlc_HTLC_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_htlc_HTLC_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_htlc_AssetSupply_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_htlc_AssetSupply_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_htlc_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_htlc_Params_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_htlc_AssetParam_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_htlc_AssetParam_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_htlc_SupplyLimit_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_htlc_SupplyLimit_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027irismod/htlc/htlc.proto\022\014irismod.htlc\032" +
      "\036cosmos/base/v1beta1/coin.proto\032\024gogopro" +
      "to/gogo.proto\032\036google/protobuf/duration." +
      "proto\"\317\005\n\004HTLC\022\016\n\002id\030\001 \001(\tR\002id\022\026\n\006sender" +
      "\030\002 \001(\tR\006sender\022\016\n\002to\030\003 \001(\tR\002to\022Y\n\027receiv" +
      "er_on_other_chain\030\004 \001(\tB\"\362\336\037\036yaml:\"recei" +
      "ver_on_other_chain\"R\024receiverOnOtherChai" +
      "n\022S\n\025sender_on_other_chain\030\005 \001(\tB \362\336\037\034ya" +
      "ml:\"sender_on_other_chain\"R\022senderOnOthe" +
      "rChain\022c\n\006amount\030\006 \003(\0132\031.cosmos.base.v1b" +
      "eta1.CoinB0\310\336\037\000\252\337\037(github.com/cosmos/cos" +
      "mos-sdk/types.CoinsR\006amount\0221\n\thash_lock" +
      "\030\007 \001(\tB\024\362\336\037\020yaml:\"hash_lock\"R\010hashLock\022\026" +
      "\n\006secret\030\010 \001(\tR\006secret\022\034\n\ttimestamp\030\t \001(" +
      "\004R\ttimestamp\022I\n\021expiration_height\030\n \001(\004B" +
      "\034\362\336\037\030yaml:\"expiration_height\"R\020expiratio" +
      "nHeight\022-\n\005state\030\013 \001(\0162\027.irismod.htlc.HT" +
      "LCStateR\005state\022:\n\014closed_block\030\014 \001(\004B\027\362\336" +
      "\037\023yaml:\"closed_block\"R\013closedBlock\022\032\n\010tr" +
      "ansfer\030\r \001(\010R\010transfer\0229\n\tdirection\030\016 \001(" +
      "\0162\033.irismod.htlc.SwapDirectionR\tdirectio" +
      "n:\004\350\240\037\001\"\250\004\n\013AssetSupply\022b\n\017incoming_supp" +
      "ly\030\001 \001(\0132\031.cosmos.base.v1beta1.CoinB\036\310\336\037" +
      "\000\362\336\037\026yaml:\"incoming_supply\"R\016incomingSup" +
      "ply\022n\n\017outgoing_supply\030\002 \001(\0132\031.cosmos.ba" +
      "se.v1beta1.CoinB*\310\336\037\000\362\336\037\"yaml:\"assetoutg" +
      "oing_supply_params\"R\016outgoingSupply\022_\n\016c" +
      "urrent_supply\030\003 \001(\0132\031.cosmos.base.v1beta" +
      "1.CoinB\035\310\336\037\000\362\336\037\025yaml:\"current_supply\"R\rc" +
      "urrentSupply\022\204\001\n\033time_limited_current_su" +
      "pply\030\004 \001(\0132\031.cosmos.base.v1beta1.CoinB*\310" +
      "\336\037\000\362\336\037\"yaml:\"time_limited_current_supply" +
      "\"R\030timeLimitedCurrentSupply\022]\n\014time_elap" +
      "sed\030\005 \001(\0132\031.google.protobuf.DurationB\037\310\336" +
      "\037\000\362\336\037\023yaml:\"time_elapsed\"\230\337\037\001R\013timeElaps" +
      "ed\"l\n\006Params\022X\n\014asset_params\030\001 \003(\0132\030.iri" +
      "smod.htlc.AssetParamB\033\310\336\037\000\362\336\037\023yaml:\"asse" +
      "t_params\"R\013assetParams:\010\230\240\037\000\350\240\037\001\"\340\004\n\nAss" +
      "etParam\022\024\n\005denom\030\001 \001(\tR\005denom\022Y\n\014supply_" +
      "limit\030\002 \001(\0132\031.irismod.htlc.SupplyLimitB\033" +
      "\310\336\037\000\362\336\037\023yaml:\"supply_limit\"R\013supplyLimit" +
      "\022\026\n\006active\030\003 \001(\010R\006active\022@\n\016deputy_addre" +
      "ss\030\004 \001(\tB\031\362\336\037\025yaml:\"deputy_address\"R\rdep" +
      "utyAddress\022K\n\tfixed_fee\030\005 \001(\tB.\310\336\037\000\332\336\037&g" +
      "ithub.com/cosmos/cosmos-sdk/types.IntR\010f" +
      "ixedFee\022V\n\017min_swap_amount\030\006 \001(\tB.\310\336\037\000\332\336" +
      "\037&github.com/cosmos/cosmos-sdk/types.Int" +
      "R\rminSwapAmount\022V\n\017max_swap_amount\030\007 \001(\t" +
      "B.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/t" +
      "ypes.IntR\rmaxSwapAmount\022?\n\016min_block_loc" +
      "k\030\010 \001(\004B\031\362\336\037\025yaml:\"min_block_lock\"R\014minB" +
      "lockLock\022?\n\016max_block_lock\030\t \001(\004B\031\362\336\037\025ya" +
      "ml:\"max_block_lock\"R\014maxBlockLock:\010\230\240\037\000\350" +
      "\240\037\001\"\317\002\n\013SupplyLimit\022D\n\005limit\030\001 \001(\tB.\310\336\037\000" +
      "\332\336\037&github.com/cosmos/cosmos-sdk/types.I" +
      "ntR\005limit\022:\n\014time_limited\030\002 \001(\010B\027\362\336\037\023yam" +
      "l:\"time_limited\"R\013timeLimited\022Z\n\013time_pe" +
      "riod\030\003 \001(\0132\031.google.protobuf.DurationB\036\310" +
      "\336\037\000\362\336\037\022yaml:\"time_period\"\230\337\037\001R\ntimePerio" +
      "d\022X\n\020time_based_limit\030\004 \001(\tB.\310\336\037\000\332\336\037&git" +
      "hub.com/cosmos/cosmos-sdk/types.IntR\016tim" +
      "eBasedLimit:\010\230\240\037\000\350\240\037\001*\200\001\n\tHTLCState\022\035\n\017H" +
      "TLC_STATE_OPEN\020\000\032\010\212\235 \004Open\022\'\n\024HTLC_STATE" +
      "_COMPLETED\020\001\032\r\212\235 \tCompleted\022%\n\023HTLC_STAT" +
      "E_REFUNDED\020\002\032\014\212\235 \010Refunded\032\004\210\243\036\000*a\n\rSwap" +
      "Direction\022\022\n\004NONE\020\000\032\010\212\235 \004None\022\032\n\010INCOMIN" +
      "G\020\001\032\014\212\235 \010Incoming\022\032\n\010OUTGOING\020\002\032\014\212\235 \010Out" +
      "going\032\004\210\243\036\000B\241\001\n\020com.irismod.htlcB\tHtlcPr" +
      "otoP\001Z-github.com/irisnet/irismod/module" +
      "s/htlc/types\242\002\003IHX\252\002\014Irismod.Htlc\312\002\014Iris" +
      "mod\\Htlc\342\002\030Irismod\\Htlc\\GPBMetadata\352\002\rIr" +
      "ismod::Htlc\310\341\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
        });
    internal_static_irismod_htlc_HTLC_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_irismod_htlc_HTLC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_htlc_HTLC_descriptor,
        new java.lang.String[] { "Id", "Sender", "To", "ReceiverOnOtherChain", "SenderOnOtherChain", "Amount", "HashLock", "Secret", "Timestamp", "ExpirationHeight", "State", "ClosedBlock", "Transfer", "Direction", });
    internal_static_irismod_htlc_AssetSupply_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_irismod_htlc_AssetSupply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_htlc_AssetSupply_descriptor,
        new java.lang.String[] { "IncomingSupply", "OutgoingSupply", "CurrentSupply", "TimeLimitedCurrentSupply", "TimeElapsed", });
    internal_static_irismod_htlc_Params_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_irismod_htlc_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_htlc_Params_descriptor,
        new java.lang.String[] { "AssetParams", });
    internal_static_irismod_htlc_AssetParam_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_irismod_htlc_AssetParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_htlc_AssetParam_descriptor,
        new java.lang.String[] { "Denom", "SupplyLimit", "Active", "DeputyAddress", "FixedFee", "MinSwapAmount", "MaxSwapAmount", "MinBlockLock", "MaxBlockLock", });
    internal_static_irismod_htlc_SupplyLimit_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_irismod_htlc_SupplyLimit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_htlc_SupplyLimit_descriptor,
        new java.lang.String[] { "Limit", "TimeLimited", "TimePeriod", "TimeBasedLimit", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.enumvalueCustomname);
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.goprotoEnumPrefix);
    registry.add(com.gogoproto.GogoProto.goprotoGettersAll);
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stdduration);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: irismod/service/service.proto

package com.irismod.service;

public final class ServiceProto {
  private ServiceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_service_ServiceDefinition_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_service_ServiceDefinition_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_service_ServiceBinding_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_service_ServiceBinding_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_service_RequestContext_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_service_RequestContext_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_service_Request_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_service_Request_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_service_CompactRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_service_CompactRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_service_Response_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_service_Response_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_service_Pricing_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_service_Pricing_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_service_PromotionByTime_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_service_PromotionByTime_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_service_PromotionByVolume_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_service_PromotionByVolume_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_service_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_service_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035irismod/service/service.proto\022\017irismod" +
      ".service\032\036cosmos/base/v1beta1/coin.proto" +
      "\032\024gogoproto/gogo.proto\032\036google/protobuf/" +
      "duration.proto\032\037google/protobuf/timestam" +
      "p.proto\"\335\001\n\021ServiceDefinition\022\022\n\004name\030\001 " +
      "\001(\tR\004name\022 \n\013description\030\002 \001(\tR\013descript" +
      "ion\022\022\n\004tags\030\003 \003(\tR\004tags\022\026\n\006author\030\004 \001(\tR" +
      "\006author\022L\n\022author_description\030\005 \001(\tB\035\362\336\037" +
      "\031yaml:\"author_description\"R\021authorDescri" +
      "ption\022\030\n\007schemas\030\006 \001(\tR\007schemas\"\265\003\n\016Serv" +
      "iceBinding\022:\n\014service_name\030\001 \001(\tB\027\362\336\037\023ya" +
      "ml:\"service_name\"R\013serviceName\022\032\n\010provid" +
      "er\030\002 \001(\tR\010provider\022e\n\007deposit\030\003 \003(\0132\031.co" +
      "smos.base.v1beta1.CoinB0\310\336\037\000\252\337\037(github.c" +
      "om/cosmos/cosmos-sdk/types.CoinsR\007deposi" +
      "t\022\030\n\007pricing\030\004 \001(\tR\007pricing\022\031\n\003qos\030\005 \001(\004" +
      "B\007\342\336\037\003QoSR\003qos\022\030\n\007options\030\006 \001(\tR\007options" +
      "\022\034\n\tavailable\030\007 \001(\010R\tavailable\022a\n\rdisabl" +
      "ed_time\030\010 \001(\0132\032.google.protobuf.Timestam" +
      "pB \310\336\037\000\362\336\037\024yaml:\"disabled_time\"\220\337\037\001R\014dis" +
      "abledTime\022\024\n\005owner\030\t \001(\tR\005owner\"\332\010\n\016Requ" +
      "estContext\022:\n\014service_name\030\001 \001(\tB\027\362\336\037\023ya" +
      "ml:\"service_name\"R\013serviceName\022\034\n\tprovid" +
      "ers\030\002 \003(\tR\tproviders\022\032\n\010consumer\030\003 \001(\tR\010" +
      "consumer\022\024\n\005input\030\004 \001(\tR\005input\022\215\001\n\017servi" +
      "ce_fee_cap\030\005 \003(\0132\031.cosmos.base.v1beta1.C" +
      "oinBJ\310\336\037\000\362\336\037\026yaml:\"service_fee_cap\"\252\337\037(g" +
      "ithub.com/cosmos/cosmos-sdk/types.CoinsR" +
      "\rserviceFeeCap\0227\n\013module_name\030\006 \001(\tB\026\362\336\037" +
      "\022yaml:\"module_name\"R\nmoduleName\022\030\n\007timeo" +
      "ut\030\007 \001(\003R\007timeout\022\032\n\010repeated\030\010 \001(\010R\010rep" +
      "eated\022L\n\022repeated_frequency\030\t \001(\004B\035\362\336\037\031y" +
      "aml:\"repeated_frequency\"R\021repeatedFreque" +
      "ncy\022@\n\016repeated_total\030\n \001(\003B\031\362\336\037\025yaml:\"r" +
      "epeated_total\"R\rrepeatedTotal\022=\n\rbatch_c" +
      "ounter\030\013 \001(\004B\030\362\336\037\024yaml:\"batch_counter\"R\014" +
      "batchCounter\022N\n\023batch_request_count\030\014 \001(" +
      "\rB\036\362\336\037\032yaml:\"batch_request_count\"R\021batch" +
      "RequestCount\022Q\n\024batch_response_count\030\r \001" +
      "(\rB\037\362\336\037\033yaml:\"batch_response_count\"R\022bat" +
      "chResponseCount\022]\n\030batch_response_thresh" +
      "old\030\016 \001(\rB#\362\336\037\037yaml:\"batch_response_thre" +
      "shold\"R\026batchResponseThreshold\022L\n\022respon" +
      "se_threshold\030\017 \001(\rB\035\362\336\037\031yaml:\"response_t" +
      "hreshold\"R\021responseThreshold\022b\n\013batch_st" +
      "ate\030\020 \001(\0162).irismod.service.RequestConte" +
      "xtBatchStateB\026\362\336\037\022yaml:\"batch_state\"R\nba" +
      "tchState\022:\n\005state\030\021 \001(\0162$.irismod.servic" +
      "e.RequestContextStateR\005state\"\357\004\n\007Request" +
      "\022\016\n\002id\030\001 \001(\tR\002id\022:\n\014service_name\030\002 \001(\tB\027" +
      "\362\336\037\023yaml:\"service_name\"R\013serviceName\022\032\n\010" +
      "provider\030\003 \001(\tR\010provider\022\032\n\010consumer\030\004 \001" +
      "(\tR\010consumer\022\024\n\005input\030\005 \001(\tR\005input\022\202\001\n\013s" +
      "ervice_fee\030\006 \003(\0132\031.cosmos.base.v1beta1.C" +
      "oinBF\310\336\037\000\362\336\037\022yaml:\"service_fee\"\252\337\037(githu" +
      "b.com/cosmos/cosmos-sdk/types.CoinsR\nser" +
      "viceFee\022@\n\016request_height\030\007 \001(\003B\031\362\336\037\025yam" +
      "l:\"request_height\"R\rrequestHeight\022I\n\021exp" +
      "iration_height\030\010 \001(\003B\034\362\336\037\030yaml:\"expirati" +
      "on_height\"R\020expirationHeight\022K\n\022request_" +
      "context_id\030\t \001(\tB\035\362\336\037\031yaml:\"request_cont" +
      "ext_id\"R\020requestContextId\022k\n\035request_con" +
      "text_batch_counter\030\n \001(\004B(\362\336\037$yaml:\"requ" +
      "est_context_batch_counter\"R\032requestConte" +
      "xtBatchCounter\"\370\003\n\016CompactRequest\022K\n\022req" +
      "uest_context_id\030\001 \001(\tB\035\362\336\037\031yaml:\"request" +
      "_context_id\"R\020requestContextId\022k\n\035reques" +
      "t_context_batch_counter\030\002 \001(\004B(\362\336\037$yaml:" +
      "\"request_context_batch_counter\"R\032request" +
      "ContextBatchCounter\022\032\n\010provider\030\003 \001(\tR\010p" +
      "rovider\022\202\001\n\013service_fee\030\004 \003(\0132\031.cosmos.b" +
      "ase.v1beta1.CoinBF\310\336\037\000\362\336\037\022yaml:\"service_" +
      "fee\"\252\337\037(github.com/cosmos/cosmos-sdk/typ" +
      "es.CoinsR\nserviceFee\022@\n\016request_height\030\005" +
      " \001(\003B\031\362\336\037\025yaml:\"request_height\"R\rrequest" +
      "Height\022I\n\021expiration_height\030\006 \001(\003B\034\362\336\037\030y" +
      "aml:\"expiration_height\"R\020expirationHeigh" +
      "t\"\254\002\n\010Response\022\032\n\010provider\030\001 \001(\tR\010provid" +
      "er\022\032\n\010consumer\030\002 \001(\tR\010consumer\022\026\n\006result" +
      "\030\003 \001(\tR\006result\022\026\n\006output\030\004 \001(\tR\006output\022K" +
      "\n\022request_context_id\030\005 \001(\tB\035\362\336\037\031yaml:\"re" +
      "quest_context_id\"R\020requestContextId\022k\n\035r" +
      "equest_context_batch_counter\030\006 \001(\004B(\362\336\037$" +
      "yaml:\"request_context_batch_counter\"R\032re" +
      "questContextBatchCounter\"\332\002\n\007Pricing\022a\n\005" +
      "price\030\006 \003(\0132\031.cosmos.base.v1beta1.CoinB0" +
      "\310\336\037\000\252\337\037(github.com/cosmos/cosmos-sdk/typ" +
      "es.CoinsR\005price\022q\n\022promotions_by_time\030\002 " +
      "\003(\0132 .irismod.service.PromotionByTimeB!\310" +
      "\336\037\000\362\336\037\031yaml:\"promotions_by_time\"R\020promot" +
      "ionsByTime\022y\n\024promotions_by_volume\030\003 \003(\013" +
      "2\".irismod.service.PromotionByVolumeB#\310\336" +
      "\037\000\362\336\037\033yaml:\"promotions_by_volume\"R\022promo" +
      "tionsByVolume\"\213\002\n\017PromotionByTime\022X\n\nsta" +
      "rt_time\030\001 \001(\0132\032.google.protobuf.Timestam" +
      "pB\035\310\336\037\000\362\336\037\021yaml:\"start_time\"\220\337\037\001R\tstartT" +
      "ime\022R\n\010end_time\030\002 \001(\0132\032.google.protobuf." +
      "TimestampB\033\310\336\037\000\362\336\037\017yaml:\"end_time\"\220\337\037\001R\007" +
      "endTime\022J\n\010discount\030\003 \001(\tB.\310\336\037\000\332\336\037&githu" +
      "b.com/cosmos/cosmos-sdk/types.DecR\010disco" +
      "unt\"w\n\021PromotionByVolume\022\026\n\006volume\030\001 \001(\004" +
      "R\006volume\022J\n\010discount\030\002 \001(\tB.\310\336\037\000\332\336\037&gith" +
      "ub.com/cosmos/cosmos-sdk/types.DecR\010disc" +
      "ount\"\326\007\n\006Params\022N\n\023max_request_timeout\030\001" +
      " \001(\003B\036\362\336\037\032yaml:\"max_request_timeout\"R\021ma" +
      "xRequestTimeout\022Q\n\024min_deposit_multiple\030" +
      "\002 \001(\003B\037\362\336\037\033yaml:\"min_deposit_multiple\"R\022" +
      "minDepositMultiple\022l\n\013min_deposit\030\003 \003(\0132" +
      "\031.cosmos.base.v1beta1.CoinB0\310\336\037\000\252\337\037(gith" +
      "ub.com/cosmos/cosmos-sdk/types.CoinsR\nmi" +
      "nDeposit\022p\n\017service_fee_tax\030\004 \001(\tBH\310\336\037\000\332" +
      "\336\037&github.com/cosmos/cosmos-sdk/types.De" +
      "c\362\336\037\026yaml:\"service_fee_tax\"R\rserviceFeeT" +
      "ax\022n\n\016slash_fraction\030\005 \001(\tBG\310\336\037\000\332\336\037&gith" +
      "ub.com/cosmos/cosmos-sdk/types.Dec\362\336\037\025ya" +
      "ml:\"slash_fraction\"R\rslashFraction\022u\n\024co" +
      "mplaint_retrospect\030\006 \001(\0132\031.google.protob" +
      "uf.DurationB\'\310\336\037\000\362\336\037\033yaml:\"complaint_ret" +
      "rospect\"\230\337\037\001R\023complaintRetrospect\022z\n\026arb" +
      "itration_time_limit\030\007 \001(\0132\031.google.proto" +
      "buf.DurationB)\310\336\037\000\362\336\037\035yaml:\"arbitration_" +
      "time_limit\"\230\337\037\001R\024arbitrationTimeLimit\022<\n" +
      "\rtx_size_limit\030\010 \001(\004B\030\362\336\037\024yaml:\"tx_size_" +
      "limit\"R\013txSizeLimit\0224\n\nbase_denom\030\t \001(\tB" +
      "\025\362\336\037\021yaml:\"base_denom\"R\tbaseDenom\022h\n\034res" +
      "tricted_service_fee_denom\030\n \001(\010B\'\362\336\037#yam" +
      "l:\"restricted_service_fee_denom\"R\031restri" +
      "ctedServiceFeeDenom:\010\230\240\037\000\350\240\037\001*v\n\030Request" +
      "ContextBatchState\022#\n\rBATCH_RUNNING\020\000\032\020\212\235" +
      " \014BATCHRUNNING\022\'\n\017BATCH_COMPLETED\020\001\032\022\212\235 " +
      "\016BATCHCOMPLETED\032\014\210\243\036\000\250\244\036\000\260\244\036\001*s\n\023Request" +
      "ContextState\022\030\n\007RUNNING\020\000\032\013\212\235 \007RUNNING\022\026" +
      "\n\006PAUSED\020\001\032\n\212\235 \006PAUSED\022\034\n\tCOMPLETED\020\002\032\r\212" +
      "\235 \tCOMPLETED\032\014\210\243\036\000\250\244\036\000\260\244\036\001B\266\001\n\023com.irism" +
      "od.serviceB\014ServiceProtoP\001Z0github.com/i" +
      "risnet/irismod/modules/service/types\242\002\003I" +
      "SX\252\002\017Irismod.Service\312\002\017Irismod\\Service\342\002" +
      "\033Irismod\\Service\\GPBMetadata\352\002\020Irismod::" +
      "Service\310\341\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_irismod_service_ServiceDefinition_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_irismod_service_ServiceDefinition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_service_ServiceDefinition_descriptor,
        new java.lang.String[] { "Name", "Description", "Tags", "Author", "AuthorDescription", "Schemas", });
    internal_static_irismod_service_ServiceBinding_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_irismod_service_ServiceBinding_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_service_ServiceBinding_descriptor,
        new java.lang.String[] { "ServiceName", "Provider", "Deposit", "Pricing", "Qos", "Options", "Available", "DisabledTime", "Owner", });
    internal_static_irismod_service_RequestContext_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_irismod_service_RequestContext_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_service_RequestContext_descriptor,
        new java.lang.String[] { "ServiceName", "Providers", "Consumer", "Input", "ServiceFeeCap", "ModuleName", "Timeout", "Repeated", "RepeatedFrequency", "RepeatedTotal", "BatchCounter", "BatchRequestCount", "BatchResponseCount", "BatchResponseThreshold", "ResponseThreshold", "BatchState", "State", });
    internal_static_irismod_service_Request_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_irismod_service_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_service_Request_descriptor,
        new java.lang.String[] { "Id", "ServiceName", "Provider", "Consumer", "Input", "ServiceFee", "RequestHeight", "ExpirationHeight", "RequestContextId", "RequestContextBatchCounter", });
    internal_static_irismod_service_CompactRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_irismod_service_CompactRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_service_CompactRequest_descriptor,
        new java.lang.String[] { "RequestContextId", "RequestContextBatchCounter", "Provider", "ServiceFee", "RequestHeight", "ExpirationHeight", });
    internal_static_irismod_service_Response_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_irismod_service_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_service_Response_descriptor,
        new java.lang.String[] { "Provider", "Consumer", "Result", "Output", "RequestContextId", "RequestContextBatchCounter", });
    internal_static_irismod_service_Pricing_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_irismod_service_Pricing_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_service_Pricing_descriptor,
        new java.lang.String[] { "Price", "PromotionsByTime", "PromotionsByVolume", });
    internal_static_irismod_service_PromotionByTime_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_irismod_service_PromotionByTime_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_service_PromotionByTime_descriptor,
        new java.lang.String[] { "StartTime", "EndTime", "Discount", });
    internal_static_irismod_service_PromotionByVolume_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_irismod_service_PromotionByVolume_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_service_PromotionByVolume_descriptor,
        new java.lang.String[] { "Volume", "Discount", });
    internal_static_irismod_service_Params_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_irismod_service_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_service_Params_descriptor,
        new java.lang.String[] { "MaxRequestTimeout", "MinDepositMultiple", "MinDeposit", "ServiceFeeTax", "SlashFraction", "ComplaintRetrospect", "ArbitrationTimeLimit", "TxSizeLimit", "BaseDenom", "RestrictedServiceFeeDenom", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.customname);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.enumStringer);
    registry.add(com.gogoproto.GogoProto.enumvalueCustomname);
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.goprotoEnumPrefix);
    registry.add(com.gogoproto.GogoProto.goprotoEnumStringer);
    registry.add(com.gogoproto.GogoProto.goprotoGettersAll);
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stdduration);
    registry.add(com.gogoproto.GogoProto.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

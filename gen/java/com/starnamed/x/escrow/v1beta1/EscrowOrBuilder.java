// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iov/escrow/v1beta1/types.proto

package com.starnamed.x.escrow.v1beta1;

public interface EscrowOrBuilder extends
    // @@protoc_insertion_point(interface_extends:starnamed.x.escrow.v1beta1.Escrow)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <code>string seller = 2 [json_name = "seller"];</code>
   * @return The seller.
   */
  java.lang.String getSeller();
  /**
   * <code>string seller = 2 [json_name = "seller"];</code>
   * @return The bytes for seller.
   */
  com.google.protobuf.ByteString
      getSellerBytes();

  /**
   * <code>.google.protobuf.Any object = 3 [json_name = "object", (.cosmos_proto.accepts_interface) = "TransferableObject"];</code>
   * @return Whether the object field is set.
   */
  boolean hasObject();
  /**
   * <code>.google.protobuf.Any object = 3 [json_name = "object", (.cosmos_proto.accepts_interface) = "TransferableObject"];</code>
   * @return The object.
   */
  com.google.protobuf.Any getObject();
  /**
   * <code>.google.protobuf.Any object = 3 [json_name = "object", (.cosmos_proto.accepts_interface) = "TransferableObject"];</code>
   */
  com.google.protobuf.AnyOrBuilder getObjectOrBuilder();

  /**
   * <pre>
   * TODO: refactor this to use sdk.Coin instead of sdk.Coins
   * Although the price contains multiple coins, for now we enforce a specific
   * denomination, so there will be only one coin type in a valid escrow
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin price = 4 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.Coin> 
      getPriceList();
  /**
   * <pre>
   * TODO: refactor this to use sdk.Coin instead of sdk.Coins
   * Although the price contains multiple coins, for now we enforce a specific
   * denomination, so there will be only one coin type in a valid escrow
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin price = 4 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.Coin getPrice(int index);
  /**
   * <pre>
   * TODO: refactor this to use sdk.Coin instead of sdk.Coins
   * Although the price contains multiple coins, for now we enforce a specific
   * denomination, so there will be only one coin type in a valid escrow
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin price = 4 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  int getPriceCount();
  /**
   * <pre>
   * TODO: refactor this to use sdk.Coin instead of sdk.Coins
   * Although the price contains multiple coins, for now we enforce a specific
   * denomination, so there will be only one coin type in a valid escrow
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin price = 4 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getPriceOrBuilderList();
  /**
   * <pre>
   * TODO: refactor this to use sdk.Coin instead of sdk.Coins
   * Although the price contains multiple coins, for now we enforce a specific
   * denomination, so there will be only one coin type in a valid escrow
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin price = 4 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getPriceOrBuilder(
      int index);

  /**
   * <code>.starnamed.x.escrow.v1beta1.EscrowState state = 5 [json_name = "state"];</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <code>.starnamed.x.escrow.v1beta1.EscrowState state = 5 [json_name = "state"];</code>
   * @return The state.
   */
  com.starnamed.x.escrow.v1beta1.EscrowState getState();

  /**
   * <code>uint64 deadline = 6 [json_name = "deadline"];</code>
   * @return The deadline.
   */
  long getDeadline();

  /**
   * <code>string broker_address = 7 [json_name = "brokerAddress"];</code>
   * @return The brokerAddress.
   */
  java.lang.String getBrokerAddress();
  /**
   * <code>string broker_address = 7 [json_name = "brokerAddress"];</code>
   * @return The bytes for brokerAddress.
   */
  com.google.protobuf.ByteString
      getBrokerAddressBytes();

  /**
   * <code>string broker_commission = 8 [json_name = "brokerCommission", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The brokerCommission.
   */
  java.lang.String getBrokerCommission();
  /**
   * <code>string broker_commission = 8 [json_name = "brokerCommission", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for brokerCommission.
   */
  com.google.protobuf.ByteString
      getBrokerCommissionBytes();
}

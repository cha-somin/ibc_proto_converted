// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: panacea/datapool/v2alpha1/pool.proto

package com.panacea.datapool.v2alpha1;

public interface SalesHistoryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:panacea.datapool.v2alpha1.SalesHistory)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * pool Id for selling data
   * </pre>
   *
   * <code>uint64 pool_id = 1 [json_name = "poolId"];</code>
   * @return The poolId.
   */
  long getPoolId();

  /**
   * <pre>
   * Always 1 for v0
   * </pre>
   *
   * <code>uint64 round = 2 [json_name = "round"];</code>
   * @return The round.
   */
  long getRound();

  /**
   * <pre>
   * address to be distributed
   * </pre>
   *
   * <code>string seller_address = 3 [json_name = "sellerAddress"];</code>
   * @return The sellerAddress.
   */
  java.lang.String getSellerAddress();
  /**
   * <pre>
   * address to be distributed
   * </pre>
   *
   * <code>string seller_address = 3 [json_name = "sellerAddress"];</code>
   * @return The bytes for sellerAddress.
   */
  com.google.protobuf.ByteString
      getSellerAddressBytes();

  /**
   * <code>repeated bytes data_hashes = 4 [json_name = "dataHashes"];</code>
   * @return A list containing the dataHashes.
   */
  java.util.List<com.google.protobuf.ByteString> getDataHashesList();
  /**
   * <code>repeated bytes data_hashes = 4 [json_name = "dataHashes"];</code>
   * @return The count of dataHashes.
   */
  int getDataHashesCount();
  /**
   * <code>repeated bytes data_hashes = 4 [json_name = "dataHashes"];</code>
   * @param index The index of the element to return.
   * @return The dataHashes at the given index.
   */
  com.google.protobuf.ByteString getDataHashes(int index);

  /**
   * <pre>
   * Proceeds distributed in the round
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin paid_coin = 5 [json_name = "paidCoin"];</code>
   * @return Whether the paidCoin field is set.
   */
  boolean hasPaidCoin();
  /**
   * <pre>
   * Proceeds distributed in the round
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin paid_coin = 5 [json_name = "paidCoin"];</code>
   * @return The paidCoin.
   */
  com.cosmos.base.v1beta1.Coin getPaidCoin();
  /**
   * <pre>
   * Proceeds distributed in the round
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin paid_coin = 5 [json_name = "paidCoin"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getPaidCoinOrBuilder();
}

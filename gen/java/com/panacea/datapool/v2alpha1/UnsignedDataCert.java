// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: panacea/datapool/v2alpha1/pool.proto

package com.panacea.datapool.v2alpha1;

/**
 * <pre>
 * UnsignedDataCert defines the unsigned certificate for data validation.
 * </pre>
 *
 * Protobuf type {@code panacea.datapool.v2alpha1.UnsignedDataCert}
 */
public final class UnsignedDataCert extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:panacea.datapool.v2alpha1.UnsignedDataCert)
    UnsignedDataCertOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UnsignedDataCert.newBuilder() to construct.
  private UnsignedDataCert(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UnsignedDataCert() {
    dataHash_ = com.google.protobuf.ByteString.EMPTY;
    oracle_ = "";
    requester_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new UnsignedDataCert();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.panacea.datapool.v2alpha1.PoolProto.internal_static_panacea_datapool_v2alpha1_UnsignedDataCert_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.panacea.datapool.v2alpha1.PoolProto.internal_static_panacea_datapool_v2alpha1_UnsignedDataCert_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.panacea.datapool.v2alpha1.UnsignedDataCert.class, com.panacea.datapool.v2alpha1.UnsignedDataCert.Builder.class);
  }

  public static final int POOL_ID_FIELD_NUMBER = 1;
  private long poolId_ = 0L;
  /**
   * <pre>
   * pool Id for selling data
   * </pre>
   *
   * <code>uint64 pool_id = 1 [json_name = "poolId"];</code>
   * @return The poolId.
   */
  @java.lang.Override
  public long getPoolId() {
    return poolId_;
  }

  public static final int ROUND_FIELD_NUMBER = 2;
  private long round_ = 0L;
  /**
   * <pre>
   * Always 1 for v0
   * </pre>
   *
   * <code>uint64 round = 2 [json_name = "round"];</code>
   * @return The round.
   */
  @java.lang.Override
  public long getRound() {
    return round_;
  }

  public static final int DATA_HASH_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString dataHash_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * sha-256 hash of the data
   * </pre>
   *
   * <code>bytes data_hash = 3 [json_name = "dataHash"];</code>
   * @return The dataHash.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDataHash() {
    return dataHash_;
  }

  public static final int ORACLE_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object oracle_ = "";
  /**
   * <pre>
   * 'panacea1' address of oracle
   * </pre>
   *
   * <code>string oracle = 4 [json_name = "oracle"];</code>
   * @return The oracle.
   */
  @java.lang.Override
  public java.lang.String getOracle() {
    java.lang.Object ref = oracle_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      oracle_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 'panacea1' address of oracle
   * </pre>
   *
   * <code>string oracle = 4 [json_name = "oracle"];</code>
   * @return The bytes for oracle.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOracleBytes() {
    java.lang.Object ref = oracle_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      oracle_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REQUESTER_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object requester_ = "";
  /**
   * <pre>
   * 'panacea1' address of seller
   * </pre>
   *
   * <code>string requester = 5 [json_name = "requester"];</code>
   * @return The requester.
   */
  @java.lang.Override
  public java.lang.String getRequester() {
    java.lang.Object ref = requester_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      requester_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 'panacea1' address of seller
   * </pre>
   *
   * <code>string requester = 5 [json_name = "requester"];</code>
   * @return The bytes for requester.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRequesterBytes() {
    java.lang.Object ref = requester_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      requester_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (poolId_ != 0L) {
      output.writeUInt64(1, poolId_);
    }
    if (round_ != 0L) {
      output.writeUInt64(2, round_);
    }
    if (!dataHash_.isEmpty()) {
      output.writeBytes(3, dataHash_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(oracle_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, oracle_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(requester_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, requester_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (poolId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, poolId_);
    }
    if (round_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, round_);
    }
    if (!dataHash_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(3, dataHash_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(oracle_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, oracle_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(requester_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, requester_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.panacea.datapool.v2alpha1.UnsignedDataCert)) {
      return super.equals(obj);
    }
    com.panacea.datapool.v2alpha1.UnsignedDataCert other = (com.panacea.datapool.v2alpha1.UnsignedDataCert) obj;

    if (getPoolId()
        != other.getPoolId()) return false;
    if (getRound()
        != other.getRound()) return false;
    if (!getDataHash()
        .equals(other.getDataHash())) return false;
    if (!getOracle()
        .equals(other.getOracle())) return false;
    if (!getRequester()
        .equals(other.getRequester())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + POOL_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPoolId());
    hash = (37 * hash) + ROUND_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRound());
    hash = (37 * hash) + DATA_HASH_FIELD_NUMBER;
    hash = (53 * hash) + getDataHash().hashCode();
    hash = (37 * hash) + ORACLE_FIELD_NUMBER;
    hash = (53 * hash) + getOracle().hashCode();
    hash = (37 * hash) + REQUESTER_FIELD_NUMBER;
    hash = (53 * hash) + getRequester().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.panacea.datapool.v2alpha1.UnsignedDataCert parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.panacea.datapool.v2alpha1.UnsignedDataCert parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.panacea.datapool.v2alpha1.UnsignedDataCert parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.panacea.datapool.v2alpha1.UnsignedDataCert parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.panacea.datapool.v2alpha1.UnsignedDataCert parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.panacea.datapool.v2alpha1.UnsignedDataCert parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.panacea.datapool.v2alpha1.UnsignedDataCert parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.panacea.datapool.v2alpha1.UnsignedDataCert parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.panacea.datapool.v2alpha1.UnsignedDataCert parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.panacea.datapool.v2alpha1.UnsignedDataCert parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.panacea.datapool.v2alpha1.UnsignedDataCert parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.panacea.datapool.v2alpha1.UnsignedDataCert parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.panacea.datapool.v2alpha1.UnsignedDataCert prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * UnsignedDataCert defines the unsigned certificate for data validation.
   * </pre>
   *
   * Protobuf type {@code panacea.datapool.v2alpha1.UnsignedDataCert}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:panacea.datapool.v2alpha1.UnsignedDataCert)
      com.panacea.datapool.v2alpha1.UnsignedDataCertOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.panacea.datapool.v2alpha1.PoolProto.internal_static_panacea_datapool_v2alpha1_UnsignedDataCert_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.panacea.datapool.v2alpha1.PoolProto.internal_static_panacea_datapool_v2alpha1_UnsignedDataCert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.panacea.datapool.v2alpha1.UnsignedDataCert.class, com.panacea.datapool.v2alpha1.UnsignedDataCert.Builder.class);
    }

    // Construct using com.panacea.datapool.v2alpha1.UnsignedDataCert.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      poolId_ = 0L;
      round_ = 0L;
      dataHash_ = com.google.protobuf.ByteString.EMPTY;
      oracle_ = "";
      requester_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.panacea.datapool.v2alpha1.PoolProto.internal_static_panacea_datapool_v2alpha1_UnsignedDataCert_descriptor;
    }

    @java.lang.Override
    public com.panacea.datapool.v2alpha1.UnsignedDataCert getDefaultInstanceForType() {
      return com.panacea.datapool.v2alpha1.UnsignedDataCert.getDefaultInstance();
    }

    @java.lang.Override
    public com.panacea.datapool.v2alpha1.UnsignedDataCert build() {
      com.panacea.datapool.v2alpha1.UnsignedDataCert result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.panacea.datapool.v2alpha1.UnsignedDataCert buildPartial() {
      com.panacea.datapool.v2alpha1.UnsignedDataCert result = new com.panacea.datapool.v2alpha1.UnsignedDataCert(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.panacea.datapool.v2alpha1.UnsignedDataCert result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.poolId_ = poolId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.round_ = round_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.dataHash_ = dataHash_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.oracle_ = oracle_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.requester_ = requester_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.panacea.datapool.v2alpha1.UnsignedDataCert) {
        return mergeFrom((com.panacea.datapool.v2alpha1.UnsignedDataCert)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.panacea.datapool.v2alpha1.UnsignedDataCert other) {
      if (other == com.panacea.datapool.v2alpha1.UnsignedDataCert.getDefaultInstance()) return this;
      if (other.getPoolId() != 0L) {
        setPoolId(other.getPoolId());
      }
      if (other.getRound() != 0L) {
        setRound(other.getRound());
      }
      if (other.getDataHash() != com.google.protobuf.ByteString.EMPTY) {
        setDataHash(other.getDataHash());
      }
      if (!other.getOracle().isEmpty()) {
        oracle_ = other.oracle_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getRequester().isEmpty()) {
        requester_ = other.requester_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              poolId_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              round_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              dataHash_ = input.readBytes();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              oracle_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              requester_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long poolId_ ;
    /**
     * <pre>
     * pool Id for selling data
     * </pre>
     *
     * <code>uint64 pool_id = 1 [json_name = "poolId"];</code>
     * @return The poolId.
     */
    @java.lang.Override
    public long getPoolId() {
      return poolId_;
    }
    /**
     * <pre>
     * pool Id for selling data
     * </pre>
     *
     * <code>uint64 pool_id = 1 [json_name = "poolId"];</code>
     * @param value The poolId to set.
     * @return This builder for chaining.
     */
    public Builder setPoolId(long value) {

      poolId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * pool Id for selling data
     * </pre>
     *
     * <code>uint64 pool_id = 1 [json_name = "poolId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPoolId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      poolId_ = 0L;
      onChanged();
      return this;
    }

    private long round_ ;
    /**
     * <pre>
     * Always 1 for v0
     * </pre>
     *
     * <code>uint64 round = 2 [json_name = "round"];</code>
     * @return The round.
     */
    @java.lang.Override
    public long getRound() {
      return round_;
    }
    /**
     * <pre>
     * Always 1 for v0
     * </pre>
     *
     * <code>uint64 round = 2 [json_name = "round"];</code>
     * @param value The round to set.
     * @return This builder for chaining.
     */
    public Builder setRound(long value) {

      round_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Always 1 for v0
     * </pre>
     *
     * <code>uint64 round = 2 [json_name = "round"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRound() {
      bitField0_ = (bitField0_ & ~0x00000002);
      round_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString dataHash_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * sha-256 hash of the data
     * </pre>
     *
     * <code>bytes data_hash = 3 [json_name = "dataHash"];</code>
     * @return The dataHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDataHash() {
      return dataHash_;
    }
    /**
     * <pre>
     * sha-256 hash of the data
     * </pre>
     *
     * <code>bytes data_hash = 3 [json_name = "dataHash"];</code>
     * @param value The dataHash to set.
     * @return This builder for chaining.
     */
    public Builder setDataHash(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      dataHash_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * sha-256 hash of the data
     * </pre>
     *
     * <code>bytes data_hash = 3 [json_name = "dataHash"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDataHash() {
      bitField0_ = (bitField0_ & ~0x00000004);
      dataHash_ = getDefaultInstance().getDataHash();
      onChanged();
      return this;
    }

    private java.lang.Object oracle_ = "";
    /**
     * <pre>
     * 'panacea1' address of oracle
     * </pre>
     *
     * <code>string oracle = 4 [json_name = "oracle"];</code>
     * @return The oracle.
     */
    public java.lang.String getOracle() {
      java.lang.Object ref = oracle_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        oracle_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 'panacea1' address of oracle
     * </pre>
     *
     * <code>string oracle = 4 [json_name = "oracle"];</code>
     * @return The bytes for oracle.
     */
    public com.google.protobuf.ByteString
        getOracleBytes() {
      java.lang.Object ref = oracle_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        oracle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 'panacea1' address of oracle
     * </pre>
     *
     * <code>string oracle = 4 [json_name = "oracle"];</code>
     * @param value The oracle to set.
     * @return This builder for chaining.
     */
    public Builder setOracle(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      oracle_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 'panacea1' address of oracle
     * </pre>
     *
     * <code>string oracle = 4 [json_name = "oracle"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOracle() {
      oracle_ = getDefaultInstance().getOracle();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 'panacea1' address of oracle
     * </pre>
     *
     * <code>string oracle = 4 [json_name = "oracle"];</code>
     * @param value The bytes for oracle to set.
     * @return This builder for chaining.
     */
    public Builder setOracleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      oracle_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object requester_ = "";
    /**
     * <pre>
     * 'panacea1' address of seller
     * </pre>
     *
     * <code>string requester = 5 [json_name = "requester"];</code>
     * @return The requester.
     */
    public java.lang.String getRequester() {
      java.lang.Object ref = requester_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        requester_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 'panacea1' address of seller
     * </pre>
     *
     * <code>string requester = 5 [json_name = "requester"];</code>
     * @return The bytes for requester.
     */
    public com.google.protobuf.ByteString
        getRequesterBytes() {
      java.lang.Object ref = requester_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        requester_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 'panacea1' address of seller
     * </pre>
     *
     * <code>string requester = 5 [json_name = "requester"];</code>
     * @param value The requester to set.
     * @return This builder for chaining.
     */
    public Builder setRequester(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      requester_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 'panacea1' address of seller
     * </pre>
     *
     * <code>string requester = 5 [json_name = "requester"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRequester() {
      requester_ = getDefaultInstance().getRequester();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 'panacea1' address of seller
     * </pre>
     *
     * <code>string requester = 5 [json_name = "requester"];</code>
     * @param value The bytes for requester to set.
     * @return This builder for chaining.
     */
    public Builder setRequesterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      requester_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:panacea.datapool.v2alpha1.UnsignedDataCert)
  }

  // @@protoc_insertion_point(class_scope:panacea.datapool.v2alpha1.UnsignedDataCert)
  private static final com.panacea.datapool.v2alpha1.UnsignedDataCert DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.panacea.datapool.v2alpha1.UnsignedDataCert();
  }

  public static com.panacea.datapool.v2alpha1.UnsignedDataCert getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<UnsignedDataCert>
      PARSER = new com.google.protobuf.AbstractParser<UnsignedDataCert>() {
    @java.lang.Override
    public UnsignedDataCert parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<UnsignedDataCert> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UnsignedDataCert> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.panacea.datapool.v2alpha1.UnsignedDataCert getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


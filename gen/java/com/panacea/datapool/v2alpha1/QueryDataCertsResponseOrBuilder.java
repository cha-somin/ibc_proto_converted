// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: panacea/datapool/v2alpha1/query.proto

package com.panacea.datapool.v2alpha1;

public interface QueryDataCertsResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:panacea.datapool.v2alpha1.QueryDataCertsResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .panacea.datapool.v2alpha1.DataCert data_certs = 1 [json_name = "dataCerts", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<com.panacea.datapool.v2alpha1.DataCert> 
      getDataCertsList();
  /**
   * <code>repeated .panacea.datapool.v2alpha1.DataCert data_certs = 1 [json_name = "dataCerts", (.gogoproto.nullable) = false];</code>
   */
  com.panacea.datapool.v2alpha1.DataCert getDataCerts(int index);
  /**
   * <code>repeated .panacea.datapool.v2alpha1.DataCert data_certs = 1 [json_name = "dataCerts", (.gogoproto.nullable) = false];</code>
   */
  int getDataCertsCount();
  /**
   * <code>repeated .panacea.datapool.v2alpha1.DataCert data_certs = 1 [json_name = "dataCerts", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<? extends com.panacea.datapool.v2alpha1.DataCertOrBuilder> 
      getDataCertsOrBuilderList();
  /**
   * <code>repeated .panacea.datapool.v2alpha1.DataCert data_certs = 1 [json_name = "dataCerts", (.gogoproto.nullable) = false];</code>
   */
  com.panacea.datapool.v2alpha1.DataCertOrBuilder getDataCertsOrBuilder(
      int index);

  /**
   * <code>.cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];</code>
   * @return Whether the pagination field is set.
   */
  boolean hasPagination();
  /**
   * <code>.cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];</code>
   * @return The pagination.
   */
  com.cosmos.base.query.v1beta1.PageResponse getPagination();
  /**
   * <code>.cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];</code>
   */
  com.cosmos.base.query.v1beta1.PageResponseOrBuilder getPaginationOrBuilder();
}

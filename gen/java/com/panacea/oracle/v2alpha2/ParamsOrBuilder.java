// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: panacea/oracle/v2alpha2/genesis.proto

package com.panacea.oracle.v2alpha2;

public interface ParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:panacea.oracle.v2alpha2.Params)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A base64-encoded oracle public key which is paired with an oracle private key generated in SGX by the first oracle.
   * This key is used to encrypt data, so that the data can be decrypted and verified securely only in SGX
   * </pre>
   *
   * <code>string oracle_public_key = 1 [json_name = "oraclePublicKey"];</code>
   * @return The oraclePublicKey.
   */
  java.lang.String getOraclePublicKey();
  /**
   * <pre>
   * A base64-encoded oracle public key which is paired with an oracle private key generated in SGX by the first oracle.
   * This key is used to encrypt data, so that the data can be decrypted and verified securely only in SGX
   * </pre>
   *
   * <code>string oracle_public_key = 1 [json_name = "oraclePublicKey"];</code>
   * @return The bytes for oraclePublicKey.
   */
  com.google.protobuf.ByteString
      getOraclePublicKeyBytes();

  /**
   * <pre>
   * A base64-encoded SGX remote report which contains an oracle public key.
   * Using this report, anyone can validate that the oracle key pair was generated in SGX.
   * </pre>
   *
   * <code>string oracle_pub_key_remote_report = 2 [json_name = "oraclePubKeyRemoteReport"];</code>
   * @return The oraclePubKeyRemoteReport.
   */
  java.lang.String getOraclePubKeyRemoteReport();
  /**
   * <pre>
   * A base64-encoded SGX remote report which contains an oracle public key.
   * Using this report, anyone can validate that the oracle key pair was generated in SGX.
   * </pre>
   *
   * <code>string oracle_pub_key_remote_report = 2 [json_name = "oraclePubKeyRemoteReport"];</code>
   * @return The bytes for oraclePubKeyRemoteReport.
   */
  com.google.protobuf.ByteString
      getOraclePubKeyRemoteReportBytes();

  /**
   * <pre>
   * The unique ID of current version of oracle.
   * </pre>
   *
   * <code>string unique_id = 3 [json_name = "uniqueId"];</code>
   * @return The uniqueId.
   */
  java.lang.String getUniqueId();
  /**
   * <pre>
   * The unique ID of current version of oracle.
   * </pre>
   *
   * <code>string unique_id = 3 [json_name = "uniqueId"];</code>
   * @return The bytes for uniqueId.
   */
  com.google.protobuf.ByteString
      getUniqueIdBytes();

  /**
   * <pre>
   * Oracle commission rate on validating and delivering data
   * </pre>
   *
   * <code>string oracle_commission_rate = 4 [json_name = "oracleCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The oracleCommissionRate.
   */
  java.lang.String getOracleCommissionRate();
  /**
   * <pre>
   * Oracle commission rate on validating and delivering data
   * </pre>
   *
   * <code>string oracle_commission_rate = 4 [json_name = "oracleCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for oracleCommissionRate.
   */
  com.google.protobuf.ByteString
      getOracleCommissionRateBytes();

  /**
   * <code>.panacea.oracle.v2alpha2.VoteParams vote_params = 5 [json_name = "voteParams", (.gogoproto.nullable) = false];</code>
   * @return Whether the voteParams field is set.
   */
  boolean hasVoteParams();
  /**
   * <code>.panacea.oracle.v2alpha2.VoteParams vote_params = 5 [json_name = "voteParams", (.gogoproto.nullable) = false];</code>
   * @return The voteParams.
   */
  com.panacea.oracle.v2alpha2.VoteParams getVoteParams();
  /**
   * <code>.panacea.oracle.v2alpha2.VoteParams vote_params = 5 [json_name = "voteParams", (.gogoproto.nullable) = false];</code>
   */
  com.panacea.oracle.v2alpha2.VoteParamsOrBuilder getVoteParamsOrBuilder();

  /**
   * <code>.panacea.oracle.v2alpha2.SlashParams slash_params = 6 [json_name = "slashParams", (.gogoproto.nullable) = false];</code>
   * @return Whether the slashParams field is set.
   */
  boolean hasSlashParams();
  /**
   * <code>.panacea.oracle.v2alpha2.SlashParams slash_params = 6 [json_name = "slashParams", (.gogoproto.nullable) = false];</code>
   * @return The slashParams.
   */
  com.panacea.oracle.v2alpha2.SlashParams getSlashParams();
  /**
   * <code>.panacea.oracle.v2alpha2.SlashParams slash_params = 6 [json_name = "slashParams", (.gogoproto.nullable) = false];</code>
   */
  com.panacea.oracle.v2alpha2.SlashParamsOrBuilder getSlashParamsOrBuilder();
}

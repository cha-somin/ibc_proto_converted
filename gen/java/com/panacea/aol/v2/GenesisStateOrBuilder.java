// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: panacea/aol/v2/genesis.proto

package com.panacea.aol.v2;

public interface GenesisStateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:panacea.aol.v2.GenesisState)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>map&lt;string, .panacea.aol.v2.Owner&gt; owners = 1 [json_name = "owners"];</code>
   */
  int getOwnersCount();
  /**
   * <code>map&lt;string, .panacea.aol.v2.Owner&gt; owners = 1 [json_name = "owners"];</code>
   */
  boolean containsOwners(
      java.lang.String key);
  /**
   * Use {@link #getOwnersMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.panacea.aol.v2.Owner>
  getOwners();
  /**
   * <code>map&lt;string, .panacea.aol.v2.Owner&gt; owners = 1 [json_name = "owners"];</code>
   */
  java.util.Map<java.lang.String, com.panacea.aol.v2.Owner>
  getOwnersMap();
  /**
   * <code>map&lt;string, .panacea.aol.v2.Owner&gt; owners = 1 [json_name = "owners"];</code>
   */
  /* nullable */
com.panacea.aol.v2.Owner getOwnersOrDefault(
      java.lang.String key,
      /* nullable */
com.panacea.aol.v2.Owner defaultValue);
  /**
   * <code>map&lt;string, .panacea.aol.v2.Owner&gt; owners = 1 [json_name = "owners"];</code>
   */
  com.panacea.aol.v2.Owner getOwnersOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, .panacea.aol.v2.Topic&gt; topics = 2 [json_name = "topics"];</code>
   */
  int getTopicsCount();
  /**
   * <code>map&lt;string, .panacea.aol.v2.Topic&gt; topics = 2 [json_name = "topics"];</code>
   */
  boolean containsTopics(
      java.lang.String key);
  /**
   * Use {@link #getTopicsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.panacea.aol.v2.Topic>
  getTopics();
  /**
   * <code>map&lt;string, .panacea.aol.v2.Topic&gt; topics = 2 [json_name = "topics"];</code>
   */
  java.util.Map<java.lang.String, com.panacea.aol.v2.Topic>
  getTopicsMap();
  /**
   * <code>map&lt;string, .panacea.aol.v2.Topic&gt; topics = 2 [json_name = "topics"];</code>
   */
  /* nullable */
com.panacea.aol.v2.Topic getTopicsOrDefault(
      java.lang.String key,
      /* nullable */
com.panacea.aol.v2.Topic defaultValue);
  /**
   * <code>map&lt;string, .panacea.aol.v2.Topic&gt; topics = 2 [json_name = "topics"];</code>
   */
  com.panacea.aol.v2.Topic getTopicsOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, .panacea.aol.v2.Writer&gt; writers = 3 [json_name = "writers"];</code>
   */
  int getWritersCount();
  /**
   * <code>map&lt;string, .panacea.aol.v2.Writer&gt; writers = 3 [json_name = "writers"];</code>
   */
  boolean containsWriters(
      java.lang.String key);
  /**
   * Use {@link #getWritersMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.panacea.aol.v2.Writer>
  getWriters();
  /**
   * <code>map&lt;string, .panacea.aol.v2.Writer&gt; writers = 3 [json_name = "writers"];</code>
   */
  java.util.Map<java.lang.String, com.panacea.aol.v2.Writer>
  getWritersMap();
  /**
   * <code>map&lt;string, .panacea.aol.v2.Writer&gt; writers = 3 [json_name = "writers"];</code>
   */
  /* nullable */
com.panacea.aol.v2.Writer getWritersOrDefault(
      java.lang.String key,
      /* nullable */
com.panacea.aol.v2.Writer defaultValue);
  /**
   * <code>map&lt;string, .panacea.aol.v2.Writer&gt; writers = 3 [json_name = "writers"];</code>
   */
  com.panacea.aol.v2.Writer getWritersOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, .panacea.aol.v2.Record&gt; records = 4 [json_name = "records"];</code>
   */
  int getRecordsCount();
  /**
   * <code>map&lt;string, .panacea.aol.v2.Record&gt; records = 4 [json_name = "records"];</code>
   */
  boolean containsRecords(
      java.lang.String key);
  /**
   * Use {@link #getRecordsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.panacea.aol.v2.Record>
  getRecords();
  /**
   * <code>map&lt;string, .panacea.aol.v2.Record&gt; records = 4 [json_name = "records"];</code>
   */
  java.util.Map<java.lang.String, com.panacea.aol.v2.Record>
  getRecordsMap();
  /**
   * <code>map&lt;string, .panacea.aol.v2.Record&gt; records = 4 [json_name = "records"];</code>
   */
  /* nullable */
com.panacea.aol.v2.Record getRecordsOrDefault(
      java.lang.String key,
      /* nullable */
com.panacea.aol.v2.Record defaultValue);
  /**
   * <code>map&lt;string, .panacea.aol.v2.Record&gt; records = 4 [json_name = "records"];</code>
   */
  com.panacea.aol.v2.Record getRecordsOrThrow(
      java.lang.String key);
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: band/oracle/v1/oracle.proto

package com.oracle.v1;

/**
 * <pre>
 * PendingResolveList is a list of requests that are waiting to be resolved
 * </pre>
 *
 * Protobuf type {@code oracle.v1.PendingResolveList}
 */
public final class PendingResolveList extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:oracle.v1.PendingResolveList)
    PendingResolveListOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PendingResolveList.newBuilder() to construct.
  private PendingResolveList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PendingResolveList() {
    requestIds_ = emptyLongList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PendingResolveList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.oracle.v1.OracleProto.internal_static_oracle_v1_PendingResolveList_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.oracle.v1.OracleProto.internal_static_oracle_v1_PendingResolveList_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.oracle.v1.PendingResolveList.class, com.oracle.v1.PendingResolveList.Builder.class);
  }

  public static final int REQUEST_IDS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.LongList requestIds_;
  /**
   * <pre>
   * RequestIDs is a list of request IDs that are waiting to be resolved
   * </pre>
   *
   * <code>repeated uint64 request_ids = 1 [json_name = "requestIds"];</code>
   * @return A list containing the requestIds.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getRequestIdsList() {
    return requestIds_;
  }
  /**
   * <pre>
   * RequestIDs is a list of request IDs that are waiting to be resolved
   * </pre>
   *
   * <code>repeated uint64 request_ids = 1 [json_name = "requestIds"];</code>
   * @return The count of requestIds.
   */
  public int getRequestIdsCount() {
    return requestIds_.size();
  }
  /**
   * <pre>
   * RequestIDs is a list of request IDs that are waiting to be resolved
   * </pre>
   *
   * <code>repeated uint64 request_ids = 1 [json_name = "requestIds"];</code>
   * @param index The index of the element to return.
   * @return The requestIds at the given index.
   */
  public long getRequestIds(int index) {
    return requestIds_.getLong(index);
  }
  private int requestIdsMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (getRequestIdsList().size() > 0) {
      output.writeUInt32NoTag(10);
      output.writeUInt32NoTag(requestIdsMemoizedSerializedSize);
    }
    for (int i = 0; i < requestIds_.size(); i++) {
      output.writeUInt64NoTag(requestIds_.getLong(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < requestIds_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt64SizeNoTag(requestIds_.getLong(i));
      }
      size += dataSize;
      if (!getRequestIdsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      requestIdsMemoizedSerializedSize = dataSize;
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.oracle.v1.PendingResolveList)) {
      return super.equals(obj);
    }
    com.oracle.v1.PendingResolveList other = (com.oracle.v1.PendingResolveList) obj;

    if (!getRequestIdsList()
        .equals(other.getRequestIdsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getRequestIdsCount() > 0) {
      hash = (37 * hash) + REQUEST_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getRequestIdsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.oracle.v1.PendingResolveList parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.PendingResolveList parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.PendingResolveList parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.PendingResolveList parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.PendingResolveList parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.PendingResolveList parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.PendingResolveList parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.oracle.v1.PendingResolveList parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.oracle.v1.PendingResolveList parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.oracle.v1.PendingResolveList parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.oracle.v1.PendingResolveList parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.oracle.v1.PendingResolveList parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.oracle.v1.PendingResolveList prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * PendingResolveList is a list of requests that are waiting to be resolved
   * </pre>
   *
   * Protobuf type {@code oracle.v1.PendingResolveList}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:oracle.v1.PendingResolveList)
      com.oracle.v1.PendingResolveListOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.oracle.v1.OracleProto.internal_static_oracle_v1_PendingResolveList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.oracle.v1.OracleProto.internal_static_oracle_v1_PendingResolveList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.oracle.v1.PendingResolveList.class, com.oracle.v1.PendingResolveList.Builder.class);
    }

    // Construct using com.oracle.v1.PendingResolveList.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      requestIds_ = emptyLongList();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.oracle.v1.OracleProto.internal_static_oracle_v1_PendingResolveList_descriptor;
    }

    @java.lang.Override
    public com.oracle.v1.PendingResolveList getDefaultInstanceForType() {
      return com.oracle.v1.PendingResolveList.getDefaultInstance();
    }

    @java.lang.Override
    public com.oracle.v1.PendingResolveList build() {
      com.oracle.v1.PendingResolveList result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.oracle.v1.PendingResolveList buildPartial() {
      com.oracle.v1.PendingResolveList result = new com.oracle.v1.PendingResolveList(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.oracle.v1.PendingResolveList result) {
      if (((bitField0_ & 0x00000001) != 0)) {
        requestIds_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.requestIds_ = requestIds_;
    }

    private void buildPartial0(com.oracle.v1.PendingResolveList result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.oracle.v1.PendingResolveList) {
        return mergeFrom((com.oracle.v1.PendingResolveList)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.oracle.v1.PendingResolveList other) {
      if (other == com.oracle.v1.PendingResolveList.getDefaultInstance()) return this;
      if (!other.requestIds_.isEmpty()) {
        if (requestIds_.isEmpty()) {
          requestIds_ = other.requestIds_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureRequestIdsIsMutable();
          requestIds_.addAll(other.requestIds_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              long v = input.readUInt64();
              ensureRequestIdsIsMutable();
              requestIds_.addLong(v);
              break;
            } // case 8
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureRequestIdsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                requestIds_.addLong(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Internal.LongList requestIds_ = emptyLongList();
    private void ensureRequestIdsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        requestIds_ = mutableCopy(requestIds_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     * <pre>
     * RequestIDs is a list of request IDs that are waiting to be resolved
     * </pre>
     *
     * <code>repeated uint64 request_ids = 1 [json_name = "requestIds"];</code>
     * @return A list containing the requestIds.
     */
    public java.util.List<java.lang.Long>
        getRequestIdsList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(requestIds_) : requestIds_;
    }
    /**
     * <pre>
     * RequestIDs is a list of request IDs that are waiting to be resolved
     * </pre>
     *
     * <code>repeated uint64 request_ids = 1 [json_name = "requestIds"];</code>
     * @return The count of requestIds.
     */
    public int getRequestIdsCount() {
      return requestIds_.size();
    }
    /**
     * <pre>
     * RequestIDs is a list of request IDs that are waiting to be resolved
     * </pre>
     *
     * <code>repeated uint64 request_ids = 1 [json_name = "requestIds"];</code>
     * @param index The index of the element to return.
     * @return The requestIds at the given index.
     */
    public long getRequestIds(int index) {
      return requestIds_.getLong(index);
    }
    /**
     * <pre>
     * RequestIDs is a list of request IDs that are waiting to be resolved
     * </pre>
     *
     * <code>repeated uint64 request_ids = 1 [json_name = "requestIds"];</code>
     * @param index The index to set the value at.
     * @param value The requestIds to set.
     * @return This builder for chaining.
     */
    public Builder setRequestIds(
        int index, long value) {

      ensureRequestIdsIsMutable();
      requestIds_.setLong(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * RequestIDs is a list of request IDs that are waiting to be resolved
     * </pre>
     *
     * <code>repeated uint64 request_ids = 1 [json_name = "requestIds"];</code>
     * @param value The requestIds to add.
     * @return This builder for chaining.
     */
    public Builder addRequestIds(long value) {

      ensureRequestIdsIsMutable();
      requestIds_.addLong(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * RequestIDs is a list of request IDs that are waiting to be resolved
     * </pre>
     *
     * <code>repeated uint64 request_ids = 1 [json_name = "requestIds"];</code>
     * @param values The requestIds to add.
     * @return This builder for chaining.
     */
    public Builder addAllRequestIds(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureRequestIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, requestIds_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * RequestIDs is a list of request IDs that are waiting to be resolved
     * </pre>
     *
     * <code>repeated uint64 request_ids = 1 [json_name = "requestIds"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRequestIds() {
      requestIds_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:oracle.v1.PendingResolveList)
  }

  // @@protoc_insertion_point(class_scope:oracle.v1.PendingResolveList)
  private static final com.oracle.v1.PendingResolveList DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.oracle.v1.PendingResolveList();
  }

  public static com.oracle.v1.PendingResolveList getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PendingResolveList>
      PARSER = new com.google.protobuf.AbstractParser<PendingResolveList>() {
    @java.lang.Override
    public PendingResolveList parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PendingResolveList> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PendingResolveList> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.oracle.v1.PendingResolveList getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


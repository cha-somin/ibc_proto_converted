// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: band/oracle/v1/oracle.proto

package com.oracle.v1;

/**
 * <pre>
 * Params is the data structure that keeps the parameters of the oracle module.
 * </pre>
 *
 * Protobuf type {@code oracle.v1.Params}
 */
public final class Params extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:oracle.v1.Params)
    ParamsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Params.newBuilder() to construct.
  private Params(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Params() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Params();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.oracle.v1.OracleProto.internal_static_oracle_v1_Params_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.oracle.v1.OracleProto.internal_static_oracle_v1_Params_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.oracle.v1.Params.class, com.oracle.v1.Params.Builder.class);
  }

  public static final int MAX_RAW_REQUEST_COUNT_FIELD_NUMBER = 1;
  private long maxRawRequestCount_ = 0L;
  /**
   * <pre>
   * MaxRawRequestCount is the maximum number of data source raw requests a
   * request can make.
   * </pre>
   *
   * <code>uint64 max_raw_request_count = 1 [json_name = "maxRawRequestCount"];</code>
   * @return The maxRawRequestCount.
   */
  @java.lang.Override
  public long getMaxRawRequestCount() {
    return maxRawRequestCount_;
  }

  public static final int MAX_ASK_COUNT_FIELD_NUMBER = 2;
  private long maxAskCount_ = 0L;
  /**
   * <pre>
   * MaxAskCount is the maximum number of validators a request can target.
   * </pre>
   *
   * <code>uint64 max_ask_count = 2 [json_name = "maxAskCount"];</code>
   * @return The maxAskCount.
   */
  @java.lang.Override
  public long getMaxAskCount() {
    return maxAskCount_;
  }

  public static final int MAX_CALLDATA_SIZE_FIELD_NUMBER = 3;
  private long maxCalldataSize_ = 0L;
  /**
   * <pre>
   * MaxCalldataSize is the maximum size limit of calldata (bytes) in a request.
   * </pre>
   *
   * <code>uint64 max_calldata_size = 3 [json_name = "maxCalldataSize"];</code>
   * @return The maxCalldataSize.
   */
  @java.lang.Override
  public long getMaxCalldataSize() {
    return maxCalldataSize_;
  }

  public static final int MAX_REPORT_DATA_SIZE_FIELD_NUMBER = 4;
  private long maxReportDataSize_ = 0L;
  /**
   * <pre>
   * MaxReportDataSize is the maximum size limit of report data (bytes) in a
   * report.
   * </pre>
   *
   * <code>uint64 max_report_data_size = 4 [json_name = "maxReportDataSize"];</code>
   * @return The maxReportDataSize.
   */
  @java.lang.Override
  public long getMaxReportDataSize() {
    return maxReportDataSize_;
  }

  public static final int EXPIRATION_BLOCK_COUNT_FIELD_NUMBER = 5;
  private long expirationBlockCount_ = 0L;
  /**
   * <pre>
   * ExpirationBlockCount is the number of blocks a request stays valid before
   * it gets expired due to insufficient reports.
   * </pre>
   *
   * <code>uint64 expiration_block_count = 5 [json_name = "expirationBlockCount"];</code>
   * @return The expirationBlockCount.
   */
  @java.lang.Override
  public long getExpirationBlockCount() {
    return expirationBlockCount_;
  }

  public static final int BASE_OWASM_GAS_FIELD_NUMBER = 6;
  private long baseOwasmGas_ = 0L;
  /**
   * <pre>
   * BaseOwasmGas is the base amount of Cosmos-SDK gas charged for owasm
   * execution.
   * </pre>
   *
   * <code>uint64 base_owasm_gas = 6 [json_name = "baseOwasmGas"];</code>
   * @return The baseOwasmGas.
   */
  @java.lang.Override
  public long getBaseOwasmGas() {
    return baseOwasmGas_;
  }

  public static final int PER_VALIDATOR_REQUEST_GAS_FIELD_NUMBER = 7;
  private long perValidatorRequestGas_ = 0L;
  /**
   * <pre>
   * PerValidatorRequestGas is the amount of Cosmos-SDK gas charged per
   * requested validator.
   * </pre>
   *
   * <code>uint64 per_validator_request_gas = 7 [json_name = "perValidatorRequestGas"];</code>
   * @return The perValidatorRequestGas.
   */
  @java.lang.Override
  public long getPerValidatorRequestGas() {
    return perValidatorRequestGas_;
  }

  public static final int SAMPLING_TRY_COUNT_FIELD_NUMBER = 8;
  private long samplingTryCount_ = 0L;
  /**
   * <pre>
   * SamplingTryCount the number of validator sampling tries to pick the highest
   * voting power subset of validators to perform an oracle task.
   * </pre>
   *
   * <code>uint64 sampling_try_count = 8 [json_name = "samplingTryCount"];</code>
   * @return The samplingTryCount.
   */
  @java.lang.Override
  public long getSamplingTryCount() {
    return samplingTryCount_;
  }

  public static final int ORACLE_REWARD_PERCENTAGE_FIELD_NUMBER = 9;
  private long oracleRewardPercentage_ = 0L;
  /**
   * <pre>
   * OracleRewardPercentage is the percentage of block rewards allocated to
   * active oracle validators.
   * </pre>
   *
   * <code>uint64 oracle_reward_percentage = 9 [json_name = "oracleRewardPercentage"];</code>
   * @return The oracleRewardPercentage.
   */
  @java.lang.Override
  public long getOracleRewardPercentage() {
    return oracleRewardPercentage_;
  }

  public static final int INACTIVE_PENALTY_DURATION_FIELD_NUMBER = 10;
  private long inactivePenaltyDuration_ = 0L;
  /**
   * <pre>
   * InactivePenaltyDuration is the duration period where a validator cannot
   * activate back after missing an oracle report.
   * </pre>
   *
   * <code>uint64 inactive_penalty_duration = 10 [json_name = "inactivePenaltyDuration"];</code>
   * @return The inactivePenaltyDuration.
   */
  @java.lang.Override
  public long getInactivePenaltyDuration() {
    return inactivePenaltyDuration_;
  }

  public static final int IBC_REQUEST_ENABLED_FIELD_NUMBER = 11;
  private boolean ibcRequestEnabled_ = false;
  /**
   * <pre>
   * IBCRequestEnabled is a flag indicating whether sending oracle request via
   * IBC is allowed
   * </pre>
   *
   * <code>bool ibc_request_enabled = 11 [json_name = "ibcRequestEnabled", (.gogoproto.customname) = "IBCRequestEnabled"];</code>
   * @return The ibcRequestEnabled.
   */
  @java.lang.Override
  public boolean getIbcRequestEnabled() {
    return ibcRequestEnabled_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (maxRawRequestCount_ != 0L) {
      output.writeUInt64(1, maxRawRequestCount_);
    }
    if (maxAskCount_ != 0L) {
      output.writeUInt64(2, maxAskCount_);
    }
    if (maxCalldataSize_ != 0L) {
      output.writeUInt64(3, maxCalldataSize_);
    }
    if (maxReportDataSize_ != 0L) {
      output.writeUInt64(4, maxReportDataSize_);
    }
    if (expirationBlockCount_ != 0L) {
      output.writeUInt64(5, expirationBlockCount_);
    }
    if (baseOwasmGas_ != 0L) {
      output.writeUInt64(6, baseOwasmGas_);
    }
    if (perValidatorRequestGas_ != 0L) {
      output.writeUInt64(7, perValidatorRequestGas_);
    }
    if (samplingTryCount_ != 0L) {
      output.writeUInt64(8, samplingTryCount_);
    }
    if (oracleRewardPercentage_ != 0L) {
      output.writeUInt64(9, oracleRewardPercentage_);
    }
    if (inactivePenaltyDuration_ != 0L) {
      output.writeUInt64(10, inactivePenaltyDuration_);
    }
    if (ibcRequestEnabled_ != false) {
      output.writeBool(11, ibcRequestEnabled_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (maxRawRequestCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, maxRawRequestCount_);
    }
    if (maxAskCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, maxAskCount_);
    }
    if (maxCalldataSize_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, maxCalldataSize_);
    }
    if (maxReportDataSize_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, maxReportDataSize_);
    }
    if (expirationBlockCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, expirationBlockCount_);
    }
    if (baseOwasmGas_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, baseOwasmGas_);
    }
    if (perValidatorRequestGas_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, perValidatorRequestGas_);
    }
    if (samplingTryCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(8, samplingTryCount_);
    }
    if (oracleRewardPercentage_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(9, oracleRewardPercentage_);
    }
    if (inactivePenaltyDuration_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(10, inactivePenaltyDuration_);
    }
    if (ibcRequestEnabled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, ibcRequestEnabled_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.oracle.v1.Params)) {
      return super.equals(obj);
    }
    com.oracle.v1.Params other = (com.oracle.v1.Params) obj;

    if (getMaxRawRequestCount()
        != other.getMaxRawRequestCount()) return false;
    if (getMaxAskCount()
        != other.getMaxAskCount()) return false;
    if (getMaxCalldataSize()
        != other.getMaxCalldataSize()) return false;
    if (getMaxReportDataSize()
        != other.getMaxReportDataSize()) return false;
    if (getExpirationBlockCount()
        != other.getExpirationBlockCount()) return false;
    if (getBaseOwasmGas()
        != other.getBaseOwasmGas()) return false;
    if (getPerValidatorRequestGas()
        != other.getPerValidatorRequestGas()) return false;
    if (getSamplingTryCount()
        != other.getSamplingTryCount()) return false;
    if (getOracleRewardPercentage()
        != other.getOracleRewardPercentage()) return false;
    if (getInactivePenaltyDuration()
        != other.getInactivePenaltyDuration()) return false;
    if (getIbcRequestEnabled()
        != other.getIbcRequestEnabled()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MAX_RAW_REQUEST_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxRawRequestCount());
    hash = (37 * hash) + MAX_ASK_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxAskCount());
    hash = (37 * hash) + MAX_CALLDATA_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxCalldataSize());
    hash = (37 * hash) + MAX_REPORT_DATA_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxReportDataSize());
    hash = (37 * hash) + EXPIRATION_BLOCK_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getExpirationBlockCount());
    hash = (37 * hash) + BASE_OWASM_GAS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getBaseOwasmGas());
    hash = (37 * hash) + PER_VALIDATOR_REQUEST_GAS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPerValidatorRequestGas());
    hash = (37 * hash) + SAMPLING_TRY_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSamplingTryCount());
    hash = (37 * hash) + ORACLE_REWARD_PERCENTAGE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOracleRewardPercentage());
    hash = (37 * hash) + INACTIVE_PENALTY_DURATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getInactivePenaltyDuration());
    hash = (37 * hash) + IBC_REQUEST_ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIbcRequestEnabled());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.oracle.v1.Params parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.Params parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.Params parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.Params parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.Params parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.Params parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.Params parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.oracle.v1.Params parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.oracle.v1.Params parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.oracle.v1.Params parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.oracle.v1.Params parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.oracle.v1.Params parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.oracle.v1.Params prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Params is the data structure that keeps the parameters of the oracle module.
   * </pre>
   *
   * Protobuf type {@code oracle.v1.Params}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:oracle.v1.Params)
      com.oracle.v1.ParamsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.oracle.v1.OracleProto.internal_static_oracle_v1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.oracle.v1.OracleProto.internal_static_oracle_v1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.oracle.v1.Params.class, com.oracle.v1.Params.Builder.class);
    }

    // Construct using com.oracle.v1.Params.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      maxRawRequestCount_ = 0L;
      maxAskCount_ = 0L;
      maxCalldataSize_ = 0L;
      maxReportDataSize_ = 0L;
      expirationBlockCount_ = 0L;
      baseOwasmGas_ = 0L;
      perValidatorRequestGas_ = 0L;
      samplingTryCount_ = 0L;
      oracleRewardPercentage_ = 0L;
      inactivePenaltyDuration_ = 0L;
      ibcRequestEnabled_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.oracle.v1.OracleProto.internal_static_oracle_v1_Params_descriptor;
    }

    @java.lang.Override
    public com.oracle.v1.Params getDefaultInstanceForType() {
      return com.oracle.v1.Params.getDefaultInstance();
    }

    @java.lang.Override
    public com.oracle.v1.Params build() {
      com.oracle.v1.Params result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.oracle.v1.Params buildPartial() {
      com.oracle.v1.Params result = new com.oracle.v1.Params(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.oracle.v1.Params result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.maxRawRequestCount_ = maxRawRequestCount_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.maxAskCount_ = maxAskCount_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.maxCalldataSize_ = maxCalldataSize_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.maxReportDataSize_ = maxReportDataSize_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.expirationBlockCount_ = expirationBlockCount_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.baseOwasmGas_ = baseOwasmGas_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.perValidatorRequestGas_ = perValidatorRequestGas_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.samplingTryCount_ = samplingTryCount_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.oracleRewardPercentage_ = oracleRewardPercentage_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.inactivePenaltyDuration_ = inactivePenaltyDuration_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.ibcRequestEnabled_ = ibcRequestEnabled_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.oracle.v1.Params) {
        return mergeFrom((com.oracle.v1.Params)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.oracle.v1.Params other) {
      if (other == com.oracle.v1.Params.getDefaultInstance()) return this;
      if (other.getMaxRawRequestCount() != 0L) {
        setMaxRawRequestCount(other.getMaxRawRequestCount());
      }
      if (other.getMaxAskCount() != 0L) {
        setMaxAskCount(other.getMaxAskCount());
      }
      if (other.getMaxCalldataSize() != 0L) {
        setMaxCalldataSize(other.getMaxCalldataSize());
      }
      if (other.getMaxReportDataSize() != 0L) {
        setMaxReportDataSize(other.getMaxReportDataSize());
      }
      if (other.getExpirationBlockCount() != 0L) {
        setExpirationBlockCount(other.getExpirationBlockCount());
      }
      if (other.getBaseOwasmGas() != 0L) {
        setBaseOwasmGas(other.getBaseOwasmGas());
      }
      if (other.getPerValidatorRequestGas() != 0L) {
        setPerValidatorRequestGas(other.getPerValidatorRequestGas());
      }
      if (other.getSamplingTryCount() != 0L) {
        setSamplingTryCount(other.getSamplingTryCount());
      }
      if (other.getOracleRewardPercentage() != 0L) {
        setOracleRewardPercentage(other.getOracleRewardPercentage());
      }
      if (other.getInactivePenaltyDuration() != 0L) {
        setInactivePenaltyDuration(other.getInactivePenaltyDuration());
      }
      if (other.getIbcRequestEnabled() != false) {
        setIbcRequestEnabled(other.getIbcRequestEnabled());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              maxRawRequestCount_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              maxAskCount_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              maxCalldataSize_ = input.readUInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              maxReportDataSize_ = input.readUInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              expirationBlockCount_ = input.readUInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              baseOwasmGas_ = input.readUInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              perValidatorRequestGas_ = input.readUInt64();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              samplingTryCount_ = input.readUInt64();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              oracleRewardPercentage_ = input.readUInt64();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              inactivePenaltyDuration_ = input.readUInt64();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 88: {
              ibcRequestEnabled_ = input.readBool();
              bitField0_ |= 0x00000400;
              break;
            } // case 88
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long maxRawRequestCount_ ;
    /**
     * <pre>
     * MaxRawRequestCount is the maximum number of data source raw requests a
     * request can make.
     * </pre>
     *
     * <code>uint64 max_raw_request_count = 1 [json_name = "maxRawRequestCount"];</code>
     * @return The maxRawRequestCount.
     */
    @java.lang.Override
    public long getMaxRawRequestCount() {
      return maxRawRequestCount_;
    }
    /**
     * <pre>
     * MaxRawRequestCount is the maximum number of data source raw requests a
     * request can make.
     * </pre>
     *
     * <code>uint64 max_raw_request_count = 1 [json_name = "maxRawRequestCount"];</code>
     * @param value The maxRawRequestCount to set.
     * @return This builder for chaining.
     */
    public Builder setMaxRawRequestCount(long value) {

      maxRawRequestCount_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MaxRawRequestCount is the maximum number of data source raw requests a
     * request can make.
     * </pre>
     *
     * <code>uint64 max_raw_request_count = 1 [json_name = "maxRawRequestCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxRawRequestCount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      maxRawRequestCount_ = 0L;
      onChanged();
      return this;
    }

    private long maxAskCount_ ;
    /**
     * <pre>
     * MaxAskCount is the maximum number of validators a request can target.
     * </pre>
     *
     * <code>uint64 max_ask_count = 2 [json_name = "maxAskCount"];</code>
     * @return The maxAskCount.
     */
    @java.lang.Override
    public long getMaxAskCount() {
      return maxAskCount_;
    }
    /**
     * <pre>
     * MaxAskCount is the maximum number of validators a request can target.
     * </pre>
     *
     * <code>uint64 max_ask_count = 2 [json_name = "maxAskCount"];</code>
     * @param value The maxAskCount to set.
     * @return This builder for chaining.
     */
    public Builder setMaxAskCount(long value) {

      maxAskCount_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MaxAskCount is the maximum number of validators a request can target.
     * </pre>
     *
     * <code>uint64 max_ask_count = 2 [json_name = "maxAskCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxAskCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      maxAskCount_ = 0L;
      onChanged();
      return this;
    }

    private long maxCalldataSize_ ;
    /**
     * <pre>
     * MaxCalldataSize is the maximum size limit of calldata (bytes) in a request.
     * </pre>
     *
     * <code>uint64 max_calldata_size = 3 [json_name = "maxCalldataSize"];</code>
     * @return The maxCalldataSize.
     */
    @java.lang.Override
    public long getMaxCalldataSize() {
      return maxCalldataSize_;
    }
    /**
     * <pre>
     * MaxCalldataSize is the maximum size limit of calldata (bytes) in a request.
     * </pre>
     *
     * <code>uint64 max_calldata_size = 3 [json_name = "maxCalldataSize"];</code>
     * @param value The maxCalldataSize to set.
     * @return This builder for chaining.
     */
    public Builder setMaxCalldataSize(long value) {

      maxCalldataSize_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MaxCalldataSize is the maximum size limit of calldata (bytes) in a request.
     * </pre>
     *
     * <code>uint64 max_calldata_size = 3 [json_name = "maxCalldataSize"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxCalldataSize() {
      bitField0_ = (bitField0_ & ~0x00000004);
      maxCalldataSize_ = 0L;
      onChanged();
      return this;
    }

    private long maxReportDataSize_ ;
    /**
     * <pre>
     * MaxReportDataSize is the maximum size limit of report data (bytes) in a
     * report.
     * </pre>
     *
     * <code>uint64 max_report_data_size = 4 [json_name = "maxReportDataSize"];</code>
     * @return The maxReportDataSize.
     */
    @java.lang.Override
    public long getMaxReportDataSize() {
      return maxReportDataSize_;
    }
    /**
     * <pre>
     * MaxReportDataSize is the maximum size limit of report data (bytes) in a
     * report.
     * </pre>
     *
     * <code>uint64 max_report_data_size = 4 [json_name = "maxReportDataSize"];</code>
     * @param value The maxReportDataSize to set.
     * @return This builder for chaining.
     */
    public Builder setMaxReportDataSize(long value) {

      maxReportDataSize_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MaxReportDataSize is the maximum size limit of report data (bytes) in a
     * report.
     * </pre>
     *
     * <code>uint64 max_report_data_size = 4 [json_name = "maxReportDataSize"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxReportDataSize() {
      bitField0_ = (bitField0_ & ~0x00000008);
      maxReportDataSize_ = 0L;
      onChanged();
      return this;
    }

    private long expirationBlockCount_ ;
    /**
     * <pre>
     * ExpirationBlockCount is the number of blocks a request stays valid before
     * it gets expired due to insufficient reports.
     * </pre>
     *
     * <code>uint64 expiration_block_count = 5 [json_name = "expirationBlockCount"];</code>
     * @return The expirationBlockCount.
     */
    @java.lang.Override
    public long getExpirationBlockCount() {
      return expirationBlockCount_;
    }
    /**
     * <pre>
     * ExpirationBlockCount is the number of blocks a request stays valid before
     * it gets expired due to insufficient reports.
     * </pre>
     *
     * <code>uint64 expiration_block_count = 5 [json_name = "expirationBlockCount"];</code>
     * @param value The expirationBlockCount to set.
     * @return This builder for chaining.
     */
    public Builder setExpirationBlockCount(long value) {

      expirationBlockCount_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ExpirationBlockCount is the number of blocks a request stays valid before
     * it gets expired due to insufficient reports.
     * </pre>
     *
     * <code>uint64 expiration_block_count = 5 [json_name = "expirationBlockCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearExpirationBlockCount() {
      bitField0_ = (bitField0_ & ~0x00000010);
      expirationBlockCount_ = 0L;
      onChanged();
      return this;
    }

    private long baseOwasmGas_ ;
    /**
     * <pre>
     * BaseOwasmGas is the base amount of Cosmos-SDK gas charged for owasm
     * execution.
     * </pre>
     *
     * <code>uint64 base_owasm_gas = 6 [json_name = "baseOwasmGas"];</code>
     * @return The baseOwasmGas.
     */
    @java.lang.Override
    public long getBaseOwasmGas() {
      return baseOwasmGas_;
    }
    /**
     * <pre>
     * BaseOwasmGas is the base amount of Cosmos-SDK gas charged for owasm
     * execution.
     * </pre>
     *
     * <code>uint64 base_owasm_gas = 6 [json_name = "baseOwasmGas"];</code>
     * @param value The baseOwasmGas to set.
     * @return This builder for chaining.
     */
    public Builder setBaseOwasmGas(long value) {

      baseOwasmGas_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * BaseOwasmGas is the base amount of Cosmos-SDK gas charged for owasm
     * execution.
     * </pre>
     *
     * <code>uint64 base_owasm_gas = 6 [json_name = "baseOwasmGas"];</code>
     * @return This builder for chaining.
     */
    public Builder clearBaseOwasmGas() {
      bitField0_ = (bitField0_ & ~0x00000020);
      baseOwasmGas_ = 0L;
      onChanged();
      return this;
    }

    private long perValidatorRequestGas_ ;
    /**
     * <pre>
     * PerValidatorRequestGas is the amount of Cosmos-SDK gas charged per
     * requested validator.
     * </pre>
     *
     * <code>uint64 per_validator_request_gas = 7 [json_name = "perValidatorRequestGas"];</code>
     * @return The perValidatorRequestGas.
     */
    @java.lang.Override
    public long getPerValidatorRequestGas() {
      return perValidatorRequestGas_;
    }
    /**
     * <pre>
     * PerValidatorRequestGas is the amount of Cosmos-SDK gas charged per
     * requested validator.
     * </pre>
     *
     * <code>uint64 per_validator_request_gas = 7 [json_name = "perValidatorRequestGas"];</code>
     * @param value The perValidatorRequestGas to set.
     * @return This builder for chaining.
     */
    public Builder setPerValidatorRequestGas(long value) {

      perValidatorRequestGas_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * PerValidatorRequestGas is the amount of Cosmos-SDK gas charged per
     * requested validator.
     * </pre>
     *
     * <code>uint64 per_validator_request_gas = 7 [json_name = "perValidatorRequestGas"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPerValidatorRequestGas() {
      bitField0_ = (bitField0_ & ~0x00000040);
      perValidatorRequestGas_ = 0L;
      onChanged();
      return this;
    }

    private long samplingTryCount_ ;
    /**
     * <pre>
     * SamplingTryCount the number of validator sampling tries to pick the highest
     * voting power subset of validators to perform an oracle task.
     * </pre>
     *
     * <code>uint64 sampling_try_count = 8 [json_name = "samplingTryCount"];</code>
     * @return The samplingTryCount.
     */
    @java.lang.Override
    public long getSamplingTryCount() {
      return samplingTryCount_;
    }
    /**
     * <pre>
     * SamplingTryCount the number of validator sampling tries to pick the highest
     * voting power subset of validators to perform an oracle task.
     * </pre>
     *
     * <code>uint64 sampling_try_count = 8 [json_name = "samplingTryCount"];</code>
     * @param value The samplingTryCount to set.
     * @return This builder for chaining.
     */
    public Builder setSamplingTryCount(long value) {

      samplingTryCount_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SamplingTryCount the number of validator sampling tries to pick the highest
     * voting power subset of validators to perform an oracle task.
     * </pre>
     *
     * <code>uint64 sampling_try_count = 8 [json_name = "samplingTryCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSamplingTryCount() {
      bitField0_ = (bitField0_ & ~0x00000080);
      samplingTryCount_ = 0L;
      onChanged();
      return this;
    }

    private long oracleRewardPercentage_ ;
    /**
     * <pre>
     * OracleRewardPercentage is the percentage of block rewards allocated to
     * active oracle validators.
     * </pre>
     *
     * <code>uint64 oracle_reward_percentage = 9 [json_name = "oracleRewardPercentage"];</code>
     * @return The oracleRewardPercentage.
     */
    @java.lang.Override
    public long getOracleRewardPercentage() {
      return oracleRewardPercentage_;
    }
    /**
     * <pre>
     * OracleRewardPercentage is the percentage of block rewards allocated to
     * active oracle validators.
     * </pre>
     *
     * <code>uint64 oracle_reward_percentage = 9 [json_name = "oracleRewardPercentage"];</code>
     * @param value The oracleRewardPercentage to set.
     * @return This builder for chaining.
     */
    public Builder setOracleRewardPercentage(long value) {

      oracleRewardPercentage_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * OracleRewardPercentage is the percentage of block rewards allocated to
     * active oracle validators.
     * </pre>
     *
     * <code>uint64 oracle_reward_percentage = 9 [json_name = "oracleRewardPercentage"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOracleRewardPercentage() {
      bitField0_ = (bitField0_ & ~0x00000100);
      oracleRewardPercentage_ = 0L;
      onChanged();
      return this;
    }

    private long inactivePenaltyDuration_ ;
    /**
     * <pre>
     * InactivePenaltyDuration is the duration period where a validator cannot
     * activate back after missing an oracle report.
     * </pre>
     *
     * <code>uint64 inactive_penalty_duration = 10 [json_name = "inactivePenaltyDuration"];</code>
     * @return The inactivePenaltyDuration.
     */
    @java.lang.Override
    public long getInactivePenaltyDuration() {
      return inactivePenaltyDuration_;
    }
    /**
     * <pre>
     * InactivePenaltyDuration is the duration period where a validator cannot
     * activate back after missing an oracle report.
     * </pre>
     *
     * <code>uint64 inactive_penalty_duration = 10 [json_name = "inactivePenaltyDuration"];</code>
     * @param value The inactivePenaltyDuration to set.
     * @return This builder for chaining.
     */
    public Builder setInactivePenaltyDuration(long value) {

      inactivePenaltyDuration_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * InactivePenaltyDuration is the duration period where a validator cannot
     * activate back after missing an oracle report.
     * </pre>
     *
     * <code>uint64 inactive_penalty_duration = 10 [json_name = "inactivePenaltyDuration"];</code>
     * @return This builder for chaining.
     */
    public Builder clearInactivePenaltyDuration() {
      bitField0_ = (bitField0_ & ~0x00000200);
      inactivePenaltyDuration_ = 0L;
      onChanged();
      return this;
    }

    private boolean ibcRequestEnabled_ ;
    /**
     * <pre>
     * IBCRequestEnabled is a flag indicating whether sending oracle request via
     * IBC is allowed
     * </pre>
     *
     * <code>bool ibc_request_enabled = 11 [json_name = "ibcRequestEnabled", (.gogoproto.customname) = "IBCRequestEnabled"];</code>
     * @return The ibcRequestEnabled.
     */
    @java.lang.Override
    public boolean getIbcRequestEnabled() {
      return ibcRequestEnabled_;
    }
    /**
     * <pre>
     * IBCRequestEnabled is a flag indicating whether sending oracle request via
     * IBC is allowed
     * </pre>
     *
     * <code>bool ibc_request_enabled = 11 [json_name = "ibcRequestEnabled", (.gogoproto.customname) = "IBCRequestEnabled"];</code>
     * @param value The ibcRequestEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setIbcRequestEnabled(boolean value) {

      ibcRequestEnabled_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * IBCRequestEnabled is a flag indicating whether sending oracle request via
     * IBC is allowed
     * </pre>
     *
     * <code>bool ibc_request_enabled = 11 [json_name = "ibcRequestEnabled", (.gogoproto.customname) = "IBCRequestEnabled"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIbcRequestEnabled() {
      bitField0_ = (bitField0_ & ~0x00000400);
      ibcRequestEnabled_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:oracle.v1.Params)
  }

  // @@protoc_insertion_point(class_scope:oracle.v1.Params)
  private static final com.oracle.v1.Params DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.oracle.v1.Params();
  }

  public static com.oracle.v1.Params getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Params>
      PARSER = new com.google.protobuf.AbstractParser<Params>() {
    @java.lang.Override
    public Params parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Params> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Params> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.oracle.v1.Params getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: band/oracle/v1/query.proto

package com.oracle.v1;

/**
 * <pre>
 * QueryActiveValidatorsResponse is response type for the Query/ActiveValidators
 * RPC method.
 * </pre>
 *
 * Protobuf type {@code oracle.v1.QueryActiveValidatorsResponse}
 */
public final class QueryActiveValidatorsResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:oracle.v1.QueryActiveValidatorsResponse)
    QueryActiveValidatorsResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use QueryActiveValidatorsResponse.newBuilder() to construct.
  private QueryActiveValidatorsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private QueryActiveValidatorsResponse() {
    validators_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new QueryActiveValidatorsResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.oracle.v1.QueryProto.internal_static_oracle_v1_QueryActiveValidatorsResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.oracle.v1.QueryProto.internal_static_oracle_v1_QueryActiveValidatorsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.oracle.v1.QueryActiveValidatorsResponse.class, com.oracle.v1.QueryActiveValidatorsResponse.Builder.class);
  }

  public static final int VALIDATORS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.oracle.v1.ActiveValidator> validators_;
  /**
   * <pre>
   * Validators is a list of active validators
   * </pre>
   *
   * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
   */
  @java.lang.Override
  public java.util.List<com.oracle.v1.ActiveValidator> getValidatorsList() {
    return validators_;
  }
  /**
   * <pre>
   * Validators is a list of active validators
   * </pre>
   *
   * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.oracle.v1.ActiveValidatorOrBuilder> 
      getValidatorsOrBuilderList() {
    return validators_;
  }
  /**
   * <pre>
   * Validators is a list of active validators
   * </pre>
   *
   * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
   */
  @java.lang.Override
  public int getValidatorsCount() {
    return validators_.size();
  }
  /**
   * <pre>
   * Validators is a list of active validators
   * </pre>
   *
   * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
   */
  @java.lang.Override
  public com.oracle.v1.ActiveValidator getValidators(int index) {
    return validators_.get(index);
  }
  /**
   * <pre>
   * Validators is a list of active validators
   * </pre>
   *
   * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
   */
  @java.lang.Override
  public com.oracle.v1.ActiveValidatorOrBuilder getValidatorsOrBuilder(
      int index) {
    return validators_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < validators_.size(); i++) {
      output.writeMessage(1, validators_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < validators_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, validators_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.oracle.v1.QueryActiveValidatorsResponse)) {
      return super.equals(obj);
    }
    com.oracle.v1.QueryActiveValidatorsResponse other = (com.oracle.v1.QueryActiveValidatorsResponse) obj;

    if (!getValidatorsList()
        .equals(other.getValidatorsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getValidatorsCount() > 0) {
      hash = (37 * hash) + VALIDATORS_FIELD_NUMBER;
      hash = (53 * hash) + getValidatorsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.oracle.v1.QueryActiveValidatorsResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.QueryActiveValidatorsResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.QueryActiveValidatorsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.QueryActiveValidatorsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.QueryActiveValidatorsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.QueryActiveValidatorsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.QueryActiveValidatorsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.oracle.v1.QueryActiveValidatorsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.oracle.v1.QueryActiveValidatorsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.oracle.v1.QueryActiveValidatorsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.oracle.v1.QueryActiveValidatorsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.oracle.v1.QueryActiveValidatorsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.oracle.v1.QueryActiveValidatorsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * QueryActiveValidatorsResponse is response type for the Query/ActiveValidators
   * RPC method.
   * </pre>
   *
   * Protobuf type {@code oracle.v1.QueryActiveValidatorsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:oracle.v1.QueryActiveValidatorsResponse)
      com.oracle.v1.QueryActiveValidatorsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.oracle.v1.QueryProto.internal_static_oracle_v1_QueryActiveValidatorsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.oracle.v1.QueryProto.internal_static_oracle_v1_QueryActiveValidatorsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.oracle.v1.QueryActiveValidatorsResponse.class, com.oracle.v1.QueryActiveValidatorsResponse.Builder.class);
    }

    // Construct using com.oracle.v1.QueryActiveValidatorsResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (validatorsBuilder_ == null) {
        validators_ = java.util.Collections.emptyList();
      } else {
        validators_ = null;
        validatorsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.oracle.v1.QueryProto.internal_static_oracle_v1_QueryActiveValidatorsResponse_descriptor;
    }

    @java.lang.Override
    public com.oracle.v1.QueryActiveValidatorsResponse getDefaultInstanceForType() {
      return com.oracle.v1.QueryActiveValidatorsResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.oracle.v1.QueryActiveValidatorsResponse build() {
      com.oracle.v1.QueryActiveValidatorsResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.oracle.v1.QueryActiveValidatorsResponse buildPartial() {
      com.oracle.v1.QueryActiveValidatorsResponse result = new com.oracle.v1.QueryActiveValidatorsResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.oracle.v1.QueryActiveValidatorsResponse result) {
      if (validatorsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          validators_ = java.util.Collections.unmodifiableList(validators_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.validators_ = validators_;
      } else {
        result.validators_ = validatorsBuilder_.build();
      }
    }

    private void buildPartial0(com.oracle.v1.QueryActiveValidatorsResponse result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.oracle.v1.QueryActiveValidatorsResponse) {
        return mergeFrom((com.oracle.v1.QueryActiveValidatorsResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.oracle.v1.QueryActiveValidatorsResponse other) {
      if (other == com.oracle.v1.QueryActiveValidatorsResponse.getDefaultInstance()) return this;
      if (validatorsBuilder_ == null) {
        if (!other.validators_.isEmpty()) {
          if (validators_.isEmpty()) {
            validators_ = other.validators_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValidatorsIsMutable();
            validators_.addAll(other.validators_);
          }
          onChanged();
        }
      } else {
        if (!other.validators_.isEmpty()) {
          if (validatorsBuilder_.isEmpty()) {
            validatorsBuilder_.dispose();
            validatorsBuilder_ = null;
            validators_ = other.validators_;
            bitField0_ = (bitField0_ & ~0x00000001);
            validatorsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getValidatorsFieldBuilder() : null;
          } else {
            validatorsBuilder_.addAllMessages(other.validators_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.oracle.v1.ActiveValidator m =
                  input.readMessage(
                      com.oracle.v1.ActiveValidator.parser(),
                      extensionRegistry);
              if (validatorsBuilder_ == null) {
                ensureValidatorsIsMutable();
                validators_.add(m);
              } else {
                validatorsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.oracle.v1.ActiveValidator> validators_ =
      java.util.Collections.emptyList();
    private void ensureValidatorsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        validators_ = new java.util.ArrayList<com.oracle.v1.ActiveValidator>(validators_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.oracle.v1.ActiveValidator, com.oracle.v1.ActiveValidator.Builder, com.oracle.v1.ActiveValidatorOrBuilder> validatorsBuilder_;

    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public java.util.List<com.oracle.v1.ActiveValidator> getValidatorsList() {
      if (validatorsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(validators_);
      } else {
        return validatorsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public int getValidatorsCount() {
      if (validatorsBuilder_ == null) {
        return validators_.size();
      } else {
        return validatorsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public com.oracle.v1.ActiveValidator getValidators(int index) {
      if (validatorsBuilder_ == null) {
        return validators_.get(index);
      } else {
        return validatorsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public Builder setValidators(
        int index, com.oracle.v1.ActiveValidator value) {
      if (validatorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValidatorsIsMutable();
        validators_.set(index, value);
        onChanged();
      } else {
        validatorsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public Builder setValidators(
        int index, com.oracle.v1.ActiveValidator.Builder builderForValue) {
      if (validatorsBuilder_ == null) {
        ensureValidatorsIsMutable();
        validators_.set(index, builderForValue.build());
        onChanged();
      } else {
        validatorsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public Builder addValidators(com.oracle.v1.ActiveValidator value) {
      if (validatorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValidatorsIsMutable();
        validators_.add(value);
        onChanged();
      } else {
        validatorsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public Builder addValidators(
        int index, com.oracle.v1.ActiveValidator value) {
      if (validatorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValidatorsIsMutable();
        validators_.add(index, value);
        onChanged();
      } else {
        validatorsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public Builder addValidators(
        com.oracle.v1.ActiveValidator.Builder builderForValue) {
      if (validatorsBuilder_ == null) {
        ensureValidatorsIsMutable();
        validators_.add(builderForValue.build());
        onChanged();
      } else {
        validatorsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public Builder addValidators(
        int index, com.oracle.v1.ActiveValidator.Builder builderForValue) {
      if (validatorsBuilder_ == null) {
        ensureValidatorsIsMutable();
        validators_.add(index, builderForValue.build());
        onChanged();
      } else {
        validatorsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public Builder addAllValidators(
        java.lang.Iterable<? extends com.oracle.v1.ActiveValidator> values) {
      if (validatorsBuilder_ == null) {
        ensureValidatorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, validators_);
        onChanged();
      } else {
        validatorsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public Builder clearValidators() {
      if (validatorsBuilder_ == null) {
        validators_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        validatorsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public Builder removeValidators(int index) {
      if (validatorsBuilder_ == null) {
        ensureValidatorsIsMutable();
        validators_.remove(index);
        onChanged();
      } else {
        validatorsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public com.oracle.v1.ActiveValidator.Builder getValidatorsBuilder(
        int index) {
      return getValidatorsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public com.oracle.v1.ActiveValidatorOrBuilder getValidatorsOrBuilder(
        int index) {
      if (validatorsBuilder_ == null) {
        return validators_.get(index);  } else {
        return validatorsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public java.util.List<? extends com.oracle.v1.ActiveValidatorOrBuilder> 
         getValidatorsOrBuilderList() {
      if (validatorsBuilder_ != null) {
        return validatorsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(validators_);
      }
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public com.oracle.v1.ActiveValidator.Builder addValidatorsBuilder() {
      return getValidatorsFieldBuilder().addBuilder(
          com.oracle.v1.ActiveValidator.getDefaultInstance());
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public com.oracle.v1.ActiveValidator.Builder addValidatorsBuilder(
        int index) {
      return getValidatorsFieldBuilder().addBuilder(
          index, com.oracle.v1.ActiveValidator.getDefaultInstance());
    }
    /**
     * <pre>
     * Validators is a list of active validators
     * </pre>
     *
     * <code>repeated .oracle.v1.ActiveValidator validators = 1 [json_name = "validators"];</code>
     */
    public java.util.List<com.oracle.v1.ActiveValidator.Builder> 
         getValidatorsBuilderList() {
      return getValidatorsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.oracle.v1.ActiveValidator, com.oracle.v1.ActiveValidator.Builder, com.oracle.v1.ActiveValidatorOrBuilder> 
        getValidatorsFieldBuilder() {
      if (validatorsBuilder_ == null) {
        validatorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.oracle.v1.ActiveValidator, com.oracle.v1.ActiveValidator.Builder, com.oracle.v1.ActiveValidatorOrBuilder>(
                validators_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        validators_ = null;
      }
      return validatorsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:oracle.v1.QueryActiveValidatorsResponse)
  }

  // @@protoc_insertion_point(class_scope:oracle.v1.QueryActiveValidatorsResponse)
  private static final com.oracle.v1.QueryActiveValidatorsResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.oracle.v1.QueryActiveValidatorsResponse();
  }

  public static com.oracle.v1.QueryActiveValidatorsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<QueryActiveValidatorsResponse>
      PARSER = new com.google.protobuf.AbstractParser<QueryActiveValidatorsResponse>() {
    @java.lang.Override
    public QueryActiveValidatorsResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<QueryActiveValidatorsResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<QueryActiveValidatorsResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.oracle.v1.QueryActiveValidatorsResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


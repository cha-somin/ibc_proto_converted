// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: band/oracle/v1/oracle.proto

package com.oracle.v1;

/**
 * <pre>
 * OracleRequestPacketData encodes an oracle request sent from other blockchains
 * to BandChain.
 * </pre>
 *
 * Protobuf type {@code oracle.v1.OracleRequestPacketData}
 */
public final class OracleRequestPacketData extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:oracle.v1.OracleRequestPacketData)
    OracleRequestPacketDataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OracleRequestPacketData.newBuilder() to construct.
  private OracleRequestPacketData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OracleRequestPacketData() {
    clientId_ = "";
    calldata_ = com.google.protobuf.ByteString.EMPTY;
    feeLimit_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new OracleRequestPacketData();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.oracle.v1.OracleProto.internal_static_oracle_v1_OracleRequestPacketData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.oracle.v1.OracleProto.internal_static_oracle_v1_OracleRequestPacketData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.oracle.v1.OracleRequestPacketData.class, com.oracle.v1.OracleRequestPacketData.Builder.class);
  }

  public static final int CLIENT_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object clientId_ = "";
  /**
   * <pre>
   * ClientID is the unique identifier of this oracle request, as specified by
   * the client. This same unique ID will be sent back to the requester with the
   * oracle response.
   * </pre>
   *
   * <code>string client_id = 1 [json_name = "clientId", (.gogoproto.customname) = "ClientID"];</code>
   * @return The clientId.
   */
  @java.lang.Override
  public java.lang.String getClientId() {
    java.lang.Object ref = clientId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * ClientID is the unique identifier of this oracle request, as specified by
   * the client. This same unique ID will be sent back to the requester with the
   * oracle response.
   * </pre>
   *
   * <code>string client_id = 1 [json_name = "clientId", (.gogoproto.customname) = "ClientID"];</code>
   * @return The bytes for clientId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClientIdBytes() {
    java.lang.Object ref = clientId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clientId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ORACLE_SCRIPT_ID_FIELD_NUMBER = 2;
  private long oracleScriptId_ = 0L;
  /**
   * <pre>
   * OracleScriptID is the unique identifier of the oracle script to be
   * executed.
   * </pre>
   *
   * <code>uint64 oracle_script_id = 2 [json_name = "oracleScriptId", (.gogoproto.customname) = "OracleScriptID", (.gogoproto.casttype) = "OracleScriptID"];</code>
   * @return The oracleScriptId.
   */
  @java.lang.Override
  public long getOracleScriptId() {
    return oracleScriptId_;
  }

  public static final int CALLDATA_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString calldata_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * Calldata is the OBI-encoded calldata bytes available for oracle executor to
   * read.
   * </pre>
   *
   * <code>bytes calldata = 3 [json_name = "calldata"];</code>
   * @return The calldata.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getCalldata() {
    return calldata_;
  }

  public static final int ASK_COUNT_FIELD_NUMBER = 4;
  private long askCount_ = 0L;
  /**
   * <pre>
   * AskCount is the number of validators that are requested to respond to this
   * oracle request. Higher value means more security, at a higher gas cost.
   * </pre>
   *
   * <code>uint64 ask_count = 4 [json_name = "askCount"];</code>
   * @return The askCount.
   */
  @java.lang.Override
  public long getAskCount() {
    return askCount_;
  }

  public static final int MIN_COUNT_FIELD_NUMBER = 5;
  private long minCount_ = 0L;
  /**
   * <pre>
   * MinCount is the minimum number of validators necessary for the request to
   * proceed to the execution phase. Higher value means more security, at the
   * cost of liveness.
   * </pre>
   *
   * <code>uint64 min_count = 5 [json_name = "minCount"];</code>
   * @return The minCount.
   */
  @java.lang.Override
  public long getMinCount() {
    return minCount_;
  }

  public static final int FEE_LIMIT_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> feeLimit_;
  /**
   * <pre>
   * FeeLimit is the maximum tokens that will be paid to all data source
   * providers.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getFeeLimitList() {
    return feeLimit_;
  }
  /**
   * <pre>
   * FeeLimit is the maximum tokens that will be paid to all data source
   * providers.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getFeeLimitOrBuilderList() {
    return feeLimit_;
  }
  /**
   * <pre>
   * FeeLimit is the maximum tokens that will be paid to all data source
   * providers.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getFeeLimitCount() {
    return feeLimit_.size();
  }
  /**
   * <pre>
   * FeeLimit is the maximum tokens that will be paid to all data source
   * providers.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getFeeLimit(int index) {
    return feeLimit_.get(index);
  }
  /**
   * <pre>
   * FeeLimit is the maximum tokens that will be paid to all data source
   * providers.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getFeeLimitOrBuilder(
      int index) {
    return feeLimit_.get(index);
  }

  public static final int PREPARE_GAS_FIELD_NUMBER = 7;
  private long prepareGas_ = 0L;
  /**
   * <pre>
   * PrepareGas is amount of gas to pay to prepare raw requests
   * </pre>
   *
   * <code>uint64 prepare_gas = 7 [json_name = "prepareGas"];</code>
   * @return The prepareGas.
   */
  @java.lang.Override
  public long getPrepareGas() {
    return prepareGas_;
  }

  public static final int EXECUTE_GAS_FIELD_NUMBER = 8;
  private long executeGas_ = 0L;
  /**
   * <pre>
   * ExecuteGas is amount of gas to reserve for executing
   * </pre>
   *
   * <code>uint64 execute_gas = 8 [json_name = "executeGas"];</code>
   * @return The executeGas.
   */
  @java.lang.Override
  public long getExecuteGas() {
    return executeGas_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clientId_);
    }
    if (oracleScriptId_ != 0L) {
      output.writeUInt64(2, oracleScriptId_);
    }
    if (!calldata_.isEmpty()) {
      output.writeBytes(3, calldata_);
    }
    if (askCount_ != 0L) {
      output.writeUInt64(4, askCount_);
    }
    if (minCount_ != 0L) {
      output.writeUInt64(5, minCount_);
    }
    for (int i = 0; i < feeLimit_.size(); i++) {
      output.writeMessage(6, feeLimit_.get(i));
    }
    if (prepareGas_ != 0L) {
      output.writeUInt64(7, prepareGas_);
    }
    if (executeGas_ != 0L) {
      output.writeUInt64(8, executeGas_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clientId_);
    }
    if (oracleScriptId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, oracleScriptId_);
    }
    if (!calldata_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(3, calldata_);
    }
    if (askCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, askCount_);
    }
    if (minCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, minCount_);
    }
    for (int i = 0; i < feeLimit_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, feeLimit_.get(i));
    }
    if (prepareGas_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, prepareGas_);
    }
    if (executeGas_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(8, executeGas_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.oracle.v1.OracleRequestPacketData)) {
      return super.equals(obj);
    }
    com.oracle.v1.OracleRequestPacketData other = (com.oracle.v1.OracleRequestPacketData) obj;

    if (!getClientId()
        .equals(other.getClientId())) return false;
    if (getOracleScriptId()
        != other.getOracleScriptId()) return false;
    if (!getCalldata()
        .equals(other.getCalldata())) return false;
    if (getAskCount()
        != other.getAskCount()) return false;
    if (getMinCount()
        != other.getMinCount()) return false;
    if (!getFeeLimitList()
        .equals(other.getFeeLimitList())) return false;
    if (getPrepareGas()
        != other.getPrepareGas()) return false;
    if (getExecuteGas()
        != other.getExecuteGas()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CLIENT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getClientId().hashCode();
    hash = (37 * hash) + ORACLE_SCRIPT_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOracleScriptId());
    hash = (37 * hash) + CALLDATA_FIELD_NUMBER;
    hash = (53 * hash) + getCalldata().hashCode();
    hash = (37 * hash) + ASK_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getAskCount());
    hash = (37 * hash) + MIN_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMinCount());
    if (getFeeLimitCount() > 0) {
      hash = (37 * hash) + FEE_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getFeeLimitList().hashCode();
    }
    hash = (37 * hash) + PREPARE_GAS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPrepareGas());
    hash = (37 * hash) + EXECUTE_GAS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getExecuteGas());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.oracle.v1.OracleRequestPacketData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.OracleRequestPacketData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.OracleRequestPacketData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.OracleRequestPacketData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.OracleRequestPacketData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.OracleRequestPacketData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.OracleRequestPacketData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.oracle.v1.OracleRequestPacketData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.oracle.v1.OracleRequestPacketData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.oracle.v1.OracleRequestPacketData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.oracle.v1.OracleRequestPacketData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.oracle.v1.OracleRequestPacketData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.oracle.v1.OracleRequestPacketData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * OracleRequestPacketData encodes an oracle request sent from other blockchains
   * to BandChain.
   * </pre>
   *
   * Protobuf type {@code oracle.v1.OracleRequestPacketData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:oracle.v1.OracleRequestPacketData)
      com.oracle.v1.OracleRequestPacketDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.oracle.v1.OracleProto.internal_static_oracle_v1_OracleRequestPacketData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.oracle.v1.OracleProto.internal_static_oracle_v1_OracleRequestPacketData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.oracle.v1.OracleRequestPacketData.class, com.oracle.v1.OracleRequestPacketData.Builder.class);
    }

    // Construct using com.oracle.v1.OracleRequestPacketData.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      clientId_ = "";
      oracleScriptId_ = 0L;
      calldata_ = com.google.protobuf.ByteString.EMPTY;
      askCount_ = 0L;
      minCount_ = 0L;
      if (feeLimitBuilder_ == null) {
        feeLimit_ = java.util.Collections.emptyList();
      } else {
        feeLimit_ = null;
        feeLimitBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      prepareGas_ = 0L;
      executeGas_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.oracle.v1.OracleProto.internal_static_oracle_v1_OracleRequestPacketData_descriptor;
    }

    @java.lang.Override
    public com.oracle.v1.OracleRequestPacketData getDefaultInstanceForType() {
      return com.oracle.v1.OracleRequestPacketData.getDefaultInstance();
    }

    @java.lang.Override
    public com.oracle.v1.OracleRequestPacketData build() {
      com.oracle.v1.OracleRequestPacketData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.oracle.v1.OracleRequestPacketData buildPartial() {
      com.oracle.v1.OracleRequestPacketData result = new com.oracle.v1.OracleRequestPacketData(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.oracle.v1.OracleRequestPacketData result) {
      if (feeLimitBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          feeLimit_ = java.util.Collections.unmodifiableList(feeLimit_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.feeLimit_ = feeLimit_;
      } else {
        result.feeLimit_ = feeLimitBuilder_.build();
      }
    }

    private void buildPartial0(com.oracle.v1.OracleRequestPacketData result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.clientId_ = clientId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.oracleScriptId_ = oracleScriptId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.calldata_ = calldata_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.askCount_ = askCount_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.minCount_ = minCount_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.prepareGas_ = prepareGas_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.executeGas_ = executeGas_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.oracle.v1.OracleRequestPacketData) {
        return mergeFrom((com.oracle.v1.OracleRequestPacketData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.oracle.v1.OracleRequestPacketData other) {
      if (other == com.oracle.v1.OracleRequestPacketData.getDefaultInstance()) return this;
      if (!other.getClientId().isEmpty()) {
        clientId_ = other.clientId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getOracleScriptId() != 0L) {
        setOracleScriptId(other.getOracleScriptId());
      }
      if (other.getCalldata() != com.google.protobuf.ByteString.EMPTY) {
        setCalldata(other.getCalldata());
      }
      if (other.getAskCount() != 0L) {
        setAskCount(other.getAskCount());
      }
      if (other.getMinCount() != 0L) {
        setMinCount(other.getMinCount());
      }
      if (feeLimitBuilder_ == null) {
        if (!other.feeLimit_.isEmpty()) {
          if (feeLimit_.isEmpty()) {
            feeLimit_ = other.feeLimit_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureFeeLimitIsMutable();
            feeLimit_.addAll(other.feeLimit_);
          }
          onChanged();
        }
      } else {
        if (!other.feeLimit_.isEmpty()) {
          if (feeLimitBuilder_.isEmpty()) {
            feeLimitBuilder_.dispose();
            feeLimitBuilder_ = null;
            feeLimit_ = other.feeLimit_;
            bitField0_ = (bitField0_ & ~0x00000020);
            feeLimitBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFeeLimitFieldBuilder() : null;
          } else {
            feeLimitBuilder_.addAllMessages(other.feeLimit_);
          }
        }
      }
      if (other.getPrepareGas() != 0L) {
        setPrepareGas(other.getPrepareGas());
      }
      if (other.getExecuteGas() != 0L) {
        setExecuteGas(other.getExecuteGas());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              clientId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              oracleScriptId_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              calldata_ = input.readBytes();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              askCount_ = input.readUInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              minCount_ = input.readUInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (feeLimitBuilder_ == null) {
                ensureFeeLimitIsMutable();
                feeLimit_.add(m);
              } else {
                feeLimitBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 56: {
              prepareGas_ = input.readUInt64();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              executeGas_ = input.readUInt64();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object clientId_ = "";
    /**
     * <pre>
     * ClientID is the unique identifier of this oracle request, as specified by
     * the client. This same unique ID will be sent back to the requester with the
     * oracle response.
     * </pre>
     *
     * <code>string client_id = 1 [json_name = "clientId", (.gogoproto.customname) = "ClientID"];</code>
     * @return The clientId.
     */
    public java.lang.String getClientId() {
      java.lang.Object ref = clientId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * ClientID is the unique identifier of this oracle request, as specified by
     * the client. This same unique ID will be sent back to the requester with the
     * oracle response.
     * </pre>
     *
     * <code>string client_id = 1 [json_name = "clientId", (.gogoproto.customname) = "ClientID"];</code>
     * @return The bytes for clientId.
     */
    public com.google.protobuf.ByteString
        getClientIdBytes() {
      java.lang.Object ref = clientId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * ClientID is the unique identifier of this oracle request, as specified by
     * the client. This same unique ID will be sent back to the requester with the
     * oracle response.
     * </pre>
     *
     * <code>string client_id = 1 [json_name = "clientId", (.gogoproto.customname) = "ClientID"];</code>
     * @param value The clientId to set.
     * @return This builder for chaining.
     */
    public Builder setClientId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      clientId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ClientID is the unique identifier of this oracle request, as specified by
     * the client. This same unique ID will be sent back to the requester with the
     * oracle response.
     * </pre>
     *
     * <code>string client_id = 1 [json_name = "clientId", (.gogoproto.customname) = "ClientID"];</code>
     * @return This builder for chaining.
     */
    public Builder clearClientId() {
      clientId_ = getDefaultInstance().getClientId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ClientID is the unique identifier of this oracle request, as specified by
     * the client. This same unique ID will be sent back to the requester with the
     * oracle response.
     * </pre>
     *
     * <code>string client_id = 1 [json_name = "clientId", (.gogoproto.customname) = "ClientID"];</code>
     * @param value The bytes for clientId to set.
     * @return This builder for chaining.
     */
    public Builder setClientIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      clientId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private long oracleScriptId_ ;
    /**
     * <pre>
     * OracleScriptID is the unique identifier of the oracle script to be
     * executed.
     * </pre>
     *
     * <code>uint64 oracle_script_id = 2 [json_name = "oracleScriptId", (.gogoproto.customname) = "OracleScriptID", (.gogoproto.casttype) = "OracleScriptID"];</code>
     * @return The oracleScriptId.
     */
    @java.lang.Override
    public long getOracleScriptId() {
      return oracleScriptId_;
    }
    /**
     * <pre>
     * OracleScriptID is the unique identifier of the oracle script to be
     * executed.
     * </pre>
     *
     * <code>uint64 oracle_script_id = 2 [json_name = "oracleScriptId", (.gogoproto.customname) = "OracleScriptID", (.gogoproto.casttype) = "OracleScriptID"];</code>
     * @param value The oracleScriptId to set.
     * @return This builder for chaining.
     */
    public Builder setOracleScriptId(long value) {

      oracleScriptId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * OracleScriptID is the unique identifier of the oracle script to be
     * executed.
     * </pre>
     *
     * <code>uint64 oracle_script_id = 2 [json_name = "oracleScriptId", (.gogoproto.customname) = "OracleScriptID", (.gogoproto.casttype) = "OracleScriptID"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOracleScriptId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      oracleScriptId_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString calldata_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Calldata is the OBI-encoded calldata bytes available for oracle executor to
     * read.
     * </pre>
     *
     * <code>bytes calldata = 3 [json_name = "calldata"];</code>
     * @return The calldata.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCalldata() {
      return calldata_;
    }
    /**
     * <pre>
     * Calldata is the OBI-encoded calldata bytes available for oracle executor to
     * read.
     * </pre>
     *
     * <code>bytes calldata = 3 [json_name = "calldata"];</code>
     * @param value The calldata to set.
     * @return This builder for chaining.
     */
    public Builder setCalldata(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      calldata_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Calldata is the OBI-encoded calldata bytes available for oracle executor to
     * read.
     * </pre>
     *
     * <code>bytes calldata = 3 [json_name = "calldata"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCalldata() {
      bitField0_ = (bitField0_ & ~0x00000004);
      calldata_ = getDefaultInstance().getCalldata();
      onChanged();
      return this;
    }

    private long askCount_ ;
    /**
     * <pre>
     * AskCount is the number of validators that are requested to respond to this
     * oracle request. Higher value means more security, at a higher gas cost.
     * </pre>
     *
     * <code>uint64 ask_count = 4 [json_name = "askCount"];</code>
     * @return The askCount.
     */
    @java.lang.Override
    public long getAskCount() {
      return askCount_;
    }
    /**
     * <pre>
     * AskCount is the number of validators that are requested to respond to this
     * oracle request. Higher value means more security, at a higher gas cost.
     * </pre>
     *
     * <code>uint64 ask_count = 4 [json_name = "askCount"];</code>
     * @param value The askCount to set.
     * @return This builder for chaining.
     */
    public Builder setAskCount(long value) {

      askCount_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * AskCount is the number of validators that are requested to respond to this
     * oracle request. Higher value means more security, at a higher gas cost.
     * </pre>
     *
     * <code>uint64 ask_count = 4 [json_name = "askCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAskCount() {
      bitField0_ = (bitField0_ & ~0x00000008);
      askCount_ = 0L;
      onChanged();
      return this;
    }

    private long minCount_ ;
    /**
     * <pre>
     * MinCount is the minimum number of validators necessary for the request to
     * proceed to the execution phase. Higher value means more security, at the
     * cost of liveness.
     * </pre>
     *
     * <code>uint64 min_count = 5 [json_name = "minCount"];</code>
     * @return The minCount.
     */
    @java.lang.Override
    public long getMinCount() {
      return minCount_;
    }
    /**
     * <pre>
     * MinCount is the minimum number of validators necessary for the request to
     * proceed to the execution phase. Higher value means more security, at the
     * cost of liveness.
     * </pre>
     *
     * <code>uint64 min_count = 5 [json_name = "minCount"];</code>
     * @param value The minCount to set.
     * @return This builder for chaining.
     */
    public Builder setMinCount(long value) {

      minCount_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MinCount is the minimum number of validators necessary for the request to
     * proceed to the execution phase. Higher value means more security, at the
     * cost of liveness.
     * </pre>
     *
     * <code>uint64 min_count = 5 [json_name = "minCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMinCount() {
      bitField0_ = (bitField0_ & ~0x00000010);
      minCount_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> feeLimit_ =
      java.util.Collections.emptyList();
    private void ensureFeeLimitIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        feeLimit_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(feeLimit_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> feeLimitBuilder_;

    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getFeeLimitList() {
      if (feeLimitBuilder_ == null) {
        return java.util.Collections.unmodifiableList(feeLimit_);
      } else {
        return feeLimitBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getFeeLimitCount() {
      if (feeLimitBuilder_ == null) {
        return feeLimit_.size();
      } else {
        return feeLimitBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getFeeLimit(int index) {
      if (feeLimitBuilder_ == null) {
        return feeLimit_.get(index);
      } else {
        return feeLimitBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setFeeLimit(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (feeLimitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeeLimitIsMutable();
        feeLimit_.set(index, value);
        onChanged();
      } else {
        feeLimitBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setFeeLimit(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (feeLimitBuilder_ == null) {
        ensureFeeLimitIsMutable();
        feeLimit_.set(index, builderForValue.build());
        onChanged();
      } else {
        feeLimitBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addFeeLimit(com.cosmos.base.v1beta1.Coin value) {
      if (feeLimitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeeLimitIsMutable();
        feeLimit_.add(value);
        onChanged();
      } else {
        feeLimitBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addFeeLimit(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (feeLimitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeeLimitIsMutable();
        feeLimit_.add(index, value);
        onChanged();
      } else {
        feeLimitBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addFeeLimit(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (feeLimitBuilder_ == null) {
        ensureFeeLimitIsMutable();
        feeLimit_.add(builderForValue.build());
        onChanged();
      } else {
        feeLimitBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addFeeLimit(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (feeLimitBuilder_ == null) {
        ensureFeeLimitIsMutable();
        feeLimit_.add(index, builderForValue.build());
        onChanged();
      } else {
        feeLimitBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllFeeLimit(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (feeLimitBuilder_ == null) {
        ensureFeeLimitIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, feeLimit_);
        onChanged();
      } else {
        feeLimitBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearFeeLimit() {
      if (feeLimitBuilder_ == null) {
        feeLimit_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        feeLimitBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeFeeLimit(int index) {
      if (feeLimitBuilder_ == null) {
        ensureFeeLimitIsMutable();
        feeLimit_.remove(index);
        onChanged();
      } else {
        feeLimitBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getFeeLimitBuilder(
        int index) {
      return getFeeLimitFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getFeeLimitOrBuilder(
        int index) {
      if (feeLimitBuilder_ == null) {
        return feeLimit_.get(index);  } else {
        return feeLimitBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getFeeLimitOrBuilderList() {
      if (feeLimitBuilder_ != null) {
        return feeLimitBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(feeLimit_);
      }
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addFeeLimitBuilder() {
      return getFeeLimitFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addFeeLimitBuilder(
        int index) {
      return getFeeLimitFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * FeeLimit is the maximum tokens that will be paid to all data source
     * providers.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_limit = 6 [json_name = "feeLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getFeeLimitBuilderList() {
      return getFeeLimitFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getFeeLimitFieldBuilder() {
      if (feeLimitBuilder_ == null) {
        feeLimitBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                feeLimit_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        feeLimit_ = null;
      }
      return feeLimitBuilder_;
    }

    private long prepareGas_ ;
    /**
     * <pre>
     * PrepareGas is amount of gas to pay to prepare raw requests
     * </pre>
     *
     * <code>uint64 prepare_gas = 7 [json_name = "prepareGas"];</code>
     * @return The prepareGas.
     */
    @java.lang.Override
    public long getPrepareGas() {
      return prepareGas_;
    }
    /**
     * <pre>
     * PrepareGas is amount of gas to pay to prepare raw requests
     * </pre>
     *
     * <code>uint64 prepare_gas = 7 [json_name = "prepareGas"];</code>
     * @param value The prepareGas to set.
     * @return This builder for chaining.
     */
    public Builder setPrepareGas(long value) {

      prepareGas_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * PrepareGas is amount of gas to pay to prepare raw requests
     * </pre>
     *
     * <code>uint64 prepare_gas = 7 [json_name = "prepareGas"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPrepareGas() {
      bitField0_ = (bitField0_ & ~0x00000040);
      prepareGas_ = 0L;
      onChanged();
      return this;
    }

    private long executeGas_ ;
    /**
     * <pre>
     * ExecuteGas is amount of gas to reserve for executing
     * </pre>
     *
     * <code>uint64 execute_gas = 8 [json_name = "executeGas"];</code>
     * @return The executeGas.
     */
    @java.lang.Override
    public long getExecuteGas() {
      return executeGas_;
    }
    /**
     * <pre>
     * ExecuteGas is amount of gas to reserve for executing
     * </pre>
     *
     * <code>uint64 execute_gas = 8 [json_name = "executeGas"];</code>
     * @param value The executeGas to set.
     * @return This builder for chaining.
     */
    public Builder setExecuteGas(long value) {

      executeGas_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ExecuteGas is amount of gas to reserve for executing
     * </pre>
     *
     * <code>uint64 execute_gas = 8 [json_name = "executeGas"];</code>
     * @return This builder for chaining.
     */
    public Builder clearExecuteGas() {
      bitField0_ = (bitField0_ & ~0x00000080);
      executeGas_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:oracle.v1.OracleRequestPacketData)
  }

  // @@protoc_insertion_point(class_scope:oracle.v1.OracleRequestPacketData)
  private static final com.oracle.v1.OracleRequestPacketData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.oracle.v1.OracleRequestPacketData();
  }

  public static com.oracle.v1.OracleRequestPacketData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OracleRequestPacketData>
      PARSER = new com.google.protobuf.AbstractParser<OracleRequestPacketData>() {
    @java.lang.Override
    public OracleRequestPacketData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<OracleRequestPacketData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OracleRequestPacketData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.oracle.v1.OracleRequestPacketData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


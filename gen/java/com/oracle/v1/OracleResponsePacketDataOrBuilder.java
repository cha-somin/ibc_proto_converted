// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: band/oracle/v1/oracle.proto

package com.oracle.v1;

public interface OracleResponsePacketDataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:oracle.v1.OracleResponsePacketData)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * ClientID is the unique identifier matched with that of the oracle request
   * packet.
   * </pre>
   *
   * <code>string client_id = 1 [json_name = "clientId", (.gogoproto.customname) = "ClientID"];</code>
   * @return The clientId.
   */
  java.lang.String getClientId();
  /**
   * <pre>
   * ClientID is the unique identifier matched with that of the oracle request
   * packet.
   * </pre>
   *
   * <code>string client_id = 1 [json_name = "clientId", (.gogoproto.customname) = "ClientID"];</code>
   * @return The bytes for clientId.
   */
  com.google.protobuf.ByteString
      getClientIdBytes();

  /**
   * <pre>
   * RequestID is BandChain's unique identifier for this oracle request.
   * </pre>
   *
   * <code>uint64 request_id = 2 [json_name = "requestId", (.gogoproto.customname) = "RequestID", (.gogoproto.casttype) = "RequestID"];</code>
   * @return The requestId.
   */
  long getRequestId();

  /**
   * <pre>
   * AnsCount is the number of validators among to the asked validators that
   * actually responded to this oracle request prior to this oracle request
   * being resolved.
   * </pre>
   *
   * <code>uint64 ans_count = 3 [json_name = "ansCount"];</code>
   * @return The ansCount.
   */
  long getAnsCount();

  /**
   * <pre>
   * RequestTime is the UNIX epoch time at which the request was sent to
   * BandChain.
   * </pre>
   *
   * <code>int64 request_time = 4 [json_name = "requestTime"];</code>
   * @return The requestTime.
   */
  long getRequestTime();

  /**
   * <pre>
   * ResolveTime is the UNIX epoch time at which the request was resolved to the
   * final result.
   * </pre>
   *
   * <code>int64 resolve_time = 5 [json_name = "resolveTime"];</code>
   * @return The resolveTime.
   */
  long getResolveTime();

  /**
   * <pre>
   * ResolveStatus is the status of this oracle request, which can be OK,
   * FAILURE, or EXPIRED.
   * </pre>
   *
   * <code>.oracle.v1.ResolveStatus resolve_status = 6 [json_name = "resolveStatus"];</code>
   * @return The enum numeric value on the wire for resolveStatus.
   */
  int getResolveStatusValue();
  /**
   * <pre>
   * ResolveStatus is the status of this oracle request, which can be OK,
   * FAILURE, or EXPIRED.
   * </pre>
   *
   * <code>.oracle.v1.ResolveStatus resolve_status = 6 [json_name = "resolveStatus"];</code>
   * @return The resolveStatus.
   */
  com.oracle.v1.ResolveStatus getResolveStatus();

  /**
   * <pre>
   * Result is the final aggregated value encoded in OBI format. Only available
   * if status if OK.
   * </pre>
   *
   * <code>bytes result = 7 [json_name = "result"];</code>
   * @return The result.
   */
  com.google.protobuf.ByteString getResult();
}

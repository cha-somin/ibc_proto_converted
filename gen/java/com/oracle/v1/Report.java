// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: band/oracle/v1/oracle.proto

package com.oracle.v1;

/**
 * <pre>
 * Report is the data structure for storing reports in the storage.
 * </pre>
 *
 * Protobuf type {@code oracle.v1.Report}
 */
public final class Report extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:oracle.v1.Report)
    ReportOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Report.newBuilder() to construct.
  private Report(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Report() {
    validator_ = "";
    rawReports_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Report();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.oracle.v1.OracleProto.internal_static_oracle_v1_Report_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.oracle.v1.OracleProto.internal_static_oracle_v1_Report_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.oracle.v1.Report.class, com.oracle.v1.Report.Builder.class);
  }

  public static final int VALIDATOR_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object validator_ = "";
  /**
   * <pre>
   * Validator is a validator address who submit the report
   * </pre>
   *
   * <code>string validator = 1 [json_name = "validator"];</code>
   * @return The validator.
   */
  @java.lang.Override
  public java.lang.String getValidator() {
    java.lang.Object ref = validator_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      validator_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Validator is a validator address who submit the report
   * </pre>
   *
   * <code>string validator = 1 [json_name = "validator"];</code>
   * @return The bytes for validator.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getValidatorBytes() {
    java.lang.Object ref = validator_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      validator_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int IN_BEFORE_RESOLVE_FIELD_NUMBER = 2;
  private boolean inBeforeResolve_ = false;
  /**
   * <pre>
   * InBeforeResolve indicates whether the report is submitted before the
   * request resolved
   * </pre>
   *
   * <code>bool in_before_resolve = 2 [json_name = "inBeforeResolve"];</code>
   * @return The inBeforeResolve.
   */
  @java.lang.Override
  public boolean getInBeforeResolve() {
    return inBeforeResolve_;
  }

  public static final int RAW_REPORTS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.oracle.v1.RawReport> rawReports_;
  /**
   * <pre>
   * RawReports is list of raw reports provided by the validator.
   * Each raw report has different external ID
   * </pre>
   *
   * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<com.oracle.v1.RawReport> getRawReportsList() {
    return rawReports_;
  }
  /**
   * <pre>
   * RawReports is list of raw reports provided by the validator.
   * Each raw report has different external ID
   * </pre>
   *
   * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.oracle.v1.RawReportOrBuilder> 
      getRawReportsOrBuilderList() {
    return rawReports_;
  }
  /**
   * <pre>
   * RawReports is list of raw reports provided by the validator.
   * Each raw report has different external ID
   * </pre>
   *
   * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public int getRawReportsCount() {
    return rawReports_.size();
  }
  /**
   * <pre>
   * RawReports is list of raw reports provided by the validator.
   * Each raw report has different external ID
   * </pre>
   *
   * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.oracle.v1.RawReport getRawReports(int index) {
    return rawReports_.get(index);
  }
  /**
   * <pre>
   * RawReports is list of raw reports provided by the validator.
   * Each raw report has different external ID
   * </pre>
   *
   * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.oracle.v1.RawReportOrBuilder getRawReportsOrBuilder(
      int index) {
    return rawReports_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(validator_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, validator_);
    }
    if (inBeforeResolve_ != false) {
      output.writeBool(2, inBeforeResolve_);
    }
    for (int i = 0; i < rawReports_.size(); i++) {
      output.writeMessage(3, rawReports_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(validator_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, validator_);
    }
    if (inBeforeResolve_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, inBeforeResolve_);
    }
    for (int i = 0; i < rawReports_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, rawReports_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.oracle.v1.Report)) {
      return super.equals(obj);
    }
    com.oracle.v1.Report other = (com.oracle.v1.Report) obj;

    if (!getValidator()
        .equals(other.getValidator())) return false;
    if (getInBeforeResolve()
        != other.getInBeforeResolve()) return false;
    if (!getRawReportsList()
        .equals(other.getRawReportsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VALIDATOR_FIELD_NUMBER;
    hash = (53 * hash) + getValidator().hashCode();
    hash = (37 * hash) + IN_BEFORE_RESOLVE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getInBeforeResolve());
    if (getRawReportsCount() > 0) {
      hash = (37 * hash) + RAW_REPORTS_FIELD_NUMBER;
      hash = (53 * hash) + getRawReportsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.oracle.v1.Report parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.Report parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.Report parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.Report parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.Report parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.oracle.v1.Report parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.oracle.v1.Report parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.oracle.v1.Report parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.oracle.v1.Report parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.oracle.v1.Report parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.oracle.v1.Report parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.oracle.v1.Report parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.oracle.v1.Report prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Report is the data structure for storing reports in the storage.
   * </pre>
   *
   * Protobuf type {@code oracle.v1.Report}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:oracle.v1.Report)
      com.oracle.v1.ReportOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.oracle.v1.OracleProto.internal_static_oracle_v1_Report_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.oracle.v1.OracleProto.internal_static_oracle_v1_Report_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.oracle.v1.Report.class, com.oracle.v1.Report.Builder.class);
    }

    // Construct using com.oracle.v1.Report.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      validator_ = "";
      inBeforeResolve_ = false;
      if (rawReportsBuilder_ == null) {
        rawReports_ = java.util.Collections.emptyList();
      } else {
        rawReports_ = null;
        rawReportsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.oracle.v1.OracleProto.internal_static_oracle_v1_Report_descriptor;
    }

    @java.lang.Override
    public com.oracle.v1.Report getDefaultInstanceForType() {
      return com.oracle.v1.Report.getDefaultInstance();
    }

    @java.lang.Override
    public com.oracle.v1.Report build() {
      com.oracle.v1.Report result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.oracle.v1.Report buildPartial() {
      com.oracle.v1.Report result = new com.oracle.v1.Report(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.oracle.v1.Report result) {
      if (rawReportsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          rawReports_ = java.util.Collections.unmodifiableList(rawReports_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.rawReports_ = rawReports_;
      } else {
        result.rawReports_ = rawReportsBuilder_.build();
      }
    }

    private void buildPartial0(com.oracle.v1.Report result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.validator_ = validator_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.inBeforeResolve_ = inBeforeResolve_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.oracle.v1.Report) {
        return mergeFrom((com.oracle.v1.Report)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.oracle.v1.Report other) {
      if (other == com.oracle.v1.Report.getDefaultInstance()) return this;
      if (!other.getValidator().isEmpty()) {
        validator_ = other.validator_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getInBeforeResolve() != false) {
        setInBeforeResolve(other.getInBeforeResolve());
      }
      if (rawReportsBuilder_ == null) {
        if (!other.rawReports_.isEmpty()) {
          if (rawReports_.isEmpty()) {
            rawReports_ = other.rawReports_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRawReportsIsMutable();
            rawReports_.addAll(other.rawReports_);
          }
          onChanged();
        }
      } else {
        if (!other.rawReports_.isEmpty()) {
          if (rawReportsBuilder_.isEmpty()) {
            rawReportsBuilder_.dispose();
            rawReportsBuilder_ = null;
            rawReports_ = other.rawReports_;
            bitField0_ = (bitField0_ & ~0x00000004);
            rawReportsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRawReportsFieldBuilder() : null;
          } else {
            rawReportsBuilder_.addAllMessages(other.rawReports_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              validator_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              inBeforeResolve_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              com.oracle.v1.RawReport m =
                  input.readMessage(
                      com.oracle.v1.RawReport.parser(),
                      extensionRegistry);
              if (rawReportsBuilder_ == null) {
                ensureRawReportsIsMutable();
                rawReports_.add(m);
              } else {
                rawReportsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object validator_ = "";
    /**
     * <pre>
     * Validator is a validator address who submit the report
     * </pre>
     *
     * <code>string validator = 1 [json_name = "validator"];</code>
     * @return The validator.
     */
    public java.lang.String getValidator() {
      java.lang.Object ref = validator_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        validator_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Validator is a validator address who submit the report
     * </pre>
     *
     * <code>string validator = 1 [json_name = "validator"];</code>
     * @return The bytes for validator.
     */
    public com.google.protobuf.ByteString
        getValidatorBytes() {
      java.lang.Object ref = validator_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        validator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Validator is a validator address who submit the report
     * </pre>
     *
     * <code>string validator = 1 [json_name = "validator"];</code>
     * @param value The validator to set.
     * @return This builder for chaining.
     */
    public Builder setValidator(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      validator_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Validator is a validator address who submit the report
     * </pre>
     *
     * <code>string validator = 1 [json_name = "validator"];</code>
     * @return This builder for chaining.
     */
    public Builder clearValidator() {
      validator_ = getDefaultInstance().getValidator();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Validator is a validator address who submit the report
     * </pre>
     *
     * <code>string validator = 1 [json_name = "validator"];</code>
     * @param value The bytes for validator to set.
     * @return This builder for chaining.
     */
    public Builder setValidatorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      validator_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private boolean inBeforeResolve_ ;
    /**
     * <pre>
     * InBeforeResolve indicates whether the report is submitted before the
     * request resolved
     * </pre>
     *
     * <code>bool in_before_resolve = 2 [json_name = "inBeforeResolve"];</code>
     * @return The inBeforeResolve.
     */
    @java.lang.Override
    public boolean getInBeforeResolve() {
      return inBeforeResolve_;
    }
    /**
     * <pre>
     * InBeforeResolve indicates whether the report is submitted before the
     * request resolved
     * </pre>
     *
     * <code>bool in_before_resolve = 2 [json_name = "inBeforeResolve"];</code>
     * @param value The inBeforeResolve to set.
     * @return This builder for chaining.
     */
    public Builder setInBeforeResolve(boolean value) {

      inBeforeResolve_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * InBeforeResolve indicates whether the report is submitted before the
     * request resolved
     * </pre>
     *
     * <code>bool in_before_resolve = 2 [json_name = "inBeforeResolve"];</code>
     * @return This builder for chaining.
     */
    public Builder clearInBeforeResolve() {
      bitField0_ = (bitField0_ & ~0x00000002);
      inBeforeResolve_ = false;
      onChanged();
      return this;
    }

    private java.util.List<com.oracle.v1.RawReport> rawReports_ =
      java.util.Collections.emptyList();
    private void ensureRawReportsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        rawReports_ = new java.util.ArrayList<com.oracle.v1.RawReport>(rawReports_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.oracle.v1.RawReport, com.oracle.v1.RawReport.Builder, com.oracle.v1.RawReportOrBuilder> rawReportsBuilder_;

    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.oracle.v1.RawReport> getRawReportsList() {
      if (rawReportsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(rawReports_);
      } else {
        return rawReportsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public int getRawReportsCount() {
      if (rawReportsBuilder_ == null) {
        return rawReports_.size();
      } else {
        return rawReportsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public com.oracle.v1.RawReport getRawReports(int index) {
      if (rawReportsBuilder_ == null) {
        return rawReports_.get(index);
      } else {
        return rawReportsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public Builder setRawReports(
        int index, com.oracle.v1.RawReport value) {
      if (rawReportsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRawReportsIsMutable();
        rawReports_.set(index, value);
        onChanged();
      } else {
        rawReportsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public Builder setRawReports(
        int index, com.oracle.v1.RawReport.Builder builderForValue) {
      if (rawReportsBuilder_ == null) {
        ensureRawReportsIsMutable();
        rawReports_.set(index, builderForValue.build());
        onChanged();
      } else {
        rawReportsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public Builder addRawReports(com.oracle.v1.RawReport value) {
      if (rawReportsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRawReportsIsMutable();
        rawReports_.add(value);
        onChanged();
      } else {
        rawReportsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public Builder addRawReports(
        int index, com.oracle.v1.RawReport value) {
      if (rawReportsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRawReportsIsMutable();
        rawReports_.add(index, value);
        onChanged();
      } else {
        rawReportsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public Builder addRawReports(
        com.oracle.v1.RawReport.Builder builderForValue) {
      if (rawReportsBuilder_ == null) {
        ensureRawReportsIsMutable();
        rawReports_.add(builderForValue.build());
        onChanged();
      } else {
        rawReportsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public Builder addRawReports(
        int index, com.oracle.v1.RawReport.Builder builderForValue) {
      if (rawReportsBuilder_ == null) {
        ensureRawReportsIsMutable();
        rawReports_.add(index, builderForValue.build());
        onChanged();
      } else {
        rawReportsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAllRawReports(
        java.lang.Iterable<? extends com.oracle.v1.RawReport> values) {
      if (rawReportsBuilder_ == null) {
        ensureRawReportsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rawReports_);
        onChanged();
      } else {
        rawReportsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearRawReports() {
      if (rawReportsBuilder_ == null) {
        rawReports_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        rawReportsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public Builder removeRawReports(int index) {
      if (rawReportsBuilder_ == null) {
        ensureRawReportsIsMutable();
        rawReports_.remove(index);
        onChanged();
      } else {
        rawReportsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public com.oracle.v1.RawReport.Builder getRawReportsBuilder(
        int index) {
      return getRawReportsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public com.oracle.v1.RawReportOrBuilder getRawReportsOrBuilder(
        int index) {
      if (rawReportsBuilder_ == null) {
        return rawReports_.get(index);  } else {
        return rawReportsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<? extends com.oracle.v1.RawReportOrBuilder> 
         getRawReportsOrBuilderList() {
      if (rawReportsBuilder_ != null) {
        return rawReportsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(rawReports_);
      }
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public com.oracle.v1.RawReport.Builder addRawReportsBuilder() {
      return getRawReportsFieldBuilder().addBuilder(
          com.oracle.v1.RawReport.getDefaultInstance());
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public com.oracle.v1.RawReport.Builder addRawReportsBuilder(
        int index) {
      return getRawReportsFieldBuilder().addBuilder(
          index, com.oracle.v1.RawReport.getDefaultInstance());
    }
    /**
     * <pre>
     * RawReports is list of raw reports provided by the validator.
     * Each raw report has different external ID
     * </pre>
     *
     * <code>repeated .oracle.v1.RawReport raw_reports = 3 [json_name = "rawReports", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.oracle.v1.RawReport.Builder> 
         getRawReportsBuilderList() {
      return getRawReportsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.oracle.v1.RawReport, com.oracle.v1.RawReport.Builder, com.oracle.v1.RawReportOrBuilder> 
        getRawReportsFieldBuilder() {
      if (rawReportsBuilder_ == null) {
        rawReportsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.oracle.v1.RawReport, com.oracle.v1.RawReport.Builder, com.oracle.v1.RawReportOrBuilder>(
                rawReports_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        rawReports_ = null;
      }
      return rawReportsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:oracle.v1.Report)
  }

  // @@protoc_insertion_point(class_scope:oracle.v1.Report)
  private static final com.oracle.v1.Report DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.oracle.v1.Report();
  }

  public static com.oracle.v1.Report getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Report>
      PARSER = new com.google.protobuf.AbstractParser<Report>() {
    @java.lang.Override
    public Report parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Report> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Report> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.oracle.v1.Report getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


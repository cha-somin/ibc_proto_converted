// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stride/stakeibc/host_zone.proto

package com.stride.stakeibc;

public final class HostZoneProto {
  private HostZoneProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_stride_stakeibc_HostZone_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_stride_stakeibc_HostZone_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037stride/stakeibc/host_zone.proto\022\017strid" +
      "e.stakeibc\032\037stride/stakeibc/validator.pr" +
      "oto\032!stride/stakeibc/ica_account.proto\032\024" +
      "gogoproto/gogo.proto\032\031cosmos_proto/cosmo" +
      "s.proto\"\212\n\n\010HostZone\022\031\n\010chain_id\030\001 \001(\tR\007" +
      "chainId\022#\n\rconnection_id\030\002 \001(\tR\014connecti" +
      "onId\022\"\n\014bech32prefix\030\021 \001(\tR\014bech32prefix" +
      "\022.\n\023transfer_channel_id\030\014 \001(\tR\021transferC" +
      "hannelId\022:\n\nvalidators\030\003 \003(\0132\032.stride.st" +
      "akeibc.ValidatorR\nvalidators\022Q\n\026blacklis" +
      "ted_validators\030\004 \003(\0132\032.stride.stakeibc.V" +
      "alidatorR\025blacklistedValidators\022J\n\022withd" +
      "rawal_account\030\005 \001(\0132\033.stride.stakeibc.IC" +
      "AAccountR\021withdrawalAccount\022<\n\013fee_accou" +
      "nt\030\006 \001(\0132\033.stride.stakeibc.ICAAccountR\nf" +
      "eeAccount\022J\n\022delegation_account\030\007 \001(\0132\033." +
      "stride.stakeibc.ICAAccountR\021delegationAc" +
      "count\022J\n\022redemption_account\030\020 \001(\0132\033.stri" +
      "de.stakeibc.ICAAccountR\021redemptionAccoun" +
      "t\022\033\n\tibc_denom\030\010 \001(\tR\010ibcDenom\022\035\n\nhost_d" +
      "enom\030\t \001(\tR\thostDenom\022n\n\024last_redemption" +
      "_rate\030\n \001(\tB<\310\336\037\000\332\336\037&github.com/cosmos/c" +
      "osmos-sdk/types.Dec\322\264-\ncosmos.DecR\022lastR" +
      "edemptionRate\022e\n\017redemption_rate\030\013 \001(\tB<" +
      "\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/typ" +
      "es.Dec\322\264-\ncosmos.DecR\016redemptionRate\022/\n\023" +
      "unbonding_frequency\030\016 \001(\004R\022unbondingFreq" +
      "uency\022M\n\nstaked_bal\030\r \001(\tB.\310\336\037\000\332\336\037&githu" +
      "b.com/cosmos/cosmos-sdk/types.IntR\tstake" +
      "dBal\022,\n\007address\030\022 \001(\tB\022\362\336\037\016yaml:\"address" +
      "\"R\007address\022\026\n\006halted\030\023 \001(\010R\006halted\022l\n\023mi" +
      "n_redemption_rate\030\024 \001(\tB<\310\336\037\000\332\336\037&github." +
      "com/cosmos/cosmos-sdk/types.Dec\322\264-\ncosmo" +
      "s.DecR\021minRedemptionRate\022l\n\023max_redempti" +
      "on_rate\030\025 \001(\tB<\310\336\037\000\332\336\037&github.com/cosmos" +
      "/cosmos-sdk/types.Dec\322\264-\ncosmos.DecR\021max" +
      "RedemptionRateJ\004\010\017\020\020B\264\001\n\023com.stride.stak" +
      "eibcB\rHostZoneProtoP\001Z1github.com/Stride" +
      "-Labs/stride/v9/x/stakeibc/types\242\002\003SSX\252\002" +
      "\017Stride.Stakeibc\312\002\017Stride\\Stakeibc\342\002\033Str" +
      "ide\\Stakeibc\\GPBMetadata\352\002\020Stride::Stake" +
      "ibcb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.stride.stakeibc.ValidatorProto.getDescriptor(),
          com.stride.stakeibc.IcaAccountProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
        });
    internal_static_stride_stakeibc_HostZone_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_stride_stakeibc_HostZone_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_stride_stakeibc_HostZone_descriptor,
        new java.lang.String[] { "ChainId", "ConnectionId", "Bech32Prefix", "TransferChannelId", "Validators", "BlacklistedValidators", "WithdrawalAccount", "FeeAccount", "DelegationAccount", "RedemptionAccount", "IbcDenom", "HostDenom", "LastRedemptionRate", "RedemptionRate", "UnbondingFrequency", "StakedBal", "Address", "Halted", "MinRedemptionRate", "MaxRedemptionRate", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.cosmos_proto.CosmosProto.scalar);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.stride.stakeibc.ValidatorProto.getDescriptor();
    com.stride.stakeibc.IcaAccountProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

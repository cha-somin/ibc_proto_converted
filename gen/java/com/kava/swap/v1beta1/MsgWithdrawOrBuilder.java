// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kava/swap/v1beta1/tx.proto

package com.kava.swap.v1beta1;

public interface MsgWithdrawOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kava.swap.v1beta1.MsgWithdraw)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * from represents the address we are withdrawing for
   * </pre>
   *
   * <code>string from = 1 [json_name = "from", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The from.
   */
  java.lang.String getFrom();
  /**
   * <pre>
   * from represents the address we are withdrawing for
   * </pre>
   *
   * <code>string from = 1 [json_name = "from", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The bytes for from.
   */
  com.google.protobuf.ByteString
      getFromBytes();

  /**
   * <pre>
   * shares represents the amount of shares to withdraw
   * </pre>
   *
   * <code>string shares = 2 [json_name = "shares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
   * @return The shares.
   */
  java.lang.String getShares();
  /**
   * <pre>
   * shares represents the amount of shares to withdraw
   * </pre>
   *
   * <code>string shares = 2 [json_name = "shares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
   * @return The bytes for shares.
   */
  com.google.protobuf.ByteString
      getSharesBytes();

  /**
   * <pre>
   * min_token_a represents the minimum a token to withdraw
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin min_token_a = 3 [json_name = "minTokenA", (.gogoproto.nullable) = false];</code>
   * @return Whether the minTokenA field is set.
   */
  boolean hasMinTokenA();
  /**
   * <pre>
   * min_token_a represents the minimum a token to withdraw
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin min_token_a = 3 [json_name = "minTokenA", (.gogoproto.nullable) = false];</code>
   * @return The minTokenA.
   */
  com.cosmos.base.v1beta1.Coin getMinTokenA();
  /**
   * <pre>
   * min_token_a represents the minimum a token to withdraw
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin min_token_a = 3 [json_name = "minTokenA", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getMinTokenAOrBuilder();

  /**
   * <pre>
   * min_token_a represents the minimum a token to withdraw
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin min_token_b = 4 [json_name = "minTokenB", (.gogoproto.nullable) = false];</code>
   * @return Whether the minTokenB field is set.
   */
  boolean hasMinTokenB();
  /**
   * <pre>
   * min_token_a represents the minimum a token to withdraw
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin min_token_b = 4 [json_name = "minTokenB", (.gogoproto.nullable) = false];</code>
   * @return The minTokenB.
   */
  com.cosmos.base.v1beta1.Coin getMinTokenB();
  /**
   * <pre>
   * min_token_a represents the minimum a token to withdraw
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin min_token_b = 4 [json_name = "minTokenB", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getMinTokenBOrBuilder();

  /**
   * <pre>
   * deadline represents the unix timestamp to complete the withdraw by
   * </pre>
   *
   * <code>int64 deadline = 5 [json_name = "deadline"];</code>
   * @return The deadline.
   */
  long getDeadline();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kava/bep3/v1beta1/bep3.proto

package com.kava.bep3.v1beta1;

public interface AssetParamOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kava.bep3.v1beta1.AssetParam)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * denom represents the denominatin for this asset
   * </pre>
   *
   * <code>string denom = 1 [json_name = "denom"];</code>
   * @return The denom.
   */
  java.lang.String getDenom();
  /**
   * <pre>
   * denom represents the denominatin for this asset
   * </pre>
   *
   * <code>string denom = 1 [json_name = "denom"];</code>
   * @return The bytes for denom.
   */
  com.google.protobuf.ByteString
      getDenomBytes();

  /**
   * <pre>
   * coin_id represents the registered coin type to use (https://github.com/satoshilabs/slips/blob/master/slip-0044.md)
   * </pre>
   *
   * <code>int64 coin_id = 2 [json_name = "coinId", (.gogoproto.customname) = "CoinID"];</code>
   * @return The coinId.
   */
  long getCoinId();

  /**
   * <pre>
   * supply_limit defines the maximum supply allowed for the asset - a total or time based rate limit
   * </pre>
   *
   * <code>.kava.bep3.v1beta1.SupplyLimit supply_limit = 3 [json_name = "supplyLimit", (.gogoproto.nullable) = false];</code>
   * @return Whether the supplyLimit field is set.
   */
  boolean hasSupplyLimit();
  /**
   * <pre>
   * supply_limit defines the maximum supply allowed for the asset - a total or time based rate limit
   * </pre>
   *
   * <code>.kava.bep3.v1beta1.SupplyLimit supply_limit = 3 [json_name = "supplyLimit", (.gogoproto.nullable) = false];</code>
   * @return The supplyLimit.
   */
  com.kava.bep3.v1beta1.SupplyLimit getSupplyLimit();
  /**
   * <pre>
   * supply_limit defines the maximum supply allowed for the asset - a total or time based rate limit
   * </pre>
   *
   * <code>.kava.bep3.v1beta1.SupplyLimit supply_limit = 3 [json_name = "supplyLimit", (.gogoproto.nullable) = false];</code>
   */
  com.kava.bep3.v1beta1.SupplyLimitOrBuilder getSupplyLimitOrBuilder();

  /**
   * <pre>
   * active specifies if the asset is live or paused
   * </pre>
   *
   * <code>bool active = 4 [json_name = "active"];</code>
   * @return The active.
   */
  boolean getActive();

  /**
   * <pre>
   * deputy_address the kava address of the deputy
   * </pre>
   *
   * <code>bytes deputy_address = 5 [json_name = "deputyAddress", (.gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (.cosmos_proto.scalar) = "cosmos.AddressBytes"];</code>
   * @return The deputyAddress.
   */
  com.google.protobuf.ByteString getDeputyAddress();

  /**
   * <pre>
   * fixed_fee defines the fee for incoming swaps
   * </pre>
   *
   * <code>string fixed_fee = 6 [json_name = "fixedFee", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
   * @return The fixedFee.
   */
  java.lang.String getFixedFee();
  /**
   * <pre>
   * fixed_fee defines the fee for incoming swaps
   * </pre>
   *
   * <code>string fixed_fee = 6 [json_name = "fixedFee", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
   * @return The bytes for fixedFee.
   */
  com.google.protobuf.ByteString
      getFixedFeeBytes();

  /**
   * <pre>
   * min_swap_amount defines the minimum amount able to be swapped in a single message
   * </pre>
   *
   * <code>string min_swap_amount = 7 [json_name = "minSwapAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
   * @return The minSwapAmount.
   */
  java.lang.String getMinSwapAmount();
  /**
   * <pre>
   * min_swap_amount defines the minimum amount able to be swapped in a single message
   * </pre>
   *
   * <code>string min_swap_amount = 7 [json_name = "minSwapAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
   * @return The bytes for minSwapAmount.
   */
  com.google.protobuf.ByteString
      getMinSwapAmountBytes();

  /**
   * <pre>
   * max_swap_amount defines the maximum amount able to be swapped in a single message
   * </pre>
   *
   * <code>string max_swap_amount = 8 [json_name = "maxSwapAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
   * @return The maxSwapAmount.
   */
  java.lang.String getMaxSwapAmount();
  /**
   * <pre>
   * max_swap_amount defines the maximum amount able to be swapped in a single message
   * </pre>
   *
   * <code>string max_swap_amount = 8 [json_name = "maxSwapAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
   * @return The bytes for maxSwapAmount.
   */
  com.google.protobuf.ByteString
      getMaxSwapAmountBytes();

  /**
   * <pre>
   * min_block_lock defined the minimum blocks to lock
   * </pre>
   *
   * <code>uint64 min_block_lock = 9 [json_name = "minBlockLock"];</code>
   * @return The minBlockLock.
   */
  long getMinBlockLock();

  /**
   * <pre>
   * min_block_lock defined the maximum blocks to lock
   * </pre>
   *
   * <code>uint64 max_block_lock = 10 [json_name = "maxBlockLock"];</code>
   * @return The maxBlockLock.
   */
  long getMaxBlockLock();
}

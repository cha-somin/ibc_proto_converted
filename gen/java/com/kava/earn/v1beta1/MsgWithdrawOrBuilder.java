// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kava/earn/v1beta1/tx.proto

package com.kava.earn.v1beta1;

public interface MsgWithdrawOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kava.earn.v1beta1.MsgWithdraw)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * from represents the address we are withdrawing for
   * </pre>
   *
   * <code>string from = 1 [json_name = "from", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The from.
   */
  java.lang.String getFrom();
  /**
   * <pre>
   * from represents the address we are withdrawing for
   * </pre>
   *
   * <code>string from = 1 [json_name = "from", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The bytes for from.
   */
  com.google.protobuf.ByteString
      getFromBytes();

  /**
   * <pre>
   * Amount represents the token to withdraw. The vault corresponds to the denom
   * of the amount coin.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false];</code>
   * @return Whether the amount field is set.
   */
  boolean hasAmount();
  /**
   * <pre>
   * Amount represents the token to withdraw. The vault corresponds to the denom
   * of the amount coin.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false];</code>
   * @return The amount.
   */
  com.cosmos.base.v1beta1.Coin getAmount();
  /**
   * <pre>
   * Amount represents the token to withdraw. The vault corresponds to the denom
   * of the amount coin.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getAmountOrBuilder();

  /**
   * <pre>
   * Strategy is the vault strategy to use.
   * </pre>
   *
   * <code>.kava.earn.v1beta1.StrategyType strategy = 3 [json_name = "strategy"];</code>
   * @return The enum numeric value on the wire for strategy.
   */
  int getStrategyValue();
  /**
   * <pre>
   * Strategy is the vault strategy to use.
   * </pre>
   *
   * <code>.kava.earn.v1beta1.StrategyType strategy = 3 [json_name = "strategy"];</code>
   * @return The strategy.
   */
  com.kava.earn.v1beta1.StrategyType getStrategy();
}

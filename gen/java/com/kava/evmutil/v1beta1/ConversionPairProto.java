// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kava/evmutil/v1beta1/conversion_pair.proto

package com.kava.evmutil.v1beta1;

public final class ConversionPairProto {
  private ConversionPairProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_kava_evmutil_v1beta1_ConversionPair_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_kava_evmutil_v1beta1_ConversionPair_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*kava/evmutil/v1beta1/conversion_pair.p" +
      "roto\022\024kava.evmutil.v1beta1\032\024gogoproto/go" +
      "go.proto\"|\n\016ConversionPair\022N\n\022kava_erc20" +
      "_address\030\001 \001(\014B \342\336\037\020KavaERC20Address\372\336\037\010" +
      "HexBytesR\020kavaErc20Address\022\024\n\005denom\030\002 \001(" +
      "\tR\005denom:\004\210\240\037\000\"\216\001\n\033AllowedCosmosCoinERC2" +
      "0Token\022!\n\014cosmos_denom\030\001 \001(\tR\013cosmosDeno" +
      "m\022\022\n\004name\030\002 \001(\tR\004name\022\026\n\006symbol\030\003 \001(\tR\006s" +
      "ymbol\022\032\n\010decimals\030\004 \001(\rR\010decimals:\004\210\240\037\000B" +
      "\324\001\n\030com.kava.evmutil.v1beta1B\023Conversion" +
      "PairProtoP\001Z)github.com/kava-labs/kava/x" +
      "/evmutil/types\242\002\003KEX\252\002\024Kava.Evmutil.V1be" +
      "ta1\312\002\024Kava\\Evmutil\\V1beta1\342\002 Kava\\Evmuti" +
      "l\\V1beta1\\GPBMetadata\352\002\026Kava::Evmutil::V" +
      "1beta1\340\341\036\001\250\342\036\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_kava_evmutil_v1beta1_ConversionPair_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_kava_evmutil_v1beta1_ConversionPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_kava_evmutil_v1beta1_ConversionPair_descriptor,
        new java.lang.String[] { "KavaErc20Address", "Denom", });
    internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_descriptor,
        new java.lang.String[] { "CosmosDenom", "Name", "Symbol", "Decimals", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.casttype);
    registry.add(com.gogoproto.GogoProto.customname);
    registry.add(com.gogoproto.GogoProto.equalAll);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.verboseEqualAll);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

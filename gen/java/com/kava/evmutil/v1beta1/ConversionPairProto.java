// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kava/evmutil/v1beta1/conversion_pair.proto

package com.kava.evmutil.v1beta1;

public final class ConversionPairProto {
  private ConversionPairProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ConversionPairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:kava.evmutil.v1beta1.ConversionPair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ERC20 address of the token on the Kava EVM
     * </pre>
     *
     * <code>bytes kava_erc20_address = 1 [json_name = "kavaErc20Address", (.gogoproto.customname) = "KavaERC20Address", (.gogoproto.casttype) = "HexBytes"];</code>
     * @return The kavaErc20Address.
     */
    com.google.protobuf.ByteString getKavaErc20Address();

    /**
     * <pre>
     * Denom of the corresponding sdk.Coin
     * </pre>
     *
     * <code>string denom = 2 [json_name = "denom"];</code>
     * @return The denom.
     */
    java.lang.String getDenom();
    /**
     * <pre>
     * Denom of the corresponding sdk.Coin
     * </pre>
     *
     * <code>string denom = 2 [json_name = "denom"];</code>
     * @return The bytes for denom.
     */
    com.google.protobuf.ByteString
        getDenomBytes();
  }
  /**
   * <pre>
   * ConversionPair defines a Kava ERC20 address and corresponding denom that is
   * allowed to be converted between ERC20 and sdk.Coin
   * </pre>
   *
   * Protobuf type {@code kava.evmutil.v1beta1.ConversionPair}
   */
  public static final class ConversionPair extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:kava.evmutil.v1beta1.ConversionPair)
      ConversionPairOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConversionPair.newBuilder() to construct.
    private ConversionPair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConversionPair() {
      kavaErc20Address_ = com.google.protobuf.ByteString.EMPTY;
      denom_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConversionPair();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kava.evmutil.v1beta1.ConversionPairProto.internal_static_kava_evmutil_v1beta1_ConversionPair_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kava.evmutil.v1beta1.ConversionPairProto.internal_static_kava_evmutil_v1beta1_ConversionPair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair.class, com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair.Builder.class);
    }

    public static final int KAVA_ERC20_ADDRESS_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString kavaErc20Address_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * ERC20 address of the token on the Kava EVM
     * </pre>
     *
     * <code>bytes kava_erc20_address = 1 [json_name = "kavaErc20Address", (.gogoproto.customname) = "KavaERC20Address", (.gogoproto.casttype) = "HexBytes"];</code>
     * @return The kavaErc20Address.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKavaErc20Address() {
      return kavaErc20Address_;
    }

    public static final int DENOM_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object denom_ = "";
    /**
     * <pre>
     * Denom of the corresponding sdk.Coin
     * </pre>
     *
     * <code>string denom = 2 [json_name = "denom"];</code>
     * @return The denom.
     */
    @java.lang.Override
    public java.lang.String getDenom() {
      java.lang.Object ref = denom_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        denom_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Denom of the corresponding sdk.Coin
     * </pre>
     *
     * <code>string denom = 2 [json_name = "denom"];</code>
     * @return The bytes for denom.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDenomBytes() {
      java.lang.Object ref = denom_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        denom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!kavaErc20Address_.isEmpty()) {
        output.writeBytes(1, kavaErc20Address_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(denom_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, denom_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!kavaErc20Address_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, kavaErc20Address_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(denom_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, denom_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair)) {
        return super.equals(obj);
      }
      com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair other = (com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair) obj;

      if (!getKavaErc20Address()
          .equals(other.getKavaErc20Address())) return false;
      if (!getDenom()
          .equals(other.getDenom())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KAVA_ERC20_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getKavaErc20Address().hashCode();
      hash = (37 * hash) + DENOM_FIELD_NUMBER;
      hash = (53 * hash) + getDenom().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ConversionPair defines a Kava ERC20 address and corresponding denom that is
     * allowed to be converted between ERC20 and sdk.Coin
     * </pre>
     *
     * Protobuf type {@code kava.evmutil.v1beta1.ConversionPair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:kava.evmutil.v1beta1.ConversionPair)
        com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kava.evmutil.v1beta1.ConversionPairProto.internal_static_kava_evmutil_v1beta1_ConversionPair_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kava.evmutil.v1beta1.ConversionPairProto.internal_static_kava_evmutil_v1beta1_ConversionPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair.class, com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair.Builder.class);
      }

      // Construct using com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        kavaErc20Address_ = com.google.protobuf.ByteString.EMPTY;
        denom_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kava.evmutil.v1beta1.ConversionPairProto.internal_static_kava_evmutil_v1beta1_ConversionPair_descriptor;
      }

      @java.lang.Override
      public com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair getDefaultInstanceForType() {
        return com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair.getDefaultInstance();
      }

      @java.lang.Override
      public com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair build() {
        com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair buildPartial() {
        com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair result = new com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.kavaErc20Address_ = kavaErc20Address_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.denom_ = denom_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair) {
          return mergeFrom((com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair other) {
        if (other == com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair.getDefaultInstance()) return this;
        if (other.getKavaErc20Address() != com.google.protobuf.ByteString.EMPTY) {
          setKavaErc20Address(other.getKavaErc20Address());
        }
        if (!other.getDenom().isEmpty()) {
          denom_ = other.denom_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kavaErc20Address_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                denom_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString kavaErc20Address_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * ERC20 address of the token on the Kava EVM
       * </pre>
       *
       * <code>bytes kava_erc20_address = 1 [json_name = "kavaErc20Address", (.gogoproto.customname) = "KavaERC20Address", (.gogoproto.casttype) = "HexBytes"];</code>
       * @return The kavaErc20Address.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getKavaErc20Address() {
        return kavaErc20Address_;
      }
      /**
       * <pre>
       * ERC20 address of the token on the Kava EVM
       * </pre>
       *
       * <code>bytes kava_erc20_address = 1 [json_name = "kavaErc20Address", (.gogoproto.customname) = "KavaERC20Address", (.gogoproto.casttype) = "HexBytes"];</code>
       * @param value The kavaErc20Address to set.
       * @return This builder for chaining.
       */
      public Builder setKavaErc20Address(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        kavaErc20Address_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ERC20 address of the token on the Kava EVM
       * </pre>
       *
       * <code>bytes kava_erc20_address = 1 [json_name = "kavaErc20Address", (.gogoproto.customname) = "KavaERC20Address", (.gogoproto.casttype) = "HexBytes"];</code>
       * @return This builder for chaining.
       */
      public Builder clearKavaErc20Address() {
        bitField0_ = (bitField0_ & ~0x00000001);
        kavaErc20Address_ = getDefaultInstance().getKavaErc20Address();
        onChanged();
        return this;
      }

      private java.lang.Object denom_ = "";
      /**
       * <pre>
       * Denom of the corresponding sdk.Coin
       * </pre>
       *
       * <code>string denom = 2 [json_name = "denom"];</code>
       * @return The denom.
       */
      public java.lang.String getDenom() {
        java.lang.Object ref = denom_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          denom_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Denom of the corresponding sdk.Coin
       * </pre>
       *
       * <code>string denom = 2 [json_name = "denom"];</code>
       * @return The bytes for denom.
       */
      public com.google.protobuf.ByteString
          getDenomBytes() {
        java.lang.Object ref = denom_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          denom_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Denom of the corresponding sdk.Coin
       * </pre>
       *
       * <code>string denom = 2 [json_name = "denom"];</code>
       * @param value The denom to set.
       * @return This builder for chaining.
       */
      public Builder setDenom(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        denom_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Denom of the corresponding sdk.Coin
       * </pre>
       *
       * <code>string denom = 2 [json_name = "denom"];</code>
       * @return This builder for chaining.
       */
      public Builder clearDenom() {
        denom_ = getDefaultInstance().getDenom();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Denom of the corresponding sdk.Coin
       * </pre>
       *
       * <code>string denom = 2 [json_name = "denom"];</code>
       * @param value The bytes for denom to set.
       * @return This builder for chaining.
       */
      public Builder setDenomBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        denom_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:kava.evmutil.v1beta1.ConversionPair)
    }

    // @@protoc_insertion_point(class_scope:kava.evmutil.v1beta1.ConversionPair)
    private static final com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair();
    }

    public static com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConversionPair>
        PARSER = new com.google.protobuf.AbstractParser<ConversionPair>() {
      @java.lang.Override
      public ConversionPair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ConversionPair> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConversionPair> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.kava.evmutil.v1beta1.ConversionPairProto.ConversionPair getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllowedCosmosCoinERC20TokenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:kava.evmutil.v1beta1.AllowedCosmosCoinERC20Token)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Denom of the sdk.Coin
     * </pre>
     *
     * <code>string cosmos_denom = 1 [json_name = "cosmosDenom"];</code>
     * @return The cosmosDenom.
     */
    java.lang.String getCosmosDenom();
    /**
     * <pre>
     * Denom of the sdk.Coin
     * </pre>
     *
     * <code>string cosmos_denom = 1 [json_name = "cosmosDenom"];</code>
     * @return The bytes for cosmosDenom.
     */
    com.google.protobuf.ByteString
        getCosmosDenomBytes();

    /**
     * <pre>
     * Name of ERC20 contract
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of ERC20 contract
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Symbol of ERC20 contract
     * </pre>
     *
     * <code>string symbol = 3 [json_name = "symbol"];</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * Symbol of ERC20 contract
     * </pre>
     *
     * <code>string symbol = 3 [json_name = "symbol"];</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * Number of decimals ERC20 contract is deployed with.
     * </pre>
     *
     * <code>uint32 decimals = 4 [json_name = "decimals"];</code>
     * @return The decimals.
     */
    int getDecimals();
  }
  /**
   * <pre>
   * AllowedCosmosCoinERC20Token defines allowed cosmos-sdk denom &amp; metadata
   * for evm token representations of sdk assets.
   * NOTE: once evm token contracts are deployed, changes to metadata for a given
   * cosmos_denom will not change metadata of deployed contract.
   * </pre>
   *
   * Protobuf type {@code kava.evmutil.v1beta1.AllowedCosmosCoinERC20Token}
   */
  public static final class AllowedCosmosCoinERC20Token extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:kava.evmutil.v1beta1.AllowedCosmosCoinERC20Token)
      AllowedCosmosCoinERC20TokenOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllowedCosmosCoinERC20Token.newBuilder() to construct.
    private AllowedCosmosCoinERC20Token(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllowedCosmosCoinERC20Token() {
      cosmosDenom_ = "";
      name_ = "";
      symbol_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AllowedCosmosCoinERC20Token();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kava.evmutil.v1beta1.ConversionPairProto.internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kava.evmutil.v1beta1.ConversionPairProto.internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token.class, com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token.Builder.class);
    }

    public static final int COSMOS_DENOM_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object cosmosDenom_ = "";
    /**
     * <pre>
     * Denom of the sdk.Coin
     * </pre>
     *
     * <code>string cosmos_denom = 1 [json_name = "cosmosDenom"];</code>
     * @return The cosmosDenom.
     */
    @java.lang.Override
    public java.lang.String getCosmosDenom() {
      java.lang.Object ref = cosmosDenom_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cosmosDenom_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Denom of the sdk.Coin
     * </pre>
     *
     * <code>string cosmos_denom = 1 [json_name = "cosmosDenom"];</code>
     * @return The bytes for cosmosDenom.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCosmosDenomBytes() {
      java.lang.Object ref = cosmosDenom_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cosmosDenom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * Name of ERC20 contract
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of ERC20 contract
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SYMBOL_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object symbol_ = "";
    /**
     * <pre>
     * Symbol of ERC20 contract
     * </pre>
     *
     * <code>string symbol = 3 [json_name = "symbol"];</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Symbol of ERC20 contract
     * </pre>
     *
     * <code>string symbol = 3 [json_name = "symbol"];</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DECIMALS_FIELD_NUMBER = 4;
    private int decimals_ = 0;
    /**
     * <pre>
     * Number of decimals ERC20 contract is deployed with.
     * </pre>
     *
     * <code>uint32 decimals = 4 [json_name = "decimals"];</code>
     * @return The decimals.
     */
    @java.lang.Override
    public int getDecimals() {
      return decimals_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cosmosDenom_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cosmosDenom_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(symbol_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, symbol_);
      }
      if (decimals_ != 0) {
        output.writeUInt32(4, decimals_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cosmosDenom_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cosmosDenom_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(symbol_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, symbol_);
      }
      if (decimals_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, decimals_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token)) {
        return super.equals(obj);
      }
      com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token other = (com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token) obj;

      if (!getCosmosDenom()
          .equals(other.getCosmosDenom())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (getDecimals()
          != other.getDecimals()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COSMOS_DENOM_FIELD_NUMBER;
      hash = (53 * hash) + getCosmosDenom().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (37 * hash) + DECIMALS_FIELD_NUMBER;
      hash = (53 * hash) + getDecimals();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * AllowedCosmosCoinERC20Token defines allowed cosmos-sdk denom &amp; metadata
     * for evm token representations of sdk assets.
     * NOTE: once evm token contracts are deployed, changes to metadata for a given
     * cosmos_denom will not change metadata of deployed contract.
     * </pre>
     *
     * Protobuf type {@code kava.evmutil.v1beta1.AllowedCosmosCoinERC20Token}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:kava.evmutil.v1beta1.AllowedCosmosCoinERC20Token)
        com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20TokenOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kava.evmutil.v1beta1.ConversionPairProto.internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kava.evmutil.v1beta1.ConversionPairProto.internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token.class, com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token.Builder.class);
      }

      // Construct using com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        cosmosDenom_ = "";
        name_ = "";
        symbol_ = "";
        decimals_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kava.evmutil.v1beta1.ConversionPairProto.internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_descriptor;
      }

      @java.lang.Override
      public com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token getDefaultInstanceForType() {
        return com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token.getDefaultInstance();
      }

      @java.lang.Override
      public com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token build() {
        com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token buildPartial() {
        com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token result = new com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.cosmosDenom_ = cosmosDenom_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.symbol_ = symbol_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.decimals_ = decimals_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token) {
          return mergeFrom((com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token other) {
        if (other == com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token.getDefaultInstance()) return this;
        if (!other.getCosmosDenom().isEmpty()) {
          cosmosDenom_ = other.cosmosDenom_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.getDecimals() != 0) {
          setDecimals(other.getDecimals());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                cosmosDenom_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                symbol_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                decimals_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object cosmosDenom_ = "";
      /**
       * <pre>
       * Denom of the sdk.Coin
       * </pre>
       *
       * <code>string cosmos_denom = 1 [json_name = "cosmosDenom"];</code>
       * @return The cosmosDenom.
       */
      public java.lang.String getCosmosDenom() {
        java.lang.Object ref = cosmosDenom_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cosmosDenom_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Denom of the sdk.Coin
       * </pre>
       *
       * <code>string cosmos_denom = 1 [json_name = "cosmosDenom"];</code>
       * @return The bytes for cosmosDenom.
       */
      public com.google.protobuf.ByteString
          getCosmosDenomBytes() {
        java.lang.Object ref = cosmosDenom_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cosmosDenom_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Denom of the sdk.Coin
       * </pre>
       *
       * <code>string cosmos_denom = 1 [json_name = "cosmosDenom"];</code>
       * @param value The cosmosDenom to set.
       * @return This builder for chaining.
       */
      public Builder setCosmosDenom(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        cosmosDenom_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Denom of the sdk.Coin
       * </pre>
       *
       * <code>string cosmos_denom = 1 [json_name = "cosmosDenom"];</code>
       * @return This builder for chaining.
       */
      public Builder clearCosmosDenom() {
        cosmosDenom_ = getDefaultInstance().getCosmosDenom();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Denom of the sdk.Coin
       * </pre>
       *
       * <code>string cosmos_denom = 1 [json_name = "cosmosDenom"];</code>
       * @param value The bytes for cosmosDenom to set.
       * @return This builder for chaining.
       */
      public Builder setCosmosDenomBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        cosmosDenom_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of ERC20 contract
       * </pre>
       *
       * <code>string name = 2 [json_name = "name"];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of ERC20 contract
       * </pre>
       *
       * <code>string name = 2 [json_name = "name"];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of ERC20 contract
       * </pre>
       *
       * <code>string name = 2 [json_name = "name"];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of ERC20 contract
       * </pre>
       *
       * <code>string name = 2 [json_name = "name"];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of ERC20 contract
       * </pre>
       *
       * <code>string name = 2 [json_name = "name"];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object symbol_ = "";
      /**
       * <pre>
       * Symbol of ERC20 contract
       * </pre>
       *
       * <code>string symbol = 3 [json_name = "symbol"];</code>
       * @return The symbol.
       */
      public java.lang.String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Symbol of ERC20 contract
       * </pre>
       *
       * <code>string symbol = 3 [json_name = "symbol"];</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        java.lang.Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Symbol of ERC20 contract
       * </pre>
       *
       * <code>string symbol = 3 [json_name = "symbol"];</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        symbol_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Symbol of ERC20 contract
       * </pre>
       *
       * <code>string symbol = 3 [json_name = "symbol"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        symbol_ = getDefaultInstance().getSymbol();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Symbol of ERC20 contract
       * </pre>
       *
       * <code>string symbol = 3 [json_name = "symbol"];</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        symbol_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private int decimals_ ;
      /**
       * <pre>
       * Number of decimals ERC20 contract is deployed with.
       * </pre>
       *
       * <code>uint32 decimals = 4 [json_name = "decimals"];</code>
       * @return The decimals.
       */
      @java.lang.Override
      public int getDecimals() {
        return decimals_;
      }
      /**
       * <pre>
       * Number of decimals ERC20 contract is deployed with.
       * </pre>
       *
       * <code>uint32 decimals = 4 [json_name = "decimals"];</code>
       * @param value The decimals to set.
       * @return This builder for chaining.
       */
      public Builder setDecimals(int value) {

        decimals_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of decimals ERC20 contract is deployed with.
       * </pre>
       *
       * <code>uint32 decimals = 4 [json_name = "decimals"];</code>
       * @return This builder for chaining.
       */
      public Builder clearDecimals() {
        bitField0_ = (bitField0_ & ~0x00000008);
        decimals_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:kava.evmutil.v1beta1.AllowedCosmosCoinERC20Token)
    }

    // @@protoc_insertion_point(class_scope:kava.evmutil.v1beta1.AllowedCosmosCoinERC20Token)
    private static final com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token();
    }

    public static com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllowedCosmosCoinERC20Token>
        PARSER = new com.google.protobuf.AbstractParser<AllowedCosmosCoinERC20Token>() {
      @java.lang.Override
      public AllowedCosmosCoinERC20Token parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AllowedCosmosCoinERC20Token> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllowedCosmosCoinERC20Token> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.kava.evmutil.v1beta1.ConversionPairProto.AllowedCosmosCoinERC20Token getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_kava_evmutil_v1beta1_ConversionPair_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_kava_evmutil_v1beta1_ConversionPair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*kava/evmutil/v1beta1/conversion_pair.p" +
      "roto\022\024kava.evmutil.v1beta1\032\024gogoproto/go" +
      "go.proto\"|\n\016ConversionPair\022N\n\022kava_erc20" +
      "_address\030\001 \001(\014B \342\336\037\020KavaERC20Address\372\336\037\010" +
      "HexBytesR\020kavaErc20Address\022\024\n\005denom\030\002 \001(" +
      "\tR\005denom:\004\210\240\037\000\"\216\001\n\033AllowedCosmosCoinERC2" +
      "0Token\022!\n\014cosmos_denom\030\001 \001(\tR\013cosmosDeno" +
      "m\022\022\n\004name\030\002 \001(\tR\004name\022\026\n\006symbol\030\003 \001(\tR\006s" +
      "ymbol\022\032\n\010decimals\030\004 \001(\rR\010decimals:\004\210\240\037\000B" +
      "\322\001\n\030com.kava.evmutil.v1beta1B\023Conversion" +
      "PairProtoZ)github.com/kava-labs/kava/x/e" +
      "vmutil/types\242\002\003KEX\252\002\024Kava.Evmutil.V1beta" +
      "1\312\002\024Kava\\Evmutil\\V1beta1\342\002 Kava\\Evmutil\\" +
      "V1beta1\\GPBMetadata\352\002\026Kava::Evmutil::V1b" +
      "eta1\340\341\036\001\250\342\036\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_kava_evmutil_v1beta1_ConversionPair_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_kava_evmutil_v1beta1_ConversionPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_kava_evmutil_v1beta1_ConversionPair_descriptor,
        new java.lang.String[] { "KavaErc20Address", "Denom", });
    internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_kava_evmutil_v1beta1_AllowedCosmosCoinERC20Token_descriptor,
        new java.lang.String[] { "CosmosDenom", "Name", "Symbol", "Decimals", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.casttype);
    registry.add(com.gogoproto.GogoProto.customname);
    registry.add(com.gogoproto.GogoProto.equalAll);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.verboseEqualAll);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kava/evmutil/v1beta1/conversion_pair.proto

package com.kava.evmutil.v1beta1;

public interface AllowedCosmosCoinERC20TokenOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kava.evmutil.v1beta1.AllowedCosmosCoinERC20Token)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Denom of the sdk.Coin
   * </pre>
   *
   * <code>string cosmos_denom = 1 [json_name = "cosmosDenom"];</code>
   * @return The cosmosDenom.
   */
  java.lang.String getCosmosDenom();
  /**
   * <pre>
   * Denom of the sdk.Coin
   * </pre>
   *
   * <code>string cosmos_denom = 1 [json_name = "cosmosDenom"];</code>
   * @return The bytes for cosmosDenom.
   */
  com.google.protobuf.ByteString
      getCosmosDenomBytes();

  /**
   * <pre>
   * Name of ERC20 contract
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name of ERC20 contract
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Symbol of ERC20 contract
   * </pre>
   *
   * <code>string symbol = 3 [json_name = "symbol"];</code>
   * @return The symbol.
   */
  java.lang.String getSymbol();
  /**
   * <pre>
   * Symbol of ERC20 contract
   * </pre>
   *
   * <code>string symbol = 3 [json_name = "symbol"];</code>
   * @return The bytes for symbol.
   */
  com.google.protobuf.ByteString
      getSymbolBytes();

  /**
   * <pre>
   * Number of decimals ERC20 contract is deployed with.
   * </pre>
   *
   * <code>uint32 decimals = 4 [json_name = "decimals"];</code>
   * @return The decimals.
   */
  int getDecimals();
}

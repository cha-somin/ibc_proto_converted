// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dymension/streamer/stream.proto

package com.dymensionxyz.dymension.streamer;

public final class StreamProto {
  private StreamProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface StreamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dymensionxyz.dymension.streamer.Stream)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * id is the unique ID of a Stream
     * </pre>
     *
     * <code>uint64 id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     * distribute_to is the distr_info.
     * </pre>
     *
     * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
     * @return Whether the distributeTo field is set.
     */
    boolean hasDistributeTo();
    /**
     * <pre>
     * distribute_to is the distr_info.
     * </pre>
     *
     * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
     * @return The distributeTo.
     */
    com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo getDistributeTo();
    /**
     * <pre>
     * distribute_to is the distr_info.
     * </pre>
     *
     * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
     */
    com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfoOrBuilder getDistributeToOrBuilder();

    /**
     * <pre>
     * coins is the total amount of coins that have been in the stream
     * Can distribute multiple coin denoms
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> 
        getCoinsList();
    /**
     * <pre>
     * coins is the total amount of coins that have been in the stream
     * Can distribute multiple coin denoms
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    com.cosmos.base.v1beta1.CoinProto.Coin getCoins(int index);
    /**
     * <pre>
     * coins is the total amount of coins that have been in the stream
     * Can distribute multiple coin denoms
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getCoinsCount();
    /**
     * <pre>
     * coins is the total amount of coins that have been in the stream
     * Can distribute multiple coin denoms
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
        getCoinsOrBuilderList();
    /**
     * <pre>
     * coins is the total amount of coins that have been in the stream
     * Can distribute multiple coin denoms
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getCoinsOrBuilder(
        int index);

    /**
     * <pre>
     * start_time is the distribution start time
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return Whether the startTime field is set.
     */
    boolean hasStartTime();
    /**
     * <pre>
     * start_time is the distribution start time
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return The startTime.
     */
    com.google.protobuf.Timestamp getStartTime();
    /**
     * <pre>
     * start_time is the distribution start time
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder();

    /**
     * <pre>
     * distr_epoch_identifier is what epoch type di-stribution will be triggered by
     * (day, week, etc.)
     * </pre>
     *
     * <code>string distr_epoch_identifier = 5 [json_name = "distrEpochIdentifier", (.gogoproto.moretags) = "yaml:&#92;"distr_epoch_identifier&#92;""];</code>
     * @return The distrEpochIdentifier.
     */
    java.lang.String getDistrEpochIdentifier();
    /**
     * <pre>
     * distr_epoch_identifier is what epoch type di-stribution will be triggered by
     * (day, week, etc.)
     * </pre>
     *
     * <code>string distr_epoch_identifier = 5 [json_name = "distrEpochIdentifier", (.gogoproto.moretags) = "yaml:&#92;"distr_epoch_identifier&#92;""];</code>
     * @return The bytes for distrEpochIdentifier.
     */
    com.google.protobuf.ByteString
        getDistrEpochIdentifierBytes();

    /**
     * <pre>
     * num_epochs_paid_over is the number of total epochs distribution will be
     * completed over
     * </pre>
     *
     * <code>uint64 num_epochs_paid_over = 6 [json_name = "numEpochsPaidOver"];</code>
     * @return The numEpochsPaidOver.
     */
    long getNumEpochsPaidOver();

    /**
     * <pre>
     * filled_epochs is the number of epochs distribution has been completed on
     * already
     * </pre>
     *
     * <code>uint64 filled_epochs = 7 [json_name = "filledEpochs"];</code>
     * @return The filledEpochs.
     */
    long getFilledEpochs();

    /**
     * <pre>
     * distributed_coins are coins that have been distributed already
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> 
        getDistributedCoinsList();
    /**
     * <pre>
     * distributed_coins are coins that have been distributed already
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    com.cosmos.base.v1beta1.CoinProto.Coin getDistributedCoins(int index);
    /**
     * <pre>
     * distributed_coins are coins that have been distributed already
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getDistributedCoinsCount();
    /**
     * <pre>
     * distributed_coins are coins that have been distributed already
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
        getDistributedCoinsOrBuilderList();
    /**
     * <pre>
     * distributed_coins are coins that have been distributed already
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getDistributedCoinsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Stream is an object that stores and distributes yields to recipients who
   * satisfy certain conditions. Currently streams support conditions around the
   * duration for which a given denom is locked.
   * </pre>
   *
   * Protobuf type {@code dymensionxyz.dymension.streamer.Stream}
   */
  public static final class Stream extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dymensionxyz.dymension.streamer.Stream)
      StreamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Stream.newBuilder() to construct.
    private Stream(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Stream() {
      coins_ = java.util.Collections.emptyList();
      distrEpochIdentifier_ = "";
      distributedCoins_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Stream();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dymensionxyz.dymension.streamer.StreamProto.internal_static_dymensionxyz_dymension_streamer_Stream_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dymensionxyz.dymension.streamer.StreamProto.internal_static_dymensionxyz_dymension_streamer_Stream_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dymensionxyz.dymension.streamer.StreamProto.Stream.class, com.dymensionxyz.dymension.streamer.StreamProto.Stream.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_ = 0L;
    /**
     * <pre>
     * id is the unique ID of a Stream
     * </pre>
     *
     * <code>uint64 id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }

    public static final int DISTRIBUTE_TO_FIELD_NUMBER = 2;
    private com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo distributeTo_;
    /**
     * <pre>
     * distribute_to is the distr_info.
     * </pre>
     *
     * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
     * @return Whether the distributeTo field is set.
     */
    @java.lang.Override
    public boolean hasDistributeTo() {
      return distributeTo_ != null;
    }
    /**
     * <pre>
     * distribute_to is the distr_info.
     * </pre>
     *
     * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
     * @return The distributeTo.
     */
    @java.lang.Override
    public com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo getDistributeTo() {
      return distributeTo_ == null ? com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo.getDefaultInstance() : distributeTo_;
    }
    /**
     * <pre>
     * distribute_to is the distr_info.
     * </pre>
     *
     * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
     */
    @java.lang.Override
    public com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfoOrBuilder getDistributeToOrBuilder() {
      return distributeTo_ == null ? com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo.getDefaultInstance() : distributeTo_;
    }

    public static final int COINS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> coins_;
    /**
     * <pre>
     * coins is the total amount of coins that have been in the stream
     * Can distribute multiple coin denoms
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> getCoinsList() {
      return coins_;
    }
    /**
     * <pre>
     * coins is the total amount of coins that have been in the stream
     * Can distribute multiple coin denoms
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
        getCoinsOrBuilderList() {
      return coins_;
    }
    /**
     * <pre>
     * coins is the total amount of coins that have been in the stream
     * Can distribute multiple coin denoms
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getCoinsCount() {
      return coins_.size();
    }
    /**
     * <pre>
     * coins is the total amount of coins that have been in the stream
     * Can distribute multiple coin denoms
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public com.cosmos.base.v1beta1.CoinProto.Coin getCoins(int index) {
      return coins_.get(index);
    }
    /**
     * <pre>
     * coins is the total amount of coins that have been in the stream
     * Can distribute multiple coin denoms
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getCoinsOrBuilder(
        int index) {
      return coins_.get(index);
    }

    public static final int START_TIME_FIELD_NUMBER = 4;
    private com.google.protobuf.Timestamp startTime_;
    /**
     * <pre>
     * start_time is the distribution start time
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return Whether the startTime field is set.
     */
    @java.lang.Override
    public boolean hasStartTime() {
      return startTime_ != null;
    }
    /**
     * <pre>
     * start_time is the distribution start time
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return The startTime.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getStartTime() {
      return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
    }
    /**
     * <pre>
     * start_time is the distribution start time
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
      return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
    }

    public static final int DISTR_EPOCH_IDENTIFIER_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object distrEpochIdentifier_ = "";
    /**
     * <pre>
     * distr_epoch_identifier is what epoch type di-stribution will be triggered by
     * (day, week, etc.)
     * </pre>
     *
     * <code>string distr_epoch_identifier = 5 [json_name = "distrEpochIdentifier", (.gogoproto.moretags) = "yaml:&#92;"distr_epoch_identifier&#92;""];</code>
     * @return The distrEpochIdentifier.
     */
    @java.lang.Override
    public java.lang.String getDistrEpochIdentifier() {
      java.lang.Object ref = distrEpochIdentifier_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        distrEpochIdentifier_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * distr_epoch_identifier is what epoch type di-stribution will be triggered by
     * (day, week, etc.)
     * </pre>
     *
     * <code>string distr_epoch_identifier = 5 [json_name = "distrEpochIdentifier", (.gogoproto.moretags) = "yaml:&#92;"distr_epoch_identifier&#92;""];</code>
     * @return The bytes for distrEpochIdentifier.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDistrEpochIdentifierBytes() {
      java.lang.Object ref = distrEpochIdentifier_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        distrEpochIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NUM_EPOCHS_PAID_OVER_FIELD_NUMBER = 6;
    private long numEpochsPaidOver_ = 0L;
    /**
     * <pre>
     * num_epochs_paid_over is the number of total epochs distribution will be
     * completed over
     * </pre>
     *
     * <code>uint64 num_epochs_paid_over = 6 [json_name = "numEpochsPaidOver"];</code>
     * @return The numEpochsPaidOver.
     */
    @java.lang.Override
    public long getNumEpochsPaidOver() {
      return numEpochsPaidOver_;
    }

    public static final int FILLED_EPOCHS_FIELD_NUMBER = 7;
    private long filledEpochs_ = 0L;
    /**
     * <pre>
     * filled_epochs is the number of epochs distribution has been completed on
     * already
     * </pre>
     *
     * <code>uint64 filled_epochs = 7 [json_name = "filledEpochs"];</code>
     * @return The filledEpochs.
     */
    @java.lang.Override
    public long getFilledEpochs() {
      return filledEpochs_;
    }

    public static final int DISTRIBUTED_COINS_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> distributedCoins_;
    /**
     * <pre>
     * distributed_coins are coins that have been distributed already
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> getDistributedCoinsList() {
      return distributedCoins_;
    }
    /**
     * <pre>
     * distributed_coins are coins that have been distributed already
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
        getDistributedCoinsOrBuilderList() {
      return distributedCoins_;
    }
    /**
     * <pre>
     * distributed_coins are coins that have been distributed already
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getDistributedCoinsCount() {
      return distributedCoins_.size();
    }
    /**
     * <pre>
     * distributed_coins are coins that have been distributed already
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public com.cosmos.base.v1beta1.CoinProto.Coin getDistributedCoins(int index) {
      return distributedCoins_.get(index);
    }
    /**
     * <pre>
     * distributed_coins are coins that have been distributed already
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getDistributedCoinsOrBuilder(
        int index) {
      return distributedCoins_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeUInt64(1, id_);
      }
      if (distributeTo_ != null) {
        output.writeMessage(2, getDistributeTo());
      }
      for (int i = 0; i < coins_.size(); i++) {
        output.writeMessage(3, coins_.get(i));
      }
      if (startTime_ != null) {
        output.writeMessage(4, getStartTime());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(distrEpochIdentifier_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, distrEpochIdentifier_);
      }
      if (numEpochsPaidOver_ != 0L) {
        output.writeUInt64(6, numEpochsPaidOver_);
      }
      if (filledEpochs_ != 0L) {
        output.writeUInt64(7, filledEpochs_);
      }
      for (int i = 0; i < distributedCoins_.size(); i++) {
        output.writeMessage(8, distributedCoins_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (distributeTo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDistributeTo());
      }
      for (int i = 0; i < coins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, coins_.get(i));
      }
      if (startTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getStartTime());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(distrEpochIdentifier_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, distrEpochIdentifier_);
      }
      if (numEpochsPaidOver_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, numEpochsPaidOver_);
      }
      if (filledEpochs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, filledEpochs_);
      }
      for (int i = 0; i < distributedCoins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, distributedCoins_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.dymensionxyz.dymension.streamer.StreamProto.Stream)) {
        return super.equals(obj);
      }
      com.dymensionxyz.dymension.streamer.StreamProto.Stream other = (com.dymensionxyz.dymension.streamer.StreamProto.Stream) obj;

      if (getId()
          != other.getId()) return false;
      if (hasDistributeTo() != other.hasDistributeTo()) return false;
      if (hasDistributeTo()) {
        if (!getDistributeTo()
            .equals(other.getDistributeTo())) return false;
      }
      if (!getCoinsList()
          .equals(other.getCoinsList())) return false;
      if (hasStartTime() != other.hasStartTime()) return false;
      if (hasStartTime()) {
        if (!getStartTime()
            .equals(other.getStartTime())) return false;
      }
      if (!getDistrEpochIdentifier()
          .equals(other.getDistrEpochIdentifier())) return false;
      if (getNumEpochsPaidOver()
          != other.getNumEpochsPaidOver()) return false;
      if (getFilledEpochs()
          != other.getFilledEpochs()) return false;
      if (!getDistributedCoinsList()
          .equals(other.getDistributedCoinsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      if (hasDistributeTo()) {
        hash = (37 * hash) + DISTRIBUTE_TO_FIELD_NUMBER;
        hash = (53 * hash) + getDistributeTo().hashCode();
      }
      if (getCoinsCount() > 0) {
        hash = (37 * hash) + COINS_FIELD_NUMBER;
        hash = (53 * hash) + getCoinsList().hashCode();
      }
      if (hasStartTime()) {
        hash = (37 * hash) + START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getStartTime().hashCode();
      }
      hash = (37 * hash) + DISTR_EPOCH_IDENTIFIER_FIELD_NUMBER;
      hash = (53 * hash) + getDistrEpochIdentifier().hashCode();
      hash = (37 * hash) + NUM_EPOCHS_PAID_OVER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNumEpochsPaidOver());
      hash = (37 * hash) + FILLED_EPOCHS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFilledEpochs());
      if (getDistributedCoinsCount() > 0) {
        hash = (37 * hash) + DISTRIBUTED_COINS_FIELD_NUMBER;
        hash = (53 * hash) + getDistributedCoinsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.dymensionxyz.dymension.streamer.StreamProto.Stream prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Stream is an object that stores and distributes yields to recipients who
     * satisfy certain conditions. Currently streams support conditions around the
     * duration for which a given denom is locked.
     * </pre>
     *
     * Protobuf type {@code dymensionxyz.dymension.streamer.Stream}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dymensionxyz.dymension.streamer.Stream)
        com.dymensionxyz.dymension.streamer.StreamProto.StreamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dymensionxyz.dymension.streamer.StreamProto.internal_static_dymensionxyz_dymension_streamer_Stream_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dymensionxyz.dymension.streamer.StreamProto.internal_static_dymensionxyz_dymension_streamer_Stream_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dymensionxyz.dymension.streamer.StreamProto.Stream.class, com.dymensionxyz.dymension.streamer.StreamProto.Stream.Builder.class);
      }

      // Construct using com.dymensionxyz.dymension.streamer.StreamProto.Stream.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0L;
        distributeTo_ = null;
        if (distributeToBuilder_ != null) {
          distributeToBuilder_.dispose();
          distributeToBuilder_ = null;
        }
        if (coinsBuilder_ == null) {
          coins_ = java.util.Collections.emptyList();
        } else {
          coins_ = null;
          coinsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        startTime_ = null;
        if (startTimeBuilder_ != null) {
          startTimeBuilder_.dispose();
          startTimeBuilder_ = null;
        }
        distrEpochIdentifier_ = "";
        numEpochsPaidOver_ = 0L;
        filledEpochs_ = 0L;
        if (distributedCoinsBuilder_ == null) {
          distributedCoins_ = java.util.Collections.emptyList();
        } else {
          distributedCoins_ = null;
          distributedCoinsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dymensionxyz.dymension.streamer.StreamProto.internal_static_dymensionxyz_dymension_streamer_Stream_descriptor;
      }

      @java.lang.Override
      public com.dymensionxyz.dymension.streamer.StreamProto.Stream getDefaultInstanceForType() {
        return com.dymensionxyz.dymension.streamer.StreamProto.Stream.getDefaultInstance();
      }

      @java.lang.Override
      public com.dymensionxyz.dymension.streamer.StreamProto.Stream build() {
        com.dymensionxyz.dymension.streamer.StreamProto.Stream result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.dymensionxyz.dymension.streamer.StreamProto.Stream buildPartial() {
        com.dymensionxyz.dymension.streamer.StreamProto.Stream result = new com.dymensionxyz.dymension.streamer.StreamProto.Stream(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.dymensionxyz.dymension.streamer.StreamProto.Stream result) {
        if (coinsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            coins_ = java.util.Collections.unmodifiableList(coins_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.coins_ = coins_;
        } else {
          result.coins_ = coinsBuilder_.build();
        }
        if (distributedCoinsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            distributedCoins_ = java.util.Collections.unmodifiableList(distributedCoins_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.distributedCoins_ = distributedCoins_;
        } else {
          result.distributedCoins_ = distributedCoinsBuilder_.build();
        }
      }

      private void buildPartial0(com.dymensionxyz.dymension.streamer.StreamProto.Stream result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.distributeTo_ = distributeToBuilder_ == null
              ? distributeTo_
              : distributeToBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.startTime_ = startTimeBuilder_ == null
              ? startTime_
              : startTimeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.distrEpochIdentifier_ = distrEpochIdentifier_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.numEpochsPaidOver_ = numEpochsPaidOver_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.filledEpochs_ = filledEpochs_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dymensionxyz.dymension.streamer.StreamProto.Stream) {
          return mergeFrom((com.dymensionxyz.dymension.streamer.StreamProto.Stream)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dymensionxyz.dymension.streamer.StreamProto.Stream other) {
        if (other == com.dymensionxyz.dymension.streamer.StreamProto.Stream.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.hasDistributeTo()) {
          mergeDistributeTo(other.getDistributeTo());
        }
        if (coinsBuilder_ == null) {
          if (!other.coins_.isEmpty()) {
            if (coins_.isEmpty()) {
              coins_ = other.coins_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureCoinsIsMutable();
              coins_.addAll(other.coins_);
            }
            onChanged();
          }
        } else {
          if (!other.coins_.isEmpty()) {
            if (coinsBuilder_.isEmpty()) {
              coinsBuilder_.dispose();
              coinsBuilder_ = null;
              coins_ = other.coins_;
              bitField0_ = (bitField0_ & ~0x00000004);
              coinsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCoinsFieldBuilder() : null;
            } else {
              coinsBuilder_.addAllMessages(other.coins_);
            }
          }
        }
        if (other.hasStartTime()) {
          mergeStartTime(other.getStartTime());
        }
        if (!other.getDistrEpochIdentifier().isEmpty()) {
          distrEpochIdentifier_ = other.distrEpochIdentifier_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (other.getNumEpochsPaidOver() != 0L) {
          setNumEpochsPaidOver(other.getNumEpochsPaidOver());
        }
        if (other.getFilledEpochs() != 0L) {
          setFilledEpochs(other.getFilledEpochs());
        }
        if (distributedCoinsBuilder_ == null) {
          if (!other.distributedCoins_.isEmpty()) {
            if (distributedCoins_.isEmpty()) {
              distributedCoins_ = other.distributedCoins_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureDistributedCoinsIsMutable();
              distributedCoins_.addAll(other.distributedCoins_);
            }
            onChanged();
          }
        } else {
          if (!other.distributedCoins_.isEmpty()) {
            if (distributedCoinsBuilder_.isEmpty()) {
              distributedCoinsBuilder_.dispose();
              distributedCoinsBuilder_ = null;
              distributedCoins_ = other.distributedCoins_;
              bitField0_ = (bitField0_ & ~0x00000080);
              distributedCoinsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDistributedCoinsFieldBuilder() : null;
            } else {
              distributedCoinsBuilder_.addAllMessages(other.distributedCoins_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getDistributeToFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                com.cosmos.base.v1beta1.CoinProto.Coin m =
                    input.readMessage(
                        com.cosmos.base.v1beta1.CoinProto.Coin.parser(),
                        extensionRegistry);
                if (coinsBuilder_ == null) {
                  ensureCoinsIsMutable();
                  coins_.add(m);
                } else {
                  coinsBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getStartTimeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                distrEpochIdentifier_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 48: {
                numEpochsPaidOver_ = input.readUInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                filledEpochs_ = input.readUInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 66: {
                com.cosmos.base.v1beta1.CoinProto.Coin m =
                    input.readMessage(
                        com.cosmos.base.v1beta1.CoinProto.Coin.parser(),
                        extensionRegistry);
                if (distributedCoinsBuilder_ == null) {
                  ensureDistributedCoinsIsMutable();
                  distributedCoins_.add(m);
                } else {
                  distributedCoinsBuilder_.addMessage(m);
                }
                break;
              } // case 66
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       * id is the unique ID of a Stream
       * </pre>
       *
       * <code>uint64 id = 1 [json_name = "id"];</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * id is the unique ID of a Stream
       * </pre>
       *
       * <code>uint64 id = 1 [json_name = "id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id is the unique ID of a Stream
       * </pre>
       *
       * <code>uint64 id = 1 [json_name = "id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo distributeTo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo, com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo.Builder, com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfoOrBuilder> distributeToBuilder_;
      /**
       * <pre>
       * distribute_to is the distr_info.
       * </pre>
       *
       * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
       * @return Whether the distributeTo field is set.
       */
      public boolean hasDistributeTo() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * distribute_to is the distr_info.
       * </pre>
       *
       * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
       * @return The distributeTo.
       */
      public com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo getDistributeTo() {
        if (distributeToBuilder_ == null) {
          return distributeTo_ == null ? com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo.getDefaultInstance() : distributeTo_;
        } else {
          return distributeToBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * distribute_to is the distr_info.
       * </pre>
       *
       * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
       */
      public Builder setDistributeTo(com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo value) {
        if (distributeToBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          distributeTo_ = value;
        } else {
          distributeToBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * distribute_to is the distr_info.
       * </pre>
       *
       * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
       */
      public Builder setDistributeTo(
          com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo.Builder builderForValue) {
        if (distributeToBuilder_ == null) {
          distributeTo_ = builderForValue.build();
        } else {
          distributeToBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * distribute_to is the distr_info.
       * </pre>
       *
       * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
       */
      public Builder mergeDistributeTo(com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo value) {
        if (distributeToBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            distributeTo_ != null &&
            distributeTo_ != com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo.getDefaultInstance()) {
            getDistributeToBuilder().mergeFrom(value);
          } else {
            distributeTo_ = value;
          }
        } else {
          distributeToBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * distribute_to is the distr_info.
       * </pre>
       *
       * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
       */
      public Builder clearDistributeTo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        distributeTo_ = null;
        if (distributeToBuilder_ != null) {
          distributeToBuilder_.dispose();
          distributeToBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * distribute_to is the distr_info.
       * </pre>
       *
       * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
       */
      public com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo.Builder getDistributeToBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDistributeToFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * distribute_to is the distr_info.
       * </pre>
       *
       * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
       */
      public com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfoOrBuilder getDistributeToOrBuilder() {
        if (distributeToBuilder_ != null) {
          return distributeToBuilder_.getMessageOrBuilder();
        } else {
          return distributeTo_ == null ?
              com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo.getDefaultInstance() : distributeTo_;
        }
      }
      /**
       * <pre>
       * distribute_to is the distr_info.
       * </pre>
       *
       * <code>.dymensionxyz.dymension.streamer.DistrInfo distribute_to = 2 [json_name = "distributeTo"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo, com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo.Builder, com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfoOrBuilder> 
          getDistributeToFieldBuilder() {
        if (distributeToBuilder_ == null) {
          distributeToBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo, com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfo.Builder, com.dymensionxyz.dymension.streamer.DistrInfoProto.DistrInfoOrBuilder>(
                  getDistributeTo(),
                  getParentForChildren(),
                  isClean());
          distributeTo_ = null;
        }
        return distributeToBuilder_;
      }

      private java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> coins_ =
        java.util.Collections.emptyList();
      private void ensureCoinsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          coins_ = new java.util.ArrayList<com.cosmos.base.v1beta1.CoinProto.Coin>(coins_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> coinsBuilder_;

      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> getCoinsList() {
        if (coinsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(coins_);
        } else {
          return coinsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getCoinsCount() {
        if (coinsBuilder_ == null) {
          return coins_.size();
        } else {
          return coinsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin getCoins(int index) {
        if (coinsBuilder_ == null) {
          return coins_.get(index);
        } else {
          return coinsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setCoins(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (coinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoinsIsMutable();
          coins_.set(index, value);
          onChanged();
        } else {
          coinsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setCoins(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          coins_.set(index, builderForValue.build());
          onChanged();
        } else {
          coinsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addCoins(com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (coinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoinsIsMutable();
          coins_.add(value);
          onChanged();
        } else {
          coinsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addCoins(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (coinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoinsIsMutable();
          coins_.add(index, value);
          onChanged();
        } else {
          coinsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addCoins(
          com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          coins_.add(builderForValue.build());
          onChanged();
        } else {
          coinsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addCoins(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          coins_.add(index, builderForValue.build());
          onChanged();
        } else {
          coinsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllCoins(
          java.lang.Iterable<? extends com.cosmos.base.v1beta1.CoinProto.Coin> values) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, coins_);
          onChanged();
        } else {
          coinsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearCoins() {
        if (coinsBuilder_ == null) {
          coins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          coinsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removeCoins(int index) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          coins_.remove(index);
          onChanged();
        } else {
          coinsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder getCoinsBuilder(
          int index) {
        return getCoinsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getCoinsOrBuilder(
          int index) {
        if (coinsBuilder_ == null) {
          return coins_.get(index);  } else {
          return coinsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
           getCoinsOrBuilderList() {
        if (coinsBuilder_ != null) {
          return coinsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(coins_);
        }
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder addCoinsBuilder() {
        return getCoinsFieldBuilder().addBuilder(
            com.cosmos.base.v1beta1.CoinProto.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder addCoinsBuilder(
          int index) {
        return getCoinsFieldBuilder().addBuilder(
            index, com.cosmos.base.v1beta1.CoinProto.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * coins is the total amount of coins that have been in the stream
       * Can distribute multiple coin denoms
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin coins = 3 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin.Builder> 
           getCoinsBuilderList() {
        return getCoinsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
          getCoinsFieldBuilder() {
        if (coinsBuilder_ == null) {
          coinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder>(
                  coins_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          coins_ = null;
        }
        return coinsBuilder_;
      }

      private com.google.protobuf.Timestamp startTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> startTimeBuilder_;
      /**
       * <pre>
       * start_time is the distribution start time
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       * @return Whether the startTime field is set.
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * start_time is the distribution start time
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       * @return The startTime.
       */
      public com.google.protobuf.Timestamp getStartTime() {
        if (startTimeBuilder_ == null) {
          return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
        } else {
          return startTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * start_time is the distribution start time
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder setStartTime(com.google.protobuf.Timestamp value) {
        if (startTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startTime_ = value;
        } else {
          startTimeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * start_time is the distribution start time
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder setStartTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (startTimeBuilder_ == null) {
          startTime_ = builderForValue.build();
        } else {
          startTimeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * start_time is the distribution start time
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder mergeStartTime(com.google.protobuf.Timestamp value) {
        if (startTimeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            startTime_ != null &&
            startTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getStartTimeBuilder().mergeFrom(value);
          } else {
            startTime_ = value;
          }
        } else {
          startTimeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * start_time is the distribution start time
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        startTime_ = null;
        if (startTimeBuilder_ != null) {
          startTimeBuilder_.dispose();
          startTimeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * start_time is the distribution start time
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.Timestamp.Builder getStartTimeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getStartTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * start_time is the distribution start time
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
        if (startTimeBuilder_ != null) {
          return startTimeBuilder_.getMessageOrBuilder();
        } else {
          return startTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
        }
      }
      /**
       * <pre>
       * start_time is the distribution start time
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getStartTimeFieldBuilder() {
        if (startTimeBuilder_ == null) {
          startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getStartTime(),
                  getParentForChildren(),
                  isClean());
          startTime_ = null;
        }
        return startTimeBuilder_;
      }

      private java.lang.Object distrEpochIdentifier_ = "";
      /**
       * <pre>
       * distr_epoch_identifier is what epoch type di-stribution will be triggered by
       * (day, week, etc.)
       * </pre>
       *
       * <code>string distr_epoch_identifier = 5 [json_name = "distrEpochIdentifier", (.gogoproto.moretags) = "yaml:&#92;"distr_epoch_identifier&#92;""];</code>
       * @return The distrEpochIdentifier.
       */
      public java.lang.String getDistrEpochIdentifier() {
        java.lang.Object ref = distrEpochIdentifier_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          distrEpochIdentifier_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * distr_epoch_identifier is what epoch type di-stribution will be triggered by
       * (day, week, etc.)
       * </pre>
       *
       * <code>string distr_epoch_identifier = 5 [json_name = "distrEpochIdentifier", (.gogoproto.moretags) = "yaml:&#92;"distr_epoch_identifier&#92;""];</code>
       * @return The bytes for distrEpochIdentifier.
       */
      public com.google.protobuf.ByteString
          getDistrEpochIdentifierBytes() {
        java.lang.Object ref = distrEpochIdentifier_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          distrEpochIdentifier_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * distr_epoch_identifier is what epoch type di-stribution will be triggered by
       * (day, week, etc.)
       * </pre>
       *
       * <code>string distr_epoch_identifier = 5 [json_name = "distrEpochIdentifier", (.gogoproto.moretags) = "yaml:&#92;"distr_epoch_identifier&#92;""];</code>
       * @param value The distrEpochIdentifier to set.
       * @return This builder for chaining.
       */
      public Builder setDistrEpochIdentifier(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        distrEpochIdentifier_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * distr_epoch_identifier is what epoch type di-stribution will be triggered by
       * (day, week, etc.)
       * </pre>
       *
       * <code>string distr_epoch_identifier = 5 [json_name = "distrEpochIdentifier", (.gogoproto.moretags) = "yaml:&#92;"distr_epoch_identifier&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearDistrEpochIdentifier() {
        distrEpochIdentifier_ = getDefaultInstance().getDistrEpochIdentifier();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * distr_epoch_identifier is what epoch type di-stribution will be triggered by
       * (day, week, etc.)
       * </pre>
       *
       * <code>string distr_epoch_identifier = 5 [json_name = "distrEpochIdentifier", (.gogoproto.moretags) = "yaml:&#92;"distr_epoch_identifier&#92;""];</code>
       * @param value The bytes for distrEpochIdentifier to set.
       * @return This builder for chaining.
       */
      public Builder setDistrEpochIdentifierBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        distrEpochIdentifier_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private long numEpochsPaidOver_ ;
      /**
       * <pre>
       * num_epochs_paid_over is the number of total epochs distribution will be
       * completed over
       * </pre>
       *
       * <code>uint64 num_epochs_paid_over = 6 [json_name = "numEpochsPaidOver"];</code>
       * @return The numEpochsPaidOver.
       */
      @java.lang.Override
      public long getNumEpochsPaidOver() {
        return numEpochsPaidOver_;
      }
      /**
       * <pre>
       * num_epochs_paid_over is the number of total epochs distribution will be
       * completed over
       * </pre>
       *
       * <code>uint64 num_epochs_paid_over = 6 [json_name = "numEpochsPaidOver"];</code>
       * @param value The numEpochsPaidOver to set.
       * @return This builder for chaining.
       */
      public Builder setNumEpochsPaidOver(long value) {

        numEpochsPaidOver_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * num_epochs_paid_over is the number of total epochs distribution will be
       * completed over
       * </pre>
       *
       * <code>uint64 num_epochs_paid_over = 6 [json_name = "numEpochsPaidOver"];</code>
       * @return This builder for chaining.
       */
      public Builder clearNumEpochsPaidOver() {
        bitField0_ = (bitField0_ & ~0x00000020);
        numEpochsPaidOver_ = 0L;
        onChanged();
        return this;
      }

      private long filledEpochs_ ;
      /**
       * <pre>
       * filled_epochs is the number of epochs distribution has been completed on
       * already
       * </pre>
       *
       * <code>uint64 filled_epochs = 7 [json_name = "filledEpochs"];</code>
       * @return The filledEpochs.
       */
      @java.lang.Override
      public long getFilledEpochs() {
        return filledEpochs_;
      }
      /**
       * <pre>
       * filled_epochs is the number of epochs distribution has been completed on
       * already
       * </pre>
       *
       * <code>uint64 filled_epochs = 7 [json_name = "filledEpochs"];</code>
       * @param value The filledEpochs to set.
       * @return This builder for chaining.
       */
      public Builder setFilledEpochs(long value) {

        filledEpochs_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * filled_epochs is the number of epochs distribution has been completed on
       * already
       * </pre>
       *
       * <code>uint64 filled_epochs = 7 [json_name = "filledEpochs"];</code>
       * @return This builder for chaining.
       */
      public Builder clearFilledEpochs() {
        bitField0_ = (bitField0_ & ~0x00000040);
        filledEpochs_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> distributedCoins_ =
        java.util.Collections.emptyList();
      private void ensureDistributedCoinsIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          distributedCoins_ = new java.util.ArrayList<com.cosmos.base.v1beta1.CoinProto.Coin>(distributedCoins_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> distributedCoinsBuilder_;

      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin> getDistributedCoinsList() {
        if (distributedCoinsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(distributedCoins_);
        } else {
          return distributedCoinsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getDistributedCoinsCount() {
        if (distributedCoinsBuilder_ == null) {
          return distributedCoins_.size();
        } else {
          return distributedCoinsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin getDistributedCoins(int index) {
        if (distributedCoinsBuilder_ == null) {
          return distributedCoins_.get(index);
        } else {
          return distributedCoinsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setDistributedCoins(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (distributedCoinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDistributedCoinsIsMutable();
          distributedCoins_.set(index, value);
          onChanged();
        } else {
          distributedCoinsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setDistributedCoins(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (distributedCoinsBuilder_ == null) {
          ensureDistributedCoinsIsMutable();
          distributedCoins_.set(index, builderForValue.build());
          onChanged();
        } else {
          distributedCoinsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addDistributedCoins(com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (distributedCoinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDistributedCoinsIsMutable();
          distributedCoins_.add(value);
          onChanged();
        } else {
          distributedCoinsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addDistributedCoins(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin value) {
        if (distributedCoinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDistributedCoinsIsMutable();
          distributedCoins_.add(index, value);
          onChanged();
        } else {
          distributedCoinsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addDistributedCoins(
          com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (distributedCoinsBuilder_ == null) {
          ensureDistributedCoinsIsMutable();
          distributedCoins_.add(builderForValue.build());
          onChanged();
        } else {
          distributedCoinsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addDistributedCoins(
          int index, com.cosmos.base.v1beta1.CoinProto.Coin.Builder builderForValue) {
        if (distributedCoinsBuilder_ == null) {
          ensureDistributedCoinsIsMutable();
          distributedCoins_.add(index, builderForValue.build());
          onChanged();
        } else {
          distributedCoinsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllDistributedCoins(
          java.lang.Iterable<? extends com.cosmos.base.v1beta1.CoinProto.Coin> values) {
        if (distributedCoinsBuilder_ == null) {
          ensureDistributedCoinsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, distributedCoins_);
          onChanged();
        } else {
          distributedCoinsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearDistributedCoins() {
        if (distributedCoinsBuilder_ == null) {
          distributedCoins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          distributedCoinsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removeDistributedCoins(int index) {
        if (distributedCoinsBuilder_ == null) {
          ensureDistributedCoinsIsMutable();
          distributedCoins_.remove(index);
          onChanged();
        } else {
          distributedCoinsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder getDistributedCoinsBuilder(
          int index) {
        return getDistributedCoinsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder getDistributedCoinsOrBuilder(
          int index) {
        if (distributedCoinsBuilder_ == null) {
          return distributedCoins_.get(index);  } else {
          return distributedCoinsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
           getDistributedCoinsOrBuilderList() {
        if (distributedCoinsBuilder_ != null) {
          return distributedCoinsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(distributedCoins_);
        }
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder addDistributedCoinsBuilder() {
        return getDistributedCoinsFieldBuilder().addBuilder(
            com.cosmos.base.v1beta1.CoinProto.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public com.cosmos.base.v1beta1.CoinProto.Coin.Builder addDistributedCoinsBuilder(
          int index) {
        return getDistributedCoinsFieldBuilder().addBuilder(
            index, com.cosmos.base.v1beta1.CoinProto.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * distributed_coins are coins that have been distributed already
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 8 [json_name = "distributedCoins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<com.cosmos.base.v1beta1.CoinProto.Coin.Builder> 
           getDistributedCoinsBuilderList() {
        return getDistributedCoinsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder> 
          getDistributedCoinsFieldBuilder() {
        if (distributedCoinsBuilder_ == null) {
          distributedCoinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cosmos.base.v1beta1.CoinProto.Coin, com.cosmos.base.v1beta1.CoinProto.Coin.Builder, com.cosmos.base.v1beta1.CoinProto.CoinOrBuilder>(
                  distributedCoins_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          distributedCoins_ = null;
        }
        return distributedCoinsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dymensionxyz.dymension.streamer.Stream)
    }

    // @@protoc_insertion_point(class_scope:dymensionxyz.dymension.streamer.Stream)
    private static final com.dymensionxyz.dymension.streamer.StreamProto.Stream DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.dymensionxyz.dymension.streamer.StreamProto.Stream();
    }

    public static com.dymensionxyz.dymension.streamer.StreamProto.Stream getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Stream>
        PARSER = new com.google.protobuf.AbstractParser<Stream>() {
      @java.lang.Override
      public Stream parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Stream> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Stream> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.dymensionxyz.dymension.streamer.StreamProto.Stream getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dymensionxyz_dymension_streamer_Stream_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dymensionxyz_dymension_streamer_Stream_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037dymension/streamer/stream.proto\022\037dymen" +
      "sionxyz.dymension.streamer\032\024gogoproto/go" +
      "go.proto\032\036google/protobuf/duration.proto" +
      "\032\037google/protobuf/timestamp.proto\032\036cosmo" +
      "s/base/v1beta1/coin.proto\032#dymension/str" +
      "eamer/distr_info.proto\"\317\004\n\006Stream\022\016\n\002id\030" +
      "\001 \001(\004R\002id\022O\n\rdistribute_to\030\002 \001(\0132*.dymen" +
      "sionxyz.dymension.streamer.DistrInfoR\014di" +
      "stributeTo\022a\n\005coins\030\003 \003(\0132\031.cosmos.base." +
      "v1beta1.CoinB0\310\336\037\000\252\337\037(github.com/cosmos/" +
      "cosmos-sdk/types.CoinsR\005coins\022X\n\nstart_t" +
      "ime\030\004 \001(\0132\032.google.protobuf.TimestampB\035\310" +
      "\336\037\000\362\336\037\021yaml:\"start_time\"\220\337\037\001R\tstartTime\022" +
      "W\n\026distr_epoch_identifier\030\005 \001(\tB!\362\336\037\035yam" +
      "l:\"distr_epoch_identifier\"R\024distrEpochId" +
      "entifier\022/\n\024num_epochs_paid_over\030\006 \001(\004R\021" +
      "numEpochsPaidOver\022#\n\rfilled_epochs\030\007 \001(\004" +
      "R\014filledEpochs\022x\n\021distributed_coins\030\010 \003(" +
      "\0132\031.cosmos.base.v1beta1.CoinB0\310\336\037\000\252\337\037(gi" +
      "thub.com/cosmos/cosmos-sdk/types.CoinsR\020" +
      "distributedCoinsB\205\002\n#com.dymensionxyz.dy" +
      "mension.streamerB\013StreamProtoZ5github.co" +
      "m/dymensionxyz/dymension/v3/x/streamer/t" +
      "ypes\242\002\003DDS\252\002\037Dymensionxyz.Dymension.Stre" +
      "amer\312\002\037Dymensionxyz\\Dymension\\Streamer\342\002" +
      "+Dymensionxyz\\Dymension\\Streamer\\GPBMeta" +
      "data\352\002!Dymensionxyz::Dymension::Streamer" +
      "b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.dymensionxyz.dymension.streamer.DistrInfoProto.getDescriptor(),
        });
    internal_static_dymensionxyz_dymension_streamer_Stream_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dymensionxyz_dymension_streamer_Stream_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dymensionxyz_dymension_streamer_Stream_descriptor,
        new java.lang.String[] { "Id", "DistributeTo", "Coins", "StartTime", "DistrEpochIdentifier", "NumEpochsPaidOver", "FilledEpochs", "DistributedCoins", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.dymensionxyz.dymension.streamer.DistrInfoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

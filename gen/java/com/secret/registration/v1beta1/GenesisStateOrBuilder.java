// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: secret/registration/v1beta1/genesis.proto

package com.secret.registration.v1beta1;

public interface GenesisStateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:secret.registration.v1beta1.GenesisState)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .secret.registration.v1beta1.RegistrationNodeInfo registration = 1 [json_name = "registration", (.gogoproto.jsontag) = "reg_info"];</code>
   */
  java.util.List<com.secret.registration.v1beta1.RegistrationNodeInfo> 
      getRegistrationList();
  /**
   * <code>repeated .secret.registration.v1beta1.RegistrationNodeInfo registration = 1 [json_name = "registration", (.gogoproto.jsontag) = "reg_info"];</code>
   */
  com.secret.registration.v1beta1.RegistrationNodeInfo getRegistration(int index);
  /**
   * <code>repeated .secret.registration.v1beta1.RegistrationNodeInfo registration = 1 [json_name = "registration", (.gogoproto.jsontag) = "reg_info"];</code>
   */
  int getRegistrationCount();
  /**
   * <code>repeated .secret.registration.v1beta1.RegistrationNodeInfo registration = 1 [json_name = "registration", (.gogoproto.jsontag) = "reg_info"];</code>
   */
  java.util.List<? extends com.secret.registration.v1beta1.RegistrationNodeInfoOrBuilder> 
      getRegistrationOrBuilderList();
  /**
   * <code>repeated .secret.registration.v1beta1.RegistrationNodeInfo registration = 1 [json_name = "registration", (.gogoproto.jsontag) = "reg_info"];</code>
   */
  com.secret.registration.v1beta1.RegistrationNodeInfoOrBuilder getRegistrationOrBuilder(
      int index);

  /**
   * <code>.secret.registration.v1beta1.MasterKey node_exch_master_key = 2 [json_name = "nodeExchMasterKey", (.gogoproto.jsontag) = "node_exch_key"];</code>
   * @return Whether the nodeExchMasterKey field is set.
   */
  boolean hasNodeExchMasterKey();
  /**
   * <code>.secret.registration.v1beta1.MasterKey node_exch_master_key = 2 [json_name = "nodeExchMasterKey", (.gogoproto.jsontag) = "node_exch_key"];</code>
   * @return The nodeExchMasterKey.
   */
  com.secret.registration.v1beta1.MasterKey getNodeExchMasterKey();
  /**
   * <code>.secret.registration.v1beta1.MasterKey node_exch_master_key = 2 [json_name = "nodeExchMasterKey", (.gogoproto.jsontag) = "node_exch_key"];</code>
   */
  com.secret.registration.v1beta1.MasterKeyOrBuilder getNodeExchMasterKeyOrBuilder();

  /**
   * <code>.secret.registration.v1beta1.MasterKey io_master_key = 3 [json_name = "ioMasterKey", (.gogoproto.jsontag) = "io_exch_key"];</code>
   * @return Whether the ioMasterKey field is set.
   */
  boolean hasIoMasterKey();
  /**
   * <code>.secret.registration.v1beta1.MasterKey io_master_key = 3 [json_name = "ioMasterKey", (.gogoproto.jsontag) = "io_exch_key"];</code>
   * @return The ioMasterKey.
   */
  com.secret.registration.v1beta1.MasterKey getIoMasterKey();
  /**
   * <code>.secret.registration.v1beta1.MasterKey io_master_key = 3 [json_name = "ioMasterKey", (.gogoproto.jsontag) = "io_exch_key"];</code>
   */
  com.secret.registration.v1beta1.MasterKeyOrBuilder getIoMasterKeyOrBuilder();
}

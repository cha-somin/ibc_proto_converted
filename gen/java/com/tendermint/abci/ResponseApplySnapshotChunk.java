// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tendermint/abci/types.proto

package com.tendermint.abci;

/**
 * Protobuf type {@code tendermint.abci.ResponseApplySnapshotChunk}
 */
public final class ResponseApplySnapshotChunk extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tendermint.abci.ResponseApplySnapshotChunk)
    ResponseApplySnapshotChunkOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ResponseApplySnapshotChunk.newBuilder() to construct.
  private ResponseApplySnapshotChunk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ResponseApplySnapshotChunk() {
    result_ = 0;
    refetchChunks_ = emptyIntList();
    rejectSenders_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ResponseApplySnapshotChunk();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tendermint.abci.TypesProto.internal_static_tendermint_abci_ResponseApplySnapshotChunk_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tendermint.abci.TypesProto.internal_static_tendermint_abci_ResponseApplySnapshotChunk_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tendermint.abci.ResponseApplySnapshotChunk.class, com.tendermint.abci.ResponseApplySnapshotChunk.Builder.class);
  }

  /**
   * Protobuf enum {@code tendermint.abci.ResponseApplySnapshotChunk.Result}
   */
  public enum Result
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown result, abort all snapshot restoration
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <pre>
     * Chunk successfully accepted
     * </pre>
     *
     * <code>ACCEPT = 1;</code>
     */
    ACCEPT(1),
    /**
     * <pre>
     * Abort all snapshot restoration
     * </pre>
     *
     * <code>ABORT = 2;</code>
     */
    ABORT(2),
    /**
     * <pre>
     * Retry chunk (combine with refetch and reject)
     * </pre>
     *
     * <code>RETRY = 3;</code>
     */
    RETRY(3),
    /**
     * <pre>
     * Retry snapshot (combine with refetch and reject)
     * </pre>
     *
     * <code>RETRY_SNAPSHOT = 4;</code>
     */
    RETRY_SNAPSHOT(4),
    /**
     * <pre>
     * Reject this snapshot, try others
     * </pre>
     *
     * <code>REJECT_SNAPSHOT = 5;</code>
     */
    REJECT_SNAPSHOT(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown result, abort all snapshot restoration
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * Chunk successfully accepted
     * </pre>
     *
     * <code>ACCEPT = 1;</code>
     */
    public static final int ACCEPT_VALUE = 1;
    /**
     * <pre>
     * Abort all snapshot restoration
     * </pre>
     *
     * <code>ABORT = 2;</code>
     */
    public static final int ABORT_VALUE = 2;
    /**
     * <pre>
     * Retry chunk (combine with refetch and reject)
     * </pre>
     *
     * <code>RETRY = 3;</code>
     */
    public static final int RETRY_VALUE = 3;
    /**
     * <pre>
     * Retry snapshot (combine with refetch and reject)
     * </pre>
     *
     * <code>RETRY_SNAPSHOT = 4;</code>
     */
    public static final int RETRY_SNAPSHOT_VALUE = 4;
    /**
     * <pre>
     * Reject this snapshot, try others
     * </pre>
     *
     * <code>REJECT_SNAPSHOT = 5;</code>
     */
    public static final int REJECT_SNAPSHOT_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Result valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Result forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return ACCEPT;
        case 2: return ABORT;
        case 3: return RETRY;
        case 4: return RETRY_SNAPSHOT;
        case 5: return REJECT_SNAPSHOT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Result>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Result> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Result>() {
            public Result findValueByNumber(int number) {
              return Result.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.tendermint.abci.ResponseApplySnapshotChunk.getDescriptor().getEnumTypes().get(0);
    }

    private static final Result[] VALUES = values();

    public static Result valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Result(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tendermint.abci.ResponseApplySnapshotChunk.Result)
  }

  public static final int RESULT_FIELD_NUMBER = 1;
  private int result_ = 0;
  /**
   * <code>.tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];</code>
   * @return The enum numeric value on the wire for result.
   */
  @java.lang.Override public int getResultValue() {
    return result_;
  }
  /**
   * <code>.tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];</code>
   * @return The result.
   */
  @java.lang.Override public com.tendermint.abci.ResponseApplySnapshotChunk.Result getResult() {
    com.tendermint.abci.ResponseApplySnapshotChunk.Result result = com.tendermint.abci.ResponseApplySnapshotChunk.Result.forNumber(result_);
    return result == null ? com.tendermint.abci.ResponseApplySnapshotChunk.Result.UNRECOGNIZED : result;
  }

  public static final int REFETCH_CHUNKS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList refetchChunks_;
  /**
   * <pre>
   * Chunks to refetch and reapply
   * </pre>
   *
   * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
   * @return A list containing the refetchChunks.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getRefetchChunksList() {
    return refetchChunks_;
  }
  /**
   * <pre>
   * Chunks to refetch and reapply
   * </pre>
   *
   * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
   * @return The count of refetchChunks.
   */
  public int getRefetchChunksCount() {
    return refetchChunks_.size();
  }
  /**
   * <pre>
   * Chunks to refetch and reapply
   * </pre>
   *
   * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
   * @param index The index of the element to return.
   * @return The refetchChunks at the given index.
   */
  public int getRefetchChunks(int index) {
    return refetchChunks_.getInt(index);
  }
  private int refetchChunksMemoizedSerializedSize = -1;

  public static final int REJECT_SENDERS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList rejectSenders_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * Chunk senders to reject and ban
   * </pre>
   *
   * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
   * @return A list containing the rejectSenders.
   */
  public com.google.protobuf.ProtocolStringList
      getRejectSendersList() {
    return rejectSenders_;
  }
  /**
   * <pre>
   * Chunk senders to reject and ban
   * </pre>
   *
   * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
   * @return The count of rejectSenders.
   */
  public int getRejectSendersCount() {
    return rejectSenders_.size();
  }
  /**
   * <pre>
   * Chunk senders to reject and ban
   * </pre>
   *
   * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
   * @param index The index of the element to return.
   * @return The rejectSenders at the given index.
   */
  public java.lang.String getRejectSenders(int index) {
    return rejectSenders_.get(index);
  }
  /**
   * <pre>
   * Chunk senders to reject and ban
   * </pre>
   *
   * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the rejectSenders at the given index.
   */
  public com.google.protobuf.ByteString
      getRejectSendersBytes(int index) {
    return rejectSenders_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (result_ != com.tendermint.abci.ResponseApplySnapshotChunk.Result.UNKNOWN.getNumber()) {
      output.writeEnum(1, result_);
    }
    if (getRefetchChunksList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(refetchChunksMemoizedSerializedSize);
    }
    for (int i = 0; i < refetchChunks_.size(); i++) {
      output.writeUInt32NoTag(refetchChunks_.getInt(i));
    }
    for (int i = 0; i < rejectSenders_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, rejectSenders_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (result_ != com.tendermint.abci.ResponseApplySnapshotChunk.Result.UNKNOWN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, result_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < refetchChunks_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(refetchChunks_.getInt(i));
      }
      size += dataSize;
      if (!getRefetchChunksList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      refetchChunksMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < rejectSenders_.size(); i++) {
        dataSize += computeStringSizeNoTag(rejectSenders_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getRejectSendersList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tendermint.abci.ResponseApplySnapshotChunk)) {
      return super.equals(obj);
    }
    com.tendermint.abci.ResponseApplySnapshotChunk other = (com.tendermint.abci.ResponseApplySnapshotChunk) obj;

    if (result_ != other.result_) return false;
    if (!getRefetchChunksList()
        .equals(other.getRefetchChunksList())) return false;
    if (!getRejectSendersList()
        .equals(other.getRejectSendersList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + RESULT_FIELD_NUMBER;
    hash = (53 * hash) + result_;
    if (getRefetchChunksCount() > 0) {
      hash = (37 * hash) + REFETCH_CHUNKS_FIELD_NUMBER;
      hash = (53 * hash) + getRefetchChunksList().hashCode();
    }
    if (getRejectSendersCount() > 0) {
      hash = (37 * hash) + REJECT_SENDERS_FIELD_NUMBER;
      hash = (53 * hash) + getRejectSendersList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tendermint.abci.ResponseApplySnapshotChunk parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tendermint.abci.ResponseApplySnapshotChunk parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tendermint.abci.ResponseApplySnapshotChunk parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tendermint.abci.ResponseApplySnapshotChunk parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tendermint.abci.ResponseApplySnapshotChunk parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tendermint.abci.ResponseApplySnapshotChunk parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tendermint.abci.ResponseApplySnapshotChunk parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tendermint.abci.ResponseApplySnapshotChunk parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.tendermint.abci.ResponseApplySnapshotChunk parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.tendermint.abci.ResponseApplySnapshotChunk parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tendermint.abci.ResponseApplySnapshotChunk parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tendermint.abci.ResponseApplySnapshotChunk parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tendermint.abci.ResponseApplySnapshotChunk prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code tendermint.abci.ResponseApplySnapshotChunk}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tendermint.abci.ResponseApplySnapshotChunk)
      com.tendermint.abci.ResponseApplySnapshotChunkOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tendermint.abci.TypesProto.internal_static_tendermint_abci_ResponseApplySnapshotChunk_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tendermint.abci.TypesProto.internal_static_tendermint_abci_ResponseApplySnapshotChunk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tendermint.abci.ResponseApplySnapshotChunk.class, com.tendermint.abci.ResponseApplySnapshotChunk.Builder.class);
    }

    // Construct using com.tendermint.abci.ResponseApplySnapshotChunk.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      result_ = 0;
      refetchChunks_ = emptyIntList();
      rejectSenders_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tendermint.abci.TypesProto.internal_static_tendermint_abci_ResponseApplySnapshotChunk_descriptor;
    }

    @java.lang.Override
    public com.tendermint.abci.ResponseApplySnapshotChunk getDefaultInstanceForType() {
      return com.tendermint.abci.ResponseApplySnapshotChunk.getDefaultInstance();
    }

    @java.lang.Override
    public com.tendermint.abci.ResponseApplySnapshotChunk build() {
      com.tendermint.abci.ResponseApplySnapshotChunk result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tendermint.abci.ResponseApplySnapshotChunk buildPartial() {
      com.tendermint.abci.ResponseApplySnapshotChunk result = new com.tendermint.abci.ResponseApplySnapshotChunk(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.tendermint.abci.ResponseApplySnapshotChunk result) {
      if (((bitField0_ & 0x00000002) != 0)) {
        refetchChunks_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.refetchChunks_ = refetchChunks_;
    }

    private void buildPartial0(com.tendermint.abci.ResponseApplySnapshotChunk result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.result_ = result_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        rejectSenders_.makeImmutable();
        result.rejectSenders_ = rejectSenders_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tendermint.abci.ResponseApplySnapshotChunk) {
        return mergeFrom((com.tendermint.abci.ResponseApplySnapshotChunk)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tendermint.abci.ResponseApplySnapshotChunk other) {
      if (other == com.tendermint.abci.ResponseApplySnapshotChunk.getDefaultInstance()) return this;
      if (other.result_ != 0) {
        setResultValue(other.getResultValue());
      }
      if (!other.refetchChunks_.isEmpty()) {
        if (refetchChunks_.isEmpty()) {
          refetchChunks_ = other.refetchChunks_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureRefetchChunksIsMutable();
          refetchChunks_.addAll(other.refetchChunks_);
        }
        onChanged();
      }
      if (!other.rejectSenders_.isEmpty()) {
        if (rejectSenders_.isEmpty()) {
          rejectSenders_ = other.rejectSenders_;
          bitField0_ |= 0x00000004;
        } else {
          ensureRejectSendersIsMutable();
          rejectSenders_.addAll(other.rejectSenders_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              result_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              int v = input.readUInt32();
              ensureRefetchChunksIsMutable();
              refetchChunks_.addInt(v);
              break;
            } // case 16
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureRefetchChunksIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                refetchChunks_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureRejectSendersIsMutable();
              rejectSenders_.add(s);
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int result_ = 0;
    /**
     * <code>.tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];</code>
     * @return The enum numeric value on the wire for result.
     */
    @java.lang.Override public int getResultValue() {
      return result_;
    }
    /**
     * <code>.tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];</code>
     * @param value The enum numeric value on the wire for result to set.
     * @return This builder for chaining.
     */
    public Builder setResultValue(int value) {
      result_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];</code>
     * @return The result.
     */
    @java.lang.Override
    public com.tendermint.abci.ResponseApplySnapshotChunk.Result getResult() {
      com.tendermint.abci.ResponseApplySnapshotChunk.Result result = com.tendermint.abci.ResponseApplySnapshotChunk.Result.forNumber(result_);
      return result == null ? com.tendermint.abci.ResponseApplySnapshotChunk.Result.UNRECOGNIZED : result;
    }
    /**
     * <code>.tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];</code>
     * @param value The result to set.
     * @return This builder for chaining.
     */
    public Builder setResult(com.tendermint.abci.ResponseApplySnapshotChunk.Result value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      result_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];</code>
     * @return This builder for chaining.
     */
    public Builder clearResult() {
      bitField0_ = (bitField0_ & ~0x00000001);
      result_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList refetchChunks_ = emptyIntList();
    private void ensureRefetchChunksIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        refetchChunks_ = mutableCopy(refetchChunks_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     * @return A list containing the refetchChunks.
     */
    public java.util.List<java.lang.Integer>
        getRefetchChunksList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(refetchChunks_) : refetchChunks_;
    }
    /**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     * @return The count of refetchChunks.
     */
    public int getRefetchChunksCount() {
      return refetchChunks_.size();
    }
    /**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     * @param index The index of the element to return.
     * @return The refetchChunks at the given index.
     */
    public int getRefetchChunks(int index) {
      return refetchChunks_.getInt(index);
    }
    /**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     * @param index The index to set the value at.
     * @param value The refetchChunks to set.
     * @return This builder for chaining.
     */
    public Builder setRefetchChunks(
        int index, int value) {

      ensureRefetchChunksIsMutable();
      refetchChunks_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     * @param value The refetchChunks to add.
     * @return This builder for chaining.
     */
    public Builder addRefetchChunks(int value) {

      ensureRefetchChunksIsMutable();
      refetchChunks_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     * @param values The refetchChunks to add.
     * @return This builder for chaining.
     */
    public Builder addAllRefetchChunks(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureRefetchChunksIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, refetchChunks_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRefetchChunks() {
      refetchChunks_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList rejectSenders_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureRejectSendersIsMutable() {
      if (!rejectSenders_.isModifiable()) {
        rejectSenders_ = new com.google.protobuf.LazyStringArrayList(rejectSenders_);
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @return A list containing the rejectSenders.
     */
    public com.google.protobuf.ProtocolStringList
        getRejectSendersList() {
      rejectSenders_.makeImmutable();
      return rejectSenders_;
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @return The count of rejectSenders.
     */
    public int getRejectSendersCount() {
      return rejectSenders_.size();
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @param index The index of the element to return.
     * @return The rejectSenders at the given index.
     */
    public java.lang.String getRejectSenders(int index) {
      return rejectSenders_.get(index);
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the rejectSenders at the given index.
     */
    public com.google.protobuf.ByteString
        getRejectSendersBytes(int index) {
      return rejectSenders_.getByteString(index);
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @param index The index to set the value at.
     * @param value The rejectSenders to set.
     * @return This builder for chaining.
     */
    public Builder setRejectSenders(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureRejectSendersIsMutable();
      rejectSenders_.set(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @param value The rejectSenders to add.
     * @return This builder for chaining.
     */
    public Builder addRejectSenders(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureRejectSendersIsMutable();
      rejectSenders_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @param values The rejectSenders to add.
     * @return This builder for chaining.
     */
    public Builder addAllRejectSenders(
        java.lang.Iterable<java.lang.String> values) {
      ensureRejectSendersIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, rejectSenders_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRejectSenders() {
      rejectSenders_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @param value The bytes of the rejectSenders to add.
     * @return This builder for chaining.
     */
    public Builder addRejectSendersBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureRejectSendersIsMutable();
      rejectSenders_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tendermint.abci.ResponseApplySnapshotChunk)
  }

  // @@protoc_insertion_point(class_scope:tendermint.abci.ResponseApplySnapshotChunk)
  private static final com.tendermint.abci.ResponseApplySnapshotChunk DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tendermint.abci.ResponseApplySnapshotChunk();
  }

  public static com.tendermint.abci.ResponseApplySnapshotChunk getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ResponseApplySnapshotChunk>
      PARSER = new com.google.protobuf.AbstractParser<ResponseApplySnapshotChunk>() {
    @java.lang.Override
    public ResponseApplySnapshotChunk parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ResponseApplySnapshotChunk> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ResponseApplySnapshotChunk> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tendermint.abci.ResponseApplySnapshotChunk getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: desmos/subspaces/v3/query.proto

package com.desmos.subspaces.v3;

/**
 * <pre>
 * PermissionDetail contains the details data of a permission
 * </pre>
 *
 * Protobuf type {@code desmos.subspaces.v3.PermissionDetail}
 */
public final class PermissionDetail extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:desmos.subspaces.v3.PermissionDetail)
    PermissionDetailOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PermissionDetail.newBuilder() to construct.
  private PermissionDetail(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PermissionDetail() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PermissionDetail();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.desmos.subspaces.v3.PermissionDetail.class, com.desmos.subspaces.v3.PermissionDetail.Builder.class);
  }

  public interface UserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:desmos.subspaces.v3.PermissionDetail.User)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * User for which the permission was set
     * </pre>
     *
     * <code>string user = 1 [json_name = "user", (.gogoproto.moretags) = "yaml:&#92;"user&#92;""];</code>
     * @return The user.
     */
    java.lang.String getUser();
    /**
     * <pre>
     * User for which the permission was set
     * </pre>
     *
     * <code>string user = 1 [json_name = "user", (.gogoproto.moretags) = "yaml:&#92;"user&#92;""];</code>
     * @return The bytes for user.
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <pre>
     * Permissions set to the user
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
     * @return A list containing the permission.
     */
    java.util.List<java.lang.String>
        getPermissionList();
    /**
     * <pre>
     * Permissions set to the user
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
     * @return The count of permission.
     */
    int getPermissionCount();
    /**
     * <pre>
     * Permissions set to the user
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
     * @param index The index of the element to return.
     * @return The permission at the given index.
     */
    java.lang.String getPermission(int index);
    /**
     * <pre>
     * Permissions set to the user
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
     * @param index The index of the value to return.
     * @return The bytes of the permission at the given index.
     */
    com.google.protobuf.ByteString
        getPermissionBytes(int index);
  }
  /**
   * <pre>
   * User is a permission that has been set to a specific user
   * </pre>
   *
   * Protobuf type {@code desmos.subspaces.v3.PermissionDetail.User}
   */
  public static final class User extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:desmos.subspaces.v3.PermissionDetail.User)
      UserOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use User.newBuilder() to construct.
    private User(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private User() {
      user_ = "";
      permission_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new User();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_User_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_User_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.desmos.subspaces.v3.PermissionDetail.User.class, com.desmos.subspaces.v3.PermissionDetail.User.Builder.class);
    }

    public static final int USER_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object user_ = "";
    /**
     * <pre>
     * User for which the permission was set
     * </pre>
     *
     * <code>string user = 1 [json_name = "user", (.gogoproto.moretags) = "yaml:&#92;"user&#92;""];</code>
     * @return The user.
     */
    @java.lang.Override
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * User for which the permission was set
     * </pre>
     *
     * <code>string user = 1 [json_name = "user", (.gogoproto.moretags) = "yaml:&#92;"user&#92;""];</code>
     * @return The bytes for user.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PERMISSION_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList permission_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * Permissions set to the user
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
     * @return A list containing the permission.
     */
    public com.google.protobuf.ProtocolStringList
        getPermissionList() {
      return permission_;
    }
    /**
     * <pre>
     * Permissions set to the user
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
     * @return The count of permission.
     */
    public int getPermissionCount() {
      return permission_.size();
    }
    /**
     * <pre>
     * Permissions set to the user
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
     * @param index The index of the element to return.
     * @return The permission at the given index.
     */
    public java.lang.String getPermission(int index) {
      return permission_.get(index);
    }
    /**
     * <pre>
     * Permissions set to the user
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
     * @param index The index of the value to return.
     * @return The bytes of the permission at the given index.
     */
    public com.google.protobuf.ByteString
        getPermissionBytes(int index) {
      return permission_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, user_);
      }
      for (int i = 0; i < permission_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, permission_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, user_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < permission_.size(); i++) {
          dataSize += computeStringSizeNoTag(permission_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getPermissionList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.desmos.subspaces.v3.PermissionDetail.User)) {
        return super.equals(obj);
      }
      com.desmos.subspaces.v3.PermissionDetail.User other = (com.desmos.subspaces.v3.PermissionDetail.User) obj;

      if (!getUser()
          .equals(other.getUser())) return false;
      if (!getPermissionList()
          .equals(other.getPermissionList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USER_FIELD_NUMBER;
      hash = (53 * hash) + getUser().hashCode();
      if (getPermissionCount() > 0) {
        hash = (37 * hash) + PERMISSION_FIELD_NUMBER;
        hash = (53 * hash) + getPermissionList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.desmos.subspaces.v3.PermissionDetail.User parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.User parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.desmos.subspaces.v3.PermissionDetail.User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.desmos.subspaces.v3.PermissionDetail.User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.desmos.subspaces.v3.PermissionDetail.User prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * User is a permission that has been set to a specific user
     * </pre>
     *
     * Protobuf type {@code desmos.subspaces.v3.PermissionDetail.User}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:desmos.subspaces.v3.PermissionDetail.User)
        com.desmos.subspaces.v3.PermissionDetail.UserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_User_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.desmos.subspaces.v3.PermissionDetail.User.class, com.desmos.subspaces.v3.PermissionDetail.User.Builder.class);
      }

      // Construct using com.desmos.subspaces.v3.PermissionDetail.User.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        user_ = "";
        permission_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_User_descriptor;
      }

      @java.lang.Override
      public com.desmos.subspaces.v3.PermissionDetail.User getDefaultInstanceForType() {
        return com.desmos.subspaces.v3.PermissionDetail.User.getDefaultInstance();
      }

      @java.lang.Override
      public com.desmos.subspaces.v3.PermissionDetail.User build() {
        com.desmos.subspaces.v3.PermissionDetail.User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.desmos.subspaces.v3.PermissionDetail.User buildPartial() {
        com.desmos.subspaces.v3.PermissionDetail.User result = new com.desmos.subspaces.v3.PermissionDetail.User(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.desmos.subspaces.v3.PermissionDetail.User result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.user_ = user_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          permission_.makeImmutable();
          result.permission_ = permission_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.desmos.subspaces.v3.PermissionDetail.User) {
          return mergeFrom((com.desmos.subspaces.v3.PermissionDetail.User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.desmos.subspaces.v3.PermissionDetail.User other) {
        if (other == com.desmos.subspaces.v3.PermissionDetail.User.getDefaultInstance()) return this;
        if (!other.getUser().isEmpty()) {
          user_ = other.user_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.permission_.isEmpty()) {
          if (permission_.isEmpty()) {
            permission_ = other.permission_;
            bitField0_ |= 0x00000002;
          } else {
            ensurePermissionIsMutable();
            permission_.addAll(other.permission_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                user_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                ensurePermissionIsMutable();
                permission_.add(s);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object user_ = "";
      /**
       * <pre>
       * User for which the permission was set
       * </pre>
       *
       * <code>string user = 1 [json_name = "user", (.gogoproto.moretags) = "yaml:&#92;"user&#92;""];</code>
       * @return The user.
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          user_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * User for which the permission was set
       * </pre>
       *
       * <code>string user = 1 [json_name = "user", (.gogoproto.moretags) = "yaml:&#92;"user&#92;""];</code>
       * @return The bytes for user.
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * User for which the permission was set
       * </pre>
       *
       * <code>string user = 1 [json_name = "user", (.gogoproto.moretags) = "yaml:&#92;"user&#92;""];</code>
       * @param value The user to set.
       * @return This builder for chaining.
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        user_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User for which the permission was set
       * </pre>
       *
       * <code>string user = 1 [json_name = "user", (.gogoproto.moretags) = "yaml:&#92;"user&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearUser() {
        user_ = getDefaultInstance().getUser();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User for which the permission was set
       * </pre>
       *
       * <code>string user = 1 [json_name = "user", (.gogoproto.moretags) = "yaml:&#92;"user&#92;""];</code>
       * @param value The bytes for user to set.
       * @return This builder for chaining.
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        user_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList permission_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensurePermissionIsMutable() {
        if (!permission_.isModifiable()) {
          permission_ = new com.google.protobuf.LazyStringArrayList(permission_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <pre>
       * Permissions set to the user
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
       * @return A list containing the permission.
       */
      public com.google.protobuf.ProtocolStringList
          getPermissionList() {
        permission_.makeImmutable();
        return permission_;
      }
      /**
       * <pre>
       * Permissions set to the user
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
       * @return The count of permission.
       */
      public int getPermissionCount() {
        return permission_.size();
      }
      /**
       * <pre>
       * Permissions set to the user
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
       * @param index The index of the element to return.
       * @return The permission at the given index.
       */
      public java.lang.String getPermission(int index) {
        return permission_.get(index);
      }
      /**
       * <pre>
       * Permissions set to the user
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
       * @param index The index of the value to return.
       * @return The bytes of the permission at the given index.
       */
      public com.google.protobuf.ByteString
          getPermissionBytes(int index) {
        return permission_.getByteString(index);
      }
      /**
       * <pre>
       * Permissions set to the user
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
       * @param index The index to set the value at.
       * @param value The permission to set.
       * @return This builder for chaining.
       */
      public Builder setPermission(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePermissionIsMutable();
        permission_.set(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Permissions set to the user
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
       * @param value The permission to add.
       * @return This builder for chaining.
       */
      public Builder addPermission(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePermissionIsMutable();
        permission_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Permissions set to the user
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
       * @param values The permission to add.
       * @return This builder for chaining.
       */
      public Builder addAllPermission(
          java.lang.Iterable<java.lang.String> values) {
        ensurePermissionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, permission_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Permissions set to the user
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearPermission() {
        permission_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Permissions set to the user
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission", (.gogoproto.moretags) = "yaml:&#92;"permission&#92;""];</code>
       * @param value The bytes of the permission to add.
       * @return This builder for chaining.
       */
      public Builder addPermissionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensurePermissionIsMutable();
        permission_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:desmos.subspaces.v3.PermissionDetail.User)
    }

    // @@protoc_insertion_point(class_scope:desmos.subspaces.v3.PermissionDetail.User)
    private static final com.desmos.subspaces.v3.PermissionDetail.User DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.desmos.subspaces.v3.PermissionDetail.User();
    }

    public static com.desmos.subspaces.v3.PermissionDetail.User getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<User>
        PARSER = new com.google.protobuf.AbstractParser<User>() {
      @java.lang.Override
      public User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<User> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<User> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.desmos.subspaces.v3.PermissionDetail.User getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GroupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:desmos.subspaces.v3.PermissionDetail.Group)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique id of the group
     * </pre>
     *
     * <code>uint32 group_id = 1 [json_name = "groupId", (.gogoproto.customname) = "GroupID", (.gogoproto.moretags) = "yaml:&#92;"group_id&#92;""];</code>
     * @return The groupId.
     */
    int getGroupId();

    /**
     * <pre>
     * Permissions set to the group
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission"];</code>
     * @return A list containing the permission.
     */
    java.util.List<java.lang.String>
        getPermissionList();
    /**
     * <pre>
     * Permissions set to the group
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission"];</code>
     * @return The count of permission.
     */
    int getPermissionCount();
    /**
     * <pre>
     * Permissions set to the group
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission"];</code>
     * @param index The index of the element to return.
     * @return The permission at the given index.
     */
    java.lang.String getPermission(int index);
    /**
     * <pre>
     * Permissions set to the group
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the permission at the given index.
     */
    com.google.protobuf.ByteString
        getPermissionBytes(int index);
  }
  /**
   * <pre>
   * Group is a permission that has been set to a user group
   * </pre>
   *
   * Protobuf type {@code desmos.subspaces.v3.PermissionDetail.Group}
   */
  public static final class Group extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:desmos.subspaces.v3.PermissionDetail.Group)
      GroupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Group.newBuilder() to construct.
    private Group(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Group() {
      permission_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Group();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_Group_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_Group_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.desmos.subspaces.v3.PermissionDetail.Group.class, com.desmos.subspaces.v3.PermissionDetail.Group.Builder.class);
    }

    public static final int GROUP_ID_FIELD_NUMBER = 1;
    private int groupId_ = 0;
    /**
     * <pre>
     * Unique id of the group
     * </pre>
     *
     * <code>uint32 group_id = 1 [json_name = "groupId", (.gogoproto.customname) = "GroupID", (.gogoproto.moretags) = "yaml:&#92;"group_id&#92;""];</code>
     * @return The groupId.
     */
    @java.lang.Override
    public int getGroupId() {
      return groupId_;
    }

    public static final int PERMISSION_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList permission_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * Permissions set to the group
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission"];</code>
     * @return A list containing the permission.
     */
    public com.google.protobuf.ProtocolStringList
        getPermissionList() {
      return permission_;
    }
    /**
     * <pre>
     * Permissions set to the group
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission"];</code>
     * @return The count of permission.
     */
    public int getPermissionCount() {
      return permission_.size();
    }
    /**
     * <pre>
     * Permissions set to the group
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission"];</code>
     * @param index The index of the element to return.
     * @return The permission at the given index.
     */
    public java.lang.String getPermission(int index) {
      return permission_.get(index);
    }
    /**
     * <pre>
     * Permissions set to the group
     * </pre>
     *
     * <code>repeated string permission = 2 [json_name = "permission"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the permission at the given index.
     */
    public com.google.protobuf.ByteString
        getPermissionBytes(int index) {
      return permission_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (groupId_ != 0) {
        output.writeUInt32(1, groupId_);
      }
      for (int i = 0; i < permission_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, permission_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (groupId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, groupId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < permission_.size(); i++) {
          dataSize += computeStringSizeNoTag(permission_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getPermissionList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.desmos.subspaces.v3.PermissionDetail.Group)) {
        return super.equals(obj);
      }
      com.desmos.subspaces.v3.PermissionDetail.Group other = (com.desmos.subspaces.v3.PermissionDetail.Group) obj;

      if (getGroupId()
          != other.getGroupId()) return false;
      if (!getPermissionList()
          .equals(other.getPermissionList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGroupId();
      if (getPermissionCount() > 0) {
        hash = (37 * hash) + PERMISSION_FIELD_NUMBER;
        hash = (53 * hash) + getPermissionList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.desmos.subspaces.v3.PermissionDetail.Group parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.Group parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.Group parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.Group parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.Group parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.Group parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.Group parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.Group parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.desmos.subspaces.v3.PermissionDetail.Group parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.desmos.subspaces.v3.PermissionDetail.Group parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.Group parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.desmos.subspaces.v3.PermissionDetail.Group parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.desmos.subspaces.v3.PermissionDetail.Group prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Group is a permission that has been set to a user group
     * </pre>
     *
     * Protobuf type {@code desmos.subspaces.v3.PermissionDetail.Group}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:desmos.subspaces.v3.PermissionDetail.Group)
        com.desmos.subspaces.v3.PermissionDetail.GroupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_Group_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_Group_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.desmos.subspaces.v3.PermissionDetail.Group.class, com.desmos.subspaces.v3.PermissionDetail.Group.Builder.class);
      }

      // Construct using com.desmos.subspaces.v3.PermissionDetail.Group.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        groupId_ = 0;
        permission_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_Group_descriptor;
      }

      @java.lang.Override
      public com.desmos.subspaces.v3.PermissionDetail.Group getDefaultInstanceForType() {
        return com.desmos.subspaces.v3.PermissionDetail.Group.getDefaultInstance();
      }

      @java.lang.Override
      public com.desmos.subspaces.v3.PermissionDetail.Group build() {
        com.desmos.subspaces.v3.PermissionDetail.Group result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.desmos.subspaces.v3.PermissionDetail.Group buildPartial() {
        com.desmos.subspaces.v3.PermissionDetail.Group result = new com.desmos.subspaces.v3.PermissionDetail.Group(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.desmos.subspaces.v3.PermissionDetail.Group result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.groupId_ = groupId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          permission_.makeImmutable();
          result.permission_ = permission_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.desmos.subspaces.v3.PermissionDetail.Group) {
          return mergeFrom((com.desmos.subspaces.v3.PermissionDetail.Group)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.desmos.subspaces.v3.PermissionDetail.Group other) {
        if (other == com.desmos.subspaces.v3.PermissionDetail.Group.getDefaultInstance()) return this;
        if (other.getGroupId() != 0) {
          setGroupId(other.getGroupId());
        }
        if (!other.permission_.isEmpty()) {
          if (permission_.isEmpty()) {
            permission_ = other.permission_;
            bitField0_ |= 0x00000002;
          } else {
            ensurePermissionIsMutable();
            permission_.addAll(other.permission_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                groupId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                ensurePermissionIsMutable();
                permission_.add(s);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int groupId_ ;
      /**
       * <pre>
       * Unique id of the group
       * </pre>
       *
       * <code>uint32 group_id = 1 [json_name = "groupId", (.gogoproto.customname) = "GroupID", (.gogoproto.moretags) = "yaml:&#92;"group_id&#92;""];</code>
       * @return The groupId.
       */
      @java.lang.Override
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <pre>
       * Unique id of the group
       * </pre>
       *
       * <code>uint32 group_id = 1 [json_name = "groupId", (.gogoproto.customname) = "GroupID", (.gogoproto.moretags) = "yaml:&#92;"group_id&#92;""];</code>
       * @param value The groupId to set.
       * @return This builder for chaining.
       */
      public Builder setGroupId(int value) {

        groupId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique id of the group
       * </pre>
       *
       * <code>uint32 group_id = 1 [json_name = "groupId", (.gogoproto.customname) = "GroupID", (.gogoproto.moretags) = "yaml:&#92;"group_id&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        groupId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList permission_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensurePermissionIsMutable() {
        if (!permission_.isModifiable()) {
          permission_ = new com.google.protobuf.LazyStringArrayList(permission_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <pre>
       * Permissions set to the group
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission"];</code>
       * @return A list containing the permission.
       */
      public com.google.protobuf.ProtocolStringList
          getPermissionList() {
        permission_.makeImmutable();
        return permission_;
      }
      /**
       * <pre>
       * Permissions set to the group
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission"];</code>
       * @return The count of permission.
       */
      public int getPermissionCount() {
        return permission_.size();
      }
      /**
       * <pre>
       * Permissions set to the group
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission"];</code>
       * @param index The index of the element to return.
       * @return The permission at the given index.
       */
      public java.lang.String getPermission(int index) {
        return permission_.get(index);
      }
      /**
       * <pre>
       * Permissions set to the group
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission"];</code>
       * @param index The index of the value to return.
       * @return The bytes of the permission at the given index.
       */
      public com.google.protobuf.ByteString
          getPermissionBytes(int index) {
        return permission_.getByteString(index);
      }
      /**
       * <pre>
       * Permissions set to the group
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission"];</code>
       * @param index The index to set the value at.
       * @param value The permission to set.
       * @return This builder for chaining.
       */
      public Builder setPermission(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePermissionIsMutable();
        permission_.set(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Permissions set to the group
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission"];</code>
       * @param value The permission to add.
       * @return This builder for chaining.
       */
      public Builder addPermission(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePermissionIsMutable();
        permission_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Permissions set to the group
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission"];</code>
       * @param values The permission to add.
       * @return This builder for chaining.
       */
      public Builder addAllPermission(
          java.lang.Iterable<java.lang.String> values) {
        ensurePermissionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, permission_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Permissions set to the group
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPermission() {
        permission_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Permissions set to the group
       * </pre>
       *
       * <code>repeated string permission = 2 [json_name = "permission"];</code>
       * @param value The bytes of the permission to add.
       * @return This builder for chaining.
       */
      public Builder addPermissionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensurePermissionIsMutable();
        permission_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:desmos.subspaces.v3.PermissionDetail.Group)
    }

    // @@protoc_insertion_point(class_scope:desmos.subspaces.v3.PermissionDetail.Group)
    private static final com.desmos.subspaces.v3.PermissionDetail.Group DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.desmos.subspaces.v3.PermissionDetail.Group();
    }

    public static com.desmos.subspaces.v3.PermissionDetail.Group getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Group>
        PARSER = new com.google.protobuf.AbstractParser<Group>() {
      @java.lang.Override
      public Group parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Group> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Group> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.desmos.subspaces.v3.PermissionDetail.Group getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int sumCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object sum_;
  public enum SumCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    USER(3),
    GROUP(4),
    SUM_NOT_SET(0);
    private final int value;
    private SumCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SumCase valueOf(int value) {
      return forNumber(value);
    }

    public static SumCase forNumber(int value) {
      switch (value) {
        case 3: return USER;
        case 4: return GROUP;
        case 0: return SUM_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public SumCase
  getSumCase() {
    return SumCase.forNumber(
        sumCase_);
  }

  public static final int SUBSPACE_ID_FIELD_NUMBER = 1;
  private long subspaceId_ = 0L;
  /**
   * <pre>
   * Id of the subspace for which this permission is valid
   * </pre>
   *
   * <code>uint64 subspace_id = 1 [json_name = "subspaceId"];</code>
   * @return The subspaceId.
   */
  @java.lang.Override
  public long getSubspaceId() {
    return subspaceId_;
  }

  public static final int SECTION_ID_FIELD_NUMBER = 2;
  private int sectionId_ = 0;
  /**
   * <pre>
   * Id of the section for which this permission is valid
   * </pre>
   *
   * <code>uint32 section_id = 2 [json_name = "sectionId"];</code>
   * @return The sectionId.
   */
  @java.lang.Override
  public int getSectionId() {
    return sectionId_;
  }

  public static final int USER_FIELD_NUMBER = 3;
  /**
   * <pre>
   * User represents a user permission
   * </pre>
   *
   * <code>.desmos.subspaces.v3.PermissionDetail.User user = 3 [json_name = "user"];</code>
   * @return Whether the user field is set.
   */
  @java.lang.Override
  public boolean hasUser() {
    return sumCase_ == 3;
  }
  /**
   * <pre>
   * User represents a user permission
   * </pre>
   *
   * <code>.desmos.subspaces.v3.PermissionDetail.User user = 3 [json_name = "user"];</code>
   * @return The user.
   */
  @java.lang.Override
  public com.desmos.subspaces.v3.PermissionDetail.User getUser() {
    if (sumCase_ == 3) {
       return (com.desmos.subspaces.v3.PermissionDetail.User) sum_;
    }
    return com.desmos.subspaces.v3.PermissionDetail.User.getDefaultInstance();
  }
  /**
   * <pre>
   * User represents a user permission
   * </pre>
   *
   * <code>.desmos.subspaces.v3.PermissionDetail.User user = 3 [json_name = "user"];</code>
   */
  @java.lang.Override
  public com.desmos.subspaces.v3.PermissionDetail.UserOrBuilder getUserOrBuilder() {
    if (sumCase_ == 3) {
       return (com.desmos.subspaces.v3.PermissionDetail.User) sum_;
    }
    return com.desmos.subspaces.v3.PermissionDetail.User.getDefaultInstance();
  }

  public static final int GROUP_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Group represents a group permission
   * </pre>
   *
   * <code>.desmos.subspaces.v3.PermissionDetail.Group group = 4 [json_name = "group"];</code>
   * @return Whether the group field is set.
   */
  @java.lang.Override
  public boolean hasGroup() {
    return sumCase_ == 4;
  }
  /**
   * <pre>
   * Group represents a group permission
   * </pre>
   *
   * <code>.desmos.subspaces.v3.PermissionDetail.Group group = 4 [json_name = "group"];</code>
   * @return The group.
   */
  @java.lang.Override
  public com.desmos.subspaces.v3.PermissionDetail.Group getGroup() {
    if (sumCase_ == 4) {
       return (com.desmos.subspaces.v3.PermissionDetail.Group) sum_;
    }
    return com.desmos.subspaces.v3.PermissionDetail.Group.getDefaultInstance();
  }
  /**
   * <pre>
   * Group represents a group permission
   * </pre>
   *
   * <code>.desmos.subspaces.v3.PermissionDetail.Group group = 4 [json_name = "group"];</code>
   */
  @java.lang.Override
  public com.desmos.subspaces.v3.PermissionDetail.GroupOrBuilder getGroupOrBuilder() {
    if (sumCase_ == 4) {
       return (com.desmos.subspaces.v3.PermissionDetail.Group) sum_;
    }
    return com.desmos.subspaces.v3.PermissionDetail.Group.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (subspaceId_ != 0L) {
      output.writeUInt64(1, subspaceId_);
    }
    if (sectionId_ != 0) {
      output.writeUInt32(2, sectionId_);
    }
    if (sumCase_ == 3) {
      output.writeMessage(3, (com.desmos.subspaces.v3.PermissionDetail.User) sum_);
    }
    if (sumCase_ == 4) {
      output.writeMessage(4, (com.desmos.subspaces.v3.PermissionDetail.Group) sum_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (subspaceId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, subspaceId_);
    }
    if (sectionId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, sectionId_);
    }
    if (sumCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.desmos.subspaces.v3.PermissionDetail.User) sum_);
    }
    if (sumCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.desmos.subspaces.v3.PermissionDetail.Group) sum_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.desmos.subspaces.v3.PermissionDetail)) {
      return super.equals(obj);
    }
    com.desmos.subspaces.v3.PermissionDetail other = (com.desmos.subspaces.v3.PermissionDetail) obj;

    if (getSubspaceId()
        != other.getSubspaceId()) return false;
    if (getSectionId()
        != other.getSectionId()) return false;
    if (!getSumCase().equals(other.getSumCase())) return false;
    switch (sumCase_) {
      case 3:
        if (!getUser()
            .equals(other.getUser())) return false;
        break;
      case 4:
        if (!getGroup()
            .equals(other.getGroup())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SUBSPACE_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSubspaceId());
    hash = (37 * hash) + SECTION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSectionId();
    switch (sumCase_) {
      case 3:
        hash = (37 * hash) + USER_FIELD_NUMBER;
        hash = (53 * hash) + getUser().hashCode();
        break;
      case 4:
        hash = (37 * hash) + GROUP_FIELD_NUMBER;
        hash = (53 * hash) + getGroup().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.desmos.subspaces.v3.PermissionDetail parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.desmos.subspaces.v3.PermissionDetail parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.desmos.subspaces.v3.PermissionDetail parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.desmos.subspaces.v3.PermissionDetail parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.desmos.subspaces.v3.PermissionDetail parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.desmos.subspaces.v3.PermissionDetail parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.desmos.subspaces.v3.PermissionDetail parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.desmos.subspaces.v3.PermissionDetail parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.desmos.subspaces.v3.PermissionDetail parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.desmos.subspaces.v3.PermissionDetail parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.desmos.subspaces.v3.PermissionDetail parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.desmos.subspaces.v3.PermissionDetail parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.desmos.subspaces.v3.PermissionDetail prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * PermissionDetail contains the details data of a permission
   * </pre>
   *
   * Protobuf type {@code desmos.subspaces.v3.PermissionDetail}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:desmos.subspaces.v3.PermissionDetail)
      com.desmos.subspaces.v3.PermissionDetailOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.desmos.subspaces.v3.PermissionDetail.class, com.desmos.subspaces.v3.PermissionDetail.Builder.class);
    }

    // Construct using com.desmos.subspaces.v3.PermissionDetail.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      subspaceId_ = 0L;
      sectionId_ = 0;
      if (userBuilder_ != null) {
        userBuilder_.clear();
      }
      if (groupBuilder_ != null) {
        groupBuilder_.clear();
      }
      sumCase_ = 0;
      sum_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.desmos.subspaces.v3.QueryProto.internal_static_desmos_subspaces_v3_PermissionDetail_descriptor;
    }

    @java.lang.Override
    public com.desmos.subspaces.v3.PermissionDetail getDefaultInstanceForType() {
      return com.desmos.subspaces.v3.PermissionDetail.getDefaultInstance();
    }

    @java.lang.Override
    public com.desmos.subspaces.v3.PermissionDetail build() {
      com.desmos.subspaces.v3.PermissionDetail result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.desmos.subspaces.v3.PermissionDetail buildPartial() {
      com.desmos.subspaces.v3.PermissionDetail result = new com.desmos.subspaces.v3.PermissionDetail(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.desmos.subspaces.v3.PermissionDetail result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.subspaceId_ = subspaceId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.sectionId_ = sectionId_;
      }
    }

    private void buildPartialOneofs(com.desmos.subspaces.v3.PermissionDetail result) {
      result.sumCase_ = sumCase_;
      result.sum_ = this.sum_;
      if (sumCase_ == 3 &&
          userBuilder_ != null) {
        result.sum_ = userBuilder_.build();
      }
      if (sumCase_ == 4 &&
          groupBuilder_ != null) {
        result.sum_ = groupBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.desmos.subspaces.v3.PermissionDetail) {
        return mergeFrom((com.desmos.subspaces.v3.PermissionDetail)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.desmos.subspaces.v3.PermissionDetail other) {
      if (other == com.desmos.subspaces.v3.PermissionDetail.getDefaultInstance()) return this;
      if (other.getSubspaceId() != 0L) {
        setSubspaceId(other.getSubspaceId());
      }
      if (other.getSectionId() != 0) {
        setSectionId(other.getSectionId());
      }
      switch (other.getSumCase()) {
        case USER: {
          mergeUser(other.getUser());
          break;
        }
        case GROUP: {
          mergeGroup(other.getGroup());
          break;
        }
        case SUM_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              subspaceId_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              sectionId_ = input.readUInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              input.readMessage(
                  getUserFieldBuilder().getBuilder(),
                  extensionRegistry);
              sumCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getGroupFieldBuilder().getBuilder(),
                  extensionRegistry);
              sumCase_ = 4;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int sumCase_ = 0;
    private java.lang.Object sum_;
    public SumCase
        getSumCase() {
      return SumCase.forNumber(
          sumCase_);
    }

    public Builder clearSum() {
      sumCase_ = 0;
      sum_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private long subspaceId_ ;
    /**
     * <pre>
     * Id of the subspace for which this permission is valid
     * </pre>
     *
     * <code>uint64 subspace_id = 1 [json_name = "subspaceId"];</code>
     * @return The subspaceId.
     */
    @java.lang.Override
    public long getSubspaceId() {
      return subspaceId_;
    }
    /**
     * <pre>
     * Id of the subspace for which this permission is valid
     * </pre>
     *
     * <code>uint64 subspace_id = 1 [json_name = "subspaceId"];</code>
     * @param value The subspaceId to set.
     * @return This builder for chaining.
     */
    public Builder setSubspaceId(long value) {

      subspaceId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Id of the subspace for which this permission is valid
     * </pre>
     *
     * <code>uint64 subspace_id = 1 [json_name = "subspaceId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSubspaceId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      subspaceId_ = 0L;
      onChanged();
      return this;
    }

    private int sectionId_ ;
    /**
     * <pre>
     * Id of the section for which this permission is valid
     * </pre>
     *
     * <code>uint32 section_id = 2 [json_name = "sectionId"];</code>
     * @return The sectionId.
     */
    @java.lang.Override
    public int getSectionId() {
      return sectionId_;
    }
    /**
     * <pre>
     * Id of the section for which this permission is valid
     * </pre>
     *
     * <code>uint32 section_id = 2 [json_name = "sectionId"];</code>
     * @param value The sectionId to set.
     * @return This builder for chaining.
     */
    public Builder setSectionId(int value) {

      sectionId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Id of the section for which this permission is valid
     * </pre>
     *
     * <code>uint32 section_id = 2 [json_name = "sectionId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSectionId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      sectionId_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.desmos.subspaces.v3.PermissionDetail.User, com.desmos.subspaces.v3.PermissionDetail.User.Builder, com.desmos.subspaces.v3.PermissionDetail.UserOrBuilder> userBuilder_;
    /**
     * <pre>
     * User represents a user permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.User user = 3 [json_name = "user"];</code>
     * @return Whether the user field is set.
     */
    @java.lang.Override
    public boolean hasUser() {
      return sumCase_ == 3;
    }
    /**
     * <pre>
     * User represents a user permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.User user = 3 [json_name = "user"];</code>
     * @return The user.
     */
    @java.lang.Override
    public com.desmos.subspaces.v3.PermissionDetail.User getUser() {
      if (userBuilder_ == null) {
        if (sumCase_ == 3) {
          return (com.desmos.subspaces.v3.PermissionDetail.User) sum_;
        }
        return com.desmos.subspaces.v3.PermissionDetail.User.getDefaultInstance();
      } else {
        if (sumCase_ == 3) {
          return userBuilder_.getMessage();
        }
        return com.desmos.subspaces.v3.PermissionDetail.User.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * User represents a user permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.User user = 3 [json_name = "user"];</code>
     */
    public Builder setUser(com.desmos.subspaces.v3.PermissionDetail.User value) {
      if (userBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sum_ = value;
        onChanged();
      } else {
        userBuilder_.setMessage(value);
      }
      sumCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * User represents a user permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.User user = 3 [json_name = "user"];</code>
     */
    public Builder setUser(
        com.desmos.subspaces.v3.PermissionDetail.User.Builder builderForValue) {
      if (userBuilder_ == null) {
        sum_ = builderForValue.build();
        onChanged();
      } else {
        userBuilder_.setMessage(builderForValue.build());
      }
      sumCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * User represents a user permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.User user = 3 [json_name = "user"];</code>
     */
    public Builder mergeUser(com.desmos.subspaces.v3.PermissionDetail.User value) {
      if (userBuilder_ == null) {
        if (sumCase_ == 3 &&
            sum_ != com.desmos.subspaces.v3.PermissionDetail.User.getDefaultInstance()) {
          sum_ = com.desmos.subspaces.v3.PermissionDetail.User.newBuilder((com.desmos.subspaces.v3.PermissionDetail.User) sum_)
              .mergeFrom(value).buildPartial();
        } else {
          sum_ = value;
        }
        onChanged();
      } else {
        if (sumCase_ == 3) {
          userBuilder_.mergeFrom(value);
        } else {
          userBuilder_.setMessage(value);
        }
      }
      sumCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * User represents a user permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.User user = 3 [json_name = "user"];</code>
     */
    public Builder clearUser() {
      if (userBuilder_ == null) {
        if (sumCase_ == 3) {
          sumCase_ = 0;
          sum_ = null;
          onChanged();
        }
      } else {
        if (sumCase_ == 3) {
          sumCase_ = 0;
          sum_ = null;
        }
        userBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * User represents a user permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.User user = 3 [json_name = "user"];</code>
     */
    public com.desmos.subspaces.v3.PermissionDetail.User.Builder getUserBuilder() {
      return getUserFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * User represents a user permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.User user = 3 [json_name = "user"];</code>
     */
    @java.lang.Override
    public com.desmos.subspaces.v3.PermissionDetail.UserOrBuilder getUserOrBuilder() {
      if ((sumCase_ == 3) && (userBuilder_ != null)) {
        return userBuilder_.getMessageOrBuilder();
      } else {
        if (sumCase_ == 3) {
          return (com.desmos.subspaces.v3.PermissionDetail.User) sum_;
        }
        return com.desmos.subspaces.v3.PermissionDetail.User.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * User represents a user permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.User user = 3 [json_name = "user"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.desmos.subspaces.v3.PermissionDetail.User, com.desmos.subspaces.v3.PermissionDetail.User.Builder, com.desmos.subspaces.v3.PermissionDetail.UserOrBuilder> 
        getUserFieldBuilder() {
      if (userBuilder_ == null) {
        if (!(sumCase_ == 3)) {
          sum_ = com.desmos.subspaces.v3.PermissionDetail.User.getDefaultInstance();
        }
        userBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.desmos.subspaces.v3.PermissionDetail.User, com.desmos.subspaces.v3.PermissionDetail.User.Builder, com.desmos.subspaces.v3.PermissionDetail.UserOrBuilder>(
                (com.desmos.subspaces.v3.PermissionDetail.User) sum_,
                getParentForChildren(),
                isClean());
        sum_ = null;
      }
      sumCase_ = 3;
      onChanged();
      return userBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.desmos.subspaces.v3.PermissionDetail.Group, com.desmos.subspaces.v3.PermissionDetail.Group.Builder, com.desmos.subspaces.v3.PermissionDetail.GroupOrBuilder> groupBuilder_;
    /**
     * <pre>
     * Group represents a group permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.Group group = 4 [json_name = "group"];</code>
     * @return Whether the group field is set.
     */
    @java.lang.Override
    public boolean hasGroup() {
      return sumCase_ == 4;
    }
    /**
     * <pre>
     * Group represents a group permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.Group group = 4 [json_name = "group"];</code>
     * @return The group.
     */
    @java.lang.Override
    public com.desmos.subspaces.v3.PermissionDetail.Group getGroup() {
      if (groupBuilder_ == null) {
        if (sumCase_ == 4) {
          return (com.desmos.subspaces.v3.PermissionDetail.Group) sum_;
        }
        return com.desmos.subspaces.v3.PermissionDetail.Group.getDefaultInstance();
      } else {
        if (sumCase_ == 4) {
          return groupBuilder_.getMessage();
        }
        return com.desmos.subspaces.v3.PermissionDetail.Group.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Group represents a group permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.Group group = 4 [json_name = "group"];</code>
     */
    public Builder setGroup(com.desmos.subspaces.v3.PermissionDetail.Group value) {
      if (groupBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sum_ = value;
        onChanged();
      } else {
        groupBuilder_.setMessage(value);
      }
      sumCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Group represents a group permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.Group group = 4 [json_name = "group"];</code>
     */
    public Builder setGroup(
        com.desmos.subspaces.v3.PermissionDetail.Group.Builder builderForValue) {
      if (groupBuilder_ == null) {
        sum_ = builderForValue.build();
        onChanged();
      } else {
        groupBuilder_.setMessage(builderForValue.build());
      }
      sumCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Group represents a group permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.Group group = 4 [json_name = "group"];</code>
     */
    public Builder mergeGroup(com.desmos.subspaces.v3.PermissionDetail.Group value) {
      if (groupBuilder_ == null) {
        if (sumCase_ == 4 &&
            sum_ != com.desmos.subspaces.v3.PermissionDetail.Group.getDefaultInstance()) {
          sum_ = com.desmos.subspaces.v3.PermissionDetail.Group.newBuilder((com.desmos.subspaces.v3.PermissionDetail.Group) sum_)
              .mergeFrom(value).buildPartial();
        } else {
          sum_ = value;
        }
        onChanged();
      } else {
        if (sumCase_ == 4) {
          groupBuilder_.mergeFrom(value);
        } else {
          groupBuilder_.setMessage(value);
        }
      }
      sumCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Group represents a group permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.Group group = 4 [json_name = "group"];</code>
     */
    public Builder clearGroup() {
      if (groupBuilder_ == null) {
        if (sumCase_ == 4) {
          sumCase_ = 0;
          sum_ = null;
          onChanged();
        }
      } else {
        if (sumCase_ == 4) {
          sumCase_ = 0;
          sum_ = null;
        }
        groupBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Group represents a group permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.Group group = 4 [json_name = "group"];</code>
     */
    public com.desmos.subspaces.v3.PermissionDetail.Group.Builder getGroupBuilder() {
      return getGroupFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Group represents a group permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.Group group = 4 [json_name = "group"];</code>
     */
    @java.lang.Override
    public com.desmos.subspaces.v3.PermissionDetail.GroupOrBuilder getGroupOrBuilder() {
      if ((sumCase_ == 4) && (groupBuilder_ != null)) {
        return groupBuilder_.getMessageOrBuilder();
      } else {
        if (sumCase_ == 4) {
          return (com.desmos.subspaces.v3.PermissionDetail.Group) sum_;
        }
        return com.desmos.subspaces.v3.PermissionDetail.Group.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Group represents a group permission
     * </pre>
     *
     * <code>.desmos.subspaces.v3.PermissionDetail.Group group = 4 [json_name = "group"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.desmos.subspaces.v3.PermissionDetail.Group, com.desmos.subspaces.v3.PermissionDetail.Group.Builder, com.desmos.subspaces.v3.PermissionDetail.GroupOrBuilder> 
        getGroupFieldBuilder() {
      if (groupBuilder_ == null) {
        if (!(sumCase_ == 4)) {
          sum_ = com.desmos.subspaces.v3.PermissionDetail.Group.getDefaultInstance();
        }
        groupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.desmos.subspaces.v3.PermissionDetail.Group, com.desmos.subspaces.v3.PermissionDetail.Group.Builder, com.desmos.subspaces.v3.PermissionDetail.GroupOrBuilder>(
                (com.desmos.subspaces.v3.PermissionDetail.Group) sum_,
                getParentForChildren(),
                isClean());
        sum_ = null;
      }
      sumCase_ = 4;
      onChanged();
      return groupBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:desmos.subspaces.v3.PermissionDetail)
  }

  // @@protoc_insertion_point(class_scope:desmos.subspaces.v3.PermissionDetail)
  private static final com.desmos.subspaces.v3.PermissionDetail DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.desmos.subspaces.v3.PermissionDetail();
  }

  public static com.desmos.subspaces.v3.PermissionDetail getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PermissionDetail>
      PARSER = new com.google.protobuf.AbstractParser<PermissionDetail>() {
    @java.lang.Override
    public PermissionDetail parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PermissionDetail> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PermissionDetail> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.desmos.subspaces.v3.PermissionDetail getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: desmos/subspaces/v3/authz/authz.proto

package com.desmos.subspaces.v3.authz;

public interface GenericSubspaceAuthorizationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:desmos.subspaces.v3.authz.GenericSubspaceAuthorization)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Ids of the subspaces inside which to grant the permission
   * </pre>
   *
   * <code>repeated uint64 subspaces_ids = 1 [json_name = "subspacesIds", (.gogoproto.customname) = "SubspacesIDs"];</code>
   * @return A list containing the subspacesIds.
   */
  java.util.List<java.lang.Long> getSubspacesIdsList();
  /**
   * <pre>
   * Ids of the subspaces inside which to grant the permission
   * </pre>
   *
   * <code>repeated uint64 subspaces_ids = 1 [json_name = "subspacesIds", (.gogoproto.customname) = "SubspacesIDs"];</code>
   * @return The count of subspacesIds.
   */
  int getSubspacesIdsCount();
  /**
   * <pre>
   * Ids of the subspaces inside which to grant the permission
   * </pre>
   *
   * <code>repeated uint64 subspaces_ids = 1 [json_name = "subspacesIds", (.gogoproto.customname) = "SubspacesIDs"];</code>
   * @param index The index of the element to return.
   * @return The subspacesIds at the given index.
   */
  long getSubspacesIds(int index);

  /**
   * <pre>
   * Msg, identified by it's type URL, to grant unrestricted permissions to
   * execute within the subspace
   * </pre>
   *
   * <code>string msg = 2 [json_name = "msg"];</code>
   * @return The msg.
   */
  java.lang.String getMsg();
  /**
   * <pre>
   * Msg, identified by it's type URL, to grant unrestricted permissions to
   * execute within the subspace
   * </pre>
   *
   * <code>string msg = 2 [json_name = "msg"];</code>
   * @return The bytes for msg.
   */
  com.google.protobuf.ByteString
      getMsgBytes();
}

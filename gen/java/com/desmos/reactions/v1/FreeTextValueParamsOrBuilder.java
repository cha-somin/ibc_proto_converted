// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: desmos/reactions/v1/models.proto

package com.desmos.reactions.v1;

public interface FreeTextValueParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:desmos.reactions.v1.FreeTextValueParams)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Whether FreeTextValue reactions should be enabled
   * </pre>
   *
   * <code>bool enabled = 1 [json_name = "enabled", (.gogoproto.moretags) = "yaml:&#92;"enabled&#92;""];</code>
   * @return The enabled.
   */
  boolean getEnabled();

  /**
   * <pre>
   * The max length that FreeTextValue reactions should have
   * </pre>
   *
   * <code>uint32 max_length = 2 [json_name = "maxLength", (.gogoproto.moretags) = "yaml:&#92;"max_length&#92;""];</code>
   * @return The maxLength.
   */
  int getMaxLength();

  /**
   * <pre>
   * RegEx that each FreeTextValue should respect.
   * This is useful to limit what characters can be used as a reaction.
   * </pre>
   *
   * <code>string reg_ex = 3 [json_name = "regEx", (.gogoproto.moretags) = "yaml:&#92;"reg_ex&#92;""];</code>
   * @return The regEx.
   */
  java.lang.String getRegEx();
  /**
   * <pre>
   * RegEx that each FreeTextValue should respect.
   * This is useful to limit what characters can be used as a reaction.
   * </pre>
   *
   * <code>string reg_ex = 3 [json_name = "regEx", (.gogoproto.moretags) = "yaml:&#92;"reg_ex&#92;""];</code>
   * @return The bytes for regEx.
   */
  com.google.protobuf.ByteString
      getRegExBytes();
}

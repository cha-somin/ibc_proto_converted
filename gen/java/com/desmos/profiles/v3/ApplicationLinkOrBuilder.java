// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: desmos/profiles/v3/models_app_links.proto

package com.desmos.profiles.v3;

public interface ApplicationLinkOrBuilder extends
    // @@protoc_insertion_point(interface_extends:desmos.profiles.v3.ApplicationLink)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *  User to which the link is associated
   * </pre>
   *
   * <code>string user = 1 [json_name = "user", (.gogoproto.moretags) = "yaml:&#92;"user&#92;""];</code>
   * @return The user.
   */
  java.lang.String getUser();
  /**
   * <pre>
   *  User to which the link is associated
   * </pre>
   *
   * <code>string user = 1 [json_name = "user", (.gogoproto.moretags) = "yaml:&#92;"user&#92;""];</code>
   * @return The bytes for user.
   */
  com.google.protobuf.ByteString
      getUserBytes();

  /**
   * <pre>
   * Data contains the details of this specific link
   * </pre>
   *
   * <code>.desmos.profiles.v3.Data data = 2 [json_name = "data", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"data&#92;""];</code>
   * @return Whether the data field is set.
   */
  boolean hasData();
  /**
   * <pre>
   * Data contains the details of this specific link
   * </pre>
   *
   * <code>.desmos.profiles.v3.Data data = 2 [json_name = "data", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"data&#92;""];</code>
   * @return The data.
   */
  com.desmos.profiles.v3.Data getData();
  /**
   * <pre>
   * Data contains the details of this specific link
   * </pre>
   *
   * <code>.desmos.profiles.v3.Data data = 2 [json_name = "data", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"data&#92;""];</code>
   */
  com.desmos.profiles.v3.DataOrBuilder getDataOrBuilder();

  /**
   * <pre>
   * State of the link
   * </pre>
   *
   * <code>.desmos.profiles.v3.ApplicationLinkState state = 3 [json_name = "state", (.gogoproto.moretags) = "yaml:&#92;"state&#92;""];</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <pre>
   * State of the link
   * </pre>
   *
   * <code>.desmos.profiles.v3.ApplicationLinkState state = 3 [json_name = "state", (.gogoproto.moretags) = "yaml:&#92;"state&#92;""];</code>
   * @return The state.
   */
  com.desmos.profiles.v3.ApplicationLinkState getState();

  /**
   * <pre>
   * OracleRequest represents the request that has been made to the oracle
   * </pre>
   *
   * <code>.desmos.profiles.v3.OracleRequest oracle_request = 4 [json_name = "oracleRequest", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"oracle_request&#92;""];</code>
   * @return Whether the oracleRequest field is set.
   */
  boolean hasOracleRequest();
  /**
   * <pre>
   * OracleRequest represents the request that has been made to the oracle
   * </pre>
   *
   * <code>.desmos.profiles.v3.OracleRequest oracle_request = 4 [json_name = "oracleRequest", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"oracle_request&#92;""];</code>
   * @return The oracleRequest.
   */
  com.desmos.profiles.v3.OracleRequest getOracleRequest();
  /**
   * <pre>
   * OracleRequest represents the request that has been made to the oracle
   * </pre>
   *
   * <code>.desmos.profiles.v3.OracleRequest oracle_request = 4 [json_name = "oracleRequest", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"oracle_request&#92;""];</code>
   */
  com.desmos.profiles.v3.OracleRequestOrBuilder getOracleRequestOrBuilder();

  /**
   * <pre>
   * Data coming from the result of the verification.
   * Only available when the state is STATE_SUCCESS
   * </pre>
   *
   * <code>.desmos.profiles.v3.Result result = 5 [json_name = "result", (.gogoproto.moretags) = "yaml:&#92;"result&#92;""];</code>
   * @return Whether the result field is set.
   */
  boolean hasResult();
  /**
   * <pre>
   * Data coming from the result of the verification.
   * Only available when the state is STATE_SUCCESS
   * </pre>
   *
   * <code>.desmos.profiles.v3.Result result = 5 [json_name = "result", (.gogoproto.moretags) = "yaml:&#92;"result&#92;""];</code>
   * @return The result.
   */
  com.desmos.profiles.v3.Result getResult();
  /**
   * <pre>
   * Data coming from the result of the verification.
   * Only available when the state is STATE_SUCCESS
   * </pre>
   *
   * <code>.desmos.profiles.v3.Result result = 5 [json_name = "result", (.gogoproto.moretags) = "yaml:&#92;"result&#92;""];</code>
   */
  com.desmos.profiles.v3.ResultOrBuilder getResultOrBuilder();

  /**
   * <pre>
   * CreationTime represents the time in which the link was created
   * </pre>
   *
   * <code>.google.protobuf.Timestamp creation_time = 6 [json_name = "creationTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"creation_time&#92;"", (.gogoproto.stdtime) = true];</code>
   * @return Whether the creationTime field is set.
   */
  boolean hasCreationTime();
  /**
   * <pre>
   * CreationTime represents the time in which the link was created
   * </pre>
   *
   * <code>.google.protobuf.Timestamp creation_time = 6 [json_name = "creationTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"creation_time&#92;"", (.gogoproto.stdtime) = true];</code>
   * @return The creationTime.
   */
  com.google.protobuf.Timestamp getCreationTime();
  /**
   * <pre>
   * CreationTime represents the time in which the link was created
   * </pre>
   *
   * <code>.google.protobuf.Timestamp creation_time = 6 [json_name = "creationTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"creation_time&#92;"", (.gogoproto.stdtime) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreationTimeOrBuilder();

  /**
   * <pre>
   * ExpirationTime represents the time in which the link will expire
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration_time = 7 [json_name = "expirationTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"expiration_time&#92;"", (.gogoproto.stdtime) = true];</code>
   * @return Whether the expirationTime field is set.
   */
  boolean hasExpirationTime();
  /**
   * <pre>
   * ExpirationTime represents the time in which the link will expire
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration_time = 7 [json_name = "expirationTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"expiration_time&#92;"", (.gogoproto.stdtime) = true];</code>
   * @return The expirationTime.
   */
  com.google.protobuf.Timestamp getExpirationTime();
  /**
   * <pre>
   * ExpirationTime represents the time in which the link will expire
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration_time = 7 [json_name = "expirationTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"expiration_time&#92;"", (.gogoproto.stdtime) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getExpirationTimeOrBuilder();
}

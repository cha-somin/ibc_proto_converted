// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: desmos/profiles/v3/models_params.proto

package com.desmos.profiles.v3;

/**
 * <pre>
 * OracleParams defines the parameters related to the oracle
 * that will be used to verify the ownership of a centralized
 * application account by a Desmos profile
 * </pre>
 *
 * Protobuf type {@code desmos.profiles.v3.OracleParams}
 */
public final class OracleParams extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:desmos.profiles.v3.OracleParams)
    OracleParamsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OracleParams.newBuilder() to construct.
  private OracleParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OracleParams() {
    feeAmount_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new OracleParams();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.desmos.profiles.v3.ModelsParamsProto.internal_static_desmos_profiles_v3_OracleParams_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.desmos.profiles.v3.ModelsParamsProto.internal_static_desmos_profiles_v3_OracleParams_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.desmos.profiles.v3.OracleParams.class, com.desmos.profiles.v3.OracleParams.Builder.class);
  }

  public static final int SCRIPT_ID_FIELD_NUMBER = 1;
  private long scriptId_ = 0L;
  /**
   * <pre>
   * ScriptID represents the ID of the oracle script to be called to verify the
   * data
   * </pre>
   *
   * <code>uint64 script_id = 1 [json_name = "scriptId", (.gogoproto.customname) = "ScriptID", (.gogoproto.moretags) = "yaml:&#92;"script_id&#92;""];</code>
   * @return The scriptId.
   */
  @java.lang.Override
  public long getScriptId() {
    return scriptId_;
  }

  public static final int ASK_COUNT_FIELD_NUMBER = 2;
  private long askCount_ = 0L;
  /**
   * <pre>
   * AskCount represents the number of oracles to which ask to verify the data
   * </pre>
   *
   * <code>uint64 ask_count = 2 [json_name = "askCount", (.gogoproto.moretags) = "yaml:&#92;"ask_count&#92;""];</code>
   * @return The askCount.
   */
  @java.lang.Override
  public long getAskCount() {
    return askCount_;
  }

  public static final int MIN_COUNT_FIELD_NUMBER = 3;
  private long minCount_ = 0L;
  /**
   * <pre>
   * MinCount represents the minimum count of oracles that should complete the
   * verification successfully
   * </pre>
   *
   * <code>uint64 min_count = 3 [json_name = "minCount", (.gogoproto.moretags) = "yaml:&#92;"min_count&#92;""];</code>
   * @return The minCount.
   */
  @java.lang.Override
  public long getMinCount() {
    return minCount_;
  }

  public static final int PREPARE_GAS_FIELD_NUMBER = 4;
  private long prepareGas_ = 0L;
  /**
   * <pre>
   * PrepareGas represents the amount of gas to be used during the preparation
   * stage of the oracle script
   * </pre>
   *
   * <code>uint64 prepare_gas = 4 [json_name = "prepareGas", (.gogoproto.moretags) = "yaml:&#92;"prepare_gas&#92;""];</code>
   * @return The prepareGas.
   */
  @java.lang.Override
  public long getPrepareGas() {
    return prepareGas_;
  }

  public static final int EXECUTE_GAS_FIELD_NUMBER = 5;
  private long executeGas_ = 0L;
  /**
   * <pre>
   * ExecuteGas represents the amount of gas to be used during the execution of
   * the oracle script
   * </pre>
   *
   * <code>uint64 execute_gas = 5 [json_name = "executeGas", (.gogoproto.moretags) = "yaml:&#92;"execute_gas&#92;""];</code>
   * @return The executeGas.
   */
  @java.lang.Override
  public long getExecuteGas() {
    return executeGas_;
  }

  public static final int FEE_AMOUNT_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> feeAmount_;
  /**
   * <pre>
   * FeeAmount represents the amount of fees to be payed in order to execute the
   * oracle script
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getFeeAmountList() {
    return feeAmount_;
  }
  /**
   * <pre>
   * FeeAmount represents the amount of fees to be payed in order to execute the
   * oracle script
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getFeeAmountOrBuilderList() {
    return feeAmount_;
  }
  /**
   * <pre>
   * FeeAmount represents the amount of fees to be payed in order to execute the
   * oracle script
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getFeeAmountCount() {
    return feeAmount_.size();
  }
  /**
   * <pre>
   * FeeAmount represents the amount of fees to be payed in order to execute the
   * oracle script
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getFeeAmount(int index) {
    return feeAmount_.get(index);
  }
  /**
   * <pre>
   * FeeAmount represents the amount of fees to be payed in order to execute the
   * oracle script
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getFeeAmountOrBuilder(
      int index) {
    return feeAmount_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (scriptId_ != 0L) {
      output.writeUInt64(1, scriptId_);
    }
    if (askCount_ != 0L) {
      output.writeUInt64(2, askCount_);
    }
    if (minCount_ != 0L) {
      output.writeUInt64(3, minCount_);
    }
    if (prepareGas_ != 0L) {
      output.writeUInt64(4, prepareGas_);
    }
    if (executeGas_ != 0L) {
      output.writeUInt64(5, executeGas_);
    }
    for (int i = 0; i < feeAmount_.size(); i++) {
      output.writeMessage(6, feeAmount_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (scriptId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, scriptId_);
    }
    if (askCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, askCount_);
    }
    if (minCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, minCount_);
    }
    if (prepareGas_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, prepareGas_);
    }
    if (executeGas_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, executeGas_);
    }
    for (int i = 0; i < feeAmount_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, feeAmount_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.desmos.profiles.v3.OracleParams)) {
      return super.equals(obj);
    }
    com.desmos.profiles.v3.OracleParams other = (com.desmos.profiles.v3.OracleParams) obj;

    if (getScriptId()
        != other.getScriptId()) return false;
    if (getAskCount()
        != other.getAskCount()) return false;
    if (getMinCount()
        != other.getMinCount()) return false;
    if (getPrepareGas()
        != other.getPrepareGas()) return false;
    if (getExecuteGas()
        != other.getExecuteGas()) return false;
    if (!getFeeAmountList()
        .equals(other.getFeeAmountList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SCRIPT_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getScriptId());
    hash = (37 * hash) + ASK_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getAskCount());
    hash = (37 * hash) + MIN_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMinCount());
    hash = (37 * hash) + PREPARE_GAS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPrepareGas());
    hash = (37 * hash) + EXECUTE_GAS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getExecuteGas());
    if (getFeeAmountCount() > 0) {
      hash = (37 * hash) + FEE_AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getFeeAmountList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.desmos.profiles.v3.OracleParams parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.desmos.profiles.v3.OracleParams parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.desmos.profiles.v3.OracleParams parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.desmos.profiles.v3.OracleParams parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.desmos.profiles.v3.OracleParams parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.desmos.profiles.v3.OracleParams parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.desmos.profiles.v3.OracleParams parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.desmos.profiles.v3.OracleParams parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.desmos.profiles.v3.OracleParams parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.desmos.profiles.v3.OracleParams parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.desmos.profiles.v3.OracleParams parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.desmos.profiles.v3.OracleParams parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.desmos.profiles.v3.OracleParams prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * OracleParams defines the parameters related to the oracle
   * that will be used to verify the ownership of a centralized
   * application account by a Desmos profile
   * </pre>
   *
   * Protobuf type {@code desmos.profiles.v3.OracleParams}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:desmos.profiles.v3.OracleParams)
      com.desmos.profiles.v3.OracleParamsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.desmos.profiles.v3.ModelsParamsProto.internal_static_desmos_profiles_v3_OracleParams_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.desmos.profiles.v3.ModelsParamsProto.internal_static_desmos_profiles_v3_OracleParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.desmos.profiles.v3.OracleParams.class, com.desmos.profiles.v3.OracleParams.Builder.class);
    }

    // Construct using com.desmos.profiles.v3.OracleParams.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      scriptId_ = 0L;
      askCount_ = 0L;
      minCount_ = 0L;
      prepareGas_ = 0L;
      executeGas_ = 0L;
      if (feeAmountBuilder_ == null) {
        feeAmount_ = java.util.Collections.emptyList();
      } else {
        feeAmount_ = null;
        feeAmountBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.desmos.profiles.v3.ModelsParamsProto.internal_static_desmos_profiles_v3_OracleParams_descriptor;
    }

    @java.lang.Override
    public com.desmos.profiles.v3.OracleParams getDefaultInstanceForType() {
      return com.desmos.profiles.v3.OracleParams.getDefaultInstance();
    }

    @java.lang.Override
    public com.desmos.profiles.v3.OracleParams build() {
      com.desmos.profiles.v3.OracleParams result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.desmos.profiles.v3.OracleParams buildPartial() {
      com.desmos.profiles.v3.OracleParams result = new com.desmos.profiles.v3.OracleParams(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.desmos.profiles.v3.OracleParams result) {
      if (feeAmountBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          feeAmount_ = java.util.Collections.unmodifiableList(feeAmount_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.feeAmount_ = feeAmount_;
      } else {
        result.feeAmount_ = feeAmountBuilder_.build();
      }
    }

    private void buildPartial0(com.desmos.profiles.v3.OracleParams result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.scriptId_ = scriptId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.askCount_ = askCount_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.minCount_ = minCount_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.prepareGas_ = prepareGas_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.executeGas_ = executeGas_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.desmos.profiles.v3.OracleParams) {
        return mergeFrom((com.desmos.profiles.v3.OracleParams)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.desmos.profiles.v3.OracleParams other) {
      if (other == com.desmos.profiles.v3.OracleParams.getDefaultInstance()) return this;
      if (other.getScriptId() != 0L) {
        setScriptId(other.getScriptId());
      }
      if (other.getAskCount() != 0L) {
        setAskCount(other.getAskCount());
      }
      if (other.getMinCount() != 0L) {
        setMinCount(other.getMinCount());
      }
      if (other.getPrepareGas() != 0L) {
        setPrepareGas(other.getPrepareGas());
      }
      if (other.getExecuteGas() != 0L) {
        setExecuteGas(other.getExecuteGas());
      }
      if (feeAmountBuilder_ == null) {
        if (!other.feeAmount_.isEmpty()) {
          if (feeAmount_.isEmpty()) {
            feeAmount_ = other.feeAmount_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureFeeAmountIsMutable();
            feeAmount_.addAll(other.feeAmount_);
          }
          onChanged();
        }
      } else {
        if (!other.feeAmount_.isEmpty()) {
          if (feeAmountBuilder_.isEmpty()) {
            feeAmountBuilder_.dispose();
            feeAmountBuilder_ = null;
            feeAmount_ = other.feeAmount_;
            bitField0_ = (bitField0_ & ~0x00000020);
            feeAmountBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFeeAmountFieldBuilder() : null;
          } else {
            feeAmountBuilder_.addAllMessages(other.feeAmount_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              scriptId_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              askCount_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              minCount_ = input.readUInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              prepareGas_ = input.readUInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              executeGas_ = input.readUInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (feeAmountBuilder_ == null) {
                ensureFeeAmountIsMutable();
                feeAmount_.add(m);
              } else {
                feeAmountBuilder_.addMessage(m);
              }
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long scriptId_ ;
    /**
     * <pre>
     * ScriptID represents the ID of the oracle script to be called to verify the
     * data
     * </pre>
     *
     * <code>uint64 script_id = 1 [json_name = "scriptId", (.gogoproto.customname) = "ScriptID", (.gogoproto.moretags) = "yaml:&#92;"script_id&#92;""];</code>
     * @return The scriptId.
     */
    @java.lang.Override
    public long getScriptId() {
      return scriptId_;
    }
    /**
     * <pre>
     * ScriptID represents the ID of the oracle script to be called to verify the
     * data
     * </pre>
     *
     * <code>uint64 script_id = 1 [json_name = "scriptId", (.gogoproto.customname) = "ScriptID", (.gogoproto.moretags) = "yaml:&#92;"script_id&#92;""];</code>
     * @param value The scriptId to set.
     * @return This builder for chaining.
     */
    public Builder setScriptId(long value) {

      scriptId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ScriptID represents the ID of the oracle script to be called to verify the
     * data
     * </pre>
     *
     * <code>uint64 script_id = 1 [json_name = "scriptId", (.gogoproto.customname) = "ScriptID", (.gogoproto.moretags) = "yaml:&#92;"script_id&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearScriptId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      scriptId_ = 0L;
      onChanged();
      return this;
    }

    private long askCount_ ;
    /**
     * <pre>
     * AskCount represents the number of oracles to which ask to verify the data
     * </pre>
     *
     * <code>uint64 ask_count = 2 [json_name = "askCount", (.gogoproto.moretags) = "yaml:&#92;"ask_count&#92;""];</code>
     * @return The askCount.
     */
    @java.lang.Override
    public long getAskCount() {
      return askCount_;
    }
    /**
     * <pre>
     * AskCount represents the number of oracles to which ask to verify the data
     * </pre>
     *
     * <code>uint64 ask_count = 2 [json_name = "askCount", (.gogoproto.moretags) = "yaml:&#92;"ask_count&#92;""];</code>
     * @param value The askCount to set.
     * @return This builder for chaining.
     */
    public Builder setAskCount(long value) {

      askCount_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * AskCount represents the number of oracles to which ask to verify the data
     * </pre>
     *
     * <code>uint64 ask_count = 2 [json_name = "askCount", (.gogoproto.moretags) = "yaml:&#92;"ask_count&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearAskCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      askCount_ = 0L;
      onChanged();
      return this;
    }

    private long minCount_ ;
    /**
     * <pre>
     * MinCount represents the minimum count of oracles that should complete the
     * verification successfully
     * </pre>
     *
     * <code>uint64 min_count = 3 [json_name = "minCount", (.gogoproto.moretags) = "yaml:&#92;"min_count&#92;""];</code>
     * @return The minCount.
     */
    @java.lang.Override
    public long getMinCount() {
      return minCount_;
    }
    /**
     * <pre>
     * MinCount represents the minimum count of oracles that should complete the
     * verification successfully
     * </pre>
     *
     * <code>uint64 min_count = 3 [json_name = "minCount", (.gogoproto.moretags) = "yaml:&#92;"min_count&#92;""];</code>
     * @param value The minCount to set.
     * @return This builder for chaining.
     */
    public Builder setMinCount(long value) {

      minCount_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MinCount represents the minimum count of oracles that should complete the
     * verification successfully
     * </pre>
     *
     * <code>uint64 min_count = 3 [json_name = "minCount", (.gogoproto.moretags) = "yaml:&#92;"min_count&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearMinCount() {
      bitField0_ = (bitField0_ & ~0x00000004);
      minCount_ = 0L;
      onChanged();
      return this;
    }

    private long prepareGas_ ;
    /**
     * <pre>
     * PrepareGas represents the amount of gas to be used during the preparation
     * stage of the oracle script
     * </pre>
     *
     * <code>uint64 prepare_gas = 4 [json_name = "prepareGas", (.gogoproto.moretags) = "yaml:&#92;"prepare_gas&#92;""];</code>
     * @return The prepareGas.
     */
    @java.lang.Override
    public long getPrepareGas() {
      return prepareGas_;
    }
    /**
     * <pre>
     * PrepareGas represents the amount of gas to be used during the preparation
     * stage of the oracle script
     * </pre>
     *
     * <code>uint64 prepare_gas = 4 [json_name = "prepareGas", (.gogoproto.moretags) = "yaml:&#92;"prepare_gas&#92;""];</code>
     * @param value The prepareGas to set.
     * @return This builder for chaining.
     */
    public Builder setPrepareGas(long value) {

      prepareGas_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * PrepareGas represents the amount of gas to be used during the preparation
     * stage of the oracle script
     * </pre>
     *
     * <code>uint64 prepare_gas = 4 [json_name = "prepareGas", (.gogoproto.moretags) = "yaml:&#92;"prepare_gas&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearPrepareGas() {
      bitField0_ = (bitField0_ & ~0x00000008);
      prepareGas_ = 0L;
      onChanged();
      return this;
    }

    private long executeGas_ ;
    /**
     * <pre>
     * ExecuteGas represents the amount of gas to be used during the execution of
     * the oracle script
     * </pre>
     *
     * <code>uint64 execute_gas = 5 [json_name = "executeGas", (.gogoproto.moretags) = "yaml:&#92;"execute_gas&#92;""];</code>
     * @return The executeGas.
     */
    @java.lang.Override
    public long getExecuteGas() {
      return executeGas_;
    }
    /**
     * <pre>
     * ExecuteGas represents the amount of gas to be used during the execution of
     * the oracle script
     * </pre>
     *
     * <code>uint64 execute_gas = 5 [json_name = "executeGas", (.gogoproto.moretags) = "yaml:&#92;"execute_gas&#92;""];</code>
     * @param value The executeGas to set.
     * @return This builder for chaining.
     */
    public Builder setExecuteGas(long value) {

      executeGas_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ExecuteGas represents the amount of gas to be used during the execution of
     * the oracle script
     * </pre>
     *
     * <code>uint64 execute_gas = 5 [json_name = "executeGas", (.gogoproto.moretags) = "yaml:&#92;"execute_gas&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearExecuteGas() {
      bitField0_ = (bitField0_ & ~0x00000010);
      executeGas_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> feeAmount_ =
      java.util.Collections.emptyList();
    private void ensureFeeAmountIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        feeAmount_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(feeAmount_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> feeAmountBuilder_;

    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getFeeAmountList() {
      if (feeAmountBuilder_ == null) {
        return java.util.Collections.unmodifiableList(feeAmount_);
      } else {
        return feeAmountBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getFeeAmountCount() {
      if (feeAmountBuilder_ == null) {
        return feeAmount_.size();
      } else {
        return feeAmountBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getFeeAmount(int index) {
      if (feeAmountBuilder_ == null) {
        return feeAmount_.get(index);
      } else {
        return feeAmountBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setFeeAmount(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (feeAmountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeeAmountIsMutable();
        feeAmount_.set(index, value);
        onChanged();
      } else {
        feeAmountBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setFeeAmount(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (feeAmountBuilder_ == null) {
        ensureFeeAmountIsMutable();
        feeAmount_.set(index, builderForValue.build());
        onChanged();
      } else {
        feeAmountBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addFeeAmount(com.cosmos.base.v1beta1.Coin value) {
      if (feeAmountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeeAmountIsMutable();
        feeAmount_.add(value);
        onChanged();
      } else {
        feeAmountBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addFeeAmount(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (feeAmountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeeAmountIsMutable();
        feeAmount_.add(index, value);
        onChanged();
      } else {
        feeAmountBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addFeeAmount(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (feeAmountBuilder_ == null) {
        ensureFeeAmountIsMutable();
        feeAmount_.add(builderForValue.build());
        onChanged();
      } else {
        feeAmountBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addFeeAmount(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (feeAmountBuilder_ == null) {
        ensureFeeAmountIsMutable();
        feeAmount_.add(index, builderForValue.build());
        onChanged();
      } else {
        feeAmountBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllFeeAmount(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (feeAmountBuilder_ == null) {
        ensureFeeAmountIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, feeAmount_);
        onChanged();
      } else {
        feeAmountBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearFeeAmount() {
      if (feeAmountBuilder_ == null) {
        feeAmount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        feeAmountBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeFeeAmount(int index) {
      if (feeAmountBuilder_ == null) {
        ensureFeeAmountIsMutable();
        feeAmount_.remove(index);
        onChanged();
      } else {
        feeAmountBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getFeeAmountBuilder(
        int index) {
      return getFeeAmountFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getFeeAmountOrBuilder(
        int index) {
      if (feeAmountBuilder_ == null) {
        return feeAmount_.get(index);  } else {
        return feeAmountBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getFeeAmountOrBuilderList() {
      if (feeAmountBuilder_ != null) {
        return feeAmountBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(feeAmount_);
      }
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addFeeAmountBuilder() {
      return getFeeAmountFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addFeeAmountBuilder(
        int index) {
      return getFeeAmountFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * FeeAmount represents the amount of fees to be payed in order to execute the
     * oracle script
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin fee_amount = 6 [json_name = "feeAmount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"fee_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getFeeAmountBuilderList() {
      return getFeeAmountFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getFeeAmountFieldBuilder() {
      if (feeAmountBuilder_ == null) {
        feeAmountBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                feeAmount_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        feeAmount_ = null;
      }
      return feeAmountBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:desmos.profiles.v3.OracleParams)
  }

  // @@protoc_insertion_point(class_scope:desmos.profiles.v3.OracleParams)
  private static final com.desmos.profiles.v3.OracleParams DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.desmos.profiles.v3.OracleParams();
  }

  public static com.desmos.profiles.v3.OracleParams getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OracleParams>
      PARSER = new com.google.protobuf.AbstractParser<OracleParams>() {
    @java.lang.Override
    public OracleParams parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<OracleParams> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OracleParams> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.desmos.profiles.v3.OracleParams getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


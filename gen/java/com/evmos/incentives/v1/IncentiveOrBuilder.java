// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: evmos/incentives/v1/incentives.proto

package com.evmos.incentives.v1;

public interface IncentiveOrBuilder extends
    // @@protoc_insertion_point(interface_extends:evmos.incentives.v1.Incentive)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * contract address of the smart contract to be incentivized
   * </pre>
   *
   * <code>string contract = 1 [json_name = "contract"];</code>
   * @return The contract.
   */
  java.lang.String getContract();
  /**
   * <pre>
   * contract address of the smart contract to be incentivized
   * </pre>
   *
   * <code>string contract = 1 [json_name = "contract"];</code>
   * @return The bytes for contract.
   */
  com.google.protobuf.ByteString
      getContractBytes();

  /**
   * <pre>
   * allocations is a slice of denoms and percentages of rewards to be allocated
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.DecCoin allocations = 2 [json_name = "allocations", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.DecCoin> 
      getAllocationsList();
  /**
   * <pre>
   * allocations is a slice of denoms and percentages of rewards to be allocated
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.DecCoin allocations = 2 [json_name = "allocations", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
   */
  com.cosmos.base.v1beta1.DecCoin getAllocations(int index);
  /**
   * <pre>
   * allocations is a slice of denoms and percentages of rewards to be allocated
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.DecCoin allocations = 2 [json_name = "allocations", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
   */
  int getAllocationsCount();
  /**
   * <pre>
   * allocations is a slice of denoms and percentages of rewards to be allocated
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.DecCoin allocations = 2 [json_name = "allocations", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.DecCoinOrBuilder> 
      getAllocationsOrBuilderList();
  /**
   * <pre>
   * allocations is a slice of denoms and percentages of rewards to be allocated
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.DecCoin allocations = 2 [json_name = "allocations", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
   */
  com.cosmos.base.v1beta1.DecCoinOrBuilder getAllocationsOrBuilder(
      int index);

  /**
   * <pre>
   * epochs defines the number of remaining epochs for the incentive
   * </pre>
   *
   * <code>uint32 epochs = 3 [json_name = "epochs"];</code>
   * @return The epochs.
   */
  int getEpochs();

  /**
   * <pre>
   * start_time of the incentive distribution
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return Whether the startTime field is set.
   */
  boolean hasStartTime();
  /**
   * <pre>
   * start_time of the incentive distribution
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return The startTime.
   */
  com.google.protobuf.Timestamp getStartTime();
  /**
   * <pre>
   * start_time of the incentive distribution
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder();

  /**
   * <pre>
   * total_gas is the cumulative gas spent by all gas meters of the incentive during the epoch
   * </pre>
   *
   * <code>uint64 total_gas = 5 [json_name = "totalGas"];</code>
   * @return The totalGas.
   */
  long getTotalGas();
}

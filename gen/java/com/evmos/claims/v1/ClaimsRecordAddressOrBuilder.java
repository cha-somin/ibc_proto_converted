// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: evmos/claims/v1/claims.proto

package com.evmos.claims.v1;

public interface ClaimsRecordAddressOrBuilder extends
    // @@protoc_insertion_point(interface_extends:evmos.claims.v1.ClaimsRecordAddress)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * address of claiming user in either bech32 or hex format
   * </pre>
   *
   * <code>string address = 1 [json_name = "address"];</code>
   * @return The address.
   */
  java.lang.String getAddress();
  /**
   * <pre>
   * address of claiming user in either bech32 or hex format
   * </pre>
   *
   * <code>string address = 1 [json_name = "address"];</code>
   * @return The bytes for address.
   */
  com.google.protobuf.ByteString
      getAddressBytes();

  /**
   * <pre>
   * initial_claimable_amount for the user
   * </pre>
   *
   * <code>string initial_claimable_amount = 2 [json_name = "initialClaimableAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
   * @return The initialClaimableAmount.
   */
  java.lang.String getInitialClaimableAmount();
  /**
   * <pre>
   * initial_claimable_amount for the user
   * </pre>
   *
   * <code>string initial_claimable_amount = 2 [json_name = "initialClaimableAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
   * @return The bytes for initialClaimableAmount.
   */
  com.google.protobuf.ByteString
      getInitialClaimableAmountBytes();

  /**
   * <pre>
   * actions_completed is a slice that describes which actions were completed
   * </pre>
   *
   * <code>repeated bool actions_completed = 3 [json_name = "actionsCompleted"];</code>
   * @return A list containing the actionsCompleted.
   */
  java.util.List<java.lang.Boolean> getActionsCompletedList();
  /**
   * <pre>
   * actions_completed is a slice that describes which actions were completed
   * </pre>
   *
   * <code>repeated bool actions_completed = 3 [json_name = "actionsCompleted"];</code>
   * @return The count of actionsCompleted.
   */
  int getActionsCompletedCount();
  /**
   * <pre>
   * actions_completed is a slice that describes which actions were completed
   * </pre>
   *
   * <code>repeated bool actions_completed = 3 [json_name = "actionsCompleted"];</code>
   * @param index The index of the element to return.
   * @return The actionsCompleted at the given index.
   */
  boolean getActionsCompleted(int index);
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: evmos/erc20/v1/events.proto

package com.evmos.erc20.v1;

public interface EventConvertERC20OrBuilder extends
    // @@protoc_insertion_point(interface_extends:evmos.erc20.v1.EventConvertERC20)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * sender is the sender's address.
   * </pre>
   *
   * <code>string sender = 1 [json_name = "sender"];</code>
   * @return The sender.
   */
  java.lang.String getSender();
  /**
   * <pre>
   * sender is the sender's address.
   * </pre>
   *
   * <code>string sender = 1 [json_name = "sender"];</code>
   * @return The bytes for sender.
   */
  com.google.protobuf.ByteString
      getSenderBytes();

  /**
   * <pre>
   * receiver is the receiver's address.
   * </pre>
   *
   * <code>string receiver = 2 [json_name = "receiver"];</code>
   * @return The receiver.
   */
  java.lang.String getReceiver();
  /**
   * <pre>
   * receiver is the receiver's address.
   * </pre>
   *
   * <code>string receiver = 2 [json_name = "receiver"];</code>
   * @return The bytes for receiver.
   */
  com.google.protobuf.ByteString
      getReceiverBytes();

  /**
   * <pre>
   * amount is the amount of coins to be converted.
   * </pre>
   *
   * <code>string amount = 3 [json_name = "amount"];</code>
   * @return The amount.
   */
  java.lang.String getAmount();
  /**
   * <pre>
   * amount is the amount of coins to be converted.
   * </pre>
   *
   * <code>string amount = 3 [json_name = "amount"];</code>
   * @return The bytes for amount.
   */
  com.google.protobuf.ByteString
      getAmountBytes();

  /**
   * <pre>
   * denom is the coin's denomination.
   * </pre>
   *
   * <code>string denom = 4 [json_name = "denom"];</code>
   * @return The denom.
   */
  java.lang.String getDenom();
  /**
   * <pre>
   * denom is the coin's denomination.
   * </pre>
   *
   * <code>string denom = 4 [json_name = "denom"];</code>
   * @return The bytes for denom.
   */
  com.google.protobuf.ByteString
      getDenomBytes();

  /**
   * <pre>
   * contract_address of an ERC20 token contract, that is registered in a token pair
   * </pre>
   *
   * <code>string contract_address = 5 [json_name = "contractAddress"];</code>
   * @return The contractAddress.
   */
  java.lang.String getContractAddress();
  /**
   * <pre>
   * contract_address of an ERC20 token contract, that is registered in a token pair
   * </pre>
   *
   * <code>string contract_address = 5 [json_name = "contractAddress"];</code>
   * @return The bytes for contractAddress.
   */
  com.google.protobuf.ByteString
      getContractAddressBytes();
}

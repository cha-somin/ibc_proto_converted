// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: evmos/revenue/v1/events.proto

package com.evmos.revenue.v1;

public interface EventRegisterRevenueOrBuilder extends
    // @@protoc_insertion_point(interface_extends:evmos.revenue.v1.EventRegisterRevenue)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * deployer_address is the bech32 address of message sender. It must be the same as the origin EOA
   * sending the transaction which deploys the contract
   * </pre>
   *
   * <code>string deployer_address = 1 [json_name = "deployerAddress"];</code>
   * @return The deployerAddress.
   */
  java.lang.String getDeployerAddress();
  /**
   * <pre>
   * deployer_address is the bech32 address of message sender. It must be the same as the origin EOA
   * sending the transaction which deploys the contract
   * </pre>
   *
   * <code>string deployer_address = 1 [json_name = "deployerAddress"];</code>
   * @return The bytes for deployerAddress.
   */
  com.google.protobuf.ByteString
      getDeployerAddressBytes();

  /**
   * <pre>
   * contract_address in hex format
   * </pre>
   *
   * <code>string contract_address = 2 [json_name = "contractAddress"];</code>
   * @return The contractAddress.
   */
  java.lang.String getContractAddress();
  /**
   * <pre>
   * contract_address in hex format
   * </pre>
   *
   * <code>string contract_address = 2 [json_name = "contractAddress"];</code>
   * @return The bytes for contractAddress.
   */
  com.google.protobuf.ByteString
      getContractAddressBytes();

  /**
   * <pre>
   * effective_withdrawer is the withdrawer address that is stored after the
   * revenue registration is completed. It defaults to the deployer address if
   * the withdrawer address in the msg is omitted. When omitted, the withdraw map
   * doesn't need to be set.
   * </pre>
   *
   * <code>string effective_withdrawer = 3 [json_name = "effectiveWithdrawer"];</code>
   * @return The effectiveWithdrawer.
   */
  java.lang.String getEffectiveWithdrawer();
  /**
   * <pre>
   * effective_withdrawer is the withdrawer address that is stored after the
   * revenue registration is completed. It defaults to the deployer address if
   * the withdrawer address in the msg is omitted. When omitted, the withdraw map
   * doesn't need to be set.
   * </pre>
   *
   * <code>string effective_withdrawer = 3 [json_name = "effectiveWithdrawer"];</code>
   * @return The bytes for effectiveWithdrawer.
   */
  com.google.protobuf.ByteString
      getEffectiveWithdrawerBytes();
}

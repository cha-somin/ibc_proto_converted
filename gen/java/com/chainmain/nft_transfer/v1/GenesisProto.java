// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cryptoorg/nft_transfer/v1/genesis.proto

package com.chainmain.nft_transfer.v1;

public final class GenesisProto {
  private GenesisProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chainmain_nft_transfer_v1_GenesisState_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chainmain_nft_transfer_v1_GenesisState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'cryptoorg/nft_transfer/v1/genesis.prot" +
      "o\022\031chainmain.nft_transfer.v1\032%cryptoorg/" +
      "nft_transfer/v1/trace.proto\032\024gogoproto/g" +
      "ogo.proto\"v\n\014GenesisState\022\027\n\007port_id\030\001 \001" +
      "(\tR\006portId\022M\n\006traces\030\002 \003(\0132%.chainmain.n" +
      "ft_transfer.v1.ClassTraceB\016\310\336\037\000\252\337\037\006Trace" +
      "sR\006tracesB\354\001\n\035com.chainmain.nft_transfer" +
      ".v1B\014GenesisProtoP\001Z;github.com/crypto-o" +
      "rg-chain/chain-main/x/nft-transfer/types" +
      "\242\002\003CNX\252\002\030Chainmain.NftTransfer.V1\312\002\030Chai" +
      "nmain\\NftTransfer\\V1\342\002$Chainmain\\NftTran" +
      "sfer\\V1\\GPBMetadata\352\002\032Chainmain::NftTran" +
      "sfer::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.chainmain.nft_transfer.v1.TraceProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_chainmain_nft_transfer_v1_GenesisState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_chainmain_nft_transfer_v1_GenesisState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chainmain_nft_transfer_v1_GenesisState_descriptor,
        new java.lang.String[] { "PortId", "Traces", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.chainmain.nft_transfer.v1.TraceProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

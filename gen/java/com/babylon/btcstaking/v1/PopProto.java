// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: babylon/btcstaking/v1/pop.proto

package com.babylon.btcstaking.v1;

public final class PopProto {
  private PopProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * BTCSigType indicates the type of btc_sig in a pop
   * </pre>
   *
   * Protobuf enum {@code babylon.btcstaking.v1.BTCSigType}
   */
  public enum BTCSigType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * BIP340 means the btc_sig will follow the BIP-340 encoding
     * </pre>
     *
     * <code>BIP340 = 0;</code>
     */
    BIP340(0),
    /**
     * <pre>
     * BIP322 means the btc_sig will follow the BIP-322 encoding
     * </pre>
     *
     * <code>BIP322 = 1;</code>
     */
    BIP322(1),
    /**
     * <pre>
     * ECDSA means the btc_sig will follow the ECDSA encoding
     * ref: https://github.com/okx/js-wallet-sdk/blob/a57c2acbe6ce917c0aa4e951d96c4e562ad58444/packages/coin-bitcoin/src/BtcWallet.ts#L331
     * </pre>
     *
     * <code>ECDSA = 2;</code>
     */
    ECDSA(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * BIP340 means the btc_sig will follow the BIP-340 encoding
     * </pre>
     *
     * <code>BIP340 = 0;</code>
     */
    public static final int BIP340_VALUE = 0;
    /**
     * <pre>
     * BIP322 means the btc_sig will follow the BIP-322 encoding
     * </pre>
     *
     * <code>BIP322 = 1;</code>
     */
    public static final int BIP322_VALUE = 1;
    /**
     * <pre>
     * ECDSA means the btc_sig will follow the ECDSA encoding
     * ref: https://github.com/okx/js-wallet-sdk/blob/a57c2acbe6ce917c0aa4e951d96c4e562ad58444/packages/coin-bitcoin/src/BtcWallet.ts#L331
     * </pre>
     *
     * <code>ECDSA = 2;</code>
     */
    public static final int ECDSA_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BTCSigType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BTCSigType forNumber(int value) {
      switch (value) {
        case 0: return BIP340;
        case 1: return BIP322;
        case 2: return ECDSA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BTCSigType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BTCSigType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BTCSigType>() {
            public BTCSigType findValueByNumber(int number) {
              return BTCSigType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.babylon.btcstaking.v1.PopProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final BTCSigType[] VALUES = values();

    public static BTCSigType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BTCSigType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:babylon.btcstaking.v1.BTCSigType)
  }

  public interface ProofOfPossessionBTCOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.btcstaking.v1.ProofOfPossessionBTC)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * btc_sig_type indicates the type of btc_sig in the pop
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.BTCSigType btc_sig_type = 1 [json_name = "btcSigType"];</code>
     * @return The enum numeric value on the wire for btcSigType.
     */
    int getBtcSigTypeValue();
    /**
     * <pre>
     * btc_sig_type indicates the type of btc_sig in the pop
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.BTCSigType btc_sig_type = 1 [json_name = "btcSigType"];</code>
     * @return The btcSigType.
     */
    com.babylon.btcstaking.v1.PopProto.BTCSigType getBtcSigType();

    /**
     * <pre>
     * btc_sig is the signature generated via sign(sk_btc, babylon_staker_address)
     * the signature follows encoding in either BIP-340 spec or BIP-322 spec
     * </pre>
     *
     * <code>bytes btc_sig = 2 [json_name = "btcSig"];</code>
     * @return The btcSig.
     */
    com.google.protobuf.ByteString getBtcSig();
  }
  /**
   * <pre>
   * ProofOfPossessionBTC is the proof of possession that a Babylon
   * address and a Bitcoin secp256k1 secret key are held by the same
   * person
   * </pre>
   *
   * Protobuf type {@code babylon.btcstaking.v1.ProofOfPossessionBTC}
   */
  public static final class ProofOfPossessionBTC extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.btcstaking.v1.ProofOfPossessionBTC)
      ProofOfPossessionBTCOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProofOfPossessionBTC.newBuilder() to construct.
    private ProofOfPossessionBTC(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProofOfPossessionBTC() {
      btcSigType_ = 0;
      btcSig_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProofOfPossessionBTC();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.btcstaking.v1.PopProto.internal_static_babylon_btcstaking_v1_ProofOfPossessionBTC_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.btcstaking.v1.PopProto.internal_static_babylon_btcstaking_v1_ProofOfPossessionBTC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC.class, com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC.Builder.class);
    }

    public static final int BTC_SIG_TYPE_FIELD_NUMBER = 1;
    private int btcSigType_ = 0;
    /**
     * <pre>
     * btc_sig_type indicates the type of btc_sig in the pop
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.BTCSigType btc_sig_type = 1 [json_name = "btcSigType"];</code>
     * @return The enum numeric value on the wire for btcSigType.
     */
    @java.lang.Override public int getBtcSigTypeValue() {
      return btcSigType_;
    }
    /**
     * <pre>
     * btc_sig_type indicates the type of btc_sig in the pop
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.BTCSigType btc_sig_type = 1 [json_name = "btcSigType"];</code>
     * @return The btcSigType.
     */
    @java.lang.Override public com.babylon.btcstaking.v1.PopProto.BTCSigType getBtcSigType() {
      com.babylon.btcstaking.v1.PopProto.BTCSigType result = com.babylon.btcstaking.v1.PopProto.BTCSigType.forNumber(btcSigType_);
      return result == null ? com.babylon.btcstaking.v1.PopProto.BTCSigType.UNRECOGNIZED : result;
    }

    public static final int BTC_SIG_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString btcSig_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * btc_sig is the signature generated via sign(sk_btc, babylon_staker_address)
     * the signature follows encoding in either BIP-340 spec or BIP-322 spec
     * </pre>
     *
     * <code>bytes btc_sig = 2 [json_name = "btcSig"];</code>
     * @return The btcSig.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBtcSig() {
      return btcSig_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (btcSigType_ != com.babylon.btcstaking.v1.PopProto.BTCSigType.BIP340.getNumber()) {
        output.writeEnum(1, btcSigType_);
      }
      if (!btcSig_.isEmpty()) {
        output.writeBytes(2, btcSig_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (btcSigType_ != com.babylon.btcstaking.v1.PopProto.BTCSigType.BIP340.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, btcSigType_);
      }
      if (!btcSig_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, btcSig_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC)) {
        return super.equals(obj);
      }
      com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC other = (com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC) obj;

      if (btcSigType_ != other.btcSigType_) return false;
      if (!getBtcSig()
          .equals(other.getBtcSig())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BTC_SIG_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + btcSigType_;
      hash = (37 * hash) + BTC_SIG_FIELD_NUMBER;
      hash = (53 * hash) + getBtcSig().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ProofOfPossessionBTC is the proof of possession that a Babylon
     * address and a Bitcoin secp256k1 secret key are held by the same
     * person
     * </pre>
     *
     * Protobuf type {@code babylon.btcstaking.v1.ProofOfPossessionBTC}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.btcstaking.v1.ProofOfPossessionBTC)
        com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTCOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.btcstaking.v1.PopProto.internal_static_babylon_btcstaking_v1_ProofOfPossessionBTC_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.btcstaking.v1.PopProto.internal_static_babylon_btcstaking_v1_ProofOfPossessionBTC_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC.class, com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC.Builder.class);
      }

      // Construct using com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        btcSigType_ = 0;
        btcSig_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.btcstaking.v1.PopProto.internal_static_babylon_btcstaking_v1_ProofOfPossessionBTC_descriptor;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC getDefaultInstanceForType() {
        return com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC build() {
        com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC buildPartial() {
        com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC result = new com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.btcSigType_ = btcSigType_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.btcSig_ = btcSig_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC) {
          return mergeFrom((com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC other) {
        if (other == com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC.getDefaultInstance()) return this;
        if (other.btcSigType_ != 0) {
          setBtcSigTypeValue(other.getBtcSigTypeValue());
        }
        if (other.getBtcSig() != com.google.protobuf.ByteString.EMPTY) {
          setBtcSig(other.getBtcSig());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                btcSigType_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                btcSig_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int btcSigType_ = 0;
      /**
       * <pre>
       * btc_sig_type indicates the type of btc_sig in the pop
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCSigType btc_sig_type = 1 [json_name = "btcSigType"];</code>
       * @return The enum numeric value on the wire for btcSigType.
       */
      @java.lang.Override public int getBtcSigTypeValue() {
        return btcSigType_;
      }
      /**
       * <pre>
       * btc_sig_type indicates the type of btc_sig in the pop
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCSigType btc_sig_type = 1 [json_name = "btcSigType"];</code>
       * @param value The enum numeric value on the wire for btcSigType to set.
       * @return This builder for chaining.
       */
      public Builder setBtcSigTypeValue(int value) {
        btcSigType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * btc_sig_type indicates the type of btc_sig in the pop
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCSigType btc_sig_type = 1 [json_name = "btcSigType"];</code>
       * @return The btcSigType.
       */
      @java.lang.Override
      public com.babylon.btcstaking.v1.PopProto.BTCSigType getBtcSigType() {
        com.babylon.btcstaking.v1.PopProto.BTCSigType result = com.babylon.btcstaking.v1.PopProto.BTCSigType.forNumber(btcSigType_);
        return result == null ? com.babylon.btcstaking.v1.PopProto.BTCSigType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * btc_sig_type indicates the type of btc_sig in the pop
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCSigType btc_sig_type = 1 [json_name = "btcSigType"];</code>
       * @param value The btcSigType to set.
       * @return This builder for chaining.
       */
      public Builder setBtcSigType(com.babylon.btcstaking.v1.PopProto.BTCSigType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        btcSigType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * btc_sig_type indicates the type of btc_sig in the pop
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCSigType btc_sig_type = 1 [json_name = "btcSigType"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBtcSigType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        btcSigType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString btcSig_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * btc_sig is the signature generated via sign(sk_btc, babylon_staker_address)
       * the signature follows encoding in either BIP-340 spec or BIP-322 spec
       * </pre>
       *
       * <code>bytes btc_sig = 2 [json_name = "btcSig"];</code>
       * @return The btcSig.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBtcSig() {
        return btcSig_;
      }
      /**
       * <pre>
       * btc_sig is the signature generated via sign(sk_btc, babylon_staker_address)
       * the signature follows encoding in either BIP-340 spec or BIP-322 spec
       * </pre>
       *
       * <code>bytes btc_sig = 2 [json_name = "btcSig"];</code>
       * @param value The btcSig to set.
       * @return This builder for chaining.
       */
      public Builder setBtcSig(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        btcSig_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * btc_sig is the signature generated via sign(sk_btc, babylon_staker_address)
       * the signature follows encoding in either BIP-340 spec or BIP-322 spec
       * </pre>
       *
       * <code>bytes btc_sig = 2 [json_name = "btcSig"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBtcSig() {
        bitField0_ = (bitField0_ & ~0x00000002);
        btcSig_ = getDefaultInstance().getBtcSig();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.btcstaking.v1.ProofOfPossessionBTC)
    }

    // @@protoc_insertion_point(class_scope:babylon.btcstaking.v1.ProofOfPossessionBTC)
    private static final com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC();
    }

    public static com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProofOfPossessionBTC>
        PARSER = new com.google.protobuf.AbstractParser<ProofOfPossessionBTC>() {
      @java.lang.Override
      public ProofOfPossessionBTC parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProofOfPossessionBTC> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProofOfPossessionBTC> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.btcstaking.v1.PopProto.ProofOfPossessionBTC getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BIP322SigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.btcstaking.v1.BIP322Sig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * address is the signer's address
     * </pre>
     *
     * <code>string address = 1 [json_name = "address"];</code>
     * @return The address.
     */
    java.lang.String getAddress();
    /**
     * <pre>
     * address is the signer's address
     * </pre>
     *
     * <code>string address = 1 [json_name = "address"];</code>
     * @return The bytes for address.
     */
    com.google.protobuf.ByteString
        getAddressBytes();

    /**
     * <pre>
     * sig is the actual signature in BIP-322 format
     * </pre>
     *
     * <code>bytes sig = 2 [json_name = "sig"];</code>
     * @return The sig.
     */
    com.google.protobuf.ByteString getSig();
  }
  /**
   * <pre>
   * BIP322Sig is a BIP-322 signature together with the address corresponding to
   * the signer
   * </pre>
   *
   * Protobuf type {@code babylon.btcstaking.v1.BIP322Sig}
   */
  public static final class BIP322Sig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.btcstaking.v1.BIP322Sig)
      BIP322SigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BIP322Sig.newBuilder() to construct.
    private BIP322Sig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BIP322Sig() {
      address_ = "";
      sig_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BIP322Sig();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.btcstaking.v1.PopProto.internal_static_babylon_btcstaking_v1_BIP322Sig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.btcstaking.v1.PopProto.internal_static_babylon_btcstaking_v1_BIP322Sig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.btcstaking.v1.PopProto.BIP322Sig.class, com.babylon.btcstaking.v1.PopProto.BIP322Sig.Builder.class);
    }

    public static final int ADDRESS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object address_ = "";
    /**
     * <pre>
     * address is the signer's address
     * </pre>
     *
     * <code>string address = 1 [json_name = "address"];</code>
     * @return The address.
     */
    @java.lang.Override
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        address_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * address is the signer's address
     * </pre>
     *
     * <code>string address = 1 [json_name = "address"];</code>
     * @return The bytes for address.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIG_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString sig_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * sig is the actual signature in BIP-322 format
     * </pre>
     *
     * <code>bytes sig = 2 [json_name = "sig"];</code>
     * @return The sig.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSig() {
      return sig_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(address_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, address_);
      }
      if (!sig_.isEmpty()) {
        output.writeBytes(2, sig_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(address_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, address_);
      }
      if (!sig_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, sig_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.btcstaking.v1.PopProto.BIP322Sig)) {
        return super.equals(obj);
      }
      com.babylon.btcstaking.v1.PopProto.BIP322Sig other = (com.babylon.btcstaking.v1.PopProto.BIP322Sig) obj;

      if (!getAddress()
          .equals(other.getAddress())) return false;
      if (!getSig()
          .equals(other.getSig())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
      hash = (37 * hash) + SIG_FIELD_NUMBER;
      hash = (53 * hash) + getSig().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.btcstaking.v1.PopProto.BIP322Sig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * BIP322Sig is a BIP-322 signature together with the address corresponding to
     * the signer
     * </pre>
     *
     * Protobuf type {@code babylon.btcstaking.v1.BIP322Sig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.btcstaking.v1.BIP322Sig)
        com.babylon.btcstaking.v1.PopProto.BIP322SigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.btcstaking.v1.PopProto.internal_static_babylon_btcstaking_v1_BIP322Sig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.btcstaking.v1.PopProto.internal_static_babylon_btcstaking_v1_BIP322Sig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.btcstaking.v1.PopProto.BIP322Sig.class, com.babylon.btcstaking.v1.PopProto.BIP322Sig.Builder.class);
      }

      // Construct using com.babylon.btcstaking.v1.PopProto.BIP322Sig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        address_ = "";
        sig_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.btcstaking.v1.PopProto.internal_static_babylon_btcstaking_v1_BIP322Sig_descriptor;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.PopProto.BIP322Sig getDefaultInstanceForType() {
        return com.babylon.btcstaking.v1.PopProto.BIP322Sig.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.PopProto.BIP322Sig build() {
        com.babylon.btcstaking.v1.PopProto.BIP322Sig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.PopProto.BIP322Sig buildPartial() {
        com.babylon.btcstaking.v1.PopProto.BIP322Sig result = new com.babylon.btcstaking.v1.PopProto.BIP322Sig(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.babylon.btcstaking.v1.PopProto.BIP322Sig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.address_ = address_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.sig_ = sig_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.btcstaking.v1.PopProto.BIP322Sig) {
          return mergeFrom((com.babylon.btcstaking.v1.PopProto.BIP322Sig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.btcstaking.v1.PopProto.BIP322Sig other) {
        if (other == com.babylon.btcstaking.v1.PopProto.BIP322Sig.getDefaultInstance()) return this;
        if (!other.getAddress().isEmpty()) {
          address_ = other.address_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getSig() != com.google.protobuf.ByteString.EMPTY) {
          setSig(other.getSig());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                address_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                sig_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object address_ = "";
      /**
       * <pre>
       * address is the signer's address
       * </pre>
       *
       * <code>string address = 1 [json_name = "address"];</code>
       * @return The address.
       */
      public java.lang.String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * address is the signer's address
       * </pre>
       *
       * <code>string address = 1 [json_name = "address"];</code>
       * @return The bytes for address.
       */
      public com.google.protobuf.ByteString
          getAddressBytes() {
        java.lang.Object ref = address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * address is the signer's address
       * </pre>
       *
       * <code>string address = 1 [json_name = "address"];</code>
       * @param value The address to set.
       * @return This builder for chaining.
       */
      public Builder setAddress(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        address_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * address is the signer's address
       * </pre>
       *
       * <code>string address = 1 [json_name = "address"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAddress() {
        address_ = getDefaultInstance().getAddress();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * address is the signer's address
       * </pre>
       *
       * <code>string address = 1 [json_name = "address"];</code>
       * @param value The bytes for address to set.
       * @return This builder for chaining.
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        address_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString sig_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * sig is the actual signature in BIP-322 format
       * </pre>
       *
       * <code>bytes sig = 2 [json_name = "sig"];</code>
       * @return The sig.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSig() {
        return sig_;
      }
      /**
       * <pre>
       * sig is the actual signature in BIP-322 format
       * </pre>
       *
       * <code>bytes sig = 2 [json_name = "sig"];</code>
       * @param value The sig to set.
       * @return This builder for chaining.
       */
      public Builder setSig(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        sig_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * sig is the actual signature in BIP-322 format
       * </pre>
       *
       * <code>bytes sig = 2 [json_name = "sig"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSig() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sig_ = getDefaultInstance().getSig();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.btcstaking.v1.BIP322Sig)
    }

    // @@protoc_insertion_point(class_scope:babylon.btcstaking.v1.BIP322Sig)
    private static final com.babylon.btcstaking.v1.PopProto.BIP322Sig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.btcstaking.v1.PopProto.BIP322Sig();
    }

    public static com.babylon.btcstaking.v1.PopProto.BIP322Sig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BIP322Sig>
        PARSER = new com.google.protobuf.AbstractParser<BIP322Sig>() {
      @java.lang.Override
      public BIP322Sig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BIP322Sig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BIP322Sig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.btcstaking.v1.PopProto.BIP322Sig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_btcstaking_v1_ProofOfPossessionBTC_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_btcstaking_v1_ProofOfPossessionBTC_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_btcstaking_v1_BIP322Sig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_btcstaking_v1_BIP322Sig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037babylon/btcstaking/v1/pop.proto\022\025babyl" +
      "on.btcstaking.v1\"t\n\024ProofOfPossessionBTC" +
      "\022C\n\014btc_sig_type\030\001 \001(\0162!.babylon.btcstak" +
      "ing.v1.BTCSigTypeR\nbtcSigType\022\027\n\007btc_sig" +
      "\030\002 \001(\014R\006btcSig\"7\n\tBIP322Sig\022\030\n\007address\030\001" +
      " \001(\tR\007address\022\020\n\003sig\030\002 \001(\014R\003sig*/\n\nBTCSi" +
      "gType\022\n\n\006BIP340\020\000\022\n\n\006BIP322\020\001\022\t\n\005ECDSA\020\002" +
      "B\315\001\n\031com.babylon.btcstaking.v1B\010PopProto" +
      "Z2github.com/babylonchain/babylon/x/btcs" +
      "taking/types\242\002\003BBX\252\002\025Babylon.Btcstaking." +
      "V1\312\002\025Babylon\\Btcstaking\\V1\342\002!Babylon\\Btc" +
      "staking\\V1\\GPBMetadata\352\002\027Babylon::Btcsta" +
      "king::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_babylon_btcstaking_v1_ProofOfPossessionBTC_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_babylon_btcstaking_v1_ProofOfPossessionBTC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_btcstaking_v1_ProofOfPossessionBTC_descriptor,
        new java.lang.String[] { "BtcSigType", "BtcSig", });
    internal_static_babylon_btcstaking_v1_BIP322Sig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_babylon_btcstaking_v1_BIP322Sig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_btcstaking_v1_BIP322Sig_descriptor,
        new java.lang.String[] { "Address", "Sig", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}

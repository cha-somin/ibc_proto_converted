// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: babylon/btcstaking/v1/incentive.proto

package com.babylon.btcstaking.v1;

public final class IncentiveProto {
  private IncentiveProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface VotingPowerDistCacheOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.btcstaking.v1.VotingPowerDistCache)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 total_voting_power = 1 [json_name = "totalVotingPower"];</code>
     * @return The totalVotingPower.
     */
    long getTotalVotingPower();

    /**
     * <pre>
     * finality_providers is a list of finality providers' voting power information
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    java.util.List<com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo> 
        getFinalityProvidersList();
    /**
     * <pre>
     * finality_providers is a list of finality providers' voting power information
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo getFinalityProviders(int index);
    /**
     * <pre>
     * finality_providers is a list of finality providers' voting power information
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    int getFinalityProvidersCount();
    /**
     * <pre>
     * finality_providers is a list of finality providers' voting power information
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    java.util.List<? extends com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfoOrBuilder> 
        getFinalityProvidersOrBuilderList();
    /**
     * <pre>
     * finality_providers is a list of finality providers' voting power information
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfoOrBuilder getFinalityProvidersOrBuilder(
        int index);
  }
  /**
   * <pre>
   * VotingPowerDistCache is the cache for voting power distribution of finality providers
   * and their BTC delegations at a height
   * </pre>
   *
   * Protobuf type {@code babylon.btcstaking.v1.VotingPowerDistCache}
   */
  public static final class VotingPowerDistCache extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.btcstaking.v1.VotingPowerDistCache)
      VotingPowerDistCacheOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VotingPowerDistCache.newBuilder() to construct.
    private VotingPowerDistCache(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VotingPowerDistCache() {
      finalityProviders_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VotingPowerDistCache();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_VotingPowerDistCache_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_VotingPowerDistCache_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache.class, com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache.Builder.class);
    }

    public static final int TOTAL_VOTING_POWER_FIELD_NUMBER = 1;
    private long totalVotingPower_ = 0L;
    /**
     * <code>uint64 total_voting_power = 1 [json_name = "totalVotingPower"];</code>
     * @return The totalVotingPower.
     */
    @java.lang.Override
    public long getTotalVotingPower() {
      return totalVotingPower_;
    }

    public static final int FINALITY_PROVIDERS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo> finalityProviders_;
    /**
     * <pre>
     * finality_providers is a list of finality providers' voting power information
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    @java.lang.Override
    public java.util.List<com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo> getFinalityProvidersList() {
      return finalityProviders_;
    }
    /**
     * <pre>
     * finality_providers is a list of finality providers' voting power information
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfoOrBuilder> 
        getFinalityProvidersOrBuilderList() {
      return finalityProviders_;
    }
    /**
     * <pre>
     * finality_providers is a list of finality providers' voting power information
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    @java.lang.Override
    public int getFinalityProvidersCount() {
      return finalityProviders_.size();
    }
    /**
     * <pre>
     * finality_providers is a list of finality providers' voting power information
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo getFinalityProviders(int index) {
      return finalityProviders_.get(index);
    }
    /**
     * <pre>
     * finality_providers is a list of finality providers' voting power information
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfoOrBuilder getFinalityProvidersOrBuilder(
        int index) {
      return finalityProviders_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (totalVotingPower_ != 0L) {
        output.writeUInt64(1, totalVotingPower_);
      }
      for (int i = 0; i < finalityProviders_.size(); i++) {
        output.writeMessage(2, finalityProviders_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (totalVotingPower_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, totalVotingPower_);
      }
      for (int i = 0; i < finalityProviders_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, finalityProviders_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache)) {
        return super.equals(obj);
      }
      com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache other = (com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache) obj;

      if (getTotalVotingPower()
          != other.getTotalVotingPower()) return false;
      if (!getFinalityProvidersList()
          .equals(other.getFinalityProvidersList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TOTAL_VOTING_POWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalVotingPower());
      if (getFinalityProvidersCount() > 0) {
        hash = (37 * hash) + FINALITY_PROVIDERS_FIELD_NUMBER;
        hash = (53 * hash) + getFinalityProvidersList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * VotingPowerDistCache is the cache for voting power distribution of finality providers
     * and their BTC delegations at a height
     * </pre>
     *
     * Protobuf type {@code babylon.btcstaking.v1.VotingPowerDistCache}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.btcstaking.v1.VotingPowerDistCache)
        com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCacheOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_VotingPowerDistCache_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_VotingPowerDistCache_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache.class, com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache.Builder.class);
      }

      // Construct using com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        totalVotingPower_ = 0L;
        if (finalityProvidersBuilder_ == null) {
          finalityProviders_ = java.util.Collections.emptyList();
        } else {
          finalityProviders_ = null;
          finalityProvidersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_VotingPowerDistCache_descriptor;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache getDefaultInstanceForType() {
        return com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache build() {
        com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache buildPartial() {
        com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache result = new com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache result) {
        if (finalityProvidersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            finalityProviders_ = java.util.Collections.unmodifiableList(finalityProviders_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.finalityProviders_ = finalityProviders_;
        } else {
          result.finalityProviders_ = finalityProvidersBuilder_.build();
        }
      }

      private void buildPartial0(com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.totalVotingPower_ = totalVotingPower_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache) {
          return mergeFrom((com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache other) {
        if (other == com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache.getDefaultInstance()) return this;
        if (other.getTotalVotingPower() != 0L) {
          setTotalVotingPower(other.getTotalVotingPower());
        }
        if (finalityProvidersBuilder_ == null) {
          if (!other.finalityProviders_.isEmpty()) {
            if (finalityProviders_.isEmpty()) {
              finalityProviders_ = other.finalityProviders_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFinalityProvidersIsMutable();
              finalityProviders_.addAll(other.finalityProviders_);
            }
            onChanged();
          }
        } else {
          if (!other.finalityProviders_.isEmpty()) {
            if (finalityProvidersBuilder_.isEmpty()) {
              finalityProvidersBuilder_.dispose();
              finalityProvidersBuilder_ = null;
              finalityProviders_ = other.finalityProviders_;
              bitField0_ = (bitField0_ & ~0x00000002);
              finalityProvidersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFinalityProvidersFieldBuilder() : null;
            } else {
              finalityProvidersBuilder_.addAllMessages(other.finalityProviders_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                totalVotingPower_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo m =
                    input.readMessage(
                        com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.parser(),
                        extensionRegistry);
                if (finalityProvidersBuilder_ == null) {
                  ensureFinalityProvidersIsMutable();
                  finalityProviders_.add(m);
                } else {
                  finalityProvidersBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long totalVotingPower_ ;
      /**
       * <code>uint64 total_voting_power = 1 [json_name = "totalVotingPower"];</code>
       * @return The totalVotingPower.
       */
      @java.lang.Override
      public long getTotalVotingPower() {
        return totalVotingPower_;
      }
      /**
       * <code>uint64 total_voting_power = 1 [json_name = "totalVotingPower"];</code>
       * @param value The totalVotingPower to set.
       * @return This builder for chaining.
       */
      public Builder setTotalVotingPower(long value) {

        totalVotingPower_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 total_voting_power = 1 [json_name = "totalVotingPower"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalVotingPower() {
        bitField0_ = (bitField0_ & ~0x00000001);
        totalVotingPower_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo> finalityProviders_ =
        java.util.Collections.emptyList();
      private void ensureFinalityProvidersIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          finalityProviders_ = new java.util.ArrayList<com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo>(finalityProviders_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.Builder, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfoOrBuilder> finalityProvidersBuilder_;

      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo> getFinalityProvidersList() {
        if (finalityProvidersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(finalityProviders_);
        } else {
          return finalityProvidersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public int getFinalityProvidersCount() {
        if (finalityProvidersBuilder_ == null) {
          return finalityProviders_.size();
        } else {
          return finalityProvidersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo getFinalityProviders(int index) {
        if (finalityProvidersBuilder_ == null) {
          return finalityProviders_.get(index);
        } else {
          return finalityProvidersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder setFinalityProviders(
          int index, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo value) {
        if (finalityProvidersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFinalityProvidersIsMutable();
          finalityProviders_.set(index, value);
          onChanged();
        } else {
          finalityProvidersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder setFinalityProviders(
          int index, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.Builder builderForValue) {
        if (finalityProvidersBuilder_ == null) {
          ensureFinalityProvidersIsMutable();
          finalityProviders_.set(index, builderForValue.build());
          onChanged();
        } else {
          finalityProvidersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder addFinalityProviders(com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo value) {
        if (finalityProvidersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFinalityProvidersIsMutable();
          finalityProviders_.add(value);
          onChanged();
        } else {
          finalityProvidersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder addFinalityProviders(
          int index, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo value) {
        if (finalityProvidersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFinalityProvidersIsMutable();
          finalityProviders_.add(index, value);
          onChanged();
        } else {
          finalityProvidersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder addFinalityProviders(
          com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.Builder builderForValue) {
        if (finalityProvidersBuilder_ == null) {
          ensureFinalityProvidersIsMutable();
          finalityProviders_.add(builderForValue.build());
          onChanged();
        } else {
          finalityProvidersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder addFinalityProviders(
          int index, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.Builder builderForValue) {
        if (finalityProvidersBuilder_ == null) {
          ensureFinalityProvidersIsMutable();
          finalityProviders_.add(index, builderForValue.build());
          onChanged();
        } else {
          finalityProvidersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder addAllFinalityProviders(
          java.lang.Iterable<? extends com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo> values) {
        if (finalityProvidersBuilder_ == null) {
          ensureFinalityProvidersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, finalityProviders_);
          onChanged();
        } else {
          finalityProvidersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder clearFinalityProviders() {
        if (finalityProvidersBuilder_ == null) {
          finalityProviders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          finalityProvidersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder removeFinalityProviders(int index) {
        if (finalityProvidersBuilder_ == null) {
          ensureFinalityProvidersIsMutable();
          finalityProviders_.remove(index);
          onChanged();
        } else {
          finalityProvidersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.Builder getFinalityProvidersBuilder(
          int index) {
        return getFinalityProvidersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfoOrBuilder getFinalityProvidersOrBuilder(
          int index) {
        if (finalityProvidersBuilder_ == null) {
          return finalityProviders_.get(index);  } else {
          return finalityProvidersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public java.util.List<? extends com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfoOrBuilder> 
           getFinalityProvidersOrBuilderList() {
        if (finalityProvidersBuilder_ != null) {
          return finalityProvidersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(finalityProviders_);
        }
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.Builder addFinalityProvidersBuilder() {
        return getFinalityProvidersFieldBuilder().addBuilder(
            com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.Builder addFinalityProvidersBuilder(
          int index) {
        return getFinalityProvidersFieldBuilder().addBuilder(
            index, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * finality_providers is a list of finality providers' voting power information
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProviderDistInfo finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.Builder> 
           getFinalityProvidersBuilderList() {
        return getFinalityProvidersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.Builder, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfoOrBuilder> 
          getFinalityProvidersFieldBuilder() {
        if (finalityProvidersBuilder_ == null) {
          finalityProvidersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.Builder, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfoOrBuilder>(
                  finalityProviders_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          finalityProviders_ = null;
        }
        return finalityProvidersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.btcstaking.v1.VotingPowerDistCache)
    }

    // @@protoc_insertion_point(class_scope:babylon.btcstaking.v1.VotingPowerDistCache)
    private static final com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache();
    }

    public static com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VotingPowerDistCache>
        PARSER = new com.google.protobuf.AbstractParser<VotingPowerDistCache>() {
      @java.lang.Override
      public VotingPowerDistCache parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<VotingPowerDistCache> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VotingPowerDistCache> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.btcstaking.v1.IncentiveProto.VotingPowerDistCache getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FinalityProviderDistInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.btcstaking.v1.FinalityProviderDistInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * btc_pk is the Bitcoin secp256k1 PK of this finality provider
     * the PK follows encoding in BIP-340 spec
     * </pre>
     *
     * <code>bytes btc_pk = 1 [json_name = "btcPk", (.gogoproto.customtype) = "github.com/babylonchain/babylon/types.BIP340PubKey"];</code>
     * @return The btcPk.
     */
    com.google.protobuf.ByteString getBtcPk();

    /**
     * <pre>
     * addr is the address to receive commission from delegations.
     * </pre>
     *
     * <code>string addr = 2 [json_name = "addr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The addr.
     */
    java.lang.String getAddr();
    /**
     * <pre>
     * addr is the address to receive commission from delegations.
     * </pre>
     *
     * <code>string addr = 2 [json_name = "addr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for addr.
     */
    com.google.protobuf.ByteString
        getAddrBytes();

    /**
     * <pre>
     * commission defines the commission rate of finality provider
     * </pre>
     *
     * <code>string commission = 3 [json_name = "commission", (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The commission.
     */
    java.lang.String getCommission();
    /**
     * <pre>
     * commission defines the commission rate of finality provider
     * </pre>
     *
     * <code>string commission = 3 [json_name = "commission", (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The bytes for commission.
     */
    com.google.protobuf.ByteString
        getCommissionBytes();

    /**
     * <pre>
     * total_voting_power is the total voting power of the finality provider
     * </pre>
     *
     * <code>uint64 total_voting_power = 4 [json_name = "totalVotingPower"];</code>
     * @return The totalVotingPower.
     */
    long getTotalVotingPower();

    /**
     * <pre>
     * btc_dels is a list of BTC delegations' voting power information under this finality provider
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
     */
    java.util.List<com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo> 
        getBtcDelsList();
    /**
     * <pre>
     * btc_dels is a list of BTC delegations' voting power information under this finality provider
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
     */
    com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo getBtcDels(int index);
    /**
     * <pre>
     * btc_dels is a list of BTC delegations' voting power information under this finality provider
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
     */
    int getBtcDelsCount();
    /**
     * <pre>
     * btc_dels is a list of BTC delegations' voting power information under this finality provider
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
     */
    java.util.List<? extends com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfoOrBuilder> 
        getBtcDelsOrBuilderList();
    /**
     * <pre>
     * btc_dels is a list of BTC delegations' voting power information under this finality provider
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
     */
    com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfoOrBuilder getBtcDelsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * FinalityProviderDistInfo is the reward distribution of a finality provider and its BTC delegations
   * </pre>
   *
   * Protobuf type {@code babylon.btcstaking.v1.FinalityProviderDistInfo}
   */
  public static final class FinalityProviderDistInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.btcstaking.v1.FinalityProviderDistInfo)
      FinalityProviderDistInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FinalityProviderDistInfo.newBuilder() to construct.
    private FinalityProviderDistInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FinalityProviderDistInfo() {
      btcPk_ = com.google.protobuf.ByteString.EMPTY;
      addr_ = "";
      commission_ = "";
      btcDels_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FinalityProviderDistInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_FinalityProviderDistInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_FinalityProviderDistInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.class, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.Builder.class);
    }

    public static final int BTC_PK_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString btcPk_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * btc_pk is the Bitcoin secp256k1 PK of this finality provider
     * the PK follows encoding in BIP-340 spec
     * </pre>
     *
     * <code>bytes btc_pk = 1 [json_name = "btcPk", (.gogoproto.customtype) = "github.com/babylonchain/babylon/types.BIP340PubKey"];</code>
     * @return The btcPk.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBtcPk() {
      return btcPk_;
    }

    public static final int ADDR_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object addr_ = "";
    /**
     * <pre>
     * addr is the address to receive commission from delegations.
     * </pre>
     *
     * <code>string addr = 2 [json_name = "addr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The addr.
     */
    @java.lang.Override
    public java.lang.String getAddr() {
      java.lang.Object ref = addr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        addr_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * addr is the address to receive commission from delegations.
     * </pre>
     *
     * <code>string addr = 2 [json_name = "addr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for addr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAddrBytes() {
      java.lang.Object ref = addr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        addr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMISSION_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object commission_ = "";
    /**
     * <pre>
     * commission defines the commission rate of finality provider
     * </pre>
     *
     * <code>string commission = 3 [json_name = "commission", (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The commission.
     */
    @java.lang.Override
    public java.lang.String getCommission() {
      java.lang.Object ref = commission_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commission_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * commission defines the commission rate of finality provider
     * </pre>
     *
     * <code>string commission = 3 [json_name = "commission", (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The bytes for commission.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCommissionBytes() {
      java.lang.Object ref = commission_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commission_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOTAL_VOTING_POWER_FIELD_NUMBER = 4;
    private long totalVotingPower_ = 0L;
    /**
     * <pre>
     * total_voting_power is the total voting power of the finality provider
     * </pre>
     *
     * <code>uint64 total_voting_power = 4 [json_name = "totalVotingPower"];</code>
     * @return The totalVotingPower.
     */
    @java.lang.Override
    public long getTotalVotingPower() {
      return totalVotingPower_;
    }

    public static final int BTC_DELS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo> btcDels_;
    /**
     * <pre>
     * btc_dels is a list of BTC delegations' voting power information under this finality provider
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
     */
    @java.lang.Override
    public java.util.List<com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo> getBtcDelsList() {
      return btcDels_;
    }
    /**
     * <pre>
     * btc_dels is a list of BTC delegations' voting power information under this finality provider
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfoOrBuilder> 
        getBtcDelsOrBuilderList() {
      return btcDels_;
    }
    /**
     * <pre>
     * btc_dels is a list of BTC delegations' voting power information under this finality provider
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
     */
    @java.lang.Override
    public int getBtcDelsCount() {
      return btcDels_.size();
    }
    /**
     * <pre>
     * btc_dels is a list of BTC delegations' voting power information under this finality provider
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo getBtcDels(int index) {
      return btcDels_.get(index);
    }
    /**
     * <pre>
     * btc_dels is a list of BTC delegations' voting power information under this finality provider
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfoOrBuilder getBtcDelsOrBuilder(
        int index) {
      return btcDels_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!btcPk_.isEmpty()) {
        output.writeBytes(1, btcPk_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(addr_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, addr_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(commission_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, commission_);
      }
      if (totalVotingPower_ != 0L) {
        output.writeUInt64(4, totalVotingPower_);
      }
      for (int i = 0; i < btcDels_.size(); i++) {
        output.writeMessage(5, btcDels_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!btcPk_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, btcPk_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(addr_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, addr_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(commission_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, commission_);
      }
      if (totalVotingPower_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, totalVotingPower_);
      }
      for (int i = 0; i < btcDels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, btcDels_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo)) {
        return super.equals(obj);
      }
      com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo other = (com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo) obj;

      if (!getBtcPk()
          .equals(other.getBtcPk())) return false;
      if (!getAddr()
          .equals(other.getAddr())) return false;
      if (!getCommission()
          .equals(other.getCommission())) return false;
      if (getTotalVotingPower()
          != other.getTotalVotingPower()) return false;
      if (!getBtcDelsList()
          .equals(other.getBtcDelsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BTC_PK_FIELD_NUMBER;
      hash = (53 * hash) + getBtcPk().hashCode();
      hash = (37 * hash) + ADDR_FIELD_NUMBER;
      hash = (53 * hash) + getAddr().hashCode();
      hash = (37 * hash) + COMMISSION_FIELD_NUMBER;
      hash = (53 * hash) + getCommission().hashCode();
      hash = (37 * hash) + TOTAL_VOTING_POWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalVotingPower());
      if (getBtcDelsCount() > 0) {
        hash = (37 * hash) + BTC_DELS_FIELD_NUMBER;
        hash = (53 * hash) + getBtcDelsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * FinalityProviderDistInfo is the reward distribution of a finality provider and its BTC delegations
     * </pre>
     *
     * Protobuf type {@code babylon.btcstaking.v1.FinalityProviderDistInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.btcstaking.v1.FinalityProviderDistInfo)
        com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_FinalityProviderDistInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_FinalityProviderDistInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.class, com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.Builder.class);
      }

      // Construct using com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        btcPk_ = com.google.protobuf.ByteString.EMPTY;
        addr_ = "";
        commission_ = "";
        totalVotingPower_ = 0L;
        if (btcDelsBuilder_ == null) {
          btcDels_ = java.util.Collections.emptyList();
        } else {
          btcDels_ = null;
          btcDelsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_FinalityProviderDistInfo_descriptor;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo getDefaultInstanceForType() {
        return com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo build() {
        com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo buildPartial() {
        com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo result = new com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo result) {
        if (btcDelsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            btcDels_ = java.util.Collections.unmodifiableList(btcDels_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.btcDels_ = btcDels_;
        } else {
          result.btcDels_ = btcDelsBuilder_.build();
        }
      }

      private void buildPartial0(com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.btcPk_ = btcPk_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.addr_ = addr_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.commission_ = commission_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.totalVotingPower_ = totalVotingPower_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo) {
          return mergeFrom((com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo other) {
        if (other == com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo.getDefaultInstance()) return this;
        if (other.getBtcPk() != com.google.protobuf.ByteString.EMPTY) {
          setBtcPk(other.getBtcPk());
        }
        if (!other.getAddr().isEmpty()) {
          addr_ = other.addr_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getCommission().isEmpty()) {
          commission_ = other.commission_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.getTotalVotingPower() != 0L) {
          setTotalVotingPower(other.getTotalVotingPower());
        }
        if (btcDelsBuilder_ == null) {
          if (!other.btcDels_.isEmpty()) {
            if (btcDels_.isEmpty()) {
              btcDels_ = other.btcDels_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureBtcDelsIsMutable();
              btcDels_.addAll(other.btcDels_);
            }
            onChanged();
          }
        } else {
          if (!other.btcDels_.isEmpty()) {
            if (btcDelsBuilder_.isEmpty()) {
              btcDelsBuilder_.dispose();
              btcDelsBuilder_ = null;
              btcDels_ = other.btcDels_;
              bitField0_ = (bitField0_ & ~0x00000010);
              btcDelsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBtcDelsFieldBuilder() : null;
            } else {
              btcDelsBuilder_.addAllMessages(other.btcDels_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                btcPk_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                addr_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                commission_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                totalVotingPower_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 42: {
                com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo m =
                    input.readMessage(
                        com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.parser(),
                        extensionRegistry);
                if (btcDelsBuilder_ == null) {
                  ensureBtcDelsIsMutable();
                  btcDels_.add(m);
                } else {
                  btcDelsBuilder_.addMessage(m);
                }
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString btcPk_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * btc_pk is the Bitcoin secp256k1 PK of this finality provider
       * the PK follows encoding in BIP-340 spec
       * </pre>
       *
       * <code>bytes btc_pk = 1 [json_name = "btcPk", (.gogoproto.customtype) = "github.com/babylonchain/babylon/types.BIP340PubKey"];</code>
       * @return The btcPk.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBtcPk() {
        return btcPk_;
      }
      /**
       * <pre>
       * btc_pk is the Bitcoin secp256k1 PK of this finality provider
       * the PK follows encoding in BIP-340 spec
       * </pre>
       *
       * <code>bytes btc_pk = 1 [json_name = "btcPk", (.gogoproto.customtype) = "github.com/babylonchain/babylon/types.BIP340PubKey"];</code>
       * @param value The btcPk to set.
       * @return This builder for chaining.
       */
      public Builder setBtcPk(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        btcPk_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * btc_pk is the Bitcoin secp256k1 PK of this finality provider
       * the PK follows encoding in BIP-340 spec
       * </pre>
       *
       * <code>bytes btc_pk = 1 [json_name = "btcPk", (.gogoproto.customtype) = "github.com/babylonchain/babylon/types.BIP340PubKey"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBtcPk() {
        bitField0_ = (bitField0_ & ~0x00000001);
        btcPk_ = getDefaultInstance().getBtcPk();
        onChanged();
        return this;
      }

      private java.lang.Object addr_ = "";
      /**
       * <pre>
       * addr is the address to receive commission from delegations.
       * </pre>
       *
       * <code>string addr = 2 [json_name = "addr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The addr.
       */
      public java.lang.String getAddr() {
        java.lang.Object ref = addr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          addr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * addr is the address to receive commission from delegations.
       * </pre>
       *
       * <code>string addr = 2 [json_name = "addr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The bytes for addr.
       */
      public com.google.protobuf.ByteString
          getAddrBytes() {
        java.lang.Object ref = addr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          addr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * addr is the address to receive commission from delegations.
       * </pre>
       *
       * <code>string addr = 2 [json_name = "addr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The addr to set.
       * @return This builder for chaining.
       */
      public Builder setAddr(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        addr_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * addr is the address to receive commission from delegations.
       * </pre>
       *
       * <code>string addr = 2 [json_name = "addr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAddr() {
        addr_ = getDefaultInstance().getAddr();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * addr is the address to receive commission from delegations.
       * </pre>
       *
       * <code>string addr = 2 [json_name = "addr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The bytes for addr to set.
       * @return This builder for chaining.
       */
      public Builder setAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        addr_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object commission_ = "";
      /**
       * <pre>
       * commission defines the commission rate of finality provider
       * </pre>
       *
       * <code>string commission = 3 [json_name = "commission", (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @return The commission.
       */
      public java.lang.String getCommission() {
        java.lang.Object ref = commission_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commission_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * commission defines the commission rate of finality provider
       * </pre>
       *
       * <code>string commission = 3 [json_name = "commission", (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @return The bytes for commission.
       */
      public com.google.protobuf.ByteString
          getCommissionBytes() {
        java.lang.Object ref = commission_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commission_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * commission defines the commission rate of finality provider
       * </pre>
       *
       * <code>string commission = 3 [json_name = "commission", (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @param value The commission to set.
       * @return This builder for chaining.
       */
      public Builder setCommission(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        commission_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * commission defines the commission rate of finality provider
       * </pre>
       *
       * <code>string commission = 3 [json_name = "commission", (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @return This builder for chaining.
       */
      public Builder clearCommission() {
        commission_ = getDefaultInstance().getCommission();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * commission defines the commission rate of finality provider
       * </pre>
       *
       * <code>string commission = 3 [json_name = "commission", (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @param value The bytes for commission to set.
       * @return This builder for chaining.
       */
      public Builder setCommissionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        commission_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private long totalVotingPower_ ;
      /**
       * <pre>
       * total_voting_power is the total voting power of the finality provider
       * </pre>
       *
       * <code>uint64 total_voting_power = 4 [json_name = "totalVotingPower"];</code>
       * @return The totalVotingPower.
       */
      @java.lang.Override
      public long getTotalVotingPower() {
        return totalVotingPower_;
      }
      /**
       * <pre>
       * total_voting_power is the total voting power of the finality provider
       * </pre>
       *
       * <code>uint64 total_voting_power = 4 [json_name = "totalVotingPower"];</code>
       * @param value The totalVotingPower to set.
       * @return This builder for chaining.
       */
      public Builder setTotalVotingPower(long value) {

        totalVotingPower_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * total_voting_power is the total voting power of the finality provider
       * </pre>
       *
       * <code>uint64 total_voting_power = 4 [json_name = "totalVotingPower"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalVotingPower() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalVotingPower_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo> btcDels_ =
        java.util.Collections.emptyList();
      private void ensureBtcDelsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          btcDels_ = new java.util.ArrayList<com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo>(btcDels_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.Builder, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfoOrBuilder> btcDelsBuilder_;

      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo> getBtcDelsList() {
        if (btcDelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(btcDels_);
        } else {
          return btcDelsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public int getBtcDelsCount() {
        if (btcDelsBuilder_ == null) {
          return btcDels_.size();
        } else {
          return btcDelsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo getBtcDels(int index) {
        if (btcDelsBuilder_ == null) {
          return btcDels_.get(index);
        } else {
          return btcDelsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public Builder setBtcDels(
          int index, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo value) {
        if (btcDelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBtcDelsIsMutable();
          btcDels_.set(index, value);
          onChanged();
        } else {
          btcDelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public Builder setBtcDels(
          int index, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.Builder builderForValue) {
        if (btcDelsBuilder_ == null) {
          ensureBtcDelsIsMutable();
          btcDels_.set(index, builderForValue.build());
          onChanged();
        } else {
          btcDelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public Builder addBtcDels(com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo value) {
        if (btcDelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBtcDelsIsMutable();
          btcDels_.add(value);
          onChanged();
        } else {
          btcDelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public Builder addBtcDels(
          int index, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo value) {
        if (btcDelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBtcDelsIsMutable();
          btcDels_.add(index, value);
          onChanged();
        } else {
          btcDelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public Builder addBtcDels(
          com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.Builder builderForValue) {
        if (btcDelsBuilder_ == null) {
          ensureBtcDelsIsMutable();
          btcDels_.add(builderForValue.build());
          onChanged();
        } else {
          btcDelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public Builder addBtcDels(
          int index, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.Builder builderForValue) {
        if (btcDelsBuilder_ == null) {
          ensureBtcDelsIsMutable();
          btcDels_.add(index, builderForValue.build());
          onChanged();
        } else {
          btcDelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public Builder addAllBtcDels(
          java.lang.Iterable<? extends com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo> values) {
        if (btcDelsBuilder_ == null) {
          ensureBtcDelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, btcDels_);
          onChanged();
        } else {
          btcDelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public Builder clearBtcDels() {
        if (btcDelsBuilder_ == null) {
          btcDels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          btcDelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public Builder removeBtcDels(int index) {
        if (btcDelsBuilder_ == null) {
          ensureBtcDelsIsMutable();
          btcDels_.remove(index);
          onChanged();
        } else {
          btcDelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.Builder getBtcDelsBuilder(
          int index) {
        return getBtcDelsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfoOrBuilder getBtcDelsOrBuilder(
          int index) {
        if (btcDelsBuilder_ == null) {
          return btcDels_.get(index);  } else {
          return btcDelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public java.util.List<? extends com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfoOrBuilder> 
           getBtcDelsOrBuilderList() {
        if (btcDelsBuilder_ != null) {
          return btcDelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(btcDels_);
        }
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.Builder addBtcDelsBuilder() {
        return getBtcDelsFieldBuilder().addBuilder(
            com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.Builder addBtcDelsBuilder(
          int index) {
        return getBtcDelsFieldBuilder().addBuilder(
            index, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * btc_dels is a list of BTC delegations' voting power information under this finality provider
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelDistInfo btc_dels = 5 [json_name = "btcDels"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.Builder> 
           getBtcDelsBuilderList() {
        return getBtcDelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.Builder, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfoOrBuilder> 
          getBtcDelsFieldBuilder() {
        if (btcDelsBuilder_ == null) {
          btcDelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.Builder, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfoOrBuilder>(
                  btcDels_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          btcDels_ = null;
        }
        return btcDelsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.btcstaking.v1.FinalityProviderDistInfo)
    }

    // @@protoc_insertion_point(class_scope:babylon.btcstaking.v1.FinalityProviderDistInfo)
    private static final com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo();
    }

    public static com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FinalityProviderDistInfo>
        PARSER = new com.google.protobuf.AbstractParser<FinalityProviderDistInfo>() {
      @java.lang.Override
      public FinalityProviderDistInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FinalityProviderDistInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FinalityProviderDistInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.btcstaking.v1.IncentiveProto.FinalityProviderDistInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BTCDelDistInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.btcstaking.v1.BTCDelDistInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * btc_pk is the Bitcoin secp256k1 PK of this BTC delegation
     * the PK follows encoding in BIP-340 spec
     * </pre>
     *
     * <code>bytes btc_pk = 1 [json_name = "btcPk", (.gogoproto.customtype) = "github.com/babylonchain/babylon/types.BIP340PubKey"];</code>
     * @return The btcPk.
     */
    com.google.protobuf.ByteString getBtcPk();

    /**
     * <pre>
     * staker_addr is the address to receive rewards from BTC delegation.
     * </pre>
     *
     * <code>string staker_addr = 2 [json_name = "stakerAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The stakerAddr.
     */
    java.lang.String getStakerAddr();
    /**
     * <pre>
     * staker_addr is the address to receive rewards from BTC delegation.
     * </pre>
     *
     * <code>string staker_addr = 2 [json_name = "stakerAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for stakerAddr.
     */
    com.google.protobuf.ByteString
        getStakerAddrBytes();

    /**
     * <pre>
     * staking_tx_hash is the staking tx hash of the BTC delegation
     * </pre>
     *
     * <code>string staking_tx_hash = 3 [json_name = "stakingTxHash"];</code>
     * @return The stakingTxHash.
     */
    java.lang.String getStakingTxHash();
    /**
     * <pre>
     * staking_tx_hash is the staking tx hash of the BTC delegation
     * </pre>
     *
     * <code>string staking_tx_hash = 3 [json_name = "stakingTxHash"];</code>
     * @return The bytes for stakingTxHash.
     */
    com.google.protobuf.ByteString
        getStakingTxHashBytes();

    /**
     * <pre>
     * voting_power is the voting power of the BTC delegation
     * </pre>
     *
     * <code>uint64 voting_power = 4 [json_name = "votingPower"];</code>
     * @return The votingPower.
     */
    long getVotingPower();
  }
  /**
   * <pre>
   * BTCDelDistInfo contains the information related to reward distribution for a BTC delegation
   * </pre>
   *
   * Protobuf type {@code babylon.btcstaking.v1.BTCDelDistInfo}
   */
  public static final class BTCDelDistInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.btcstaking.v1.BTCDelDistInfo)
      BTCDelDistInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BTCDelDistInfo.newBuilder() to construct.
    private BTCDelDistInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BTCDelDistInfo() {
      btcPk_ = com.google.protobuf.ByteString.EMPTY;
      stakerAddr_ = "";
      stakingTxHash_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BTCDelDistInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_BTCDelDistInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_BTCDelDistInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.class, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.Builder.class);
    }

    public static final int BTC_PK_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString btcPk_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * btc_pk is the Bitcoin secp256k1 PK of this BTC delegation
     * the PK follows encoding in BIP-340 spec
     * </pre>
     *
     * <code>bytes btc_pk = 1 [json_name = "btcPk", (.gogoproto.customtype) = "github.com/babylonchain/babylon/types.BIP340PubKey"];</code>
     * @return The btcPk.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBtcPk() {
      return btcPk_;
    }

    public static final int STAKER_ADDR_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object stakerAddr_ = "";
    /**
     * <pre>
     * staker_addr is the address to receive rewards from BTC delegation.
     * </pre>
     *
     * <code>string staker_addr = 2 [json_name = "stakerAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The stakerAddr.
     */
    @java.lang.Override
    public java.lang.String getStakerAddr() {
      java.lang.Object ref = stakerAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stakerAddr_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * staker_addr is the address to receive rewards from BTC delegation.
     * </pre>
     *
     * <code>string staker_addr = 2 [json_name = "stakerAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for stakerAddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStakerAddrBytes() {
      java.lang.Object ref = stakerAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stakerAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STAKING_TX_HASH_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object stakingTxHash_ = "";
    /**
     * <pre>
     * staking_tx_hash is the staking tx hash of the BTC delegation
     * </pre>
     *
     * <code>string staking_tx_hash = 3 [json_name = "stakingTxHash"];</code>
     * @return The stakingTxHash.
     */
    @java.lang.Override
    public java.lang.String getStakingTxHash() {
      java.lang.Object ref = stakingTxHash_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stakingTxHash_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * staking_tx_hash is the staking tx hash of the BTC delegation
     * </pre>
     *
     * <code>string staking_tx_hash = 3 [json_name = "stakingTxHash"];</code>
     * @return The bytes for stakingTxHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStakingTxHashBytes() {
      java.lang.Object ref = stakingTxHash_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stakingTxHash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VOTING_POWER_FIELD_NUMBER = 4;
    private long votingPower_ = 0L;
    /**
     * <pre>
     * voting_power is the voting power of the BTC delegation
     * </pre>
     *
     * <code>uint64 voting_power = 4 [json_name = "votingPower"];</code>
     * @return The votingPower.
     */
    @java.lang.Override
    public long getVotingPower() {
      return votingPower_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!btcPk_.isEmpty()) {
        output.writeBytes(1, btcPk_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stakerAddr_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, stakerAddr_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stakingTxHash_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, stakingTxHash_);
      }
      if (votingPower_ != 0L) {
        output.writeUInt64(4, votingPower_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!btcPk_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, btcPk_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stakerAddr_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, stakerAddr_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stakingTxHash_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, stakingTxHash_);
      }
      if (votingPower_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, votingPower_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo)) {
        return super.equals(obj);
      }
      com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo other = (com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo) obj;

      if (!getBtcPk()
          .equals(other.getBtcPk())) return false;
      if (!getStakerAddr()
          .equals(other.getStakerAddr())) return false;
      if (!getStakingTxHash()
          .equals(other.getStakingTxHash())) return false;
      if (getVotingPower()
          != other.getVotingPower()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BTC_PK_FIELD_NUMBER;
      hash = (53 * hash) + getBtcPk().hashCode();
      hash = (37 * hash) + STAKER_ADDR_FIELD_NUMBER;
      hash = (53 * hash) + getStakerAddr().hashCode();
      hash = (37 * hash) + STAKING_TX_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getStakingTxHash().hashCode();
      hash = (37 * hash) + VOTING_POWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVotingPower());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * BTCDelDistInfo contains the information related to reward distribution for a BTC delegation
     * </pre>
     *
     * Protobuf type {@code babylon.btcstaking.v1.BTCDelDistInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.btcstaking.v1.BTCDelDistInfo)
        com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_BTCDelDistInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_BTCDelDistInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.class, com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.Builder.class);
      }

      // Construct using com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        btcPk_ = com.google.protobuf.ByteString.EMPTY;
        stakerAddr_ = "";
        stakingTxHash_ = "";
        votingPower_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.btcstaking.v1.IncentiveProto.internal_static_babylon_btcstaking_v1_BTCDelDistInfo_descriptor;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo getDefaultInstanceForType() {
        return com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo build() {
        com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo buildPartial() {
        com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo result = new com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.btcPk_ = btcPk_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.stakerAddr_ = stakerAddr_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.stakingTxHash_ = stakingTxHash_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.votingPower_ = votingPower_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo) {
          return mergeFrom((com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo other) {
        if (other == com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo.getDefaultInstance()) return this;
        if (other.getBtcPk() != com.google.protobuf.ByteString.EMPTY) {
          setBtcPk(other.getBtcPk());
        }
        if (!other.getStakerAddr().isEmpty()) {
          stakerAddr_ = other.stakerAddr_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getStakingTxHash().isEmpty()) {
          stakingTxHash_ = other.stakingTxHash_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.getVotingPower() != 0L) {
          setVotingPower(other.getVotingPower());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                btcPk_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                stakerAddr_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                stakingTxHash_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                votingPower_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString btcPk_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * btc_pk is the Bitcoin secp256k1 PK of this BTC delegation
       * the PK follows encoding in BIP-340 spec
       * </pre>
       *
       * <code>bytes btc_pk = 1 [json_name = "btcPk", (.gogoproto.customtype) = "github.com/babylonchain/babylon/types.BIP340PubKey"];</code>
       * @return The btcPk.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBtcPk() {
        return btcPk_;
      }
      /**
       * <pre>
       * btc_pk is the Bitcoin secp256k1 PK of this BTC delegation
       * the PK follows encoding in BIP-340 spec
       * </pre>
       *
       * <code>bytes btc_pk = 1 [json_name = "btcPk", (.gogoproto.customtype) = "github.com/babylonchain/babylon/types.BIP340PubKey"];</code>
       * @param value The btcPk to set.
       * @return This builder for chaining.
       */
      public Builder setBtcPk(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        btcPk_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * btc_pk is the Bitcoin secp256k1 PK of this BTC delegation
       * the PK follows encoding in BIP-340 spec
       * </pre>
       *
       * <code>bytes btc_pk = 1 [json_name = "btcPk", (.gogoproto.customtype) = "github.com/babylonchain/babylon/types.BIP340PubKey"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBtcPk() {
        bitField0_ = (bitField0_ & ~0x00000001);
        btcPk_ = getDefaultInstance().getBtcPk();
        onChanged();
        return this;
      }

      private java.lang.Object stakerAddr_ = "";
      /**
       * <pre>
       * staker_addr is the address to receive rewards from BTC delegation.
       * </pre>
       *
       * <code>string staker_addr = 2 [json_name = "stakerAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The stakerAddr.
       */
      public java.lang.String getStakerAddr() {
        java.lang.Object ref = stakerAddr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stakerAddr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * staker_addr is the address to receive rewards from BTC delegation.
       * </pre>
       *
       * <code>string staker_addr = 2 [json_name = "stakerAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The bytes for stakerAddr.
       */
      public com.google.protobuf.ByteString
          getStakerAddrBytes() {
        java.lang.Object ref = stakerAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stakerAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * staker_addr is the address to receive rewards from BTC delegation.
       * </pre>
       *
       * <code>string staker_addr = 2 [json_name = "stakerAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The stakerAddr to set.
       * @return This builder for chaining.
       */
      public Builder setStakerAddr(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        stakerAddr_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * staker_addr is the address to receive rewards from BTC delegation.
       * </pre>
       *
       * <code>string staker_addr = 2 [json_name = "stakerAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return This builder for chaining.
       */
      public Builder clearStakerAddr() {
        stakerAddr_ = getDefaultInstance().getStakerAddr();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * staker_addr is the address to receive rewards from BTC delegation.
       * </pre>
       *
       * <code>string staker_addr = 2 [json_name = "stakerAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The bytes for stakerAddr to set.
       * @return This builder for chaining.
       */
      public Builder setStakerAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        stakerAddr_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object stakingTxHash_ = "";
      /**
       * <pre>
       * staking_tx_hash is the staking tx hash of the BTC delegation
       * </pre>
       *
       * <code>string staking_tx_hash = 3 [json_name = "stakingTxHash"];</code>
       * @return The stakingTxHash.
       */
      public java.lang.String getStakingTxHash() {
        java.lang.Object ref = stakingTxHash_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stakingTxHash_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * staking_tx_hash is the staking tx hash of the BTC delegation
       * </pre>
       *
       * <code>string staking_tx_hash = 3 [json_name = "stakingTxHash"];</code>
       * @return The bytes for stakingTxHash.
       */
      public com.google.protobuf.ByteString
          getStakingTxHashBytes() {
        java.lang.Object ref = stakingTxHash_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stakingTxHash_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * staking_tx_hash is the staking tx hash of the BTC delegation
       * </pre>
       *
       * <code>string staking_tx_hash = 3 [json_name = "stakingTxHash"];</code>
       * @param value The stakingTxHash to set.
       * @return This builder for chaining.
       */
      public Builder setStakingTxHash(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        stakingTxHash_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * staking_tx_hash is the staking tx hash of the BTC delegation
       * </pre>
       *
       * <code>string staking_tx_hash = 3 [json_name = "stakingTxHash"];</code>
       * @return This builder for chaining.
       */
      public Builder clearStakingTxHash() {
        stakingTxHash_ = getDefaultInstance().getStakingTxHash();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * staking_tx_hash is the staking tx hash of the BTC delegation
       * </pre>
       *
       * <code>string staking_tx_hash = 3 [json_name = "stakingTxHash"];</code>
       * @param value The bytes for stakingTxHash to set.
       * @return This builder for chaining.
       */
      public Builder setStakingTxHashBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        stakingTxHash_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private long votingPower_ ;
      /**
       * <pre>
       * voting_power is the voting power of the BTC delegation
       * </pre>
       *
       * <code>uint64 voting_power = 4 [json_name = "votingPower"];</code>
       * @return The votingPower.
       */
      @java.lang.Override
      public long getVotingPower() {
        return votingPower_;
      }
      /**
       * <pre>
       * voting_power is the voting power of the BTC delegation
       * </pre>
       *
       * <code>uint64 voting_power = 4 [json_name = "votingPower"];</code>
       * @param value The votingPower to set.
       * @return This builder for chaining.
       */
      public Builder setVotingPower(long value) {

        votingPower_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * voting_power is the voting power of the BTC delegation
       * </pre>
       *
       * <code>uint64 voting_power = 4 [json_name = "votingPower"];</code>
       * @return This builder for chaining.
       */
      public Builder clearVotingPower() {
        bitField0_ = (bitField0_ & ~0x00000008);
        votingPower_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.btcstaking.v1.BTCDelDistInfo)
    }

    // @@protoc_insertion_point(class_scope:babylon.btcstaking.v1.BTCDelDistInfo)
    private static final com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo();
    }

    public static com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BTCDelDistInfo>
        PARSER = new com.google.protobuf.AbstractParser<BTCDelDistInfo>() {
      @java.lang.Override
      public BTCDelDistInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BTCDelDistInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BTCDelDistInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.btcstaking.v1.IncentiveProto.BTCDelDistInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_btcstaking_v1_VotingPowerDistCache_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_btcstaking_v1_VotingPowerDistCache_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_btcstaking_v1_FinalityProviderDistInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_btcstaking_v1_FinalityProviderDistInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_btcstaking_v1_BTCDelDistInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_btcstaking_v1_BTCDelDistInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%babylon/btcstaking/v1/incentive.proto\022" +
      "\025babylon.btcstaking.v1\032\024gogoproto/gogo.p" +
      "roto\032\031cosmos_proto/cosmos.proto\"\244\001\n\024Voti" +
      "ngPowerDistCache\022,\n\022total_voting_power\030\001" +
      " \001(\004R\020totalVotingPower\022^\n\022finality_provi" +
      "ders\030\002 \003(\0132/.babylon.btcstaking.v1.Final" +
      "ityProviderDistInfoR\021finalityProviders\"\326" +
      "\002\n\030FinalityProviderDistInfo\022M\n\006btc_pk\030\001 " +
      "\001(\014B6\332\336\0372github.com/babylonchain/babylon" +
      "/types.BIP340PubKeyR\005btcPk\022,\n\004addr\030\002 \001(\t" +
      "B\030\322\264-\024cosmos.AddressStringR\004addr\022M\n\ncomm" +
      "ission\030\003 \001(\tB-\332\336\037\033cosmossdk.io/math.Lega" +
      "cyDec\322\264-\ncosmos.DecR\ncommission\022,\n\022total" +
      "_voting_power\030\004 \001(\004R\020totalVotingPower\022@\n" +
      "\010btc_dels\030\005 \003(\0132%.babylon.btcstaking.v1." +
      "BTCDelDistInfoR\007btcDels\"\345\001\n\016BTCDelDistIn" +
      "fo\022M\n\006btc_pk\030\001 \001(\014B6\332\336\0372github.com/babyl" +
      "onchain/babylon/types.BIP340PubKeyR\005btcP" +
      "k\0229\n\013staker_addr\030\002 \001(\tB\030\322\264-\024cosmos.Addre" +
      "ssStringR\nstakerAddr\022&\n\017staking_tx_hash\030" +
      "\003 \001(\tR\rstakingTxHash\022!\n\014voting_power\030\004 \001" +
      "(\004R\013votingPowerB\323\001\n\031com.babylon.btcstaki" +
      "ng.v1B\016IncentiveProtoZ2github.com/babylo" +
      "nchain/babylon/x/btcstaking/types\242\002\003BBX\252" +
      "\002\025Babylon.Btcstaking.V1\312\002\025Babylon\\Btcsta" +
      "king\\V1\342\002!Babylon\\Btcstaking\\V1\\GPBMetad" +
      "ata\352\002\027Babylon::Btcstaking::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
        });
    internal_static_babylon_btcstaking_v1_VotingPowerDistCache_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_babylon_btcstaking_v1_VotingPowerDistCache_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_btcstaking_v1_VotingPowerDistCache_descriptor,
        new java.lang.String[] { "TotalVotingPower", "FinalityProviders", });
    internal_static_babylon_btcstaking_v1_FinalityProviderDistInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_babylon_btcstaking_v1_FinalityProviderDistInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_btcstaking_v1_FinalityProviderDistInfo_descriptor,
        new java.lang.String[] { "BtcPk", "Addr", "Commission", "TotalVotingPower", "BtcDels", });
    internal_static_babylon_btcstaking_v1_BTCDelDistInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_babylon_btcstaking_v1_BTCDelDistInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_btcstaking_v1_BTCDelDistInfo_descriptor,
        new java.lang.String[] { "BtcPk", "StakerAddr", "StakingTxHash", "VotingPower", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.cosmos_proto.CosmosProto.scalar);
    registry.add(com.gogoproto.GogoProto.customtype);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

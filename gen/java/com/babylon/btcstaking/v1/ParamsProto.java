// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: babylon/btcstaking/v1/params.proto

package com.babylon.btcstaking.v1;

public final class ParamsProto {
  private ParamsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.btcstaking.v1.Params)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * PARAMETERS COVERING STAKING
     * covenant_pks is the list of public keys held by the covenant committee
     * each PK follows encoding in BIP-340 spec on Bitcoin
     * </pre>
     *
     * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
     * @return A list containing the covenantPks.
     */
    java.util.List<com.google.protobuf.ByteString> getCovenantPksList();
    /**
     * <pre>
     * PARAMETERS COVERING STAKING
     * covenant_pks is the list of public keys held by the covenant committee
     * each PK follows encoding in BIP-340 spec on Bitcoin
     * </pre>
     *
     * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
     * @return The count of covenantPks.
     */
    int getCovenantPksCount();
    /**
     * <pre>
     * PARAMETERS COVERING STAKING
     * covenant_pks is the list of public keys held by the covenant committee
     * each PK follows encoding in BIP-340 spec on Bitcoin
     * </pre>
     *
     * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
     * @param index The index of the element to return.
     * @return The covenantPks at the given index.
     */
    com.google.protobuf.ByteString getCovenantPks(int index);

    /**
     * <pre>
     * covenant_quorum is the minimum number of signatures needed for the covenant
     * multisignature
     * </pre>
     *
     * <code>uint32 covenant_quorum = 2 [json_name = "covenantQuorum"];</code>
     * @return The covenantQuorum.
     */
    int getCovenantQuorum();

    /**
     * <pre>
     * min_staking_value_sat is the minimum of satoshis locked in staking output
     * </pre>
     *
     * <code>int64 min_staking_value_sat = 3 [json_name = "minStakingValueSat"];</code>
     * @return The minStakingValueSat.
     */
    long getMinStakingValueSat();

    /**
     * <pre>
     * max_staking_value_sat is the maximum of satoshis locked in staking output
     * </pre>
     *
     * <code>int64 max_staking_value_sat = 4 [json_name = "maxStakingValueSat"];</code>
     * @return The maxStakingValueSat.
     */
    long getMaxStakingValueSat();

    /**
     * <pre>
     * min_staking_time is the minimum lock time specified in staking output script
     * </pre>
     *
     * <code>uint32 min_staking_time_blocks = 5 [json_name = "minStakingTimeBlocks"];</code>
     * @return The minStakingTimeBlocks.
     */
    int getMinStakingTimeBlocks();

    /**
     * <pre>
     * max_staking_time_blocks is the maximum lock time time specified in staking output script
     * </pre>
     *
     * <code>uint32 max_staking_time_blocks = 6 [json_name = "maxStakingTimeBlocks"];</code>
     * @return The maxStakingTimeBlocks.
     */
    int getMaxStakingTimeBlocks();

    /**
     * <pre>
     * PARAMETERS COVERING SLASHING
     * slashing_pk_script is the pk_script expected in slashing output ie. the first
     * output of slashing transaction
     * </pre>
     *
     * <code>bytes slashing_pk_script = 7 [json_name = "slashingPkScript"];</code>
     * @return The slashingPkScript.
     */
    com.google.protobuf.ByteString getSlashingPkScript();

    /**
     * <pre>
     * min_slashing_tx_fee_sat is the minimum amount of tx fee (quantified
     * in Satoshi) needed for the pre-signed slashing tx. It covers both:
     * staking slashing transaction and unbonding slashing transaction
     * </pre>
     *
     * <code>int64 min_slashing_tx_fee_sat = 8 [json_name = "minSlashingTxFeeSat"];</code>
     * @return The minSlashingTxFeeSat.
     */
    long getMinSlashingTxFeeSat();

    /**
     * <pre>
     * slashing_rate determines the portion of the staked amount to be slashed,
     * expressed as a decimal (e.g., 0.5 for 50%). Maximal precion is 2 decimal
     * places
     * </pre>
     *
     * <code>string slashing_rate = 9 [json_name = "slashingRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The slashingRate.
     */
    java.lang.String getSlashingRate();
    /**
     * <pre>
     * slashing_rate determines the portion of the staked amount to be slashed,
     * expressed as a decimal (e.g., 0.5 for 50%). Maximal precion is 2 decimal
     * places
     * </pre>
     *
     * <code>string slashing_rate = 9 [json_name = "slashingRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The bytes for slashingRate.
     */
    com.google.protobuf.ByteString
        getSlashingRateBytes();

    /**
     * <pre>
     * PARAMETERS COVERING UNBONDING
     * min_unbonding_time is the minimum time for unbonding transaction timelock in BTC blocks
     * </pre>
     *
     * <code>uint32 min_unbonding_time_blocks = 10 [json_name = "minUnbondingTimeBlocks"];</code>
     * @return The minUnbondingTimeBlocks.
     */
    int getMinUnbondingTimeBlocks();

    /**
     * <pre>
     * unbonding_fee exact fee required for unbonding transaction
     * </pre>
     *
     * <code>int64 unbonding_fee_sat = 11 [json_name = "unbondingFeeSat"];</code>
     * @return The unbondingFeeSat.
     */
    long getUnbondingFeeSat();

    /**
     * <pre>
     * PARAMETERS COVERING FINALITY PROVIDERS
     * min_commission_rate is the chain-wide minimum commission rate that a finality provider
     * can charge their delegators expressed as a decimal (e.g., 0.5 for 50%). Maximal precion
     * is 2 decimal places
     * </pre>
     *
     * <code>string min_commission_rate = 12 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec"];</code>
     * @return The minCommissionRate.
     */
    java.lang.String getMinCommissionRate();
    /**
     * <pre>
     * PARAMETERS COVERING FINALITY PROVIDERS
     * min_commission_rate is the chain-wide minimum commission rate that a finality provider
     * can charge their delegators expressed as a decimal (e.g., 0.5 for 50%). Maximal precion
     * is 2 decimal places
     * </pre>
     *
     * <code>string min_commission_rate = 12 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec"];</code>
     * @return The bytes for minCommissionRate.
     */
    com.google.protobuf.ByteString
        getMinCommissionRateBytes();

    /**
     * <pre>
     * base gas fee for delegation creation
     * </pre>
     *
     * <code>uint64 delegation_creation_base_gas_fee = 13 [json_name = "delegationCreationBaseGasFee"];</code>
     * @return The delegationCreationBaseGasFee.
     */
    long getDelegationCreationBaseGasFee();
  }
  /**
   * <pre>
   * Params defines the parameters for the module.
   * </pre>
   *
   * Protobuf type {@code babylon.btcstaking.v1.Params}
   */
  public static final class Params extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.btcstaking.v1.Params)
      ParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Params.newBuilder() to construct.
    private Params(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Params() {
      covenantPks_ = java.util.Collections.emptyList();
      slashingPkScript_ = com.google.protobuf.ByteString.EMPTY;
      slashingRate_ = "";
      minCommissionRate_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Params();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.btcstaking.v1.ParamsProto.internal_static_babylon_btcstaking_v1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.btcstaking.v1.ParamsProto.internal_static_babylon_btcstaking_v1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.btcstaking.v1.ParamsProto.Params.class, com.babylon.btcstaking.v1.ParamsProto.Params.Builder.class);
    }

    public static final int COVENANT_PKS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.google.protobuf.ByteString> covenantPks_;
    /**
     * <pre>
     * PARAMETERS COVERING STAKING
     * covenant_pks is the list of public keys held by the covenant committee
     * each PK follows encoding in BIP-340 spec on Bitcoin
     * </pre>
     *
     * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
     * @return A list containing the covenantPks.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getCovenantPksList() {
      return covenantPks_;
    }
    /**
     * <pre>
     * PARAMETERS COVERING STAKING
     * covenant_pks is the list of public keys held by the covenant committee
     * each PK follows encoding in BIP-340 spec on Bitcoin
     * </pre>
     *
     * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
     * @return The count of covenantPks.
     */
    public int getCovenantPksCount() {
      return covenantPks_.size();
    }
    /**
     * <pre>
     * PARAMETERS COVERING STAKING
     * covenant_pks is the list of public keys held by the covenant committee
     * each PK follows encoding in BIP-340 spec on Bitcoin
     * </pre>
     *
     * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
     * @param index The index of the element to return.
     * @return The covenantPks at the given index.
     */
    public com.google.protobuf.ByteString getCovenantPks(int index) {
      return covenantPks_.get(index);
    }

    public static final int COVENANT_QUORUM_FIELD_NUMBER = 2;
    private int covenantQuorum_ = 0;
    /**
     * <pre>
     * covenant_quorum is the minimum number of signatures needed for the covenant
     * multisignature
     * </pre>
     *
     * <code>uint32 covenant_quorum = 2 [json_name = "covenantQuorum"];</code>
     * @return The covenantQuorum.
     */
    @java.lang.Override
    public int getCovenantQuorum() {
      return covenantQuorum_;
    }

    public static final int MIN_STAKING_VALUE_SAT_FIELD_NUMBER = 3;
    private long minStakingValueSat_ = 0L;
    /**
     * <pre>
     * min_staking_value_sat is the minimum of satoshis locked in staking output
     * </pre>
     *
     * <code>int64 min_staking_value_sat = 3 [json_name = "minStakingValueSat"];</code>
     * @return The minStakingValueSat.
     */
    @java.lang.Override
    public long getMinStakingValueSat() {
      return minStakingValueSat_;
    }

    public static final int MAX_STAKING_VALUE_SAT_FIELD_NUMBER = 4;
    private long maxStakingValueSat_ = 0L;
    /**
     * <pre>
     * max_staking_value_sat is the maximum of satoshis locked in staking output
     * </pre>
     *
     * <code>int64 max_staking_value_sat = 4 [json_name = "maxStakingValueSat"];</code>
     * @return The maxStakingValueSat.
     */
    @java.lang.Override
    public long getMaxStakingValueSat() {
      return maxStakingValueSat_;
    }

    public static final int MIN_STAKING_TIME_BLOCKS_FIELD_NUMBER = 5;
    private int minStakingTimeBlocks_ = 0;
    /**
     * <pre>
     * min_staking_time is the minimum lock time specified in staking output script
     * </pre>
     *
     * <code>uint32 min_staking_time_blocks = 5 [json_name = "minStakingTimeBlocks"];</code>
     * @return The minStakingTimeBlocks.
     */
    @java.lang.Override
    public int getMinStakingTimeBlocks() {
      return minStakingTimeBlocks_;
    }

    public static final int MAX_STAKING_TIME_BLOCKS_FIELD_NUMBER = 6;
    private int maxStakingTimeBlocks_ = 0;
    /**
     * <pre>
     * max_staking_time_blocks is the maximum lock time time specified in staking output script
     * </pre>
     *
     * <code>uint32 max_staking_time_blocks = 6 [json_name = "maxStakingTimeBlocks"];</code>
     * @return The maxStakingTimeBlocks.
     */
    @java.lang.Override
    public int getMaxStakingTimeBlocks() {
      return maxStakingTimeBlocks_;
    }

    public static final int SLASHING_PK_SCRIPT_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString slashingPkScript_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * PARAMETERS COVERING SLASHING
     * slashing_pk_script is the pk_script expected in slashing output ie. the first
     * output of slashing transaction
     * </pre>
     *
     * <code>bytes slashing_pk_script = 7 [json_name = "slashingPkScript"];</code>
     * @return The slashingPkScript.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSlashingPkScript() {
      return slashingPkScript_;
    }

    public static final int MIN_SLASHING_TX_FEE_SAT_FIELD_NUMBER = 8;
    private long minSlashingTxFeeSat_ = 0L;
    /**
     * <pre>
     * min_slashing_tx_fee_sat is the minimum amount of tx fee (quantified
     * in Satoshi) needed for the pre-signed slashing tx. It covers both:
     * staking slashing transaction and unbonding slashing transaction
     * </pre>
     *
     * <code>int64 min_slashing_tx_fee_sat = 8 [json_name = "minSlashingTxFeeSat"];</code>
     * @return The minSlashingTxFeeSat.
     */
    @java.lang.Override
    public long getMinSlashingTxFeeSat() {
      return minSlashingTxFeeSat_;
    }

    public static final int SLASHING_RATE_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private volatile java.lang.Object slashingRate_ = "";
    /**
     * <pre>
     * slashing_rate determines the portion of the staked amount to be slashed,
     * expressed as a decimal (e.g., 0.5 for 50%). Maximal precion is 2 decimal
     * places
     * </pre>
     *
     * <code>string slashing_rate = 9 [json_name = "slashingRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The slashingRate.
     */
    @java.lang.Override
    public java.lang.String getSlashingRate() {
      java.lang.Object ref = slashingRate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        slashingRate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * slashing_rate determines the portion of the staked amount to be slashed,
     * expressed as a decimal (e.g., 0.5 for 50%). Maximal precion is 2 decimal
     * places
     * </pre>
     *
     * <code>string slashing_rate = 9 [json_name = "slashingRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The bytes for slashingRate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSlashingRateBytes() {
      java.lang.Object ref = slashingRate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        slashingRate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MIN_UNBONDING_TIME_BLOCKS_FIELD_NUMBER = 10;
    private int minUnbondingTimeBlocks_ = 0;
    /**
     * <pre>
     * PARAMETERS COVERING UNBONDING
     * min_unbonding_time is the minimum time for unbonding transaction timelock in BTC blocks
     * </pre>
     *
     * <code>uint32 min_unbonding_time_blocks = 10 [json_name = "minUnbondingTimeBlocks"];</code>
     * @return The minUnbondingTimeBlocks.
     */
    @java.lang.Override
    public int getMinUnbondingTimeBlocks() {
      return minUnbondingTimeBlocks_;
    }

    public static final int UNBONDING_FEE_SAT_FIELD_NUMBER = 11;
    private long unbondingFeeSat_ = 0L;
    /**
     * <pre>
     * unbonding_fee exact fee required for unbonding transaction
     * </pre>
     *
     * <code>int64 unbonding_fee_sat = 11 [json_name = "unbondingFeeSat"];</code>
     * @return The unbondingFeeSat.
     */
    @java.lang.Override
    public long getUnbondingFeeSat() {
      return unbondingFeeSat_;
    }

    public static final int MIN_COMMISSION_RATE_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private volatile java.lang.Object minCommissionRate_ = "";
    /**
     * <pre>
     * PARAMETERS COVERING FINALITY PROVIDERS
     * min_commission_rate is the chain-wide minimum commission rate that a finality provider
     * can charge their delegators expressed as a decimal (e.g., 0.5 for 50%). Maximal precion
     * is 2 decimal places
     * </pre>
     *
     * <code>string min_commission_rate = 12 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec"];</code>
     * @return The minCommissionRate.
     */
    @java.lang.Override
    public java.lang.String getMinCommissionRate() {
      java.lang.Object ref = minCommissionRate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        minCommissionRate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * PARAMETERS COVERING FINALITY PROVIDERS
     * min_commission_rate is the chain-wide minimum commission rate that a finality provider
     * can charge their delegators expressed as a decimal (e.g., 0.5 for 50%). Maximal precion
     * is 2 decimal places
     * </pre>
     *
     * <code>string min_commission_rate = 12 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec"];</code>
     * @return The bytes for minCommissionRate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMinCommissionRateBytes() {
      java.lang.Object ref = minCommissionRate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        minCommissionRate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DELEGATION_CREATION_BASE_GAS_FEE_FIELD_NUMBER = 13;
    private long delegationCreationBaseGasFee_ = 0L;
    /**
     * <pre>
     * base gas fee for delegation creation
     * </pre>
     *
     * <code>uint64 delegation_creation_base_gas_fee = 13 [json_name = "delegationCreationBaseGasFee"];</code>
     * @return The delegationCreationBaseGasFee.
     */
    @java.lang.Override
    public long getDelegationCreationBaseGasFee() {
      return delegationCreationBaseGasFee_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < covenantPks_.size(); i++) {
        output.writeBytes(1, covenantPks_.get(i));
      }
      if (covenantQuorum_ != 0) {
        output.writeUInt32(2, covenantQuorum_);
      }
      if (minStakingValueSat_ != 0L) {
        output.writeInt64(3, minStakingValueSat_);
      }
      if (maxStakingValueSat_ != 0L) {
        output.writeInt64(4, maxStakingValueSat_);
      }
      if (minStakingTimeBlocks_ != 0) {
        output.writeUInt32(5, minStakingTimeBlocks_);
      }
      if (maxStakingTimeBlocks_ != 0) {
        output.writeUInt32(6, maxStakingTimeBlocks_);
      }
      if (!slashingPkScript_.isEmpty()) {
        output.writeBytes(7, slashingPkScript_);
      }
      if (minSlashingTxFeeSat_ != 0L) {
        output.writeInt64(8, minSlashingTxFeeSat_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(slashingRate_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, slashingRate_);
      }
      if (minUnbondingTimeBlocks_ != 0) {
        output.writeUInt32(10, minUnbondingTimeBlocks_);
      }
      if (unbondingFeeSat_ != 0L) {
        output.writeInt64(11, unbondingFeeSat_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(minCommissionRate_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, minCommissionRate_);
      }
      if (delegationCreationBaseGasFee_ != 0L) {
        output.writeUInt64(13, delegationCreationBaseGasFee_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < covenantPks_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(covenantPks_.get(i));
        }
        size += dataSize;
        size += 1 * getCovenantPksList().size();
      }
      if (covenantQuorum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, covenantQuorum_);
      }
      if (minStakingValueSat_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, minStakingValueSat_);
      }
      if (maxStakingValueSat_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, maxStakingValueSat_);
      }
      if (minStakingTimeBlocks_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, minStakingTimeBlocks_);
      }
      if (maxStakingTimeBlocks_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, maxStakingTimeBlocks_);
      }
      if (!slashingPkScript_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, slashingPkScript_);
      }
      if (minSlashingTxFeeSat_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, minSlashingTxFeeSat_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(slashingRate_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, slashingRate_);
      }
      if (minUnbondingTimeBlocks_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, minUnbondingTimeBlocks_);
      }
      if (unbondingFeeSat_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, unbondingFeeSat_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(minCommissionRate_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, minCommissionRate_);
      }
      if (delegationCreationBaseGasFee_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(13, delegationCreationBaseGasFee_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.btcstaking.v1.ParamsProto.Params)) {
        return super.equals(obj);
      }
      com.babylon.btcstaking.v1.ParamsProto.Params other = (com.babylon.btcstaking.v1.ParamsProto.Params) obj;

      if (!getCovenantPksList()
          .equals(other.getCovenantPksList())) return false;
      if (getCovenantQuorum()
          != other.getCovenantQuorum()) return false;
      if (getMinStakingValueSat()
          != other.getMinStakingValueSat()) return false;
      if (getMaxStakingValueSat()
          != other.getMaxStakingValueSat()) return false;
      if (getMinStakingTimeBlocks()
          != other.getMinStakingTimeBlocks()) return false;
      if (getMaxStakingTimeBlocks()
          != other.getMaxStakingTimeBlocks()) return false;
      if (!getSlashingPkScript()
          .equals(other.getSlashingPkScript())) return false;
      if (getMinSlashingTxFeeSat()
          != other.getMinSlashingTxFeeSat()) return false;
      if (!getSlashingRate()
          .equals(other.getSlashingRate())) return false;
      if (getMinUnbondingTimeBlocks()
          != other.getMinUnbondingTimeBlocks()) return false;
      if (getUnbondingFeeSat()
          != other.getUnbondingFeeSat()) return false;
      if (!getMinCommissionRate()
          .equals(other.getMinCommissionRate())) return false;
      if (getDelegationCreationBaseGasFee()
          != other.getDelegationCreationBaseGasFee()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCovenantPksCount() > 0) {
        hash = (37 * hash) + COVENANT_PKS_FIELD_NUMBER;
        hash = (53 * hash) + getCovenantPksList().hashCode();
      }
      hash = (37 * hash) + COVENANT_QUORUM_FIELD_NUMBER;
      hash = (53 * hash) + getCovenantQuorum();
      hash = (37 * hash) + MIN_STAKING_VALUE_SAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMinStakingValueSat());
      hash = (37 * hash) + MAX_STAKING_VALUE_SAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxStakingValueSat());
      hash = (37 * hash) + MIN_STAKING_TIME_BLOCKS_FIELD_NUMBER;
      hash = (53 * hash) + getMinStakingTimeBlocks();
      hash = (37 * hash) + MAX_STAKING_TIME_BLOCKS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxStakingTimeBlocks();
      hash = (37 * hash) + SLASHING_PK_SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getSlashingPkScript().hashCode();
      hash = (37 * hash) + MIN_SLASHING_TX_FEE_SAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMinSlashingTxFeeSat());
      hash = (37 * hash) + SLASHING_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getSlashingRate().hashCode();
      hash = (37 * hash) + MIN_UNBONDING_TIME_BLOCKS_FIELD_NUMBER;
      hash = (53 * hash) + getMinUnbondingTimeBlocks();
      hash = (37 * hash) + UNBONDING_FEE_SAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUnbondingFeeSat());
      hash = (37 * hash) + MIN_COMMISSION_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getMinCommissionRate().hashCode();
      hash = (37 * hash) + DELEGATION_CREATION_BASE_GAS_FEE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDelegationCreationBaseGasFee());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.btcstaking.v1.ParamsProto.Params parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.Params parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.Params parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.Params parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.Params parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.Params parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.Params parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.Params parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.btcstaking.v1.ParamsProto.Params parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.btcstaking.v1.ParamsProto.Params parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.Params parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.Params parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.btcstaking.v1.ParamsProto.Params prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Params defines the parameters for the module.
     * </pre>
     *
     * Protobuf type {@code babylon.btcstaking.v1.Params}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.btcstaking.v1.Params)
        com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.btcstaking.v1.ParamsProto.internal_static_babylon_btcstaking_v1_Params_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.btcstaking.v1.ParamsProto.internal_static_babylon_btcstaking_v1_Params_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.btcstaking.v1.ParamsProto.Params.class, com.babylon.btcstaking.v1.ParamsProto.Params.Builder.class);
      }

      // Construct using com.babylon.btcstaking.v1.ParamsProto.Params.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        covenantPks_ = java.util.Collections.emptyList();
        covenantQuorum_ = 0;
        minStakingValueSat_ = 0L;
        maxStakingValueSat_ = 0L;
        minStakingTimeBlocks_ = 0;
        maxStakingTimeBlocks_ = 0;
        slashingPkScript_ = com.google.protobuf.ByteString.EMPTY;
        minSlashingTxFeeSat_ = 0L;
        slashingRate_ = "";
        minUnbondingTimeBlocks_ = 0;
        unbondingFeeSat_ = 0L;
        minCommissionRate_ = "";
        delegationCreationBaseGasFee_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.btcstaking.v1.ParamsProto.internal_static_babylon_btcstaking_v1_Params_descriptor;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.ParamsProto.Params getDefaultInstanceForType() {
        return com.babylon.btcstaking.v1.ParamsProto.Params.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.ParamsProto.Params build() {
        com.babylon.btcstaking.v1.ParamsProto.Params result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.ParamsProto.Params buildPartial() {
        com.babylon.btcstaking.v1.ParamsProto.Params result = new com.babylon.btcstaking.v1.ParamsProto.Params(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.babylon.btcstaking.v1.ParamsProto.Params result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          covenantPks_ = java.util.Collections.unmodifiableList(covenantPks_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.covenantPks_ = covenantPks_;
      }

      private void buildPartial0(com.babylon.btcstaking.v1.ParamsProto.Params result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.covenantQuorum_ = covenantQuorum_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.minStakingValueSat_ = minStakingValueSat_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.maxStakingValueSat_ = maxStakingValueSat_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.minStakingTimeBlocks_ = minStakingTimeBlocks_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.maxStakingTimeBlocks_ = maxStakingTimeBlocks_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.slashingPkScript_ = slashingPkScript_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.minSlashingTxFeeSat_ = minSlashingTxFeeSat_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.slashingRate_ = slashingRate_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.minUnbondingTimeBlocks_ = minUnbondingTimeBlocks_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.unbondingFeeSat_ = unbondingFeeSat_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.minCommissionRate_ = minCommissionRate_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.delegationCreationBaseGasFee_ = delegationCreationBaseGasFee_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.btcstaking.v1.ParamsProto.Params) {
          return mergeFrom((com.babylon.btcstaking.v1.ParamsProto.Params)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.btcstaking.v1.ParamsProto.Params other) {
        if (other == com.babylon.btcstaking.v1.ParamsProto.Params.getDefaultInstance()) return this;
        if (!other.covenantPks_.isEmpty()) {
          if (covenantPks_.isEmpty()) {
            covenantPks_ = other.covenantPks_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCovenantPksIsMutable();
            covenantPks_.addAll(other.covenantPks_);
          }
          onChanged();
        }
        if (other.getCovenantQuorum() != 0) {
          setCovenantQuorum(other.getCovenantQuorum());
        }
        if (other.getMinStakingValueSat() != 0L) {
          setMinStakingValueSat(other.getMinStakingValueSat());
        }
        if (other.getMaxStakingValueSat() != 0L) {
          setMaxStakingValueSat(other.getMaxStakingValueSat());
        }
        if (other.getMinStakingTimeBlocks() != 0) {
          setMinStakingTimeBlocks(other.getMinStakingTimeBlocks());
        }
        if (other.getMaxStakingTimeBlocks() != 0) {
          setMaxStakingTimeBlocks(other.getMaxStakingTimeBlocks());
        }
        if (other.getSlashingPkScript() != com.google.protobuf.ByteString.EMPTY) {
          setSlashingPkScript(other.getSlashingPkScript());
        }
        if (other.getMinSlashingTxFeeSat() != 0L) {
          setMinSlashingTxFeeSat(other.getMinSlashingTxFeeSat());
        }
        if (!other.getSlashingRate().isEmpty()) {
          slashingRate_ = other.slashingRate_;
          bitField0_ |= 0x00000100;
          onChanged();
        }
        if (other.getMinUnbondingTimeBlocks() != 0) {
          setMinUnbondingTimeBlocks(other.getMinUnbondingTimeBlocks());
        }
        if (other.getUnbondingFeeSat() != 0L) {
          setUnbondingFeeSat(other.getUnbondingFeeSat());
        }
        if (!other.getMinCommissionRate().isEmpty()) {
          minCommissionRate_ = other.minCommissionRate_;
          bitField0_ |= 0x00000800;
          onChanged();
        }
        if (other.getDelegationCreationBaseGasFee() != 0L) {
          setDelegationCreationBaseGasFee(other.getDelegationCreationBaseGasFee());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString v = input.readBytes();
                ensureCovenantPksIsMutable();
                covenantPks_.add(v);
                break;
              } // case 10
              case 16: {
                covenantQuorum_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                minStakingValueSat_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                maxStakingValueSat_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                minStakingTimeBlocks_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                maxStakingTimeBlocks_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 58: {
                slashingPkScript_ = input.readBytes();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 64: {
                minSlashingTxFeeSat_ = input.readInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 74: {
                slashingRate_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 80: {
                minUnbondingTimeBlocks_ = input.readUInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                unbondingFeeSat_ = input.readInt64();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 98: {
                minCommissionRate_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000800;
                break;
              } // case 98
              case 104: {
                delegationCreationBaseGasFee_ = input.readUInt64();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.protobuf.ByteString> covenantPks_ = java.util.Collections.emptyList();
      private void ensureCovenantPksIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          covenantPks_ = new java.util.ArrayList<com.google.protobuf.ByteString>(covenantPks_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * PARAMETERS COVERING STAKING
       * covenant_pks is the list of public keys held by the covenant committee
       * each PK follows encoding in BIP-340 spec on Bitcoin
       * </pre>
       *
       * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @return A list containing the covenantPks.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getCovenantPksList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(covenantPks_) : covenantPks_;
      }
      /**
       * <pre>
       * PARAMETERS COVERING STAKING
       * covenant_pks is the list of public keys held by the covenant committee
       * each PK follows encoding in BIP-340 spec on Bitcoin
       * </pre>
       *
       * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @return The count of covenantPks.
       */
      public int getCovenantPksCount() {
        return covenantPks_.size();
      }
      /**
       * <pre>
       * PARAMETERS COVERING STAKING
       * covenant_pks is the list of public keys held by the covenant committee
       * each PK follows encoding in BIP-340 spec on Bitcoin
       * </pre>
       *
       * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @param index The index of the element to return.
       * @return The covenantPks at the given index.
       */
      public com.google.protobuf.ByteString getCovenantPks(int index) {
        return covenantPks_.get(index);
      }
      /**
       * <pre>
       * PARAMETERS COVERING STAKING
       * covenant_pks is the list of public keys held by the covenant committee
       * each PK follows encoding in BIP-340 spec on Bitcoin
       * </pre>
       *
       * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @param index The index to set the value at.
       * @param value The covenantPks to set.
       * @return This builder for chaining.
       */
      public Builder setCovenantPks(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureCovenantPksIsMutable();
        covenantPks_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PARAMETERS COVERING STAKING
       * covenant_pks is the list of public keys held by the covenant committee
       * each PK follows encoding in BIP-340 spec on Bitcoin
       * </pre>
       *
       * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @param value The covenantPks to add.
       * @return This builder for chaining.
       */
      public Builder addCovenantPks(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureCovenantPksIsMutable();
        covenantPks_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PARAMETERS COVERING STAKING
       * covenant_pks is the list of public keys held by the covenant committee
       * each PK follows encoding in BIP-340 spec on Bitcoin
       * </pre>
       *
       * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @param values The covenantPks to add.
       * @return This builder for chaining.
       */
      public Builder addAllCovenantPks(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureCovenantPksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, covenantPks_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PARAMETERS COVERING STAKING
       * covenant_pks is the list of public keys held by the covenant committee
       * each PK follows encoding in BIP-340 spec on Bitcoin
       * </pre>
       *
       * <code>repeated bytes covenant_pks = 1 [json_name = "covenantPks", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @return This builder for chaining.
       */
      public Builder clearCovenantPks() {
        covenantPks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int covenantQuorum_ ;
      /**
       * <pre>
       * covenant_quorum is the minimum number of signatures needed for the covenant
       * multisignature
       * </pre>
       *
       * <code>uint32 covenant_quorum = 2 [json_name = "covenantQuorum"];</code>
       * @return The covenantQuorum.
       */
      @java.lang.Override
      public int getCovenantQuorum() {
        return covenantQuorum_;
      }
      /**
       * <pre>
       * covenant_quorum is the minimum number of signatures needed for the covenant
       * multisignature
       * </pre>
       *
       * <code>uint32 covenant_quorum = 2 [json_name = "covenantQuorum"];</code>
       * @param value The covenantQuorum to set.
       * @return This builder for chaining.
       */
      public Builder setCovenantQuorum(int value) {

        covenantQuorum_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * covenant_quorum is the minimum number of signatures needed for the covenant
       * multisignature
       * </pre>
       *
       * <code>uint32 covenant_quorum = 2 [json_name = "covenantQuorum"];</code>
       * @return This builder for chaining.
       */
      public Builder clearCovenantQuorum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        covenantQuorum_ = 0;
        onChanged();
        return this;
      }

      private long minStakingValueSat_ ;
      /**
       * <pre>
       * min_staking_value_sat is the minimum of satoshis locked in staking output
       * </pre>
       *
       * <code>int64 min_staking_value_sat = 3 [json_name = "minStakingValueSat"];</code>
       * @return The minStakingValueSat.
       */
      @java.lang.Override
      public long getMinStakingValueSat() {
        return minStakingValueSat_;
      }
      /**
       * <pre>
       * min_staking_value_sat is the minimum of satoshis locked in staking output
       * </pre>
       *
       * <code>int64 min_staking_value_sat = 3 [json_name = "minStakingValueSat"];</code>
       * @param value The minStakingValueSat to set.
       * @return This builder for chaining.
       */
      public Builder setMinStakingValueSat(long value) {

        minStakingValueSat_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * min_staking_value_sat is the minimum of satoshis locked in staking output
       * </pre>
       *
       * <code>int64 min_staking_value_sat = 3 [json_name = "minStakingValueSat"];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinStakingValueSat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        minStakingValueSat_ = 0L;
        onChanged();
        return this;
      }

      private long maxStakingValueSat_ ;
      /**
       * <pre>
       * max_staking_value_sat is the maximum of satoshis locked in staking output
       * </pre>
       *
       * <code>int64 max_staking_value_sat = 4 [json_name = "maxStakingValueSat"];</code>
       * @return The maxStakingValueSat.
       */
      @java.lang.Override
      public long getMaxStakingValueSat() {
        return maxStakingValueSat_;
      }
      /**
       * <pre>
       * max_staking_value_sat is the maximum of satoshis locked in staking output
       * </pre>
       *
       * <code>int64 max_staking_value_sat = 4 [json_name = "maxStakingValueSat"];</code>
       * @param value The maxStakingValueSat to set.
       * @return This builder for chaining.
       */
      public Builder setMaxStakingValueSat(long value) {

        maxStakingValueSat_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * max_staking_value_sat is the maximum of satoshis locked in staking output
       * </pre>
       *
       * <code>int64 max_staking_value_sat = 4 [json_name = "maxStakingValueSat"];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxStakingValueSat() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxStakingValueSat_ = 0L;
        onChanged();
        return this;
      }

      private int minStakingTimeBlocks_ ;
      /**
       * <pre>
       * min_staking_time is the minimum lock time specified in staking output script
       * </pre>
       *
       * <code>uint32 min_staking_time_blocks = 5 [json_name = "minStakingTimeBlocks"];</code>
       * @return The minStakingTimeBlocks.
       */
      @java.lang.Override
      public int getMinStakingTimeBlocks() {
        return minStakingTimeBlocks_;
      }
      /**
       * <pre>
       * min_staking_time is the minimum lock time specified in staking output script
       * </pre>
       *
       * <code>uint32 min_staking_time_blocks = 5 [json_name = "minStakingTimeBlocks"];</code>
       * @param value The minStakingTimeBlocks to set.
       * @return This builder for chaining.
       */
      public Builder setMinStakingTimeBlocks(int value) {

        minStakingTimeBlocks_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * min_staking_time is the minimum lock time specified in staking output script
       * </pre>
       *
       * <code>uint32 min_staking_time_blocks = 5 [json_name = "minStakingTimeBlocks"];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinStakingTimeBlocks() {
        bitField0_ = (bitField0_ & ~0x00000010);
        minStakingTimeBlocks_ = 0;
        onChanged();
        return this;
      }

      private int maxStakingTimeBlocks_ ;
      /**
       * <pre>
       * max_staking_time_blocks is the maximum lock time time specified in staking output script
       * </pre>
       *
       * <code>uint32 max_staking_time_blocks = 6 [json_name = "maxStakingTimeBlocks"];</code>
       * @return The maxStakingTimeBlocks.
       */
      @java.lang.Override
      public int getMaxStakingTimeBlocks() {
        return maxStakingTimeBlocks_;
      }
      /**
       * <pre>
       * max_staking_time_blocks is the maximum lock time time specified in staking output script
       * </pre>
       *
       * <code>uint32 max_staking_time_blocks = 6 [json_name = "maxStakingTimeBlocks"];</code>
       * @param value The maxStakingTimeBlocks to set.
       * @return This builder for chaining.
       */
      public Builder setMaxStakingTimeBlocks(int value) {

        maxStakingTimeBlocks_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * max_staking_time_blocks is the maximum lock time time specified in staking output script
       * </pre>
       *
       * <code>uint32 max_staking_time_blocks = 6 [json_name = "maxStakingTimeBlocks"];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxStakingTimeBlocks() {
        bitField0_ = (bitField0_ & ~0x00000020);
        maxStakingTimeBlocks_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString slashingPkScript_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * PARAMETERS COVERING SLASHING
       * slashing_pk_script is the pk_script expected in slashing output ie. the first
       * output of slashing transaction
       * </pre>
       *
       * <code>bytes slashing_pk_script = 7 [json_name = "slashingPkScript"];</code>
       * @return The slashingPkScript.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSlashingPkScript() {
        return slashingPkScript_;
      }
      /**
       * <pre>
       * PARAMETERS COVERING SLASHING
       * slashing_pk_script is the pk_script expected in slashing output ie. the first
       * output of slashing transaction
       * </pre>
       *
       * <code>bytes slashing_pk_script = 7 [json_name = "slashingPkScript"];</code>
       * @param value The slashingPkScript to set.
       * @return This builder for chaining.
       */
      public Builder setSlashingPkScript(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        slashingPkScript_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PARAMETERS COVERING SLASHING
       * slashing_pk_script is the pk_script expected in slashing output ie. the first
       * output of slashing transaction
       * </pre>
       *
       * <code>bytes slashing_pk_script = 7 [json_name = "slashingPkScript"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSlashingPkScript() {
        bitField0_ = (bitField0_ & ~0x00000040);
        slashingPkScript_ = getDefaultInstance().getSlashingPkScript();
        onChanged();
        return this;
      }

      private long minSlashingTxFeeSat_ ;
      /**
       * <pre>
       * min_slashing_tx_fee_sat is the minimum amount of tx fee (quantified
       * in Satoshi) needed for the pre-signed slashing tx. It covers both:
       * staking slashing transaction and unbonding slashing transaction
       * </pre>
       *
       * <code>int64 min_slashing_tx_fee_sat = 8 [json_name = "minSlashingTxFeeSat"];</code>
       * @return The minSlashingTxFeeSat.
       */
      @java.lang.Override
      public long getMinSlashingTxFeeSat() {
        return minSlashingTxFeeSat_;
      }
      /**
       * <pre>
       * min_slashing_tx_fee_sat is the minimum amount of tx fee (quantified
       * in Satoshi) needed for the pre-signed slashing tx. It covers both:
       * staking slashing transaction and unbonding slashing transaction
       * </pre>
       *
       * <code>int64 min_slashing_tx_fee_sat = 8 [json_name = "minSlashingTxFeeSat"];</code>
       * @param value The minSlashingTxFeeSat to set.
       * @return This builder for chaining.
       */
      public Builder setMinSlashingTxFeeSat(long value) {

        minSlashingTxFeeSat_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * min_slashing_tx_fee_sat is the minimum amount of tx fee (quantified
       * in Satoshi) needed for the pre-signed slashing tx. It covers both:
       * staking slashing transaction and unbonding slashing transaction
       * </pre>
       *
       * <code>int64 min_slashing_tx_fee_sat = 8 [json_name = "minSlashingTxFeeSat"];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinSlashingTxFeeSat() {
        bitField0_ = (bitField0_ & ~0x00000080);
        minSlashingTxFeeSat_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object slashingRate_ = "";
      /**
       * <pre>
       * slashing_rate determines the portion of the staked amount to be slashed,
       * expressed as a decimal (e.g., 0.5 for 50%). Maximal precion is 2 decimal
       * places
       * </pre>
       *
       * <code>string slashing_rate = 9 [json_name = "slashingRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @return The slashingRate.
       */
      public java.lang.String getSlashingRate() {
        java.lang.Object ref = slashingRate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          slashingRate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * slashing_rate determines the portion of the staked amount to be slashed,
       * expressed as a decimal (e.g., 0.5 for 50%). Maximal precion is 2 decimal
       * places
       * </pre>
       *
       * <code>string slashing_rate = 9 [json_name = "slashingRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @return The bytes for slashingRate.
       */
      public com.google.protobuf.ByteString
          getSlashingRateBytes() {
        java.lang.Object ref = slashingRate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          slashingRate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * slashing_rate determines the portion of the staked amount to be slashed,
       * expressed as a decimal (e.g., 0.5 for 50%). Maximal precion is 2 decimal
       * places
       * </pre>
       *
       * <code>string slashing_rate = 9 [json_name = "slashingRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @param value The slashingRate to set.
       * @return This builder for chaining.
       */
      public Builder setSlashingRate(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        slashingRate_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * slashing_rate determines the portion of the staked amount to be slashed,
       * expressed as a decimal (e.g., 0.5 for 50%). Maximal precion is 2 decimal
       * places
       * </pre>
       *
       * <code>string slashing_rate = 9 [json_name = "slashingRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSlashingRate() {
        slashingRate_ = getDefaultInstance().getSlashingRate();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * slashing_rate determines the portion of the staked amount to be slashed,
       * expressed as a decimal (e.g., 0.5 for 50%). Maximal precion is 2 decimal
       * places
       * </pre>
       *
       * <code>string slashing_rate = 9 [json_name = "slashingRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @param value The bytes for slashingRate to set.
       * @return This builder for chaining.
       */
      public Builder setSlashingRateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        slashingRate_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }

      private int minUnbondingTimeBlocks_ ;
      /**
       * <pre>
       * PARAMETERS COVERING UNBONDING
       * min_unbonding_time is the minimum time for unbonding transaction timelock in BTC blocks
       * </pre>
       *
       * <code>uint32 min_unbonding_time_blocks = 10 [json_name = "minUnbondingTimeBlocks"];</code>
       * @return The minUnbondingTimeBlocks.
       */
      @java.lang.Override
      public int getMinUnbondingTimeBlocks() {
        return minUnbondingTimeBlocks_;
      }
      /**
       * <pre>
       * PARAMETERS COVERING UNBONDING
       * min_unbonding_time is the minimum time for unbonding transaction timelock in BTC blocks
       * </pre>
       *
       * <code>uint32 min_unbonding_time_blocks = 10 [json_name = "minUnbondingTimeBlocks"];</code>
       * @param value The minUnbondingTimeBlocks to set.
       * @return This builder for chaining.
       */
      public Builder setMinUnbondingTimeBlocks(int value) {

        minUnbondingTimeBlocks_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PARAMETERS COVERING UNBONDING
       * min_unbonding_time is the minimum time for unbonding transaction timelock in BTC blocks
       * </pre>
       *
       * <code>uint32 min_unbonding_time_blocks = 10 [json_name = "minUnbondingTimeBlocks"];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinUnbondingTimeBlocks() {
        bitField0_ = (bitField0_ & ~0x00000200);
        minUnbondingTimeBlocks_ = 0;
        onChanged();
        return this;
      }

      private long unbondingFeeSat_ ;
      /**
       * <pre>
       * unbonding_fee exact fee required for unbonding transaction
       * </pre>
       *
       * <code>int64 unbonding_fee_sat = 11 [json_name = "unbondingFeeSat"];</code>
       * @return The unbondingFeeSat.
       */
      @java.lang.Override
      public long getUnbondingFeeSat() {
        return unbondingFeeSat_;
      }
      /**
       * <pre>
       * unbonding_fee exact fee required for unbonding transaction
       * </pre>
       *
       * <code>int64 unbonding_fee_sat = 11 [json_name = "unbondingFeeSat"];</code>
       * @param value The unbondingFeeSat to set.
       * @return This builder for chaining.
       */
      public Builder setUnbondingFeeSat(long value) {

        unbondingFeeSat_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unbonding_fee exact fee required for unbonding transaction
       * </pre>
       *
       * <code>int64 unbonding_fee_sat = 11 [json_name = "unbondingFeeSat"];</code>
       * @return This builder for chaining.
       */
      public Builder clearUnbondingFeeSat() {
        bitField0_ = (bitField0_ & ~0x00000400);
        unbondingFeeSat_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object minCommissionRate_ = "";
      /**
       * <pre>
       * PARAMETERS COVERING FINALITY PROVIDERS
       * min_commission_rate is the chain-wide minimum commission rate that a finality provider
       * can charge their delegators expressed as a decimal (e.g., 0.5 for 50%). Maximal precion
       * is 2 decimal places
       * </pre>
       *
       * <code>string min_commission_rate = 12 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec"];</code>
       * @return The minCommissionRate.
       */
      public java.lang.String getMinCommissionRate() {
        java.lang.Object ref = minCommissionRate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          minCommissionRate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * PARAMETERS COVERING FINALITY PROVIDERS
       * min_commission_rate is the chain-wide minimum commission rate that a finality provider
       * can charge their delegators expressed as a decimal (e.g., 0.5 for 50%). Maximal precion
       * is 2 decimal places
       * </pre>
       *
       * <code>string min_commission_rate = 12 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec"];</code>
       * @return The bytes for minCommissionRate.
       */
      public com.google.protobuf.ByteString
          getMinCommissionRateBytes() {
        java.lang.Object ref = minCommissionRate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          minCommissionRate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * PARAMETERS COVERING FINALITY PROVIDERS
       * min_commission_rate is the chain-wide minimum commission rate that a finality provider
       * can charge their delegators expressed as a decimal (e.g., 0.5 for 50%). Maximal precion
       * is 2 decimal places
       * </pre>
       *
       * <code>string min_commission_rate = 12 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec"];</code>
       * @param value The minCommissionRate to set.
       * @return This builder for chaining.
       */
      public Builder setMinCommissionRate(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        minCommissionRate_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PARAMETERS COVERING FINALITY PROVIDERS
       * min_commission_rate is the chain-wide minimum commission rate that a finality provider
       * can charge their delegators expressed as a decimal (e.g., 0.5 for 50%). Maximal precion
       * is 2 decimal places
       * </pre>
       *
       * <code>string min_commission_rate = 12 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec"];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinCommissionRate() {
        minCommissionRate_ = getDefaultInstance().getMinCommissionRate();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PARAMETERS COVERING FINALITY PROVIDERS
       * min_commission_rate is the chain-wide minimum commission rate that a finality provider
       * can charge their delegators expressed as a decimal (e.g., 0.5 for 50%). Maximal precion
       * is 2 decimal places
       * </pre>
       *
       * <code>string min_commission_rate = 12 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec"];</code>
       * @param value The bytes for minCommissionRate to set.
       * @return This builder for chaining.
       */
      public Builder setMinCommissionRateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        minCommissionRate_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }

      private long delegationCreationBaseGasFee_ ;
      /**
       * <pre>
       * base gas fee for delegation creation
       * </pre>
       *
       * <code>uint64 delegation_creation_base_gas_fee = 13 [json_name = "delegationCreationBaseGasFee"];</code>
       * @return The delegationCreationBaseGasFee.
       */
      @java.lang.Override
      public long getDelegationCreationBaseGasFee() {
        return delegationCreationBaseGasFee_;
      }
      /**
       * <pre>
       * base gas fee for delegation creation
       * </pre>
       *
       * <code>uint64 delegation_creation_base_gas_fee = 13 [json_name = "delegationCreationBaseGasFee"];</code>
       * @param value The delegationCreationBaseGasFee to set.
       * @return This builder for chaining.
       */
      public Builder setDelegationCreationBaseGasFee(long value) {

        delegationCreationBaseGasFee_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * base gas fee for delegation creation
       * </pre>
       *
       * <code>uint64 delegation_creation_base_gas_fee = 13 [json_name = "delegationCreationBaseGasFee"];</code>
       * @return This builder for chaining.
       */
      public Builder clearDelegationCreationBaseGasFee() {
        bitField0_ = (bitField0_ & ~0x00001000);
        delegationCreationBaseGasFee_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.btcstaking.v1.Params)
    }

    // @@protoc_insertion_point(class_scope:babylon.btcstaking.v1.Params)
    private static final com.babylon.btcstaking.v1.ParamsProto.Params DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.btcstaking.v1.ParamsProto.Params();
    }

    public static com.babylon.btcstaking.v1.ParamsProto.Params getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Params>
        PARSER = new com.google.protobuf.AbstractParser<Params>() {
      @java.lang.Override
      public Params parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Params> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Params> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.btcstaking.v1.ParamsProto.Params getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StoredParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.btcstaking.v1.StoredParams)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * version of the stored parameters. Each parameters update
     * increments version number by 1
     * </pre>
     *
     * <code>uint32 version = 1 [json_name = "version"];</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <pre>
     * NOTE: Parameters must always be provided
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return Whether the params field is set.
     */
    boolean hasParams();
    /**
     * <pre>
     * NOTE: Parameters must always be provided
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return The params.
     */
    com.babylon.btcstaking.v1.ParamsProto.Params getParams();
    /**
     * <pre>
     * NOTE: Parameters must always be provided
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder getParamsOrBuilder();
  }
  /**
   * <pre>
   * StoredParams attach information about the version of stored parameters
   * </pre>
   *
   * Protobuf type {@code babylon.btcstaking.v1.StoredParams}
   */
  public static final class StoredParams extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.btcstaking.v1.StoredParams)
      StoredParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StoredParams.newBuilder() to construct.
    private StoredParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StoredParams() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StoredParams();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.btcstaking.v1.ParamsProto.internal_static_babylon_btcstaking_v1_StoredParams_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.btcstaking.v1.ParamsProto.internal_static_babylon_btcstaking_v1_StoredParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.btcstaking.v1.ParamsProto.StoredParams.class, com.babylon.btcstaking.v1.ParamsProto.StoredParams.Builder.class);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_ = 0;
    /**
     * <pre>
     * version of the stored parameters. Each parameters update
     * increments version number by 1
     * </pre>
     *
     * <code>uint32 version = 1 [json_name = "version"];</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int PARAMS_FIELD_NUMBER = 2;
    private com.babylon.btcstaking.v1.ParamsProto.Params params_;
    /**
     * <pre>
     * NOTE: Parameters must always be provided
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return Whether the params field is set.
     */
    @java.lang.Override
    public boolean hasParams() {
      return params_ != null;
    }
    /**
     * <pre>
     * NOTE: Parameters must always be provided
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return The params.
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.ParamsProto.Params getParams() {
      return params_ == null ? com.babylon.btcstaking.v1.ParamsProto.Params.getDefaultInstance() : params_;
    }
    /**
     * <pre>
     * NOTE: Parameters must always be provided
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder getParamsOrBuilder() {
      return params_ == null ? com.babylon.btcstaking.v1.ParamsProto.Params.getDefaultInstance() : params_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (version_ != 0) {
        output.writeUInt32(1, version_);
      }
      if (params_ != null) {
        output.writeMessage(2, getParams());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      if (params_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getParams());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.btcstaking.v1.ParamsProto.StoredParams)) {
        return super.equals(obj);
      }
      com.babylon.btcstaking.v1.ParamsProto.StoredParams other = (com.babylon.btcstaking.v1.ParamsProto.StoredParams) obj;

      if (getVersion()
          != other.getVersion()) return false;
      if (hasParams() != other.hasParams()) return false;
      if (hasParams()) {
        if (!getParams()
            .equals(other.getParams())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      if (hasParams()) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getParams().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.btcstaking.v1.ParamsProto.StoredParams prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * StoredParams attach information about the version of stored parameters
     * </pre>
     *
     * Protobuf type {@code babylon.btcstaking.v1.StoredParams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.btcstaking.v1.StoredParams)
        com.babylon.btcstaking.v1.ParamsProto.StoredParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.btcstaking.v1.ParamsProto.internal_static_babylon_btcstaking_v1_StoredParams_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.btcstaking.v1.ParamsProto.internal_static_babylon_btcstaking_v1_StoredParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.btcstaking.v1.ParamsProto.StoredParams.class, com.babylon.btcstaking.v1.ParamsProto.StoredParams.Builder.class);
      }

      // Construct using com.babylon.btcstaking.v1.ParamsProto.StoredParams.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        version_ = 0;
        params_ = null;
        if (paramsBuilder_ != null) {
          paramsBuilder_.dispose();
          paramsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.btcstaking.v1.ParamsProto.internal_static_babylon_btcstaking_v1_StoredParams_descriptor;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.ParamsProto.StoredParams getDefaultInstanceForType() {
        return com.babylon.btcstaking.v1.ParamsProto.StoredParams.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.ParamsProto.StoredParams build() {
        com.babylon.btcstaking.v1.ParamsProto.StoredParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.ParamsProto.StoredParams buildPartial() {
        com.babylon.btcstaking.v1.ParamsProto.StoredParams result = new com.babylon.btcstaking.v1.ParamsProto.StoredParams(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.babylon.btcstaking.v1.ParamsProto.StoredParams result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.version_ = version_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.params_ = paramsBuilder_ == null
              ? params_
              : paramsBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.btcstaking.v1.ParamsProto.StoredParams) {
          return mergeFrom((com.babylon.btcstaking.v1.ParamsProto.StoredParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.btcstaking.v1.ParamsProto.StoredParams other) {
        if (other == com.babylon.btcstaking.v1.ParamsProto.StoredParams.getDefaultInstance()) return this;
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (other.hasParams()) {
          mergeParams(other.getParams());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                version_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getParamsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <pre>
       * version of the stored parameters. Each parameters update
       * increments version number by 1
       * </pre>
       *
       * <code>uint32 version = 1 [json_name = "version"];</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       * version of the stored parameters. Each parameters update
       * increments version number by 1
       * </pre>
       *
       * <code>uint32 version = 1 [json_name = "version"];</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {

        version_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * version of the stored parameters. Each parameters update
       * increments version number by 1
       * </pre>
       *
       * <code>uint32 version = 1 [json_name = "version"];</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private com.babylon.btcstaking.v1.ParamsProto.Params params_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.btcstaking.v1.ParamsProto.Params, com.babylon.btcstaking.v1.ParamsProto.Params.Builder, com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder> paramsBuilder_;
      /**
       * <pre>
       * NOTE: Parameters must always be provided
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       * @return Whether the params field is set.
       */
      public boolean hasParams() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * NOTE: Parameters must always be provided
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       * @return The params.
       */
      public com.babylon.btcstaking.v1.ParamsProto.Params getParams() {
        if (paramsBuilder_ == null) {
          return params_ == null ? com.babylon.btcstaking.v1.ParamsProto.Params.getDefaultInstance() : params_;
        } else {
          return paramsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * NOTE: Parameters must always be provided
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public Builder setParams(com.babylon.btcstaking.v1.ParamsProto.Params value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          params_ = value;
        } else {
          paramsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * NOTE: Parameters must always be provided
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public Builder setParams(
          com.babylon.btcstaking.v1.ParamsProto.Params.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          params_ = builderForValue.build();
        } else {
          paramsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * NOTE: Parameters must always be provided
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public Builder mergeParams(com.babylon.btcstaking.v1.ParamsProto.Params value) {
        if (paramsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            params_ != null &&
            params_ != com.babylon.btcstaking.v1.ParamsProto.Params.getDefaultInstance()) {
            getParamsBuilder().mergeFrom(value);
          } else {
            params_ = value;
          }
        } else {
          paramsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * NOTE: Parameters must always be provided
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public Builder clearParams() {
        bitField0_ = (bitField0_ & ~0x00000002);
        params_ = null;
        if (paramsBuilder_ != null) {
          paramsBuilder_.dispose();
          paramsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * NOTE: Parameters must always be provided
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public com.babylon.btcstaking.v1.ParamsProto.Params.Builder getParamsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getParamsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * NOTE: Parameters must always be provided
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder getParamsOrBuilder() {
        if (paramsBuilder_ != null) {
          return paramsBuilder_.getMessageOrBuilder();
        } else {
          return params_ == null ?
              com.babylon.btcstaking.v1.ParamsProto.Params.getDefaultInstance() : params_;
        }
      }
      /**
       * <pre>
       * NOTE: Parameters must always be provided
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.btcstaking.v1.ParamsProto.Params, com.babylon.btcstaking.v1.ParamsProto.Params.Builder, com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder> 
          getParamsFieldBuilder() {
        if (paramsBuilder_ == null) {
          paramsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.babylon.btcstaking.v1.ParamsProto.Params, com.babylon.btcstaking.v1.ParamsProto.Params.Builder, com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder>(
                  getParams(),
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        return paramsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.btcstaking.v1.StoredParams)
    }

    // @@protoc_insertion_point(class_scope:babylon.btcstaking.v1.StoredParams)
    private static final com.babylon.btcstaking.v1.ParamsProto.StoredParams DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.btcstaking.v1.ParamsProto.StoredParams();
    }

    public static com.babylon.btcstaking.v1.ParamsProto.StoredParams getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StoredParams>
        PARSER = new com.google.protobuf.AbstractParser<StoredParams>() {
      @java.lang.Override
      public StoredParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StoredParams> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StoredParams> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.btcstaking.v1.ParamsProto.StoredParams getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_btcstaking_v1_Params_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_btcstaking_v1_Params_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_btcstaking_v1_StoredParams_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_btcstaking_v1_StoredParams_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"babylon/btcstaking/v1/params.proto\022\025ba" +
      "bylon.btcstaking.v1\032\024gogoproto/gogo.prot" +
      "o\032\031cosmos_proto/cosmos.proto\"\250\006\n\006Params\022" +
      "[\n\014covenant_pks\030\001 \003(\014B8\332\336\0374github.com/ba" +
      "bylonlabs-io/babylon/types.BIP340PubKeyR" +
      "\013covenantPks\022\'\n\017covenant_quorum\030\002 \001(\rR\016c" +
      "ovenantQuorum\0221\n\025min_staking_value_sat\030\003" +
      " \001(\003R\022minStakingValueSat\0221\n\025max_staking_" +
      "value_sat\030\004 \001(\003R\022maxStakingValueSat\0225\n\027m" +
      "in_staking_time_blocks\030\005 \001(\rR\024minStaking" +
      "TimeBlocks\0225\n\027max_staking_time_blocks\030\006 " +
      "\001(\rR\024maxStakingTimeBlocks\022,\n\022slashing_pk" +
      "_script\030\007 \001(\014R\020slashingPkScript\0224\n\027min_s" +
      "lashing_tx_fee_sat\030\010 \001(\003R\023minSlashingTxF" +
      "eeSat\022V\n\rslashing_rate\030\t \001(\tB1\310\336\037\000\332\336\037\033co" +
      "smossdk.io/math.LegacyDec\322\264-\ncosmos.DecR" +
      "\014slashingRate\0229\n\031min_unbonding_time_bloc" +
      "ks\030\n \001(\rR\026minUnbondingTimeBlocks\022*\n\021unbo" +
      "nding_fee_sat\030\013 \001(\003R\017unbondingFeeSat\022S\n\023" +
      "min_commission_rate\030\014 \001(\tB#\310\336\037\000\332\336\037\033cosmo" +
      "ssdk.io/math.LegacyDecR\021minCommissionRat" +
      "e\022F\n delegation_creation_base_gas_fee\030\r " +
      "\001(\004R\034delegationCreationBaseGasFee:\004\230\240\037\000\"" +
      "e\n\014StoredParams\022\030\n\007version\030\001 \001(\rR\007versio" +
      "n\022;\n\006params\030\002 \001(\0132\035.babylon.btcstaking.v" +
      "1.ParamsB\004\310\336\037\000R\006paramsB\322\001\n\031com.babylon.b" +
      "tcstaking.v1B\013ParamsProtoZ4github.com/ba" +
      "bylonlabs-io/babylon/x/btcstaking/types\242" +
      "\002\003BBX\252\002\025Babylon.Btcstaking.V1\312\002\025Babylon\\" +
      "Btcstaking\\V1\342\002!Babylon\\Btcstaking\\V1\\GP" +
      "BMetadata\352\002\027Babylon::Btcstaking::V1b\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
        });
    internal_static_babylon_btcstaking_v1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_babylon_btcstaking_v1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_btcstaking_v1_Params_descriptor,
        new java.lang.String[] { "CovenantPks", "CovenantQuorum", "MinStakingValueSat", "MaxStakingValueSat", "MinStakingTimeBlocks", "MaxStakingTimeBlocks", "SlashingPkScript", "MinSlashingTxFeeSat", "SlashingRate", "MinUnbondingTimeBlocks", "UnbondingFeeSat", "MinCommissionRate", "DelegationCreationBaseGasFee", });
    internal_static_babylon_btcstaking_v1_StoredParams_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_babylon_btcstaking_v1_StoredParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_btcstaking_v1_StoredParams_descriptor,
        new java.lang.String[] { "Version", "Params", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.cosmos_proto.CosmosProto.scalar);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

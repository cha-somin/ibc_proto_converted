// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: babylon/btcstaking/v1/genesis.proto

package com.babylon.btcstaking.v1;

public final class GenesisProto {
  private GenesisProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GenesisStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.btcstaking.v1.GenesisState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * different versions of params used through the history of the chain
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
     */
    java.util.List<com.babylon.btcstaking.v1.ParamsProto.Params> 
        getParamsList();
    /**
     * <pre>
     * different versions of params used through the history of the chain
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
     */
    com.babylon.btcstaking.v1.ParamsProto.Params getParams(int index);
    /**
     * <pre>
     * different versions of params used through the history of the chain
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
     */
    int getParamsCount();
    /**
     * <pre>
     * different versions of params used through the history of the chain
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
     */
    java.util.List<? extends com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder> 
        getParamsOrBuilderList();
    /**
     * <pre>
     * different versions of params used through the history of the chain
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
     */
    com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder getParamsOrBuilder(
        int index);

    /**
     * <pre>
     * finality_providers all the finality providers registered.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    java.util.List<com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider> 
        getFinalityProvidersList();
    /**
     * <pre>
     * finality_providers all the finality providers registered.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider getFinalityProviders(int index);
    /**
     * <pre>
     * finality_providers all the finality providers registered.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    int getFinalityProvidersCount();
    /**
     * <pre>
     * finality_providers all the finality providers registered.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    java.util.List<? extends com.babylon.btcstaking.v1.BtcstakingProto.FinalityProviderOrBuilder> 
        getFinalityProvidersOrBuilderList();
    /**
     * <pre>
     * finality_providers all the finality providers registered.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    com.babylon.btcstaking.v1.BtcstakingProto.FinalityProviderOrBuilder getFinalityProvidersOrBuilder(
        int index);

    /**
     * <pre>
     * btc_delegations all the btc delegations in the state.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
     */
    java.util.List<com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation> 
        getBtcDelegationsList();
    /**
     * <pre>
     * btc_delegations all the btc delegations in the state.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
     */
    com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation getBtcDelegations(int index);
    /**
     * <pre>
     * btc_delegations all the btc delegations in the state.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
     */
    int getBtcDelegationsCount();
    /**
     * <pre>
     * btc_delegations all the btc delegations in the state.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
     */
    java.util.List<? extends com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegationOrBuilder> 
        getBtcDelegationsOrBuilderList();
    /**
     * <pre>
     * btc_delegations all the btc delegations in the state.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
     */
    com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegationOrBuilder getBtcDelegationsOrBuilder(
        int index);

    /**
     * <pre>
     * block_height_chains the block height of babylon and bitcoin.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
     */
    java.util.List<com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc> 
        getBlockHeightChainsList();
    /**
     * <pre>
     * block_height_chains the block height of babylon and bitcoin.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
     */
    com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc getBlockHeightChains(int index);
    /**
     * <pre>
     * block_height_chains the block height of babylon and bitcoin.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
     */
    int getBlockHeightChainsCount();
    /**
     * <pre>
     * block_height_chains the block height of babylon and bitcoin.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
     */
    java.util.List<? extends com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtcOrBuilder> 
        getBlockHeightChainsOrBuilderList();
    /**
     * <pre>
     * block_height_chains the block height of babylon and bitcoin.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
     */
    com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtcOrBuilder getBlockHeightChainsOrBuilder(
        int index);

    /**
     * <pre>
     * btc_delegators contains all the btc delegators with the associated finality provider.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
     */
    java.util.List<com.babylon.btcstaking.v1.GenesisProto.BTCDelegator> 
        getBtcDelegatorsList();
    /**
     * <pre>
     * btc_delegators contains all the btc delegators with the associated finality provider.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
     */
    com.babylon.btcstaking.v1.GenesisProto.BTCDelegator getBtcDelegators(int index);
    /**
     * <pre>
     * btc_delegators contains all the btc delegators with the associated finality provider.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
     */
    int getBtcDelegatorsCount();
    /**
     * <pre>
     * btc_delegators contains all the btc delegators with the associated finality provider.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
     */
    java.util.List<? extends com.babylon.btcstaking.v1.GenesisProto.BTCDelegatorOrBuilder> 
        getBtcDelegatorsOrBuilderList();
    /**
     * <pre>
     * btc_delegators contains all the btc delegators with the associated finality provider.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
     */
    com.babylon.btcstaking.v1.GenesisProto.BTCDelegatorOrBuilder getBtcDelegatorsOrBuilder(
        int index);

    /**
     * <pre>
     * all the events and its indexes.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
     */
    java.util.List<com.babylon.btcstaking.v1.GenesisProto.EventIndex> 
        getEventsList();
    /**
     * <pre>
     * all the events and its indexes.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
     */
    com.babylon.btcstaking.v1.GenesisProto.EventIndex getEvents(int index);
    /**
     * <pre>
     * all the events and its indexes.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
     */
    int getEventsCount();
    /**
     * <pre>
     * all the events and its indexes.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
     */
    java.util.List<? extends com.babylon.btcstaking.v1.GenesisProto.EventIndexOrBuilder> 
        getEventsOrBuilderList();
    /**
     * <pre>
     * all the events and its indexes.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
     */
    com.babylon.btcstaking.v1.GenesisProto.EventIndexOrBuilder getEventsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * GenesisState defines the btcstaking module's genesis state.
   * </pre>
   *
   * Protobuf type {@code babylon.btcstaking.v1.GenesisState}
   */
  public static final class GenesisState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.btcstaking.v1.GenesisState)
      GenesisStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GenesisState.newBuilder() to construct.
    private GenesisState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GenesisState() {
      params_ = java.util.Collections.emptyList();
      finalityProviders_ = java.util.Collections.emptyList();
      btcDelegations_ = java.util.Collections.emptyList();
      blockHeightChains_ = java.util.Collections.emptyList();
      btcDelegators_ = java.util.Collections.emptyList();
      events_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GenesisState();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_GenesisState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_GenesisState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.btcstaking.v1.GenesisProto.GenesisState.class, com.babylon.btcstaking.v1.GenesisProto.GenesisState.Builder.class);
    }

    public static final int PARAMS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.babylon.btcstaking.v1.ParamsProto.Params> params_;
    /**
     * <pre>
     * different versions of params used through the history of the chain
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
     */
    @java.lang.Override
    public java.util.List<com.babylon.btcstaking.v1.ParamsProto.Params> getParamsList() {
      return params_;
    }
    /**
     * <pre>
     * different versions of params used through the history of the chain
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder> 
        getParamsOrBuilderList() {
      return params_;
    }
    /**
     * <pre>
     * different versions of params used through the history of the chain
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
     */
    @java.lang.Override
    public int getParamsCount() {
      return params_.size();
    }
    /**
     * <pre>
     * different versions of params used through the history of the chain
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.ParamsProto.Params getParams(int index) {
      return params_.get(index);
    }
    /**
     * <pre>
     * different versions of params used through the history of the chain
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder getParamsOrBuilder(
        int index) {
      return params_.get(index);
    }

    public static final int FINALITY_PROVIDERS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider> finalityProviders_;
    /**
     * <pre>
     * finality_providers all the finality providers registered.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    @java.lang.Override
    public java.util.List<com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider> getFinalityProvidersList() {
      return finalityProviders_;
    }
    /**
     * <pre>
     * finality_providers all the finality providers registered.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.babylon.btcstaking.v1.BtcstakingProto.FinalityProviderOrBuilder> 
        getFinalityProvidersOrBuilderList() {
      return finalityProviders_;
    }
    /**
     * <pre>
     * finality_providers all the finality providers registered.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    @java.lang.Override
    public int getFinalityProvidersCount() {
      return finalityProviders_.size();
    }
    /**
     * <pre>
     * finality_providers all the finality providers registered.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider getFinalityProviders(int index) {
      return finalityProviders_.get(index);
    }
    /**
     * <pre>
     * finality_providers all the finality providers registered.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.BtcstakingProto.FinalityProviderOrBuilder getFinalityProvidersOrBuilder(
        int index) {
      return finalityProviders_.get(index);
    }

    public static final int BTC_DELEGATIONS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation> btcDelegations_;
    /**
     * <pre>
     * btc_delegations all the btc delegations in the state.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
     */
    @java.lang.Override
    public java.util.List<com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation> getBtcDelegationsList() {
      return btcDelegations_;
    }
    /**
     * <pre>
     * btc_delegations all the btc delegations in the state.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegationOrBuilder> 
        getBtcDelegationsOrBuilderList() {
      return btcDelegations_;
    }
    /**
     * <pre>
     * btc_delegations all the btc delegations in the state.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
     */
    @java.lang.Override
    public int getBtcDelegationsCount() {
      return btcDelegations_.size();
    }
    /**
     * <pre>
     * btc_delegations all the btc delegations in the state.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation getBtcDelegations(int index) {
      return btcDelegations_.get(index);
    }
    /**
     * <pre>
     * btc_delegations all the btc delegations in the state.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegationOrBuilder getBtcDelegationsOrBuilder(
        int index) {
      return btcDelegations_.get(index);
    }

    public static final int BLOCK_HEIGHT_CHAINS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc> blockHeightChains_;
    /**
     * <pre>
     * block_height_chains the block height of babylon and bitcoin.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
     */
    @java.lang.Override
    public java.util.List<com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc> getBlockHeightChainsList() {
      return blockHeightChains_;
    }
    /**
     * <pre>
     * block_height_chains the block height of babylon and bitcoin.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtcOrBuilder> 
        getBlockHeightChainsOrBuilderList() {
      return blockHeightChains_;
    }
    /**
     * <pre>
     * block_height_chains the block height of babylon and bitcoin.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
     */
    @java.lang.Override
    public int getBlockHeightChainsCount() {
      return blockHeightChains_.size();
    }
    /**
     * <pre>
     * block_height_chains the block height of babylon and bitcoin.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc getBlockHeightChains(int index) {
      return blockHeightChains_.get(index);
    }
    /**
     * <pre>
     * block_height_chains the block height of babylon and bitcoin.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtcOrBuilder getBlockHeightChainsOrBuilder(
        int index) {
      return blockHeightChains_.get(index);
    }

    public static final int BTC_DELEGATORS_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private java.util.List<com.babylon.btcstaking.v1.GenesisProto.BTCDelegator> btcDelegators_;
    /**
     * <pre>
     * btc_delegators contains all the btc delegators with the associated finality provider.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
     */
    @java.lang.Override
    public java.util.List<com.babylon.btcstaking.v1.GenesisProto.BTCDelegator> getBtcDelegatorsList() {
      return btcDelegators_;
    }
    /**
     * <pre>
     * btc_delegators contains all the btc delegators with the associated finality provider.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.babylon.btcstaking.v1.GenesisProto.BTCDelegatorOrBuilder> 
        getBtcDelegatorsOrBuilderList() {
      return btcDelegators_;
    }
    /**
     * <pre>
     * btc_delegators contains all the btc delegators with the associated finality provider.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
     */
    @java.lang.Override
    public int getBtcDelegatorsCount() {
      return btcDelegators_.size();
    }
    /**
     * <pre>
     * btc_delegators contains all the btc delegators with the associated finality provider.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.GenesisProto.BTCDelegator getBtcDelegators(int index) {
      return btcDelegators_.get(index);
    }
    /**
     * <pre>
     * btc_delegators contains all the btc delegators with the associated finality provider.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.GenesisProto.BTCDelegatorOrBuilder getBtcDelegatorsOrBuilder(
        int index) {
      return btcDelegators_.get(index);
    }

    public static final int EVENTS_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private java.util.List<com.babylon.btcstaking.v1.GenesisProto.EventIndex> events_;
    /**
     * <pre>
     * all the events and its indexes.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
     */
    @java.lang.Override
    public java.util.List<com.babylon.btcstaking.v1.GenesisProto.EventIndex> getEventsList() {
      return events_;
    }
    /**
     * <pre>
     * all the events and its indexes.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.babylon.btcstaking.v1.GenesisProto.EventIndexOrBuilder> 
        getEventsOrBuilderList() {
      return events_;
    }
    /**
     * <pre>
     * all the events and its indexes.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
     */
    @java.lang.Override
    public int getEventsCount() {
      return events_.size();
    }
    /**
     * <pre>
     * all the events and its indexes.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.GenesisProto.EventIndex getEvents(int index) {
      return events_.get(index);
    }
    /**
     * <pre>
     * all the events and its indexes.
     * </pre>
     *
     * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.GenesisProto.EventIndexOrBuilder getEventsOrBuilder(
        int index) {
      return events_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < params_.size(); i++) {
        output.writeMessage(1, params_.get(i));
      }
      for (int i = 0; i < finalityProviders_.size(); i++) {
        output.writeMessage(2, finalityProviders_.get(i));
      }
      for (int i = 0; i < btcDelegations_.size(); i++) {
        output.writeMessage(3, btcDelegations_.get(i));
      }
      for (int i = 0; i < blockHeightChains_.size(); i++) {
        output.writeMessage(5, blockHeightChains_.get(i));
      }
      for (int i = 0; i < btcDelegators_.size(); i++) {
        output.writeMessage(6, btcDelegators_.get(i));
      }
      for (int i = 0; i < events_.size(); i++) {
        output.writeMessage(7, events_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < params_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, params_.get(i));
      }
      for (int i = 0; i < finalityProviders_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, finalityProviders_.get(i));
      }
      for (int i = 0; i < btcDelegations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, btcDelegations_.get(i));
      }
      for (int i = 0; i < blockHeightChains_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, blockHeightChains_.get(i));
      }
      for (int i = 0; i < btcDelegators_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, btcDelegators_.get(i));
      }
      for (int i = 0; i < events_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, events_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.btcstaking.v1.GenesisProto.GenesisState)) {
        return super.equals(obj);
      }
      com.babylon.btcstaking.v1.GenesisProto.GenesisState other = (com.babylon.btcstaking.v1.GenesisProto.GenesisState) obj;

      if (!getParamsList()
          .equals(other.getParamsList())) return false;
      if (!getFinalityProvidersList()
          .equals(other.getFinalityProvidersList())) return false;
      if (!getBtcDelegationsList()
          .equals(other.getBtcDelegationsList())) return false;
      if (!getBlockHeightChainsList()
          .equals(other.getBlockHeightChainsList())) return false;
      if (!getBtcDelegatorsList()
          .equals(other.getBtcDelegatorsList())) return false;
      if (!getEventsList()
          .equals(other.getEventsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getParamsCount() > 0) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getParamsList().hashCode();
      }
      if (getFinalityProvidersCount() > 0) {
        hash = (37 * hash) + FINALITY_PROVIDERS_FIELD_NUMBER;
        hash = (53 * hash) + getFinalityProvidersList().hashCode();
      }
      if (getBtcDelegationsCount() > 0) {
        hash = (37 * hash) + BTC_DELEGATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getBtcDelegationsList().hashCode();
      }
      if (getBlockHeightChainsCount() > 0) {
        hash = (37 * hash) + BLOCK_HEIGHT_CHAINS_FIELD_NUMBER;
        hash = (53 * hash) + getBlockHeightChainsList().hashCode();
      }
      if (getBtcDelegatorsCount() > 0) {
        hash = (37 * hash) + BTC_DELEGATORS_FIELD_NUMBER;
        hash = (53 * hash) + getBtcDelegatorsList().hashCode();
      }
      if (getEventsCount() > 0) {
        hash = (37 * hash) + EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getEventsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.btcstaking.v1.GenesisProto.GenesisState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * GenesisState defines the btcstaking module's genesis state.
     * </pre>
     *
     * Protobuf type {@code babylon.btcstaking.v1.GenesisState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.btcstaking.v1.GenesisState)
        com.babylon.btcstaking.v1.GenesisProto.GenesisStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_GenesisState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_GenesisState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.btcstaking.v1.GenesisProto.GenesisState.class, com.babylon.btcstaking.v1.GenesisProto.GenesisState.Builder.class);
      }

      // Construct using com.babylon.btcstaking.v1.GenesisProto.GenesisState.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (paramsBuilder_ == null) {
          params_ = java.util.Collections.emptyList();
        } else {
          params_ = null;
          paramsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (finalityProvidersBuilder_ == null) {
          finalityProviders_ = java.util.Collections.emptyList();
        } else {
          finalityProviders_ = null;
          finalityProvidersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (btcDelegationsBuilder_ == null) {
          btcDelegations_ = java.util.Collections.emptyList();
        } else {
          btcDelegations_ = null;
          btcDelegationsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (blockHeightChainsBuilder_ == null) {
          blockHeightChains_ = java.util.Collections.emptyList();
        } else {
          blockHeightChains_ = null;
          blockHeightChainsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (btcDelegatorsBuilder_ == null) {
          btcDelegators_ = java.util.Collections.emptyList();
        } else {
          btcDelegators_ = null;
          btcDelegatorsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
        } else {
          events_ = null;
          eventsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_GenesisState_descriptor;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.GenesisProto.GenesisState getDefaultInstanceForType() {
        return com.babylon.btcstaking.v1.GenesisProto.GenesisState.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.GenesisProto.GenesisState build() {
        com.babylon.btcstaking.v1.GenesisProto.GenesisState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.GenesisProto.GenesisState buildPartial() {
        com.babylon.btcstaking.v1.GenesisProto.GenesisState result = new com.babylon.btcstaking.v1.GenesisProto.GenesisState(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.babylon.btcstaking.v1.GenesisProto.GenesisState result) {
        if (paramsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            params_ = java.util.Collections.unmodifiableList(params_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.params_ = params_;
        } else {
          result.params_ = paramsBuilder_.build();
        }
        if (finalityProvidersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            finalityProviders_ = java.util.Collections.unmodifiableList(finalityProviders_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.finalityProviders_ = finalityProviders_;
        } else {
          result.finalityProviders_ = finalityProvidersBuilder_.build();
        }
        if (btcDelegationsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            btcDelegations_ = java.util.Collections.unmodifiableList(btcDelegations_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.btcDelegations_ = btcDelegations_;
        } else {
          result.btcDelegations_ = btcDelegationsBuilder_.build();
        }
        if (blockHeightChainsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            blockHeightChains_ = java.util.Collections.unmodifiableList(blockHeightChains_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.blockHeightChains_ = blockHeightChains_;
        } else {
          result.blockHeightChains_ = blockHeightChainsBuilder_.build();
        }
        if (btcDelegatorsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            btcDelegators_ = java.util.Collections.unmodifiableList(btcDelegators_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.btcDelegators_ = btcDelegators_;
        } else {
          result.btcDelegators_ = btcDelegatorsBuilder_.build();
        }
        if (eventsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            events_ = java.util.Collections.unmodifiableList(events_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
      }

      private void buildPartial0(com.babylon.btcstaking.v1.GenesisProto.GenesisState result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.btcstaking.v1.GenesisProto.GenesisState) {
          return mergeFrom((com.babylon.btcstaking.v1.GenesisProto.GenesisState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.btcstaking.v1.GenesisProto.GenesisState other) {
        if (other == com.babylon.btcstaking.v1.GenesisProto.GenesisState.getDefaultInstance()) return this;
        if (paramsBuilder_ == null) {
          if (!other.params_.isEmpty()) {
            if (params_.isEmpty()) {
              params_ = other.params_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureParamsIsMutable();
              params_.addAll(other.params_);
            }
            onChanged();
          }
        } else {
          if (!other.params_.isEmpty()) {
            if (paramsBuilder_.isEmpty()) {
              paramsBuilder_.dispose();
              paramsBuilder_ = null;
              params_ = other.params_;
              bitField0_ = (bitField0_ & ~0x00000001);
              paramsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParamsFieldBuilder() : null;
            } else {
              paramsBuilder_.addAllMessages(other.params_);
            }
          }
        }
        if (finalityProvidersBuilder_ == null) {
          if (!other.finalityProviders_.isEmpty()) {
            if (finalityProviders_.isEmpty()) {
              finalityProviders_ = other.finalityProviders_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFinalityProvidersIsMutable();
              finalityProviders_.addAll(other.finalityProviders_);
            }
            onChanged();
          }
        } else {
          if (!other.finalityProviders_.isEmpty()) {
            if (finalityProvidersBuilder_.isEmpty()) {
              finalityProvidersBuilder_.dispose();
              finalityProvidersBuilder_ = null;
              finalityProviders_ = other.finalityProviders_;
              bitField0_ = (bitField0_ & ~0x00000002);
              finalityProvidersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFinalityProvidersFieldBuilder() : null;
            } else {
              finalityProvidersBuilder_.addAllMessages(other.finalityProviders_);
            }
          }
        }
        if (btcDelegationsBuilder_ == null) {
          if (!other.btcDelegations_.isEmpty()) {
            if (btcDelegations_.isEmpty()) {
              btcDelegations_ = other.btcDelegations_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureBtcDelegationsIsMutable();
              btcDelegations_.addAll(other.btcDelegations_);
            }
            onChanged();
          }
        } else {
          if (!other.btcDelegations_.isEmpty()) {
            if (btcDelegationsBuilder_.isEmpty()) {
              btcDelegationsBuilder_.dispose();
              btcDelegationsBuilder_ = null;
              btcDelegations_ = other.btcDelegations_;
              bitField0_ = (bitField0_ & ~0x00000004);
              btcDelegationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBtcDelegationsFieldBuilder() : null;
            } else {
              btcDelegationsBuilder_.addAllMessages(other.btcDelegations_);
            }
          }
        }
        if (blockHeightChainsBuilder_ == null) {
          if (!other.blockHeightChains_.isEmpty()) {
            if (blockHeightChains_.isEmpty()) {
              blockHeightChains_ = other.blockHeightChains_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureBlockHeightChainsIsMutable();
              blockHeightChains_.addAll(other.blockHeightChains_);
            }
            onChanged();
          }
        } else {
          if (!other.blockHeightChains_.isEmpty()) {
            if (blockHeightChainsBuilder_.isEmpty()) {
              blockHeightChainsBuilder_.dispose();
              blockHeightChainsBuilder_ = null;
              blockHeightChains_ = other.blockHeightChains_;
              bitField0_ = (bitField0_ & ~0x00000008);
              blockHeightChainsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBlockHeightChainsFieldBuilder() : null;
            } else {
              blockHeightChainsBuilder_.addAllMessages(other.blockHeightChains_);
            }
          }
        }
        if (btcDelegatorsBuilder_ == null) {
          if (!other.btcDelegators_.isEmpty()) {
            if (btcDelegators_.isEmpty()) {
              btcDelegators_ = other.btcDelegators_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureBtcDelegatorsIsMutable();
              btcDelegators_.addAll(other.btcDelegators_);
            }
            onChanged();
          }
        } else {
          if (!other.btcDelegators_.isEmpty()) {
            if (btcDelegatorsBuilder_.isEmpty()) {
              btcDelegatorsBuilder_.dispose();
              btcDelegatorsBuilder_ = null;
              btcDelegators_ = other.btcDelegators_;
              bitField0_ = (bitField0_ & ~0x00000010);
              btcDelegatorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBtcDelegatorsFieldBuilder() : null;
            } else {
              btcDelegatorsBuilder_.addAllMessages(other.btcDelegators_);
            }
          }
        }
        if (eventsBuilder_ == null) {
          if (!other.events_.isEmpty()) {
            if (events_.isEmpty()) {
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureEventsIsMutable();
              events_.addAll(other.events_);
            }
            onChanged();
          }
        } else {
          if (!other.events_.isEmpty()) {
            if (eventsBuilder_.isEmpty()) {
              eventsBuilder_.dispose();
              eventsBuilder_ = null;
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000020);
              eventsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEventsFieldBuilder() : null;
            } else {
              eventsBuilder_.addAllMessages(other.events_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.babylon.btcstaking.v1.ParamsProto.Params m =
                    input.readMessage(
                        com.babylon.btcstaking.v1.ParamsProto.Params.parser(),
                        extensionRegistry);
                if (paramsBuilder_ == null) {
                  ensureParamsIsMutable();
                  params_.add(m);
                } else {
                  paramsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider m =
                    input.readMessage(
                        com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.parser(),
                        extensionRegistry);
                if (finalityProvidersBuilder_ == null) {
                  ensureFinalityProvidersIsMutable();
                  finalityProviders_.add(m);
                } else {
                  finalityProvidersBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation m =
                    input.readMessage(
                        com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.parser(),
                        extensionRegistry);
                if (btcDelegationsBuilder_ == null) {
                  ensureBtcDelegationsIsMutable();
                  btcDelegations_.add(m);
                } else {
                  btcDelegationsBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 42: {
                com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc m =
                    input.readMessage(
                        com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.parser(),
                        extensionRegistry);
                if (blockHeightChainsBuilder_ == null) {
                  ensureBlockHeightChainsIsMutable();
                  blockHeightChains_.add(m);
                } else {
                  blockHeightChainsBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 50: {
                com.babylon.btcstaking.v1.GenesisProto.BTCDelegator m =
                    input.readMessage(
                        com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.parser(),
                        extensionRegistry);
                if (btcDelegatorsBuilder_ == null) {
                  ensureBtcDelegatorsIsMutable();
                  btcDelegators_.add(m);
                } else {
                  btcDelegatorsBuilder_.addMessage(m);
                }
                break;
              } // case 50
              case 58: {
                com.babylon.btcstaking.v1.GenesisProto.EventIndex m =
                    input.readMessage(
                        com.babylon.btcstaking.v1.GenesisProto.EventIndex.parser(),
                        extensionRegistry);
                if (eventsBuilder_ == null) {
                  ensureEventsIsMutable();
                  events_.add(m);
                } else {
                  eventsBuilder_.addMessage(m);
                }
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.babylon.btcstaking.v1.ParamsProto.Params> params_ =
        java.util.Collections.emptyList();
      private void ensureParamsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          params_ = new java.util.ArrayList<com.babylon.btcstaking.v1.ParamsProto.Params>(params_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.ParamsProto.Params, com.babylon.btcstaking.v1.ParamsProto.Params.Builder, com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder> paramsBuilder_;

      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.ParamsProto.Params> getParamsList() {
        if (paramsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(params_);
        } else {
          return paramsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public int getParamsCount() {
        if (paramsBuilder_ == null) {
          return params_.size();
        } else {
          return paramsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public com.babylon.btcstaking.v1.ParamsProto.Params getParams(int index) {
        if (paramsBuilder_ == null) {
          return params_.get(index);
        } else {
          return paramsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public Builder setParams(
          int index, com.babylon.btcstaking.v1.ParamsProto.Params value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamsIsMutable();
          params_.set(index, value);
          onChanged();
        } else {
          paramsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public Builder setParams(
          int index, com.babylon.btcstaking.v1.ParamsProto.Params.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          ensureParamsIsMutable();
          params_.set(index, builderForValue.build());
          onChanged();
        } else {
          paramsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public Builder addParams(com.babylon.btcstaking.v1.ParamsProto.Params value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamsIsMutable();
          params_.add(value);
          onChanged();
        } else {
          paramsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public Builder addParams(
          int index, com.babylon.btcstaking.v1.ParamsProto.Params value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamsIsMutable();
          params_.add(index, value);
          onChanged();
        } else {
          paramsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public Builder addParams(
          com.babylon.btcstaking.v1.ParamsProto.Params.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          ensureParamsIsMutable();
          params_.add(builderForValue.build());
          onChanged();
        } else {
          paramsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public Builder addParams(
          int index, com.babylon.btcstaking.v1.ParamsProto.Params.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          ensureParamsIsMutable();
          params_.add(index, builderForValue.build());
          onChanged();
        } else {
          paramsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public Builder addAllParams(
          java.lang.Iterable<? extends com.babylon.btcstaking.v1.ParamsProto.Params> values) {
        if (paramsBuilder_ == null) {
          ensureParamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, params_);
          onChanged();
        } else {
          paramsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public Builder clearParams() {
        if (paramsBuilder_ == null) {
          params_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          paramsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public Builder removeParams(int index) {
        if (paramsBuilder_ == null) {
          ensureParamsIsMutable();
          params_.remove(index);
          onChanged();
        } else {
          paramsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public com.babylon.btcstaking.v1.ParamsProto.Params.Builder getParamsBuilder(
          int index) {
        return getParamsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder getParamsOrBuilder(
          int index) {
        if (paramsBuilder_ == null) {
          return params_.get(index);  } else {
          return paramsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public java.util.List<? extends com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder> 
           getParamsOrBuilderList() {
        if (paramsBuilder_ != null) {
          return paramsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(params_);
        }
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public com.babylon.btcstaking.v1.ParamsProto.Params.Builder addParamsBuilder() {
        return getParamsFieldBuilder().addBuilder(
            com.babylon.btcstaking.v1.ParamsProto.Params.getDefaultInstance());
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public com.babylon.btcstaking.v1.ParamsProto.Params.Builder addParamsBuilder(
          int index) {
        return getParamsFieldBuilder().addBuilder(
            index, com.babylon.btcstaking.v1.ParamsProto.Params.getDefaultInstance());
      }
      /**
       * <pre>
       * different versions of params used through the history of the chain
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.Params params = 1 [json_name = "params"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.ParamsProto.Params.Builder> 
           getParamsBuilderList() {
        return getParamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.ParamsProto.Params, com.babylon.btcstaking.v1.ParamsProto.Params.Builder, com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder> 
          getParamsFieldBuilder() {
        if (paramsBuilder_ == null) {
          paramsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.babylon.btcstaking.v1.ParamsProto.Params, com.babylon.btcstaking.v1.ParamsProto.Params.Builder, com.babylon.btcstaking.v1.ParamsProto.ParamsOrBuilder>(
                  params_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        return paramsBuilder_;
      }

      private java.util.List<com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider> finalityProviders_ =
        java.util.Collections.emptyList();
      private void ensureFinalityProvidersIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          finalityProviders_ = new java.util.ArrayList<com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider>(finalityProviders_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider, com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.Builder, com.babylon.btcstaking.v1.BtcstakingProto.FinalityProviderOrBuilder> finalityProvidersBuilder_;

      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider> getFinalityProvidersList() {
        if (finalityProvidersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(finalityProviders_);
        } else {
          return finalityProvidersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public int getFinalityProvidersCount() {
        if (finalityProvidersBuilder_ == null) {
          return finalityProviders_.size();
        } else {
          return finalityProvidersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider getFinalityProviders(int index) {
        if (finalityProvidersBuilder_ == null) {
          return finalityProviders_.get(index);
        } else {
          return finalityProvidersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder setFinalityProviders(
          int index, com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider value) {
        if (finalityProvidersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFinalityProvidersIsMutable();
          finalityProviders_.set(index, value);
          onChanged();
        } else {
          finalityProvidersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder setFinalityProviders(
          int index, com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.Builder builderForValue) {
        if (finalityProvidersBuilder_ == null) {
          ensureFinalityProvidersIsMutable();
          finalityProviders_.set(index, builderForValue.build());
          onChanged();
        } else {
          finalityProvidersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder addFinalityProviders(com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider value) {
        if (finalityProvidersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFinalityProvidersIsMutable();
          finalityProviders_.add(value);
          onChanged();
        } else {
          finalityProvidersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder addFinalityProviders(
          int index, com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider value) {
        if (finalityProvidersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFinalityProvidersIsMutable();
          finalityProviders_.add(index, value);
          onChanged();
        } else {
          finalityProvidersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder addFinalityProviders(
          com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.Builder builderForValue) {
        if (finalityProvidersBuilder_ == null) {
          ensureFinalityProvidersIsMutable();
          finalityProviders_.add(builderForValue.build());
          onChanged();
        } else {
          finalityProvidersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder addFinalityProviders(
          int index, com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.Builder builderForValue) {
        if (finalityProvidersBuilder_ == null) {
          ensureFinalityProvidersIsMutable();
          finalityProviders_.add(index, builderForValue.build());
          onChanged();
        } else {
          finalityProvidersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder addAllFinalityProviders(
          java.lang.Iterable<? extends com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider> values) {
        if (finalityProvidersBuilder_ == null) {
          ensureFinalityProvidersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, finalityProviders_);
          onChanged();
        } else {
          finalityProvidersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder clearFinalityProviders() {
        if (finalityProvidersBuilder_ == null) {
          finalityProviders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          finalityProvidersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public Builder removeFinalityProviders(int index) {
        if (finalityProvidersBuilder_ == null) {
          ensureFinalityProvidersIsMutable();
          finalityProviders_.remove(index);
          onChanged();
        } else {
          finalityProvidersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.Builder getFinalityProvidersBuilder(
          int index) {
        return getFinalityProvidersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.FinalityProviderOrBuilder getFinalityProvidersOrBuilder(
          int index) {
        if (finalityProvidersBuilder_ == null) {
          return finalityProviders_.get(index);  } else {
          return finalityProvidersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public java.util.List<? extends com.babylon.btcstaking.v1.BtcstakingProto.FinalityProviderOrBuilder> 
           getFinalityProvidersOrBuilderList() {
        if (finalityProvidersBuilder_ != null) {
          return finalityProvidersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(finalityProviders_);
        }
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.Builder addFinalityProvidersBuilder() {
        return getFinalityProvidersFieldBuilder().addBuilder(
            com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.getDefaultInstance());
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.Builder addFinalityProvidersBuilder(
          int index) {
        return getFinalityProvidersFieldBuilder().addBuilder(
            index, com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.getDefaultInstance());
      }
      /**
       * <pre>
       * finality_providers all the finality providers registered.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.FinalityProvider finality_providers = 2 [json_name = "finalityProviders"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.Builder> 
           getFinalityProvidersBuilderList() {
        return getFinalityProvidersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider, com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.Builder, com.babylon.btcstaking.v1.BtcstakingProto.FinalityProviderOrBuilder> 
          getFinalityProvidersFieldBuilder() {
        if (finalityProvidersBuilder_ == null) {
          finalityProvidersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider, com.babylon.btcstaking.v1.BtcstakingProto.FinalityProvider.Builder, com.babylon.btcstaking.v1.BtcstakingProto.FinalityProviderOrBuilder>(
                  finalityProviders_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          finalityProviders_ = null;
        }
        return finalityProvidersBuilder_;
      }

      private java.util.List<com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation> btcDelegations_ =
        java.util.Collections.emptyList();
      private void ensureBtcDelegationsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          btcDelegations_ = new java.util.ArrayList<com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation>(btcDelegations_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.Builder, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegationOrBuilder> btcDelegationsBuilder_;

      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation> getBtcDelegationsList() {
        if (btcDelegationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(btcDelegations_);
        } else {
          return btcDelegationsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public int getBtcDelegationsCount() {
        if (btcDelegationsBuilder_ == null) {
          return btcDelegations_.size();
        } else {
          return btcDelegationsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation getBtcDelegations(int index) {
        if (btcDelegationsBuilder_ == null) {
          return btcDelegations_.get(index);
        } else {
          return btcDelegationsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public Builder setBtcDelegations(
          int index, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation value) {
        if (btcDelegationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBtcDelegationsIsMutable();
          btcDelegations_.set(index, value);
          onChanged();
        } else {
          btcDelegationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public Builder setBtcDelegations(
          int index, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.Builder builderForValue) {
        if (btcDelegationsBuilder_ == null) {
          ensureBtcDelegationsIsMutable();
          btcDelegations_.set(index, builderForValue.build());
          onChanged();
        } else {
          btcDelegationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public Builder addBtcDelegations(com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation value) {
        if (btcDelegationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBtcDelegationsIsMutable();
          btcDelegations_.add(value);
          onChanged();
        } else {
          btcDelegationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public Builder addBtcDelegations(
          int index, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation value) {
        if (btcDelegationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBtcDelegationsIsMutable();
          btcDelegations_.add(index, value);
          onChanged();
        } else {
          btcDelegationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public Builder addBtcDelegations(
          com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.Builder builderForValue) {
        if (btcDelegationsBuilder_ == null) {
          ensureBtcDelegationsIsMutable();
          btcDelegations_.add(builderForValue.build());
          onChanged();
        } else {
          btcDelegationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public Builder addBtcDelegations(
          int index, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.Builder builderForValue) {
        if (btcDelegationsBuilder_ == null) {
          ensureBtcDelegationsIsMutable();
          btcDelegations_.add(index, builderForValue.build());
          onChanged();
        } else {
          btcDelegationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public Builder addAllBtcDelegations(
          java.lang.Iterable<? extends com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation> values) {
        if (btcDelegationsBuilder_ == null) {
          ensureBtcDelegationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, btcDelegations_);
          onChanged();
        } else {
          btcDelegationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public Builder clearBtcDelegations() {
        if (btcDelegationsBuilder_ == null) {
          btcDelegations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          btcDelegationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public Builder removeBtcDelegations(int index) {
        if (btcDelegationsBuilder_ == null) {
          ensureBtcDelegationsIsMutable();
          btcDelegations_.remove(index);
          onChanged();
        } else {
          btcDelegationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.Builder getBtcDelegationsBuilder(
          int index) {
        return getBtcDelegationsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegationOrBuilder getBtcDelegationsOrBuilder(
          int index) {
        if (btcDelegationsBuilder_ == null) {
          return btcDelegations_.get(index);  } else {
          return btcDelegationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public java.util.List<? extends com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegationOrBuilder> 
           getBtcDelegationsOrBuilderList() {
        if (btcDelegationsBuilder_ != null) {
          return btcDelegationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(btcDelegations_);
        }
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.Builder addBtcDelegationsBuilder() {
        return getBtcDelegationsFieldBuilder().addBuilder(
            com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.getDefaultInstance());
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.Builder addBtcDelegationsBuilder(
          int index) {
        return getBtcDelegationsFieldBuilder().addBuilder(
            index, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.getDefaultInstance());
      }
      /**
       * <pre>
       * btc_delegations all the btc delegations in the state.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegation btc_delegations = 3 [json_name = "btcDelegations"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.Builder> 
           getBtcDelegationsBuilderList() {
        return getBtcDelegationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.Builder, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegationOrBuilder> 
          getBtcDelegationsFieldBuilder() {
        if (btcDelegationsBuilder_ == null) {
          btcDelegationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegation.Builder, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegationOrBuilder>(
                  btcDelegations_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          btcDelegations_ = null;
        }
        return btcDelegationsBuilder_;
      }

      private java.util.List<com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc> blockHeightChains_ =
        java.util.Collections.emptyList();
      private void ensureBlockHeightChainsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          blockHeightChains_ = new java.util.ArrayList<com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc>(blockHeightChains_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.Builder, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtcOrBuilder> blockHeightChainsBuilder_;

      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc> getBlockHeightChainsList() {
        if (blockHeightChainsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(blockHeightChains_);
        } else {
          return blockHeightChainsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public int getBlockHeightChainsCount() {
        if (blockHeightChainsBuilder_ == null) {
          return blockHeightChains_.size();
        } else {
          return blockHeightChainsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc getBlockHeightChains(int index) {
        if (blockHeightChainsBuilder_ == null) {
          return blockHeightChains_.get(index);
        } else {
          return blockHeightChainsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public Builder setBlockHeightChains(
          int index, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc value) {
        if (blockHeightChainsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlockHeightChainsIsMutable();
          blockHeightChains_.set(index, value);
          onChanged();
        } else {
          blockHeightChainsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public Builder setBlockHeightChains(
          int index, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.Builder builderForValue) {
        if (blockHeightChainsBuilder_ == null) {
          ensureBlockHeightChainsIsMutable();
          blockHeightChains_.set(index, builderForValue.build());
          onChanged();
        } else {
          blockHeightChainsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public Builder addBlockHeightChains(com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc value) {
        if (blockHeightChainsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlockHeightChainsIsMutable();
          blockHeightChains_.add(value);
          onChanged();
        } else {
          blockHeightChainsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public Builder addBlockHeightChains(
          int index, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc value) {
        if (blockHeightChainsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlockHeightChainsIsMutable();
          blockHeightChains_.add(index, value);
          onChanged();
        } else {
          blockHeightChainsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public Builder addBlockHeightChains(
          com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.Builder builderForValue) {
        if (blockHeightChainsBuilder_ == null) {
          ensureBlockHeightChainsIsMutable();
          blockHeightChains_.add(builderForValue.build());
          onChanged();
        } else {
          blockHeightChainsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public Builder addBlockHeightChains(
          int index, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.Builder builderForValue) {
        if (blockHeightChainsBuilder_ == null) {
          ensureBlockHeightChainsIsMutable();
          blockHeightChains_.add(index, builderForValue.build());
          onChanged();
        } else {
          blockHeightChainsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public Builder addAllBlockHeightChains(
          java.lang.Iterable<? extends com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc> values) {
        if (blockHeightChainsBuilder_ == null) {
          ensureBlockHeightChainsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, blockHeightChains_);
          onChanged();
        } else {
          blockHeightChainsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public Builder clearBlockHeightChains() {
        if (blockHeightChainsBuilder_ == null) {
          blockHeightChains_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          blockHeightChainsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public Builder removeBlockHeightChains(int index) {
        if (blockHeightChainsBuilder_ == null) {
          ensureBlockHeightChainsIsMutable();
          blockHeightChains_.remove(index);
          onChanged();
        } else {
          blockHeightChainsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.Builder getBlockHeightChainsBuilder(
          int index) {
        return getBlockHeightChainsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtcOrBuilder getBlockHeightChainsOrBuilder(
          int index) {
        if (blockHeightChainsBuilder_ == null) {
          return blockHeightChains_.get(index);  } else {
          return blockHeightChainsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public java.util.List<? extends com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtcOrBuilder> 
           getBlockHeightChainsOrBuilderList() {
        if (blockHeightChainsBuilder_ != null) {
          return blockHeightChainsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(blockHeightChains_);
        }
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.Builder addBlockHeightChainsBuilder() {
        return getBlockHeightChainsFieldBuilder().addBuilder(
            com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.getDefaultInstance());
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.Builder addBlockHeightChainsBuilder(
          int index) {
        return getBlockHeightChainsFieldBuilder().addBuilder(
            index, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.getDefaultInstance());
      }
      /**
       * <pre>
       * block_height_chains the block height of babylon and bitcoin.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BlockHeightBbnToBtc block_height_chains = 5 [json_name = "blockHeightChains"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.Builder> 
           getBlockHeightChainsBuilderList() {
        return getBlockHeightChainsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.Builder, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtcOrBuilder> 
          getBlockHeightChainsFieldBuilder() {
        if (blockHeightChainsBuilder_ == null) {
          blockHeightChainsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.Builder, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtcOrBuilder>(
                  blockHeightChains_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          blockHeightChains_ = null;
        }
        return blockHeightChainsBuilder_;
      }

      private java.util.List<com.babylon.btcstaking.v1.GenesisProto.BTCDelegator> btcDelegators_ =
        java.util.Collections.emptyList();
      private void ensureBtcDelegatorsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          btcDelegators_ = new java.util.ArrayList<com.babylon.btcstaking.v1.GenesisProto.BTCDelegator>(btcDelegators_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.GenesisProto.BTCDelegator, com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.Builder, com.babylon.btcstaking.v1.GenesisProto.BTCDelegatorOrBuilder> btcDelegatorsBuilder_;

      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.GenesisProto.BTCDelegator> getBtcDelegatorsList() {
        if (btcDelegatorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(btcDelegators_);
        } else {
          return btcDelegatorsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public int getBtcDelegatorsCount() {
        if (btcDelegatorsBuilder_ == null) {
          return btcDelegators_.size();
        } else {
          return btcDelegatorsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.BTCDelegator getBtcDelegators(int index) {
        if (btcDelegatorsBuilder_ == null) {
          return btcDelegators_.get(index);
        } else {
          return btcDelegatorsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public Builder setBtcDelegators(
          int index, com.babylon.btcstaking.v1.GenesisProto.BTCDelegator value) {
        if (btcDelegatorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBtcDelegatorsIsMutable();
          btcDelegators_.set(index, value);
          onChanged();
        } else {
          btcDelegatorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public Builder setBtcDelegators(
          int index, com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.Builder builderForValue) {
        if (btcDelegatorsBuilder_ == null) {
          ensureBtcDelegatorsIsMutable();
          btcDelegators_.set(index, builderForValue.build());
          onChanged();
        } else {
          btcDelegatorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public Builder addBtcDelegators(com.babylon.btcstaking.v1.GenesisProto.BTCDelegator value) {
        if (btcDelegatorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBtcDelegatorsIsMutable();
          btcDelegators_.add(value);
          onChanged();
        } else {
          btcDelegatorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public Builder addBtcDelegators(
          int index, com.babylon.btcstaking.v1.GenesisProto.BTCDelegator value) {
        if (btcDelegatorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBtcDelegatorsIsMutable();
          btcDelegators_.add(index, value);
          onChanged();
        } else {
          btcDelegatorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public Builder addBtcDelegators(
          com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.Builder builderForValue) {
        if (btcDelegatorsBuilder_ == null) {
          ensureBtcDelegatorsIsMutable();
          btcDelegators_.add(builderForValue.build());
          onChanged();
        } else {
          btcDelegatorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public Builder addBtcDelegators(
          int index, com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.Builder builderForValue) {
        if (btcDelegatorsBuilder_ == null) {
          ensureBtcDelegatorsIsMutable();
          btcDelegators_.add(index, builderForValue.build());
          onChanged();
        } else {
          btcDelegatorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public Builder addAllBtcDelegators(
          java.lang.Iterable<? extends com.babylon.btcstaking.v1.GenesisProto.BTCDelegator> values) {
        if (btcDelegatorsBuilder_ == null) {
          ensureBtcDelegatorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, btcDelegators_);
          onChanged();
        } else {
          btcDelegatorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public Builder clearBtcDelegators() {
        if (btcDelegatorsBuilder_ == null) {
          btcDelegators_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          btcDelegatorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public Builder removeBtcDelegators(int index) {
        if (btcDelegatorsBuilder_ == null) {
          ensureBtcDelegatorsIsMutable();
          btcDelegators_.remove(index);
          onChanged();
        } else {
          btcDelegatorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.Builder getBtcDelegatorsBuilder(
          int index) {
        return getBtcDelegatorsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.BTCDelegatorOrBuilder getBtcDelegatorsOrBuilder(
          int index) {
        if (btcDelegatorsBuilder_ == null) {
          return btcDelegators_.get(index);  } else {
          return btcDelegatorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public java.util.List<? extends com.babylon.btcstaking.v1.GenesisProto.BTCDelegatorOrBuilder> 
           getBtcDelegatorsOrBuilderList() {
        if (btcDelegatorsBuilder_ != null) {
          return btcDelegatorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(btcDelegators_);
        }
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.Builder addBtcDelegatorsBuilder() {
        return getBtcDelegatorsFieldBuilder().addBuilder(
            com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.getDefaultInstance());
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.Builder addBtcDelegatorsBuilder(
          int index) {
        return getBtcDelegatorsFieldBuilder().addBuilder(
            index, com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.getDefaultInstance());
      }
      /**
       * <pre>
       * btc_delegators contains all the btc delegators with the associated finality provider.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.BTCDelegator btc_delegators = 6 [json_name = "btcDelegators"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.Builder> 
           getBtcDelegatorsBuilderList() {
        return getBtcDelegatorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.GenesisProto.BTCDelegator, com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.Builder, com.babylon.btcstaking.v1.GenesisProto.BTCDelegatorOrBuilder> 
          getBtcDelegatorsFieldBuilder() {
        if (btcDelegatorsBuilder_ == null) {
          btcDelegatorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.babylon.btcstaking.v1.GenesisProto.BTCDelegator, com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.Builder, com.babylon.btcstaking.v1.GenesisProto.BTCDelegatorOrBuilder>(
                  btcDelegators_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          btcDelegators_ = null;
        }
        return btcDelegatorsBuilder_;
      }

      private java.util.List<com.babylon.btcstaking.v1.GenesisProto.EventIndex> events_ =
        java.util.Collections.emptyList();
      private void ensureEventsIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          events_ = new java.util.ArrayList<com.babylon.btcstaking.v1.GenesisProto.EventIndex>(events_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.GenesisProto.EventIndex, com.babylon.btcstaking.v1.GenesisProto.EventIndex.Builder, com.babylon.btcstaking.v1.GenesisProto.EventIndexOrBuilder> eventsBuilder_;

      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.GenesisProto.EventIndex> getEventsList() {
        if (eventsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(events_);
        } else {
          return eventsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public int getEventsCount() {
        if (eventsBuilder_ == null) {
          return events_.size();
        } else {
          return eventsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.EventIndex getEvents(int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);
        } else {
          return eventsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public Builder setEvents(
          int index, com.babylon.btcstaking.v1.GenesisProto.EventIndex value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.set(index, value);
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public Builder setEvents(
          int index, com.babylon.btcstaking.v1.GenesisProto.EventIndex.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public Builder addEvents(com.babylon.btcstaking.v1.GenesisProto.EventIndex value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public Builder addEvents(
          int index, com.babylon.btcstaking.v1.GenesisProto.EventIndex value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(index, value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public Builder addEvents(
          com.babylon.btcstaking.v1.GenesisProto.EventIndex.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public Builder addEvents(
          int index, com.babylon.btcstaking.v1.GenesisProto.EventIndex.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public Builder addAllEvents(
          java.lang.Iterable<? extends com.babylon.btcstaking.v1.GenesisProto.EventIndex> values) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, events_);
          onChanged();
        } else {
          eventsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          eventsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public Builder removeEvents(int index) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.remove(index);
          onChanged();
        } else {
          eventsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.EventIndex.Builder getEventsBuilder(
          int index) {
        return getEventsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.EventIndexOrBuilder getEventsOrBuilder(
          int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);  } else {
          return eventsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public java.util.List<? extends com.babylon.btcstaking.v1.GenesisProto.EventIndexOrBuilder> 
           getEventsOrBuilderList() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(events_);
        }
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.EventIndex.Builder addEventsBuilder() {
        return getEventsFieldBuilder().addBuilder(
            com.babylon.btcstaking.v1.GenesisProto.EventIndex.getDefaultInstance());
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public com.babylon.btcstaking.v1.GenesisProto.EventIndex.Builder addEventsBuilder(
          int index) {
        return getEventsFieldBuilder().addBuilder(
            index, com.babylon.btcstaking.v1.GenesisProto.EventIndex.getDefaultInstance());
      }
      /**
       * <pre>
       * all the events and its indexes.
       * </pre>
       *
       * <code>repeated .babylon.btcstaking.v1.EventIndex events = 7 [json_name = "events"];</code>
       */
      public java.util.List<com.babylon.btcstaking.v1.GenesisProto.EventIndex.Builder> 
           getEventsBuilderList() {
        return getEventsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btcstaking.v1.GenesisProto.EventIndex, com.babylon.btcstaking.v1.GenesisProto.EventIndex.Builder, com.babylon.btcstaking.v1.GenesisProto.EventIndexOrBuilder> 
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.babylon.btcstaking.v1.GenesisProto.EventIndex, com.babylon.btcstaking.v1.GenesisProto.EventIndex.Builder, com.babylon.btcstaking.v1.GenesisProto.EventIndexOrBuilder>(
                  events_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.btcstaking.v1.GenesisState)
    }

    // @@protoc_insertion_point(class_scope:babylon.btcstaking.v1.GenesisState)
    private static final com.babylon.btcstaking.v1.GenesisProto.GenesisState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.btcstaking.v1.GenesisProto.GenesisState();
    }

    public static com.babylon.btcstaking.v1.GenesisProto.GenesisState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GenesisState>
        PARSER = new com.google.protobuf.AbstractParser<GenesisState>() {
      @java.lang.Override
      public GenesisState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GenesisState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GenesisState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.btcstaking.v1.GenesisProto.GenesisState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockHeightBbnToBtcOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.btcstaking.v1.BlockHeightBbnToBtc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * block_height_bbn is the height of the block in the babylon chain.
     * </pre>
     *
     * <code>uint64 block_height_bbn = 1 [json_name = "blockHeightBbn"];</code>
     * @return The blockHeightBbn.
     */
    long getBlockHeightBbn();

    /**
     * <pre>
     * block_height_btc is the height of the block in the BTC.
     * </pre>
     *
     * <code>uint32 block_height_btc = 2 [json_name = "blockHeightBtc"];</code>
     * @return The blockHeightBtc.
     */
    int getBlockHeightBtc();
  }
  /**
   * <pre>
   * BlockHeightBbnToBtc stores the btc &lt;-&gt; bbn block.
   * </pre>
   *
   * Protobuf type {@code babylon.btcstaking.v1.BlockHeightBbnToBtc}
   */
  public static final class BlockHeightBbnToBtc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.btcstaking.v1.BlockHeightBbnToBtc)
      BlockHeightBbnToBtcOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockHeightBbnToBtc.newBuilder() to construct.
    private BlockHeightBbnToBtc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockHeightBbnToBtc() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlockHeightBbnToBtc();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_BlockHeightBbnToBtc_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_BlockHeightBbnToBtc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.class, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.Builder.class);
    }

    public static final int BLOCK_HEIGHT_BBN_FIELD_NUMBER = 1;
    private long blockHeightBbn_ = 0L;
    /**
     * <pre>
     * block_height_bbn is the height of the block in the babylon chain.
     * </pre>
     *
     * <code>uint64 block_height_bbn = 1 [json_name = "blockHeightBbn"];</code>
     * @return The blockHeightBbn.
     */
    @java.lang.Override
    public long getBlockHeightBbn() {
      return blockHeightBbn_;
    }

    public static final int BLOCK_HEIGHT_BTC_FIELD_NUMBER = 2;
    private int blockHeightBtc_ = 0;
    /**
     * <pre>
     * block_height_btc is the height of the block in the BTC.
     * </pre>
     *
     * <code>uint32 block_height_btc = 2 [json_name = "blockHeightBtc"];</code>
     * @return The blockHeightBtc.
     */
    @java.lang.Override
    public int getBlockHeightBtc() {
      return blockHeightBtc_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (blockHeightBbn_ != 0L) {
        output.writeUInt64(1, blockHeightBbn_);
      }
      if (blockHeightBtc_ != 0) {
        output.writeUInt32(2, blockHeightBtc_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (blockHeightBbn_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, blockHeightBbn_);
      }
      if (blockHeightBtc_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, blockHeightBtc_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc)) {
        return super.equals(obj);
      }
      com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc other = (com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc) obj;

      if (getBlockHeightBbn()
          != other.getBlockHeightBbn()) return false;
      if (getBlockHeightBtc()
          != other.getBlockHeightBtc()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCK_HEIGHT_BBN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockHeightBbn());
      hash = (37 * hash) + BLOCK_HEIGHT_BTC_FIELD_NUMBER;
      hash = (53 * hash) + getBlockHeightBtc();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * BlockHeightBbnToBtc stores the btc &lt;-&gt; bbn block.
     * </pre>
     *
     * Protobuf type {@code babylon.btcstaking.v1.BlockHeightBbnToBtc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.btcstaking.v1.BlockHeightBbnToBtc)
        com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtcOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_BlockHeightBbnToBtc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_BlockHeightBbnToBtc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.class, com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.Builder.class);
      }

      // Construct using com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        blockHeightBbn_ = 0L;
        blockHeightBtc_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_BlockHeightBbnToBtc_descriptor;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc getDefaultInstanceForType() {
        return com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc build() {
        com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc buildPartial() {
        com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc result = new com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.blockHeightBbn_ = blockHeightBbn_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.blockHeightBtc_ = blockHeightBtc_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc) {
          return mergeFrom((com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc other) {
        if (other == com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc.getDefaultInstance()) return this;
        if (other.getBlockHeightBbn() != 0L) {
          setBlockHeightBbn(other.getBlockHeightBbn());
        }
        if (other.getBlockHeightBtc() != 0) {
          setBlockHeightBtc(other.getBlockHeightBtc());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                blockHeightBbn_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                blockHeightBtc_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long blockHeightBbn_ ;
      /**
       * <pre>
       * block_height_bbn is the height of the block in the babylon chain.
       * </pre>
       *
       * <code>uint64 block_height_bbn = 1 [json_name = "blockHeightBbn"];</code>
       * @return The blockHeightBbn.
       */
      @java.lang.Override
      public long getBlockHeightBbn() {
        return blockHeightBbn_;
      }
      /**
       * <pre>
       * block_height_bbn is the height of the block in the babylon chain.
       * </pre>
       *
       * <code>uint64 block_height_bbn = 1 [json_name = "blockHeightBbn"];</code>
       * @param value The blockHeightBbn to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHeightBbn(long value) {

        blockHeightBbn_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block_height_bbn is the height of the block in the babylon chain.
       * </pre>
       *
       * <code>uint64 block_height_bbn = 1 [json_name = "blockHeightBbn"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHeightBbn() {
        bitField0_ = (bitField0_ & ~0x00000001);
        blockHeightBbn_ = 0L;
        onChanged();
        return this;
      }

      private int blockHeightBtc_ ;
      /**
       * <pre>
       * block_height_btc is the height of the block in the BTC.
       * </pre>
       *
       * <code>uint32 block_height_btc = 2 [json_name = "blockHeightBtc"];</code>
       * @return The blockHeightBtc.
       */
      @java.lang.Override
      public int getBlockHeightBtc() {
        return blockHeightBtc_;
      }
      /**
       * <pre>
       * block_height_btc is the height of the block in the BTC.
       * </pre>
       *
       * <code>uint32 block_height_btc = 2 [json_name = "blockHeightBtc"];</code>
       * @param value The blockHeightBtc to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHeightBtc(int value) {

        blockHeightBtc_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block_height_btc is the height of the block in the BTC.
       * </pre>
       *
       * <code>uint32 block_height_btc = 2 [json_name = "blockHeightBtc"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHeightBtc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        blockHeightBtc_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.btcstaking.v1.BlockHeightBbnToBtc)
    }

    // @@protoc_insertion_point(class_scope:babylon.btcstaking.v1.BlockHeightBbnToBtc)
    private static final com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc();
    }

    public static com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockHeightBbnToBtc>
        PARSER = new com.google.protobuf.AbstractParser<BlockHeightBbnToBtc>() {
      @java.lang.Override
      public BlockHeightBbnToBtc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BlockHeightBbnToBtc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockHeightBbnToBtc> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.btcstaking.v1.GenesisProto.BlockHeightBbnToBtc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BTCDelegatorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.btcstaking.v1.BTCDelegator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * idx the btc delegator index.
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
     * @return Whether the idx field is set.
     */
    boolean hasIdx();
    /**
     * <pre>
     * idx the btc delegator index.
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
     * @return The idx.
     */
    com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex getIdx();
    /**
     * <pre>
     * idx the btc delegator index.
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
     */
    com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndexOrBuilder getIdxOrBuilder();

    /**
     * <pre>
     * fp_btc_pk the finality provider btc public key.
     * </pre>
     *
     * <code>bytes fp_btc_pk = 2 [json_name = "fpBtcPk", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
     * @return The fpBtcPk.
     */
    com.google.protobuf.ByteString getFpBtcPk();

    /**
     * <pre>
     * del_btc_pk the delegator btc public key.
     * </pre>
     *
     * <code>bytes del_btc_pk = 3 [json_name = "delBtcPk", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
     * @return The delBtcPk.
     */
    com.google.protobuf.ByteString getDelBtcPk();
  }
  /**
   * <pre>
   * BTCDelegator BTC delegator information with the associated finality provider.
   * </pre>
   *
   * Protobuf type {@code babylon.btcstaking.v1.BTCDelegator}
   */
  public static final class BTCDelegator extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.btcstaking.v1.BTCDelegator)
      BTCDelegatorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BTCDelegator.newBuilder() to construct.
    private BTCDelegator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BTCDelegator() {
      fpBtcPk_ = com.google.protobuf.ByteString.EMPTY;
      delBtcPk_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BTCDelegator();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_BTCDelegator_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_BTCDelegator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.class, com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.Builder.class);
    }

    public static final int IDX_FIELD_NUMBER = 1;
    private com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex idx_;
    /**
     * <pre>
     * idx the btc delegator index.
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
     * @return Whether the idx field is set.
     */
    @java.lang.Override
    public boolean hasIdx() {
      return idx_ != null;
    }
    /**
     * <pre>
     * idx the btc delegator index.
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
     * @return The idx.
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex getIdx() {
      return idx_ == null ? com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex.getDefaultInstance() : idx_;
    }
    /**
     * <pre>
     * idx the btc delegator index.
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndexOrBuilder getIdxOrBuilder() {
      return idx_ == null ? com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex.getDefaultInstance() : idx_;
    }

    public static final int FP_BTC_PK_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString fpBtcPk_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * fp_btc_pk the finality provider btc public key.
     * </pre>
     *
     * <code>bytes fp_btc_pk = 2 [json_name = "fpBtcPk", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
     * @return The fpBtcPk.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFpBtcPk() {
      return fpBtcPk_;
    }

    public static final int DEL_BTC_PK_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString delBtcPk_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * del_btc_pk the delegator btc public key.
     * </pre>
     *
     * <code>bytes del_btc_pk = 3 [json_name = "delBtcPk", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
     * @return The delBtcPk.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDelBtcPk() {
      return delBtcPk_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (idx_ != null) {
        output.writeMessage(1, getIdx());
      }
      if (!fpBtcPk_.isEmpty()) {
        output.writeBytes(2, fpBtcPk_);
      }
      if (!delBtcPk_.isEmpty()) {
        output.writeBytes(3, delBtcPk_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (idx_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIdx());
      }
      if (!fpBtcPk_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, fpBtcPk_);
      }
      if (!delBtcPk_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, delBtcPk_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.btcstaking.v1.GenesisProto.BTCDelegator)) {
        return super.equals(obj);
      }
      com.babylon.btcstaking.v1.GenesisProto.BTCDelegator other = (com.babylon.btcstaking.v1.GenesisProto.BTCDelegator) obj;

      if (hasIdx() != other.hasIdx()) return false;
      if (hasIdx()) {
        if (!getIdx()
            .equals(other.getIdx())) return false;
      }
      if (!getFpBtcPk()
          .equals(other.getFpBtcPk())) return false;
      if (!getDelBtcPk()
          .equals(other.getDelBtcPk())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIdx()) {
        hash = (37 * hash) + IDX_FIELD_NUMBER;
        hash = (53 * hash) + getIdx().hashCode();
      }
      hash = (37 * hash) + FP_BTC_PK_FIELD_NUMBER;
      hash = (53 * hash) + getFpBtcPk().hashCode();
      hash = (37 * hash) + DEL_BTC_PK_FIELD_NUMBER;
      hash = (53 * hash) + getDelBtcPk().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.btcstaking.v1.GenesisProto.BTCDelegator prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * BTCDelegator BTC delegator information with the associated finality provider.
     * </pre>
     *
     * Protobuf type {@code babylon.btcstaking.v1.BTCDelegator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.btcstaking.v1.BTCDelegator)
        com.babylon.btcstaking.v1.GenesisProto.BTCDelegatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_BTCDelegator_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_BTCDelegator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.class, com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.Builder.class);
      }

      // Construct using com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        idx_ = null;
        if (idxBuilder_ != null) {
          idxBuilder_.dispose();
          idxBuilder_ = null;
        }
        fpBtcPk_ = com.google.protobuf.ByteString.EMPTY;
        delBtcPk_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_BTCDelegator_descriptor;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.GenesisProto.BTCDelegator getDefaultInstanceForType() {
        return com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.GenesisProto.BTCDelegator build() {
        com.babylon.btcstaking.v1.GenesisProto.BTCDelegator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.GenesisProto.BTCDelegator buildPartial() {
        com.babylon.btcstaking.v1.GenesisProto.BTCDelegator result = new com.babylon.btcstaking.v1.GenesisProto.BTCDelegator(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.babylon.btcstaking.v1.GenesisProto.BTCDelegator result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.idx_ = idxBuilder_ == null
              ? idx_
              : idxBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fpBtcPk_ = fpBtcPk_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.delBtcPk_ = delBtcPk_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.btcstaking.v1.GenesisProto.BTCDelegator) {
          return mergeFrom((com.babylon.btcstaking.v1.GenesisProto.BTCDelegator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.btcstaking.v1.GenesisProto.BTCDelegator other) {
        if (other == com.babylon.btcstaking.v1.GenesisProto.BTCDelegator.getDefaultInstance()) return this;
        if (other.hasIdx()) {
          mergeIdx(other.getIdx());
        }
        if (other.getFpBtcPk() != com.google.protobuf.ByteString.EMPTY) {
          setFpBtcPk(other.getFpBtcPk());
        }
        if (other.getDelBtcPk() != com.google.protobuf.ByteString.EMPTY) {
          setDelBtcPk(other.getDelBtcPk());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getIdxFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                fpBtcPk_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                delBtcPk_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex idx_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex.Builder, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndexOrBuilder> idxBuilder_;
      /**
       * <pre>
       * idx the btc delegator index.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
       * @return Whether the idx field is set.
       */
      public boolean hasIdx() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * idx the btc delegator index.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
       * @return The idx.
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex getIdx() {
        if (idxBuilder_ == null) {
          return idx_ == null ? com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex.getDefaultInstance() : idx_;
        } else {
          return idxBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * idx the btc delegator index.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
       */
      public Builder setIdx(com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex value) {
        if (idxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          idx_ = value;
        } else {
          idxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * idx the btc delegator index.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
       */
      public Builder setIdx(
          com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex.Builder builderForValue) {
        if (idxBuilder_ == null) {
          idx_ = builderForValue.build();
        } else {
          idxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * idx the btc delegator index.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
       */
      public Builder mergeIdx(com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex value) {
        if (idxBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            idx_ != null &&
            idx_ != com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex.getDefaultInstance()) {
            getIdxBuilder().mergeFrom(value);
          } else {
            idx_ = value;
          }
        } else {
          idxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * idx the btc delegator index.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
       */
      public Builder clearIdx() {
        bitField0_ = (bitField0_ & ~0x00000001);
        idx_ = null;
        if (idxBuilder_ != null) {
          idxBuilder_.dispose();
          idxBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * idx the btc delegator index.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex.Builder getIdxBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdxFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * idx the btc delegator index.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
       */
      public com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndexOrBuilder getIdxOrBuilder() {
        if (idxBuilder_ != null) {
          return idxBuilder_.getMessageOrBuilder();
        } else {
          return idx_ == null ?
              com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex.getDefaultInstance() : idx_;
        }
      }
      /**
       * <pre>
       * idx the btc delegator index.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.BTCDelegatorDelegationIndex idx = 1 [json_name = "idx"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex.Builder, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndexOrBuilder> 
          getIdxFieldBuilder() {
        if (idxBuilder_ == null) {
          idxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndex.Builder, com.babylon.btcstaking.v1.BtcstakingProto.BTCDelegatorDelegationIndexOrBuilder>(
                  getIdx(),
                  getParentForChildren(),
                  isClean());
          idx_ = null;
        }
        return idxBuilder_;
      }

      private com.google.protobuf.ByteString fpBtcPk_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * fp_btc_pk the finality provider btc public key.
       * </pre>
       *
       * <code>bytes fp_btc_pk = 2 [json_name = "fpBtcPk", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @return The fpBtcPk.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFpBtcPk() {
        return fpBtcPk_;
      }
      /**
       * <pre>
       * fp_btc_pk the finality provider btc public key.
       * </pre>
       *
       * <code>bytes fp_btc_pk = 2 [json_name = "fpBtcPk", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @param value The fpBtcPk to set.
       * @return This builder for chaining.
       */
      public Builder setFpBtcPk(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        fpBtcPk_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * fp_btc_pk the finality provider btc public key.
       * </pre>
       *
       * <code>bytes fp_btc_pk = 2 [json_name = "fpBtcPk", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @return This builder for chaining.
       */
      public Builder clearFpBtcPk() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fpBtcPk_ = getDefaultInstance().getFpBtcPk();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString delBtcPk_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * del_btc_pk the delegator btc public key.
       * </pre>
       *
       * <code>bytes del_btc_pk = 3 [json_name = "delBtcPk", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @return The delBtcPk.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDelBtcPk() {
        return delBtcPk_;
      }
      /**
       * <pre>
       * del_btc_pk the delegator btc public key.
       * </pre>
       *
       * <code>bytes del_btc_pk = 3 [json_name = "delBtcPk", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @param value The delBtcPk to set.
       * @return This builder for chaining.
       */
      public Builder setDelBtcPk(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        delBtcPk_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * del_btc_pk the delegator btc public key.
       * </pre>
       *
       * <code>bytes del_btc_pk = 3 [json_name = "delBtcPk", (.gogoproto.customtype) = "github.com/babylonlabs-io/babylon/types.BIP340PubKey"];</code>
       * @return This builder for chaining.
       */
      public Builder clearDelBtcPk() {
        bitField0_ = (bitField0_ & ~0x00000004);
        delBtcPk_ = getDefaultInstance().getDelBtcPk();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.btcstaking.v1.BTCDelegator)
    }

    // @@protoc_insertion_point(class_scope:babylon.btcstaking.v1.BTCDelegator)
    private static final com.babylon.btcstaking.v1.GenesisProto.BTCDelegator DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.btcstaking.v1.GenesisProto.BTCDelegator();
    }

    public static com.babylon.btcstaking.v1.GenesisProto.BTCDelegator getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BTCDelegator>
        PARSER = new com.google.protobuf.AbstractParser<BTCDelegator>() {
      @java.lang.Override
      public BTCDelegator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BTCDelegator> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BTCDelegator> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.btcstaking.v1.GenesisProto.BTCDelegator getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventIndexOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.btcstaking.v1.EventIndex)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * idx is the index the event was stored.
     * </pre>
     *
     * <code>uint64 idx = 1 [json_name = "idx"];</code>
     * @return The idx.
     */
    long getIdx();

    /**
     * <pre>
     * block_height_btc is the height of the block in the BTC chain.
     * </pre>
     *
     * <code>uint32 block_height_btc = 2 [json_name = "blockHeightBtc"];</code>
     * @return The blockHeightBtc.
     */
    int getBlockHeightBtc();

    /**
     * <pre>
     * event the event stored.
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
     * @return Whether the event field is set.
     */
    boolean hasEvent();
    /**
     * <pre>
     * event the event stored.
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
     * @return The event.
     */
    com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate getEvent();
    /**
     * <pre>
     * event the event stored.
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
     */
    com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdateOrBuilder getEventOrBuilder();
  }
  /**
   * <pre>
   * EventIndex contains the event and its index.
   * </pre>
   *
   * Protobuf type {@code babylon.btcstaking.v1.EventIndex}
   */
  public static final class EventIndex extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.btcstaking.v1.EventIndex)
      EventIndexOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventIndex.newBuilder() to construct.
    private EventIndex(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventIndex() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventIndex();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_EventIndex_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_EventIndex_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.btcstaking.v1.GenesisProto.EventIndex.class, com.babylon.btcstaking.v1.GenesisProto.EventIndex.Builder.class);
    }

    public static final int IDX_FIELD_NUMBER = 1;
    private long idx_ = 0L;
    /**
     * <pre>
     * idx is the index the event was stored.
     * </pre>
     *
     * <code>uint64 idx = 1 [json_name = "idx"];</code>
     * @return The idx.
     */
    @java.lang.Override
    public long getIdx() {
      return idx_;
    }

    public static final int BLOCK_HEIGHT_BTC_FIELD_NUMBER = 2;
    private int blockHeightBtc_ = 0;
    /**
     * <pre>
     * block_height_btc is the height of the block in the BTC chain.
     * </pre>
     *
     * <code>uint32 block_height_btc = 2 [json_name = "blockHeightBtc"];</code>
     * @return The blockHeightBtc.
     */
    @java.lang.Override
    public int getBlockHeightBtc() {
      return blockHeightBtc_;
    }

    public static final int EVENT_FIELD_NUMBER = 3;
    private com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate event_;
    /**
     * <pre>
     * event the event stored.
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
     * @return Whether the event field is set.
     */
    @java.lang.Override
    public boolean hasEvent() {
      return event_ != null;
    }
    /**
     * <pre>
     * event the event stored.
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
     * @return The event.
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate getEvent() {
      return event_ == null ? com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate.getDefaultInstance() : event_;
    }
    /**
     * <pre>
     * event the event stored.
     * </pre>
     *
     * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
     */
    @java.lang.Override
    public com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdateOrBuilder getEventOrBuilder() {
      return event_ == null ? com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate.getDefaultInstance() : event_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (idx_ != 0L) {
        output.writeUInt64(1, idx_);
      }
      if (blockHeightBtc_ != 0) {
        output.writeUInt32(2, blockHeightBtc_);
      }
      if (event_ != null) {
        output.writeMessage(3, getEvent());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (idx_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, idx_);
      }
      if (blockHeightBtc_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, blockHeightBtc_);
      }
      if (event_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getEvent());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.btcstaking.v1.GenesisProto.EventIndex)) {
        return super.equals(obj);
      }
      com.babylon.btcstaking.v1.GenesisProto.EventIndex other = (com.babylon.btcstaking.v1.GenesisProto.EventIndex) obj;

      if (getIdx()
          != other.getIdx()) return false;
      if (getBlockHeightBtc()
          != other.getBlockHeightBtc()) return false;
      if (hasEvent() != other.hasEvent()) return false;
      if (hasEvent()) {
        if (!getEvent()
            .equals(other.getEvent())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IDX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIdx());
      hash = (37 * hash) + BLOCK_HEIGHT_BTC_FIELD_NUMBER;
      hash = (53 * hash) + getBlockHeightBtc();
      if (hasEvent()) {
        hash = (37 * hash) + EVENT_FIELD_NUMBER;
        hash = (53 * hash) + getEvent().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.btcstaking.v1.GenesisProto.EventIndex prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * EventIndex contains the event and its index.
     * </pre>
     *
     * Protobuf type {@code babylon.btcstaking.v1.EventIndex}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.btcstaking.v1.EventIndex)
        com.babylon.btcstaking.v1.GenesisProto.EventIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_EventIndex_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_EventIndex_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.btcstaking.v1.GenesisProto.EventIndex.class, com.babylon.btcstaking.v1.GenesisProto.EventIndex.Builder.class);
      }

      // Construct using com.babylon.btcstaking.v1.GenesisProto.EventIndex.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        idx_ = 0L;
        blockHeightBtc_ = 0;
        event_ = null;
        if (eventBuilder_ != null) {
          eventBuilder_.dispose();
          eventBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.btcstaking.v1.GenesisProto.internal_static_babylon_btcstaking_v1_EventIndex_descriptor;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.GenesisProto.EventIndex getDefaultInstanceForType() {
        return com.babylon.btcstaking.v1.GenesisProto.EventIndex.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.GenesisProto.EventIndex build() {
        com.babylon.btcstaking.v1.GenesisProto.EventIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.btcstaking.v1.GenesisProto.EventIndex buildPartial() {
        com.babylon.btcstaking.v1.GenesisProto.EventIndex result = new com.babylon.btcstaking.v1.GenesisProto.EventIndex(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.babylon.btcstaking.v1.GenesisProto.EventIndex result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.idx_ = idx_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.blockHeightBtc_ = blockHeightBtc_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.event_ = eventBuilder_ == null
              ? event_
              : eventBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.btcstaking.v1.GenesisProto.EventIndex) {
          return mergeFrom((com.babylon.btcstaking.v1.GenesisProto.EventIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.btcstaking.v1.GenesisProto.EventIndex other) {
        if (other == com.babylon.btcstaking.v1.GenesisProto.EventIndex.getDefaultInstance()) return this;
        if (other.getIdx() != 0L) {
          setIdx(other.getIdx());
        }
        if (other.getBlockHeightBtc() != 0) {
          setBlockHeightBtc(other.getBlockHeightBtc());
        }
        if (other.hasEvent()) {
          mergeEvent(other.getEvent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                idx_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                blockHeightBtc_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                input.readMessage(
                    getEventFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long idx_ ;
      /**
       * <pre>
       * idx is the index the event was stored.
       * </pre>
       *
       * <code>uint64 idx = 1 [json_name = "idx"];</code>
       * @return The idx.
       */
      @java.lang.Override
      public long getIdx() {
        return idx_;
      }
      /**
       * <pre>
       * idx is the index the event was stored.
       * </pre>
       *
       * <code>uint64 idx = 1 [json_name = "idx"];</code>
       * @param value The idx to set.
       * @return This builder for chaining.
       */
      public Builder setIdx(long value) {

        idx_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * idx is the index the event was stored.
       * </pre>
       *
       * <code>uint64 idx = 1 [json_name = "idx"];</code>
       * @return This builder for chaining.
       */
      public Builder clearIdx() {
        bitField0_ = (bitField0_ & ~0x00000001);
        idx_ = 0L;
        onChanged();
        return this;
      }

      private int blockHeightBtc_ ;
      /**
       * <pre>
       * block_height_btc is the height of the block in the BTC chain.
       * </pre>
       *
       * <code>uint32 block_height_btc = 2 [json_name = "blockHeightBtc"];</code>
       * @return The blockHeightBtc.
       */
      @java.lang.Override
      public int getBlockHeightBtc() {
        return blockHeightBtc_;
      }
      /**
       * <pre>
       * block_height_btc is the height of the block in the BTC chain.
       * </pre>
       *
       * <code>uint32 block_height_btc = 2 [json_name = "blockHeightBtc"];</code>
       * @param value The blockHeightBtc to set.
       * @return This builder for chaining.
       */
      public Builder setBlockHeightBtc(int value) {

        blockHeightBtc_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * block_height_btc is the height of the block in the BTC chain.
       * </pre>
       *
       * <code>uint32 block_height_btc = 2 [json_name = "blockHeightBtc"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockHeightBtc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        blockHeightBtc_ = 0;
        onChanged();
        return this;
      }

      private com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate event_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate, com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate.Builder, com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdateOrBuilder> eventBuilder_;
      /**
       * <pre>
       * event the event stored.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
       * @return Whether the event field is set.
       */
      public boolean hasEvent() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * event the event stored.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
       * @return The event.
       */
      public com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate getEvent() {
        if (eventBuilder_ == null) {
          return event_ == null ? com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate.getDefaultInstance() : event_;
        } else {
          return eventBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * event the event stored.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
       */
      public Builder setEvent(com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
        } else {
          eventBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * event the event stored.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
       */
      public Builder setEvent(
          com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate.Builder builderForValue) {
        if (eventBuilder_ == null) {
          event_ = builderForValue.build();
        } else {
          eventBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * event the event stored.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
       */
      public Builder mergeEvent(com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate value) {
        if (eventBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            event_ != null &&
            event_ != com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate.getDefaultInstance()) {
            getEventBuilder().mergeFrom(value);
          } else {
            event_ = value;
          }
        } else {
          eventBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * event the event stored.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
       */
      public Builder clearEvent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        event_ = null;
        if (eventBuilder_ != null) {
          eventBuilder_.dispose();
          eventBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * event the event stored.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
       */
      public com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate.Builder getEventBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getEventFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * event the event stored.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
       */
      public com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdateOrBuilder getEventOrBuilder() {
        if (eventBuilder_ != null) {
          return eventBuilder_.getMessageOrBuilder();
        } else {
          return event_ == null ?
              com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate.getDefaultInstance() : event_;
        }
      }
      /**
       * <pre>
       * event the event stored.
       * </pre>
       *
       * <code>.babylon.btcstaking.v1.EventPowerDistUpdate event = 3 [json_name = "event"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate, com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate.Builder, com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdateOrBuilder> 
          getEventFieldBuilder() {
        if (eventBuilder_ == null) {
          eventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate, com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdate.Builder, com.babylon.btcstaking.v1.EventsProto.EventPowerDistUpdateOrBuilder>(
                  getEvent(),
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        return eventBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.btcstaking.v1.EventIndex)
    }

    // @@protoc_insertion_point(class_scope:babylon.btcstaking.v1.EventIndex)
    private static final com.babylon.btcstaking.v1.GenesisProto.EventIndex DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.btcstaking.v1.GenesisProto.EventIndex();
    }

    public static com.babylon.btcstaking.v1.GenesisProto.EventIndex getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventIndex>
        PARSER = new com.google.protobuf.AbstractParser<EventIndex>() {
      @java.lang.Override
      public EventIndex parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EventIndex> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventIndex> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.btcstaking.v1.GenesisProto.EventIndex getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_btcstaking_v1_GenesisState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_btcstaking_v1_GenesisState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_btcstaking_v1_BlockHeightBbnToBtc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_btcstaking_v1_BlockHeightBbnToBtc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_btcstaking_v1_BTCDelegator_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_btcstaking_v1_BTCDelegator_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_btcstaking_v1_EventIndex_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_btcstaking_v1_EventIndex_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#babylon/btcstaking/v1/genesis.proto\022\025b" +
      "abylon.btcstaking.v1\032\024gogoproto/gogo.pro" +
      "to\032\"babylon/btcstaking/v1/params.proto\032&" +
      "babylon/btcstaking/v1/btcstaking.proto\032\"" +
      "babylon/btcstaking/v1/events.proto\"\317\003\n\014G" +
      "enesisState\0225\n\006params\030\001 \003(\0132\035.babylon.bt" +
      "cstaking.v1.ParamsR\006params\022V\n\022finality_p" +
      "roviders\030\002 \003(\0132\'.babylon.btcstaking.v1.F" +
      "inalityProviderR\021finalityProviders\022M\n\017bt" +
      "c_delegations\030\003 \003(\0132$.babylon.btcstaking" +
      ".v1.BTCDelegationR\016btcDelegations\022Z\n\023blo" +
      "ck_height_chains\030\005 \003(\0132*.babylon.btcstak" +
      "ing.v1.BlockHeightBbnToBtcR\021blockHeightC" +
      "hains\022J\n\016btc_delegators\030\006 \003(\0132#.babylon." +
      "btcstaking.v1.BTCDelegatorR\rbtcDelegator" +
      "s\0229\n\006events\030\007 \003(\0132!.babylon.btcstaking.v" +
      "1.EventIndexR\006events\"i\n\023BlockHeightBbnTo" +
      "Btc\022(\n\020block_height_bbn\030\001 \001(\004R\016blockHeig" +
      "htBbn\022(\n\020block_height_btc\030\002 \001(\rR\016blockHe" +
      "ightBtc\"\202\002\n\014BTCDelegator\022D\n\003idx\030\001 \001(\01322." +
      "babylon.btcstaking.v1.BTCDelegatorDelega" +
      "tionIndexR\003idx\022T\n\tfp_btc_pk\030\002 \001(\014B8\332\336\0374g" +
      "ithub.com/babylonlabs-io/babylon/types.B" +
      "IP340PubKeyR\007fpBtcPk\022V\n\ndel_btc_pk\030\003 \001(\014" +
      "B8\332\336\0374github.com/babylonlabs-io/babylon/" +
      "types.BIP340PubKeyR\010delBtcPk\"\213\001\n\nEventIn" +
      "dex\022\020\n\003idx\030\001 \001(\004R\003idx\022(\n\020block_height_bt" +
      "c\030\002 \001(\rR\016blockHeightBtc\022A\n\005event\030\003 \001(\0132+" +
      ".babylon.btcstaking.v1.EventPowerDistUpd" +
      "ateR\005eventB\323\001\n\031com.babylon.btcstaking.v1" +
      "B\014GenesisProtoZ4github.com/babylonlabs-i" +
      "o/babylon/x/btcstaking/types\242\002\003BBX\252\002\025Bab" +
      "ylon.Btcstaking.V1\312\002\025Babylon\\Btcstaking\\" +
      "V1\342\002!Babylon\\Btcstaking\\V1\\GPBMetadata\352\002" +
      "\027Babylon::Btcstaking::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.babylon.btcstaking.v1.ParamsProto.getDescriptor(),
          com.babylon.btcstaking.v1.BtcstakingProto.getDescriptor(),
          com.babylon.btcstaking.v1.EventsProto.getDescriptor(),
        });
    internal_static_babylon_btcstaking_v1_GenesisState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_babylon_btcstaking_v1_GenesisState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_btcstaking_v1_GenesisState_descriptor,
        new java.lang.String[] { "Params", "FinalityProviders", "BtcDelegations", "BlockHeightChains", "BtcDelegators", "Events", });
    internal_static_babylon_btcstaking_v1_BlockHeightBbnToBtc_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_babylon_btcstaking_v1_BlockHeightBbnToBtc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_btcstaking_v1_BlockHeightBbnToBtc_descriptor,
        new java.lang.String[] { "BlockHeightBbn", "BlockHeightBtc", });
    internal_static_babylon_btcstaking_v1_BTCDelegator_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_babylon_btcstaking_v1_BTCDelegator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_btcstaking_v1_BTCDelegator_descriptor,
        new java.lang.String[] { "Idx", "FpBtcPk", "DelBtcPk", });
    internal_static_babylon_btcstaking_v1_EventIndex_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_babylon_btcstaking_v1_EventIndex_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_btcstaking_v1_EventIndex_descriptor,
        new java.lang.String[] { "Idx", "BlockHeightBtc", "Event", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customtype);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.babylon.btcstaking.v1.ParamsProto.getDescriptor();
    com.babylon.btcstaking.v1.BtcstakingProto.getDescriptor();
    com.babylon.btcstaking.v1.EventsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

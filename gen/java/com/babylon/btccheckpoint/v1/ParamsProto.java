// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: babylon/btccheckpoint/v1/params.proto

package com.babylon.btccheckpoint.v1;

public final class ParamsProto {
  private ParamsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.btccheckpoint.v1.Params)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * btc_confirmation_depth is the confirmation depth in BTC.
     * A block is considered irreversible only when it is at least k-deep in BTC
     * (k in research paper)
     * </pre>
     *
     * <code>uint64 btc_confirmation_depth = 1 [json_name = "btcConfirmationDepth", (.gogoproto.moretags) = "yaml:&#92;"btc_confirmation_depth&#92;""];</code>
     * @return The btcConfirmationDepth.
     */
    long getBtcConfirmationDepth();

    /**
     * <pre>
     * checkpoint_finalization_timeout is the maximum time window (measured in BTC
     * blocks) between a checkpoint
     * - being submitted to BTC, and
     * - being reported back to BBN
     * If a checkpoint has not been reported back within w BTC blocks, then BBN
     * has dishonest majority and is stalling checkpoints (w in research paper)
     * </pre>
     *
     * <code>uint64 checkpoint_finalization_timeout = 2 [json_name = "checkpointFinalizationTimeout", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_finalization_timeout&#92;""];</code>
     * @return The checkpointFinalizationTimeout.
     */
    long getCheckpointFinalizationTimeout();

    /**
     * <pre>
     * 4byte tag in hex format, required to be present in the OP_RETURN transaction
     * related to babylon
     * </pre>
     *
     * <code>string checkpoint_tag = 3 [json_name = "checkpointTag", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_tag&#92;""];</code>
     * @return The checkpointTag.
     */
    java.lang.String getCheckpointTag();
    /**
     * <pre>
     * 4byte tag in hex format, required to be present in the OP_RETURN transaction
     * related to babylon
     * </pre>
     *
     * <code>string checkpoint_tag = 3 [json_name = "checkpointTag", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_tag&#92;""];</code>
     * @return The bytes for checkpointTag.
     */
    com.google.protobuf.ByteString
        getCheckpointTagBytes();
  }
  /**
   * <pre>
   * Params defines the parameters for the module.
   * </pre>
   *
   * Protobuf type {@code babylon.btccheckpoint.v1.Params}
   */
  public static final class Params extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.btccheckpoint.v1.Params)
      ParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Params.newBuilder() to construct.
    private Params(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Params() {
      checkpointTag_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Params();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.btccheckpoint.v1.ParamsProto.internal_static_babylon_btccheckpoint_v1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.btccheckpoint.v1.ParamsProto.internal_static_babylon_btccheckpoint_v1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.btccheckpoint.v1.ParamsProto.Params.class, com.babylon.btccheckpoint.v1.ParamsProto.Params.Builder.class);
    }

    public static final int BTC_CONFIRMATION_DEPTH_FIELD_NUMBER = 1;
    private long btcConfirmationDepth_ = 0L;
    /**
     * <pre>
     * btc_confirmation_depth is the confirmation depth in BTC.
     * A block is considered irreversible only when it is at least k-deep in BTC
     * (k in research paper)
     * </pre>
     *
     * <code>uint64 btc_confirmation_depth = 1 [json_name = "btcConfirmationDepth", (.gogoproto.moretags) = "yaml:&#92;"btc_confirmation_depth&#92;""];</code>
     * @return The btcConfirmationDepth.
     */
    @java.lang.Override
    public long getBtcConfirmationDepth() {
      return btcConfirmationDepth_;
    }

    public static final int CHECKPOINT_FINALIZATION_TIMEOUT_FIELD_NUMBER = 2;
    private long checkpointFinalizationTimeout_ = 0L;
    /**
     * <pre>
     * checkpoint_finalization_timeout is the maximum time window (measured in BTC
     * blocks) between a checkpoint
     * - being submitted to BTC, and
     * - being reported back to BBN
     * If a checkpoint has not been reported back within w BTC blocks, then BBN
     * has dishonest majority and is stalling checkpoints (w in research paper)
     * </pre>
     *
     * <code>uint64 checkpoint_finalization_timeout = 2 [json_name = "checkpointFinalizationTimeout", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_finalization_timeout&#92;""];</code>
     * @return The checkpointFinalizationTimeout.
     */
    @java.lang.Override
    public long getCheckpointFinalizationTimeout() {
      return checkpointFinalizationTimeout_;
    }

    public static final int CHECKPOINT_TAG_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object checkpointTag_ = "";
    /**
     * <pre>
     * 4byte tag in hex format, required to be present in the OP_RETURN transaction
     * related to babylon
     * </pre>
     *
     * <code>string checkpoint_tag = 3 [json_name = "checkpointTag", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_tag&#92;""];</code>
     * @return The checkpointTag.
     */
    @java.lang.Override
    public java.lang.String getCheckpointTag() {
      java.lang.Object ref = checkpointTag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        checkpointTag_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 4byte tag in hex format, required to be present in the OP_RETURN transaction
     * related to babylon
     * </pre>
     *
     * <code>string checkpoint_tag = 3 [json_name = "checkpointTag", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_tag&#92;""];</code>
     * @return The bytes for checkpointTag.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCheckpointTagBytes() {
      java.lang.Object ref = checkpointTag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        checkpointTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (btcConfirmationDepth_ != 0L) {
        output.writeUInt64(1, btcConfirmationDepth_);
      }
      if (checkpointFinalizationTimeout_ != 0L) {
        output.writeUInt64(2, checkpointFinalizationTimeout_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(checkpointTag_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, checkpointTag_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (btcConfirmationDepth_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, btcConfirmationDepth_);
      }
      if (checkpointFinalizationTimeout_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, checkpointFinalizationTimeout_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(checkpointTag_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, checkpointTag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.btccheckpoint.v1.ParamsProto.Params)) {
        return super.equals(obj);
      }
      com.babylon.btccheckpoint.v1.ParamsProto.Params other = (com.babylon.btccheckpoint.v1.ParamsProto.Params) obj;

      if (getBtcConfirmationDepth()
          != other.getBtcConfirmationDepth()) return false;
      if (getCheckpointFinalizationTimeout()
          != other.getCheckpointFinalizationTimeout()) return false;
      if (!getCheckpointTag()
          .equals(other.getCheckpointTag())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BTC_CONFIRMATION_DEPTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBtcConfirmationDepth());
      hash = (37 * hash) + CHECKPOINT_FINALIZATION_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCheckpointFinalizationTimeout());
      hash = (37 * hash) + CHECKPOINT_TAG_FIELD_NUMBER;
      hash = (53 * hash) + getCheckpointTag().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.btccheckpoint.v1.ParamsProto.Params parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btccheckpoint.v1.ParamsProto.Params parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btccheckpoint.v1.ParamsProto.Params parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btccheckpoint.v1.ParamsProto.Params parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btccheckpoint.v1.ParamsProto.Params parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.btccheckpoint.v1.ParamsProto.Params parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.btccheckpoint.v1.ParamsProto.Params parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btccheckpoint.v1.ParamsProto.Params parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.btccheckpoint.v1.ParamsProto.Params parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.btccheckpoint.v1.ParamsProto.Params parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.btccheckpoint.v1.ParamsProto.Params parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.btccheckpoint.v1.ParamsProto.Params parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.btccheckpoint.v1.ParamsProto.Params prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Params defines the parameters for the module.
     * </pre>
     *
     * Protobuf type {@code babylon.btccheckpoint.v1.Params}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.btccheckpoint.v1.Params)
        com.babylon.btccheckpoint.v1.ParamsProto.ParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.btccheckpoint.v1.ParamsProto.internal_static_babylon_btccheckpoint_v1_Params_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.btccheckpoint.v1.ParamsProto.internal_static_babylon_btccheckpoint_v1_Params_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.btccheckpoint.v1.ParamsProto.Params.class, com.babylon.btccheckpoint.v1.ParamsProto.Params.Builder.class);
      }

      // Construct using com.babylon.btccheckpoint.v1.ParamsProto.Params.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        btcConfirmationDepth_ = 0L;
        checkpointFinalizationTimeout_ = 0L;
        checkpointTag_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.btccheckpoint.v1.ParamsProto.internal_static_babylon_btccheckpoint_v1_Params_descriptor;
      }

      @java.lang.Override
      public com.babylon.btccheckpoint.v1.ParamsProto.Params getDefaultInstanceForType() {
        return com.babylon.btccheckpoint.v1.ParamsProto.Params.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.btccheckpoint.v1.ParamsProto.Params build() {
        com.babylon.btccheckpoint.v1.ParamsProto.Params result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.btccheckpoint.v1.ParamsProto.Params buildPartial() {
        com.babylon.btccheckpoint.v1.ParamsProto.Params result = new com.babylon.btccheckpoint.v1.ParamsProto.Params(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.babylon.btccheckpoint.v1.ParamsProto.Params result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.btcConfirmationDepth_ = btcConfirmationDepth_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.checkpointFinalizationTimeout_ = checkpointFinalizationTimeout_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.checkpointTag_ = checkpointTag_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.btccheckpoint.v1.ParamsProto.Params) {
          return mergeFrom((com.babylon.btccheckpoint.v1.ParamsProto.Params)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.btccheckpoint.v1.ParamsProto.Params other) {
        if (other == com.babylon.btccheckpoint.v1.ParamsProto.Params.getDefaultInstance()) return this;
        if (other.getBtcConfirmationDepth() != 0L) {
          setBtcConfirmationDepth(other.getBtcConfirmationDepth());
        }
        if (other.getCheckpointFinalizationTimeout() != 0L) {
          setCheckpointFinalizationTimeout(other.getCheckpointFinalizationTimeout());
        }
        if (!other.getCheckpointTag().isEmpty()) {
          checkpointTag_ = other.checkpointTag_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                btcConfirmationDepth_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                checkpointFinalizationTimeout_ = input.readUInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                checkpointTag_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long btcConfirmationDepth_ ;
      /**
       * <pre>
       * btc_confirmation_depth is the confirmation depth in BTC.
       * A block is considered irreversible only when it is at least k-deep in BTC
       * (k in research paper)
       * </pre>
       *
       * <code>uint64 btc_confirmation_depth = 1 [json_name = "btcConfirmationDepth", (.gogoproto.moretags) = "yaml:&#92;"btc_confirmation_depth&#92;""];</code>
       * @return The btcConfirmationDepth.
       */
      @java.lang.Override
      public long getBtcConfirmationDepth() {
        return btcConfirmationDepth_;
      }
      /**
       * <pre>
       * btc_confirmation_depth is the confirmation depth in BTC.
       * A block is considered irreversible only when it is at least k-deep in BTC
       * (k in research paper)
       * </pre>
       *
       * <code>uint64 btc_confirmation_depth = 1 [json_name = "btcConfirmationDepth", (.gogoproto.moretags) = "yaml:&#92;"btc_confirmation_depth&#92;""];</code>
       * @param value The btcConfirmationDepth to set.
       * @return This builder for chaining.
       */
      public Builder setBtcConfirmationDepth(long value) {

        btcConfirmationDepth_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * btc_confirmation_depth is the confirmation depth in BTC.
       * A block is considered irreversible only when it is at least k-deep in BTC
       * (k in research paper)
       * </pre>
       *
       * <code>uint64 btc_confirmation_depth = 1 [json_name = "btcConfirmationDepth", (.gogoproto.moretags) = "yaml:&#92;"btc_confirmation_depth&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearBtcConfirmationDepth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        btcConfirmationDepth_ = 0L;
        onChanged();
        return this;
      }

      private long checkpointFinalizationTimeout_ ;
      /**
       * <pre>
       * checkpoint_finalization_timeout is the maximum time window (measured in BTC
       * blocks) between a checkpoint
       * - being submitted to BTC, and
       * - being reported back to BBN
       * If a checkpoint has not been reported back within w BTC blocks, then BBN
       * has dishonest majority and is stalling checkpoints (w in research paper)
       * </pre>
       *
       * <code>uint64 checkpoint_finalization_timeout = 2 [json_name = "checkpointFinalizationTimeout", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_finalization_timeout&#92;""];</code>
       * @return The checkpointFinalizationTimeout.
       */
      @java.lang.Override
      public long getCheckpointFinalizationTimeout() {
        return checkpointFinalizationTimeout_;
      }
      /**
       * <pre>
       * checkpoint_finalization_timeout is the maximum time window (measured in BTC
       * blocks) between a checkpoint
       * - being submitted to BTC, and
       * - being reported back to BBN
       * If a checkpoint has not been reported back within w BTC blocks, then BBN
       * has dishonest majority and is stalling checkpoints (w in research paper)
       * </pre>
       *
       * <code>uint64 checkpoint_finalization_timeout = 2 [json_name = "checkpointFinalizationTimeout", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_finalization_timeout&#92;""];</code>
       * @param value The checkpointFinalizationTimeout to set.
       * @return This builder for chaining.
       */
      public Builder setCheckpointFinalizationTimeout(long value) {

        checkpointFinalizationTimeout_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * checkpoint_finalization_timeout is the maximum time window (measured in BTC
       * blocks) between a checkpoint
       * - being submitted to BTC, and
       * - being reported back to BBN
       * If a checkpoint has not been reported back within w BTC blocks, then BBN
       * has dishonest majority and is stalling checkpoints (w in research paper)
       * </pre>
       *
       * <code>uint64 checkpoint_finalization_timeout = 2 [json_name = "checkpointFinalizationTimeout", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_finalization_timeout&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearCheckpointFinalizationTimeout() {
        bitField0_ = (bitField0_ & ~0x00000002);
        checkpointFinalizationTimeout_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object checkpointTag_ = "";
      /**
       * <pre>
       * 4byte tag in hex format, required to be present in the OP_RETURN transaction
       * related to babylon
       * </pre>
       *
       * <code>string checkpoint_tag = 3 [json_name = "checkpointTag", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_tag&#92;""];</code>
       * @return The checkpointTag.
       */
      public java.lang.String getCheckpointTag() {
        java.lang.Object ref = checkpointTag_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          checkpointTag_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 4byte tag in hex format, required to be present in the OP_RETURN transaction
       * related to babylon
       * </pre>
       *
       * <code>string checkpoint_tag = 3 [json_name = "checkpointTag", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_tag&#92;""];</code>
       * @return The bytes for checkpointTag.
       */
      public com.google.protobuf.ByteString
          getCheckpointTagBytes() {
        java.lang.Object ref = checkpointTag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          checkpointTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 4byte tag in hex format, required to be present in the OP_RETURN transaction
       * related to babylon
       * </pre>
       *
       * <code>string checkpoint_tag = 3 [json_name = "checkpointTag", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_tag&#92;""];</code>
       * @param value The checkpointTag to set.
       * @return This builder for chaining.
       */
      public Builder setCheckpointTag(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        checkpointTag_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 4byte tag in hex format, required to be present in the OP_RETURN transaction
       * related to babylon
       * </pre>
       *
       * <code>string checkpoint_tag = 3 [json_name = "checkpointTag", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_tag&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearCheckpointTag() {
        checkpointTag_ = getDefaultInstance().getCheckpointTag();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 4byte tag in hex format, required to be present in the OP_RETURN transaction
       * related to babylon
       * </pre>
       *
       * <code>string checkpoint_tag = 3 [json_name = "checkpointTag", (.gogoproto.moretags) = "yaml:&#92;"checkpoint_tag&#92;""];</code>
       * @param value The bytes for checkpointTag to set.
       * @return This builder for chaining.
       */
      public Builder setCheckpointTagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        checkpointTag_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.btccheckpoint.v1.Params)
    }

    // @@protoc_insertion_point(class_scope:babylon.btccheckpoint.v1.Params)
    private static final com.babylon.btccheckpoint.v1.ParamsProto.Params DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.btccheckpoint.v1.ParamsProto.Params();
    }

    public static com.babylon.btccheckpoint.v1.ParamsProto.Params getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Params>
        PARSER = new com.google.protobuf.AbstractParser<Params>() {
      @java.lang.Override
      public Params parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Params> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Params> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.btccheckpoint.v1.ParamsProto.Params getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_btccheckpoint_v1_Params_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_btccheckpoint_v1_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%babylon/btccheckpoint/v1/params.proto\022" +
      "\030babylon.btccheckpoint.v1\032\024gogoproto/gog" +
      "o.proto\"\235\002\n\006Params\022W\n\026btc_confirmation_d" +
      "epth\030\001 \001(\004B!\362\336\037\035yaml:\"btc_confirmation_d" +
      "epth\"R\024btcConfirmationDepth\022r\n\037checkpoin" +
      "t_finalization_timeout\030\002 \001(\004B*\362\336\037&yaml:\"" +
      "checkpoint_finalization_timeout\"R\035checkp" +
      "ointFinalizationTimeout\022@\n\016checkpoint_ta" +
      "g\030\003 \001(\tB\031\362\336\037\025yaml:\"checkpoint_tag\"R\rchec" +
      "kpointTag:\004\350\240\037\001B\342\001\n\034com.babylon.btccheck" +
      "point.v1B\013ParamsProtoZ5github.com/babylo" +
      "nchain/babylon/x/btccheckpoint/types\242\002\003B" +
      "BX\252\002\030Babylon.Btccheckpoint.V1\312\002\030Babylon\\" +
      "Btccheckpoint\\V1\342\002$Babylon\\Btccheckpoint" +
      "\\V1\\GPBMetadata\352\002\032Babylon::Btccheckpoint" +
      "::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_babylon_btccheckpoint_v1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_babylon_btccheckpoint_v1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_btccheckpoint_v1_Params_descriptor,
        new java.lang.String[] { "BtcConfirmationDepth", "CheckpointFinalizationTimeout", "CheckpointTag", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.moretags);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

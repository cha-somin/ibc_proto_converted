// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: babylon/zoneconcierge/v1/zoneconcierge.proto

package com.babylon.zoneconcierge.v1;

public final class ZoneconciergeProto {
  private ZoneconciergeProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface IndexedHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.zoneconcierge.v1.IndexedHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * consumer_id is the unique ID of the consumer
     * </pre>
     *
     * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
     * @return The consumerId.
     */
    java.lang.String getConsumerId();
    /**
     * <pre>
     * consumer_id is the unique ID of the consumer
     * </pre>
     *
     * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
     * @return The bytes for consumerId.
     */
    com.google.protobuf.ByteString
        getConsumerIdBytes();

    /**
     * <pre>
     * hash is the hash of this header
     * </pre>
     *
     * <code>bytes hash = 2 [json_name = "hash"];</code>
     * @return The hash.
     */
    com.google.protobuf.ByteString getHash();

    /**
     * <pre>
     * height is the height of this header on CZ ledger
     * (hash, height) jointly provides the position of the header on CZ ledger
     * </pre>
     *
     * <code>uint64 height = 3 [json_name = "height"];</code>
     * @return The height.
     */
    long getHeight();

    /**
     * <pre>
     * time is the timestamp of this header on CZ ledger
     * it is needed for CZ to unbond all mature validators/delegations
     * before this timestamp when this header is BTC-finalised
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
     * @return Whether the time field is set.
     */
    boolean hasTime();
    /**
     * <pre>
     * time is the timestamp of this header on CZ ledger
     * it is needed for CZ to unbond all mature validators/delegations
     * before this timestamp when this header is BTC-finalised
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
     * @return The time.
     */
    com.google.protobuf.Timestamp getTime();
    /**
     * <pre>
     * time is the timestamp of this header on CZ ledger
     * it is needed for CZ to unbond all mature validators/delegations
     * before this timestamp when this header is BTC-finalised
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
     */
    com.google.protobuf.TimestampOrBuilder getTimeOrBuilder();

    /**
     * <pre>
     * babylon_header_hash is the hash of the babylon block that includes this CZ
     * header
     * </pre>
     *
     * <code>bytes babylon_header_hash = 5 [json_name = "babylonHeaderHash"];</code>
     * @return The babylonHeaderHash.
     */
    com.google.protobuf.ByteString getBabylonHeaderHash();

    /**
     * <pre>
     * babylon_header_height is the height of the babylon block that includes this CZ
     * header
     * </pre>
     *
     * <code>uint64 babylon_header_height = 6 [json_name = "babylonHeaderHeight"];</code>
     * @return The babylonHeaderHeight.
     */
    long getBabylonHeaderHeight();

    /**
     * <pre>
     * epoch is the epoch number of this header on Babylon ledger
     * </pre>
     *
     * <code>uint64 babylon_epoch = 7 [json_name = "babylonEpoch"];</code>
     * @return The babylonEpoch.
     */
    long getBabylonEpoch();

    /**
     * <pre>
     * babylon_tx_hash is the hash of the tx that includes this header
     * (babylon_block_height, babylon_tx_hash) jointly provides the position of
     * the header on Babylon ledger
     * </pre>
     *
     * <code>bytes babylon_tx_hash = 8 [json_name = "babylonTxHash"];</code>
     * @return The babylonTxHash.
     */
    com.google.protobuf.ByteString getBabylonTxHash();
  }
  /**
   * <pre>
   * IndexedHeader is the metadata of a CZ header
   * </pre>
   *
   * Protobuf type {@code babylon.zoneconcierge.v1.IndexedHeader}
   */
  public static final class IndexedHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.zoneconcierge.v1.IndexedHeader)
      IndexedHeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IndexedHeader.newBuilder() to construct.
    private IndexedHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IndexedHeader() {
      consumerId_ = "";
      hash_ = com.google.protobuf.ByteString.EMPTY;
      babylonHeaderHash_ = com.google.protobuf.ByteString.EMPTY;
      babylonTxHash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IndexedHeader();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_IndexedHeader_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_IndexedHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder.class);
    }

    public static final int CONSUMER_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object consumerId_ = "";
    /**
     * <pre>
     * consumer_id is the unique ID of the consumer
     * </pre>
     *
     * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
     * @return The consumerId.
     */
    @java.lang.Override
    public java.lang.String getConsumerId() {
      java.lang.Object ref = consumerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        consumerId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * consumer_id is the unique ID of the consumer
     * </pre>
     *
     * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
     * @return The bytes for consumerId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getConsumerIdBytes() {
      java.lang.Object ref = consumerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        consumerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * hash is the hash of this header
     * </pre>
     *
     * <code>bytes hash = 2 [json_name = "hash"];</code>
     * @return The hash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 3;
    private long height_ = 0L;
    /**
     * <pre>
     * height is the height of this header on CZ ledger
     * (hash, height) jointly provides the position of the header on CZ ledger
     * </pre>
     *
     * <code>uint64 height = 3 [json_name = "height"];</code>
     * @return The height.
     */
    @java.lang.Override
    public long getHeight() {
      return height_;
    }

    public static final int TIME_FIELD_NUMBER = 4;
    private com.google.protobuf.Timestamp time_;
    /**
     * <pre>
     * time is the timestamp of this header on CZ ledger
     * it is needed for CZ to unbond all mature validators/delegations
     * before this timestamp when this header is BTC-finalised
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
     * @return Whether the time field is set.
     */
    @java.lang.Override
    public boolean hasTime() {
      return time_ != null;
    }
    /**
     * <pre>
     * time is the timestamp of this header on CZ ledger
     * it is needed for CZ to unbond all mature validators/delegations
     * before this timestamp when this header is BTC-finalised
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
     * @return The time.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getTime() {
      return time_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : time_;
    }
    /**
     * <pre>
     * time is the timestamp of this header on CZ ledger
     * it is needed for CZ to unbond all mature validators/delegations
     * before this timestamp when this header is BTC-finalised
     * </pre>
     *
     * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getTimeOrBuilder() {
      return time_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : time_;
    }

    public static final int BABYLON_HEADER_HASH_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString babylonHeaderHash_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * babylon_header_hash is the hash of the babylon block that includes this CZ
     * header
     * </pre>
     *
     * <code>bytes babylon_header_hash = 5 [json_name = "babylonHeaderHash"];</code>
     * @return The babylonHeaderHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBabylonHeaderHash() {
      return babylonHeaderHash_;
    }

    public static final int BABYLON_HEADER_HEIGHT_FIELD_NUMBER = 6;
    private long babylonHeaderHeight_ = 0L;
    /**
     * <pre>
     * babylon_header_height is the height of the babylon block that includes this CZ
     * header
     * </pre>
     *
     * <code>uint64 babylon_header_height = 6 [json_name = "babylonHeaderHeight"];</code>
     * @return The babylonHeaderHeight.
     */
    @java.lang.Override
    public long getBabylonHeaderHeight() {
      return babylonHeaderHeight_;
    }

    public static final int BABYLON_EPOCH_FIELD_NUMBER = 7;
    private long babylonEpoch_ = 0L;
    /**
     * <pre>
     * epoch is the epoch number of this header on Babylon ledger
     * </pre>
     *
     * <code>uint64 babylon_epoch = 7 [json_name = "babylonEpoch"];</code>
     * @return The babylonEpoch.
     */
    @java.lang.Override
    public long getBabylonEpoch() {
      return babylonEpoch_;
    }

    public static final int BABYLON_TX_HASH_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString babylonTxHash_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * babylon_tx_hash is the hash of the tx that includes this header
     * (babylon_block_height, babylon_tx_hash) jointly provides the position of
     * the header on Babylon ledger
     * </pre>
     *
     * <code>bytes babylon_tx_hash = 8 [json_name = "babylonTxHash"];</code>
     * @return The babylonTxHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBabylonTxHash() {
      return babylonTxHash_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(consumerId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, consumerId_);
      }
      if (!hash_.isEmpty()) {
        output.writeBytes(2, hash_);
      }
      if (height_ != 0L) {
        output.writeUInt64(3, height_);
      }
      if (time_ != null) {
        output.writeMessage(4, getTime());
      }
      if (!babylonHeaderHash_.isEmpty()) {
        output.writeBytes(5, babylonHeaderHash_);
      }
      if (babylonHeaderHeight_ != 0L) {
        output.writeUInt64(6, babylonHeaderHeight_);
      }
      if (babylonEpoch_ != 0L) {
        output.writeUInt64(7, babylonEpoch_);
      }
      if (!babylonTxHash_.isEmpty()) {
        output.writeBytes(8, babylonTxHash_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(consumerId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, consumerId_);
      }
      if (!hash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, hash_);
      }
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, height_);
      }
      if (time_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTime());
      }
      if (!babylonHeaderHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, babylonHeaderHash_);
      }
      if (babylonHeaderHeight_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, babylonHeaderHeight_);
      }
      if (babylonEpoch_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, babylonEpoch_);
      }
      if (!babylonTxHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, babylonTxHash_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader)) {
        return super.equals(obj);
      }
      com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader other = (com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader) obj;

      if (!getConsumerId()
          .equals(other.getConsumerId())) return false;
      if (!getHash()
          .equals(other.getHash())) return false;
      if (getHeight()
          != other.getHeight()) return false;
      if (hasTime() != other.hasTime()) return false;
      if (hasTime()) {
        if (!getTime()
            .equals(other.getTime())) return false;
      }
      if (!getBabylonHeaderHash()
          .equals(other.getBabylonHeaderHash())) return false;
      if (getBabylonHeaderHeight()
          != other.getBabylonHeaderHeight()) return false;
      if (getBabylonEpoch()
          != other.getBabylonEpoch()) return false;
      if (!getBabylonTxHash()
          .equals(other.getBabylonTxHash())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONSUMER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getConsumerId().hashCode();
      hash = (37 * hash) + HASH_FIELD_NUMBER;
      hash = (53 * hash) + getHash().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeight());
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime().hashCode();
      }
      hash = (37 * hash) + BABYLON_HEADER_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getBabylonHeaderHash().hashCode();
      hash = (37 * hash) + BABYLON_HEADER_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBabylonHeaderHeight());
      hash = (37 * hash) + BABYLON_EPOCH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBabylonEpoch());
      hash = (37 * hash) + BABYLON_TX_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getBabylonTxHash().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IndexedHeader is the metadata of a CZ header
     * </pre>
     *
     * Protobuf type {@code babylon.zoneconcierge.v1.IndexedHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.zoneconcierge.v1.IndexedHeader)
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_IndexedHeader_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_IndexedHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder.class);
      }

      // Construct using com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        consumerId_ = "";
        hash_ = com.google.protobuf.ByteString.EMPTY;
        height_ = 0L;
        time_ = null;
        if (timeBuilder_ != null) {
          timeBuilder_.dispose();
          timeBuilder_ = null;
        }
        babylonHeaderHash_ = com.google.protobuf.ByteString.EMPTY;
        babylonHeaderHeight_ = 0L;
        babylonEpoch_ = 0L;
        babylonTxHash_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_IndexedHeader_descriptor;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader getDefaultInstanceForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader build() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader buildPartial() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader result = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.consumerId_ = consumerId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.hash_ = hash_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.height_ = height_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.time_ = timeBuilder_ == null
              ? time_
              : timeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.babylonHeaderHash_ = babylonHeaderHash_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.babylonHeaderHeight_ = babylonHeaderHeight_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.babylonEpoch_ = babylonEpoch_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.babylonTxHash_ = babylonTxHash_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader) {
          return mergeFrom((com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader other) {
        if (other == com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.getDefaultInstance()) return this;
        if (!other.getConsumerId().isEmpty()) {
          consumerId_ = other.consumerId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
          setHash(other.getHash());
        }
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        if (other.hasTime()) {
          mergeTime(other.getTime());
        }
        if (other.getBabylonHeaderHash() != com.google.protobuf.ByteString.EMPTY) {
          setBabylonHeaderHash(other.getBabylonHeaderHash());
        }
        if (other.getBabylonHeaderHeight() != 0L) {
          setBabylonHeaderHeight(other.getBabylonHeaderHeight());
        }
        if (other.getBabylonEpoch() != 0L) {
          setBabylonEpoch(other.getBabylonEpoch());
        }
        if (other.getBabylonTxHash() != com.google.protobuf.ByteString.EMPTY) {
          setBabylonTxHash(other.getBabylonTxHash());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                consumerId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                hash_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                height_ = input.readUInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                input.readMessage(
                    getTimeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                babylonHeaderHash_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 48: {
                babylonHeaderHeight_ = input.readUInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                babylonEpoch_ = input.readUInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 66: {
                babylonTxHash_ = input.readBytes();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object consumerId_ = "";
      /**
       * <pre>
       * consumer_id is the unique ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @return The consumerId.
       */
      public java.lang.String getConsumerId() {
        java.lang.Object ref = consumerId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          consumerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * consumer_id is the unique ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @return The bytes for consumerId.
       */
      public com.google.protobuf.ByteString
          getConsumerIdBytes() {
        java.lang.Object ref = consumerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          consumerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * consumer_id is the unique ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @param value The consumerId to set.
       * @return This builder for chaining.
       */
      public Builder setConsumerId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        consumerId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * consumer_id is the unique ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @return This builder for chaining.
       */
      public Builder clearConsumerId() {
        consumerId_ = getDefaultInstance().getConsumerId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * consumer_id is the unique ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @param value The bytes for consumerId to set.
       * @return This builder for chaining.
       */
      public Builder setConsumerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        consumerId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * hash is the hash of this header
       * </pre>
       *
       * <code>bytes hash = 2 [json_name = "hash"];</code>
       * @return The hash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getHash() {
        return hash_;
      }
      /**
       * <pre>
       * hash is the hash of this header
       * </pre>
       *
       * <code>bytes hash = 2 [json_name = "hash"];</code>
       * @param value The hash to set.
       * @return This builder for chaining.
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        hash_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hash is the hash of this header
       * </pre>
       *
       * <code>bytes hash = 2 [json_name = "hash"];</code>
       * @return This builder for chaining.
       */
      public Builder clearHash() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hash_ = getDefaultInstance().getHash();
        onChanged();
        return this;
      }

      private long height_ ;
      /**
       * <pre>
       * height is the height of this header on CZ ledger
       * (hash, height) jointly provides the position of the header on CZ ledger
       * </pre>
       *
       * <code>uint64 height = 3 [json_name = "height"];</code>
       * @return The height.
       */
      @java.lang.Override
      public long getHeight() {
        return height_;
      }
      /**
       * <pre>
       * height is the height of this header on CZ ledger
       * (hash, height) jointly provides the position of the header on CZ ledger
       * </pre>
       *
       * <code>uint64 height = 3 [json_name = "height"];</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(long value) {

        height_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * height is the height of this header on CZ ledger
       * (hash, height) jointly provides the position of the header on CZ ledger
       * </pre>
       *
       * <code>uint64 height = 3 [json_name = "height"];</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp time_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timeBuilder_;
      /**
       * <pre>
       * time is the timestamp of this header on CZ ledger
       * it is needed for CZ to unbond all mature validators/delegations
       * before this timestamp when this header is BTC-finalised
       * </pre>
       *
       * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
       * @return Whether the time field is set.
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * time is the timestamp of this header on CZ ledger
       * it is needed for CZ to unbond all mature validators/delegations
       * before this timestamp when this header is BTC-finalised
       * </pre>
       *
       * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
       * @return The time.
       */
      public com.google.protobuf.Timestamp getTime() {
        if (timeBuilder_ == null) {
          return time_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : time_;
        } else {
          return timeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * time is the timestamp of this header on CZ ledger
       * it is needed for CZ to unbond all mature validators/delegations
       * before this timestamp when this header is BTC-finalised
       * </pre>
       *
       * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
       */
      public Builder setTime(com.google.protobuf.Timestamp value) {
        if (timeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          time_ = value;
        } else {
          timeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * time is the timestamp of this header on CZ ledger
       * it is needed for CZ to unbond all mature validators/delegations
       * before this timestamp when this header is BTC-finalised
       * </pre>
       *
       * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
       */
      public Builder setTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (timeBuilder_ == null) {
          time_ = builderForValue.build();
        } else {
          timeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * time is the timestamp of this header on CZ ledger
       * it is needed for CZ to unbond all mature validators/delegations
       * before this timestamp when this header is BTC-finalised
       * </pre>
       *
       * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
       */
      public Builder mergeTime(com.google.protobuf.Timestamp value) {
        if (timeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            time_ != null &&
            time_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getTimeBuilder().mergeFrom(value);
          } else {
            time_ = value;
          }
        } else {
          timeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * time is the timestamp of this header on CZ ledger
       * it is needed for CZ to unbond all mature validators/delegations
       * before this timestamp when this header is BTC-finalised
       * </pre>
       *
       * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        time_ = null;
        if (timeBuilder_ != null) {
          timeBuilder_.dispose();
          timeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * time is the timestamp of this header on CZ ledger
       * it is needed for CZ to unbond all mature validators/delegations
       * before this timestamp when this header is BTC-finalised
       * </pre>
       *
       * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * time is the timestamp of this header on CZ ledger
       * it is needed for CZ to unbond all mature validators/delegations
       * before this timestamp when this header is BTC-finalised
       * </pre>
       *
       * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimeOrBuilder() {
        if (timeBuilder_ != null) {
          return timeBuilder_.getMessageOrBuilder();
        } else {
          return time_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : time_;
        }
      }
      /**
       * <pre>
       * time is the timestamp of this header on CZ ledger
       * it is needed for CZ to unbond all mature validators/delegations
       * before this timestamp when this header is BTC-finalised
       * </pre>
       *
       * <code>.google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.stdtime) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTimeFieldBuilder() {
        if (timeBuilder_ == null) {
          timeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTime(),
                  getParentForChildren(),
                  isClean());
          time_ = null;
        }
        return timeBuilder_;
      }

      private com.google.protobuf.ByteString babylonHeaderHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * babylon_header_hash is the hash of the babylon block that includes this CZ
       * header
       * </pre>
       *
       * <code>bytes babylon_header_hash = 5 [json_name = "babylonHeaderHash"];</code>
       * @return The babylonHeaderHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBabylonHeaderHash() {
        return babylonHeaderHash_;
      }
      /**
       * <pre>
       * babylon_header_hash is the hash of the babylon block that includes this CZ
       * header
       * </pre>
       *
       * <code>bytes babylon_header_hash = 5 [json_name = "babylonHeaderHash"];</code>
       * @param value The babylonHeaderHash to set.
       * @return This builder for chaining.
       */
      public Builder setBabylonHeaderHash(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        babylonHeaderHash_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * babylon_header_hash is the hash of the babylon block that includes this CZ
       * header
       * </pre>
       *
       * <code>bytes babylon_header_hash = 5 [json_name = "babylonHeaderHash"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBabylonHeaderHash() {
        bitField0_ = (bitField0_ & ~0x00000010);
        babylonHeaderHash_ = getDefaultInstance().getBabylonHeaderHash();
        onChanged();
        return this;
      }

      private long babylonHeaderHeight_ ;
      /**
       * <pre>
       * babylon_header_height is the height of the babylon block that includes this CZ
       * header
       * </pre>
       *
       * <code>uint64 babylon_header_height = 6 [json_name = "babylonHeaderHeight"];</code>
       * @return The babylonHeaderHeight.
       */
      @java.lang.Override
      public long getBabylonHeaderHeight() {
        return babylonHeaderHeight_;
      }
      /**
       * <pre>
       * babylon_header_height is the height of the babylon block that includes this CZ
       * header
       * </pre>
       *
       * <code>uint64 babylon_header_height = 6 [json_name = "babylonHeaderHeight"];</code>
       * @param value The babylonHeaderHeight to set.
       * @return This builder for chaining.
       */
      public Builder setBabylonHeaderHeight(long value) {

        babylonHeaderHeight_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * babylon_header_height is the height of the babylon block that includes this CZ
       * header
       * </pre>
       *
       * <code>uint64 babylon_header_height = 6 [json_name = "babylonHeaderHeight"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBabylonHeaderHeight() {
        bitField0_ = (bitField0_ & ~0x00000020);
        babylonHeaderHeight_ = 0L;
        onChanged();
        return this;
      }

      private long babylonEpoch_ ;
      /**
       * <pre>
       * epoch is the epoch number of this header on Babylon ledger
       * </pre>
       *
       * <code>uint64 babylon_epoch = 7 [json_name = "babylonEpoch"];</code>
       * @return The babylonEpoch.
       */
      @java.lang.Override
      public long getBabylonEpoch() {
        return babylonEpoch_;
      }
      /**
       * <pre>
       * epoch is the epoch number of this header on Babylon ledger
       * </pre>
       *
       * <code>uint64 babylon_epoch = 7 [json_name = "babylonEpoch"];</code>
       * @param value The babylonEpoch to set.
       * @return This builder for chaining.
       */
      public Builder setBabylonEpoch(long value) {

        babylonEpoch_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * epoch is the epoch number of this header on Babylon ledger
       * </pre>
       *
       * <code>uint64 babylon_epoch = 7 [json_name = "babylonEpoch"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBabylonEpoch() {
        bitField0_ = (bitField0_ & ~0x00000040);
        babylonEpoch_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString babylonTxHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * babylon_tx_hash is the hash of the tx that includes this header
       * (babylon_block_height, babylon_tx_hash) jointly provides the position of
       * the header on Babylon ledger
       * </pre>
       *
       * <code>bytes babylon_tx_hash = 8 [json_name = "babylonTxHash"];</code>
       * @return The babylonTxHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBabylonTxHash() {
        return babylonTxHash_;
      }
      /**
       * <pre>
       * babylon_tx_hash is the hash of the tx that includes this header
       * (babylon_block_height, babylon_tx_hash) jointly provides the position of
       * the header on Babylon ledger
       * </pre>
       *
       * <code>bytes babylon_tx_hash = 8 [json_name = "babylonTxHash"];</code>
       * @param value The babylonTxHash to set.
       * @return This builder for chaining.
       */
      public Builder setBabylonTxHash(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        babylonTxHash_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * babylon_tx_hash is the hash of the tx that includes this header
       * (babylon_block_height, babylon_tx_hash) jointly provides the position of
       * the header on Babylon ledger
       * </pre>
       *
       * <code>bytes babylon_tx_hash = 8 [json_name = "babylonTxHash"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBabylonTxHash() {
        bitField0_ = (bitField0_ & ~0x00000080);
        babylonTxHash_ = getDefaultInstance().getBabylonTxHash();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.zoneconcierge.v1.IndexedHeader)
    }

    // @@protoc_insertion_point(class_scope:babylon.zoneconcierge.v1.IndexedHeader)
    private static final com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader();
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IndexedHeader>
        PARSER = new com.google.protobuf.AbstractParser<IndexedHeader>() {
      @java.lang.Override
      public IndexedHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IndexedHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IndexedHeader> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ForksOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.zoneconcierge.v1.Forks)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * blocks is the list of non-canonical indexed headers at the same height
     * </pre>
     *
     * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
     */
    java.util.List<com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader> 
        getHeadersList();
    /**
     * <pre>
     * blocks is the list of non-canonical indexed headers at the same height
     * </pre>
     *
     * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader getHeaders(int index);
    /**
     * <pre>
     * blocks is the list of non-canonical indexed headers at the same height
     * </pre>
     *
     * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
     */
    int getHeadersCount();
    /**
     * <pre>
     * blocks is the list of non-canonical indexed headers at the same height
     * </pre>
     *
     * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
     */
    java.util.List<? extends com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder> 
        getHeadersOrBuilderList();
    /**
     * <pre>
     * blocks is the list of non-canonical indexed headers at the same height
     * </pre>
     *
     * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder getHeadersOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Forks is a list of non-canonical `IndexedHeader`s at the same height.
   * For example, assuming the following blockchain
   * ```
   * A &lt;- B &lt;- C &lt;- D &lt;- E
   *            &#92; -- D1
   *            &#92; -- D2
   * ```
   * Then the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.
   *
   * Note that each `IndexedHeader` in the fork should have a valid quorum
   * certificate. Such forks exist since Babylon considers CZs might have
   * dishonest majority. Also note that the IBC-Go implementation will only
   * consider the first header in a fork valid, since the subsequent headers
   * cannot be verified without knowing the validator set in the previous header.
   * </pre>
   *
   * Protobuf type {@code babylon.zoneconcierge.v1.Forks}
   */
  public static final class Forks extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.zoneconcierge.v1.Forks)
      ForksOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Forks.newBuilder() to construct.
    private Forks(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Forks() {
      headers_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Forks();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_Forks_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_Forks_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.Builder.class);
    }

    public static final int HEADERS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader> headers_;
    /**
     * <pre>
     * blocks is the list of non-canonical indexed headers at the same height
     * </pre>
     *
     * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
     */
    @java.lang.Override
    public java.util.List<com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader> getHeadersList() {
      return headers_;
    }
    /**
     * <pre>
     * blocks is the list of non-canonical indexed headers at the same height
     * </pre>
     *
     * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder> 
        getHeadersOrBuilderList() {
      return headers_;
    }
    /**
     * <pre>
     * blocks is the list of non-canonical indexed headers at the same height
     * </pre>
     *
     * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
     */
    @java.lang.Override
    public int getHeadersCount() {
      return headers_.size();
    }
    /**
     * <pre>
     * blocks is the list of non-canonical indexed headers at the same height
     * </pre>
     *
     * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader getHeaders(int index) {
      return headers_.get(index);
    }
    /**
     * <pre>
     * blocks is the list of non-canonical indexed headers at the same height
     * </pre>
     *
     * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder getHeadersOrBuilder(
        int index) {
      return headers_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < headers_.size(); i++) {
        output.writeMessage(3, headers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < headers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, headers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks)) {
        return super.equals(obj);
      }
      com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks other = (com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks) obj;

      if (!getHeadersList()
          .equals(other.getHeadersList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getHeadersCount() > 0) {
        hash = (37 * hash) + HEADERS_FIELD_NUMBER;
        hash = (53 * hash) + getHeadersList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Forks is a list of non-canonical `IndexedHeader`s at the same height.
     * For example, assuming the following blockchain
     * ```
     * A &lt;- B &lt;- C &lt;- D &lt;- E
     *            &#92; -- D1
     *            &#92; -- D2
     * ```
     * Then the fork will be {[D1, D2]} where each item is in struct `IndexedBlock`.
     *
     * Note that each `IndexedHeader` in the fork should have a valid quorum
     * certificate. Such forks exist since Babylon considers CZs might have
     * dishonest majority. Also note that the IBC-Go implementation will only
     * consider the first header in a fork valid, since the subsequent headers
     * cannot be verified without knowing the validator set in the previous header.
     * </pre>
     *
     * Protobuf type {@code babylon.zoneconcierge.v1.Forks}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.zoneconcierge.v1.Forks)
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ForksOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_Forks_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_Forks_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.Builder.class);
      }

      // Construct using com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (headersBuilder_ == null) {
          headers_ = java.util.Collections.emptyList();
        } else {
          headers_ = null;
          headersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_Forks_descriptor;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks getDefaultInstanceForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks build() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks buildPartial() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks result = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks result) {
        if (headersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            headers_ = java.util.Collections.unmodifiableList(headers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.headers_ = headers_;
        } else {
          result.headers_ = headersBuilder_.build();
        }
      }

      private void buildPartial0(com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks) {
          return mergeFrom((com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks other) {
        if (other == com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.getDefaultInstance()) return this;
        if (headersBuilder_ == null) {
          if (!other.headers_.isEmpty()) {
            if (headers_.isEmpty()) {
              headers_ = other.headers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHeadersIsMutable();
              headers_.addAll(other.headers_);
            }
            onChanged();
          }
        } else {
          if (!other.headers_.isEmpty()) {
            if (headersBuilder_.isEmpty()) {
              headersBuilder_.dispose();
              headersBuilder_ = null;
              headers_ = other.headers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              headersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHeadersFieldBuilder() : null;
            } else {
              headersBuilder_.addAllMessages(other.headers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 26: {
                com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader m =
                    input.readMessage(
                        com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.parser(),
                        extensionRegistry);
                if (headersBuilder_ == null) {
                  ensureHeadersIsMutable();
                  headers_.add(m);
                } else {
                  headersBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader> headers_ =
        java.util.Collections.emptyList();
      private void ensureHeadersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          headers_ = new java.util.ArrayList<com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader>(headers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder> headersBuilder_;

      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public java.util.List<com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader> getHeadersList() {
        if (headersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(headers_);
        } else {
          return headersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public int getHeadersCount() {
        if (headersBuilder_ == null) {
          return headers_.size();
        } else {
          return headersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader getHeaders(int index) {
        if (headersBuilder_ == null) {
          return headers_.get(index);
        } else {
          return headersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public Builder setHeaders(
          int index, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader value) {
        if (headersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadersIsMutable();
          headers_.set(index, value);
          onChanged();
        } else {
          headersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public Builder setHeaders(
          int index, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder builderForValue) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          headers_.set(index, builderForValue.build());
          onChanged();
        } else {
          headersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public Builder addHeaders(com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader value) {
        if (headersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadersIsMutable();
          headers_.add(value);
          onChanged();
        } else {
          headersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public Builder addHeaders(
          int index, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader value) {
        if (headersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadersIsMutable();
          headers_.add(index, value);
          onChanged();
        } else {
          headersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public Builder addHeaders(
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder builderForValue) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          headers_.add(builderForValue.build());
          onChanged();
        } else {
          headersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public Builder addHeaders(
          int index, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder builderForValue) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          headers_.add(index, builderForValue.build());
          onChanged();
        } else {
          headersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public Builder addAllHeaders(
          java.lang.Iterable<? extends com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader> values) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, headers_);
          onChanged();
        } else {
          headersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public Builder clearHeaders() {
        if (headersBuilder_ == null) {
          headers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          headersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public Builder removeHeaders(int index) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          headers_.remove(index);
          onChanged();
        } else {
          headersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder getHeadersBuilder(
          int index) {
        return getHeadersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder getHeadersOrBuilder(
          int index) {
        if (headersBuilder_ == null) {
          return headers_.get(index);  } else {
          return headersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public java.util.List<? extends com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder> 
           getHeadersOrBuilderList() {
        if (headersBuilder_ != null) {
          return headersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(headers_);
        }
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder addHeadersBuilder() {
        return getHeadersFieldBuilder().addBuilder(
            com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.getDefaultInstance());
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder addHeadersBuilder(
          int index) {
        return getHeadersFieldBuilder().addBuilder(
            index, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.getDefaultInstance());
      }
      /**
       * <pre>
       * blocks is the list of non-canonical indexed headers at the same height
       * </pre>
       *
       * <code>repeated .babylon.zoneconcierge.v1.IndexedHeader headers = 3 [json_name = "headers"];</code>
       */
      public java.util.List<com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder> 
           getHeadersBuilderList() {
        return getHeadersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder> 
          getHeadersFieldBuilder() {
        if (headersBuilder_ == null) {
          headersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder>(
                  headers_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          headers_ = null;
        }
        return headersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.zoneconcierge.v1.Forks)
    }

    // @@protoc_insertion_point(class_scope:babylon.zoneconcierge.v1.Forks)
    private static final com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks();
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Forks>
        PARSER = new com.google.protobuf.AbstractParser<Forks>() {
      @java.lang.Override
      public Forks parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Forks> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Forks> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChainInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.zoneconcierge.v1.ChainInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * consumer_id is the ID of the consumer
     * </pre>
     *
     * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
     * @return The consumerId.
     */
    java.lang.String getConsumerId();
    /**
     * <pre>
     * consumer_id is the ID of the consumer
     * </pre>
     *
     * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
     * @return The bytes for consumerId.
     */
    com.google.protobuf.ByteString
        getConsumerIdBytes();

    /**
     * <pre>
     * latest_header is the latest header in CZ's canonical chain
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
     * @return Whether the latestHeader field is set.
     */
    boolean hasLatestHeader();
    /**
     * <pre>
     * latest_header is the latest header in CZ's canonical chain
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
     * @return The latestHeader.
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader getLatestHeader();
    /**
     * <pre>
     * latest_header is the latest header in CZ's canonical chain
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder getLatestHeaderOrBuilder();

    /**
     * <pre>
     * latest_forks is the latest forks, formed as a series of IndexedHeader (from
     * low to high)
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
     * @return Whether the latestForks field is set.
     */
    boolean hasLatestForks();
    /**
     * <pre>
     * latest_forks is the latest forks, formed as a series of IndexedHeader (from
     * low to high)
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
     * @return The latestForks.
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks getLatestForks();
    /**
     * <pre>
     * latest_forks is the latest forks, formed as a series of IndexedHeader (from
     * low to high)
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.ForksOrBuilder getLatestForksOrBuilder();

    /**
     * <pre>
     * timestamped_headers_count is the number of timestamped headers in CZ's
     * canonical chain
     * </pre>
     *
     * <code>uint64 timestamped_headers_count = 4 [json_name = "timestampedHeadersCount"];</code>
     * @return The timestampedHeadersCount.
     */
    long getTimestampedHeadersCount();
  }
  /**
   * <pre>
   * ChainInfo is the information of a CZ
   * </pre>
   *
   * Protobuf type {@code babylon.zoneconcierge.v1.ChainInfo}
   */
  public static final class ChainInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.zoneconcierge.v1.ChainInfo)
      ChainInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChainInfo.newBuilder() to construct.
    private ChainInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChainInfo() {
      consumerId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChainInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ChainInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ChainInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.Builder.class);
    }

    public static final int CONSUMER_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object consumerId_ = "";
    /**
     * <pre>
     * consumer_id is the ID of the consumer
     * </pre>
     *
     * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
     * @return The consumerId.
     */
    @java.lang.Override
    public java.lang.String getConsumerId() {
      java.lang.Object ref = consumerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        consumerId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * consumer_id is the ID of the consumer
     * </pre>
     *
     * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
     * @return The bytes for consumerId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getConsumerIdBytes() {
      java.lang.Object ref = consumerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        consumerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LATEST_HEADER_FIELD_NUMBER = 2;
    private com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader latestHeader_;
    /**
     * <pre>
     * latest_header is the latest header in CZ's canonical chain
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
     * @return Whether the latestHeader field is set.
     */
    @java.lang.Override
    public boolean hasLatestHeader() {
      return latestHeader_ != null;
    }
    /**
     * <pre>
     * latest_header is the latest header in CZ's canonical chain
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
     * @return The latestHeader.
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader getLatestHeader() {
      return latestHeader_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.getDefaultInstance() : latestHeader_;
    }
    /**
     * <pre>
     * latest_header is the latest header in CZ's canonical chain
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder getLatestHeaderOrBuilder() {
      return latestHeader_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.getDefaultInstance() : latestHeader_;
    }

    public static final int LATEST_FORKS_FIELD_NUMBER = 3;
    private com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks latestForks_;
    /**
     * <pre>
     * latest_forks is the latest forks, formed as a series of IndexedHeader (from
     * low to high)
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
     * @return Whether the latestForks field is set.
     */
    @java.lang.Override
    public boolean hasLatestForks() {
      return latestForks_ != null;
    }
    /**
     * <pre>
     * latest_forks is the latest forks, formed as a series of IndexedHeader (from
     * low to high)
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
     * @return The latestForks.
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks getLatestForks() {
      return latestForks_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.getDefaultInstance() : latestForks_;
    }
    /**
     * <pre>
     * latest_forks is the latest forks, formed as a series of IndexedHeader (from
     * low to high)
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ForksOrBuilder getLatestForksOrBuilder() {
      return latestForks_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.getDefaultInstance() : latestForks_;
    }

    public static final int TIMESTAMPED_HEADERS_COUNT_FIELD_NUMBER = 4;
    private long timestampedHeadersCount_ = 0L;
    /**
     * <pre>
     * timestamped_headers_count is the number of timestamped headers in CZ's
     * canonical chain
     * </pre>
     *
     * <code>uint64 timestamped_headers_count = 4 [json_name = "timestampedHeadersCount"];</code>
     * @return The timestampedHeadersCount.
     */
    @java.lang.Override
    public long getTimestampedHeadersCount() {
      return timestampedHeadersCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(consumerId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, consumerId_);
      }
      if (latestHeader_ != null) {
        output.writeMessage(2, getLatestHeader());
      }
      if (latestForks_ != null) {
        output.writeMessage(3, getLatestForks());
      }
      if (timestampedHeadersCount_ != 0L) {
        output.writeUInt64(4, timestampedHeadersCount_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(consumerId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, consumerId_);
      }
      if (latestHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLatestHeader());
      }
      if (latestForks_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLatestForks());
      }
      if (timestampedHeadersCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, timestampedHeadersCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo)) {
        return super.equals(obj);
      }
      com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo other = (com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo) obj;

      if (!getConsumerId()
          .equals(other.getConsumerId())) return false;
      if (hasLatestHeader() != other.hasLatestHeader()) return false;
      if (hasLatestHeader()) {
        if (!getLatestHeader()
            .equals(other.getLatestHeader())) return false;
      }
      if (hasLatestForks() != other.hasLatestForks()) return false;
      if (hasLatestForks()) {
        if (!getLatestForks()
            .equals(other.getLatestForks())) return false;
      }
      if (getTimestampedHeadersCount()
          != other.getTimestampedHeadersCount()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONSUMER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getConsumerId().hashCode();
      if (hasLatestHeader()) {
        hash = (37 * hash) + LATEST_HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getLatestHeader().hashCode();
      }
      if (hasLatestForks()) {
        hash = (37 * hash) + LATEST_FORKS_FIELD_NUMBER;
        hash = (53 * hash) + getLatestForks().hashCode();
      }
      hash = (37 * hash) + TIMESTAMPED_HEADERS_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestampedHeadersCount());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ChainInfo is the information of a CZ
     * </pre>
     *
     * Protobuf type {@code babylon.zoneconcierge.v1.ChainInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.zoneconcierge.v1.ChainInfo)
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ChainInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ChainInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.Builder.class);
      }

      // Construct using com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        consumerId_ = "";
        latestHeader_ = null;
        if (latestHeaderBuilder_ != null) {
          latestHeaderBuilder_.dispose();
          latestHeaderBuilder_ = null;
        }
        latestForks_ = null;
        if (latestForksBuilder_ != null) {
          latestForksBuilder_.dispose();
          latestForksBuilder_ = null;
        }
        timestampedHeadersCount_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ChainInfo_descriptor;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo getDefaultInstanceForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo build() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo buildPartial() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo result = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.consumerId_ = consumerId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.latestHeader_ = latestHeaderBuilder_ == null
              ? latestHeader_
              : latestHeaderBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.latestForks_ = latestForksBuilder_ == null
              ? latestForks_
              : latestForksBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.timestampedHeadersCount_ = timestampedHeadersCount_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo) {
          return mergeFrom((com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo other) {
        if (other == com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.getDefaultInstance()) return this;
        if (!other.getConsumerId().isEmpty()) {
          consumerId_ = other.consumerId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasLatestHeader()) {
          mergeLatestHeader(other.getLatestHeader());
        }
        if (other.hasLatestForks()) {
          mergeLatestForks(other.getLatestForks());
        }
        if (other.getTimestampedHeadersCount() != 0L) {
          setTimestampedHeadersCount(other.getTimestampedHeadersCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                consumerId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getLatestHeaderFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getLatestForksFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                timestampedHeadersCount_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object consumerId_ = "";
      /**
       * <pre>
       * consumer_id is the ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @return The consumerId.
       */
      public java.lang.String getConsumerId() {
        java.lang.Object ref = consumerId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          consumerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * consumer_id is the ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @return The bytes for consumerId.
       */
      public com.google.protobuf.ByteString
          getConsumerIdBytes() {
        java.lang.Object ref = consumerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          consumerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * consumer_id is the ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @param value The consumerId to set.
       * @return This builder for chaining.
       */
      public Builder setConsumerId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        consumerId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * consumer_id is the ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @return This builder for chaining.
       */
      public Builder clearConsumerId() {
        consumerId_ = getDefaultInstance().getConsumerId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * consumer_id is the ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @param value The bytes for consumerId to set.
       * @return This builder for chaining.
       */
      public Builder setConsumerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        consumerId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader latestHeader_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder> latestHeaderBuilder_;
      /**
       * <pre>
       * latest_header is the latest header in CZ's canonical chain
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
       * @return Whether the latestHeader field is set.
       */
      public boolean hasLatestHeader() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * latest_header is the latest header in CZ's canonical chain
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
       * @return The latestHeader.
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader getLatestHeader() {
        if (latestHeaderBuilder_ == null) {
          return latestHeader_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.getDefaultInstance() : latestHeader_;
        } else {
          return latestHeaderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * latest_header is the latest header in CZ's canonical chain
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
       */
      public Builder setLatestHeader(com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader value) {
        if (latestHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          latestHeader_ = value;
        } else {
          latestHeaderBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * latest_header is the latest header in CZ's canonical chain
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
       */
      public Builder setLatestHeader(
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder builderForValue) {
        if (latestHeaderBuilder_ == null) {
          latestHeader_ = builderForValue.build();
        } else {
          latestHeaderBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * latest_header is the latest header in CZ's canonical chain
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
       */
      public Builder mergeLatestHeader(com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader value) {
        if (latestHeaderBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            latestHeader_ != null &&
            latestHeader_ != com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.getDefaultInstance()) {
            getLatestHeaderBuilder().mergeFrom(value);
          } else {
            latestHeader_ = value;
          }
        } else {
          latestHeaderBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * latest_header is the latest header in CZ's canonical chain
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
       */
      public Builder clearLatestHeader() {
        bitField0_ = (bitField0_ & ~0x00000002);
        latestHeader_ = null;
        if (latestHeaderBuilder_ != null) {
          latestHeaderBuilder_.dispose();
          latestHeaderBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * latest_header is the latest header in CZ's canonical chain
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder getLatestHeaderBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLatestHeaderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * latest_header is the latest header in CZ's canonical chain
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder getLatestHeaderOrBuilder() {
        if (latestHeaderBuilder_ != null) {
          return latestHeaderBuilder_.getMessageOrBuilder();
        } else {
          return latestHeader_ == null ?
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.getDefaultInstance() : latestHeader_;
        }
      }
      /**
       * <pre>
       * latest_header is the latest header in CZ's canonical chain
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.IndexedHeader latest_header = 2 [json_name = "latestHeader"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder> 
          getLatestHeaderFieldBuilder() {
        if (latestHeaderBuilder_ == null) {
          latestHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeader.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.IndexedHeaderOrBuilder>(
                  getLatestHeader(),
                  getParentForChildren(),
                  isClean());
          latestHeader_ = null;
        }
        return latestHeaderBuilder_;
      }

      private com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks latestForks_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks, com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ForksOrBuilder> latestForksBuilder_;
      /**
       * <pre>
       * latest_forks is the latest forks, formed as a series of IndexedHeader (from
       * low to high)
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
       * @return Whether the latestForks field is set.
       */
      public boolean hasLatestForks() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * latest_forks is the latest forks, formed as a series of IndexedHeader (from
       * low to high)
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
       * @return The latestForks.
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks getLatestForks() {
        if (latestForksBuilder_ == null) {
          return latestForks_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.getDefaultInstance() : latestForks_;
        } else {
          return latestForksBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * latest_forks is the latest forks, formed as a series of IndexedHeader (from
       * low to high)
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
       */
      public Builder setLatestForks(com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks value) {
        if (latestForksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          latestForks_ = value;
        } else {
          latestForksBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * latest_forks is the latest forks, formed as a series of IndexedHeader (from
       * low to high)
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
       */
      public Builder setLatestForks(
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.Builder builderForValue) {
        if (latestForksBuilder_ == null) {
          latestForks_ = builderForValue.build();
        } else {
          latestForksBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * latest_forks is the latest forks, formed as a series of IndexedHeader (from
       * low to high)
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
       */
      public Builder mergeLatestForks(com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks value) {
        if (latestForksBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            latestForks_ != null &&
            latestForks_ != com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.getDefaultInstance()) {
            getLatestForksBuilder().mergeFrom(value);
          } else {
            latestForks_ = value;
          }
        } else {
          latestForksBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * latest_forks is the latest forks, formed as a series of IndexedHeader (from
       * low to high)
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
       */
      public Builder clearLatestForks() {
        bitField0_ = (bitField0_ & ~0x00000004);
        latestForks_ = null;
        if (latestForksBuilder_ != null) {
          latestForksBuilder_.dispose();
          latestForksBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * latest_forks is the latest forks, formed as a series of IndexedHeader (from
       * low to high)
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.Builder getLatestForksBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getLatestForksFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * latest_forks is the latest forks, formed as a series of IndexedHeader (from
       * low to high)
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ForksOrBuilder getLatestForksOrBuilder() {
        if (latestForksBuilder_ != null) {
          return latestForksBuilder_.getMessageOrBuilder();
        } else {
          return latestForks_ == null ?
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.getDefaultInstance() : latestForks_;
        }
      }
      /**
       * <pre>
       * latest_forks is the latest forks, formed as a series of IndexedHeader (from
       * low to high)
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.Forks latest_forks = 3 [json_name = "latestForks"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks, com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ForksOrBuilder> 
          getLatestForksFieldBuilder() {
        if (latestForksBuilder_ == null) {
          latestForksBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks, com.babylon.zoneconcierge.v1.ZoneconciergeProto.Forks.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ForksOrBuilder>(
                  getLatestForks(),
                  getParentForChildren(),
                  isClean());
          latestForks_ = null;
        }
        return latestForksBuilder_;
      }

      private long timestampedHeadersCount_ ;
      /**
       * <pre>
       * timestamped_headers_count is the number of timestamped headers in CZ's
       * canonical chain
       * </pre>
       *
       * <code>uint64 timestamped_headers_count = 4 [json_name = "timestampedHeadersCount"];</code>
       * @return The timestampedHeadersCount.
       */
      @java.lang.Override
      public long getTimestampedHeadersCount() {
        return timestampedHeadersCount_;
      }
      /**
       * <pre>
       * timestamped_headers_count is the number of timestamped headers in CZ's
       * canonical chain
       * </pre>
       *
       * <code>uint64 timestamped_headers_count = 4 [json_name = "timestampedHeadersCount"];</code>
       * @param value The timestampedHeadersCount to set.
       * @return This builder for chaining.
       */
      public Builder setTimestampedHeadersCount(long value) {

        timestampedHeadersCount_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * timestamped_headers_count is the number of timestamped headers in CZ's
       * canonical chain
       * </pre>
       *
       * <code>uint64 timestamped_headers_count = 4 [json_name = "timestampedHeadersCount"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestampedHeadersCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timestampedHeadersCount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.zoneconcierge.v1.ChainInfo)
    }

    // @@protoc_insertion_point(class_scope:babylon.zoneconcierge.v1.ChainInfo)
    private static final com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo();
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChainInfo>
        PARSER = new com.google.protobuf.AbstractParser<ChainInfo>() {
      @java.lang.Override
      public ChainInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ChainInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChainInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChainInfoWithProofOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.zoneconcierge.v1.ChainInfoWithProof)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
     * @return Whether the chainInfo field is set.
     */
    boolean hasChainInfo();
    /**
     * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
     * @return The chainInfo.
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo getChainInfo();
    /**
     * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder getChainInfoOrBuilder();

    /**
     * <pre>
     * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
     * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
     * this field is optional
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
     * @return Whether the proofHeaderInEpoch field is set.
     */
    boolean hasProofHeaderInEpoch();
    /**
     * <pre>
     * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
     * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
     * this field is optional
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
     * @return The proofHeaderInEpoch.
     */
    com.tendermint.crypto.ProofProto.ProofOps getProofHeaderInEpoch();
    /**
     * <pre>
     * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
     * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
     * this field is optional
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
     */
    com.tendermint.crypto.ProofProto.ProofOpsOrBuilder getProofHeaderInEpochOrBuilder();
  }
  /**
   * <pre>
   * ChainInfoWithProof is the chain info with a proof that the latest header in
   * the chain info is included in the epoch
   * </pre>
   *
   * Protobuf type {@code babylon.zoneconcierge.v1.ChainInfoWithProof}
   */
  public static final class ChainInfoWithProof extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.zoneconcierge.v1.ChainInfoWithProof)
      ChainInfoWithProofOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChainInfoWithProof.newBuilder() to construct.
    private ChainInfoWithProof(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChainInfoWithProof() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChainInfoWithProof();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ChainInfoWithProof_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ChainInfoWithProof_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof.Builder.class);
    }

    public static final int CHAIN_INFO_FIELD_NUMBER = 1;
    private com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo chainInfo_;
    /**
     * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
     * @return Whether the chainInfo field is set.
     */
    @java.lang.Override
    public boolean hasChainInfo() {
      return chainInfo_ != null;
    }
    /**
     * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
     * @return The chainInfo.
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo getChainInfo() {
      return chainInfo_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.getDefaultInstance() : chainInfo_;
    }
    /**
     * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder getChainInfoOrBuilder() {
      return chainInfo_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.getDefaultInstance() : chainInfo_;
    }

    public static final int PROOF_HEADER_IN_EPOCH_FIELD_NUMBER = 2;
    private com.tendermint.crypto.ProofProto.ProofOps proofHeaderInEpoch_;
    /**
     * <pre>
     * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
     * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
     * this field is optional
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
     * @return Whether the proofHeaderInEpoch field is set.
     */
    @java.lang.Override
    public boolean hasProofHeaderInEpoch() {
      return proofHeaderInEpoch_ != null;
    }
    /**
     * <pre>
     * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
     * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
     * this field is optional
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
     * @return The proofHeaderInEpoch.
     */
    @java.lang.Override
    public com.tendermint.crypto.ProofProto.ProofOps getProofHeaderInEpoch() {
      return proofHeaderInEpoch_ == null ? com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofHeaderInEpoch_;
    }
    /**
     * <pre>
     * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
     * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
     * this field is optional
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
     */
    @java.lang.Override
    public com.tendermint.crypto.ProofProto.ProofOpsOrBuilder getProofHeaderInEpochOrBuilder() {
      return proofHeaderInEpoch_ == null ? com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofHeaderInEpoch_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (chainInfo_ != null) {
        output.writeMessage(1, getChainInfo());
      }
      if (proofHeaderInEpoch_ != null) {
        output.writeMessage(2, getProofHeaderInEpoch());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (chainInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getChainInfo());
      }
      if (proofHeaderInEpoch_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProofHeaderInEpoch());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof)) {
        return super.equals(obj);
      }
      com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof other = (com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof) obj;

      if (hasChainInfo() != other.hasChainInfo()) return false;
      if (hasChainInfo()) {
        if (!getChainInfo()
            .equals(other.getChainInfo())) return false;
      }
      if (hasProofHeaderInEpoch() != other.hasProofHeaderInEpoch()) return false;
      if (hasProofHeaderInEpoch()) {
        if (!getProofHeaderInEpoch()
            .equals(other.getProofHeaderInEpoch())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChainInfo()) {
        hash = (37 * hash) + CHAIN_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getChainInfo().hashCode();
      }
      if (hasProofHeaderInEpoch()) {
        hash = (37 * hash) + PROOF_HEADER_IN_EPOCH_FIELD_NUMBER;
        hash = (53 * hash) + getProofHeaderInEpoch().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ChainInfoWithProof is the chain info with a proof that the latest header in
     * the chain info is included in the epoch
     * </pre>
     *
     * Protobuf type {@code babylon.zoneconcierge.v1.ChainInfoWithProof}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.zoneconcierge.v1.ChainInfoWithProof)
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProofOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ChainInfoWithProof_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ChainInfoWithProof_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof.Builder.class);
      }

      // Construct using com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        chainInfo_ = null;
        if (chainInfoBuilder_ != null) {
          chainInfoBuilder_.dispose();
          chainInfoBuilder_ = null;
        }
        proofHeaderInEpoch_ = null;
        if (proofHeaderInEpochBuilder_ != null) {
          proofHeaderInEpochBuilder_.dispose();
          proofHeaderInEpochBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ChainInfoWithProof_descriptor;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof getDefaultInstanceForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof build() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof buildPartial() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof result = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.chainInfo_ = chainInfoBuilder_ == null
              ? chainInfo_
              : chainInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.proofHeaderInEpoch_ = proofHeaderInEpochBuilder_ == null
              ? proofHeaderInEpoch_
              : proofHeaderInEpochBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof) {
          return mergeFrom((com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof other) {
        if (other == com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof.getDefaultInstance()) return this;
        if (other.hasChainInfo()) {
          mergeChainInfo(other.getChainInfo());
        }
        if (other.hasProofHeaderInEpoch()) {
          mergeProofHeaderInEpoch(other.getProofHeaderInEpoch());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getChainInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getProofHeaderInEpochFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo chainInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder> chainInfoBuilder_;
      /**
       * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
       * @return Whether the chainInfo field is set.
       */
      public boolean hasChainInfo() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
       * @return The chainInfo.
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo getChainInfo() {
        if (chainInfoBuilder_ == null) {
          return chainInfo_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.getDefaultInstance() : chainInfo_;
        } else {
          return chainInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
       */
      public Builder setChainInfo(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo value) {
        if (chainInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chainInfo_ = value;
        } else {
          chainInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
       */
      public Builder setChainInfo(
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.Builder builderForValue) {
        if (chainInfoBuilder_ == null) {
          chainInfo_ = builderForValue.build();
        } else {
          chainInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
       */
      public Builder mergeChainInfo(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo value) {
        if (chainInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            chainInfo_ != null &&
            chainInfo_ != com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.getDefaultInstance()) {
            getChainInfoBuilder().mergeFrom(value);
          } else {
            chainInfo_ = value;
          }
        } else {
          chainInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
       */
      public Builder clearChainInfo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chainInfo_ = null;
        if (chainInfoBuilder_ != null) {
          chainInfoBuilder_.dispose();
          chainInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.Builder getChainInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getChainInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder getChainInfoOrBuilder() {
        if (chainInfoBuilder_ != null) {
          return chainInfoBuilder_.getMessageOrBuilder();
        } else {
          return chainInfo_ == null ?
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.getDefaultInstance() : chainInfo_;
        }
      }
      /**
       * <code>.babylon.zoneconcierge.v1.ChainInfo chain_info = 1 [json_name = "chainInfo"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder> 
          getChainInfoFieldBuilder() {
        if (chainInfoBuilder_ == null) {
          chainInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder>(
                  getChainInfo(),
                  getParentForChildren(),
                  isClean());
          chainInfo_ = null;
        }
        return chainInfoBuilder_;
      }

      private com.tendermint.crypto.ProofProto.ProofOps proofHeaderInEpoch_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tendermint.crypto.ProofProto.ProofOps, com.tendermint.crypto.ProofProto.ProofOps.Builder, com.tendermint.crypto.ProofProto.ProofOpsOrBuilder> proofHeaderInEpochBuilder_;
      /**
       * <pre>
       * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
       * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
       * this field is optional
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
       * @return Whether the proofHeaderInEpoch field is set.
       */
      public boolean hasProofHeaderInEpoch() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
       * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
       * this field is optional
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
       * @return The proofHeaderInEpoch.
       */
      public com.tendermint.crypto.ProofProto.ProofOps getProofHeaderInEpoch() {
        if (proofHeaderInEpochBuilder_ == null) {
          return proofHeaderInEpoch_ == null ? com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofHeaderInEpoch_;
        } else {
          return proofHeaderInEpochBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
       * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
       * this field is optional
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
       */
      public Builder setProofHeaderInEpoch(com.tendermint.crypto.ProofProto.ProofOps value) {
        if (proofHeaderInEpochBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          proofHeaderInEpoch_ = value;
        } else {
          proofHeaderInEpochBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
       * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
       * this field is optional
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
       */
      public Builder setProofHeaderInEpoch(
          com.tendermint.crypto.ProofProto.ProofOps.Builder builderForValue) {
        if (proofHeaderInEpochBuilder_ == null) {
          proofHeaderInEpoch_ = builderForValue.build();
        } else {
          proofHeaderInEpochBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
       * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
       * this field is optional
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
       */
      public Builder mergeProofHeaderInEpoch(com.tendermint.crypto.ProofProto.ProofOps value) {
        if (proofHeaderInEpochBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            proofHeaderInEpoch_ != null &&
            proofHeaderInEpoch_ != com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance()) {
            getProofHeaderInEpochBuilder().mergeFrom(value);
          } else {
            proofHeaderInEpoch_ = value;
          }
        } else {
          proofHeaderInEpochBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
       * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
       * this field is optional
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
       */
      public Builder clearProofHeaderInEpoch() {
        bitField0_ = (bitField0_ & ~0x00000002);
        proofHeaderInEpoch_ = null;
        if (proofHeaderInEpochBuilder_ != null) {
          proofHeaderInEpochBuilder_.dispose();
          proofHeaderInEpochBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
       * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
       * this field is optional
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
       */
      public com.tendermint.crypto.ProofProto.ProofOps.Builder getProofHeaderInEpochBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getProofHeaderInEpochFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
       * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
       * this field is optional
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
       */
      public com.tendermint.crypto.ProofProto.ProofOpsOrBuilder getProofHeaderInEpochOrBuilder() {
        if (proofHeaderInEpochBuilder_ != null) {
          return proofHeaderInEpochBuilder_.getMessageOrBuilder();
        } else {
          return proofHeaderInEpoch_ == null ?
              com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofHeaderInEpoch_;
        }
      }
      /**
       * <pre>
       * proof_header_in_epoch is an inclusion proof that the latest_header in chain_info
       * is committed  to `app_hash` of the sealer header of latest_header.babylon_epoch
       * this field is optional
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_header_in_epoch = 2 [json_name = "proofHeaderInEpoch"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tendermint.crypto.ProofProto.ProofOps, com.tendermint.crypto.ProofProto.ProofOps.Builder, com.tendermint.crypto.ProofProto.ProofOpsOrBuilder> 
          getProofHeaderInEpochFieldBuilder() {
        if (proofHeaderInEpochBuilder_ == null) {
          proofHeaderInEpochBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tendermint.crypto.ProofProto.ProofOps, com.tendermint.crypto.ProofProto.ProofOps.Builder, com.tendermint.crypto.ProofProto.ProofOpsOrBuilder>(
                  getProofHeaderInEpoch(),
                  getParentForChildren(),
                  isClean());
          proofHeaderInEpoch_ = null;
        }
        return proofHeaderInEpochBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.zoneconcierge.v1.ChainInfoWithProof)
    }

    // @@protoc_insertion_point(class_scope:babylon.zoneconcierge.v1.ChainInfoWithProof)
    private static final com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof();
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChainInfoWithProof>
        PARSER = new com.google.protobuf.AbstractParser<ChainInfoWithProof>() {
      @java.lang.Override
      public ChainInfoWithProof parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ChainInfoWithProof> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChainInfoWithProof> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoWithProof getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FinalizedChainInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.zoneconcierge.v1.FinalizedChainInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * consumer_id is the ID of the consumer
     * </pre>
     *
     * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
     * @return The consumerId.
     */
    java.lang.String getConsumerId();
    /**
     * <pre>
     * consumer_id is the ID of the consumer
     * </pre>
     *
     * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
     * @return The bytes for consumerId.
     */
    com.google.protobuf.ByteString
        getConsumerIdBytes();

    /**
     * <pre>
     * finalized_chain_info is the info of the CZ
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
     * @return Whether the finalizedChainInfo field is set.
     */
    boolean hasFinalizedChainInfo();
    /**
     * <pre>
     * finalized_chain_info is the info of the CZ
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
     * @return The finalizedChainInfo.
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo getFinalizedChainInfo();
    /**
     * <pre>
     * finalized_chain_info is the info of the CZ
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder getFinalizedChainInfoOrBuilder();

    /**
     * <pre>
     * epoch_info is the metadata of the last BTC-finalised epoch
     * </pre>
     *
     * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
     * @return Whether the epochInfo field is set.
     */
    boolean hasEpochInfo();
    /**
     * <pre>
     * epoch_info is the metadata of the last BTC-finalised epoch
     * </pre>
     *
     * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
     * @return The epochInfo.
     */
    com.babylon.epoching.v1.EpochingProto.Epoch getEpochInfo();
    /**
     * <pre>
     * epoch_info is the metadata of the last BTC-finalised epoch
     * </pre>
     *
     * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
     */
    com.babylon.epoching.v1.EpochingProto.EpochOrBuilder getEpochInfoOrBuilder();

    /**
     * <pre>
     * raw_checkpoint is the raw checkpoint of this epoch
     * </pre>
     *
     * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
     * @return Whether the rawCheckpoint field is set.
     */
    boolean hasRawCheckpoint();
    /**
     * <pre>
     * raw_checkpoint is the raw checkpoint of this epoch
     * </pre>
     *
     * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
     * @return The rawCheckpoint.
     */
    com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint getRawCheckpoint();
    /**
     * <pre>
     * raw_checkpoint is the raw checkpoint of this epoch
     * </pre>
     *
     * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
     */
    com.babylon.checkpointing.v1.CheckpointProto.RawCheckpointOrBuilder getRawCheckpointOrBuilder();

    /**
     * <pre>
     * btc_submission_key is position of two BTC txs that include the raw
     * checkpoint of this epoch
     * </pre>
     *
     * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
     * @return Whether the btcSubmissionKey field is set.
     */
    boolean hasBtcSubmissionKey();
    /**
     * <pre>
     * btc_submission_key is position of two BTC txs that include the raw
     * checkpoint of this epoch
     * </pre>
     *
     * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
     * @return The btcSubmissionKey.
     */
    com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey getBtcSubmissionKey();
    /**
     * <pre>
     * btc_submission_key is position of two BTC txs that include the raw
     * checkpoint of this epoch
     * </pre>
     *
     * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
     */
    com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKeyOrBuilder getBtcSubmissionKeyOrBuilder();

    /**
     * <pre>
     * proof is the proof that the chain info is finalized
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
     * @return Whether the proof field is set.
     */
    boolean hasProof();
    /**
     * <pre>
     * proof is the proof that the chain info is finalized
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
     * @return The proof.
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo getProof();
    /**
     * <pre>
     * proof is the proof that the chain info is finalized
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfoOrBuilder getProofOrBuilder();
  }
  /**
   * <pre>
   * FinalizedChainInfo is the information of a CZ that is BTC-finalised
   * </pre>
   *
   * Protobuf type {@code babylon.zoneconcierge.v1.FinalizedChainInfo}
   */
  public static final class FinalizedChainInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.zoneconcierge.v1.FinalizedChainInfo)
      FinalizedChainInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FinalizedChainInfo.newBuilder() to construct.
    private FinalizedChainInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FinalizedChainInfo() {
      consumerId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FinalizedChainInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_FinalizedChainInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_FinalizedChainInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo.Builder.class);
    }

    public static final int CONSUMER_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object consumerId_ = "";
    /**
     * <pre>
     * consumer_id is the ID of the consumer
     * </pre>
     *
     * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
     * @return The consumerId.
     */
    @java.lang.Override
    public java.lang.String getConsumerId() {
      java.lang.Object ref = consumerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        consumerId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * consumer_id is the ID of the consumer
     * </pre>
     *
     * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
     * @return The bytes for consumerId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getConsumerIdBytes() {
      java.lang.Object ref = consumerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        consumerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FINALIZED_CHAIN_INFO_FIELD_NUMBER = 2;
    private com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo finalizedChainInfo_;
    /**
     * <pre>
     * finalized_chain_info is the info of the CZ
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
     * @return Whether the finalizedChainInfo field is set.
     */
    @java.lang.Override
    public boolean hasFinalizedChainInfo() {
      return finalizedChainInfo_ != null;
    }
    /**
     * <pre>
     * finalized_chain_info is the info of the CZ
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
     * @return The finalizedChainInfo.
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo getFinalizedChainInfo() {
      return finalizedChainInfo_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.getDefaultInstance() : finalizedChainInfo_;
    }
    /**
     * <pre>
     * finalized_chain_info is the info of the CZ
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder getFinalizedChainInfoOrBuilder() {
      return finalizedChainInfo_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.getDefaultInstance() : finalizedChainInfo_;
    }

    public static final int EPOCH_INFO_FIELD_NUMBER = 3;
    private com.babylon.epoching.v1.EpochingProto.Epoch epochInfo_;
    /**
     * <pre>
     * epoch_info is the metadata of the last BTC-finalised epoch
     * </pre>
     *
     * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
     * @return Whether the epochInfo field is set.
     */
    @java.lang.Override
    public boolean hasEpochInfo() {
      return epochInfo_ != null;
    }
    /**
     * <pre>
     * epoch_info is the metadata of the last BTC-finalised epoch
     * </pre>
     *
     * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
     * @return The epochInfo.
     */
    @java.lang.Override
    public com.babylon.epoching.v1.EpochingProto.Epoch getEpochInfo() {
      return epochInfo_ == null ? com.babylon.epoching.v1.EpochingProto.Epoch.getDefaultInstance() : epochInfo_;
    }
    /**
     * <pre>
     * epoch_info is the metadata of the last BTC-finalised epoch
     * </pre>
     *
     * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
     */
    @java.lang.Override
    public com.babylon.epoching.v1.EpochingProto.EpochOrBuilder getEpochInfoOrBuilder() {
      return epochInfo_ == null ? com.babylon.epoching.v1.EpochingProto.Epoch.getDefaultInstance() : epochInfo_;
    }

    public static final int RAW_CHECKPOINT_FIELD_NUMBER = 4;
    private com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint rawCheckpoint_;
    /**
     * <pre>
     * raw_checkpoint is the raw checkpoint of this epoch
     * </pre>
     *
     * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
     * @return Whether the rawCheckpoint field is set.
     */
    @java.lang.Override
    public boolean hasRawCheckpoint() {
      return rawCheckpoint_ != null;
    }
    /**
     * <pre>
     * raw_checkpoint is the raw checkpoint of this epoch
     * </pre>
     *
     * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
     * @return The rawCheckpoint.
     */
    @java.lang.Override
    public com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint getRawCheckpoint() {
      return rawCheckpoint_ == null ? com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint.getDefaultInstance() : rawCheckpoint_;
    }
    /**
     * <pre>
     * raw_checkpoint is the raw checkpoint of this epoch
     * </pre>
     *
     * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
     */
    @java.lang.Override
    public com.babylon.checkpointing.v1.CheckpointProto.RawCheckpointOrBuilder getRawCheckpointOrBuilder() {
      return rawCheckpoint_ == null ? com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint.getDefaultInstance() : rawCheckpoint_;
    }

    public static final int BTC_SUBMISSION_KEY_FIELD_NUMBER = 5;
    private com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey btcSubmissionKey_;
    /**
     * <pre>
     * btc_submission_key is position of two BTC txs that include the raw
     * checkpoint of this epoch
     * </pre>
     *
     * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
     * @return Whether the btcSubmissionKey field is set.
     */
    @java.lang.Override
    public boolean hasBtcSubmissionKey() {
      return btcSubmissionKey_ != null;
    }
    /**
     * <pre>
     * btc_submission_key is position of two BTC txs that include the raw
     * checkpoint of this epoch
     * </pre>
     *
     * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
     * @return The btcSubmissionKey.
     */
    @java.lang.Override
    public com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey getBtcSubmissionKey() {
      return btcSubmissionKey_ == null ? com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey.getDefaultInstance() : btcSubmissionKey_;
    }
    /**
     * <pre>
     * btc_submission_key is position of two BTC txs that include the raw
     * checkpoint of this epoch
     * </pre>
     *
     * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
     */
    @java.lang.Override
    public com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKeyOrBuilder getBtcSubmissionKeyOrBuilder() {
      return btcSubmissionKey_ == null ? com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey.getDefaultInstance() : btcSubmissionKey_;
    }

    public static final int PROOF_FIELD_NUMBER = 6;
    private com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo proof_;
    /**
     * <pre>
     * proof is the proof that the chain info is finalized
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
     * @return Whether the proof field is set.
     */
    @java.lang.Override
    public boolean hasProof() {
      return proof_ != null;
    }
    /**
     * <pre>
     * proof is the proof that the chain info is finalized
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
     * @return The proof.
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo getProof() {
      return proof_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.getDefaultInstance() : proof_;
    }
    /**
     * <pre>
     * proof is the proof that the chain info is finalized
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfoOrBuilder getProofOrBuilder() {
      return proof_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.getDefaultInstance() : proof_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(consumerId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, consumerId_);
      }
      if (finalizedChainInfo_ != null) {
        output.writeMessage(2, getFinalizedChainInfo());
      }
      if (epochInfo_ != null) {
        output.writeMessage(3, getEpochInfo());
      }
      if (rawCheckpoint_ != null) {
        output.writeMessage(4, getRawCheckpoint());
      }
      if (btcSubmissionKey_ != null) {
        output.writeMessage(5, getBtcSubmissionKey());
      }
      if (proof_ != null) {
        output.writeMessage(6, getProof());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(consumerId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, consumerId_);
      }
      if (finalizedChainInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFinalizedChainInfo());
      }
      if (epochInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getEpochInfo());
      }
      if (rawCheckpoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getRawCheckpoint());
      }
      if (btcSubmissionKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getBtcSubmissionKey());
      }
      if (proof_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getProof());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo)) {
        return super.equals(obj);
      }
      com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo other = (com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo) obj;

      if (!getConsumerId()
          .equals(other.getConsumerId())) return false;
      if (hasFinalizedChainInfo() != other.hasFinalizedChainInfo()) return false;
      if (hasFinalizedChainInfo()) {
        if (!getFinalizedChainInfo()
            .equals(other.getFinalizedChainInfo())) return false;
      }
      if (hasEpochInfo() != other.hasEpochInfo()) return false;
      if (hasEpochInfo()) {
        if (!getEpochInfo()
            .equals(other.getEpochInfo())) return false;
      }
      if (hasRawCheckpoint() != other.hasRawCheckpoint()) return false;
      if (hasRawCheckpoint()) {
        if (!getRawCheckpoint()
            .equals(other.getRawCheckpoint())) return false;
      }
      if (hasBtcSubmissionKey() != other.hasBtcSubmissionKey()) return false;
      if (hasBtcSubmissionKey()) {
        if (!getBtcSubmissionKey()
            .equals(other.getBtcSubmissionKey())) return false;
      }
      if (hasProof() != other.hasProof()) return false;
      if (hasProof()) {
        if (!getProof()
            .equals(other.getProof())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONSUMER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getConsumerId().hashCode();
      if (hasFinalizedChainInfo()) {
        hash = (37 * hash) + FINALIZED_CHAIN_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getFinalizedChainInfo().hashCode();
      }
      if (hasEpochInfo()) {
        hash = (37 * hash) + EPOCH_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getEpochInfo().hashCode();
      }
      if (hasRawCheckpoint()) {
        hash = (37 * hash) + RAW_CHECKPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getRawCheckpoint().hashCode();
      }
      if (hasBtcSubmissionKey()) {
        hash = (37 * hash) + BTC_SUBMISSION_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getBtcSubmissionKey().hashCode();
      }
      if (hasProof()) {
        hash = (37 * hash) + PROOF_FIELD_NUMBER;
        hash = (53 * hash) + getProof().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * FinalizedChainInfo is the information of a CZ that is BTC-finalised
     * </pre>
     *
     * Protobuf type {@code babylon.zoneconcierge.v1.FinalizedChainInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.zoneconcierge.v1.FinalizedChainInfo)
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_FinalizedChainInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_FinalizedChainInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo.Builder.class);
      }

      // Construct using com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        consumerId_ = "";
        finalizedChainInfo_ = null;
        if (finalizedChainInfoBuilder_ != null) {
          finalizedChainInfoBuilder_.dispose();
          finalizedChainInfoBuilder_ = null;
        }
        epochInfo_ = null;
        if (epochInfoBuilder_ != null) {
          epochInfoBuilder_.dispose();
          epochInfoBuilder_ = null;
        }
        rawCheckpoint_ = null;
        if (rawCheckpointBuilder_ != null) {
          rawCheckpointBuilder_.dispose();
          rawCheckpointBuilder_ = null;
        }
        btcSubmissionKey_ = null;
        if (btcSubmissionKeyBuilder_ != null) {
          btcSubmissionKeyBuilder_.dispose();
          btcSubmissionKeyBuilder_ = null;
        }
        proof_ = null;
        if (proofBuilder_ != null) {
          proofBuilder_.dispose();
          proofBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_FinalizedChainInfo_descriptor;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo getDefaultInstanceForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo build() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo buildPartial() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo result = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.consumerId_ = consumerId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.finalizedChainInfo_ = finalizedChainInfoBuilder_ == null
              ? finalizedChainInfo_
              : finalizedChainInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.epochInfo_ = epochInfoBuilder_ == null
              ? epochInfo_
              : epochInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.rawCheckpoint_ = rawCheckpointBuilder_ == null
              ? rawCheckpoint_
              : rawCheckpointBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.btcSubmissionKey_ = btcSubmissionKeyBuilder_ == null
              ? btcSubmissionKey_
              : btcSubmissionKeyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.proof_ = proofBuilder_ == null
              ? proof_
              : proofBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo) {
          return mergeFrom((com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo other) {
        if (other == com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo.getDefaultInstance()) return this;
        if (!other.getConsumerId().isEmpty()) {
          consumerId_ = other.consumerId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasFinalizedChainInfo()) {
          mergeFinalizedChainInfo(other.getFinalizedChainInfo());
        }
        if (other.hasEpochInfo()) {
          mergeEpochInfo(other.getEpochInfo());
        }
        if (other.hasRawCheckpoint()) {
          mergeRawCheckpoint(other.getRawCheckpoint());
        }
        if (other.hasBtcSubmissionKey()) {
          mergeBtcSubmissionKey(other.getBtcSubmissionKey());
        }
        if (other.hasProof()) {
          mergeProof(other.getProof());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                consumerId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getFinalizedChainInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getEpochInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getRawCheckpointFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getBtcSubmissionKeyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getProofFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object consumerId_ = "";
      /**
       * <pre>
       * consumer_id is the ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @return The consumerId.
       */
      public java.lang.String getConsumerId() {
        java.lang.Object ref = consumerId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          consumerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * consumer_id is the ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @return The bytes for consumerId.
       */
      public com.google.protobuf.ByteString
          getConsumerIdBytes() {
        java.lang.Object ref = consumerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          consumerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * consumer_id is the ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @param value The consumerId to set.
       * @return This builder for chaining.
       */
      public Builder setConsumerId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        consumerId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * consumer_id is the ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @return This builder for chaining.
       */
      public Builder clearConsumerId() {
        consumerId_ = getDefaultInstance().getConsumerId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * consumer_id is the ID of the consumer
       * </pre>
       *
       * <code>string consumer_id = 1 [json_name = "consumerId"];</code>
       * @param value The bytes for consumerId to set.
       * @return This builder for chaining.
       */
      public Builder setConsumerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        consumerId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo finalizedChainInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder> finalizedChainInfoBuilder_;
      /**
       * <pre>
       * finalized_chain_info is the info of the CZ
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
       * @return Whether the finalizedChainInfo field is set.
       */
      public boolean hasFinalizedChainInfo() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * finalized_chain_info is the info of the CZ
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
       * @return The finalizedChainInfo.
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo getFinalizedChainInfo() {
        if (finalizedChainInfoBuilder_ == null) {
          return finalizedChainInfo_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.getDefaultInstance() : finalizedChainInfo_;
        } else {
          return finalizedChainInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * finalized_chain_info is the info of the CZ
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
       */
      public Builder setFinalizedChainInfo(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo value) {
        if (finalizedChainInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          finalizedChainInfo_ = value;
        } else {
          finalizedChainInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * finalized_chain_info is the info of the CZ
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
       */
      public Builder setFinalizedChainInfo(
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.Builder builderForValue) {
        if (finalizedChainInfoBuilder_ == null) {
          finalizedChainInfo_ = builderForValue.build();
        } else {
          finalizedChainInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * finalized_chain_info is the info of the CZ
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
       */
      public Builder mergeFinalizedChainInfo(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo value) {
        if (finalizedChainInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            finalizedChainInfo_ != null &&
            finalizedChainInfo_ != com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.getDefaultInstance()) {
            getFinalizedChainInfoBuilder().mergeFrom(value);
          } else {
            finalizedChainInfo_ = value;
          }
        } else {
          finalizedChainInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * finalized_chain_info is the info of the CZ
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
       */
      public Builder clearFinalizedChainInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        finalizedChainInfo_ = null;
        if (finalizedChainInfoBuilder_ != null) {
          finalizedChainInfoBuilder_.dispose();
          finalizedChainInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * finalized_chain_info is the info of the CZ
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.Builder getFinalizedChainInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getFinalizedChainInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * finalized_chain_info is the info of the CZ
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder getFinalizedChainInfoOrBuilder() {
        if (finalizedChainInfoBuilder_ != null) {
          return finalizedChainInfoBuilder_.getMessageOrBuilder();
        } else {
          return finalizedChainInfo_ == null ?
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.getDefaultInstance() : finalizedChainInfo_;
        }
      }
      /**
       * <pre>
       * finalized_chain_info is the info of the CZ
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ChainInfo finalized_chain_info = 2 [json_name = "finalizedChainInfo"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder> 
          getFinalizedChainInfoFieldBuilder() {
        if (finalizedChainInfoBuilder_ == null) {
          finalizedChainInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfo.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ChainInfoOrBuilder>(
                  getFinalizedChainInfo(),
                  getParentForChildren(),
                  isClean());
          finalizedChainInfo_ = null;
        }
        return finalizedChainInfoBuilder_;
      }

      private com.babylon.epoching.v1.EpochingProto.Epoch epochInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.epoching.v1.EpochingProto.Epoch, com.babylon.epoching.v1.EpochingProto.Epoch.Builder, com.babylon.epoching.v1.EpochingProto.EpochOrBuilder> epochInfoBuilder_;
      /**
       * <pre>
       * epoch_info is the metadata of the last BTC-finalised epoch
       * </pre>
       *
       * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
       * @return Whether the epochInfo field is set.
       */
      public boolean hasEpochInfo() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * epoch_info is the metadata of the last BTC-finalised epoch
       * </pre>
       *
       * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
       * @return The epochInfo.
       */
      public com.babylon.epoching.v1.EpochingProto.Epoch getEpochInfo() {
        if (epochInfoBuilder_ == null) {
          return epochInfo_ == null ? com.babylon.epoching.v1.EpochingProto.Epoch.getDefaultInstance() : epochInfo_;
        } else {
          return epochInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * epoch_info is the metadata of the last BTC-finalised epoch
       * </pre>
       *
       * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
       */
      public Builder setEpochInfo(com.babylon.epoching.v1.EpochingProto.Epoch value) {
        if (epochInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          epochInfo_ = value;
        } else {
          epochInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * epoch_info is the metadata of the last BTC-finalised epoch
       * </pre>
       *
       * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
       */
      public Builder setEpochInfo(
          com.babylon.epoching.v1.EpochingProto.Epoch.Builder builderForValue) {
        if (epochInfoBuilder_ == null) {
          epochInfo_ = builderForValue.build();
        } else {
          epochInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * epoch_info is the metadata of the last BTC-finalised epoch
       * </pre>
       *
       * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
       */
      public Builder mergeEpochInfo(com.babylon.epoching.v1.EpochingProto.Epoch value) {
        if (epochInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            epochInfo_ != null &&
            epochInfo_ != com.babylon.epoching.v1.EpochingProto.Epoch.getDefaultInstance()) {
            getEpochInfoBuilder().mergeFrom(value);
          } else {
            epochInfo_ = value;
          }
        } else {
          epochInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * epoch_info is the metadata of the last BTC-finalised epoch
       * </pre>
       *
       * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
       */
      public Builder clearEpochInfo() {
        bitField0_ = (bitField0_ & ~0x00000004);
        epochInfo_ = null;
        if (epochInfoBuilder_ != null) {
          epochInfoBuilder_.dispose();
          epochInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * epoch_info is the metadata of the last BTC-finalised epoch
       * </pre>
       *
       * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
       */
      public com.babylon.epoching.v1.EpochingProto.Epoch.Builder getEpochInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getEpochInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * epoch_info is the metadata of the last BTC-finalised epoch
       * </pre>
       *
       * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
       */
      public com.babylon.epoching.v1.EpochingProto.EpochOrBuilder getEpochInfoOrBuilder() {
        if (epochInfoBuilder_ != null) {
          return epochInfoBuilder_.getMessageOrBuilder();
        } else {
          return epochInfo_ == null ?
              com.babylon.epoching.v1.EpochingProto.Epoch.getDefaultInstance() : epochInfo_;
        }
      }
      /**
       * <pre>
       * epoch_info is the metadata of the last BTC-finalised epoch
       * </pre>
       *
       * <code>.babylon.epoching.v1.Epoch epoch_info = 3 [json_name = "epochInfo"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.epoching.v1.EpochingProto.Epoch, com.babylon.epoching.v1.EpochingProto.Epoch.Builder, com.babylon.epoching.v1.EpochingProto.EpochOrBuilder> 
          getEpochInfoFieldBuilder() {
        if (epochInfoBuilder_ == null) {
          epochInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.babylon.epoching.v1.EpochingProto.Epoch, com.babylon.epoching.v1.EpochingProto.Epoch.Builder, com.babylon.epoching.v1.EpochingProto.EpochOrBuilder>(
                  getEpochInfo(),
                  getParentForChildren(),
                  isClean());
          epochInfo_ = null;
        }
        return epochInfoBuilder_;
      }

      private com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint rawCheckpoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint, com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint.Builder, com.babylon.checkpointing.v1.CheckpointProto.RawCheckpointOrBuilder> rawCheckpointBuilder_;
      /**
       * <pre>
       * raw_checkpoint is the raw checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
       * @return Whether the rawCheckpoint field is set.
       */
      public boolean hasRawCheckpoint() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * raw_checkpoint is the raw checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
       * @return The rawCheckpoint.
       */
      public com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint getRawCheckpoint() {
        if (rawCheckpointBuilder_ == null) {
          return rawCheckpoint_ == null ? com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint.getDefaultInstance() : rawCheckpoint_;
        } else {
          return rawCheckpointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * raw_checkpoint is the raw checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
       */
      public Builder setRawCheckpoint(com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint value) {
        if (rawCheckpointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rawCheckpoint_ = value;
        } else {
          rawCheckpointBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * raw_checkpoint is the raw checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
       */
      public Builder setRawCheckpoint(
          com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint.Builder builderForValue) {
        if (rawCheckpointBuilder_ == null) {
          rawCheckpoint_ = builderForValue.build();
        } else {
          rawCheckpointBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * raw_checkpoint is the raw checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
       */
      public Builder mergeRawCheckpoint(com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint value) {
        if (rawCheckpointBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            rawCheckpoint_ != null &&
            rawCheckpoint_ != com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint.getDefaultInstance()) {
            getRawCheckpointBuilder().mergeFrom(value);
          } else {
            rawCheckpoint_ = value;
          }
        } else {
          rawCheckpointBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * raw_checkpoint is the raw checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
       */
      public Builder clearRawCheckpoint() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rawCheckpoint_ = null;
        if (rawCheckpointBuilder_ != null) {
          rawCheckpointBuilder_.dispose();
          rawCheckpointBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * raw_checkpoint is the raw checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
       */
      public com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint.Builder getRawCheckpointBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRawCheckpointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * raw_checkpoint is the raw checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
       */
      public com.babylon.checkpointing.v1.CheckpointProto.RawCheckpointOrBuilder getRawCheckpointOrBuilder() {
        if (rawCheckpointBuilder_ != null) {
          return rawCheckpointBuilder_.getMessageOrBuilder();
        } else {
          return rawCheckpoint_ == null ?
              com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint.getDefaultInstance() : rawCheckpoint_;
        }
      }
      /**
       * <pre>
       * raw_checkpoint is the raw checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4 [json_name = "rawCheckpoint"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint, com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint.Builder, com.babylon.checkpointing.v1.CheckpointProto.RawCheckpointOrBuilder> 
          getRawCheckpointFieldBuilder() {
        if (rawCheckpointBuilder_ == null) {
          rawCheckpointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint, com.babylon.checkpointing.v1.CheckpointProto.RawCheckpoint.Builder, com.babylon.checkpointing.v1.CheckpointProto.RawCheckpointOrBuilder>(
                  getRawCheckpoint(),
                  getParentForChildren(),
                  isClean());
          rawCheckpoint_ = null;
        }
        return rawCheckpointBuilder_;
      }

      private com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey btcSubmissionKey_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey, com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey.Builder, com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKeyOrBuilder> btcSubmissionKeyBuilder_;
      /**
       * <pre>
       * btc_submission_key is position of two BTC txs that include the raw
       * checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
       * @return Whether the btcSubmissionKey field is set.
       */
      public boolean hasBtcSubmissionKey() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * btc_submission_key is position of two BTC txs that include the raw
       * checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
       * @return The btcSubmissionKey.
       */
      public com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey getBtcSubmissionKey() {
        if (btcSubmissionKeyBuilder_ == null) {
          return btcSubmissionKey_ == null ? com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey.getDefaultInstance() : btcSubmissionKey_;
        } else {
          return btcSubmissionKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * btc_submission_key is position of two BTC txs that include the raw
       * checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
       */
      public Builder setBtcSubmissionKey(com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey value) {
        if (btcSubmissionKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          btcSubmissionKey_ = value;
        } else {
          btcSubmissionKeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * btc_submission_key is position of two BTC txs that include the raw
       * checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
       */
      public Builder setBtcSubmissionKey(
          com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey.Builder builderForValue) {
        if (btcSubmissionKeyBuilder_ == null) {
          btcSubmissionKey_ = builderForValue.build();
        } else {
          btcSubmissionKeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * btc_submission_key is position of two BTC txs that include the raw
       * checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
       */
      public Builder mergeBtcSubmissionKey(com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey value) {
        if (btcSubmissionKeyBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            btcSubmissionKey_ != null &&
            btcSubmissionKey_ != com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey.getDefaultInstance()) {
            getBtcSubmissionKeyBuilder().mergeFrom(value);
          } else {
            btcSubmissionKey_ = value;
          }
        } else {
          btcSubmissionKeyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * btc_submission_key is position of two BTC txs that include the raw
       * checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
       */
      public Builder clearBtcSubmissionKey() {
        bitField0_ = (bitField0_ & ~0x00000010);
        btcSubmissionKey_ = null;
        if (btcSubmissionKeyBuilder_ != null) {
          btcSubmissionKeyBuilder_.dispose();
          btcSubmissionKeyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * btc_submission_key is position of two BTC txs that include the raw
       * checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
       */
      public com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey.Builder getBtcSubmissionKeyBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getBtcSubmissionKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * btc_submission_key is position of two BTC txs that include the raw
       * checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
       */
      public com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKeyOrBuilder getBtcSubmissionKeyOrBuilder() {
        if (btcSubmissionKeyBuilder_ != null) {
          return btcSubmissionKeyBuilder_.getMessageOrBuilder();
        } else {
          return btcSubmissionKey_ == null ?
              com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey.getDefaultInstance() : btcSubmissionKey_;
        }
      }
      /**
       * <pre>
       * btc_submission_key is position of two BTC txs that include the raw
       * checkpoint of this epoch
       * </pre>
       *
       * <code>.babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5 [json_name = "btcSubmissionKey"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey, com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey.Builder, com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKeyOrBuilder> 
          getBtcSubmissionKeyFieldBuilder() {
        if (btcSubmissionKeyBuilder_ == null) {
          btcSubmissionKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey, com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKey.Builder, com.babylon.btccheckpoint.v1.BtccheckpointProto.SubmissionKeyOrBuilder>(
                  getBtcSubmissionKey(),
                  getParentForChildren(),
                  isClean());
          btcSubmissionKey_ = null;
        }
        return btcSubmissionKeyBuilder_;
      }

      private com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo proof_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfoOrBuilder> proofBuilder_;
      /**
       * <pre>
       * proof is the proof that the chain info is finalized
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
       * @return Whether the proof field is set.
       */
      public boolean hasProof() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * proof is the proof that the chain info is finalized
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
       * @return The proof.
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo getProof() {
        if (proofBuilder_ == null) {
          return proof_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.getDefaultInstance() : proof_;
        } else {
          return proofBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * proof is the proof that the chain info is finalized
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
       */
      public Builder setProof(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo value) {
        if (proofBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          proof_ = value;
        } else {
          proofBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof is the proof that the chain info is finalized
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
       */
      public Builder setProof(
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.Builder builderForValue) {
        if (proofBuilder_ == null) {
          proof_ = builderForValue.build();
        } else {
          proofBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof is the proof that the chain info is finalized
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
       */
      public Builder mergeProof(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo value) {
        if (proofBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            proof_ != null &&
            proof_ != com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.getDefaultInstance()) {
            getProofBuilder().mergeFrom(value);
          } else {
            proof_ = value;
          }
        } else {
          proofBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof is the proof that the chain info is finalized
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
       */
      public Builder clearProof() {
        bitField0_ = (bitField0_ & ~0x00000020);
        proof_ = null;
        if (proofBuilder_ != null) {
          proofBuilder_.dispose();
          proofBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof is the proof that the chain info is finalized
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.Builder getProofBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getProofFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * proof is the proof that the chain info is finalized
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfoOrBuilder getProofOrBuilder() {
        if (proofBuilder_ != null) {
          return proofBuilder_.getMessageOrBuilder();
        } else {
          return proof_ == null ?
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.getDefaultInstance() : proof_;
        }
      }
      /**
       * <pre>
       * proof is the proof that the chain info is finalized
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofFinalizedChainInfo proof = 6 [json_name = "proof"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfoOrBuilder> 
          getProofFieldBuilder() {
        if (proofBuilder_ == null) {
          proofBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfoOrBuilder>(
                  getProof(),
                  getParentForChildren(),
                  isClean());
          proof_ = null;
        }
        return proofBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.zoneconcierge.v1.FinalizedChainInfo)
    }

    // @@protoc_insertion_point(class_scope:babylon.zoneconcierge.v1.FinalizedChainInfo)
    private static final com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo();
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FinalizedChainInfo>
        PARSER = new com.google.protobuf.AbstractParser<FinalizedChainInfo>() {
      @java.lang.Override
      public FinalizedChainInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FinalizedChainInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FinalizedChainInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.FinalizedChainInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProofEpochSealedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.zoneconcierge.v1.ProofEpochSealed)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * validator_set is the validator set of the sealed epoch
     * This validator set has generated a BLS multisig on `app_hash` of
     * the sealer header
     * </pre>
     *
     * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
     */
    java.util.List<com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey> 
        getValidatorSetList();
    /**
     * <pre>
     * validator_set is the validator set of the sealed epoch
     * This validator set has generated a BLS multisig on `app_hash` of
     * the sealer header
     * </pre>
     *
     * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
     */
    com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey getValidatorSet(int index);
    /**
     * <pre>
     * validator_set is the validator set of the sealed epoch
     * This validator set has generated a BLS multisig on `app_hash` of
     * the sealer header
     * </pre>
     *
     * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
     */
    int getValidatorSetCount();
    /**
     * <pre>
     * validator_set is the validator set of the sealed epoch
     * This validator set has generated a BLS multisig on `app_hash` of
     * the sealer header
     * </pre>
     *
     * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
     */
    java.util.List<? extends com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKeyOrBuilder> 
        getValidatorSetOrBuilderList();
    /**
     * <pre>
     * validator_set is the validator set of the sealed epoch
     * This validator set has generated a BLS multisig on `app_hash` of
     * the sealer header
     * </pre>
     *
     * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
     */
    com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKeyOrBuilder getValidatorSetOrBuilder(
        int index);

    /**
     * <pre>
     * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
     * to `app_hash` of the sealer header
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
     * @return Whether the proofEpochInfo field is set.
     */
    boolean hasProofEpochInfo();
    /**
     * <pre>
     * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
     * to `app_hash` of the sealer header
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
     * @return The proofEpochInfo.
     */
    com.tendermint.crypto.ProofProto.ProofOps getProofEpochInfo();
    /**
     * <pre>
     * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
     * to `app_hash` of the sealer header
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
     */
    com.tendermint.crypto.ProofProto.ProofOpsOrBuilder getProofEpochInfoOrBuilder();

    /**
     * <pre>
     * proof_epoch_info is the Merkle proof that the epoch's validator set is
     * committed to `app_hash` of the sealer header
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
     * @return Whether the proofEpochValSet field is set.
     */
    boolean hasProofEpochValSet();
    /**
     * <pre>
     * proof_epoch_info is the Merkle proof that the epoch's validator set is
     * committed to `app_hash` of the sealer header
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
     * @return The proofEpochValSet.
     */
    com.tendermint.crypto.ProofProto.ProofOps getProofEpochValSet();
    /**
     * <pre>
     * proof_epoch_info is the Merkle proof that the epoch's validator set is
     * committed to `app_hash` of the sealer header
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
     */
    com.tendermint.crypto.ProofProto.ProofOpsOrBuilder getProofEpochValSetOrBuilder();
  }
  /**
   * <pre>
   * ProofEpochSealed is the proof that an epoch is sealed by the sealer header,
   * i.e., the 2nd header of the next epoch With the access of metadata
   * - Metadata of this epoch, which includes the sealer header
   * - Raw checkpoint of this epoch
   * The verifier can perform the following verification rules:
   * - The raw checkpoint's `app_hash` is same as in the sealer header
   * - More than 2/3 (in voting power) validators in the validator set of this
   * epoch have signed `app_hash` of the sealer header
   * - The epoch metadata is committed to the `app_hash` of the sealer header
   * - The validator set is committed to the `app_hash` of the sealer header
   * </pre>
   *
   * Protobuf type {@code babylon.zoneconcierge.v1.ProofEpochSealed}
   */
  public static final class ProofEpochSealed extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.zoneconcierge.v1.ProofEpochSealed)
      ProofEpochSealedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProofEpochSealed.newBuilder() to construct.
    private ProofEpochSealed(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProofEpochSealed() {
      validatorSet_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProofEpochSealed();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ProofEpochSealed_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ProofEpochSealed_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.Builder.class);
    }

    public static final int VALIDATOR_SET_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey> validatorSet_;
    /**
     * <pre>
     * validator_set is the validator set of the sealed epoch
     * This validator set has generated a BLS multisig on `app_hash` of
     * the sealer header
     * </pre>
     *
     * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
     */
    @java.lang.Override
    public java.util.List<com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey> getValidatorSetList() {
      return validatorSet_;
    }
    /**
     * <pre>
     * validator_set is the validator set of the sealed epoch
     * This validator set has generated a BLS multisig on `app_hash` of
     * the sealer header
     * </pre>
     *
     * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKeyOrBuilder> 
        getValidatorSetOrBuilderList() {
      return validatorSet_;
    }
    /**
     * <pre>
     * validator_set is the validator set of the sealed epoch
     * This validator set has generated a BLS multisig on `app_hash` of
     * the sealer header
     * </pre>
     *
     * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
     */
    @java.lang.Override
    public int getValidatorSetCount() {
      return validatorSet_.size();
    }
    /**
     * <pre>
     * validator_set is the validator set of the sealed epoch
     * This validator set has generated a BLS multisig on `app_hash` of
     * the sealer header
     * </pre>
     *
     * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
     */
    @java.lang.Override
    public com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey getValidatorSet(int index) {
      return validatorSet_.get(index);
    }
    /**
     * <pre>
     * validator_set is the validator set of the sealed epoch
     * This validator set has generated a BLS multisig on `app_hash` of
     * the sealer header
     * </pre>
     *
     * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
     */
    @java.lang.Override
    public com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKeyOrBuilder getValidatorSetOrBuilder(
        int index) {
      return validatorSet_.get(index);
    }

    public static final int PROOF_EPOCH_INFO_FIELD_NUMBER = 2;
    private com.tendermint.crypto.ProofProto.ProofOps proofEpochInfo_;
    /**
     * <pre>
     * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
     * to `app_hash` of the sealer header
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
     * @return Whether the proofEpochInfo field is set.
     */
    @java.lang.Override
    public boolean hasProofEpochInfo() {
      return proofEpochInfo_ != null;
    }
    /**
     * <pre>
     * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
     * to `app_hash` of the sealer header
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
     * @return The proofEpochInfo.
     */
    @java.lang.Override
    public com.tendermint.crypto.ProofProto.ProofOps getProofEpochInfo() {
      return proofEpochInfo_ == null ? com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofEpochInfo_;
    }
    /**
     * <pre>
     * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
     * to `app_hash` of the sealer header
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
     */
    @java.lang.Override
    public com.tendermint.crypto.ProofProto.ProofOpsOrBuilder getProofEpochInfoOrBuilder() {
      return proofEpochInfo_ == null ? com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofEpochInfo_;
    }

    public static final int PROOF_EPOCH_VAL_SET_FIELD_NUMBER = 3;
    private com.tendermint.crypto.ProofProto.ProofOps proofEpochValSet_;
    /**
     * <pre>
     * proof_epoch_info is the Merkle proof that the epoch's validator set is
     * committed to `app_hash` of the sealer header
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
     * @return Whether the proofEpochValSet field is set.
     */
    @java.lang.Override
    public boolean hasProofEpochValSet() {
      return proofEpochValSet_ != null;
    }
    /**
     * <pre>
     * proof_epoch_info is the Merkle proof that the epoch's validator set is
     * committed to `app_hash` of the sealer header
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
     * @return The proofEpochValSet.
     */
    @java.lang.Override
    public com.tendermint.crypto.ProofProto.ProofOps getProofEpochValSet() {
      return proofEpochValSet_ == null ? com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofEpochValSet_;
    }
    /**
     * <pre>
     * proof_epoch_info is the Merkle proof that the epoch's validator set is
     * committed to `app_hash` of the sealer header
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
     */
    @java.lang.Override
    public com.tendermint.crypto.ProofProto.ProofOpsOrBuilder getProofEpochValSetOrBuilder() {
      return proofEpochValSet_ == null ? com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofEpochValSet_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < validatorSet_.size(); i++) {
        output.writeMessage(1, validatorSet_.get(i));
      }
      if (proofEpochInfo_ != null) {
        output.writeMessage(2, getProofEpochInfo());
      }
      if (proofEpochValSet_ != null) {
        output.writeMessage(3, getProofEpochValSet());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < validatorSet_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, validatorSet_.get(i));
      }
      if (proofEpochInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProofEpochInfo());
      }
      if (proofEpochValSet_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getProofEpochValSet());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed)) {
        return super.equals(obj);
      }
      com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed other = (com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed) obj;

      if (!getValidatorSetList()
          .equals(other.getValidatorSetList())) return false;
      if (hasProofEpochInfo() != other.hasProofEpochInfo()) return false;
      if (hasProofEpochInfo()) {
        if (!getProofEpochInfo()
            .equals(other.getProofEpochInfo())) return false;
      }
      if (hasProofEpochValSet() != other.hasProofEpochValSet()) return false;
      if (hasProofEpochValSet()) {
        if (!getProofEpochValSet()
            .equals(other.getProofEpochValSet())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getValidatorSetCount() > 0) {
        hash = (37 * hash) + VALIDATOR_SET_FIELD_NUMBER;
        hash = (53 * hash) + getValidatorSetList().hashCode();
      }
      if (hasProofEpochInfo()) {
        hash = (37 * hash) + PROOF_EPOCH_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getProofEpochInfo().hashCode();
      }
      if (hasProofEpochValSet()) {
        hash = (37 * hash) + PROOF_EPOCH_VAL_SET_FIELD_NUMBER;
        hash = (53 * hash) + getProofEpochValSet().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ProofEpochSealed is the proof that an epoch is sealed by the sealer header,
     * i.e., the 2nd header of the next epoch With the access of metadata
     * - Metadata of this epoch, which includes the sealer header
     * - Raw checkpoint of this epoch
     * The verifier can perform the following verification rules:
     * - The raw checkpoint's `app_hash` is same as in the sealer header
     * - More than 2/3 (in voting power) validators in the validator set of this
     * epoch have signed `app_hash` of the sealer header
     * - The epoch metadata is committed to the `app_hash` of the sealer header
     * - The validator set is committed to the `app_hash` of the sealer header
     * </pre>
     *
     * Protobuf type {@code babylon.zoneconcierge.v1.ProofEpochSealed}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.zoneconcierge.v1.ProofEpochSealed)
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ProofEpochSealed_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ProofEpochSealed_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.Builder.class);
      }

      // Construct using com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (validatorSetBuilder_ == null) {
          validatorSet_ = java.util.Collections.emptyList();
        } else {
          validatorSet_ = null;
          validatorSetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        proofEpochInfo_ = null;
        if (proofEpochInfoBuilder_ != null) {
          proofEpochInfoBuilder_.dispose();
          proofEpochInfoBuilder_ = null;
        }
        proofEpochValSet_ = null;
        if (proofEpochValSetBuilder_ != null) {
          proofEpochValSetBuilder_.dispose();
          proofEpochValSetBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ProofEpochSealed_descriptor;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed getDefaultInstanceForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed build() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed buildPartial() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed result = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed result) {
        if (validatorSetBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            validatorSet_ = java.util.Collections.unmodifiableList(validatorSet_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.validatorSet_ = validatorSet_;
        } else {
          result.validatorSet_ = validatorSetBuilder_.build();
        }
      }

      private void buildPartial0(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.proofEpochInfo_ = proofEpochInfoBuilder_ == null
              ? proofEpochInfo_
              : proofEpochInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.proofEpochValSet_ = proofEpochValSetBuilder_ == null
              ? proofEpochValSet_
              : proofEpochValSetBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed) {
          return mergeFrom((com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed other) {
        if (other == com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.getDefaultInstance()) return this;
        if (validatorSetBuilder_ == null) {
          if (!other.validatorSet_.isEmpty()) {
            if (validatorSet_.isEmpty()) {
              validatorSet_ = other.validatorSet_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValidatorSetIsMutable();
              validatorSet_.addAll(other.validatorSet_);
            }
            onChanged();
          }
        } else {
          if (!other.validatorSet_.isEmpty()) {
            if (validatorSetBuilder_.isEmpty()) {
              validatorSetBuilder_.dispose();
              validatorSetBuilder_ = null;
              validatorSet_ = other.validatorSet_;
              bitField0_ = (bitField0_ & ~0x00000001);
              validatorSetBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValidatorSetFieldBuilder() : null;
            } else {
              validatorSetBuilder_.addAllMessages(other.validatorSet_);
            }
          }
        }
        if (other.hasProofEpochInfo()) {
          mergeProofEpochInfo(other.getProofEpochInfo());
        }
        if (other.hasProofEpochValSet()) {
          mergeProofEpochValSet(other.getProofEpochValSet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey m =
                    input.readMessage(
                        com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.parser(),
                        extensionRegistry);
                if (validatorSetBuilder_ == null) {
                  ensureValidatorSetIsMutable();
                  validatorSet_.add(m);
                } else {
                  validatorSetBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getProofEpochInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getProofEpochValSetFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey> validatorSet_ =
        java.util.Collections.emptyList();
      private void ensureValidatorSetIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          validatorSet_ = new java.util.ArrayList<com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey>(validatorSet_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey, com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.Builder, com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKeyOrBuilder> validatorSetBuilder_;

      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public java.util.List<com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey> getValidatorSetList() {
        if (validatorSetBuilder_ == null) {
          return java.util.Collections.unmodifiableList(validatorSet_);
        } else {
          return validatorSetBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public int getValidatorSetCount() {
        if (validatorSetBuilder_ == null) {
          return validatorSet_.size();
        } else {
          return validatorSetBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey getValidatorSet(int index) {
        if (validatorSetBuilder_ == null) {
          return validatorSet_.get(index);
        } else {
          return validatorSetBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public Builder setValidatorSet(
          int index, com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey value) {
        if (validatorSetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValidatorSetIsMutable();
          validatorSet_.set(index, value);
          onChanged();
        } else {
          validatorSetBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public Builder setValidatorSet(
          int index, com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.Builder builderForValue) {
        if (validatorSetBuilder_ == null) {
          ensureValidatorSetIsMutable();
          validatorSet_.set(index, builderForValue.build());
          onChanged();
        } else {
          validatorSetBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public Builder addValidatorSet(com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey value) {
        if (validatorSetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValidatorSetIsMutable();
          validatorSet_.add(value);
          onChanged();
        } else {
          validatorSetBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public Builder addValidatorSet(
          int index, com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey value) {
        if (validatorSetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValidatorSetIsMutable();
          validatorSet_.add(index, value);
          onChanged();
        } else {
          validatorSetBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public Builder addValidatorSet(
          com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.Builder builderForValue) {
        if (validatorSetBuilder_ == null) {
          ensureValidatorSetIsMutable();
          validatorSet_.add(builderForValue.build());
          onChanged();
        } else {
          validatorSetBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public Builder addValidatorSet(
          int index, com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.Builder builderForValue) {
        if (validatorSetBuilder_ == null) {
          ensureValidatorSetIsMutable();
          validatorSet_.add(index, builderForValue.build());
          onChanged();
        } else {
          validatorSetBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public Builder addAllValidatorSet(
          java.lang.Iterable<? extends com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey> values) {
        if (validatorSetBuilder_ == null) {
          ensureValidatorSetIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, validatorSet_);
          onChanged();
        } else {
          validatorSetBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public Builder clearValidatorSet() {
        if (validatorSetBuilder_ == null) {
          validatorSet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          validatorSetBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public Builder removeValidatorSet(int index) {
        if (validatorSetBuilder_ == null) {
          ensureValidatorSetIsMutable();
          validatorSet_.remove(index);
          onChanged();
        } else {
          validatorSetBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.Builder getValidatorSetBuilder(
          int index) {
        return getValidatorSetFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKeyOrBuilder getValidatorSetOrBuilder(
          int index) {
        if (validatorSetBuilder_ == null) {
          return validatorSet_.get(index);  } else {
          return validatorSetBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public java.util.List<? extends com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKeyOrBuilder> 
           getValidatorSetOrBuilderList() {
        if (validatorSetBuilder_ != null) {
          return validatorSetBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(validatorSet_);
        }
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.Builder addValidatorSetBuilder() {
        return getValidatorSetFieldBuilder().addBuilder(
            com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.getDefaultInstance());
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.Builder addValidatorSetBuilder(
          int index) {
        return getValidatorSetFieldBuilder().addBuilder(
            index, com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.getDefaultInstance());
      }
      /**
       * <pre>
       * validator_set is the validator set of the sealed epoch
       * This validator set has generated a BLS multisig on `app_hash` of
       * the sealer header
       * </pre>
       *
       * <code>repeated .babylon.checkpointing.v1.ValidatorWithBlsKey validator_set = 1 [json_name = "validatorSet"];</code>
       */
      public java.util.List<com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.Builder> 
           getValidatorSetBuilderList() {
        return getValidatorSetFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey, com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.Builder, com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKeyOrBuilder> 
          getValidatorSetFieldBuilder() {
        if (validatorSetBuilder_ == null) {
          validatorSetBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey, com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKey.Builder, com.babylon.checkpointing.v1.BlsKeyProto.ValidatorWithBlsKeyOrBuilder>(
                  validatorSet_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          validatorSet_ = null;
        }
        return validatorSetBuilder_;
      }

      private com.tendermint.crypto.ProofProto.ProofOps proofEpochInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tendermint.crypto.ProofProto.ProofOps, com.tendermint.crypto.ProofProto.ProofOps.Builder, com.tendermint.crypto.ProofProto.ProofOpsOrBuilder> proofEpochInfoBuilder_;
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
       * to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
       * @return Whether the proofEpochInfo field is set.
       */
      public boolean hasProofEpochInfo() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
       * to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
       * @return The proofEpochInfo.
       */
      public com.tendermint.crypto.ProofProto.ProofOps getProofEpochInfo() {
        if (proofEpochInfoBuilder_ == null) {
          return proofEpochInfo_ == null ? com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofEpochInfo_;
        } else {
          return proofEpochInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
       * to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
       */
      public Builder setProofEpochInfo(com.tendermint.crypto.ProofProto.ProofOps value) {
        if (proofEpochInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          proofEpochInfo_ = value;
        } else {
          proofEpochInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
       * to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
       */
      public Builder setProofEpochInfo(
          com.tendermint.crypto.ProofProto.ProofOps.Builder builderForValue) {
        if (proofEpochInfoBuilder_ == null) {
          proofEpochInfo_ = builderForValue.build();
        } else {
          proofEpochInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
       * to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
       */
      public Builder mergeProofEpochInfo(com.tendermint.crypto.ProofProto.ProofOps value) {
        if (proofEpochInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            proofEpochInfo_ != null &&
            proofEpochInfo_ != com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance()) {
            getProofEpochInfoBuilder().mergeFrom(value);
          } else {
            proofEpochInfo_ = value;
          }
        } else {
          proofEpochInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
       * to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
       */
      public Builder clearProofEpochInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        proofEpochInfo_ = null;
        if (proofEpochInfoBuilder_ != null) {
          proofEpochInfoBuilder_.dispose();
          proofEpochInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
       * to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
       */
      public com.tendermint.crypto.ProofProto.ProofOps.Builder getProofEpochInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getProofEpochInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
       * to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
       */
      public com.tendermint.crypto.ProofProto.ProofOpsOrBuilder getProofEpochInfoOrBuilder() {
        if (proofEpochInfoBuilder_ != null) {
          return proofEpochInfoBuilder_.getMessageOrBuilder();
        } else {
          return proofEpochInfo_ == null ?
              com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofEpochInfo_;
        }
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's metadata is committed
       * to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_info = 2 [json_name = "proofEpochInfo"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tendermint.crypto.ProofProto.ProofOps, com.tendermint.crypto.ProofProto.ProofOps.Builder, com.tendermint.crypto.ProofProto.ProofOpsOrBuilder> 
          getProofEpochInfoFieldBuilder() {
        if (proofEpochInfoBuilder_ == null) {
          proofEpochInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tendermint.crypto.ProofProto.ProofOps, com.tendermint.crypto.ProofProto.ProofOps.Builder, com.tendermint.crypto.ProofProto.ProofOpsOrBuilder>(
                  getProofEpochInfo(),
                  getParentForChildren(),
                  isClean());
          proofEpochInfo_ = null;
        }
        return proofEpochInfoBuilder_;
      }

      private com.tendermint.crypto.ProofProto.ProofOps proofEpochValSet_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tendermint.crypto.ProofProto.ProofOps, com.tendermint.crypto.ProofProto.ProofOps.Builder, com.tendermint.crypto.ProofProto.ProofOpsOrBuilder> proofEpochValSetBuilder_;
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's validator set is
       * committed to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
       * @return Whether the proofEpochValSet field is set.
       */
      public boolean hasProofEpochValSet() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's validator set is
       * committed to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
       * @return The proofEpochValSet.
       */
      public com.tendermint.crypto.ProofProto.ProofOps getProofEpochValSet() {
        if (proofEpochValSetBuilder_ == null) {
          return proofEpochValSet_ == null ? com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofEpochValSet_;
        } else {
          return proofEpochValSetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's validator set is
       * committed to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
       */
      public Builder setProofEpochValSet(com.tendermint.crypto.ProofProto.ProofOps value) {
        if (proofEpochValSetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          proofEpochValSet_ = value;
        } else {
          proofEpochValSetBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's validator set is
       * committed to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
       */
      public Builder setProofEpochValSet(
          com.tendermint.crypto.ProofProto.ProofOps.Builder builderForValue) {
        if (proofEpochValSetBuilder_ == null) {
          proofEpochValSet_ = builderForValue.build();
        } else {
          proofEpochValSetBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's validator set is
       * committed to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
       */
      public Builder mergeProofEpochValSet(com.tendermint.crypto.ProofProto.ProofOps value) {
        if (proofEpochValSetBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            proofEpochValSet_ != null &&
            proofEpochValSet_ != com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance()) {
            getProofEpochValSetBuilder().mergeFrom(value);
          } else {
            proofEpochValSet_ = value;
          }
        } else {
          proofEpochValSetBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's validator set is
       * committed to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
       */
      public Builder clearProofEpochValSet() {
        bitField0_ = (bitField0_ & ~0x00000004);
        proofEpochValSet_ = null;
        if (proofEpochValSetBuilder_ != null) {
          proofEpochValSetBuilder_.dispose();
          proofEpochValSetBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's validator set is
       * committed to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
       */
      public com.tendermint.crypto.ProofProto.ProofOps.Builder getProofEpochValSetBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getProofEpochValSetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's validator set is
       * committed to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
       */
      public com.tendermint.crypto.ProofProto.ProofOpsOrBuilder getProofEpochValSetOrBuilder() {
        if (proofEpochValSetBuilder_ != null) {
          return proofEpochValSetBuilder_.getMessageOrBuilder();
        } else {
          return proofEpochValSet_ == null ?
              com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofEpochValSet_;
        }
      }
      /**
       * <pre>
       * proof_epoch_info is the Merkle proof that the epoch's validator set is
       * committed to `app_hash` of the sealer header
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_epoch_val_set = 3 [json_name = "proofEpochValSet"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tendermint.crypto.ProofProto.ProofOps, com.tendermint.crypto.ProofProto.ProofOps.Builder, com.tendermint.crypto.ProofProto.ProofOpsOrBuilder> 
          getProofEpochValSetFieldBuilder() {
        if (proofEpochValSetBuilder_ == null) {
          proofEpochValSetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tendermint.crypto.ProofProto.ProofOps, com.tendermint.crypto.ProofProto.ProofOps.Builder, com.tendermint.crypto.ProofProto.ProofOpsOrBuilder>(
                  getProofEpochValSet(),
                  getParentForChildren(),
                  isClean());
          proofEpochValSet_ = null;
        }
        return proofEpochValSetBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.zoneconcierge.v1.ProofEpochSealed)
    }

    // @@protoc_insertion_point(class_scope:babylon.zoneconcierge.v1.ProofEpochSealed)
    private static final com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed();
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProofEpochSealed>
        PARSER = new com.google.protobuf.AbstractParser<ProofEpochSealed>() {
      @java.lang.Override
      public ProofEpochSealed parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProofEpochSealed> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProofEpochSealed> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProofFinalizedChainInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.zoneconcierge.v1.ProofFinalizedChainInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
     * within a certain epoch
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
     * @return Whether the proofCzHeaderInEpoch field is set.
     */
    boolean hasProofCzHeaderInEpoch();
    /**
     * <pre>
     * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
     * within a certain epoch
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
     * @return The proofCzHeaderInEpoch.
     */
    com.tendermint.crypto.ProofProto.ProofOps getProofCzHeaderInEpoch();
    /**
     * <pre>
     * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
     * within a certain epoch
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
     */
    com.tendermint.crypto.ProofProto.ProofOpsOrBuilder getProofCzHeaderInEpochOrBuilder();

    /**
     * <pre>
     * proof_epoch_sealed is the proof that the epoch is sealed
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
     * @return Whether the proofEpochSealed field is set.
     */
    boolean hasProofEpochSealed();
    /**
     * <pre>
     * proof_epoch_sealed is the proof that the epoch is sealed
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
     * @return The proofEpochSealed.
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed getProofEpochSealed();
    /**
     * <pre>
     * proof_epoch_sealed is the proof that the epoch is sealed
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
     */
    com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealedOrBuilder getProofEpochSealedOrBuilder();

    /**
     * <pre>
     * proof_epoch_submitted is the proof that the epoch's checkpoint is included
     * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
     * checkpoint submission
     * </pre>
     *
     * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
     */
    java.util.List<com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo> 
        getProofEpochSubmittedList();
    /**
     * <pre>
     * proof_epoch_submitted is the proof that the epoch's checkpoint is included
     * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
     * checkpoint submission
     * </pre>
     *
     * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
     */
    com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo getProofEpochSubmitted(int index);
    /**
     * <pre>
     * proof_epoch_submitted is the proof that the epoch's checkpoint is included
     * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
     * checkpoint submission
     * </pre>
     *
     * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
     */
    int getProofEpochSubmittedCount();
    /**
     * <pre>
     * proof_epoch_submitted is the proof that the epoch's checkpoint is included
     * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
     * checkpoint submission
     * </pre>
     *
     * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
     */
    java.util.List<? extends com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfoOrBuilder> 
        getProofEpochSubmittedOrBuilderList();
    /**
     * <pre>
     * proof_epoch_submitted is the proof that the epoch's checkpoint is included
     * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
     * checkpoint submission
     * </pre>
     *
     * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
     */
    com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfoOrBuilder getProofEpochSubmittedOrBuilder(
        int index);
  }
  /**
   * <pre>
   * ProofFinalizedChainInfo is a set of proofs that attest a chain info is
   * BTC-finalised
   * </pre>
   *
   * Protobuf type {@code babylon.zoneconcierge.v1.ProofFinalizedChainInfo}
   */
  public static final class ProofFinalizedChainInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.zoneconcierge.v1.ProofFinalizedChainInfo)
      ProofFinalizedChainInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProofFinalizedChainInfo.newBuilder() to construct.
    private ProofFinalizedChainInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProofFinalizedChainInfo() {
      proofEpochSubmitted_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProofFinalizedChainInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ProofFinalizedChainInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ProofFinalizedChainInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.Builder.class);
    }

    public static final int PROOF_CZ_HEADER_IN_EPOCH_FIELD_NUMBER = 1;
    private com.tendermint.crypto.ProofProto.ProofOps proofCzHeaderInEpoch_;
    /**
     * <pre>
     * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
     * within a certain epoch
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
     * @return Whether the proofCzHeaderInEpoch field is set.
     */
    @java.lang.Override
    public boolean hasProofCzHeaderInEpoch() {
      return proofCzHeaderInEpoch_ != null;
    }
    /**
     * <pre>
     * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
     * within a certain epoch
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
     * @return The proofCzHeaderInEpoch.
     */
    @java.lang.Override
    public com.tendermint.crypto.ProofProto.ProofOps getProofCzHeaderInEpoch() {
      return proofCzHeaderInEpoch_ == null ? com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofCzHeaderInEpoch_;
    }
    /**
     * <pre>
     * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
     * within a certain epoch
     * </pre>
     *
     * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
     */
    @java.lang.Override
    public com.tendermint.crypto.ProofProto.ProofOpsOrBuilder getProofCzHeaderInEpochOrBuilder() {
      return proofCzHeaderInEpoch_ == null ? com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofCzHeaderInEpoch_;
    }

    public static final int PROOF_EPOCH_SEALED_FIELD_NUMBER = 2;
    private com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed proofEpochSealed_;
    /**
     * <pre>
     * proof_epoch_sealed is the proof that the epoch is sealed
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
     * @return Whether the proofEpochSealed field is set.
     */
    @java.lang.Override
    public boolean hasProofEpochSealed() {
      return proofEpochSealed_ != null;
    }
    /**
     * <pre>
     * proof_epoch_sealed is the proof that the epoch is sealed
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
     * @return The proofEpochSealed.
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed getProofEpochSealed() {
      return proofEpochSealed_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.getDefaultInstance() : proofEpochSealed_;
    }
    /**
     * <pre>
     * proof_epoch_sealed is the proof that the epoch is sealed
     * </pre>
     *
     * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
     */
    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealedOrBuilder getProofEpochSealedOrBuilder() {
      return proofEpochSealed_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.getDefaultInstance() : proofEpochSealed_;
    }

    public static final int PROOF_EPOCH_SUBMITTED_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo> proofEpochSubmitted_;
    /**
     * <pre>
     * proof_epoch_submitted is the proof that the epoch's checkpoint is included
     * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
     * checkpoint submission
     * </pre>
     *
     * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
     */
    @java.lang.Override
    public java.util.List<com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo> getProofEpochSubmittedList() {
      return proofEpochSubmitted_;
    }
    /**
     * <pre>
     * proof_epoch_submitted is the proof that the epoch's checkpoint is included
     * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
     * checkpoint submission
     * </pre>
     *
     * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfoOrBuilder> 
        getProofEpochSubmittedOrBuilderList() {
      return proofEpochSubmitted_;
    }
    /**
     * <pre>
     * proof_epoch_submitted is the proof that the epoch's checkpoint is included
     * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
     * checkpoint submission
     * </pre>
     *
     * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
     */
    @java.lang.Override
    public int getProofEpochSubmittedCount() {
      return proofEpochSubmitted_.size();
    }
    /**
     * <pre>
     * proof_epoch_submitted is the proof that the epoch's checkpoint is included
     * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
     * checkpoint submission
     * </pre>
     *
     * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
     */
    @java.lang.Override
    public com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo getProofEpochSubmitted(int index) {
      return proofEpochSubmitted_.get(index);
    }
    /**
     * <pre>
     * proof_epoch_submitted is the proof that the epoch's checkpoint is included
     * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
     * checkpoint submission
     * </pre>
     *
     * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
     */
    @java.lang.Override
    public com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfoOrBuilder getProofEpochSubmittedOrBuilder(
        int index) {
      return proofEpochSubmitted_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (proofCzHeaderInEpoch_ != null) {
        output.writeMessage(1, getProofCzHeaderInEpoch());
      }
      if (proofEpochSealed_ != null) {
        output.writeMessage(2, getProofEpochSealed());
      }
      for (int i = 0; i < proofEpochSubmitted_.size(); i++) {
        output.writeMessage(3, proofEpochSubmitted_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (proofCzHeaderInEpoch_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProofCzHeaderInEpoch());
      }
      if (proofEpochSealed_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProofEpochSealed());
      }
      for (int i = 0; i < proofEpochSubmitted_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, proofEpochSubmitted_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo)) {
        return super.equals(obj);
      }
      com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo other = (com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo) obj;

      if (hasProofCzHeaderInEpoch() != other.hasProofCzHeaderInEpoch()) return false;
      if (hasProofCzHeaderInEpoch()) {
        if (!getProofCzHeaderInEpoch()
            .equals(other.getProofCzHeaderInEpoch())) return false;
      }
      if (hasProofEpochSealed() != other.hasProofEpochSealed()) return false;
      if (hasProofEpochSealed()) {
        if (!getProofEpochSealed()
            .equals(other.getProofEpochSealed())) return false;
      }
      if (!getProofEpochSubmittedList()
          .equals(other.getProofEpochSubmittedList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasProofCzHeaderInEpoch()) {
        hash = (37 * hash) + PROOF_CZ_HEADER_IN_EPOCH_FIELD_NUMBER;
        hash = (53 * hash) + getProofCzHeaderInEpoch().hashCode();
      }
      if (hasProofEpochSealed()) {
        hash = (37 * hash) + PROOF_EPOCH_SEALED_FIELD_NUMBER;
        hash = (53 * hash) + getProofEpochSealed().hashCode();
      }
      if (getProofEpochSubmittedCount() > 0) {
        hash = (37 * hash) + PROOF_EPOCH_SUBMITTED_FIELD_NUMBER;
        hash = (53 * hash) + getProofEpochSubmittedList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ProofFinalizedChainInfo is a set of proofs that attest a chain info is
     * BTC-finalised
     * </pre>
     *
     * Protobuf type {@code babylon.zoneconcierge.v1.ProofFinalizedChainInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.zoneconcierge.v1.ProofFinalizedChainInfo)
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ProofFinalizedChainInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ProofFinalizedChainInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.Builder.class);
      }

      // Construct using com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        proofCzHeaderInEpoch_ = null;
        if (proofCzHeaderInEpochBuilder_ != null) {
          proofCzHeaderInEpochBuilder_.dispose();
          proofCzHeaderInEpochBuilder_ = null;
        }
        proofEpochSealed_ = null;
        if (proofEpochSealedBuilder_ != null) {
          proofEpochSealedBuilder_.dispose();
          proofEpochSealedBuilder_ = null;
        }
        if (proofEpochSubmittedBuilder_ == null) {
          proofEpochSubmitted_ = java.util.Collections.emptyList();
        } else {
          proofEpochSubmitted_ = null;
          proofEpochSubmittedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_ProofFinalizedChainInfo_descriptor;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo getDefaultInstanceForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo build() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo buildPartial() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo result = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo result) {
        if (proofEpochSubmittedBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            proofEpochSubmitted_ = java.util.Collections.unmodifiableList(proofEpochSubmitted_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.proofEpochSubmitted_ = proofEpochSubmitted_;
        } else {
          result.proofEpochSubmitted_ = proofEpochSubmittedBuilder_.build();
        }
      }

      private void buildPartial0(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.proofCzHeaderInEpoch_ = proofCzHeaderInEpochBuilder_ == null
              ? proofCzHeaderInEpoch_
              : proofCzHeaderInEpochBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.proofEpochSealed_ = proofEpochSealedBuilder_ == null
              ? proofEpochSealed_
              : proofEpochSealedBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo) {
          return mergeFrom((com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo other) {
        if (other == com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo.getDefaultInstance()) return this;
        if (other.hasProofCzHeaderInEpoch()) {
          mergeProofCzHeaderInEpoch(other.getProofCzHeaderInEpoch());
        }
        if (other.hasProofEpochSealed()) {
          mergeProofEpochSealed(other.getProofEpochSealed());
        }
        if (proofEpochSubmittedBuilder_ == null) {
          if (!other.proofEpochSubmitted_.isEmpty()) {
            if (proofEpochSubmitted_.isEmpty()) {
              proofEpochSubmitted_ = other.proofEpochSubmitted_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureProofEpochSubmittedIsMutable();
              proofEpochSubmitted_.addAll(other.proofEpochSubmitted_);
            }
            onChanged();
          }
        } else {
          if (!other.proofEpochSubmitted_.isEmpty()) {
            if (proofEpochSubmittedBuilder_.isEmpty()) {
              proofEpochSubmittedBuilder_.dispose();
              proofEpochSubmittedBuilder_ = null;
              proofEpochSubmitted_ = other.proofEpochSubmitted_;
              bitField0_ = (bitField0_ & ~0x00000004);
              proofEpochSubmittedBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getProofEpochSubmittedFieldBuilder() : null;
            } else {
              proofEpochSubmittedBuilder_.addAllMessages(other.proofEpochSubmitted_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getProofCzHeaderInEpochFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getProofEpochSealedFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo m =
                    input.readMessage(
                        com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.parser(),
                        extensionRegistry);
                if (proofEpochSubmittedBuilder_ == null) {
                  ensureProofEpochSubmittedIsMutable();
                  proofEpochSubmitted_.add(m);
                } else {
                  proofEpochSubmittedBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.tendermint.crypto.ProofProto.ProofOps proofCzHeaderInEpoch_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tendermint.crypto.ProofProto.ProofOps, com.tendermint.crypto.ProofProto.ProofOps.Builder, com.tendermint.crypto.ProofProto.ProofOpsOrBuilder> proofCzHeaderInEpochBuilder_;
      /**
       * <pre>
       * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
       * within a certain epoch
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
       * @return Whether the proofCzHeaderInEpoch field is set.
       */
      public boolean hasProofCzHeaderInEpoch() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
       * within a certain epoch
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
       * @return The proofCzHeaderInEpoch.
       */
      public com.tendermint.crypto.ProofProto.ProofOps getProofCzHeaderInEpoch() {
        if (proofCzHeaderInEpochBuilder_ == null) {
          return proofCzHeaderInEpoch_ == null ? com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofCzHeaderInEpoch_;
        } else {
          return proofCzHeaderInEpochBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
       * within a certain epoch
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
       */
      public Builder setProofCzHeaderInEpoch(com.tendermint.crypto.ProofProto.ProofOps value) {
        if (proofCzHeaderInEpochBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          proofCzHeaderInEpoch_ = value;
        } else {
          proofCzHeaderInEpochBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
       * within a certain epoch
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
       */
      public Builder setProofCzHeaderInEpoch(
          com.tendermint.crypto.ProofProto.ProofOps.Builder builderForValue) {
        if (proofCzHeaderInEpochBuilder_ == null) {
          proofCzHeaderInEpoch_ = builderForValue.build();
        } else {
          proofCzHeaderInEpochBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
       * within a certain epoch
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
       */
      public Builder mergeProofCzHeaderInEpoch(com.tendermint.crypto.ProofProto.ProofOps value) {
        if (proofCzHeaderInEpochBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            proofCzHeaderInEpoch_ != null &&
            proofCzHeaderInEpoch_ != com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance()) {
            getProofCzHeaderInEpochBuilder().mergeFrom(value);
          } else {
            proofCzHeaderInEpoch_ = value;
          }
        } else {
          proofCzHeaderInEpochBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
       * within a certain epoch
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
       */
      public Builder clearProofCzHeaderInEpoch() {
        bitField0_ = (bitField0_ & ~0x00000001);
        proofCzHeaderInEpoch_ = null;
        if (proofCzHeaderInEpochBuilder_ != null) {
          proofCzHeaderInEpochBuilder_.dispose();
          proofCzHeaderInEpochBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
       * within a certain epoch
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
       */
      public com.tendermint.crypto.ProofProto.ProofOps.Builder getProofCzHeaderInEpochBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getProofCzHeaderInEpochFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
       * within a certain epoch
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
       */
      public com.tendermint.crypto.ProofProto.ProofOpsOrBuilder getProofCzHeaderInEpochOrBuilder() {
        if (proofCzHeaderInEpochBuilder_ != null) {
          return proofCzHeaderInEpochBuilder_.getMessageOrBuilder();
        } else {
          return proofCzHeaderInEpoch_ == null ?
              com.tendermint.crypto.ProofProto.ProofOps.getDefaultInstance() : proofCzHeaderInEpoch_;
        }
      }
      /**
       * <pre>
       * proof_cz_header_in_epoch is the proof that the CZ header is timestamped
       * within a certain epoch
       * </pre>
       *
       * <code>.tendermint.crypto.ProofOps proof_cz_header_in_epoch = 1 [json_name = "proofCzHeaderInEpoch"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tendermint.crypto.ProofProto.ProofOps, com.tendermint.crypto.ProofProto.ProofOps.Builder, com.tendermint.crypto.ProofProto.ProofOpsOrBuilder> 
          getProofCzHeaderInEpochFieldBuilder() {
        if (proofCzHeaderInEpochBuilder_ == null) {
          proofCzHeaderInEpochBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tendermint.crypto.ProofProto.ProofOps, com.tendermint.crypto.ProofProto.ProofOps.Builder, com.tendermint.crypto.ProofProto.ProofOpsOrBuilder>(
                  getProofCzHeaderInEpoch(),
                  getParentForChildren(),
                  isClean());
          proofCzHeaderInEpoch_ = null;
        }
        return proofCzHeaderInEpochBuilder_;
      }

      private com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed proofEpochSealed_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealedOrBuilder> proofEpochSealedBuilder_;
      /**
       * <pre>
       * proof_epoch_sealed is the proof that the epoch is sealed
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
       * @return Whether the proofEpochSealed field is set.
       */
      public boolean hasProofEpochSealed() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * proof_epoch_sealed is the proof that the epoch is sealed
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
       * @return The proofEpochSealed.
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed getProofEpochSealed() {
        if (proofEpochSealedBuilder_ == null) {
          return proofEpochSealed_ == null ? com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.getDefaultInstance() : proofEpochSealed_;
        } else {
          return proofEpochSealedBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * proof_epoch_sealed is the proof that the epoch is sealed
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
       */
      public Builder setProofEpochSealed(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed value) {
        if (proofEpochSealedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          proofEpochSealed_ = value;
        } else {
          proofEpochSealedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_epoch_sealed is the proof that the epoch is sealed
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
       */
      public Builder setProofEpochSealed(
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.Builder builderForValue) {
        if (proofEpochSealedBuilder_ == null) {
          proofEpochSealed_ = builderForValue.build();
        } else {
          proofEpochSealedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_epoch_sealed is the proof that the epoch is sealed
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
       */
      public Builder mergeProofEpochSealed(com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed value) {
        if (proofEpochSealedBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            proofEpochSealed_ != null &&
            proofEpochSealed_ != com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.getDefaultInstance()) {
            getProofEpochSealedBuilder().mergeFrom(value);
          } else {
            proofEpochSealed_ = value;
          }
        } else {
          proofEpochSealedBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_epoch_sealed is the proof that the epoch is sealed
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
       */
      public Builder clearProofEpochSealed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        proofEpochSealed_ = null;
        if (proofEpochSealedBuilder_ != null) {
          proofEpochSealedBuilder_.dispose();
          proofEpochSealedBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proof_epoch_sealed is the proof that the epoch is sealed
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.Builder getProofEpochSealedBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getProofEpochSealedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * proof_epoch_sealed is the proof that the epoch is sealed
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
       */
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealedOrBuilder getProofEpochSealedOrBuilder() {
        if (proofEpochSealedBuilder_ != null) {
          return proofEpochSealedBuilder_.getMessageOrBuilder();
        } else {
          return proofEpochSealed_ == null ?
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.getDefaultInstance() : proofEpochSealed_;
        }
      }
      /**
       * <pre>
       * proof_epoch_sealed is the proof that the epoch is sealed
       * </pre>
       *
       * <code>.babylon.zoneconcierge.v1.ProofEpochSealed proof_epoch_sealed = 2 [json_name = "proofEpochSealed"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealedOrBuilder> 
          getProofEpochSealedFieldBuilder() {
        if (proofEpochSealedBuilder_ == null) {
          proofEpochSealedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealed.Builder, com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofEpochSealedOrBuilder>(
                  getProofEpochSealed(),
                  getParentForChildren(),
                  isClean());
          proofEpochSealed_ = null;
        }
        return proofEpochSealedBuilder_;
      }

      private java.util.List<com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo> proofEpochSubmitted_ =
        java.util.Collections.emptyList();
      private void ensureProofEpochSubmittedIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          proofEpochSubmitted_ = new java.util.ArrayList<com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo>(proofEpochSubmitted_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo, com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.Builder, com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfoOrBuilder> proofEpochSubmittedBuilder_;

      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public java.util.List<com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo> getProofEpochSubmittedList() {
        if (proofEpochSubmittedBuilder_ == null) {
          return java.util.Collections.unmodifiableList(proofEpochSubmitted_);
        } else {
          return proofEpochSubmittedBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public int getProofEpochSubmittedCount() {
        if (proofEpochSubmittedBuilder_ == null) {
          return proofEpochSubmitted_.size();
        } else {
          return proofEpochSubmittedBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo getProofEpochSubmitted(int index) {
        if (proofEpochSubmittedBuilder_ == null) {
          return proofEpochSubmitted_.get(index);
        } else {
          return proofEpochSubmittedBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public Builder setProofEpochSubmitted(
          int index, com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo value) {
        if (proofEpochSubmittedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProofEpochSubmittedIsMutable();
          proofEpochSubmitted_.set(index, value);
          onChanged();
        } else {
          proofEpochSubmittedBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public Builder setProofEpochSubmitted(
          int index, com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.Builder builderForValue) {
        if (proofEpochSubmittedBuilder_ == null) {
          ensureProofEpochSubmittedIsMutable();
          proofEpochSubmitted_.set(index, builderForValue.build());
          onChanged();
        } else {
          proofEpochSubmittedBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public Builder addProofEpochSubmitted(com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo value) {
        if (proofEpochSubmittedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProofEpochSubmittedIsMutable();
          proofEpochSubmitted_.add(value);
          onChanged();
        } else {
          proofEpochSubmittedBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public Builder addProofEpochSubmitted(
          int index, com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo value) {
        if (proofEpochSubmittedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProofEpochSubmittedIsMutable();
          proofEpochSubmitted_.add(index, value);
          onChanged();
        } else {
          proofEpochSubmittedBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public Builder addProofEpochSubmitted(
          com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.Builder builderForValue) {
        if (proofEpochSubmittedBuilder_ == null) {
          ensureProofEpochSubmittedIsMutable();
          proofEpochSubmitted_.add(builderForValue.build());
          onChanged();
        } else {
          proofEpochSubmittedBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public Builder addProofEpochSubmitted(
          int index, com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.Builder builderForValue) {
        if (proofEpochSubmittedBuilder_ == null) {
          ensureProofEpochSubmittedIsMutable();
          proofEpochSubmitted_.add(index, builderForValue.build());
          onChanged();
        } else {
          proofEpochSubmittedBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public Builder addAllProofEpochSubmitted(
          java.lang.Iterable<? extends com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo> values) {
        if (proofEpochSubmittedBuilder_ == null) {
          ensureProofEpochSubmittedIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, proofEpochSubmitted_);
          onChanged();
        } else {
          proofEpochSubmittedBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public Builder clearProofEpochSubmitted() {
        if (proofEpochSubmittedBuilder_ == null) {
          proofEpochSubmitted_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          proofEpochSubmittedBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public Builder removeProofEpochSubmitted(int index) {
        if (proofEpochSubmittedBuilder_ == null) {
          ensureProofEpochSubmittedIsMutable();
          proofEpochSubmitted_.remove(index);
          onChanged();
        } else {
          proofEpochSubmittedBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.Builder getProofEpochSubmittedBuilder(
          int index) {
        return getProofEpochSubmittedFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfoOrBuilder getProofEpochSubmittedOrBuilder(
          int index) {
        if (proofEpochSubmittedBuilder_ == null) {
          return proofEpochSubmitted_.get(index);  } else {
          return proofEpochSubmittedBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public java.util.List<? extends com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfoOrBuilder> 
           getProofEpochSubmittedOrBuilderList() {
        if (proofEpochSubmittedBuilder_ != null) {
          return proofEpochSubmittedBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(proofEpochSubmitted_);
        }
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.Builder addProofEpochSubmittedBuilder() {
        return getProofEpochSubmittedFieldBuilder().addBuilder(
            com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.Builder addProofEpochSubmittedBuilder(
          int index) {
        return getProofEpochSubmittedFieldBuilder().addBuilder(
            index, com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * proof_epoch_submitted is the proof that the epoch's checkpoint is included
       * in BTC ledger It is the two TransactionInfo in the best (i.e., earliest)
       * checkpoint submission
       * </pre>
       *
       * <code>repeated .babylon.btccheckpoint.v1.TransactionInfo proof_epoch_submitted = 3 [json_name = "proofEpochSubmitted"];</code>
       */
      public java.util.List<com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.Builder> 
           getProofEpochSubmittedBuilderList() {
        return getProofEpochSubmittedFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo, com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.Builder, com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfoOrBuilder> 
          getProofEpochSubmittedFieldBuilder() {
        if (proofEpochSubmittedBuilder_ == null) {
          proofEpochSubmittedBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo, com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfo.Builder, com.babylon.btccheckpoint.v1.BtccheckpointProto.TransactionInfoOrBuilder>(
                  proofEpochSubmitted_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          proofEpochSubmitted_ = null;
        }
        return proofEpochSubmittedBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.zoneconcierge.v1.ProofFinalizedChainInfo)
    }

    // @@protoc_insertion_point(class_scope:babylon.zoneconcierge.v1.ProofFinalizedChainInfo)
    private static final com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo();
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProofFinalizedChainInfo>
        PARSER = new com.google.protobuf.AbstractParser<ProofFinalizedChainInfo>() {
      @java.lang.Override
      public ProofFinalizedChainInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProofFinalizedChainInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProofFinalizedChainInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.ProofFinalizedChainInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BTCChainSegmentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:babylon.zoneconcierge.v1.BTCChainSegment)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
     */
    java.util.List<com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo> 
        getBtcHeadersList();
    /**
     * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
     */
    com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo getBtcHeaders(int index);
    /**
     * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
     */
    int getBtcHeadersCount();
    /**
     * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
     */
    java.util.List<? extends com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfoOrBuilder> 
        getBtcHeadersOrBuilderList();
    /**
     * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
     */
    com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfoOrBuilder getBtcHeadersOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Btc light client chain segment grown during last finalized epoch
   * </pre>
   *
   * Protobuf type {@code babylon.zoneconcierge.v1.BTCChainSegment}
   */
  public static final class BTCChainSegment extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:babylon.zoneconcierge.v1.BTCChainSegment)
      BTCChainSegmentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BTCChainSegment.newBuilder() to construct.
    private BTCChainSegment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BTCChainSegment() {
      btcHeaders_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BTCChainSegment();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_BTCChainSegment_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_BTCChainSegment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment.Builder.class);
    }

    public static final int BTC_HEADERS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo> btcHeaders_;
    /**
     * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
     */
    @java.lang.Override
    public java.util.List<com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo> getBtcHeadersList() {
      return btcHeaders_;
    }
    /**
     * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfoOrBuilder> 
        getBtcHeadersOrBuilderList() {
      return btcHeaders_;
    }
    /**
     * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
     */
    @java.lang.Override
    public int getBtcHeadersCount() {
      return btcHeaders_.size();
    }
    /**
     * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
     */
    @java.lang.Override
    public com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo getBtcHeaders(int index) {
      return btcHeaders_.get(index);
    }
    /**
     * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
     */
    @java.lang.Override
    public com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfoOrBuilder getBtcHeadersOrBuilder(
        int index) {
      return btcHeaders_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < btcHeaders_.size(); i++) {
        output.writeMessage(1, btcHeaders_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < btcHeaders_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, btcHeaders_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment)) {
        return super.equals(obj);
      }
      com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment other = (com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment) obj;

      if (!getBtcHeadersList()
          .equals(other.getBtcHeadersList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getBtcHeadersCount() > 0) {
        hash = (37 * hash) + BTC_HEADERS_FIELD_NUMBER;
        hash = (53 * hash) + getBtcHeadersList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Btc light client chain segment grown during last finalized epoch
     * </pre>
     *
     * Protobuf type {@code babylon.zoneconcierge.v1.BTCChainSegment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:babylon.zoneconcierge.v1.BTCChainSegment)
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_BTCChainSegment_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_BTCChainSegment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment.class, com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment.Builder.class);
      }

      // Construct using com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (btcHeadersBuilder_ == null) {
          btcHeaders_ = java.util.Collections.emptyList();
        } else {
          btcHeaders_ = null;
          btcHeadersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.internal_static_babylon_zoneconcierge_v1_BTCChainSegment_descriptor;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment getDefaultInstanceForType() {
        return com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment.getDefaultInstance();
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment build() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment buildPartial() {
        com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment result = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment result) {
        if (btcHeadersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            btcHeaders_ = java.util.Collections.unmodifiableList(btcHeaders_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.btcHeaders_ = btcHeaders_;
        } else {
          result.btcHeaders_ = btcHeadersBuilder_.build();
        }
      }

      private void buildPartial0(com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment) {
          return mergeFrom((com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment other) {
        if (other == com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment.getDefaultInstance()) return this;
        if (btcHeadersBuilder_ == null) {
          if (!other.btcHeaders_.isEmpty()) {
            if (btcHeaders_.isEmpty()) {
              btcHeaders_ = other.btcHeaders_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBtcHeadersIsMutable();
              btcHeaders_.addAll(other.btcHeaders_);
            }
            onChanged();
          }
        } else {
          if (!other.btcHeaders_.isEmpty()) {
            if (btcHeadersBuilder_.isEmpty()) {
              btcHeadersBuilder_.dispose();
              btcHeadersBuilder_ = null;
              btcHeaders_ = other.btcHeaders_;
              bitField0_ = (bitField0_ & ~0x00000001);
              btcHeadersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBtcHeadersFieldBuilder() : null;
            } else {
              btcHeadersBuilder_.addAllMessages(other.btcHeaders_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo m =
                    input.readMessage(
                        com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.parser(),
                        extensionRegistry);
                if (btcHeadersBuilder_ == null) {
                  ensureBtcHeadersIsMutable();
                  btcHeaders_.add(m);
                } else {
                  btcHeadersBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo> btcHeaders_ =
        java.util.Collections.emptyList();
      private void ensureBtcHeadersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          btcHeaders_ = new java.util.ArrayList<com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo>(btcHeaders_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo, com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.Builder, com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfoOrBuilder> btcHeadersBuilder_;

      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public java.util.List<com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo> getBtcHeadersList() {
        if (btcHeadersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(btcHeaders_);
        } else {
          return btcHeadersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public int getBtcHeadersCount() {
        if (btcHeadersBuilder_ == null) {
          return btcHeaders_.size();
        } else {
          return btcHeadersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo getBtcHeaders(int index) {
        if (btcHeadersBuilder_ == null) {
          return btcHeaders_.get(index);
        } else {
          return btcHeadersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public Builder setBtcHeaders(
          int index, com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo value) {
        if (btcHeadersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBtcHeadersIsMutable();
          btcHeaders_.set(index, value);
          onChanged();
        } else {
          btcHeadersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public Builder setBtcHeaders(
          int index, com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.Builder builderForValue) {
        if (btcHeadersBuilder_ == null) {
          ensureBtcHeadersIsMutable();
          btcHeaders_.set(index, builderForValue.build());
          onChanged();
        } else {
          btcHeadersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public Builder addBtcHeaders(com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo value) {
        if (btcHeadersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBtcHeadersIsMutable();
          btcHeaders_.add(value);
          onChanged();
        } else {
          btcHeadersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public Builder addBtcHeaders(
          int index, com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo value) {
        if (btcHeadersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBtcHeadersIsMutable();
          btcHeaders_.add(index, value);
          onChanged();
        } else {
          btcHeadersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public Builder addBtcHeaders(
          com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.Builder builderForValue) {
        if (btcHeadersBuilder_ == null) {
          ensureBtcHeadersIsMutable();
          btcHeaders_.add(builderForValue.build());
          onChanged();
        } else {
          btcHeadersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public Builder addBtcHeaders(
          int index, com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.Builder builderForValue) {
        if (btcHeadersBuilder_ == null) {
          ensureBtcHeadersIsMutable();
          btcHeaders_.add(index, builderForValue.build());
          onChanged();
        } else {
          btcHeadersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public Builder addAllBtcHeaders(
          java.lang.Iterable<? extends com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo> values) {
        if (btcHeadersBuilder_ == null) {
          ensureBtcHeadersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, btcHeaders_);
          onChanged();
        } else {
          btcHeadersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public Builder clearBtcHeaders() {
        if (btcHeadersBuilder_ == null) {
          btcHeaders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          btcHeadersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public Builder removeBtcHeaders(int index) {
        if (btcHeadersBuilder_ == null) {
          ensureBtcHeadersIsMutable();
          btcHeaders_.remove(index);
          onChanged();
        } else {
          btcHeadersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.Builder getBtcHeadersBuilder(
          int index) {
        return getBtcHeadersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfoOrBuilder getBtcHeadersOrBuilder(
          int index) {
        if (btcHeadersBuilder_ == null) {
          return btcHeaders_.get(index);  } else {
          return btcHeadersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public java.util.List<? extends com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfoOrBuilder> 
           getBtcHeadersOrBuilderList() {
        if (btcHeadersBuilder_ != null) {
          return btcHeadersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(btcHeaders_);
        }
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.Builder addBtcHeadersBuilder() {
        return getBtcHeadersFieldBuilder().addBuilder(
            com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.Builder addBtcHeadersBuilder(
          int index) {
        return getBtcHeadersFieldBuilder().addBuilder(
            index, com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .babylon.btclightclient.v1.BTCHeaderInfo btc_headers = 1 [json_name = "btcHeaders"];</code>
       */
      public java.util.List<com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.Builder> 
           getBtcHeadersBuilderList() {
        return getBtcHeadersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo, com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.Builder, com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfoOrBuilder> 
          getBtcHeadersFieldBuilder() {
        if (btcHeadersBuilder_ == null) {
          btcHeadersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo, com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfo.Builder, com.babylon.btclightclient.v1.BtclightclientProto.BTCHeaderInfoOrBuilder>(
                  btcHeaders_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          btcHeaders_ = null;
        }
        return btcHeadersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:babylon.zoneconcierge.v1.BTCChainSegment)
    }

    // @@protoc_insertion_point(class_scope:babylon.zoneconcierge.v1.BTCChainSegment)
    private static final com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment();
    }

    public static com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BTCChainSegment>
        PARSER = new com.google.protobuf.AbstractParser<BTCChainSegment>() {
      @java.lang.Override
      public BTCChainSegment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BTCChainSegment> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BTCChainSegment> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.babylon.zoneconcierge.v1.ZoneconciergeProto.BTCChainSegment getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_zoneconcierge_v1_IndexedHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_zoneconcierge_v1_IndexedHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_zoneconcierge_v1_Forks_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_zoneconcierge_v1_Forks_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_zoneconcierge_v1_ChainInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_zoneconcierge_v1_ChainInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_zoneconcierge_v1_ChainInfoWithProof_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_zoneconcierge_v1_ChainInfoWithProof_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_zoneconcierge_v1_FinalizedChainInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_zoneconcierge_v1_FinalizedChainInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_zoneconcierge_v1_ProofEpochSealed_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_zoneconcierge_v1_ProofEpochSealed_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_zoneconcierge_v1_ProofFinalizedChainInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_zoneconcierge_v1_ProofFinalizedChainInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_babylon_zoneconcierge_v1_BTCChainSegment_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_babylon_zoneconcierge_v1_BTCChainSegment_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,babylon/zoneconcierge/v1/zoneconcierge" +
      ".proto\022\030babylon.zoneconcierge.v1\032\024gogopr" +
      "oto/gogo.proto\032\037google/protobuf/timestam" +
      "p.proto\032\035tendermint/crypto/proof.proto\032," +
      "babylon/btccheckpoint/v1/btccheckpoint.p" +
      "roto\032&babylon/checkpointing/v1/bls_key.p" +
      "roto\032)babylon/checkpointing/v1/checkpoin" +
      "t.proto\032\"babylon/epoching/v1/epoching.pr" +
      "oto\032.babylon/btclightclient/v1/btclightc" +
      "lient.proto\"\303\002\n\rIndexedHeader\022\037\n\013consume" +
      "r_id\030\001 \001(\tR\nconsumerId\022\022\n\004hash\030\002 \001(\014R\004ha" +
      "sh\022\026\n\006height\030\003 \001(\004R\006height\0224\n\004time\030\004 \001(\013" +
      "2\032.google.protobuf.TimestampB\004\220\337\037\001R\004time" +
      "\022.\n\023babylon_header_hash\030\005 \001(\014R\021babylonHe" +
      "aderHash\0222\n\025babylon_header_height\030\006 \001(\004R" +
      "\023babylonHeaderHeight\022#\n\rbabylon_epoch\030\007 " +
      "\001(\004R\014babylonEpoch\022&\n\017babylon_tx_hash\030\010 \001" +
      "(\014R\rbabylonTxHash\"J\n\005Forks\022A\n\007headers\030\003 " +
      "\003(\0132\'.babylon.zoneconcierge.v1.IndexedHe" +
      "aderR\007headers\"\372\001\n\tChainInfo\022\037\n\013consumer_" +
      "id\030\001 \001(\tR\nconsumerId\022L\n\rlatest_header\030\002 " +
      "\001(\0132\'.babylon.zoneconcierge.v1.IndexedHe" +
      "aderR\014latestHeader\022B\n\014latest_forks\030\003 \001(\013" +
      "2\037.babylon.zoneconcierge.v1.ForksR\013lates" +
      "tForks\022:\n\031timestamped_headers_count\030\004 \001(" +
      "\004R\027timestampedHeadersCount\"\250\001\n\022ChainInfo" +
      "WithProof\022B\n\nchain_info\030\001 \001(\0132#.babylon." +
      "zoneconcierge.v1.ChainInfoR\tchainInfo\022N\n" +
      "\025proof_header_in_epoch\030\002 \001(\0132\033.tendermin" +
      "t.crypto.ProofOpsR\022proofHeaderInEpoch\"\267\003" +
      "\n\022FinalizedChainInfo\022\037\n\013consumer_id\030\001 \001(" +
      "\tR\nconsumerId\022U\n\024finalized_chain_info\030\002 " +
      "\001(\0132#.babylon.zoneconcierge.v1.ChainInfo" +
      "R\022finalizedChainInfo\0229\n\nepoch_info\030\003 \001(\013" +
      "2\032.babylon.epoching.v1.EpochR\tepochInfo\022" +
      "N\n\016raw_checkpoint\030\004 \001(\0132\'.babylon.checkp" +
      "ointing.v1.RawCheckpointR\rrawCheckpoint\022" +
      "U\n\022btc_submission_key\030\005 \001(\0132\'.babylon.bt" +
      "ccheckpoint.v1.SubmissionKeyR\020btcSubmiss" +
      "ionKey\022G\n\005proof\030\006 \001(\01321.babylon.zoneconc" +
      "ierge.v1.ProofFinalizedChainInfoR\005proof\"" +
      "\371\001\n\020ProofEpochSealed\022R\n\rvalidator_set\030\001 " +
      "\003(\0132-.babylon.checkpointing.v1.Validator" +
      "WithBlsKeyR\014validatorSet\022E\n\020proof_epoch_" +
      "info\030\002 \001(\0132\033.tendermint.crypto.ProofOpsR" +
      "\016proofEpochInfo\022J\n\023proof_epoch_val_set\030\003" +
      " \001(\0132\033.tendermint.crypto.ProofOpsR\020proof" +
      "EpochValSet\"\247\002\n\027ProofFinalizedChainInfo\022" +
      "S\n\030proof_cz_header_in_epoch\030\001 \001(\0132\033.tend" +
      "ermint.crypto.ProofOpsR\024proofCzHeaderInE" +
      "poch\022X\n\022proof_epoch_sealed\030\002 \001(\0132*.babyl" +
      "on.zoneconcierge.v1.ProofEpochSealedR\020pr" +
      "oofEpochSealed\022]\n\025proof_epoch_submitted\030" +
      "\003 \003(\0132).babylon.btccheckpoint.v1.Transac" +
      "tionInfoR\023proofEpochSubmitted\"\\\n\017BTCChai" +
      "nSegment\022I\n\013btc_headers\030\001 \003(\0132(.babylon." +
      "btclightclient.v1.BTCHeaderInfoR\nbtcHead" +
      "ersB\353\001\n\034com.babylon.zoneconcierge.v1B\022Zo" +
      "neconciergeProtoZ7github.com/babylonlabs" +
      "-io/babylon/x/zoneconcierge/types\242\002\003BZX\252" +
      "\002\030Babylon.Zoneconcierge.V1\312\002\030Babylon\\Zon" +
      "econcierge\\V1\342\002$Babylon\\Zoneconcierge\\V1" +
      "\\GPBMetadata\352\002\032Babylon::Zoneconcierge::V" +
      "1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.tendermint.crypto.ProofProto.getDescriptor(),
          com.babylon.btccheckpoint.v1.BtccheckpointProto.getDescriptor(),
          com.babylon.checkpointing.v1.BlsKeyProto.getDescriptor(),
          com.babylon.checkpointing.v1.CheckpointProto.getDescriptor(),
          com.babylon.epoching.v1.EpochingProto.getDescriptor(),
          com.babylon.btclightclient.v1.BtclightclientProto.getDescriptor(),
        });
    internal_static_babylon_zoneconcierge_v1_IndexedHeader_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_babylon_zoneconcierge_v1_IndexedHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_zoneconcierge_v1_IndexedHeader_descriptor,
        new java.lang.String[] { "ConsumerId", "Hash", "Height", "Time", "BabylonHeaderHash", "BabylonHeaderHeight", "BabylonEpoch", "BabylonTxHash", });
    internal_static_babylon_zoneconcierge_v1_Forks_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_babylon_zoneconcierge_v1_Forks_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_zoneconcierge_v1_Forks_descriptor,
        new java.lang.String[] { "Headers", });
    internal_static_babylon_zoneconcierge_v1_ChainInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_babylon_zoneconcierge_v1_ChainInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_zoneconcierge_v1_ChainInfo_descriptor,
        new java.lang.String[] { "ConsumerId", "LatestHeader", "LatestForks", "TimestampedHeadersCount", });
    internal_static_babylon_zoneconcierge_v1_ChainInfoWithProof_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_babylon_zoneconcierge_v1_ChainInfoWithProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_zoneconcierge_v1_ChainInfoWithProof_descriptor,
        new java.lang.String[] { "ChainInfo", "ProofHeaderInEpoch", });
    internal_static_babylon_zoneconcierge_v1_FinalizedChainInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_babylon_zoneconcierge_v1_FinalizedChainInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_zoneconcierge_v1_FinalizedChainInfo_descriptor,
        new java.lang.String[] { "ConsumerId", "FinalizedChainInfo", "EpochInfo", "RawCheckpoint", "BtcSubmissionKey", "Proof", });
    internal_static_babylon_zoneconcierge_v1_ProofEpochSealed_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_babylon_zoneconcierge_v1_ProofEpochSealed_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_zoneconcierge_v1_ProofEpochSealed_descriptor,
        new java.lang.String[] { "ValidatorSet", "ProofEpochInfo", "ProofEpochValSet", });
    internal_static_babylon_zoneconcierge_v1_ProofFinalizedChainInfo_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_babylon_zoneconcierge_v1_ProofFinalizedChainInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_zoneconcierge_v1_ProofFinalizedChainInfo_descriptor,
        new java.lang.String[] { "ProofCzHeaderInEpoch", "ProofEpochSealed", "ProofEpochSubmitted", });
    internal_static_babylon_zoneconcierge_v1_BTCChainSegment_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_babylon_zoneconcierge_v1_BTCChainSegment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_babylon_zoneconcierge_v1_BTCChainSegment_descriptor,
        new java.lang.String[] { "BtcHeaders", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.tendermint.crypto.ProofProto.getDescriptor();
    com.babylon.btccheckpoint.v1.BtccheckpointProto.getDescriptor();
    com.babylon.checkpointing.v1.BlsKeyProto.getDescriptor();
    com.babylon.checkpointing.v1.CheckpointProto.getDescriptor();
    com.babylon.epoching.v1.EpochingProto.getDescriptor();
    com.babylon.btclightclient.v1.BtclightclientProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shentu/shield/v1alpha1/genesis.proto

package com.shentu.shield.v1alpha1;

public final class GenesisProto {
  private GenesisProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shentu_shield_v1alpha1_GenesisState_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shentu_shield_v1alpha1_GenesisState_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shentu_shield_v1alpha1_OriginalStaking_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shentu_shield_v1alpha1_OriginalStaking_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shentu_shield_v1alpha1_ProposalIDReimbursementPair_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shentu_shield_v1alpha1_ProposalIDReimbursementPair_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shentu_shield_v1alpha1_Reimbursement_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shentu_shield_v1alpha1_Reimbursement_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shentu_shield_v1alpha1_PoolParams_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shentu_shield_v1alpha1_PoolParams_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shentu_shield_v1alpha1_ClaimProposalParams_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shentu_shield_v1alpha1_ClaimProposalParams_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shentu_shield_v1alpha1_DistributionParams_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shentu_shield_v1alpha1_DistributionParams_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$shentu/shield/v1alpha1/genesis.proto\022\026" +
      "shentu.shield.v1alpha1\032\024gogoproto/gogo.p" +
      "roto\032\036cosmos/base/v1beta1/coin.proto\032\037go" +
      "ogle/protobuf/timestamp.proto\032\036google/pr" +
      "otobuf/duration.proto\032#shentu/shield/v1a" +
      "lpha1/shield.proto\"\352\022\n\014GenesisState\022:\n\014s" +
      "hield_admin\030\001 \001(\tB\027\362\336\037\023yaml:\"shield_admi" +
      "n\"R\013shieldAdmin\0229\n\014next_pool_id\030\002 \001(\004B\027\362" +
      "\336\037\023yaml:\"next_pool_id\"R\nnextPoolId\022E\n\020ne" +
      "xt_purchase_id\030\003 \001(\004B\033\362\336\037\027yaml:\"next_pur" +
      "chase_id\"R\016nextPurchaseId\022_\n\013pool_params" +
      "\030\004 \001(\0132\".shentu.shield.v1alpha1.PoolPara" +
      "msB\032\310\336\037\000\362\336\037\022yaml:\"pool_params\"R\npoolPara" +
      "ms\022\205\001\n\025claim_proposal_params\030\005 \001(\0132+.she" +
      "ntu.shield.v1alpha1.ClaimProposalParamsB" +
      "$\310\336\037\000\362\336\037\034yaml:\"claim_proposal_params\"R\023c" +
      "laimProposalParams\022\177\n\023distribution_param" +
      "s\030\006 \001(\0132*.shentu.shield.v1alpha1.Distrib" +
      "utionParamsB\"\310\336\037\000\362\336\037\032yaml:\"distribution_" +
      "params\"R\022distributionParams\022t\n\020total_col" +
      "lateral\030\007 \001(\tBI\310\336\037\000\332\336\037&github.com/cosmos" +
      "/cosmos-sdk/types.Int\362\336\037\027yaml:\"total_col" +
      "lateral\"R\017totalCollateral\022w\n\021total_withd" +
      "rawing\030\010 \001(\tBJ\310\336\037\000\332\336\037&github.com/cosmos/" +
      "cosmos-sdk/types.Int\362\336\037\030yaml:\"total_with" +
      "drawing\"R\020totalWithdrawing\022h\n\014total_shie" +
      "ld\030\t \001(\tBE\310\336\037\000\332\336\037&github.com/cosmos/cosm" +
      "os-sdk/types.Int\362\336\037\023yaml:\"total_shield\"R" +
      "\013totalShield\022k\n\rtotal_claimed\030\n \001(\tBF\310\336\037" +
      "\000\332\336\037&github.com/cosmos/cosmos-sdk/types." +
      "Int\362\336\037\024yaml:\"total_claimed\"R\014totalClaime" +
      "d\022t\n\014service_fees\030\013 \003(\0132\034.cosmos.base.v1" +
      "beta1.DecCoinB3\310\336\037\000\252\337\037+github.com/cosmos" +
      "/cosmos-sdk/types.DecCoinsR\013serviceFees\022" +
      "\207\001\n\026remaining_service_fees\030\014 \003(\0132\034.cosmo" +
      "s.base.v1beta1.DecCoinB3\310\336\037\000\252\337\037+github.c" +
      "om/cosmos/cosmos-sdk/types.DecCoinsR\024rem" +
      "ainingServiceFees\022H\n\005pools\030\r \003(\0132\034.shent" +
      "u.shield.v1alpha1.PoolB\024\310\336\037\000\362\336\037\014yaml:\"po" +
      "ols\"R\005pools\022X\n\tproviders\030\016 \003(\0132 .shentu." +
      "shield.v1alpha1.ProviderB\030\310\336\037\000\362\336\037\020yaml:\"" +
      "providers\"R\tproviders\022e\n\016purchase_lists\030" +
      "\017 \003(\0132$.shentu.shield.v1alpha1.PurchaseL" +
      "istB\030\310\336\037\000\362\336\037\020yaml:\"purchases\"R\rpurchaseL" +
      "ists\022X\n\twithdraws\030\020 \003(\0132 .shentu.shield." +
      "v1alpha1.WithdrawB\030\310\336\037\000\362\336\037\020yaml:\"withdra" +
      "ws\"R\twithdraws\022i\n\020last_update_time\030\021 \001(\013" +
      "2\032.google.protobuf.TimestampB#\310\336\037\000\362\336\037\027ya" +
      "ml:\"last_update_time\"\220\337\037\001R\016lastUpdateTim" +
      "e\022|\n\023shield_staking_rate\030\022 \001(\tBL\310\336\037\000\332\336\037&" +
      "github.com/cosmos/cosmos-sdk/types.Dec\362\336" +
      "\037\032yaml:\"shield_staking_rate\"R\021shieldStak" +
      "ingRate\022|\n\023global_staking_pool\030\023 \001(\tBL\310\336" +
      "\037\000\332\336\037&github.com/cosmos/cosmos-sdk/types" +
      ".Int\362\336\037\032yaml:\"global_staking_pool\"R\021glob" +
      "alStakingPool\022s\n\021stake_for_shields\030\024 \003(\013" +
      "2%.shentu.shield.v1alpha1.ShieldStakingB" +
      " \310\336\037\000\362\336\037\030yaml:\"stake_for_shields\"R\017stake" +
      "ForShields\022v\n\021original_stakings\030\025 \003(\0132\'." +
      "shentu.shield.v1alpha1.OriginalStakingB " +
      "\310\336\037\000\362\336\037\030yaml:\"original_stakings\"R\020origin" +
      "alStakings\022\250\001\n\036proposalID_reimbursement_" +
      "pairs\030\026 \003(\01323.shentu.shield.v1alpha1.Pro" +
      "posalIDReimbursementPairB-\310\336\037\000\362\336\037%yaml:\"" +
      "proposalID_reimbursement_pairs\"R\034proposa" +
      "lIDReimbursementPairs:\010\210\240\037\000\350\240\037\000\"\255\001\n\017Orig" +
      "inalStaking\0227\n\013purchase_id\030\001 \001(\004B\026\362\336\037\022ya" +
      "ml:\"purchase_id\"R\npurchaseId\022W\n\006amount\030\002" +
      " \001(\tB?\310\336\037\000\332\336\037&github.com/cosmos/cosmos-s" +
      "dk/types.Int\362\336\037\ryaml:\"amount\"R\006amount:\010\210" +
      "\240\037\000\350\240\037\000\"\313\001\n\033ProposalIDReimbursementPair\022" +
      "7\n\013proposal_id\030\001 \001(\004B\026\362\336\037\022yaml:\"proposal" +
      "_id\"R\nproposalId\022i\n\rreimbursement\030\002 \001(\0132" +
      "%.shentu.shield.v1alpha1.ReimbursementB\034" +
      "\310\336\037\000\362\336\037\024yaml:\"reimbursement\"R\rreimbursem" +
      "ent:\010\210\240\037\000\350\240\037\000\"\225\002\n\rReimbursement\022c\n\006amoun" +
      "t\030\001 \003(\0132\031.cosmos.base.v1beta1.CoinB0\310\336\037\000" +
      "\252\337\037(github.com/cosmos/cosmos-sdk/types.C" +
      "oinsR\006amount\0228\n\013beneficiary\030\002 \001(\tB\026\362\336\037\022y" +
      "aml:\"beneficiary\"R\013beneficiary\022[\n\013payout" +
      "_time\030\003 \001(\0132\032.google.protobuf.TimestampB" +
      "\036\310\336\037\000\362\336\037\022yaml:\"payout_time\"\220\337\037\001R\npayoutT" +
      "ime:\010\210\240\037\000\350\240\037\000\"\365\005\n\nPoolParams\022\213\001\n\021protect" +
      "ion_period\030\001 \001(\0132\031.google.protobuf.Durat" +
      "ionBC\310\336\037\000\352\336\037\033protection_period,omitempty" +
      "\362\336\037\030yaml:\"protection_period\"\230\337\037\001R\020protec" +
      "tionPeriod\022\221\001\n\020shield_fees_rate\030\002 \001(\tBg\310" +
      "\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/type" +
      "s.Dec\352\336\037\032shield_fees_rate,omitempty\362\336\037\027y" +
      "aml:\"shield_fees_rate\"R\016shieldFeesRate\022\203" +
      "\001\n\017withdraw_period\030\003 \001(\0132\031.google.protob" +
      "uf.DurationB?\310\336\037\000\352\336\037\031withdraw_period,omi" +
      "tempty\362\336\037\026yaml:\"withdraw_period\"\230\337\037\001R\016wi" +
      "thdrawPeriod\022\225\001\n\021pool_shield_limit\030\004 \001(\t" +
      "Bi\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/t" +
      "ypes.Dec\352\336\037\033pool_shield_limit,omitempty\362" +
      "\336\037\030yaml:\"pool_shield_limit\"R\017poolShieldL" +
      "imit\022\234\001\n\023min_shield_purchase\030\005 \003(\0132\031.cos" +
      "mos.base.v1beta1.CoinBQ\310\336\037\000\352\336\037\035min_shiel" +
      "d_purchase,omitempty\252\337\037(github.com/cosmo" +
      "s/cosmos-sdk/types.CoinsR\021minShieldPurch" +
      "ase:\010\210\240\037\000\350\240\037\000\"\232\005\n\023ClaimProposalParams\022w\n" +
      "\014claim_period\030\001 \001(\0132\031.google.protobuf.Du" +
      "rationB9\310\336\037\000\352\336\037\026claim_period,omitempty\362\336" +
      "\037\023yaml:\"claim_period\"\230\337\037\001R\013claimPeriod\022{" +
      "\n\rpayout_period\030\002 \001(\0132\031.google.protobuf." +
      "DurationB;\310\336\037\000\352\336\037\027payout_period,omitempt" +
      "y\362\336\037\024yaml:\"payout_period\"\230\337\037\001R\014payoutPer" +
      "iod\022\205\001\n\013min_deposit\030\003 \003(\0132\031.cosmos.base." +
      "v1beta1.CoinBI\310\336\037\000\352\336\037\025min_deposit,omitem" +
      "pty\252\337\037(github.com/cosmos/cosmos-sdk/type" +
      "s.CoinsR\nminDeposit\022\202\001\n\014deposit_rate\030\004 \001" +
      "(\tB_\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk" +
      "/types.Dec\352\336\037\026deposit_rate,omitempty\362\336\037\023" +
      "yaml:\"deposit_rate\"R\013depositRate\022v\n\tfees" +
      "_rate\030\005 \001(\tBY\310\336\037\000\332\336\037&github.com/cosmos/c" +
      "osmos-sdk/types.Dec\352\336\037\023fees_rate,omitemp" +
      "ty\362\336\037\020yaml:\"fees_rate\"R\010feesRate:\010\210\240\037\000\350\240" +
      "\037\000\"\340\002\n\022DistributionParams\022j\n\rmodel_param" +
      "_a\030\001 \001(\tBF\310\336\037\000\332\336\037&github.com/cosmos/cosm" +
      "os-sdk/types.Dec\362\336\037\024yaml:\"model_param_a\"" +
      "R\013modelParamA\022j\n\rmodel_param_b\030\002 \001(\tBF\310\336" +
      "\037\000\332\336\037&github.com/cosmos/cosmos-sdk/types" +
      ".Dec\362\336\037\024yaml:\"model_param_b\"R\013modelParam" +
      "B\022h\n\014max_leverage\030\003 \001(\tBE\310\336\037\000\332\336\037&github." +
      "com/cosmos/cosmos-sdk/types.Dec\362\336\037\023yaml:" +
      "\"max_leverage\"R\013maxLeverage:\010\210\240\037\000\350\240\037\000B\327\001" +
      "\n\032com.shentu.shield.v1alpha1B\014GenesisPro" +
      "toP\001Z1github.com/shentufoundation/shentu" +
      "/x/shield/types\242\002\003SSX\252\002\026Shentu.Shield.V1" +
      "alpha1\312\002\026Shentu\\Shield\\V1alpha1\342\002\"Shentu" +
      "\\Shield\\V1alpha1\\GPBMetadata\352\002\030Shentu::S" +
      "hield::V1alpha1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.shentu.shield.v1alpha1.ShieldProto.getDescriptor(),
        });
    internal_static_shentu_shield_v1alpha1_GenesisState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_shentu_shield_v1alpha1_GenesisState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shentu_shield_v1alpha1_GenesisState_descriptor,
        new java.lang.String[] { "ShieldAdmin", "NextPoolId", "NextPurchaseId", "PoolParams", "ClaimProposalParams", "DistributionParams", "TotalCollateral", "TotalWithdrawing", "TotalShield", "TotalClaimed", "ServiceFees", "RemainingServiceFees", "Pools", "Providers", "PurchaseLists", "Withdraws", "LastUpdateTime", "ShieldStakingRate", "GlobalStakingPool", "StakeForShields", "OriginalStakings", "ProposalIDReimbursementPairs", });
    internal_static_shentu_shield_v1alpha1_OriginalStaking_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_shentu_shield_v1alpha1_OriginalStaking_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shentu_shield_v1alpha1_OriginalStaking_descriptor,
        new java.lang.String[] { "PurchaseId", "Amount", });
    internal_static_shentu_shield_v1alpha1_ProposalIDReimbursementPair_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_shentu_shield_v1alpha1_ProposalIDReimbursementPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shentu_shield_v1alpha1_ProposalIDReimbursementPair_descriptor,
        new java.lang.String[] { "ProposalId", "Reimbursement", });
    internal_static_shentu_shield_v1alpha1_Reimbursement_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_shentu_shield_v1alpha1_Reimbursement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shentu_shield_v1alpha1_Reimbursement_descriptor,
        new java.lang.String[] { "Amount", "Beneficiary", "PayoutTime", });
    internal_static_shentu_shield_v1alpha1_PoolParams_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_shentu_shield_v1alpha1_PoolParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shentu_shield_v1alpha1_PoolParams_descriptor,
        new java.lang.String[] { "ProtectionPeriod", "ShieldFeesRate", "WithdrawPeriod", "PoolShieldLimit", "MinShieldPurchase", });
    internal_static_shentu_shield_v1alpha1_ClaimProposalParams_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_shentu_shield_v1alpha1_ClaimProposalParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shentu_shield_v1alpha1_ClaimProposalParams_descriptor,
        new java.lang.String[] { "ClaimPeriod", "PayoutPeriod", "MinDeposit", "DepositRate", "FeesRate", });
    internal_static_shentu_shield_v1alpha1_DistributionParams_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_shentu_shield_v1alpha1_DistributionParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shentu_shield_v1alpha1_DistributionParams_descriptor,
        new java.lang.String[] { "ModelParamA", "ModelParamB", "MaxLeverage", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.jsontag);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stdduration);
    registry.add(com.gogoproto.GogoProto.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.shentu.shield.v1alpha1.ShieldProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shentu/cert/v1alpha1/cert.proto

package com.shentu.cert.v1alpha1;

/**
 * Protobuf enum {@code shentu.cert.v1alpha1.CertificateType}
 */
public enum CertificateType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>CERT_TYPE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "CertificateTypeNil"];</code>
   */
  CERT_TYPE_UNSPECIFIED(0),
  /**
   * <code>CERT_TYPE_COMPILATION = 1 [(.gogoproto.enumvalue_customname) = "CertificateTypeCompilation"];</code>
   */
  CERT_TYPE_COMPILATION(1),
  /**
   * <code>CERT_TYPE_AUDITING = 2 [(.gogoproto.enumvalue_customname) = "CertificateTypeAuditing"];</code>
   */
  CERT_TYPE_AUDITING(2),
  /**
   * <code>CERT_TYPE_PROOF = 3 [(.gogoproto.enumvalue_customname) = "CertificateTypeProof"];</code>
   */
  CERT_TYPE_PROOF(3),
  /**
   * <code>CERT_TYPE_ORACLE_OPERATOR = 4 [(.gogoproto.enumvalue_customname) = "CertificateTypeOracleOperator"];</code>
   */
  CERT_TYPE_ORACLE_OPERATOR(4),
  /**
   * <code>CERT_TYPE_SHIELD_POOL_CREATOR = 5 [(.gogoproto.enumvalue_customname) = "CertificateTypeShieldPoolCreator"];</code>
   */
  CERT_TYPE_SHIELD_POOL_CREATOR(5),
  /**
   * <code>CERT_TYPE_IDENTITY = 6 [(.gogoproto.enumvalue_customname) = "CertificateTypeIdentity"];</code>
   */
  CERT_TYPE_IDENTITY(6),
  /**
   * <code>CERT_TYPE_GENERAL = 7 [(.gogoproto.enumvalue_customname) = "CertificateTypeGeneral"];</code>
   */
  CERT_TYPE_GENERAL(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CERT_TYPE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "CertificateTypeNil"];</code>
   */
  public static final int CERT_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <code>CERT_TYPE_COMPILATION = 1 [(.gogoproto.enumvalue_customname) = "CertificateTypeCompilation"];</code>
   */
  public static final int CERT_TYPE_COMPILATION_VALUE = 1;
  /**
   * <code>CERT_TYPE_AUDITING = 2 [(.gogoproto.enumvalue_customname) = "CertificateTypeAuditing"];</code>
   */
  public static final int CERT_TYPE_AUDITING_VALUE = 2;
  /**
   * <code>CERT_TYPE_PROOF = 3 [(.gogoproto.enumvalue_customname) = "CertificateTypeProof"];</code>
   */
  public static final int CERT_TYPE_PROOF_VALUE = 3;
  /**
   * <code>CERT_TYPE_ORACLE_OPERATOR = 4 [(.gogoproto.enumvalue_customname) = "CertificateTypeOracleOperator"];</code>
   */
  public static final int CERT_TYPE_ORACLE_OPERATOR_VALUE = 4;
  /**
   * <code>CERT_TYPE_SHIELD_POOL_CREATOR = 5 [(.gogoproto.enumvalue_customname) = "CertificateTypeShieldPoolCreator"];</code>
   */
  public static final int CERT_TYPE_SHIELD_POOL_CREATOR_VALUE = 5;
  /**
   * <code>CERT_TYPE_IDENTITY = 6 [(.gogoproto.enumvalue_customname) = "CertificateTypeIdentity"];</code>
   */
  public static final int CERT_TYPE_IDENTITY_VALUE = 6;
  /**
   * <code>CERT_TYPE_GENERAL = 7 [(.gogoproto.enumvalue_customname) = "CertificateTypeGeneral"];</code>
   */
  public static final int CERT_TYPE_GENERAL_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CertificateType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static CertificateType forNumber(int value) {
    switch (value) {
      case 0: return CERT_TYPE_UNSPECIFIED;
      case 1: return CERT_TYPE_COMPILATION;
      case 2: return CERT_TYPE_AUDITING;
      case 3: return CERT_TYPE_PROOF;
      case 4: return CERT_TYPE_ORACLE_OPERATOR;
      case 5: return CERT_TYPE_SHIELD_POOL_CREATOR;
      case 6: return CERT_TYPE_IDENTITY;
      case 7: return CERT_TYPE_GENERAL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CertificateType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CertificateType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CertificateType>() {
          public CertificateType findValueByNumber(int number) {
            return CertificateType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.shentu.cert.v1alpha1.CertProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final CertificateType[] VALUES = values();

  public static CertificateType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CertificateType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:shentu.cert.v1alpha1.CertificateType)
}


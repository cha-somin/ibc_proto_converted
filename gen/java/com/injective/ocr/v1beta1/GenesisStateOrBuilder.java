// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/ocr/v1beta1/genesis.proto

package com.injective.ocr.v1beta1;

public interface GenesisStateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:injective.ocr.v1beta1.GenesisState)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * params defines all the parameters of related to OCR.
   * </pre>
   *
   * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return Whether the params field is set.
   */
  boolean hasParams();
  /**
   * <pre>
   * params defines all the parameters of related to OCR.
   * </pre>
   *
   * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return The params.
   */
  com.injective.ocr.v1beta1.Params getParams();
  /**
   * <pre>
   * params defines all the parameters of related to OCR.
   * </pre>
   *
   * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   */
  com.injective.ocr.v1beta1.ParamsOrBuilder getParamsOrBuilder();

  /**
   * <pre>
   * feed_configs stores all of the supported OCR feeds
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
   */
  java.util.List<com.injective.ocr.v1beta1.FeedConfig> 
      getFeedConfigsList();
  /**
   * <pre>
   * feed_configs stores all of the supported OCR feeds
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
   */
  com.injective.ocr.v1beta1.FeedConfig getFeedConfigs(int index);
  /**
   * <pre>
   * feed_configs stores all of the supported OCR feeds
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
   */
  int getFeedConfigsCount();
  /**
   * <pre>
   * feed_configs stores all of the supported OCR feeds
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
   */
  java.util.List<? extends com.injective.ocr.v1beta1.FeedConfigOrBuilder> 
      getFeedConfigsOrBuilderList();
  /**
   * <pre>
   * feed_configs stores all of the supported OCR feeds
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
   */
  com.injective.ocr.v1beta1.FeedConfigOrBuilder getFeedConfigsOrBuilder(
      int index);

  /**
   * <pre>
   * latest_epoch_and_rounds stores the latest epoch and round for each feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
   */
  java.util.List<com.injective.ocr.v1beta1.FeedEpochAndRound> 
      getLatestEpochAndRoundsList();
  /**
   * <pre>
   * latest_epoch_and_rounds stores the latest epoch and round for each feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
   */
  com.injective.ocr.v1beta1.FeedEpochAndRound getLatestEpochAndRounds(int index);
  /**
   * <pre>
   * latest_epoch_and_rounds stores the latest epoch and round for each feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
   */
  int getLatestEpochAndRoundsCount();
  /**
   * <pre>
   * latest_epoch_and_rounds stores the latest epoch and round for each feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
   */
  java.util.List<? extends com.injective.ocr.v1beta1.FeedEpochAndRoundOrBuilder> 
      getLatestEpochAndRoundsOrBuilderList();
  /**
   * <pre>
   * latest_epoch_and_rounds stores the latest epoch and round for each feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
   */
  com.injective.ocr.v1beta1.FeedEpochAndRoundOrBuilder getLatestEpochAndRoundsOrBuilder(
      int index);

  /**
   * <pre>
   * feed_transmissions stores the last transmission for each feed
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
   */
  java.util.List<com.injective.ocr.v1beta1.FeedTransmission> 
      getFeedTransmissionsList();
  /**
   * <pre>
   * feed_transmissions stores the last transmission for each feed
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
   */
  com.injective.ocr.v1beta1.FeedTransmission getFeedTransmissions(int index);
  /**
   * <pre>
   * feed_transmissions stores the last transmission for each feed
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
   */
  int getFeedTransmissionsCount();
  /**
   * <pre>
   * feed_transmissions stores the last transmission for each feed
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
   */
  java.util.List<? extends com.injective.ocr.v1beta1.FeedTransmissionOrBuilder> 
      getFeedTransmissionsOrBuilderList();
  /**
   * <pre>
   * feed_transmissions stores the last transmission for each feed
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
   */
  com.injective.ocr.v1beta1.FeedTransmissionOrBuilder getFeedTransmissionsOrBuilder(
      int index);

  /**
   * <pre>
   * latest_aggregator_round_ids stores the latest aggregator round ID for each
   * feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
   */
  java.util.List<com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs> 
      getLatestAggregatorRoundIdsList();
  /**
   * <pre>
   * latest_aggregator_round_ids stores the latest aggregator round ID for each
   * feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
   */
  com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs getLatestAggregatorRoundIds(int index);
  /**
   * <pre>
   * latest_aggregator_round_ids stores the latest aggregator round ID for each
   * feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
   */
  int getLatestAggregatorRoundIdsCount();
  /**
   * <pre>
   * latest_aggregator_round_ids stores the latest aggregator round ID for each
   * feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
   */
  java.util.List<? extends com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDsOrBuilder> 
      getLatestAggregatorRoundIdsOrBuilderList();
  /**
   * <pre>
   * latest_aggregator_round_ids stores the latest aggregator round ID for each
   * feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
   */
  com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDsOrBuilder getLatestAggregatorRoundIdsOrBuilder(
      int index);

  /**
   * <pre>
   * reward_pools stores the reward pools
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
   */
  java.util.List<com.injective.ocr.v1beta1.RewardPool> 
      getRewardPoolsList();
  /**
   * <pre>
   * reward_pools stores the reward pools
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
   */
  com.injective.ocr.v1beta1.RewardPool getRewardPools(int index);
  /**
   * <pre>
   * reward_pools stores the reward pools
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
   */
  int getRewardPoolsCount();
  /**
   * <pre>
   * reward_pools stores the reward pools
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
   */
  java.util.List<? extends com.injective.ocr.v1beta1.RewardPoolOrBuilder> 
      getRewardPoolsOrBuilderList();
  /**
   * <pre>
   * reward_pools stores the reward pools
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
   */
  com.injective.ocr.v1beta1.RewardPoolOrBuilder getRewardPoolsOrBuilder(
      int index);

  /**
   * <pre>
   * feed_observation_counts stores the feed observation counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
   */
  java.util.List<com.injective.ocr.v1beta1.FeedCounts> 
      getFeedObservationCountsList();
  /**
   * <pre>
   * feed_observation_counts stores the feed observation counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
   */
  com.injective.ocr.v1beta1.FeedCounts getFeedObservationCounts(int index);
  /**
   * <pre>
   * feed_observation_counts stores the feed observation counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
   */
  int getFeedObservationCountsCount();
  /**
   * <pre>
   * feed_observation_counts stores the feed observation counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
   */
  java.util.List<? extends com.injective.ocr.v1beta1.FeedCountsOrBuilder> 
      getFeedObservationCountsOrBuilderList();
  /**
   * <pre>
   * feed_observation_counts stores the feed observation counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
   */
  com.injective.ocr.v1beta1.FeedCountsOrBuilder getFeedObservationCountsOrBuilder(
      int index);

  /**
   * <pre>
   * feed_transmission_counts stores the feed transmission counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
   */
  java.util.List<com.injective.ocr.v1beta1.FeedCounts> 
      getFeedTransmissionCountsList();
  /**
   * <pre>
   * feed_transmission_counts stores the feed transmission counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
   */
  com.injective.ocr.v1beta1.FeedCounts getFeedTransmissionCounts(int index);
  /**
   * <pre>
   * feed_transmission_counts stores the feed transmission counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
   */
  int getFeedTransmissionCountsCount();
  /**
   * <pre>
   * feed_transmission_counts stores the feed transmission counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
   */
  java.util.List<? extends com.injective.ocr.v1beta1.FeedCountsOrBuilder> 
      getFeedTransmissionCountsOrBuilderList();
  /**
   * <pre>
   * feed_transmission_counts stores the feed transmission counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
   */
  com.injective.ocr.v1beta1.FeedCountsOrBuilder getFeedTransmissionCountsOrBuilder(
      int index);

  /**
   * <pre>
   * pending_payeeships stores the pending payeeships
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
   */
  java.util.List<com.injective.ocr.v1beta1.PendingPayeeship> 
      getPendingPayeeshipsList();
  /**
   * <pre>
   * pending_payeeships stores the pending payeeships
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
   */
  com.injective.ocr.v1beta1.PendingPayeeship getPendingPayeeships(int index);
  /**
   * <pre>
   * pending_payeeships stores the pending payeeships
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
   */
  int getPendingPayeeshipsCount();
  /**
   * <pre>
   * pending_payeeships stores the pending payeeships
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
   */
  java.util.List<? extends com.injective.ocr.v1beta1.PendingPayeeshipOrBuilder> 
      getPendingPayeeshipsOrBuilderList();
  /**
   * <pre>
   * pending_payeeships stores the pending payeeships
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
   */
  com.injective.ocr.v1beta1.PendingPayeeshipOrBuilder getPendingPayeeshipsOrBuilder(
      int index);
}

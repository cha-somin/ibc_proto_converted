// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/ocr/v1beta1/genesis.proto

package com.injective.ocr.v1beta1;

/**
 * <pre>
 * GenesisState defines the OCR module's genesis state.
 * </pre>
 *
 * Protobuf type {@code injective.ocr.v1beta1.GenesisState}
 */
public final class GenesisState extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:injective.ocr.v1beta1.GenesisState)
    GenesisStateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GenesisState.newBuilder() to construct.
  private GenesisState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GenesisState() {
    feedConfigs_ = java.util.Collections.emptyList();
    latestEpochAndRounds_ = java.util.Collections.emptyList();
    feedTransmissions_ = java.util.Collections.emptyList();
    latestAggregatorRoundIds_ = java.util.Collections.emptyList();
    rewardPools_ = java.util.Collections.emptyList();
    feedObservationCounts_ = java.util.Collections.emptyList();
    feedTransmissionCounts_ = java.util.Collections.emptyList();
    pendingPayeeships_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GenesisState();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.injective.ocr.v1beta1.GenesisProto.internal_static_injective_ocr_v1beta1_GenesisState_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.injective.ocr.v1beta1.GenesisProto.internal_static_injective_ocr_v1beta1_GenesisState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.injective.ocr.v1beta1.GenesisState.class, com.injective.ocr.v1beta1.GenesisState.Builder.class);
  }

  public static final int PARAMS_FIELD_NUMBER = 1;
  private com.injective.ocr.v1beta1.Params params_;
  /**
   * <pre>
   * params defines all the parameters of related to OCR.
   * </pre>
   *
   * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return Whether the params field is set.
   */
  @java.lang.Override
  public boolean hasParams() {
    return params_ != null;
  }
  /**
   * <pre>
   * params defines all the parameters of related to OCR.
   * </pre>
   *
   * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return The params.
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.Params getParams() {
    return params_ == null ? com.injective.ocr.v1beta1.Params.getDefaultInstance() : params_;
  }
  /**
   * <pre>
   * params defines all the parameters of related to OCR.
   * </pre>
   *
   * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.ParamsOrBuilder getParamsOrBuilder() {
    return params_ == null ? com.injective.ocr.v1beta1.Params.getDefaultInstance() : params_;
  }

  public static final int FEED_CONFIGS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.injective.ocr.v1beta1.FeedConfig> feedConfigs_;
  /**
   * <pre>
   * feed_configs stores all of the supported OCR feeds
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
   */
  @java.lang.Override
  public java.util.List<com.injective.ocr.v1beta1.FeedConfig> getFeedConfigsList() {
    return feedConfigs_;
  }
  /**
   * <pre>
   * feed_configs stores all of the supported OCR feeds
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.injective.ocr.v1beta1.FeedConfigOrBuilder> 
      getFeedConfigsOrBuilderList() {
    return feedConfigs_;
  }
  /**
   * <pre>
   * feed_configs stores all of the supported OCR feeds
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
   */
  @java.lang.Override
  public int getFeedConfigsCount() {
    return feedConfigs_.size();
  }
  /**
   * <pre>
   * feed_configs stores all of the supported OCR feeds
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.FeedConfig getFeedConfigs(int index) {
    return feedConfigs_.get(index);
  }
  /**
   * <pre>
   * feed_configs stores all of the supported OCR feeds
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.FeedConfigOrBuilder getFeedConfigsOrBuilder(
      int index) {
    return feedConfigs_.get(index);
  }

  public static final int LATEST_EPOCH_AND_ROUNDS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.injective.ocr.v1beta1.FeedEpochAndRound> latestEpochAndRounds_;
  /**
   * <pre>
   * latest_epoch_and_rounds stores the latest epoch and round for each feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
   */
  @java.lang.Override
  public java.util.List<com.injective.ocr.v1beta1.FeedEpochAndRound> getLatestEpochAndRoundsList() {
    return latestEpochAndRounds_;
  }
  /**
   * <pre>
   * latest_epoch_and_rounds stores the latest epoch and round for each feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.injective.ocr.v1beta1.FeedEpochAndRoundOrBuilder> 
      getLatestEpochAndRoundsOrBuilderList() {
    return latestEpochAndRounds_;
  }
  /**
   * <pre>
   * latest_epoch_and_rounds stores the latest epoch and round for each feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
   */
  @java.lang.Override
  public int getLatestEpochAndRoundsCount() {
    return latestEpochAndRounds_.size();
  }
  /**
   * <pre>
   * latest_epoch_and_rounds stores the latest epoch and round for each feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.FeedEpochAndRound getLatestEpochAndRounds(int index) {
    return latestEpochAndRounds_.get(index);
  }
  /**
   * <pre>
   * latest_epoch_and_rounds stores the latest epoch and round for each feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.FeedEpochAndRoundOrBuilder getLatestEpochAndRoundsOrBuilder(
      int index) {
    return latestEpochAndRounds_.get(index);
  }

  public static final int FEED_TRANSMISSIONS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.injective.ocr.v1beta1.FeedTransmission> feedTransmissions_;
  /**
   * <pre>
   * feed_transmissions stores the last transmission for each feed
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
   */
  @java.lang.Override
  public java.util.List<com.injective.ocr.v1beta1.FeedTransmission> getFeedTransmissionsList() {
    return feedTransmissions_;
  }
  /**
   * <pre>
   * feed_transmissions stores the last transmission for each feed
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.injective.ocr.v1beta1.FeedTransmissionOrBuilder> 
      getFeedTransmissionsOrBuilderList() {
    return feedTransmissions_;
  }
  /**
   * <pre>
   * feed_transmissions stores the last transmission for each feed
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
   */
  @java.lang.Override
  public int getFeedTransmissionsCount() {
    return feedTransmissions_.size();
  }
  /**
   * <pre>
   * feed_transmissions stores the last transmission for each feed
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.FeedTransmission getFeedTransmissions(int index) {
    return feedTransmissions_.get(index);
  }
  /**
   * <pre>
   * feed_transmissions stores the last transmission for each feed
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.FeedTransmissionOrBuilder getFeedTransmissionsOrBuilder(
      int index) {
    return feedTransmissions_.get(index);
  }

  public static final int LATEST_AGGREGATOR_ROUND_IDS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs> latestAggregatorRoundIds_;
  /**
   * <pre>
   * latest_aggregator_round_ids stores the latest aggregator round ID for each
   * feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
   */
  @java.lang.Override
  public java.util.List<com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs> getLatestAggregatorRoundIdsList() {
    return latestAggregatorRoundIds_;
  }
  /**
   * <pre>
   * latest_aggregator_round_ids stores the latest aggregator round ID for each
   * feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDsOrBuilder> 
      getLatestAggregatorRoundIdsOrBuilderList() {
    return latestAggregatorRoundIds_;
  }
  /**
   * <pre>
   * latest_aggregator_round_ids stores the latest aggregator round ID for each
   * feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
   */
  @java.lang.Override
  public int getLatestAggregatorRoundIdsCount() {
    return latestAggregatorRoundIds_.size();
  }
  /**
   * <pre>
   * latest_aggregator_round_ids stores the latest aggregator round ID for each
   * feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs getLatestAggregatorRoundIds(int index) {
    return latestAggregatorRoundIds_.get(index);
  }
  /**
   * <pre>
   * latest_aggregator_round_ids stores the latest aggregator round ID for each
   * feedId
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDsOrBuilder getLatestAggregatorRoundIdsOrBuilder(
      int index) {
    return latestAggregatorRoundIds_.get(index);
  }

  public static final int REWARD_POOLS_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<com.injective.ocr.v1beta1.RewardPool> rewardPools_;
  /**
   * <pre>
   * reward_pools stores the reward pools
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
   */
  @java.lang.Override
  public java.util.List<com.injective.ocr.v1beta1.RewardPool> getRewardPoolsList() {
    return rewardPools_;
  }
  /**
   * <pre>
   * reward_pools stores the reward pools
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.injective.ocr.v1beta1.RewardPoolOrBuilder> 
      getRewardPoolsOrBuilderList() {
    return rewardPools_;
  }
  /**
   * <pre>
   * reward_pools stores the reward pools
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
   */
  @java.lang.Override
  public int getRewardPoolsCount() {
    return rewardPools_.size();
  }
  /**
   * <pre>
   * reward_pools stores the reward pools
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.RewardPool getRewardPools(int index) {
    return rewardPools_.get(index);
  }
  /**
   * <pre>
   * reward_pools stores the reward pools
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.RewardPoolOrBuilder getRewardPoolsOrBuilder(
      int index) {
    return rewardPools_.get(index);
  }

  public static final int FEED_OBSERVATION_COUNTS_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<com.injective.ocr.v1beta1.FeedCounts> feedObservationCounts_;
  /**
   * <pre>
   * feed_observation_counts stores the feed observation counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
   */
  @java.lang.Override
  public java.util.List<com.injective.ocr.v1beta1.FeedCounts> getFeedObservationCountsList() {
    return feedObservationCounts_;
  }
  /**
   * <pre>
   * feed_observation_counts stores the feed observation counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.injective.ocr.v1beta1.FeedCountsOrBuilder> 
      getFeedObservationCountsOrBuilderList() {
    return feedObservationCounts_;
  }
  /**
   * <pre>
   * feed_observation_counts stores the feed observation counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
   */
  @java.lang.Override
  public int getFeedObservationCountsCount() {
    return feedObservationCounts_.size();
  }
  /**
   * <pre>
   * feed_observation_counts stores the feed observation counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.FeedCounts getFeedObservationCounts(int index) {
    return feedObservationCounts_.get(index);
  }
  /**
   * <pre>
   * feed_observation_counts stores the feed observation counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.FeedCountsOrBuilder getFeedObservationCountsOrBuilder(
      int index) {
    return feedObservationCounts_.get(index);
  }

  public static final int FEED_TRANSMISSION_COUNTS_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private java.util.List<com.injective.ocr.v1beta1.FeedCounts> feedTransmissionCounts_;
  /**
   * <pre>
   * feed_transmission_counts stores the feed transmission counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
   */
  @java.lang.Override
  public java.util.List<com.injective.ocr.v1beta1.FeedCounts> getFeedTransmissionCountsList() {
    return feedTransmissionCounts_;
  }
  /**
   * <pre>
   * feed_transmission_counts stores the feed transmission counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.injective.ocr.v1beta1.FeedCountsOrBuilder> 
      getFeedTransmissionCountsOrBuilderList() {
    return feedTransmissionCounts_;
  }
  /**
   * <pre>
   * feed_transmission_counts stores the feed transmission counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
   */
  @java.lang.Override
  public int getFeedTransmissionCountsCount() {
    return feedTransmissionCounts_.size();
  }
  /**
   * <pre>
   * feed_transmission_counts stores the feed transmission counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.FeedCounts getFeedTransmissionCounts(int index) {
    return feedTransmissionCounts_.get(index);
  }
  /**
   * <pre>
   * feed_transmission_counts stores the feed transmission counts
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.FeedCountsOrBuilder getFeedTransmissionCountsOrBuilder(
      int index) {
    return feedTransmissionCounts_.get(index);
  }

  public static final int PENDING_PAYEESHIPS_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private java.util.List<com.injective.ocr.v1beta1.PendingPayeeship> pendingPayeeships_;
  /**
   * <pre>
   * pending_payeeships stores the pending payeeships
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
   */
  @java.lang.Override
  public java.util.List<com.injective.ocr.v1beta1.PendingPayeeship> getPendingPayeeshipsList() {
    return pendingPayeeships_;
  }
  /**
   * <pre>
   * pending_payeeships stores the pending payeeships
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.injective.ocr.v1beta1.PendingPayeeshipOrBuilder> 
      getPendingPayeeshipsOrBuilderList() {
    return pendingPayeeships_;
  }
  /**
   * <pre>
   * pending_payeeships stores the pending payeeships
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
   */
  @java.lang.Override
  public int getPendingPayeeshipsCount() {
    return pendingPayeeships_.size();
  }
  /**
   * <pre>
   * pending_payeeships stores the pending payeeships
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.PendingPayeeship getPendingPayeeships(int index) {
    return pendingPayeeships_.get(index);
  }
  /**
   * <pre>
   * pending_payeeships stores the pending payeeships
   * </pre>
   *
   * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
   */
  @java.lang.Override
  public com.injective.ocr.v1beta1.PendingPayeeshipOrBuilder getPendingPayeeshipsOrBuilder(
      int index) {
    return pendingPayeeships_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (params_ != null) {
      output.writeMessage(1, getParams());
    }
    for (int i = 0; i < feedConfigs_.size(); i++) {
      output.writeMessage(2, feedConfigs_.get(i));
    }
    for (int i = 0; i < latestEpochAndRounds_.size(); i++) {
      output.writeMessage(3, latestEpochAndRounds_.get(i));
    }
    for (int i = 0; i < feedTransmissions_.size(); i++) {
      output.writeMessage(4, feedTransmissions_.get(i));
    }
    for (int i = 0; i < latestAggregatorRoundIds_.size(); i++) {
      output.writeMessage(5, latestAggregatorRoundIds_.get(i));
    }
    for (int i = 0; i < rewardPools_.size(); i++) {
      output.writeMessage(6, rewardPools_.get(i));
    }
    for (int i = 0; i < feedObservationCounts_.size(); i++) {
      output.writeMessage(7, feedObservationCounts_.get(i));
    }
    for (int i = 0; i < feedTransmissionCounts_.size(); i++) {
      output.writeMessage(8, feedTransmissionCounts_.get(i));
    }
    for (int i = 0; i < pendingPayeeships_.size(); i++) {
      output.writeMessage(9, pendingPayeeships_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (params_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getParams());
    }
    for (int i = 0; i < feedConfigs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, feedConfigs_.get(i));
    }
    for (int i = 0; i < latestEpochAndRounds_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, latestEpochAndRounds_.get(i));
    }
    for (int i = 0; i < feedTransmissions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, feedTransmissions_.get(i));
    }
    for (int i = 0; i < latestAggregatorRoundIds_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, latestAggregatorRoundIds_.get(i));
    }
    for (int i = 0; i < rewardPools_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, rewardPools_.get(i));
    }
    for (int i = 0; i < feedObservationCounts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, feedObservationCounts_.get(i));
    }
    for (int i = 0; i < feedTransmissionCounts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, feedTransmissionCounts_.get(i));
    }
    for (int i = 0; i < pendingPayeeships_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, pendingPayeeships_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.injective.ocr.v1beta1.GenesisState)) {
      return super.equals(obj);
    }
    com.injective.ocr.v1beta1.GenesisState other = (com.injective.ocr.v1beta1.GenesisState) obj;

    if (hasParams() != other.hasParams()) return false;
    if (hasParams()) {
      if (!getParams()
          .equals(other.getParams())) return false;
    }
    if (!getFeedConfigsList()
        .equals(other.getFeedConfigsList())) return false;
    if (!getLatestEpochAndRoundsList()
        .equals(other.getLatestEpochAndRoundsList())) return false;
    if (!getFeedTransmissionsList()
        .equals(other.getFeedTransmissionsList())) return false;
    if (!getLatestAggregatorRoundIdsList()
        .equals(other.getLatestAggregatorRoundIdsList())) return false;
    if (!getRewardPoolsList()
        .equals(other.getRewardPoolsList())) return false;
    if (!getFeedObservationCountsList()
        .equals(other.getFeedObservationCountsList())) return false;
    if (!getFeedTransmissionCountsList()
        .equals(other.getFeedTransmissionCountsList())) return false;
    if (!getPendingPayeeshipsList()
        .equals(other.getPendingPayeeshipsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasParams()) {
      hash = (37 * hash) + PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getParams().hashCode();
    }
    if (getFeedConfigsCount() > 0) {
      hash = (37 * hash) + FEED_CONFIGS_FIELD_NUMBER;
      hash = (53 * hash) + getFeedConfigsList().hashCode();
    }
    if (getLatestEpochAndRoundsCount() > 0) {
      hash = (37 * hash) + LATEST_EPOCH_AND_ROUNDS_FIELD_NUMBER;
      hash = (53 * hash) + getLatestEpochAndRoundsList().hashCode();
    }
    if (getFeedTransmissionsCount() > 0) {
      hash = (37 * hash) + FEED_TRANSMISSIONS_FIELD_NUMBER;
      hash = (53 * hash) + getFeedTransmissionsList().hashCode();
    }
    if (getLatestAggregatorRoundIdsCount() > 0) {
      hash = (37 * hash) + LATEST_AGGREGATOR_ROUND_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getLatestAggregatorRoundIdsList().hashCode();
    }
    if (getRewardPoolsCount() > 0) {
      hash = (37 * hash) + REWARD_POOLS_FIELD_NUMBER;
      hash = (53 * hash) + getRewardPoolsList().hashCode();
    }
    if (getFeedObservationCountsCount() > 0) {
      hash = (37 * hash) + FEED_OBSERVATION_COUNTS_FIELD_NUMBER;
      hash = (53 * hash) + getFeedObservationCountsList().hashCode();
    }
    if (getFeedTransmissionCountsCount() > 0) {
      hash = (37 * hash) + FEED_TRANSMISSION_COUNTS_FIELD_NUMBER;
      hash = (53 * hash) + getFeedTransmissionCountsList().hashCode();
    }
    if (getPendingPayeeshipsCount() > 0) {
      hash = (37 * hash) + PENDING_PAYEESHIPS_FIELD_NUMBER;
      hash = (53 * hash) + getPendingPayeeshipsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.injective.ocr.v1beta1.GenesisState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.injective.ocr.v1beta1.GenesisState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.injective.ocr.v1beta1.GenesisState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.injective.ocr.v1beta1.GenesisState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.injective.ocr.v1beta1.GenesisState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.injective.ocr.v1beta1.GenesisState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.injective.ocr.v1beta1.GenesisState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.injective.ocr.v1beta1.GenesisState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.injective.ocr.v1beta1.GenesisState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.injective.ocr.v1beta1.GenesisState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.injective.ocr.v1beta1.GenesisState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.injective.ocr.v1beta1.GenesisState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.injective.ocr.v1beta1.GenesisState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * GenesisState defines the OCR module's genesis state.
   * </pre>
   *
   * Protobuf type {@code injective.ocr.v1beta1.GenesisState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:injective.ocr.v1beta1.GenesisState)
      com.injective.ocr.v1beta1.GenesisStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.injective.ocr.v1beta1.GenesisProto.internal_static_injective_ocr_v1beta1_GenesisState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.injective.ocr.v1beta1.GenesisProto.internal_static_injective_ocr_v1beta1_GenesisState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.injective.ocr.v1beta1.GenesisState.class, com.injective.ocr.v1beta1.GenesisState.Builder.class);
    }

    // Construct using com.injective.ocr.v1beta1.GenesisState.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      params_ = null;
      if (paramsBuilder_ != null) {
        paramsBuilder_.dispose();
        paramsBuilder_ = null;
      }
      if (feedConfigsBuilder_ == null) {
        feedConfigs_ = java.util.Collections.emptyList();
      } else {
        feedConfigs_ = null;
        feedConfigsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (latestEpochAndRoundsBuilder_ == null) {
        latestEpochAndRounds_ = java.util.Collections.emptyList();
      } else {
        latestEpochAndRounds_ = null;
        latestEpochAndRoundsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (feedTransmissionsBuilder_ == null) {
        feedTransmissions_ = java.util.Collections.emptyList();
      } else {
        feedTransmissions_ = null;
        feedTransmissionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (latestAggregatorRoundIdsBuilder_ == null) {
        latestAggregatorRoundIds_ = java.util.Collections.emptyList();
      } else {
        latestAggregatorRoundIds_ = null;
        latestAggregatorRoundIdsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      if (rewardPoolsBuilder_ == null) {
        rewardPools_ = java.util.Collections.emptyList();
      } else {
        rewardPools_ = null;
        rewardPoolsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (feedObservationCountsBuilder_ == null) {
        feedObservationCounts_ = java.util.Collections.emptyList();
      } else {
        feedObservationCounts_ = null;
        feedObservationCountsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      if (feedTransmissionCountsBuilder_ == null) {
        feedTransmissionCounts_ = java.util.Collections.emptyList();
      } else {
        feedTransmissionCounts_ = null;
        feedTransmissionCountsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      if (pendingPayeeshipsBuilder_ == null) {
        pendingPayeeships_ = java.util.Collections.emptyList();
      } else {
        pendingPayeeships_ = null;
        pendingPayeeshipsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.injective.ocr.v1beta1.GenesisProto.internal_static_injective_ocr_v1beta1_GenesisState_descriptor;
    }

    @java.lang.Override
    public com.injective.ocr.v1beta1.GenesisState getDefaultInstanceForType() {
      return com.injective.ocr.v1beta1.GenesisState.getDefaultInstance();
    }

    @java.lang.Override
    public com.injective.ocr.v1beta1.GenesisState build() {
      com.injective.ocr.v1beta1.GenesisState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.injective.ocr.v1beta1.GenesisState buildPartial() {
      com.injective.ocr.v1beta1.GenesisState result = new com.injective.ocr.v1beta1.GenesisState(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.injective.ocr.v1beta1.GenesisState result) {
      if (feedConfigsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          feedConfigs_ = java.util.Collections.unmodifiableList(feedConfigs_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.feedConfigs_ = feedConfigs_;
      } else {
        result.feedConfigs_ = feedConfigsBuilder_.build();
      }
      if (latestEpochAndRoundsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          latestEpochAndRounds_ = java.util.Collections.unmodifiableList(latestEpochAndRounds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.latestEpochAndRounds_ = latestEpochAndRounds_;
      } else {
        result.latestEpochAndRounds_ = latestEpochAndRoundsBuilder_.build();
      }
      if (feedTransmissionsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          feedTransmissions_ = java.util.Collections.unmodifiableList(feedTransmissions_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.feedTransmissions_ = feedTransmissions_;
      } else {
        result.feedTransmissions_ = feedTransmissionsBuilder_.build();
      }
      if (latestAggregatorRoundIdsBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          latestAggregatorRoundIds_ = java.util.Collections.unmodifiableList(latestAggregatorRoundIds_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.latestAggregatorRoundIds_ = latestAggregatorRoundIds_;
      } else {
        result.latestAggregatorRoundIds_ = latestAggregatorRoundIdsBuilder_.build();
      }
      if (rewardPoolsBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          rewardPools_ = java.util.Collections.unmodifiableList(rewardPools_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.rewardPools_ = rewardPools_;
      } else {
        result.rewardPools_ = rewardPoolsBuilder_.build();
      }
      if (feedObservationCountsBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          feedObservationCounts_ = java.util.Collections.unmodifiableList(feedObservationCounts_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.feedObservationCounts_ = feedObservationCounts_;
      } else {
        result.feedObservationCounts_ = feedObservationCountsBuilder_.build();
      }
      if (feedTransmissionCountsBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          feedTransmissionCounts_ = java.util.Collections.unmodifiableList(feedTransmissionCounts_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.feedTransmissionCounts_ = feedTransmissionCounts_;
      } else {
        result.feedTransmissionCounts_ = feedTransmissionCountsBuilder_.build();
      }
      if (pendingPayeeshipsBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          pendingPayeeships_ = java.util.Collections.unmodifiableList(pendingPayeeships_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.pendingPayeeships_ = pendingPayeeships_;
      } else {
        result.pendingPayeeships_ = pendingPayeeshipsBuilder_.build();
      }
    }

    private void buildPartial0(com.injective.ocr.v1beta1.GenesisState result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.params_ = paramsBuilder_ == null
            ? params_
            : paramsBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.injective.ocr.v1beta1.GenesisState) {
        return mergeFrom((com.injective.ocr.v1beta1.GenesisState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.injective.ocr.v1beta1.GenesisState other) {
      if (other == com.injective.ocr.v1beta1.GenesisState.getDefaultInstance()) return this;
      if (other.hasParams()) {
        mergeParams(other.getParams());
      }
      if (feedConfigsBuilder_ == null) {
        if (!other.feedConfigs_.isEmpty()) {
          if (feedConfigs_.isEmpty()) {
            feedConfigs_ = other.feedConfigs_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFeedConfigsIsMutable();
            feedConfigs_.addAll(other.feedConfigs_);
          }
          onChanged();
        }
      } else {
        if (!other.feedConfigs_.isEmpty()) {
          if (feedConfigsBuilder_.isEmpty()) {
            feedConfigsBuilder_.dispose();
            feedConfigsBuilder_ = null;
            feedConfigs_ = other.feedConfigs_;
            bitField0_ = (bitField0_ & ~0x00000002);
            feedConfigsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFeedConfigsFieldBuilder() : null;
          } else {
            feedConfigsBuilder_.addAllMessages(other.feedConfigs_);
          }
        }
      }
      if (latestEpochAndRoundsBuilder_ == null) {
        if (!other.latestEpochAndRounds_.isEmpty()) {
          if (latestEpochAndRounds_.isEmpty()) {
            latestEpochAndRounds_ = other.latestEpochAndRounds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureLatestEpochAndRoundsIsMutable();
            latestEpochAndRounds_.addAll(other.latestEpochAndRounds_);
          }
          onChanged();
        }
      } else {
        if (!other.latestEpochAndRounds_.isEmpty()) {
          if (latestEpochAndRoundsBuilder_.isEmpty()) {
            latestEpochAndRoundsBuilder_.dispose();
            latestEpochAndRoundsBuilder_ = null;
            latestEpochAndRounds_ = other.latestEpochAndRounds_;
            bitField0_ = (bitField0_ & ~0x00000004);
            latestEpochAndRoundsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLatestEpochAndRoundsFieldBuilder() : null;
          } else {
            latestEpochAndRoundsBuilder_.addAllMessages(other.latestEpochAndRounds_);
          }
        }
      }
      if (feedTransmissionsBuilder_ == null) {
        if (!other.feedTransmissions_.isEmpty()) {
          if (feedTransmissions_.isEmpty()) {
            feedTransmissions_ = other.feedTransmissions_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureFeedTransmissionsIsMutable();
            feedTransmissions_.addAll(other.feedTransmissions_);
          }
          onChanged();
        }
      } else {
        if (!other.feedTransmissions_.isEmpty()) {
          if (feedTransmissionsBuilder_.isEmpty()) {
            feedTransmissionsBuilder_.dispose();
            feedTransmissionsBuilder_ = null;
            feedTransmissions_ = other.feedTransmissions_;
            bitField0_ = (bitField0_ & ~0x00000008);
            feedTransmissionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFeedTransmissionsFieldBuilder() : null;
          } else {
            feedTransmissionsBuilder_.addAllMessages(other.feedTransmissions_);
          }
        }
      }
      if (latestAggregatorRoundIdsBuilder_ == null) {
        if (!other.latestAggregatorRoundIds_.isEmpty()) {
          if (latestAggregatorRoundIds_.isEmpty()) {
            latestAggregatorRoundIds_ = other.latestAggregatorRoundIds_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureLatestAggregatorRoundIdsIsMutable();
            latestAggregatorRoundIds_.addAll(other.latestAggregatorRoundIds_);
          }
          onChanged();
        }
      } else {
        if (!other.latestAggregatorRoundIds_.isEmpty()) {
          if (latestAggregatorRoundIdsBuilder_.isEmpty()) {
            latestAggregatorRoundIdsBuilder_.dispose();
            latestAggregatorRoundIdsBuilder_ = null;
            latestAggregatorRoundIds_ = other.latestAggregatorRoundIds_;
            bitField0_ = (bitField0_ & ~0x00000010);
            latestAggregatorRoundIdsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLatestAggregatorRoundIdsFieldBuilder() : null;
          } else {
            latestAggregatorRoundIdsBuilder_.addAllMessages(other.latestAggregatorRoundIds_);
          }
        }
      }
      if (rewardPoolsBuilder_ == null) {
        if (!other.rewardPools_.isEmpty()) {
          if (rewardPools_.isEmpty()) {
            rewardPools_ = other.rewardPools_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureRewardPoolsIsMutable();
            rewardPools_.addAll(other.rewardPools_);
          }
          onChanged();
        }
      } else {
        if (!other.rewardPools_.isEmpty()) {
          if (rewardPoolsBuilder_.isEmpty()) {
            rewardPoolsBuilder_.dispose();
            rewardPoolsBuilder_ = null;
            rewardPools_ = other.rewardPools_;
            bitField0_ = (bitField0_ & ~0x00000020);
            rewardPoolsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRewardPoolsFieldBuilder() : null;
          } else {
            rewardPoolsBuilder_.addAllMessages(other.rewardPools_);
          }
        }
      }
      if (feedObservationCountsBuilder_ == null) {
        if (!other.feedObservationCounts_.isEmpty()) {
          if (feedObservationCounts_.isEmpty()) {
            feedObservationCounts_ = other.feedObservationCounts_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureFeedObservationCountsIsMutable();
            feedObservationCounts_.addAll(other.feedObservationCounts_);
          }
          onChanged();
        }
      } else {
        if (!other.feedObservationCounts_.isEmpty()) {
          if (feedObservationCountsBuilder_.isEmpty()) {
            feedObservationCountsBuilder_.dispose();
            feedObservationCountsBuilder_ = null;
            feedObservationCounts_ = other.feedObservationCounts_;
            bitField0_ = (bitField0_ & ~0x00000040);
            feedObservationCountsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFeedObservationCountsFieldBuilder() : null;
          } else {
            feedObservationCountsBuilder_.addAllMessages(other.feedObservationCounts_);
          }
        }
      }
      if (feedTransmissionCountsBuilder_ == null) {
        if (!other.feedTransmissionCounts_.isEmpty()) {
          if (feedTransmissionCounts_.isEmpty()) {
            feedTransmissionCounts_ = other.feedTransmissionCounts_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureFeedTransmissionCountsIsMutable();
            feedTransmissionCounts_.addAll(other.feedTransmissionCounts_);
          }
          onChanged();
        }
      } else {
        if (!other.feedTransmissionCounts_.isEmpty()) {
          if (feedTransmissionCountsBuilder_.isEmpty()) {
            feedTransmissionCountsBuilder_.dispose();
            feedTransmissionCountsBuilder_ = null;
            feedTransmissionCounts_ = other.feedTransmissionCounts_;
            bitField0_ = (bitField0_ & ~0x00000080);
            feedTransmissionCountsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFeedTransmissionCountsFieldBuilder() : null;
          } else {
            feedTransmissionCountsBuilder_.addAllMessages(other.feedTransmissionCounts_);
          }
        }
      }
      if (pendingPayeeshipsBuilder_ == null) {
        if (!other.pendingPayeeships_.isEmpty()) {
          if (pendingPayeeships_.isEmpty()) {
            pendingPayeeships_ = other.pendingPayeeships_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensurePendingPayeeshipsIsMutable();
            pendingPayeeships_.addAll(other.pendingPayeeships_);
          }
          onChanged();
        }
      } else {
        if (!other.pendingPayeeships_.isEmpty()) {
          if (pendingPayeeshipsBuilder_.isEmpty()) {
            pendingPayeeshipsBuilder_.dispose();
            pendingPayeeshipsBuilder_ = null;
            pendingPayeeships_ = other.pendingPayeeships_;
            bitField0_ = (bitField0_ & ~0x00000100);
            pendingPayeeshipsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPendingPayeeshipsFieldBuilder() : null;
          } else {
            pendingPayeeshipsBuilder_.addAllMessages(other.pendingPayeeships_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getParamsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.injective.ocr.v1beta1.FeedConfig m =
                  input.readMessage(
                      com.injective.ocr.v1beta1.FeedConfig.parser(),
                      extensionRegistry);
              if (feedConfigsBuilder_ == null) {
                ensureFeedConfigsIsMutable();
                feedConfigs_.add(m);
              } else {
                feedConfigsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.injective.ocr.v1beta1.FeedEpochAndRound m =
                  input.readMessage(
                      com.injective.ocr.v1beta1.FeedEpochAndRound.parser(),
                      extensionRegistry);
              if (latestEpochAndRoundsBuilder_ == null) {
                ensureLatestEpochAndRoundsIsMutable();
                latestEpochAndRounds_.add(m);
              } else {
                latestEpochAndRoundsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.injective.ocr.v1beta1.FeedTransmission m =
                  input.readMessage(
                      com.injective.ocr.v1beta1.FeedTransmission.parser(),
                      extensionRegistry);
              if (feedTransmissionsBuilder_ == null) {
                ensureFeedTransmissionsIsMutable();
                feedTransmissions_.add(m);
              } else {
                feedTransmissionsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs m =
                  input.readMessage(
                      com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.parser(),
                      extensionRegistry);
              if (latestAggregatorRoundIdsBuilder_ == null) {
                ensureLatestAggregatorRoundIdsIsMutable();
                latestAggregatorRoundIds_.add(m);
              } else {
                latestAggregatorRoundIdsBuilder_.addMessage(m);
              }
              break;
            } // case 42
            case 50: {
              com.injective.ocr.v1beta1.RewardPool m =
                  input.readMessage(
                      com.injective.ocr.v1beta1.RewardPool.parser(),
                      extensionRegistry);
              if (rewardPoolsBuilder_ == null) {
                ensureRewardPoolsIsMutable();
                rewardPools_.add(m);
              } else {
                rewardPoolsBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 58: {
              com.injective.ocr.v1beta1.FeedCounts m =
                  input.readMessage(
                      com.injective.ocr.v1beta1.FeedCounts.parser(),
                      extensionRegistry);
              if (feedObservationCountsBuilder_ == null) {
                ensureFeedObservationCountsIsMutable();
                feedObservationCounts_.add(m);
              } else {
                feedObservationCountsBuilder_.addMessage(m);
              }
              break;
            } // case 58
            case 66: {
              com.injective.ocr.v1beta1.FeedCounts m =
                  input.readMessage(
                      com.injective.ocr.v1beta1.FeedCounts.parser(),
                      extensionRegistry);
              if (feedTransmissionCountsBuilder_ == null) {
                ensureFeedTransmissionCountsIsMutable();
                feedTransmissionCounts_.add(m);
              } else {
                feedTransmissionCountsBuilder_.addMessage(m);
              }
              break;
            } // case 66
            case 74: {
              com.injective.ocr.v1beta1.PendingPayeeship m =
                  input.readMessage(
                      com.injective.ocr.v1beta1.PendingPayeeship.parser(),
                      extensionRegistry);
              if (pendingPayeeshipsBuilder_ == null) {
                ensurePendingPayeeshipsIsMutable();
                pendingPayeeships_.add(m);
              } else {
                pendingPayeeshipsBuilder_.addMessage(m);
              }
              break;
            } // case 74
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.injective.ocr.v1beta1.Params params_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.injective.ocr.v1beta1.Params, com.injective.ocr.v1beta1.Params.Builder, com.injective.ocr.v1beta1.ParamsOrBuilder> paramsBuilder_;
    /**
     * <pre>
     * params defines all the parameters of related to OCR.
     * </pre>
     *
     * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return Whether the params field is set.
     */
    public boolean hasParams() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * params defines all the parameters of related to OCR.
     * </pre>
     *
     * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return The params.
     */
    public com.injective.ocr.v1beta1.Params getParams() {
      if (paramsBuilder_ == null) {
        return params_ == null ? com.injective.ocr.v1beta1.Params.getDefaultInstance() : params_;
      } else {
        return paramsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * params defines all the parameters of related to OCR.
     * </pre>
     *
     * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder setParams(com.injective.ocr.v1beta1.Params value) {
      if (paramsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
      } else {
        paramsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * params defines all the parameters of related to OCR.
     * </pre>
     *
     * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder setParams(
        com.injective.ocr.v1beta1.Params.Builder builderForValue) {
      if (paramsBuilder_ == null) {
        params_ = builderForValue.build();
      } else {
        paramsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * params defines all the parameters of related to OCR.
     * </pre>
     *
     * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeParams(com.injective.ocr.v1beta1.Params value) {
      if (paramsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          params_ != null &&
          params_ != com.injective.ocr.v1beta1.Params.getDefaultInstance()) {
          getParamsBuilder().mergeFrom(value);
        } else {
          params_ = value;
        }
      } else {
        paramsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * params defines all the parameters of related to OCR.
     * </pre>
     *
     * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearParams() {
      bitField0_ = (bitField0_ & ~0x00000001);
      params_ = null;
      if (paramsBuilder_ != null) {
        paramsBuilder_.dispose();
        paramsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * params defines all the parameters of related to OCR.
     * </pre>
     *
     * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public com.injective.ocr.v1beta1.Params.Builder getParamsBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getParamsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * params defines all the parameters of related to OCR.
     * </pre>
     *
     * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public com.injective.ocr.v1beta1.ParamsOrBuilder getParamsOrBuilder() {
      if (paramsBuilder_ != null) {
        return paramsBuilder_.getMessageOrBuilder();
      } else {
        return params_ == null ?
            com.injective.ocr.v1beta1.Params.getDefaultInstance() : params_;
      }
    }
    /**
     * <pre>
     * params defines all the parameters of related to OCR.
     * </pre>
     *
     * <code>.injective.ocr.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.injective.ocr.v1beta1.Params, com.injective.ocr.v1beta1.Params.Builder, com.injective.ocr.v1beta1.ParamsOrBuilder> 
        getParamsFieldBuilder() {
      if (paramsBuilder_ == null) {
        paramsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.injective.ocr.v1beta1.Params, com.injective.ocr.v1beta1.Params.Builder, com.injective.ocr.v1beta1.ParamsOrBuilder>(
                getParams(),
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      return paramsBuilder_;
    }

    private java.util.List<com.injective.ocr.v1beta1.FeedConfig> feedConfigs_ =
      java.util.Collections.emptyList();
    private void ensureFeedConfigsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        feedConfigs_ = new java.util.ArrayList<com.injective.ocr.v1beta1.FeedConfig>(feedConfigs_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.FeedConfig, com.injective.ocr.v1beta1.FeedConfig.Builder, com.injective.ocr.v1beta1.FeedConfigOrBuilder> feedConfigsBuilder_;

    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.FeedConfig> getFeedConfigsList() {
      if (feedConfigsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(feedConfigs_);
      } else {
        return feedConfigsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public int getFeedConfigsCount() {
      if (feedConfigsBuilder_ == null) {
        return feedConfigs_.size();
      } else {
        return feedConfigsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public com.injective.ocr.v1beta1.FeedConfig getFeedConfigs(int index) {
      if (feedConfigsBuilder_ == null) {
        return feedConfigs_.get(index);
      } else {
        return feedConfigsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public Builder setFeedConfigs(
        int index, com.injective.ocr.v1beta1.FeedConfig value) {
      if (feedConfigsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedConfigsIsMutable();
        feedConfigs_.set(index, value);
        onChanged();
      } else {
        feedConfigsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public Builder setFeedConfigs(
        int index, com.injective.ocr.v1beta1.FeedConfig.Builder builderForValue) {
      if (feedConfigsBuilder_ == null) {
        ensureFeedConfigsIsMutable();
        feedConfigs_.set(index, builderForValue.build());
        onChanged();
      } else {
        feedConfigsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public Builder addFeedConfigs(com.injective.ocr.v1beta1.FeedConfig value) {
      if (feedConfigsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedConfigsIsMutable();
        feedConfigs_.add(value);
        onChanged();
      } else {
        feedConfigsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public Builder addFeedConfigs(
        int index, com.injective.ocr.v1beta1.FeedConfig value) {
      if (feedConfigsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedConfigsIsMutable();
        feedConfigs_.add(index, value);
        onChanged();
      } else {
        feedConfigsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public Builder addFeedConfigs(
        com.injective.ocr.v1beta1.FeedConfig.Builder builderForValue) {
      if (feedConfigsBuilder_ == null) {
        ensureFeedConfigsIsMutable();
        feedConfigs_.add(builderForValue.build());
        onChanged();
      } else {
        feedConfigsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public Builder addFeedConfigs(
        int index, com.injective.ocr.v1beta1.FeedConfig.Builder builderForValue) {
      if (feedConfigsBuilder_ == null) {
        ensureFeedConfigsIsMutable();
        feedConfigs_.add(index, builderForValue.build());
        onChanged();
      } else {
        feedConfigsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public Builder addAllFeedConfigs(
        java.lang.Iterable<? extends com.injective.ocr.v1beta1.FeedConfig> values) {
      if (feedConfigsBuilder_ == null) {
        ensureFeedConfigsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, feedConfigs_);
        onChanged();
      } else {
        feedConfigsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public Builder clearFeedConfigs() {
      if (feedConfigsBuilder_ == null) {
        feedConfigs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        feedConfigsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public Builder removeFeedConfigs(int index) {
      if (feedConfigsBuilder_ == null) {
        ensureFeedConfigsIsMutable();
        feedConfigs_.remove(index);
        onChanged();
      } else {
        feedConfigsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public com.injective.ocr.v1beta1.FeedConfig.Builder getFeedConfigsBuilder(
        int index) {
      return getFeedConfigsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public com.injective.ocr.v1beta1.FeedConfigOrBuilder getFeedConfigsOrBuilder(
        int index) {
      if (feedConfigsBuilder_ == null) {
        return feedConfigs_.get(index);  } else {
        return feedConfigsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public java.util.List<? extends com.injective.ocr.v1beta1.FeedConfigOrBuilder> 
         getFeedConfigsOrBuilderList() {
      if (feedConfigsBuilder_ != null) {
        return feedConfigsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(feedConfigs_);
      }
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public com.injective.ocr.v1beta1.FeedConfig.Builder addFeedConfigsBuilder() {
      return getFeedConfigsFieldBuilder().addBuilder(
          com.injective.ocr.v1beta1.FeedConfig.getDefaultInstance());
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public com.injective.ocr.v1beta1.FeedConfig.Builder addFeedConfigsBuilder(
        int index) {
      return getFeedConfigsFieldBuilder().addBuilder(
          index, com.injective.ocr.v1beta1.FeedConfig.getDefaultInstance());
    }
    /**
     * <pre>
     * feed_configs stores all of the supported OCR feeds
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedConfig feed_configs = 2 [json_name = "feedConfigs"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.FeedConfig.Builder> 
         getFeedConfigsBuilderList() {
      return getFeedConfigsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.FeedConfig, com.injective.ocr.v1beta1.FeedConfig.Builder, com.injective.ocr.v1beta1.FeedConfigOrBuilder> 
        getFeedConfigsFieldBuilder() {
      if (feedConfigsBuilder_ == null) {
        feedConfigsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.injective.ocr.v1beta1.FeedConfig, com.injective.ocr.v1beta1.FeedConfig.Builder, com.injective.ocr.v1beta1.FeedConfigOrBuilder>(
                feedConfigs_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        feedConfigs_ = null;
      }
      return feedConfigsBuilder_;
    }

    private java.util.List<com.injective.ocr.v1beta1.FeedEpochAndRound> latestEpochAndRounds_ =
      java.util.Collections.emptyList();
    private void ensureLatestEpochAndRoundsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        latestEpochAndRounds_ = new java.util.ArrayList<com.injective.ocr.v1beta1.FeedEpochAndRound>(latestEpochAndRounds_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.FeedEpochAndRound, com.injective.ocr.v1beta1.FeedEpochAndRound.Builder, com.injective.ocr.v1beta1.FeedEpochAndRoundOrBuilder> latestEpochAndRoundsBuilder_;

    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.FeedEpochAndRound> getLatestEpochAndRoundsList() {
      if (latestEpochAndRoundsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(latestEpochAndRounds_);
      } else {
        return latestEpochAndRoundsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public int getLatestEpochAndRoundsCount() {
      if (latestEpochAndRoundsBuilder_ == null) {
        return latestEpochAndRounds_.size();
      } else {
        return latestEpochAndRoundsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public com.injective.ocr.v1beta1.FeedEpochAndRound getLatestEpochAndRounds(int index) {
      if (latestEpochAndRoundsBuilder_ == null) {
        return latestEpochAndRounds_.get(index);
      } else {
        return latestEpochAndRoundsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public Builder setLatestEpochAndRounds(
        int index, com.injective.ocr.v1beta1.FeedEpochAndRound value) {
      if (latestEpochAndRoundsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLatestEpochAndRoundsIsMutable();
        latestEpochAndRounds_.set(index, value);
        onChanged();
      } else {
        latestEpochAndRoundsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public Builder setLatestEpochAndRounds(
        int index, com.injective.ocr.v1beta1.FeedEpochAndRound.Builder builderForValue) {
      if (latestEpochAndRoundsBuilder_ == null) {
        ensureLatestEpochAndRoundsIsMutable();
        latestEpochAndRounds_.set(index, builderForValue.build());
        onChanged();
      } else {
        latestEpochAndRoundsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public Builder addLatestEpochAndRounds(com.injective.ocr.v1beta1.FeedEpochAndRound value) {
      if (latestEpochAndRoundsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLatestEpochAndRoundsIsMutable();
        latestEpochAndRounds_.add(value);
        onChanged();
      } else {
        latestEpochAndRoundsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public Builder addLatestEpochAndRounds(
        int index, com.injective.ocr.v1beta1.FeedEpochAndRound value) {
      if (latestEpochAndRoundsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLatestEpochAndRoundsIsMutable();
        latestEpochAndRounds_.add(index, value);
        onChanged();
      } else {
        latestEpochAndRoundsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public Builder addLatestEpochAndRounds(
        com.injective.ocr.v1beta1.FeedEpochAndRound.Builder builderForValue) {
      if (latestEpochAndRoundsBuilder_ == null) {
        ensureLatestEpochAndRoundsIsMutable();
        latestEpochAndRounds_.add(builderForValue.build());
        onChanged();
      } else {
        latestEpochAndRoundsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public Builder addLatestEpochAndRounds(
        int index, com.injective.ocr.v1beta1.FeedEpochAndRound.Builder builderForValue) {
      if (latestEpochAndRoundsBuilder_ == null) {
        ensureLatestEpochAndRoundsIsMutable();
        latestEpochAndRounds_.add(index, builderForValue.build());
        onChanged();
      } else {
        latestEpochAndRoundsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public Builder addAllLatestEpochAndRounds(
        java.lang.Iterable<? extends com.injective.ocr.v1beta1.FeedEpochAndRound> values) {
      if (latestEpochAndRoundsBuilder_ == null) {
        ensureLatestEpochAndRoundsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, latestEpochAndRounds_);
        onChanged();
      } else {
        latestEpochAndRoundsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public Builder clearLatestEpochAndRounds() {
      if (latestEpochAndRoundsBuilder_ == null) {
        latestEpochAndRounds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        latestEpochAndRoundsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public Builder removeLatestEpochAndRounds(int index) {
      if (latestEpochAndRoundsBuilder_ == null) {
        ensureLatestEpochAndRoundsIsMutable();
        latestEpochAndRounds_.remove(index);
        onChanged();
      } else {
        latestEpochAndRoundsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public com.injective.ocr.v1beta1.FeedEpochAndRound.Builder getLatestEpochAndRoundsBuilder(
        int index) {
      return getLatestEpochAndRoundsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public com.injective.ocr.v1beta1.FeedEpochAndRoundOrBuilder getLatestEpochAndRoundsOrBuilder(
        int index) {
      if (latestEpochAndRoundsBuilder_ == null) {
        return latestEpochAndRounds_.get(index);  } else {
        return latestEpochAndRoundsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public java.util.List<? extends com.injective.ocr.v1beta1.FeedEpochAndRoundOrBuilder> 
         getLatestEpochAndRoundsOrBuilderList() {
      if (latestEpochAndRoundsBuilder_ != null) {
        return latestEpochAndRoundsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(latestEpochAndRounds_);
      }
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public com.injective.ocr.v1beta1.FeedEpochAndRound.Builder addLatestEpochAndRoundsBuilder() {
      return getLatestEpochAndRoundsFieldBuilder().addBuilder(
          com.injective.ocr.v1beta1.FeedEpochAndRound.getDefaultInstance());
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public com.injective.ocr.v1beta1.FeedEpochAndRound.Builder addLatestEpochAndRoundsBuilder(
        int index) {
      return getLatestEpochAndRoundsFieldBuilder().addBuilder(
          index, com.injective.ocr.v1beta1.FeedEpochAndRound.getDefaultInstance());
    }
    /**
     * <pre>
     * latest_epoch_and_rounds stores the latest epoch and round for each feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedEpochAndRound latest_epoch_and_rounds = 3 [json_name = "latestEpochAndRounds"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.FeedEpochAndRound.Builder> 
         getLatestEpochAndRoundsBuilderList() {
      return getLatestEpochAndRoundsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.FeedEpochAndRound, com.injective.ocr.v1beta1.FeedEpochAndRound.Builder, com.injective.ocr.v1beta1.FeedEpochAndRoundOrBuilder> 
        getLatestEpochAndRoundsFieldBuilder() {
      if (latestEpochAndRoundsBuilder_ == null) {
        latestEpochAndRoundsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.injective.ocr.v1beta1.FeedEpochAndRound, com.injective.ocr.v1beta1.FeedEpochAndRound.Builder, com.injective.ocr.v1beta1.FeedEpochAndRoundOrBuilder>(
                latestEpochAndRounds_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        latestEpochAndRounds_ = null;
      }
      return latestEpochAndRoundsBuilder_;
    }

    private java.util.List<com.injective.ocr.v1beta1.FeedTransmission> feedTransmissions_ =
      java.util.Collections.emptyList();
    private void ensureFeedTransmissionsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        feedTransmissions_ = new java.util.ArrayList<com.injective.ocr.v1beta1.FeedTransmission>(feedTransmissions_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.FeedTransmission, com.injective.ocr.v1beta1.FeedTransmission.Builder, com.injective.ocr.v1beta1.FeedTransmissionOrBuilder> feedTransmissionsBuilder_;

    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.FeedTransmission> getFeedTransmissionsList() {
      if (feedTransmissionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(feedTransmissions_);
      } else {
        return feedTransmissionsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public int getFeedTransmissionsCount() {
      if (feedTransmissionsBuilder_ == null) {
        return feedTransmissions_.size();
      } else {
        return feedTransmissionsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public com.injective.ocr.v1beta1.FeedTransmission getFeedTransmissions(int index) {
      if (feedTransmissionsBuilder_ == null) {
        return feedTransmissions_.get(index);
      } else {
        return feedTransmissionsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public Builder setFeedTransmissions(
        int index, com.injective.ocr.v1beta1.FeedTransmission value) {
      if (feedTransmissionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedTransmissionsIsMutable();
        feedTransmissions_.set(index, value);
        onChanged();
      } else {
        feedTransmissionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public Builder setFeedTransmissions(
        int index, com.injective.ocr.v1beta1.FeedTransmission.Builder builderForValue) {
      if (feedTransmissionsBuilder_ == null) {
        ensureFeedTransmissionsIsMutable();
        feedTransmissions_.set(index, builderForValue.build());
        onChanged();
      } else {
        feedTransmissionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public Builder addFeedTransmissions(com.injective.ocr.v1beta1.FeedTransmission value) {
      if (feedTransmissionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedTransmissionsIsMutable();
        feedTransmissions_.add(value);
        onChanged();
      } else {
        feedTransmissionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public Builder addFeedTransmissions(
        int index, com.injective.ocr.v1beta1.FeedTransmission value) {
      if (feedTransmissionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedTransmissionsIsMutable();
        feedTransmissions_.add(index, value);
        onChanged();
      } else {
        feedTransmissionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public Builder addFeedTransmissions(
        com.injective.ocr.v1beta1.FeedTransmission.Builder builderForValue) {
      if (feedTransmissionsBuilder_ == null) {
        ensureFeedTransmissionsIsMutable();
        feedTransmissions_.add(builderForValue.build());
        onChanged();
      } else {
        feedTransmissionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public Builder addFeedTransmissions(
        int index, com.injective.ocr.v1beta1.FeedTransmission.Builder builderForValue) {
      if (feedTransmissionsBuilder_ == null) {
        ensureFeedTransmissionsIsMutable();
        feedTransmissions_.add(index, builderForValue.build());
        onChanged();
      } else {
        feedTransmissionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public Builder addAllFeedTransmissions(
        java.lang.Iterable<? extends com.injective.ocr.v1beta1.FeedTransmission> values) {
      if (feedTransmissionsBuilder_ == null) {
        ensureFeedTransmissionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, feedTransmissions_);
        onChanged();
      } else {
        feedTransmissionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public Builder clearFeedTransmissions() {
      if (feedTransmissionsBuilder_ == null) {
        feedTransmissions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        feedTransmissionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public Builder removeFeedTransmissions(int index) {
      if (feedTransmissionsBuilder_ == null) {
        ensureFeedTransmissionsIsMutable();
        feedTransmissions_.remove(index);
        onChanged();
      } else {
        feedTransmissionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public com.injective.ocr.v1beta1.FeedTransmission.Builder getFeedTransmissionsBuilder(
        int index) {
      return getFeedTransmissionsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public com.injective.ocr.v1beta1.FeedTransmissionOrBuilder getFeedTransmissionsOrBuilder(
        int index) {
      if (feedTransmissionsBuilder_ == null) {
        return feedTransmissions_.get(index);  } else {
        return feedTransmissionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public java.util.List<? extends com.injective.ocr.v1beta1.FeedTransmissionOrBuilder> 
         getFeedTransmissionsOrBuilderList() {
      if (feedTransmissionsBuilder_ != null) {
        return feedTransmissionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(feedTransmissions_);
      }
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public com.injective.ocr.v1beta1.FeedTransmission.Builder addFeedTransmissionsBuilder() {
      return getFeedTransmissionsFieldBuilder().addBuilder(
          com.injective.ocr.v1beta1.FeedTransmission.getDefaultInstance());
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public com.injective.ocr.v1beta1.FeedTransmission.Builder addFeedTransmissionsBuilder(
        int index) {
      return getFeedTransmissionsFieldBuilder().addBuilder(
          index, com.injective.ocr.v1beta1.FeedTransmission.getDefaultInstance());
    }
    /**
     * <pre>
     * feed_transmissions stores the last transmission for each feed
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedTransmission feed_transmissions = 4 [json_name = "feedTransmissions"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.FeedTransmission.Builder> 
         getFeedTransmissionsBuilderList() {
      return getFeedTransmissionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.FeedTransmission, com.injective.ocr.v1beta1.FeedTransmission.Builder, com.injective.ocr.v1beta1.FeedTransmissionOrBuilder> 
        getFeedTransmissionsFieldBuilder() {
      if (feedTransmissionsBuilder_ == null) {
        feedTransmissionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.injective.ocr.v1beta1.FeedTransmission, com.injective.ocr.v1beta1.FeedTransmission.Builder, com.injective.ocr.v1beta1.FeedTransmissionOrBuilder>(
                feedTransmissions_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        feedTransmissions_ = null;
      }
      return feedTransmissionsBuilder_;
    }

    private java.util.List<com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs> latestAggregatorRoundIds_ =
      java.util.Collections.emptyList();
    private void ensureLatestAggregatorRoundIdsIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        latestAggregatorRoundIds_ = new java.util.ArrayList<com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs>(latestAggregatorRoundIds_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs, com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.Builder, com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDsOrBuilder> latestAggregatorRoundIdsBuilder_;

    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs> getLatestAggregatorRoundIdsList() {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(latestAggregatorRoundIds_);
      } else {
        return latestAggregatorRoundIdsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public int getLatestAggregatorRoundIdsCount() {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        return latestAggregatorRoundIds_.size();
      } else {
        return latestAggregatorRoundIdsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs getLatestAggregatorRoundIds(int index) {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        return latestAggregatorRoundIds_.get(index);
      } else {
        return latestAggregatorRoundIdsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public Builder setLatestAggregatorRoundIds(
        int index, com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs value) {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLatestAggregatorRoundIdsIsMutable();
        latestAggregatorRoundIds_.set(index, value);
        onChanged();
      } else {
        latestAggregatorRoundIdsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public Builder setLatestAggregatorRoundIds(
        int index, com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.Builder builderForValue) {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        ensureLatestAggregatorRoundIdsIsMutable();
        latestAggregatorRoundIds_.set(index, builderForValue.build());
        onChanged();
      } else {
        latestAggregatorRoundIdsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public Builder addLatestAggregatorRoundIds(com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs value) {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLatestAggregatorRoundIdsIsMutable();
        latestAggregatorRoundIds_.add(value);
        onChanged();
      } else {
        latestAggregatorRoundIdsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public Builder addLatestAggregatorRoundIds(
        int index, com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs value) {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLatestAggregatorRoundIdsIsMutable();
        latestAggregatorRoundIds_.add(index, value);
        onChanged();
      } else {
        latestAggregatorRoundIdsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public Builder addLatestAggregatorRoundIds(
        com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.Builder builderForValue) {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        ensureLatestAggregatorRoundIdsIsMutable();
        latestAggregatorRoundIds_.add(builderForValue.build());
        onChanged();
      } else {
        latestAggregatorRoundIdsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public Builder addLatestAggregatorRoundIds(
        int index, com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.Builder builderForValue) {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        ensureLatestAggregatorRoundIdsIsMutable();
        latestAggregatorRoundIds_.add(index, builderForValue.build());
        onChanged();
      } else {
        latestAggregatorRoundIdsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public Builder addAllLatestAggregatorRoundIds(
        java.lang.Iterable<? extends com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs> values) {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        ensureLatestAggregatorRoundIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, latestAggregatorRoundIds_);
        onChanged();
      } else {
        latestAggregatorRoundIdsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public Builder clearLatestAggregatorRoundIds() {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        latestAggregatorRoundIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        latestAggregatorRoundIdsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public Builder removeLatestAggregatorRoundIds(int index) {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        ensureLatestAggregatorRoundIdsIsMutable();
        latestAggregatorRoundIds_.remove(index);
        onChanged();
      } else {
        latestAggregatorRoundIdsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.Builder getLatestAggregatorRoundIdsBuilder(
        int index) {
      return getLatestAggregatorRoundIdsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDsOrBuilder getLatestAggregatorRoundIdsOrBuilder(
        int index) {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        return latestAggregatorRoundIds_.get(index);  } else {
        return latestAggregatorRoundIdsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public java.util.List<? extends com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDsOrBuilder> 
         getLatestAggregatorRoundIdsOrBuilderList() {
      if (latestAggregatorRoundIdsBuilder_ != null) {
        return latestAggregatorRoundIdsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(latestAggregatorRoundIds_);
      }
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.Builder addLatestAggregatorRoundIdsBuilder() {
      return getLatestAggregatorRoundIdsFieldBuilder().addBuilder(
          com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.getDefaultInstance());
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.Builder addLatestAggregatorRoundIdsBuilder(
        int index) {
      return getLatestAggregatorRoundIdsFieldBuilder().addBuilder(
          index, com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.getDefaultInstance());
    }
    /**
     * <pre>
     * latest_aggregator_round_ids stores the latest aggregator round ID for each
     * feedId
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs latest_aggregator_round_ids = 5 [json_name = "latestAggregatorRoundIds"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.Builder> 
         getLatestAggregatorRoundIdsBuilderList() {
      return getLatestAggregatorRoundIdsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs, com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.Builder, com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDsOrBuilder> 
        getLatestAggregatorRoundIdsFieldBuilder() {
      if (latestAggregatorRoundIdsBuilder_ == null) {
        latestAggregatorRoundIdsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs, com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDs.Builder, com.injective.ocr.v1beta1.FeedLatestAggregatorRoundIDsOrBuilder>(
                latestAggregatorRoundIds_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        latestAggregatorRoundIds_ = null;
      }
      return latestAggregatorRoundIdsBuilder_;
    }

    private java.util.List<com.injective.ocr.v1beta1.RewardPool> rewardPools_ =
      java.util.Collections.emptyList();
    private void ensureRewardPoolsIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        rewardPools_ = new java.util.ArrayList<com.injective.ocr.v1beta1.RewardPool>(rewardPools_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.RewardPool, com.injective.ocr.v1beta1.RewardPool.Builder, com.injective.ocr.v1beta1.RewardPoolOrBuilder> rewardPoolsBuilder_;

    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.RewardPool> getRewardPoolsList() {
      if (rewardPoolsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(rewardPools_);
      } else {
        return rewardPoolsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public int getRewardPoolsCount() {
      if (rewardPoolsBuilder_ == null) {
        return rewardPools_.size();
      } else {
        return rewardPoolsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public com.injective.ocr.v1beta1.RewardPool getRewardPools(int index) {
      if (rewardPoolsBuilder_ == null) {
        return rewardPools_.get(index);
      } else {
        return rewardPoolsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public Builder setRewardPools(
        int index, com.injective.ocr.v1beta1.RewardPool value) {
      if (rewardPoolsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRewardPoolsIsMutable();
        rewardPools_.set(index, value);
        onChanged();
      } else {
        rewardPoolsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public Builder setRewardPools(
        int index, com.injective.ocr.v1beta1.RewardPool.Builder builderForValue) {
      if (rewardPoolsBuilder_ == null) {
        ensureRewardPoolsIsMutable();
        rewardPools_.set(index, builderForValue.build());
        onChanged();
      } else {
        rewardPoolsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public Builder addRewardPools(com.injective.ocr.v1beta1.RewardPool value) {
      if (rewardPoolsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRewardPoolsIsMutable();
        rewardPools_.add(value);
        onChanged();
      } else {
        rewardPoolsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public Builder addRewardPools(
        int index, com.injective.ocr.v1beta1.RewardPool value) {
      if (rewardPoolsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRewardPoolsIsMutable();
        rewardPools_.add(index, value);
        onChanged();
      } else {
        rewardPoolsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public Builder addRewardPools(
        com.injective.ocr.v1beta1.RewardPool.Builder builderForValue) {
      if (rewardPoolsBuilder_ == null) {
        ensureRewardPoolsIsMutable();
        rewardPools_.add(builderForValue.build());
        onChanged();
      } else {
        rewardPoolsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public Builder addRewardPools(
        int index, com.injective.ocr.v1beta1.RewardPool.Builder builderForValue) {
      if (rewardPoolsBuilder_ == null) {
        ensureRewardPoolsIsMutable();
        rewardPools_.add(index, builderForValue.build());
        onChanged();
      } else {
        rewardPoolsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public Builder addAllRewardPools(
        java.lang.Iterable<? extends com.injective.ocr.v1beta1.RewardPool> values) {
      if (rewardPoolsBuilder_ == null) {
        ensureRewardPoolsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rewardPools_);
        onChanged();
      } else {
        rewardPoolsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public Builder clearRewardPools() {
      if (rewardPoolsBuilder_ == null) {
        rewardPools_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        rewardPoolsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public Builder removeRewardPools(int index) {
      if (rewardPoolsBuilder_ == null) {
        ensureRewardPoolsIsMutable();
        rewardPools_.remove(index);
        onChanged();
      } else {
        rewardPoolsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public com.injective.ocr.v1beta1.RewardPool.Builder getRewardPoolsBuilder(
        int index) {
      return getRewardPoolsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public com.injective.ocr.v1beta1.RewardPoolOrBuilder getRewardPoolsOrBuilder(
        int index) {
      if (rewardPoolsBuilder_ == null) {
        return rewardPools_.get(index);  } else {
        return rewardPoolsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public java.util.List<? extends com.injective.ocr.v1beta1.RewardPoolOrBuilder> 
         getRewardPoolsOrBuilderList() {
      if (rewardPoolsBuilder_ != null) {
        return rewardPoolsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(rewardPools_);
      }
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public com.injective.ocr.v1beta1.RewardPool.Builder addRewardPoolsBuilder() {
      return getRewardPoolsFieldBuilder().addBuilder(
          com.injective.ocr.v1beta1.RewardPool.getDefaultInstance());
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public com.injective.ocr.v1beta1.RewardPool.Builder addRewardPoolsBuilder(
        int index) {
      return getRewardPoolsFieldBuilder().addBuilder(
          index, com.injective.ocr.v1beta1.RewardPool.getDefaultInstance());
    }
    /**
     * <pre>
     * reward_pools stores the reward pools
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.RewardPool reward_pools = 6 [json_name = "rewardPools"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.RewardPool.Builder> 
         getRewardPoolsBuilderList() {
      return getRewardPoolsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.RewardPool, com.injective.ocr.v1beta1.RewardPool.Builder, com.injective.ocr.v1beta1.RewardPoolOrBuilder> 
        getRewardPoolsFieldBuilder() {
      if (rewardPoolsBuilder_ == null) {
        rewardPoolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.injective.ocr.v1beta1.RewardPool, com.injective.ocr.v1beta1.RewardPool.Builder, com.injective.ocr.v1beta1.RewardPoolOrBuilder>(
                rewardPools_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        rewardPools_ = null;
      }
      return rewardPoolsBuilder_;
    }

    private java.util.List<com.injective.ocr.v1beta1.FeedCounts> feedObservationCounts_ =
      java.util.Collections.emptyList();
    private void ensureFeedObservationCountsIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        feedObservationCounts_ = new java.util.ArrayList<com.injective.ocr.v1beta1.FeedCounts>(feedObservationCounts_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.FeedCounts, com.injective.ocr.v1beta1.FeedCounts.Builder, com.injective.ocr.v1beta1.FeedCountsOrBuilder> feedObservationCountsBuilder_;

    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.FeedCounts> getFeedObservationCountsList() {
      if (feedObservationCountsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(feedObservationCounts_);
      } else {
        return feedObservationCountsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public int getFeedObservationCountsCount() {
      if (feedObservationCountsBuilder_ == null) {
        return feedObservationCounts_.size();
      } else {
        return feedObservationCountsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public com.injective.ocr.v1beta1.FeedCounts getFeedObservationCounts(int index) {
      if (feedObservationCountsBuilder_ == null) {
        return feedObservationCounts_.get(index);
      } else {
        return feedObservationCountsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public Builder setFeedObservationCounts(
        int index, com.injective.ocr.v1beta1.FeedCounts value) {
      if (feedObservationCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedObservationCountsIsMutable();
        feedObservationCounts_.set(index, value);
        onChanged();
      } else {
        feedObservationCountsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public Builder setFeedObservationCounts(
        int index, com.injective.ocr.v1beta1.FeedCounts.Builder builderForValue) {
      if (feedObservationCountsBuilder_ == null) {
        ensureFeedObservationCountsIsMutable();
        feedObservationCounts_.set(index, builderForValue.build());
        onChanged();
      } else {
        feedObservationCountsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public Builder addFeedObservationCounts(com.injective.ocr.v1beta1.FeedCounts value) {
      if (feedObservationCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedObservationCountsIsMutable();
        feedObservationCounts_.add(value);
        onChanged();
      } else {
        feedObservationCountsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public Builder addFeedObservationCounts(
        int index, com.injective.ocr.v1beta1.FeedCounts value) {
      if (feedObservationCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedObservationCountsIsMutable();
        feedObservationCounts_.add(index, value);
        onChanged();
      } else {
        feedObservationCountsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public Builder addFeedObservationCounts(
        com.injective.ocr.v1beta1.FeedCounts.Builder builderForValue) {
      if (feedObservationCountsBuilder_ == null) {
        ensureFeedObservationCountsIsMutable();
        feedObservationCounts_.add(builderForValue.build());
        onChanged();
      } else {
        feedObservationCountsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public Builder addFeedObservationCounts(
        int index, com.injective.ocr.v1beta1.FeedCounts.Builder builderForValue) {
      if (feedObservationCountsBuilder_ == null) {
        ensureFeedObservationCountsIsMutable();
        feedObservationCounts_.add(index, builderForValue.build());
        onChanged();
      } else {
        feedObservationCountsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public Builder addAllFeedObservationCounts(
        java.lang.Iterable<? extends com.injective.ocr.v1beta1.FeedCounts> values) {
      if (feedObservationCountsBuilder_ == null) {
        ensureFeedObservationCountsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, feedObservationCounts_);
        onChanged();
      } else {
        feedObservationCountsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public Builder clearFeedObservationCounts() {
      if (feedObservationCountsBuilder_ == null) {
        feedObservationCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        feedObservationCountsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public Builder removeFeedObservationCounts(int index) {
      if (feedObservationCountsBuilder_ == null) {
        ensureFeedObservationCountsIsMutable();
        feedObservationCounts_.remove(index);
        onChanged();
      } else {
        feedObservationCountsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public com.injective.ocr.v1beta1.FeedCounts.Builder getFeedObservationCountsBuilder(
        int index) {
      return getFeedObservationCountsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public com.injective.ocr.v1beta1.FeedCountsOrBuilder getFeedObservationCountsOrBuilder(
        int index) {
      if (feedObservationCountsBuilder_ == null) {
        return feedObservationCounts_.get(index);  } else {
        return feedObservationCountsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public java.util.List<? extends com.injective.ocr.v1beta1.FeedCountsOrBuilder> 
         getFeedObservationCountsOrBuilderList() {
      if (feedObservationCountsBuilder_ != null) {
        return feedObservationCountsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(feedObservationCounts_);
      }
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public com.injective.ocr.v1beta1.FeedCounts.Builder addFeedObservationCountsBuilder() {
      return getFeedObservationCountsFieldBuilder().addBuilder(
          com.injective.ocr.v1beta1.FeedCounts.getDefaultInstance());
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public com.injective.ocr.v1beta1.FeedCounts.Builder addFeedObservationCountsBuilder(
        int index) {
      return getFeedObservationCountsFieldBuilder().addBuilder(
          index, com.injective.ocr.v1beta1.FeedCounts.getDefaultInstance());
    }
    /**
     * <pre>
     * feed_observation_counts stores the feed observation counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_observation_counts = 7 [json_name = "feedObservationCounts"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.FeedCounts.Builder> 
         getFeedObservationCountsBuilderList() {
      return getFeedObservationCountsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.FeedCounts, com.injective.ocr.v1beta1.FeedCounts.Builder, com.injective.ocr.v1beta1.FeedCountsOrBuilder> 
        getFeedObservationCountsFieldBuilder() {
      if (feedObservationCountsBuilder_ == null) {
        feedObservationCountsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.injective.ocr.v1beta1.FeedCounts, com.injective.ocr.v1beta1.FeedCounts.Builder, com.injective.ocr.v1beta1.FeedCountsOrBuilder>(
                feedObservationCounts_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        feedObservationCounts_ = null;
      }
      return feedObservationCountsBuilder_;
    }

    private java.util.List<com.injective.ocr.v1beta1.FeedCounts> feedTransmissionCounts_ =
      java.util.Collections.emptyList();
    private void ensureFeedTransmissionCountsIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        feedTransmissionCounts_ = new java.util.ArrayList<com.injective.ocr.v1beta1.FeedCounts>(feedTransmissionCounts_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.FeedCounts, com.injective.ocr.v1beta1.FeedCounts.Builder, com.injective.ocr.v1beta1.FeedCountsOrBuilder> feedTransmissionCountsBuilder_;

    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.FeedCounts> getFeedTransmissionCountsList() {
      if (feedTransmissionCountsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(feedTransmissionCounts_);
      } else {
        return feedTransmissionCountsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public int getFeedTransmissionCountsCount() {
      if (feedTransmissionCountsBuilder_ == null) {
        return feedTransmissionCounts_.size();
      } else {
        return feedTransmissionCountsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public com.injective.ocr.v1beta1.FeedCounts getFeedTransmissionCounts(int index) {
      if (feedTransmissionCountsBuilder_ == null) {
        return feedTransmissionCounts_.get(index);
      } else {
        return feedTransmissionCountsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public Builder setFeedTransmissionCounts(
        int index, com.injective.ocr.v1beta1.FeedCounts value) {
      if (feedTransmissionCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedTransmissionCountsIsMutable();
        feedTransmissionCounts_.set(index, value);
        onChanged();
      } else {
        feedTransmissionCountsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public Builder setFeedTransmissionCounts(
        int index, com.injective.ocr.v1beta1.FeedCounts.Builder builderForValue) {
      if (feedTransmissionCountsBuilder_ == null) {
        ensureFeedTransmissionCountsIsMutable();
        feedTransmissionCounts_.set(index, builderForValue.build());
        onChanged();
      } else {
        feedTransmissionCountsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public Builder addFeedTransmissionCounts(com.injective.ocr.v1beta1.FeedCounts value) {
      if (feedTransmissionCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedTransmissionCountsIsMutable();
        feedTransmissionCounts_.add(value);
        onChanged();
      } else {
        feedTransmissionCountsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public Builder addFeedTransmissionCounts(
        int index, com.injective.ocr.v1beta1.FeedCounts value) {
      if (feedTransmissionCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedTransmissionCountsIsMutable();
        feedTransmissionCounts_.add(index, value);
        onChanged();
      } else {
        feedTransmissionCountsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public Builder addFeedTransmissionCounts(
        com.injective.ocr.v1beta1.FeedCounts.Builder builderForValue) {
      if (feedTransmissionCountsBuilder_ == null) {
        ensureFeedTransmissionCountsIsMutable();
        feedTransmissionCounts_.add(builderForValue.build());
        onChanged();
      } else {
        feedTransmissionCountsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public Builder addFeedTransmissionCounts(
        int index, com.injective.ocr.v1beta1.FeedCounts.Builder builderForValue) {
      if (feedTransmissionCountsBuilder_ == null) {
        ensureFeedTransmissionCountsIsMutable();
        feedTransmissionCounts_.add(index, builderForValue.build());
        onChanged();
      } else {
        feedTransmissionCountsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public Builder addAllFeedTransmissionCounts(
        java.lang.Iterable<? extends com.injective.ocr.v1beta1.FeedCounts> values) {
      if (feedTransmissionCountsBuilder_ == null) {
        ensureFeedTransmissionCountsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, feedTransmissionCounts_);
        onChanged();
      } else {
        feedTransmissionCountsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public Builder clearFeedTransmissionCounts() {
      if (feedTransmissionCountsBuilder_ == null) {
        feedTransmissionCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        feedTransmissionCountsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public Builder removeFeedTransmissionCounts(int index) {
      if (feedTransmissionCountsBuilder_ == null) {
        ensureFeedTransmissionCountsIsMutable();
        feedTransmissionCounts_.remove(index);
        onChanged();
      } else {
        feedTransmissionCountsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public com.injective.ocr.v1beta1.FeedCounts.Builder getFeedTransmissionCountsBuilder(
        int index) {
      return getFeedTransmissionCountsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public com.injective.ocr.v1beta1.FeedCountsOrBuilder getFeedTransmissionCountsOrBuilder(
        int index) {
      if (feedTransmissionCountsBuilder_ == null) {
        return feedTransmissionCounts_.get(index);  } else {
        return feedTransmissionCountsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public java.util.List<? extends com.injective.ocr.v1beta1.FeedCountsOrBuilder> 
         getFeedTransmissionCountsOrBuilderList() {
      if (feedTransmissionCountsBuilder_ != null) {
        return feedTransmissionCountsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(feedTransmissionCounts_);
      }
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public com.injective.ocr.v1beta1.FeedCounts.Builder addFeedTransmissionCountsBuilder() {
      return getFeedTransmissionCountsFieldBuilder().addBuilder(
          com.injective.ocr.v1beta1.FeedCounts.getDefaultInstance());
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public com.injective.ocr.v1beta1.FeedCounts.Builder addFeedTransmissionCountsBuilder(
        int index) {
      return getFeedTransmissionCountsFieldBuilder().addBuilder(
          index, com.injective.ocr.v1beta1.FeedCounts.getDefaultInstance());
    }
    /**
     * <pre>
     * feed_transmission_counts stores the feed transmission counts
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.FeedCounts feed_transmission_counts = 8 [json_name = "feedTransmissionCounts"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.FeedCounts.Builder> 
         getFeedTransmissionCountsBuilderList() {
      return getFeedTransmissionCountsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.FeedCounts, com.injective.ocr.v1beta1.FeedCounts.Builder, com.injective.ocr.v1beta1.FeedCountsOrBuilder> 
        getFeedTransmissionCountsFieldBuilder() {
      if (feedTransmissionCountsBuilder_ == null) {
        feedTransmissionCountsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.injective.ocr.v1beta1.FeedCounts, com.injective.ocr.v1beta1.FeedCounts.Builder, com.injective.ocr.v1beta1.FeedCountsOrBuilder>(
                feedTransmissionCounts_,
                ((bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        feedTransmissionCounts_ = null;
      }
      return feedTransmissionCountsBuilder_;
    }

    private java.util.List<com.injective.ocr.v1beta1.PendingPayeeship> pendingPayeeships_ =
      java.util.Collections.emptyList();
    private void ensurePendingPayeeshipsIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        pendingPayeeships_ = new java.util.ArrayList<com.injective.ocr.v1beta1.PendingPayeeship>(pendingPayeeships_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.PendingPayeeship, com.injective.ocr.v1beta1.PendingPayeeship.Builder, com.injective.ocr.v1beta1.PendingPayeeshipOrBuilder> pendingPayeeshipsBuilder_;

    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.PendingPayeeship> getPendingPayeeshipsList() {
      if (pendingPayeeshipsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(pendingPayeeships_);
      } else {
        return pendingPayeeshipsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public int getPendingPayeeshipsCount() {
      if (pendingPayeeshipsBuilder_ == null) {
        return pendingPayeeships_.size();
      } else {
        return pendingPayeeshipsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public com.injective.ocr.v1beta1.PendingPayeeship getPendingPayeeships(int index) {
      if (pendingPayeeshipsBuilder_ == null) {
        return pendingPayeeships_.get(index);
      } else {
        return pendingPayeeshipsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public Builder setPendingPayeeships(
        int index, com.injective.ocr.v1beta1.PendingPayeeship value) {
      if (pendingPayeeshipsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePendingPayeeshipsIsMutable();
        pendingPayeeships_.set(index, value);
        onChanged();
      } else {
        pendingPayeeshipsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public Builder setPendingPayeeships(
        int index, com.injective.ocr.v1beta1.PendingPayeeship.Builder builderForValue) {
      if (pendingPayeeshipsBuilder_ == null) {
        ensurePendingPayeeshipsIsMutable();
        pendingPayeeships_.set(index, builderForValue.build());
        onChanged();
      } else {
        pendingPayeeshipsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public Builder addPendingPayeeships(com.injective.ocr.v1beta1.PendingPayeeship value) {
      if (pendingPayeeshipsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePendingPayeeshipsIsMutable();
        pendingPayeeships_.add(value);
        onChanged();
      } else {
        pendingPayeeshipsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public Builder addPendingPayeeships(
        int index, com.injective.ocr.v1beta1.PendingPayeeship value) {
      if (pendingPayeeshipsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePendingPayeeshipsIsMutable();
        pendingPayeeships_.add(index, value);
        onChanged();
      } else {
        pendingPayeeshipsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public Builder addPendingPayeeships(
        com.injective.ocr.v1beta1.PendingPayeeship.Builder builderForValue) {
      if (pendingPayeeshipsBuilder_ == null) {
        ensurePendingPayeeshipsIsMutable();
        pendingPayeeships_.add(builderForValue.build());
        onChanged();
      } else {
        pendingPayeeshipsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public Builder addPendingPayeeships(
        int index, com.injective.ocr.v1beta1.PendingPayeeship.Builder builderForValue) {
      if (pendingPayeeshipsBuilder_ == null) {
        ensurePendingPayeeshipsIsMutable();
        pendingPayeeships_.add(index, builderForValue.build());
        onChanged();
      } else {
        pendingPayeeshipsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public Builder addAllPendingPayeeships(
        java.lang.Iterable<? extends com.injective.ocr.v1beta1.PendingPayeeship> values) {
      if (pendingPayeeshipsBuilder_ == null) {
        ensurePendingPayeeshipsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pendingPayeeships_);
        onChanged();
      } else {
        pendingPayeeshipsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public Builder clearPendingPayeeships() {
      if (pendingPayeeshipsBuilder_ == null) {
        pendingPayeeships_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        pendingPayeeshipsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public Builder removePendingPayeeships(int index) {
      if (pendingPayeeshipsBuilder_ == null) {
        ensurePendingPayeeshipsIsMutable();
        pendingPayeeships_.remove(index);
        onChanged();
      } else {
        pendingPayeeshipsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public com.injective.ocr.v1beta1.PendingPayeeship.Builder getPendingPayeeshipsBuilder(
        int index) {
      return getPendingPayeeshipsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public com.injective.ocr.v1beta1.PendingPayeeshipOrBuilder getPendingPayeeshipsOrBuilder(
        int index) {
      if (pendingPayeeshipsBuilder_ == null) {
        return pendingPayeeships_.get(index);  } else {
        return pendingPayeeshipsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public java.util.List<? extends com.injective.ocr.v1beta1.PendingPayeeshipOrBuilder> 
         getPendingPayeeshipsOrBuilderList() {
      if (pendingPayeeshipsBuilder_ != null) {
        return pendingPayeeshipsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(pendingPayeeships_);
      }
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public com.injective.ocr.v1beta1.PendingPayeeship.Builder addPendingPayeeshipsBuilder() {
      return getPendingPayeeshipsFieldBuilder().addBuilder(
          com.injective.ocr.v1beta1.PendingPayeeship.getDefaultInstance());
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public com.injective.ocr.v1beta1.PendingPayeeship.Builder addPendingPayeeshipsBuilder(
        int index) {
      return getPendingPayeeshipsFieldBuilder().addBuilder(
          index, com.injective.ocr.v1beta1.PendingPayeeship.getDefaultInstance());
    }
    /**
     * <pre>
     * pending_payeeships stores the pending payeeships
     * </pre>
     *
     * <code>repeated .injective.ocr.v1beta1.PendingPayeeship pending_payeeships = 9 [json_name = "pendingPayeeships"];</code>
     */
    public java.util.List<com.injective.ocr.v1beta1.PendingPayeeship.Builder> 
         getPendingPayeeshipsBuilderList() {
      return getPendingPayeeshipsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.injective.ocr.v1beta1.PendingPayeeship, com.injective.ocr.v1beta1.PendingPayeeship.Builder, com.injective.ocr.v1beta1.PendingPayeeshipOrBuilder> 
        getPendingPayeeshipsFieldBuilder() {
      if (pendingPayeeshipsBuilder_ == null) {
        pendingPayeeshipsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.injective.ocr.v1beta1.PendingPayeeship, com.injective.ocr.v1beta1.PendingPayeeship.Builder, com.injective.ocr.v1beta1.PendingPayeeshipOrBuilder>(
                pendingPayeeships_,
                ((bitField0_ & 0x00000100) != 0),
                getParentForChildren(),
                isClean());
        pendingPayeeships_ = null;
      }
      return pendingPayeeshipsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:injective.ocr.v1beta1.GenesisState)
  }

  // @@protoc_insertion_point(class_scope:injective.ocr.v1beta1.GenesisState)
  private static final com.injective.ocr.v1beta1.GenesisState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.injective.ocr.v1beta1.GenesisState();
  }

  public static com.injective.ocr.v1beta1.GenesisState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GenesisState>
      PARSER = new com.google.protobuf.AbstractParser<GenesisState>() {
    @java.lang.Override
    public GenesisState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GenesisState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GenesisState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.injective.ocr.v1beta1.GenesisState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/ocr/v1beta1/ocr.proto

package com.injective.ocr.v1beta1;

public interface EventConfigSetOrBuilder extends
    // @@protoc_insertion_point(interface_extends:injective.ocr.v1beta1.EventConfigSet)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * hash of the config
   * </pre>
   *
   * <code>bytes config_digest = 1 [json_name = "configDigest"];</code>
   * @return The configDigest.
   */
  com.google.protobuf.ByteString getConfigDigest();

  /**
   * <pre>
   * previous_config_block_number block in which the previous config was set, to
   * simplify historic analysis
   * </pre>
   *
   * <code>int64 previous_config_block_number = 2 [json_name = "previousConfigBlockNumber"];</code>
   * @return The previousConfigBlockNumber.
   */
  long getPreviousConfigBlockNumber();

  /**
   * <code>.injective.ocr.v1beta1.FeedConfig config = 3 [json_name = "config"];</code>
   * @return Whether the config field is set.
   */
  boolean hasConfig();
  /**
   * <code>.injective.ocr.v1beta1.FeedConfig config = 3 [json_name = "config"];</code>
   * @return The config.
   */
  com.injective.ocr.v1beta1.FeedConfig getConfig();
  /**
   * <code>.injective.ocr.v1beta1.FeedConfig config = 3 [json_name = "config"];</code>
   */
  com.injective.ocr.v1beta1.FeedConfigOrBuilder getConfigOrBuilder();

  /**
   * <code>.injective.ocr.v1beta1.FeedConfigInfo config_info = 4 [json_name = "configInfo"];</code>
   * @return Whether the configInfo field is set.
   */
  boolean hasConfigInfo();
  /**
   * <code>.injective.ocr.v1beta1.FeedConfigInfo config_info = 4 [json_name = "configInfo"];</code>
   * @return The configInfo.
   */
  com.injective.ocr.v1beta1.FeedConfigInfo getConfigInfo();
  /**
   * <code>.injective.ocr.v1beta1.FeedConfigInfo config_info = 4 [json_name = "configInfo"];</code>
   */
  com.injective.ocr.v1beta1.FeedConfigInfoOrBuilder getConfigInfoOrBuilder();
}

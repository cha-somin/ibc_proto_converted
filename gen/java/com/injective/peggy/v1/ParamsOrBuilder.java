// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/peggy/v1/params.proto

package com.injective.peggy.v1;

public interface ParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:injective.peggy.v1.Params)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string peggy_id = 1 [json_name = "peggyId"];</code>
   * @return The peggyId.
   */
  java.lang.String getPeggyId();
  /**
   * <code>string peggy_id = 1 [json_name = "peggyId"];</code>
   * @return The bytes for peggyId.
   */
  com.google.protobuf.ByteString
      getPeggyIdBytes();

  /**
   * <code>string contract_source_hash = 2 [json_name = "contractSourceHash"];</code>
   * @return The contractSourceHash.
   */
  java.lang.String getContractSourceHash();
  /**
   * <code>string contract_source_hash = 2 [json_name = "contractSourceHash"];</code>
   * @return The bytes for contractSourceHash.
   */
  com.google.protobuf.ByteString
      getContractSourceHashBytes();

  /**
   * <code>string bridge_ethereum_address = 3 [json_name = "bridgeEthereumAddress"];</code>
   * @return The bridgeEthereumAddress.
   */
  java.lang.String getBridgeEthereumAddress();
  /**
   * <code>string bridge_ethereum_address = 3 [json_name = "bridgeEthereumAddress"];</code>
   * @return The bytes for bridgeEthereumAddress.
   */
  com.google.protobuf.ByteString
      getBridgeEthereumAddressBytes();

  /**
   * <code>uint64 bridge_chain_id = 4 [json_name = "bridgeChainId"];</code>
   * @return The bridgeChainId.
   */
  long getBridgeChainId();

  /**
   * <code>uint64 signed_valsets_window = 5 [json_name = "signedValsetsWindow"];</code>
   * @return The signedValsetsWindow.
   */
  long getSignedValsetsWindow();

  /**
   * <code>uint64 signed_batches_window = 6 [json_name = "signedBatchesWindow"];</code>
   * @return The signedBatchesWindow.
   */
  long getSignedBatchesWindow();

  /**
   * <code>uint64 signed_claims_window = 7 [json_name = "signedClaimsWindow"];</code>
   * @return The signedClaimsWindow.
   */
  long getSignedClaimsWindow();

  /**
   * <code>uint64 target_batch_timeout = 8 [json_name = "targetBatchTimeout"];</code>
   * @return The targetBatchTimeout.
   */
  long getTargetBatchTimeout();

  /**
   * <code>uint64 average_block_time = 9 [json_name = "averageBlockTime"];</code>
   * @return The averageBlockTime.
   */
  long getAverageBlockTime();

  /**
   * <code>uint64 average_ethereum_block_time = 10 [json_name = "averageEthereumBlockTime"];</code>
   * @return The averageEthereumBlockTime.
   */
  long getAverageEthereumBlockTime();

  /**
   * <code>bytes slash_fraction_valset = 11 [json_name = "slashFractionValset", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The slashFractionValset.
   */
  com.google.protobuf.ByteString getSlashFractionValset();

  /**
   * <code>bytes slash_fraction_batch = 12 [json_name = "slashFractionBatch", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The slashFractionBatch.
   */
  com.google.protobuf.ByteString getSlashFractionBatch();

  /**
   * <code>bytes slash_fraction_claim = 13 [json_name = "slashFractionClaim", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The slashFractionClaim.
   */
  com.google.protobuf.ByteString getSlashFractionClaim();

  /**
   * <code>bytes slash_fraction_conflicting_claim = 14 [json_name = "slashFractionConflictingClaim", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The slashFractionConflictingClaim.
   */
  com.google.protobuf.ByteString getSlashFractionConflictingClaim();

  /**
   * <code>uint64 unbond_slashing_valsets_window = 15 [json_name = "unbondSlashingValsetsWindow"];</code>
   * @return The unbondSlashingValsetsWindow.
   */
  long getUnbondSlashingValsetsWindow();

  /**
   * <code>bytes slash_fraction_bad_eth_signature = 16 [json_name = "slashFractionBadEthSignature", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The slashFractionBadEthSignature.
   */
  com.google.protobuf.ByteString getSlashFractionBadEthSignature();

  /**
   * <code>string cosmos_coin_denom = 17 [json_name = "cosmosCoinDenom"];</code>
   * @return The cosmosCoinDenom.
   */
  java.lang.String getCosmosCoinDenom();
  /**
   * <code>string cosmos_coin_denom = 17 [json_name = "cosmosCoinDenom"];</code>
   * @return The bytes for cosmosCoinDenom.
   */
  com.google.protobuf.ByteString
      getCosmosCoinDenomBytes();

  /**
   * <code>string cosmos_coin_erc20_contract = 18 [json_name = "cosmosCoinErc20Contract"];</code>
   * @return The cosmosCoinErc20Contract.
   */
  java.lang.String getCosmosCoinErc20Contract();
  /**
   * <code>string cosmos_coin_erc20_contract = 18 [json_name = "cosmosCoinErc20Contract"];</code>
   * @return The bytes for cosmosCoinErc20Contract.
   */
  com.google.protobuf.ByteString
      getCosmosCoinErc20ContractBytes();

  /**
   * <code>bool claim_slashing_enabled = 19 [json_name = "claimSlashingEnabled"];</code>
   * @return The claimSlashingEnabled.
   */
  boolean getClaimSlashingEnabled();

  /**
   * <code>uint64 bridge_contract_start_height = 20 [json_name = "bridgeContractStartHeight"];</code>
   * @return The bridgeContractStartHeight.
   */
  long getBridgeContractStartHeight();

  /**
   * <code>.cosmos.base.v1beta1.Coin valset_reward = 21 [json_name = "valsetReward", (.gogoproto.nullable) = false];</code>
   * @return Whether the valsetReward field is set.
   */
  boolean hasValsetReward();
  /**
   * <code>.cosmos.base.v1beta1.Coin valset_reward = 21 [json_name = "valsetReward", (.gogoproto.nullable) = false];</code>
   * @return The valsetReward.
   */
  com.cosmos.base.v1beta1.Coin getValsetReward();
  /**
   * <code>.cosmos.base.v1beta1.Coin valset_reward = 21 [json_name = "valsetReward", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getValsetRewardOrBuilder();
}

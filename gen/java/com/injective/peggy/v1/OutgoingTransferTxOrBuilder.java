// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/peggy/v1/batch.proto

package com.injective.peggy.v1;

public interface OutgoingTransferTxOrBuilder extends
    // @@protoc_insertion_point(interface_extends:injective.peggy.v1.OutgoingTransferTx)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>uint64 id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  long getId();

  /**
   * <code>string sender = 2 [json_name = "sender"];</code>
   * @return The sender.
   */
  java.lang.String getSender();
  /**
   * <code>string sender = 2 [json_name = "sender"];</code>
   * @return The bytes for sender.
   */
  com.google.protobuf.ByteString
      getSenderBytes();

  /**
   * <code>string dest_address = 3 [json_name = "destAddress"];</code>
   * @return The destAddress.
   */
  java.lang.String getDestAddress();
  /**
   * <code>string dest_address = 3 [json_name = "destAddress"];</code>
   * @return The bytes for destAddress.
   */
  com.google.protobuf.ByteString
      getDestAddressBytes();

  /**
   * <code>.injective.peggy.v1.ERC20Token erc20_token = 4 [json_name = "erc20Token"];</code>
   * @return Whether the erc20Token field is set.
   */
  boolean hasErc20Token();
  /**
   * <code>.injective.peggy.v1.ERC20Token erc20_token = 4 [json_name = "erc20Token"];</code>
   * @return The erc20Token.
   */
  com.injective.peggy.v1.ERC20Token getErc20Token();
  /**
   * <code>.injective.peggy.v1.ERC20Token erc20_token = 4 [json_name = "erc20Token"];</code>
   */
  com.injective.peggy.v1.ERC20TokenOrBuilder getErc20TokenOrBuilder();

  /**
   * <code>.injective.peggy.v1.ERC20Token erc20_fee = 5 [json_name = "erc20Fee"];</code>
   * @return Whether the erc20Fee field is set.
   */
  boolean hasErc20Fee();
  /**
   * <code>.injective.peggy.v1.ERC20Token erc20_fee = 5 [json_name = "erc20Fee"];</code>
   * @return The erc20Fee.
   */
  com.injective.peggy.v1.ERC20Token getErc20Fee();
  /**
   * <code>.injective.peggy.v1.ERC20Token erc20_fee = 5 [json_name = "erc20Fee"];</code>
   */
  com.injective.peggy.v1.ERC20TokenOrBuilder getErc20FeeOrBuilder();
}

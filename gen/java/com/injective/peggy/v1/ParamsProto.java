// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/peggy/v1/params.proto

package com.injective.peggy.v1;

public final class ParamsProto {
  private ParamsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_peggy_v1_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_peggy_v1_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037injective/peggy/v1/params.proto\022\022injec" +
      "tive.peggy.v1\032\024gogoproto/gogo.proto\032\036cos" +
      "mos/base/v1beta1/coin.proto\"\370\n\n\006Params\022\031" +
      "\n\010peggy_id\030\001 \001(\tR\007peggyId\0220\n\024contract_so" +
      "urce_hash\030\002 \001(\tR\022contractSourceHash\0226\n\027b" +
      "ridge_ethereum_address\030\003 \001(\tR\025bridgeEthe" +
      "reumAddress\022&\n\017bridge_chain_id\030\004 \001(\004R\rbr" +
      "idgeChainId\0222\n\025signed_valsets_window\030\005 \001" +
      "(\004R\023signedValsetsWindow\0222\n\025signed_batche" +
      "s_window\030\006 \001(\004R\023signedBatchesWindow\0220\n\024s" +
      "igned_claims_window\030\007 \001(\004R\022signedClaimsW" +
      "indow\0220\n\024target_batch_timeout\030\010 \001(\004R\022tar" +
      "getBatchTimeout\022,\n\022average_block_time\030\t " +
      "\001(\004R\020averageBlockTime\022=\n\033average_ethereu" +
      "m_block_time\030\n \001(\004R\030averageEthereumBlock" +
      "Time\022b\n\025slash_fraction_valset\030\013 \001(\014B.\310\336\037" +
      "\000\332\336\037&github.com/cosmos/cosmos-sdk/types." +
      "DecR\023slashFractionValset\022`\n\024slash_fracti" +
      "on_batch\030\014 \001(\014B.\310\336\037\000\332\336\037&github.com/cosmo" +
      "s/cosmos-sdk/types.DecR\022slashFractionBat" +
      "ch\022`\n\024slash_fraction_claim\030\r \001(\014B.\310\336\037\000\332\336" +
      "\037&github.com/cosmos/cosmos-sdk/types.Dec" +
      "R\022slashFractionClaim\022w\n slash_fraction_c" +
      "onflicting_claim\030\016 \001(\014B.\310\336\037\000\332\336\037&github.c" +
      "om/cosmos/cosmos-sdk/types.DecR\035slashFra" +
      "ctionConflictingClaim\022C\n\036unbond_slashing" +
      "_valsets_window\030\017 \001(\004R\033unbondSlashingVal" +
      "setsWindow\022v\n slash_fraction_bad_eth_sig" +
      "nature\030\020 \001(\014B.\310\336\037\000\332\336\037&github.com/cosmos/" +
      "cosmos-sdk/types.DecR\034slashFractionBadEt" +
      "hSignature\022*\n\021cosmos_coin_denom\030\021 \001(\tR\017c" +
      "osmosCoinDenom\022;\n\032cosmos_coin_erc20_cont" +
      "ract\030\022 \001(\tR\027cosmosCoinErc20Contract\0224\n\026c" +
      "laim_slashing_enabled\030\023 \001(\010R\024claimSlashi" +
      "ngEnabled\022?\n\034bridge_contract_start_heigh" +
      "t\030\024 \001(\004R\031bridgeContractStartHeight\022D\n\rva" +
      "lset_reward\030\025 \001(\0132\031.cosmos.base.v1beta1." +
      "CoinB\004\310\336\037\000R\014valsetReward:\004\200\334 \000B\334\001\n\026com.i" +
      "njective.peggy.v1B\013ParamsProtoP\001ZKgithub" +
      ".com/InjectiveLabs/injective-core/inject" +
      "ive-chain/modules/peggy/types\242\002\003IPX\252\002\022In" +
      "jective.Peggy.V1\312\002\022Injective\\Peggy\\V1\342\002\036" +
      "Injective\\Peggy\\V1\\GPBMetadata\352\002\024Injecti" +
      "ve::Peggy::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
        });
    internal_static_injective_peggy_v1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_injective_peggy_v1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_peggy_v1_Params_descriptor,
        new java.lang.String[] { "PeggyId", "ContractSourceHash", "BridgeEthereumAddress", "BridgeChainId", "SignedValsetsWindow", "SignedBatchesWindow", "SignedClaimsWindow", "TargetBatchTimeout", "AverageBlockTime", "AverageEthereumBlockTime", "SlashFractionValset", "SlashFractionBatch", "SlashFractionClaim", "SlashFractionConflictingClaim", "UnbondSlashingValsetsWindow", "SlashFractionBadEthSignature", "CosmosCoinDenom", "CosmosCoinErc20Contract", "ClaimSlashingEnabled", "BridgeContractStartHeight", "ValsetReward", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stringer);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/peggy/v1/events.proto

package com.injective.peggy.v1;

public interface EventAttestationObservedOrBuilder extends
    // @@protoc_insertion_point(interface_extends:injective.peggy.v1.EventAttestationObserved)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.injective.peggy.v1.ClaimType attestation_type = 1 [json_name = "attestationType"];</code>
   * @return The enum numeric value on the wire for attestationType.
   */
  int getAttestationTypeValue();
  /**
   * <code>.injective.peggy.v1.ClaimType attestation_type = 1 [json_name = "attestationType"];</code>
   * @return The attestationType.
   */
  com.injective.peggy.v1.ClaimType getAttestationType();

  /**
   * <code>string bridge_contract = 2 [json_name = "bridgeContract"];</code>
   * @return The bridgeContract.
   */
  java.lang.String getBridgeContract();
  /**
   * <code>string bridge_contract = 2 [json_name = "bridgeContract"];</code>
   * @return The bytes for bridgeContract.
   */
  com.google.protobuf.ByteString
      getBridgeContractBytes();

  /**
   * <code>uint64 bridge_chain_id = 3 [json_name = "bridgeChainId"];</code>
   * @return The bridgeChainId.
   */
  long getBridgeChainId();

  /**
   * <code>bytes attestation_id = 4 [json_name = "attestationId"];</code>
   * @return The attestationId.
   */
  com.google.protobuf.ByteString getAttestationId();

  /**
   * <code>uint64 nonce = 5 [json_name = "nonce"];</code>
   * @return The nonce.
   */
  long getNonce();
}

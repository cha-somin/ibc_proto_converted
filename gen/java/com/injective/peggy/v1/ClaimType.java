// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/peggy/v1/attestation.proto

package com.injective.peggy.v1;

/**
 * <pre>
 * ClaimType is the cosmos type of an event from the counterpart chain that can
 * be handled
 * </pre>
 *
 * Protobuf enum {@code injective.peggy.v1.ClaimType}
 */
public enum ClaimType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>CLAIM_TYPE_UNKNOWN = 0 [(.gogoproto.enumvalue_customname) = "CLAIM_TYPE_UNKNOWN"];</code>
   */
  CLAIM_TYPE_UNKNOWN(0),
  /**
   * <code>CLAIM_TYPE_DEPOSIT = 1 [(.gogoproto.enumvalue_customname) = "CLAIM_TYPE_DEPOSIT"];</code>
   */
  CLAIM_TYPE_DEPOSIT(1),
  /**
   * <code>CLAIM_TYPE_WITHDRAW = 2 [(.gogoproto.enumvalue_customname) = "CLAIM_TYPE_WITHDRAW"];</code>
   */
  CLAIM_TYPE_WITHDRAW(2),
  /**
   * <code>CLAIM_TYPE_ERC20_DEPLOYED = 3 [(.gogoproto.enumvalue_customname) = "CLAIM_TYPE_ERC20_DEPLOYED"];</code>
   */
  CLAIM_TYPE_ERC20_DEPLOYED(3),
  /**
   * <code>CLAIM_TYPE_VALSET_UPDATED = 4 [(.gogoproto.enumvalue_customname) = "CLAIM_TYPE_VALSET_UPDATED"];</code>
   */
  CLAIM_TYPE_VALSET_UPDATED(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CLAIM_TYPE_UNKNOWN = 0 [(.gogoproto.enumvalue_customname) = "CLAIM_TYPE_UNKNOWN"];</code>
   */
  public static final int CLAIM_TYPE_UNKNOWN_VALUE = 0;
  /**
   * <code>CLAIM_TYPE_DEPOSIT = 1 [(.gogoproto.enumvalue_customname) = "CLAIM_TYPE_DEPOSIT"];</code>
   */
  public static final int CLAIM_TYPE_DEPOSIT_VALUE = 1;
  /**
   * <code>CLAIM_TYPE_WITHDRAW = 2 [(.gogoproto.enumvalue_customname) = "CLAIM_TYPE_WITHDRAW"];</code>
   */
  public static final int CLAIM_TYPE_WITHDRAW_VALUE = 2;
  /**
   * <code>CLAIM_TYPE_ERC20_DEPLOYED = 3 [(.gogoproto.enumvalue_customname) = "CLAIM_TYPE_ERC20_DEPLOYED"];</code>
   */
  public static final int CLAIM_TYPE_ERC20_DEPLOYED_VALUE = 3;
  /**
   * <code>CLAIM_TYPE_VALSET_UPDATED = 4 [(.gogoproto.enumvalue_customname) = "CLAIM_TYPE_VALSET_UPDATED"];</code>
   */
  public static final int CLAIM_TYPE_VALSET_UPDATED_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ClaimType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ClaimType forNumber(int value) {
    switch (value) {
      case 0: return CLAIM_TYPE_UNKNOWN;
      case 1: return CLAIM_TYPE_DEPOSIT;
      case 2: return CLAIM_TYPE_WITHDRAW;
      case 3: return CLAIM_TYPE_ERC20_DEPLOYED;
      case 4: return CLAIM_TYPE_VALSET_UPDATED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ClaimType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ClaimType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ClaimType>() {
          public ClaimType findValueByNumber(int number) {
            return ClaimType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.injective.peggy.v1.AttestationProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final ClaimType[] VALUES = values();

  public static ClaimType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ClaimType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:injective.peggy.v1.ClaimType)
}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/oracle/v1beta1/oracle.proto

package com.injective.oracle.v1beta1;

public interface MetadataStatisticsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:injective.oracle.v1beta1.MetadataStatistics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * GroupCount refers to the number of groups used. Equals RecordsSampleSize if
   * no grouping is used
   * </pre>
   *
   * <code>uint32 group_count = 1 [json_name = "groupCount"];</code>
   * @return The groupCount.
   */
  int getGroupCount();

  /**
   * <pre>
   * RecordsSampleSize refers to the total number of records used.
   * </pre>
   *
   * <code>uint32 records_sample_size = 2 [json_name = "recordsSampleSize"];</code>
   * @return The recordsSampleSize.
   */
  int getRecordsSampleSize();

  /**
   * <pre>
   * Mean refers to the arithmetic mean
   * For trades, the mean is the VWAP computed over the grouped trade records ∑
   * (price * quantity) / ∑ quantity For oracle prices, the mean is computed
   * over the price records ∑ (price) / prices_count
   * </pre>
   *
   * <code>string mean = 3 [json_name = "mean", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The mean.
   */
  java.lang.String getMean();
  /**
   * <pre>
   * Mean refers to the arithmetic mean
   * For trades, the mean is the VWAP computed over the grouped trade records ∑
   * (price * quantity) / ∑ quantity For oracle prices, the mean is computed
   * over the price records ∑ (price) / prices_count
   * </pre>
   *
   * <code>string mean = 3 [json_name = "mean", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for mean.
   */
  com.google.protobuf.ByteString
      getMeanBytes();

  /**
   * <pre>
   * TWAP refers to the time-weighted average price which equals ∑ (price_i *
   * ∆t_i) / ∑ ∆t_i where ∆t_i = t_i - t_{i-1}
   * </pre>
   *
   * <code>string twap = 4 [json_name = "twap", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The twap.
   */
  java.lang.String getTwap();
  /**
   * <pre>
   * TWAP refers to the time-weighted average price which equals ∑ (price_i *
   * ∆t_i) / ∑ ∆t_i where ∆t_i = t_i - t_{i-1}
   * </pre>
   *
   * <code>string twap = 4 [json_name = "twap", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for twap.
   */
  com.google.protobuf.ByteString
      getTwapBytes();

  /**
   * <pre>
   * FirstTimestamp is the timestamp of the oldest record considered
   * </pre>
   *
   * <code>int64 first_timestamp = 5 [json_name = "firstTimestamp"];</code>
   * @return The firstTimestamp.
   */
  long getFirstTimestamp();

  /**
   * <pre>
   * LastTimestamp is the timestamp of the youngest record considered
   * </pre>
   *
   * <code>int64 last_timestamp = 6 [json_name = "lastTimestamp"];</code>
   * @return The lastTimestamp.
   */
  long getLastTimestamp();

  /**
   * <pre>
   * MinPrice refers to the smallest individual raw price considered
   * </pre>
   *
   * <code>string min_price = 7 [json_name = "minPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The minPrice.
   */
  java.lang.String getMinPrice();
  /**
   * <pre>
   * MinPrice refers to the smallest individual raw price considered
   * </pre>
   *
   * <code>string min_price = 7 [json_name = "minPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for minPrice.
   */
  com.google.protobuf.ByteString
      getMinPriceBytes();

  /**
   * <pre>
   * MaxPrice refers to the largest individual raw price considered
   * </pre>
   *
   * <code>string max_price = 8 [json_name = "maxPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The maxPrice.
   */
  java.lang.String getMaxPrice();
  /**
   * <pre>
   * MaxPrice refers to the largest individual raw price considered
   * </pre>
   *
   * <code>string max_price = 8 [json_name = "maxPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for maxPrice.
   */
  com.google.protobuf.ByteString
      getMaxPriceBytes();

  /**
   * <pre>
   * MedianPrice refers to the median individual raw price considered
   * </pre>
   *
   * <code>string median_price = 9 [json_name = "medianPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The medianPrice.
   */
  java.lang.String getMedianPrice();
  /**
   * <pre>
   * MedianPrice refers to the median individual raw price considered
   * </pre>
   *
   * <code>string median_price = 9 [json_name = "medianPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for medianPrice.
   */
  com.google.protobuf.ByteString
      getMedianPriceBytes();
}

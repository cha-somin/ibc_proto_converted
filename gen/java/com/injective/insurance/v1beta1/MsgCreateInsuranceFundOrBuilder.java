// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/insurance/v1beta1/tx.proto

package com.injective.insurance.v1beta1;

public interface MsgCreateInsuranceFundOrBuilder extends
    // @@protoc_insertion_point(interface_extends:injective.insurance.v1beta1.MsgCreateInsuranceFund)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Creator of the insurance fund.
   * </pre>
   *
   * <code>string sender = 1 [json_name = "sender"];</code>
   * @return The sender.
   */
  java.lang.String getSender();
  /**
   * <pre>
   * Creator of the insurance fund.
   * </pre>
   *
   * <code>string sender = 1 [json_name = "sender"];</code>
   * @return The bytes for sender.
   */
  com.google.protobuf.ByteString
      getSenderBytes();

  /**
   * <pre>
   * Ticker for the derivative market.
   * </pre>
   *
   * <code>string ticker = 2 [json_name = "ticker"];</code>
   * @return The ticker.
   */
  java.lang.String getTicker();
  /**
   * <pre>
   * Ticker for the derivative market.
   * </pre>
   *
   * <code>string ticker = 2 [json_name = "ticker"];</code>
   * @return The bytes for ticker.
   */
  com.google.protobuf.ByteString
      getTickerBytes();

  /**
   * <pre>
   * Coin denom to use for the market quote denom
   * </pre>
   *
   * <code>string quote_denom = 3 [json_name = "quoteDenom"];</code>
   * @return The quoteDenom.
   */
  java.lang.String getQuoteDenom();
  /**
   * <pre>
   * Coin denom to use for the market quote denom
   * </pre>
   *
   * <code>string quote_denom = 3 [json_name = "quoteDenom"];</code>
   * @return The bytes for quoteDenom.
   */
  com.google.protobuf.ByteString
      getQuoteDenomBytes();

  /**
   * <pre>
   * Oracle base currency of the derivative market OR the oracle symbol for the
   * binary options market.
   * </pre>
   *
   * <code>string oracle_base = 4 [json_name = "oracleBase"];</code>
   * @return The oracleBase.
   */
  java.lang.String getOracleBase();
  /**
   * <pre>
   * Oracle base currency of the derivative market OR the oracle symbol for the
   * binary options market.
   * </pre>
   *
   * <code>string oracle_base = 4 [json_name = "oracleBase"];</code>
   * @return The bytes for oracleBase.
   */
  com.google.protobuf.ByteString
      getOracleBaseBytes();

  /**
   * <pre>
   * Oracle quote currency of the derivative market OR the oracle provider for
   * the binary options market.
   * </pre>
   *
   * <code>string oracle_quote = 5 [json_name = "oracleQuote"];</code>
   * @return The oracleQuote.
   */
  java.lang.String getOracleQuote();
  /**
   * <pre>
   * Oracle quote currency of the derivative market OR the oracle provider for
   * the binary options market.
   * </pre>
   *
   * <code>string oracle_quote = 5 [json_name = "oracleQuote"];</code>
   * @return The bytes for oracleQuote.
   */
  com.google.protobuf.ByteString
      getOracleQuoteBytes();

  /**
   * <pre>
   * Oracle type of the binary options or derivative market
   * </pre>
   *
   * <code>.injective.oracle.v1beta1.OracleType oracle_type = 6 [json_name = "oracleType"];</code>
   * @return The enum numeric value on the wire for oracleType.
   */
  int getOracleTypeValue();
  /**
   * <pre>
   * Oracle type of the binary options or derivative market
   * </pre>
   *
   * <code>.injective.oracle.v1beta1.OracleType oracle_type = 6 [json_name = "oracleType"];</code>
   * @return The oracleType.
   */
  com.injective.oracle.v1beta1.OracleType getOracleType();

  /**
   * <pre>
   * Expiration time of the derivative market. Should be -1 for perpetual or -2
   * for binary options markets.
   * </pre>
   *
   * <code>int64 expiry = 7 [json_name = "expiry"];</code>
   * @return The expiry.
   */
  long getExpiry();

  /**
   * <pre>
   * Initial deposit of the insurance fund
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin initial_deposit = 8 [json_name = "initialDeposit", (.gogoproto.nullable) = false];</code>
   * @return Whether the initialDeposit field is set.
   */
  boolean hasInitialDeposit();
  /**
   * <pre>
   * Initial deposit of the insurance fund
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin initial_deposit = 8 [json_name = "initialDeposit", (.gogoproto.nullable) = false];</code>
   * @return The initialDeposit.
   */
  com.cosmos.base.v1beta1.Coin getInitialDeposit();
  /**
   * <pre>
   * Initial deposit of the insurance fund
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin initial_deposit = 8 [json_name = "initialDeposit", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getInitialDepositOrBuilder();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/types/v1beta1/tx_ext.proto

package com.injective.types.v1beta1;

public final class TxExtProto {
  private TxExtProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_types_v1beta1_ExtensionOptionsWeb3Tx_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_types_v1beta1_ExtensionOptionsWeb3Tx_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$injective/types/v1beta1/tx_ext.proto\022\027" +
      "injective.types.v1beta1\032\024gogoproto/gogo." +
      "proto\"\210\001\n\026ExtensionOptionsWeb3Tx\022*\n\020type" +
      "dDataChainID\030\001 \001(\004R\020typedDataChainID\022\032\n\010" +
      "feePayer\030\002 \001(\tR\010feePayer\022 \n\013feePayerSig\030" +
      "\003 \001(\014R\013feePayerSig:\004\210\240\037\000B\346\001\n\033com.injecti" +
      "ve.types.v1beta1B\nTxExtProtoP\001Z=github.c" +
      "om/InjectiveLabs/injective-core/injectiv" +
      "e-chain/types\242\002\003ITX\252\002\027Injective.Types.V1" +
      "beta1\312\002\027Injective\\Types\\V1beta1\342\002#Inject" +
      "ive\\Types\\V1beta1\\GPBMetadata\352\002\031Injectiv" +
      "e::Types::V1beta1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_injective_types_v1beta1_ExtensionOptionsWeb3Tx_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_injective_types_v1beta1_ExtensionOptionsWeb3Tx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_types_v1beta1_ExtensionOptionsWeb3Tx_descriptor,
        new java.lang.String[] { "TypedDataChainID", "FeePayer", "FeePayerSig", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

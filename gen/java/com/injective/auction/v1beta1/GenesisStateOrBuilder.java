// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/auction/v1beta1/genesis.proto

package com.injective.auction.v1beta1;

public interface GenesisStateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:injective.auction.v1beta1.GenesisState)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * params defines all the parameters of related to auction.
   * </pre>
   *
   * <code>.injective.auction.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return Whether the params field is set.
   */
  boolean hasParams();
  /**
   * <pre>
   * params defines all the parameters of related to auction.
   * </pre>
   *
   * <code>.injective.auction.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return The params.
   */
  com.injective.auction.v1beta1.Params getParams();
  /**
   * <pre>
   * params defines all the parameters of related to auction.
   * </pre>
   *
   * <code>.injective.auction.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   */
  com.injective.auction.v1beta1.ParamsOrBuilder getParamsOrBuilder();

  /**
   * <pre>
   * current auction round
   * </pre>
   *
   * <code>uint64 auction_round = 2 [json_name = "auctionRound"];</code>
   * @return The auctionRound.
   */
  long getAuctionRound();

  /**
   * <pre>
   * current highest bid
   * </pre>
   *
   * <code>.injective.auction.v1beta1.Bid highest_bid = 3 [json_name = "highestBid"];</code>
   * @return Whether the highestBid field is set.
   */
  boolean hasHighestBid();
  /**
   * <pre>
   * current highest bid
   * </pre>
   *
   * <code>.injective.auction.v1beta1.Bid highest_bid = 3 [json_name = "highestBid"];</code>
   * @return The highestBid.
   */
  com.injective.auction.v1beta1.Bid getHighestBid();
  /**
   * <pre>
   * current highest bid
   * </pre>
   *
   * <code>.injective.auction.v1beta1.Bid highest_bid = 3 [json_name = "highestBid"];</code>
   */
  com.injective.auction.v1beta1.BidOrBuilder getHighestBidOrBuilder();

  /**
   * <pre>
   * auction ending timestamp
   * </pre>
   *
   * <code>int64 auction_ending_timestamp = 4 [json_name = "auctionEndingTimestamp"];</code>
   * @return The auctionEndingTimestamp.
   */
  long getAuctionEndingTimestamp();
}

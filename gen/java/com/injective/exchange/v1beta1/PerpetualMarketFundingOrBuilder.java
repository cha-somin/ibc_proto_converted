// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/exchange/v1beta1/exchange.proto

package com.injective.exchange.v1beta1;

public interface PerpetualMarketFundingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:injective.exchange.v1beta1.PerpetualMarketFunding)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * cumulative_funding defines the cumulative funding of a perpetual market.
   * </pre>
   *
   * <code>string cumulative_funding = 1 [json_name = "cumulativeFunding", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The cumulativeFunding.
   */
  java.lang.String getCumulativeFunding();
  /**
   * <pre>
   * cumulative_funding defines the cumulative funding of a perpetual market.
   * </pre>
   *
   * <code>string cumulative_funding = 1 [json_name = "cumulativeFunding", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for cumulativeFunding.
   */
  com.google.protobuf.ByteString
      getCumulativeFundingBytes();

  /**
   * <pre>
   * cumulative_price defines the cumulative price for the current hour up to
   * the last timestamp
   * </pre>
   *
   * <code>string cumulative_price = 2 [json_name = "cumulativePrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The cumulativePrice.
   */
  java.lang.String getCumulativePrice();
  /**
   * <pre>
   * cumulative_price defines the cumulative price for the current hour up to
   * the last timestamp
   * </pre>
   *
   * <code>string cumulative_price = 2 [json_name = "cumulativePrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for cumulativePrice.
   */
  com.google.protobuf.ByteString
      getCumulativePriceBytes();

  /**
   * <code>int64 last_timestamp = 3 [json_name = "lastTimestamp"];</code>
   * @return The lastTimestamp.
   */
  long getLastTimestamp();
}

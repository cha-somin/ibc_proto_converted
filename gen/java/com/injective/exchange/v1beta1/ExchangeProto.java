// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/exchange/v1beta1/exchange.proto

package com.injective.exchange.v1beta1;

public final class ExchangeProto {
  private ExchangeProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_Params_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_MarketFeeMultiplier_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_MarketFeeMultiplier_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_DerivativeMarket_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_DerivativeMarket_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_BinaryOptionsMarket_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_BinaryOptionsMarket_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_ExpiryFuturesMarketInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_ExpiryFuturesMarketInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_PerpetualMarketInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_PerpetualMarketInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_PerpetualMarketFunding_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_PerpetualMarketFunding_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_DerivativeMarketSettlementInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_DerivativeMarketSettlementInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_NextFundingTimestamp_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_NextFundingTimestamp_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_MidPriceAndTOB_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_MidPriceAndTOB_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_SpotMarket_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_SpotMarket_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_Deposit_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_Deposit_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_SubaccountTradeNonce_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_SubaccountTradeNonce_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_OrderInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_OrderInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_SpotOrder_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_SpotOrder_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_SpotLimitOrder_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_SpotLimitOrder_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_SpotMarketOrder_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_SpotMarketOrder_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_DerivativeOrder_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_DerivativeOrder_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_SubaccountOrderbookMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_SubaccountOrderbookMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_SubaccountOrder_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_SubaccountOrder_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_SubaccountOrderData_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_SubaccountOrderData_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_DerivativeLimitOrder_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_DerivativeLimitOrder_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_DerivativeMarketOrder_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_DerivativeMarketOrder_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_Position_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_Position_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_MarketOrderIndicator_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_MarketOrderIndicator_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_TradeLog_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_TradeLog_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_PositionDelta_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_PositionDelta_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_DerivativeTradeLog_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_DerivativeTradeLog_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_SubaccountPosition_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_SubaccountPosition_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_SubaccountDeposit_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_SubaccountDeposit_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_DepositUpdate_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_DepositUpdate_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_PointsMultiplier_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_PointsMultiplier_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_TradingRewardCampaignBoostInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_TradingRewardCampaignBoostInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_CampaignRewardPool_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_CampaignRewardPool_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_TradingRewardCampaignInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_TradingRewardCampaignInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_FeeDiscountTierInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_FeeDiscountTierInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_FeeDiscountSchedule_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_FeeDiscountSchedule_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_FeeDiscountTierTTL_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_FeeDiscountTierTTL_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_VolumeRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_VolumeRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_AccountRewards_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_AccountRewards_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_TradeRecords_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_TradeRecords_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_SubaccountIDs_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_SubaccountIDs_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_TradeRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_TradeRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_Level_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_Level_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_AggregateSubaccountVolumeRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_AggregateSubaccountVolumeRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_AggregateAccountVolumeRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_AggregateAccountVolumeRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_MarketVolume_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_MarketVolume_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_injective_exchange_v1beta1_DenomDecimals_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_injective_exchange_v1beta1_DenomDecimals_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)injective/exchange/v1beta1/exchange.pr" +
      "oto\022\032injective.exchange.v1beta1\032\024gogopro" +
      "to/gogo.proto\032\036cosmos/base/v1beta1/coin." +
      "proto\032%injective/oracle/v1beta1/oracle.p" +
      "roto\"\320\024\n\006Params\022e\n\037spot_market_instant_l" +
      "isting_fee\030\001 \001(\0132\031.cosmos.base.v1beta1.C" +
      "oinB\004\310\336\037\000R\033spotMarketInstantListingFee\022q" +
      "\n%derivative_market_instant_listing_fee\030" +
      "\002 \001(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000R!" +
      "derivativeMarketInstantListingFee\022l\n\033def" +
      "ault_spot_maker_fee_rate\030\003 \001(\tB.\310\336\037\000\332\336\037&" +
      "github.com/cosmos/cosmos-sdk/types.DecR\027" +
      "defaultSpotMakerFeeRate\022l\n\033default_spot_" +
      "taker_fee_rate\030\004 \001(\tB.\310\336\037\000\332\336\037&github.com" +
      "/cosmos/cosmos-sdk/types.DecR\027defaultSpo" +
      "tTakerFeeRate\022x\n!default_derivative_make" +
      "r_fee_rate\030\005 \001(\tB.\310\336\037\000\332\336\037&github.com/cos" +
      "mos/cosmos-sdk/types.DecR\035defaultDerivat" +
      "iveMakerFeeRate\022x\n!default_derivative_ta" +
      "ker_fee_rate\030\006 \001(\tB.\310\336\037\000\332\336\037&github.com/c" +
      "osmos/cosmos-sdk/types.DecR\035defaultDeriv" +
      "ativeTakerFeeRate\022o\n\034default_initial_mar" +
      "gin_ratio\030\007 \001(\tB.\310\336\037\000\332\336\037&github.com/cosm" +
      "os/cosmos-sdk/types.DecR\031defaultInitialM" +
      "arginRatio\022w\n default_maintenance_margin" +
      "_ratio\030\010 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/" +
      "cosmos-sdk/types.DecR\035defaultMaintenance" +
      "MarginRatio\0228\n\030default_funding_interval\030" +
      "\t \001(\003R\026defaultFundingInterval\022)\n\020funding" +
      "_multiple\030\n \001(\003R\017fundingMultiple\022c\n\026rela" +
      "yer_fee_share_rate\030\013 \001(\tB.\310\336\037\000\332\336\037&github" +
      ".com/cosmos/cosmos-sdk/types.DecR\023relaye" +
      "rFeeShareRate\022t\n\037default_hourly_funding_" +
      "rate_cap\030\014 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmo" +
      "s/cosmos-sdk/types.DecR\033defaultHourlyFun" +
      "dingRateCap\022o\n\034default_hourly_interest_r" +
      "ate\030\r \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cos" +
      "mos-sdk/types.DecR\031defaultHourlyInterest" +
      "Rate\022D\n\037max_derivative_order_side_count\030" +
      "\016 \001(\rR\033maxDerivativeOrderSideCount\022\204\001\n\'i" +
      "nj_reward_staked_requirement_threshold\030\017" +
      " \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-s" +
      "dk/types.IntR#injRewardStakedRequirement" +
      "Threshold\022G\n trading_rewards_vesting_dur" +
      "ation\030\020 \001(\003R\035tradingRewardsVestingDurati" +
      "on\022o\n\034liquidator_reward_share_rate\030\021 \001(\t" +
      "B.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/t" +
      "ypes.DecR\031liquidatorRewardShareRate\022x\n)b" +
      "inary_options_market_instant_listing_fee" +
      "\030\022 \001(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000R" +
      "$binaryOptionsMarketInstantListingFee\022\200\001" +
      "\n atomic_market_order_access_level\030\023 \001(\016" +
      "28.injective.exchange.v1beta1.AtomicMark" +
      "etOrderAccessLevelR\034atomicMarketOrderAcc" +
      "essLevel\022\203\001\n\'spot_atomic_market_order_fe" +
      "e_multiplier\030\024 \001(\tB.\310\336\037\000\332\336\037&github.com/c" +
      "osmos/cosmos-sdk/types.DecR\"spotAtomicMa" +
      "rketOrderFeeMultiplier\022\217\001\n-derivative_at" +
      "omic_market_order_fee_multiplier\030\025 \001(\tB." +
      "\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/typ" +
      "es.DecR(derivativeAtomicMarketOrderFeeMu" +
      "ltiplier\022\226\001\n1binary_options_atomic_marke" +
      "t_order_fee_multiplier\030\026 \001(\tB.\310\336\037\000\332\336\037&gi" +
      "thub.com/cosmos/cosmos-sdk/types.DecR+bi" +
      "naryOptionsAtomicMarketOrderFeeMultiplie" +
      "r\022i\n\031minimal_protocol_fee_rate\030\027 \001(\tB.\310\336" +
      "\037\000\332\336\037&github.com/cosmos/cosmos-sdk/types" +
      ".DecR\026minimalProtocolFeeRate\022[\n+is_insta" +
      "nt_derivative_market_launch_enabled\030\030 \001(" +
      "\010R&isInstantDerivativeMarketLaunchEnable" +
      "d:\004\350\240\037\001\"\217\001\n\023MarketFeeMultiplier\022\033\n\tmarke" +
      "t_id\030\001 \001(\tR\010marketId\022U\n\016fee_multiplier\030\002" +
      " \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-s" +
      "dk/types.DecR\rfeeMultiplier:\004\210\240\037\000\"\256\010\n\020De" +
      "rivativeMarket\022\026\n\006ticker\030\001 \001(\tR\006ticker\022\037" +
      "\n\013oracle_base\030\002 \001(\tR\noracleBase\022!\n\014oracl" +
      "e_quote\030\003 \001(\tR\013oracleQuote\022E\n\013oracle_typ" +
      "e\030\004 \001(\0162$.injective.oracle.v1beta1.Oracl" +
      "eTypeR\noracleType\022.\n\023oracle_scale_factor" +
      "\030\005 \001(\rR\021oracleScaleFactor\022\037\n\013quote_denom" +
      "\030\006 \001(\tR\nquoteDenom\022\033\n\tmarket_id\030\007 \001(\tR\010m" +
      "arketId\022`\n\024initial_margin_ratio\030\010 \001(\tB.\310" +
      "\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/type" +
      "s.DecR\022initialMarginRatio\022h\n\030maintenance" +
      "_margin_ratio\030\t \001(\tB.\310\336\037\000\332\336\037&github.com/" +
      "cosmos/cosmos-sdk/types.DecR\026maintenance" +
      "MarginRatio\022T\n\016maker_fee_rate\030\n \001(\tB.\310\336\037" +
      "\000\332\336\037&github.com/cosmos/cosmos-sdk/types." +
      "DecR\014makerFeeRate\022T\n\016taker_fee_rate\030\013 \001(" +
      "\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/" +
      "types.DecR\014takerFeeRate\022c\n\026relayer_fee_s" +
      "hare_rate\030\014 \001(\tB.\310\336\037\000\332\336\037&github.com/cosm" +
      "os/cosmos-sdk/types.DecR\023relayerFeeShare" +
      "Rate\022 \n\013isPerpetual\030\r \001(\010R\013isPerpetual\022@" +
      "\n\006status\030\016 \001(\0162(.injective.exchange.v1be" +
      "ta1.MarketStatusR\006status\022]\n\023min_price_ti" +
      "ck_size\030\017 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos" +
      "/cosmos-sdk/types.DecR\020minPriceTickSize\022" +
      "c\n\026min_quantity_tick_size\030\020 \001(\tB.\310\336\037\000\332\336\037" +
      "&github.com/cosmos/cosmos-sdk/types.DecR" +
      "\023minQuantityTickSize:\004\210\240\037\000\"\244\010\n\023BinaryOpt" +
      "ionsMarket\022\026\n\006ticker\030\001 \001(\tR\006ticker\022#\n\ror" +
      "acle_symbol\030\002 \001(\tR\014oracleSymbol\022\'\n\017oracl" +
      "e_provider\030\003 \001(\tR\016oracleProvider\022E\n\013orac" +
      "le_type\030\004 \001(\0162$.injective.oracle.v1beta1" +
      ".OracleTypeR\noracleType\022.\n\023oracle_scale_" +
      "factor\030\005 \001(\rR\021oracleScaleFactor\0221\n\024expir" +
      "ation_timestamp\030\006 \001(\003R\023expirationTimesta" +
      "mp\0221\n\024settlement_timestamp\030\007 \001(\003R\023settle" +
      "mentTimestamp\022\024\n\005admin\030\010 \001(\tR\005admin\022\037\n\013q" +
      "uote_denom\030\t \001(\tR\nquoteDenom\022\033\n\tmarket_i" +
      "d\030\n \001(\tR\010marketId\022T\n\016maker_fee_rate\030\013 \001(" +
      "\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/" +
      "types.DecR\014makerFeeRate\022T\n\016taker_fee_rat" +
      "e\030\014 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmo" +
      "s-sdk/types.DecR\014takerFeeRate\022c\n\026relayer" +
      "_fee_share_rate\030\r \001(\tB.\310\336\037\000\332\336\037&github.co" +
      "m/cosmos/cosmos-sdk/types.DecR\023relayerFe" +
      "eShareRate\022@\n\006status\030\016 \001(\0162(.injective.e" +
      "xchange.v1beta1.MarketStatusR\006status\022]\n\023" +
      "min_price_tick_size\030\017 \001(\tB.\310\336\037\000\332\336\037&githu" +
      "b.com/cosmos/cosmos-sdk/types.DecR\020minPr" +
      "iceTickSize\022c\n\026min_quantity_tick_size\030\020 " +
      "\001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sd" +
      "k/types.DecR\023minQuantityTickSize\022Y\n\020sett" +
      "lement_price\030\021 \001(\tB.\310\336\037\001\332\336\037&github.com/c" +
      "osmos/cosmos-sdk/types.DecR\017settlementPr" +
      "ice:\004\210\240\037\000\"\373\002\n\027ExpiryFuturesMarketInfo\022\033\n" +
      "\tmarket_id\030\001 \001(\tR\010marketId\0221\n\024expiration" +
      "_timestamp\030\002 \001(\003R\023expirationTimestamp\0220\n" +
      "\024twap_start_timestamp\030\003 \001(\003R\022twapStartTi" +
      "mestamp\022\202\001\n&expiration_twap_start_price_" +
      "cumulative\030\004 \001(\tB.\310\336\037\000\332\336\037&github.com/cos" +
      "mos/cosmos-sdk/types.DecR\"expirationTwap" +
      "StartPriceCumulative\022Y\n\020settlement_price" +
      "\030\005 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos" +
      "-sdk/types.DecR\017settlementPrice\"\334\002\n\023Perp" +
      "etualMarketInfo\022\033\n\tmarket_id\030\001 \001(\tR\010mark" +
      "etId\022e\n\027hourly_funding_rate_cap\030\002 \001(\tB.\310" +
      "\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/type" +
      "s.DecR\024hourlyFundingRateCap\022`\n\024hourly_in" +
      "terest_rate\030\003 \001(\tB.\310\336\037\000\332\336\037&github.com/co" +
      "smos/cosmos-sdk/types.DecR\022hourlyInteres" +
      "tRate\0224\n\026next_funding_timestamp\030\004 \001(\003R\024n" +
      "extFundingTimestamp\022)\n\020funding_interval\030" +
      "\005 \001(\003R\017fundingInterval\"\371\001\n\026PerpetualMark" +
      "etFunding\022]\n\022cumulative_funding\030\001 \001(\tB.\310" +
      "\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/type" +
      "s.DecR\021cumulativeFunding\022Y\n\020cumulative_p" +
      "rice\030\002 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/co" +
      "smos-sdk/types.DecR\017cumulativePrice\022%\n\016l" +
      "ast_timestamp\030\003 \001(\003R\rlastTimestamp\"\230\001\n\036D" +
      "erivativeMarketSettlementInfo\022\033\n\tmarket_" +
      "id\030\001 \001(\tR\010marketId\022Y\n\020settlement_price\030\002" +
      " \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-s" +
      "dk/types.DecR\017settlementPrice\"=\n\024NextFun" +
      "dingTimestamp\022%\n\016next_timestamp\030\001 \001(\003R\rn" +
      "extTimestamp\"\213\002\n\016MidPriceAndTOB\022K\n\tmid_p" +
      "rice\030\001 \001(\tB.\310\336\037\001\332\336\037&github.com/cosmos/co" +
      "smos-sdk/types.DecR\010midPrice\022T\n\016best_buy" +
      "_price\030\002 \001(\tB.\310\336\037\001\332\336\037&github.com/cosmos/" +
      "cosmos-sdk/types.DecR\014bestBuyPrice\022V\n\017be" +
      "st_sell_price\030\003 \001(\tB.\310\336\037\001\332\336\037&github.com/" +
      "cosmos/cosmos-sdk/types.DecR\rbestSellPri" +
      "ce\"\230\005\n\nSpotMarket\022\026\n\006ticker\030\001 \001(\tR\006ticke" +
      "r\022\035\n\nbase_denom\030\002 \001(\tR\tbaseDenom\022\037\n\013quot" +
      "e_denom\030\003 \001(\tR\nquoteDenom\022T\n\016maker_fee_r" +
      "ate\030\004 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cos" +
      "mos-sdk/types.DecR\014makerFeeRate\022T\n\016taker" +
      "_fee_rate\030\005 \001(\tB.\310\336\037\000\332\336\037&github.com/cosm" +
      "os/cosmos-sdk/types.DecR\014takerFeeRate\022c\n" +
      "\026relayer_fee_share_rate\030\006 \001(\tB.\310\336\037\000\332\336\037&g" +
      "ithub.com/cosmos/cosmos-sdk/types.DecR\023r" +
      "elayerFeeShareRate\022\033\n\tmarket_id\030\007 \001(\tR\010m" +
      "arketId\022@\n\006status\030\010 \001(\0162(.injective.exch" +
      "ange.v1beta1.MarketStatusR\006status\022]\n\023min" +
      "_price_tick_size\030\t \001(\tB.\310\336\037\000\332\336\037&github.c" +
      "om/cosmos/cosmos-sdk/types.DecR\020minPrice" +
      "TickSize\022c\n\026min_quantity_tick_size\030\n \001(\t" +
      "B.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/t" +
      "ypes.DecR\023minQuantityTickSize\"\273\001\n\007Deposi" +
      "t\022[\n\021available_balance\030\001 \001(\tB.\310\336\037\000\332\336\037&gi" +
      "thub.com/cosmos/cosmos-sdk/types.DecR\020av" +
      "ailableBalance\022S\n\rtotal_balance\030\002 \001(\tB.\310" +
      "\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/type" +
      "s.DecR\014totalBalance\",\n\024SubaccountTradeNo" +
      "nce\022\024\n\005nonce\030\001 \001(\rR\005nonce\"\347\001\n\tOrderInfo\022" +
      "#\n\rsubaccount_id\030\001 \001(\tR\014subaccountId\022#\n\r" +
      "fee_recipient\030\002 \001(\tR\014feeRecipient\022D\n\005pri" +
      "ce\030\003 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosm" +
      "os-sdk/types.DecR\005price\022J\n\010quantity\030\004 \001(" +
      "\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/" +
      "types.DecR\010quantity\"\217\002\n\tSpotOrder\022\033\n\tmar" +
      "ket_id\030\001 \001(\tR\010marketId\022J\n\norder_info\030\002 \001" +
      "(\0132%.injective.exchange.v1beta1.OrderInf" +
      "oB\004\310\336\037\000R\torderInfo\022D\n\norder_type\030\003 \001(\0162%" +
      ".injective.exchange.v1beta1.OrderTypeR\to" +
      "rderType\022S\n\rtrigger_price\030\004 \001(\tB.\310\336\037\001\332\336\037" +
      "&github.com/cosmos/cosmos-sdk/types.DecR" +
      "\014triggerPrice\"\342\002\n\016SpotLimitOrder\022J\n\norde" +
      "r_info\030\001 \001(\0132%.injective.exchange.v1beta" +
      "1.OrderInfoB\004\310\336\037\000R\torderInfo\022D\n\norder_ty" +
      "pe\030\002 \001(\0162%.injective.exchange.v1beta1.Or" +
      "derTypeR\torderType\022J\n\010fillable\030\003 \001(\tB.\310\336" +
      "\037\000\332\336\037&github.com/cosmos/cosmos-sdk/types" +
      ".DecR\010fillable\022S\n\rtrigger_price\030\004 \001(\tB.\310" +
      "\336\037\001\332\336\037&github.com/cosmos/cosmos-sdk/type" +
      "s.DecR\014triggerPrice\022\035\n\norder_hash\030\005 \001(\014R" +
      "\torderHash\"\352\002\n\017SpotMarketOrder\022J\n\norder_" +
      "info\030\001 \001(\0132%.injective.exchange.v1beta1." +
      "OrderInfoB\004\310\336\037\000R\torderInfo\022Q\n\014balance_ho" +
      "ld\030\002 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosm" +
      "os-sdk/types.DecR\013balanceHold\022\035\n\norder_h" +
      "ash\030\003 \001(\014R\torderHash\022D\n\norder_type\030\004 \001(\016" +
      "2%.injective.exchange.v1beta1.OrderTypeR" +
      "\torderType\022S\n\rtrigger_price\030\005 \001(\tB.\310\336\037\001\332" +
      "\336\037&github.com/cosmos/cosmos-sdk/types.De" +
      "cR\014triggerPrice\"\335\002\n\017DerivativeOrder\022\033\n\tm" +
      "arket_id\030\001 \001(\tR\010marketId\022J\n\norder_info\030\002" +
      " \001(\0132%.injective.exchange.v1beta1.OrderI" +
      "nfoB\004\310\336\037\000R\torderInfo\022D\n\norder_type\030\003 \001(\016" +
      "2%.injective.exchange.v1beta1.OrderTypeR" +
      "\torderType\022F\n\006margin\030\004 \001(\tB.\310\336\037\000\332\336\037&gith" +
      "ub.com/cosmos/cosmos-sdk/types.DecR\006marg" +
      "in\022S\n\rtrigger_price\030\005 \001(\tB.\310\336\037\001\332\336\037&githu" +
      "b.com/cosmos/cosmos-sdk/types.DecR\014trigg" +
      "erPrice\"\222\004\n\033SubaccountOrderbookMetadata\022" +
      "9\n\031vanilla_limit_order_count\030\001 \001(\rR\026vani" +
      "llaLimitOrderCount\022@\n\035reduce_only_limit_" +
      "order_count\030\002 \001(\rR\031reduceOnlyLimitOrderC" +
      "ount\022s\n\036aggregate_reduce_only_quantity\030\003" +
      " \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-s" +
      "dk/types.DecR\033aggregateReduceOnlyQuantit" +
      "y\022l\n\032aggregate_vanilla_quantity\030\004 \001(\tB.\310" +
      "\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/type" +
      "s.DecR\030aggregateVanillaQuantity\022E\n\037vanil" +
      "la_conditional_order_count\030\005 \001(\rR\034vanill" +
      "aConditionalOrderCount\022L\n#reduce_only_co" +
      "nditional_order_count\030\006 \001(\rR\037reduceOnlyC" +
      "onditionalOrderCount\"\307\001\n\017SubaccountOrder" +
      "\022D\n\005price\030\001 \001(\tB.\310\336\037\000\332\336\037&github.com/cosm" +
      "os/cosmos-sdk/types.DecR\005price\022J\n\010quanti" +
      "ty\030\002 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosm" +
      "os-sdk/types.DecR\010quantity\022\"\n\014isReduceOn" +
      "ly\030\003 \001(\010R\014isReduceOnly\"w\n\023SubaccountOrde" +
      "rData\022A\n\005order\030\001 \001(\0132+.injective.exchang" +
      "e.v1beta1.SubaccountOrderR\005order\022\035\n\norde" +
      "r_hash\030\002 \001(\014R\torderHash\"\260\003\n\024DerivativeLi" +
      "mitOrder\022J\n\norder_info\030\001 \001(\0132%.injective" +
      ".exchange.v1beta1.OrderInfoB\004\310\336\037\000R\torder" +
      "Info\022D\n\norder_type\030\002 \001(\0162%.injective.exc" +
      "hange.v1beta1.OrderTypeR\torderType\022F\n\006ma" +
      "rgin\030\003 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/co" +
      "smos-sdk/types.DecR\006margin\022J\n\010fillable\030\004" +
      " \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-s" +
      "dk/types.DecR\010fillable\022S\n\rtrigger_price\030" +
      "\005 \001(\tB.\310\336\037\001\332\336\037&github.com/cosmos/cosmos-" +
      "sdk/types.DecR\014triggerPrice\022\035\n\norder_has" +
      "h\030\006 \001(\014R\torderHash\"\266\003\n\025DerivativeMarketO" +
      "rder\022J\n\norder_info\030\001 \001(\0132%.injective.exc" +
      "hange.v1beta1.OrderInfoB\004\310\336\037\000R\torderInfo" +
      "\022D\n\norder_type\030\002 \001(\0162%.injective.exchang" +
      "e.v1beta1.OrderTypeR\torderType\022F\n\006margin" +
      "\030\003 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos" +
      "-sdk/types.DecR\006margin\022O\n\013margin_hold\030\004 " +
      "\001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sd" +
      "k/types.DecR\nmarginHold\022S\n\rtrigger_price" +
      "\030\005 \001(\tB.\310\336\037\001\332\336\037&github.com/cosmos/cosmos" +
      "-sdk/types.DecR\014triggerPrice\022\035\n\norder_ha" +
      "sh\030\006 \001(\014R\torderHash\"\361\002\n\010Position\022\026\n\006isLo" +
      "ng\030\001 \001(\010R\006isLong\022J\n\010quantity\030\002 \001(\tB.\310\336\037\000" +
      "\332\336\037&github.com/cosmos/cosmos-sdk/types.D" +
      "ecR\010quantity\022O\n\013entry_price\030\003 \001(\tB.\310\336\037\000\332" +
      "\336\037&github.com/cosmos/cosmos-sdk/types.De" +
      "cR\nentryPrice\022F\n\006margin\030\004 \001(\tB.\310\336\037\000\332\336\037&g" +
      "ithub.com/cosmos/cosmos-sdk/types.DecR\006m" +
      "argin\022h\n\030cumulative_funding_entry\030\005 \001(\tB" +
      ".\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/ty" +
      "pes.DecR\026cumulativeFundingEntry\"I\n\024Marke" +
      "tOrderIndicator\022\033\n\tmarket_id\030\001 \001(\tR\010mark" +
      "etId\022\024\n\005isBuy\030\002 \001(\010R\005isBuy\"\334\002\n\010TradeLog\022" +
      "J\n\010quantity\030\001 \001(\tB.\310\336\037\000\332\336\037&github.com/co" +
      "smos/cosmos-sdk/types.DecR\010quantity\022D\n\005p" +
      "rice\030\002 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/co" +
      "smos-sdk/types.DecR\005price\022#\n\rsubaccount_" +
      "id\030\003 \001(\014R\014subaccountId\022@\n\003fee\030\004 \001(\tB.\310\336\037" +
      "\000\332\336\037&github.com/cosmos/cosmos-sdk/types." +
      "DecR\003fee\022\035\n\norder_hash\030\005 \001(\014R\torderHash\022" +
      "8\n\025fee_recipient_address\030\006 \001(\014B\004\310\336\037\001R\023fe" +
      "eRecipientAddress\"\273\002\n\rPositionDelta\022\027\n\007i" +
      "s_long\030\001 \001(\010R\006isLong\022]\n\022execution_quanti" +
      "ty\030\002 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosm" +
      "os-sdk/types.DecR\021executionQuantity\022Y\n\020e" +
      "xecution_margin\030\003 \001(\tB.\310\336\037\000\332\336\037&github.co" +
      "m/cosmos/cosmos-sdk/types.DecR\017execution" +
      "Margin\022W\n\017execution_price\030\004 \001(\tB.\310\336\037\000\332\336\037" +
      "&github.com/cosmos/cosmos-sdk/types.DecR" +
      "\016executionPrice\"\356\002\n\022DerivativeTradeLog\022#" +
      "\n\rsubaccount_id\030\001 \001(\014R\014subaccountId\022P\n\016p" +
      "osition_delta\030\002 \001(\0132).injective.exchange" +
      ".v1beta1.PositionDeltaR\rpositionDelta\022F\n" +
      "\006payout\030\003 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos" +
      "/cosmos-sdk/types.DecR\006payout\022@\n\003fee\030\004 \001" +
      "(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk" +
      "/types.DecR\003fee\022\035\n\norder_hash\030\005 \001(\014R\tord" +
      "erHash\0228\n\025fee_recipient_address\030\006 \001(\014B\004\310" +
      "\336\037\001R\023feeRecipientAddress\"{\n\022SubaccountPo" +
      "sition\022@\n\010position\030\001 \001(\0132$.injective.exc" +
      "hange.v1beta1.PositionR\010position\022#\n\rsuba" +
      "ccount_id\030\002 \001(\014R\014subaccountId\"w\n\021Subacco" +
      "untDeposit\022#\n\rsubaccount_id\030\001 \001(\014R\014subac" +
      "countId\022=\n\007deposit\030\002 \001(\0132#.injective.exc" +
      "hange.v1beta1.DepositR\007deposit\"p\n\rDeposi" +
      "tUpdate\022\024\n\005denom\030\001 \001(\tR\005denom\022I\n\010deposit" +
      "s\030\002 \003(\0132-.injective.exchange.v1beta1.Sub" +
      "accountDepositR\010deposits\"\342\001\n\020PointsMulti" +
      "plier\022f\n\027maker_points_multiplier\030\001 \001(\tB." +
      "\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/typ" +
      "es.DecR\025makerPointsMultiplier\022f\n\027taker_p" +
      "oints_multiplier\030\002 \001(\tB.\310\336\037\000\332\336\037&github.c" +
      "om/cosmos/cosmos-sdk/types.DecR\025takerPoi" +
      "ntsMultiplier\"\376\002\n\036TradingRewardCampaignB" +
      "oostInfo\0225\n\027boosted_spot_market_ids\030\001 \003(" +
      "\tR\024boostedSpotMarketIds\022j\n\027spot_market_m" +
      "ultipliers\030\002 \003(\0132,.injective.exchange.v1" +
      "beta1.PointsMultiplierB\004\310\336\037\000R\025spotMarket" +
      "Multipliers\022A\n\035boosted_derivative_market" +
      "_ids\030\003 \003(\tR\032boostedDerivativeMarketIds\022v" +
      "\n\035derivative_market_multipliers\030\004 \003(\0132,." +
      "injective.exchange.v1beta1.PointsMultipl" +
      "ierB\004\310\336\037\000R\033derivativeMarketMultipliers\"\274" +
      "\001\n\022CampaignRewardPool\022\'\n\017start_timestamp" +
      "\030\001 \001(\003R\016startTimestamp\022}\n\024max_campaign_r" +
      "ewards\030\002 \003(\0132\031.cosmos.base.v1beta1.CoinB" +
      "0\310\336\037\000\252\337\037(github.com/cosmos/cosmos-sdk/ty" +
      "pes.CoinsR\022maxCampaignRewards\"\251\002\n\031Tradin" +
      "gRewardCampaignInfo\022:\n\031campaign_duration" +
      "_seconds\030\001 \001(\003R\027campaignDurationSeconds\022" +
      "!\n\014quote_denoms\030\002 \003(\tR\013quoteDenoms\022u\n\031tr" +
      "ading_reward_boost_info\030\003 \001(\0132:.injectiv" +
      "e.exchange.v1beta1.TradingRewardCampaign" +
      "BoostInfoR\026tradingRewardBoostInfo\0226\n\027dis" +
      "qualified_market_ids\030\004 \003(\tR\025disqualified" +
      "MarketIds\"\362\002\n\023FeeDiscountTierInfo\022^\n\023mak" +
      "er_discount_rate\030\001 \001(\tB.\310\336\037\000\332\336\037&github.c" +
      "om/cosmos/cosmos-sdk/types.DecR\021makerDis" +
      "countRate\022^\n\023taker_discount_rate\030\002 \001(\tB." +
      "\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/typ" +
      "es.DecR\021takerDiscountRate\022S\n\rstaked_amou" +
      "nt\030\003 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosm" +
      "os-sdk/types.IntR\014stakedAmount\022F\n\006volume" +
      "\030\004 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos" +
      "-sdk/types.DecR\006volume\"\214\002\n\023FeeDiscountSc" +
      "hedule\022!\n\014bucket_count\030\001 \001(\004R\013bucketCoun" +
      "t\022\'\n\017bucket_duration\030\002 \001(\003R\016bucketDurati" +
      "on\022!\n\014quote_denoms\030\003 \003(\tR\013quoteDenoms\022N\n" +
      "\ntier_infos\030\004 \003(\0132/.injective.exchange.v" +
      "1beta1.FeeDiscountTierInfoR\ttierInfos\0226\n" +
      "\027disqualified_market_ids\030\005 \003(\tR\025disquali" +
      "fiedMarketIds\"M\n\022FeeDiscountTierTTL\022\022\n\004t" +
      "ier\030\001 \001(\004R\004tier\022#\n\rttl_timestamp\030\002 \001(\003R\014" +
      "ttlTimestamp\"\264\001\n\014VolumeRecord\022Q\n\014maker_v" +
      "olume\030\001 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/c" +
      "osmos-sdk/types.DecR\013makerVolume\022Q\n\014take" +
      "r_volume\030\002 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmo" +
      "s/cosmos-sdk/types.DecR\013takerVolume\"\221\001\n\016" +
      "AccountRewards\022\030\n\007account\030\001 \001(\tR\007account" +
      "\022e\n\007rewards\030\002 \003(\0132\031.cosmos.base.v1beta1." +
      "CoinB0\310\336\037\000\252\337\037(github.com/cosmos/cosmos-s" +
      "dk/types.CoinsR\007rewards\"\206\001\n\014TradeRecords" +
      "\022\033\n\tmarket_id\030\001 \001(\tR\010marketId\022Y\n\024latest_" +
      "trade_records\030\002 \003(\0132\'.injective.exchange" +
      ".v1beta1.TradeRecordR\022latestTradeRecords" +
      "\"6\n\rSubaccountIDs\022%\n\016subaccount_ids\030\001 \003(" +
      "\014R\rsubaccountIds\"\275\001\n\013TradeRecord\022\034\n\ttime" +
      "stamp\030\001 \001(\003R\ttimestamp\022D\n\005price\030\002 \001(\tB.\310" +
      "\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/type" +
      "s.DecR\005price\022J\n\010quantity\030\003 \001(\tB.\310\336\037\000\332\336\037&" +
      "github.com/cosmos/cosmos-sdk/types.DecR\010" +
      "quantity\"\203\001\n\005Level\022<\n\001p\030\001 \001(\tB.\310\336\037\000\332\336\037&g" +
      "ithub.com/cosmos/cosmos-sdk/types.DecR\001p" +
      "\022<\n\001q\030\002 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/c" +
      "osmos-sdk/types.DecR\001q\"\227\001\n\037AggregateSuba" +
      "ccountVolumeRecord\022#\n\rsubaccount_id\030\001 \001(" +
      "\tR\014subaccountId\022O\n\016market_volumes\030\002 \003(\0132" +
      "(.injective.exchange.v1beta1.MarketVolum" +
      "eR\rmarketVolumes\"\211\001\n\034AggregateAccountVol" +
      "umeRecord\022\030\n\007account\030\001 \001(\tR\007account\022O\n\016m" +
      "arket_volumes\030\002 \003(\0132(.injective.exchange" +
      ".v1beta1.MarketVolumeR\rmarketVolumes\"s\n\014" +
      "MarketVolume\022\033\n\tmarket_id\030\001 \001(\tR\010marketI" +
      "d\022F\n\006volume\030\002 \001(\0132(.injective.exchange.v" +
      "1beta1.VolumeRecordB\004\310\336\037\000R\006volume\"A\n\rDen" +
      "omDecimals\022\024\n\005denom\030\001 \001(\tR\005denom\022\032\n\010deci" +
      "mals\030\002 \001(\004R\010decimals*t\n\034AtomicMarketOrde" +
      "rAccessLevel\022\n\n\006Nobody\020\000\022\"\n\036BeginBlocker" +
      "SmartContractsOnly\020\001\022\026\n\022SmartContractsOn" +
      "ly\020\002\022\014\n\010Everyone\020\003*T\n\014MarketStatus\022\017\n\013Un" +
      "specified\020\000\022\n\n\006Active\020\001\022\n\n\006Paused\020\002\022\016\n\nD" +
      "emolished\020\003\022\013\n\007Expired\020\004*\273\002\n\tOrderType\022 ",
      "\n\013UNSPECIFIED\020\000\032\017\212\235 \013UNSPECIFIED\022\020\n\003BUY\020" +
      "\001\032\007\212\235 \003BUY\022\022\n\004SELL\020\002\032\010\212\235 \004SELL\022\032\n\010STOP_B" +
      "UY\020\003\032\014\212\235 \010STOP_BUY\022\034\n\tSTOP_SELL\020\004\032\r\212\235 \tS" +
      "TOP_SELL\022\032\n\010TAKE_BUY\020\005\032\014\212\235 \010TAKE_BUY\022\034\n\t" +
      "TAKE_SELL\020\006\032\r\212\235 \tTAKE_SELL\022\026\n\006BUY_PO\020\007\032\n" +
      "\212\235 \006BUY_PO\022\030\n\007SELL_PO\020\010\032\013\212\235 \007SELL_PO\022\036\n\n" +
      "BUY_ATOMIC\020\t\032\016\212\235 \nBUY_ATOMIC\022 \n\013SELL_ATO" +
      "MIC\020\n\032\017\212\235 \013SELL_ATOMIC*\257\001\n\rExecutionType" +
      "\022\034\n\030UnspecifiedExecutionType\020\000\022\n\n\006Market" +
      "\020\001\022\r\n\tLimitFill\020\002\022\032\n\026LimitMatchRestingOr" +
      "der\020\003\022\026\n\022LimitMatchNewOrder\020\004\022\025\n\021MarketL" +
      "iquidation\020\005\022\032\n\026ExpiryMarketSettlement\020\006" +
      "*\211\002\n\tOrderMask\022\026\n\006UNUSED\020\000\032\n\212\235 \006UNUSED\022\020" +
      "\n\003ANY\020\001\032\007\212\235 \003ANY\022\030\n\007REGULAR\020\002\032\013\212\235 \007REGUL" +
      "AR\022 \n\013CONDITIONAL\020\004\032\017\212\235 \013CONDITIONAL\022.\n\027" +
      "DIRECTION_BUY_OR_HIGHER\020\010\032\021\212\235 \rBUY_OR_HI" +
      "GHER\022.\n\027DIRECTION_SELL_OR_LOWER\020\020\032\021\212\235 \rS" +
      "ELL_OR_LOWER\022\033\n\013TYPE_MARKET\020 \032\n\212\235 \006MARKE" +
      "T\022\031\n\nTYPE_LIMIT\020@\032\t\212\235 \005LIMITB\211\002\n\036com.inj" +
      "ective.exchange.v1beta1B\rExchangeProtoP\001" +
      "ZNgithub.com/InjectiveLabs/injective-cor" +
      "e/injective-chain/modules/exchange/types" +
      "\242\002\003IEX\252\002\032Injective.Exchange.V1beta1\312\002\032In" +
      "jective\\Exchange\\V1beta1\342\002&Injective\\Exc" +
      "hange\\V1beta1\\GPBMetadata\352\002\034Injective::E" +
      "xchange::V1beta1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.injective.oracle.v1beta1.OracleProto.getDescriptor(),
        });
    internal_static_injective_exchange_v1beta1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_injective_exchange_v1beta1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_Params_descriptor,
        new java.lang.String[] { "SpotMarketInstantListingFee", "DerivativeMarketInstantListingFee", "DefaultSpotMakerFeeRate", "DefaultSpotTakerFeeRate", "DefaultDerivativeMakerFeeRate", "DefaultDerivativeTakerFeeRate", "DefaultInitialMarginRatio", "DefaultMaintenanceMarginRatio", "DefaultFundingInterval", "FundingMultiple", "RelayerFeeShareRate", "DefaultHourlyFundingRateCap", "DefaultHourlyInterestRate", "MaxDerivativeOrderSideCount", "InjRewardStakedRequirementThreshold", "TradingRewardsVestingDuration", "LiquidatorRewardShareRate", "BinaryOptionsMarketInstantListingFee", "AtomicMarketOrderAccessLevel", "SpotAtomicMarketOrderFeeMultiplier", "DerivativeAtomicMarketOrderFeeMultiplier", "BinaryOptionsAtomicMarketOrderFeeMultiplier", "MinimalProtocolFeeRate", "IsInstantDerivativeMarketLaunchEnabled", });
    internal_static_injective_exchange_v1beta1_MarketFeeMultiplier_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_injective_exchange_v1beta1_MarketFeeMultiplier_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_MarketFeeMultiplier_descriptor,
        new java.lang.String[] { "MarketId", "FeeMultiplier", });
    internal_static_injective_exchange_v1beta1_DerivativeMarket_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_injective_exchange_v1beta1_DerivativeMarket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_DerivativeMarket_descriptor,
        new java.lang.String[] { "Ticker", "OracleBase", "OracleQuote", "OracleType", "OracleScaleFactor", "QuoteDenom", "MarketId", "InitialMarginRatio", "MaintenanceMarginRatio", "MakerFeeRate", "TakerFeeRate", "RelayerFeeShareRate", "IsPerpetual", "Status", "MinPriceTickSize", "MinQuantityTickSize", });
    internal_static_injective_exchange_v1beta1_BinaryOptionsMarket_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_injective_exchange_v1beta1_BinaryOptionsMarket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_BinaryOptionsMarket_descriptor,
        new java.lang.String[] { "Ticker", "OracleSymbol", "OracleProvider", "OracleType", "OracleScaleFactor", "ExpirationTimestamp", "SettlementTimestamp", "Admin", "QuoteDenom", "MarketId", "MakerFeeRate", "TakerFeeRate", "RelayerFeeShareRate", "Status", "MinPriceTickSize", "MinQuantityTickSize", "SettlementPrice", });
    internal_static_injective_exchange_v1beta1_ExpiryFuturesMarketInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_injective_exchange_v1beta1_ExpiryFuturesMarketInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_ExpiryFuturesMarketInfo_descriptor,
        new java.lang.String[] { "MarketId", "ExpirationTimestamp", "TwapStartTimestamp", "ExpirationTwapStartPriceCumulative", "SettlementPrice", });
    internal_static_injective_exchange_v1beta1_PerpetualMarketInfo_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_injective_exchange_v1beta1_PerpetualMarketInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_PerpetualMarketInfo_descriptor,
        new java.lang.String[] { "MarketId", "HourlyFundingRateCap", "HourlyInterestRate", "NextFundingTimestamp", "FundingInterval", });
    internal_static_injective_exchange_v1beta1_PerpetualMarketFunding_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_injective_exchange_v1beta1_PerpetualMarketFunding_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_PerpetualMarketFunding_descriptor,
        new java.lang.String[] { "CumulativeFunding", "CumulativePrice", "LastTimestamp", });
    internal_static_injective_exchange_v1beta1_DerivativeMarketSettlementInfo_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_injective_exchange_v1beta1_DerivativeMarketSettlementInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_DerivativeMarketSettlementInfo_descriptor,
        new java.lang.String[] { "MarketId", "SettlementPrice", });
    internal_static_injective_exchange_v1beta1_NextFundingTimestamp_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_injective_exchange_v1beta1_NextFundingTimestamp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_NextFundingTimestamp_descriptor,
        new java.lang.String[] { "NextTimestamp", });
    internal_static_injective_exchange_v1beta1_MidPriceAndTOB_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_injective_exchange_v1beta1_MidPriceAndTOB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_MidPriceAndTOB_descriptor,
        new java.lang.String[] { "MidPrice", "BestBuyPrice", "BestSellPrice", });
    internal_static_injective_exchange_v1beta1_SpotMarket_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_injective_exchange_v1beta1_SpotMarket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_SpotMarket_descriptor,
        new java.lang.String[] { "Ticker", "BaseDenom", "QuoteDenom", "MakerFeeRate", "TakerFeeRate", "RelayerFeeShareRate", "MarketId", "Status", "MinPriceTickSize", "MinQuantityTickSize", });
    internal_static_injective_exchange_v1beta1_Deposit_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_injective_exchange_v1beta1_Deposit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_Deposit_descriptor,
        new java.lang.String[] { "AvailableBalance", "TotalBalance", });
    internal_static_injective_exchange_v1beta1_SubaccountTradeNonce_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_injective_exchange_v1beta1_SubaccountTradeNonce_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_SubaccountTradeNonce_descriptor,
        new java.lang.String[] { "Nonce", });
    internal_static_injective_exchange_v1beta1_OrderInfo_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_injective_exchange_v1beta1_OrderInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_OrderInfo_descriptor,
        new java.lang.String[] { "SubaccountId", "FeeRecipient", "Price", "Quantity", });
    internal_static_injective_exchange_v1beta1_SpotOrder_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_injective_exchange_v1beta1_SpotOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_SpotOrder_descriptor,
        new java.lang.String[] { "MarketId", "OrderInfo", "OrderType", "TriggerPrice", });
    internal_static_injective_exchange_v1beta1_SpotLimitOrder_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_injective_exchange_v1beta1_SpotLimitOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_SpotLimitOrder_descriptor,
        new java.lang.String[] { "OrderInfo", "OrderType", "Fillable", "TriggerPrice", "OrderHash", });
    internal_static_injective_exchange_v1beta1_SpotMarketOrder_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_injective_exchange_v1beta1_SpotMarketOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_SpotMarketOrder_descriptor,
        new java.lang.String[] { "OrderInfo", "BalanceHold", "OrderHash", "OrderType", "TriggerPrice", });
    internal_static_injective_exchange_v1beta1_DerivativeOrder_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_injective_exchange_v1beta1_DerivativeOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_DerivativeOrder_descriptor,
        new java.lang.String[] { "MarketId", "OrderInfo", "OrderType", "Margin", "TriggerPrice", });
    internal_static_injective_exchange_v1beta1_SubaccountOrderbookMetadata_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_injective_exchange_v1beta1_SubaccountOrderbookMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_SubaccountOrderbookMetadata_descriptor,
        new java.lang.String[] { "VanillaLimitOrderCount", "ReduceOnlyLimitOrderCount", "AggregateReduceOnlyQuantity", "AggregateVanillaQuantity", "VanillaConditionalOrderCount", "ReduceOnlyConditionalOrderCount", });
    internal_static_injective_exchange_v1beta1_SubaccountOrder_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_injective_exchange_v1beta1_SubaccountOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_SubaccountOrder_descriptor,
        new java.lang.String[] { "Price", "Quantity", "IsReduceOnly", });
    internal_static_injective_exchange_v1beta1_SubaccountOrderData_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_injective_exchange_v1beta1_SubaccountOrderData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_SubaccountOrderData_descriptor,
        new java.lang.String[] { "Order", "OrderHash", });
    internal_static_injective_exchange_v1beta1_DerivativeLimitOrder_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_injective_exchange_v1beta1_DerivativeLimitOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_DerivativeLimitOrder_descriptor,
        new java.lang.String[] { "OrderInfo", "OrderType", "Margin", "Fillable", "TriggerPrice", "OrderHash", });
    internal_static_injective_exchange_v1beta1_DerivativeMarketOrder_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_injective_exchange_v1beta1_DerivativeMarketOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_DerivativeMarketOrder_descriptor,
        new java.lang.String[] { "OrderInfo", "OrderType", "Margin", "MarginHold", "TriggerPrice", "OrderHash", });
    internal_static_injective_exchange_v1beta1_Position_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_injective_exchange_v1beta1_Position_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_Position_descriptor,
        new java.lang.String[] { "IsLong", "Quantity", "EntryPrice", "Margin", "CumulativeFundingEntry", });
    internal_static_injective_exchange_v1beta1_MarketOrderIndicator_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_injective_exchange_v1beta1_MarketOrderIndicator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_MarketOrderIndicator_descriptor,
        new java.lang.String[] { "MarketId", "IsBuy", });
    internal_static_injective_exchange_v1beta1_TradeLog_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_injective_exchange_v1beta1_TradeLog_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_TradeLog_descriptor,
        new java.lang.String[] { "Quantity", "Price", "SubaccountId", "Fee", "OrderHash", "FeeRecipientAddress", });
    internal_static_injective_exchange_v1beta1_PositionDelta_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_injective_exchange_v1beta1_PositionDelta_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_PositionDelta_descriptor,
        new java.lang.String[] { "IsLong", "ExecutionQuantity", "ExecutionMargin", "ExecutionPrice", });
    internal_static_injective_exchange_v1beta1_DerivativeTradeLog_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_injective_exchange_v1beta1_DerivativeTradeLog_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_DerivativeTradeLog_descriptor,
        new java.lang.String[] { "SubaccountId", "PositionDelta", "Payout", "Fee", "OrderHash", "FeeRecipientAddress", });
    internal_static_injective_exchange_v1beta1_SubaccountPosition_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_injective_exchange_v1beta1_SubaccountPosition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_SubaccountPosition_descriptor,
        new java.lang.String[] { "Position", "SubaccountId", });
    internal_static_injective_exchange_v1beta1_SubaccountDeposit_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_injective_exchange_v1beta1_SubaccountDeposit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_SubaccountDeposit_descriptor,
        new java.lang.String[] { "SubaccountId", "Deposit", });
    internal_static_injective_exchange_v1beta1_DepositUpdate_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_injective_exchange_v1beta1_DepositUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_DepositUpdate_descriptor,
        new java.lang.String[] { "Denom", "Deposits", });
    internal_static_injective_exchange_v1beta1_PointsMultiplier_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_injective_exchange_v1beta1_PointsMultiplier_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_PointsMultiplier_descriptor,
        new java.lang.String[] { "MakerPointsMultiplier", "TakerPointsMultiplier", });
    internal_static_injective_exchange_v1beta1_TradingRewardCampaignBoostInfo_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_injective_exchange_v1beta1_TradingRewardCampaignBoostInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_TradingRewardCampaignBoostInfo_descriptor,
        new java.lang.String[] { "BoostedSpotMarketIds", "SpotMarketMultipliers", "BoostedDerivativeMarketIds", "DerivativeMarketMultipliers", });
    internal_static_injective_exchange_v1beta1_CampaignRewardPool_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_injective_exchange_v1beta1_CampaignRewardPool_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_CampaignRewardPool_descriptor,
        new java.lang.String[] { "StartTimestamp", "MaxCampaignRewards", });
    internal_static_injective_exchange_v1beta1_TradingRewardCampaignInfo_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_injective_exchange_v1beta1_TradingRewardCampaignInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_TradingRewardCampaignInfo_descriptor,
        new java.lang.String[] { "CampaignDurationSeconds", "QuoteDenoms", "TradingRewardBoostInfo", "DisqualifiedMarketIds", });
    internal_static_injective_exchange_v1beta1_FeeDiscountTierInfo_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_injective_exchange_v1beta1_FeeDiscountTierInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_FeeDiscountTierInfo_descriptor,
        new java.lang.String[] { "MakerDiscountRate", "TakerDiscountRate", "StakedAmount", "Volume", });
    internal_static_injective_exchange_v1beta1_FeeDiscountSchedule_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_injective_exchange_v1beta1_FeeDiscountSchedule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_FeeDiscountSchedule_descriptor,
        new java.lang.String[] { "BucketCount", "BucketDuration", "QuoteDenoms", "TierInfos", "DisqualifiedMarketIds", });
    internal_static_injective_exchange_v1beta1_FeeDiscountTierTTL_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_injective_exchange_v1beta1_FeeDiscountTierTTL_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_FeeDiscountTierTTL_descriptor,
        new java.lang.String[] { "Tier", "TtlTimestamp", });
    internal_static_injective_exchange_v1beta1_VolumeRecord_descriptor =
      getDescriptor().getMessageTypes().get(38);
    internal_static_injective_exchange_v1beta1_VolumeRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_VolumeRecord_descriptor,
        new java.lang.String[] { "MakerVolume", "TakerVolume", });
    internal_static_injective_exchange_v1beta1_AccountRewards_descriptor =
      getDescriptor().getMessageTypes().get(39);
    internal_static_injective_exchange_v1beta1_AccountRewards_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_AccountRewards_descriptor,
        new java.lang.String[] { "Account", "Rewards", });
    internal_static_injective_exchange_v1beta1_TradeRecords_descriptor =
      getDescriptor().getMessageTypes().get(40);
    internal_static_injective_exchange_v1beta1_TradeRecords_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_TradeRecords_descriptor,
        new java.lang.String[] { "MarketId", "LatestTradeRecords", });
    internal_static_injective_exchange_v1beta1_SubaccountIDs_descriptor =
      getDescriptor().getMessageTypes().get(41);
    internal_static_injective_exchange_v1beta1_SubaccountIDs_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_SubaccountIDs_descriptor,
        new java.lang.String[] { "SubaccountIds", });
    internal_static_injective_exchange_v1beta1_TradeRecord_descriptor =
      getDescriptor().getMessageTypes().get(42);
    internal_static_injective_exchange_v1beta1_TradeRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_TradeRecord_descriptor,
        new java.lang.String[] { "Timestamp", "Price", "Quantity", });
    internal_static_injective_exchange_v1beta1_Level_descriptor =
      getDescriptor().getMessageTypes().get(43);
    internal_static_injective_exchange_v1beta1_Level_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_Level_descriptor,
        new java.lang.String[] { "P", "Q", });
    internal_static_injective_exchange_v1beta1_AggregateSubaccountVolumeRecord_descriptor =
      getDescriptor().getMessageTypes().get(44);
    internal_static_injective_exchange_v1beta1_AggregateSubaccountVolumeRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_AggregateSubaccountVolumeRecord_descriptor,
        new java.lang.String[] { "SubaccountId", "MarketVolumes", });
    internal_static_injective_exchange_v1beta1_AggregateAccountVolumeRecord_descriptor =
      getDescriptor().getMessageTypes().get(45);
    internal_static_injective_exchange_v1beta1_AggregateAccountVolumeRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_AggregateAccountVolumeRecord_descriptor,
        new java.lang.String[] { "Account", "MarketVolumes", });
    internal_static_injective_exchange_v1beta1_MarketVolume_descriptor =
      getDescriptor().getMessageTypes().get(46);
    internal_static_injective_exchange_v1beta1_MarketVolume_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_MarketVolume_descriptor,
        new java.lang.String[] { "MarketId", "Volume", });
    internal_static_injective_exchange_v1beta1_DenomDecimals_descriptor =
      getDescriptor().getMessageTypes().get(47);
    internal_static_injective_exchange_v1beta1_DenomDecimals_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_injective_exchange_v1beta1_DenomDecimals_descriptor,
        new java.lang.String[] { "Denom", "Decimals", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.enumvalueCustomname);
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.injective.oracle.v1beta1.OracleProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

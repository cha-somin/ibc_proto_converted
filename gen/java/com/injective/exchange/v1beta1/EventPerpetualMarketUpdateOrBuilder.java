// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: injective/exchange/v1beta1/events.proto

package com.injective.exchange.v1beta1;

public interface EventPerpetualMarketUpdateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:injective.exchange.v1beta1.EventPerpetualMarketUpdate)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.injective.exchange.v1beta1.DerivativeMarket market = 1 [json_name = "market", (.gogoproto.nullable) = false];</code>
   * @return Whether the market field is set.
   */
  boolean hasMarket();
  /**
   * <code>.injective.exchange.v1beta1.DerivativeMarket market = 1 [json_name = "market", (.gogoproto.nullable) = false];</code>
   * @return The market.
   */
  com.injective.exchange.v1beta1.DerivativeMarket getMarket();
  /**
   * <code>.injective.exchange.v1beta1.DerivativeMarket market = 1 [json_name = "market", (.gogoproto.nullable) = false];</code>
   */
  com.injective.exchange.v1beta1.DerivativeMarketOrBuilder getMarketOrBuilder();

  /**
   * <code>.injective.exchange.v1beta1.PerpetualMarketInfo perpetual_market_info = 2 [json_name = "perpetualMarketInfo", (.gogoproto.nullable) = true];</code>
   * @return Whether the perpetualMarketInfo field is set.
   */
  boolean hasPerpetualMarketInfo();
  /**
   * <code>.injective.exchange.v1beta1.PerpetualMarketInfo perpetual_market_info = 2 [json_name = "perpetualMarketInfo", (.gogoproto.nullable) = true];</code>
   * @return The perpetualMarketInfo.
   */
  com.injective.exchange.v1beta1.PerpetualMarketInfo getPerpetualMarketInfo();
  /**
   * <code>.injective.exchange.v1beta1.PerpetualMarketInfo perpetual_market_info = 2 [json_name = "perpetualMarketInfo", (.gogoproto.nullable) = true];</code>
   */
  com.injective.exchange.v1beta1.PerpetualMarketInfoOrBuilder getPerpetualMarketInfoOrBuilder();

  /**
   * <code>.injective.exchange.v1beta1.PerpetualMarketFunding funding = 3 [json_name = "funding", (.gogoproto.nullable) = true];</code>
   * @return Whether the funding field is set.
   */
  boolean hasFunding();
  /**
   * <code>.injective.exchange.v1beta1.PerpetualMarketFunding funding = 3 [json_name = "funding", (.gogoproto.nullable) = true];</code>
   * @return The funding.
   */
  com.injective.exchange.v1beta1.PerpetualMarketFunding getFunding();
  /**
   * <code>.injective.exchange.v1beta1.PerpetualMarketFunding funding = 3 [json_name = "funding", (.gogoproto.nullable) = true];</code>
   */
  com.injective.exchange.v1beta1.PerpetualMarketFundingOrBuilder getFundingOrBuilder();
}

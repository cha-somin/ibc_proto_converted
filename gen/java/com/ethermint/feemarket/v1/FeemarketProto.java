// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ethermint/feemarket/v1/feemarket.proto

package com.ethermint.feemarket.v1;

public final class FeemarketProto {
  private FeemarketProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ethermint_feemarket_v1_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ethermint_feemarket_v1_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&ethermint/feemarket/v1/feemarket.proto" +
      "\022\026ethermint.feemarket.v1\032\024gogoproto/gogo" +
      ".proto\"\326\003\n\006Params\022\036\n\013no_base_fee\030\001 \001(\010R\t" +
      "noBaseFee\022=\n\033base_fee_change_denominator" +
      "\030\002 \001(\rR\030baseFeeChangeDenominator\0223\n\025elas" +
      "ticity_multiplier\030\003 \001(\rR\024elasticityMulti" +
      "plier\022#\n\renable_height\030\005 \001(\003R\014enableHeig" +
      "ht\022I\n\010base_fee\030\006 \001(\tB.\310\336\037\000\332\336\037&github.com" +
      "/cosmos/cosmos-sdk/types.IntR\007baseFee\022R\n" +
      "\rmin_gas_price\030\007 \001(\tB.\310\336\037\000\332\336\037&github.com" +
      "/cosmos/cosmos-sdk/types.DecR\013minGasPric" +
      "e\022\\\n\022min_gas_multiplier\030\010 \001(\tB.\310\336\037\000\332\336\037&g" +
      "ithub.com/cosmos/cosmos-sdk/types.DecR\020m" +
      "inGasMultiplierJ\004\010\004\020\005R\020initial_base_feeB" +
      "\324\001\n\032com.ethermint.feemarket.v1B\016Feemarke" +
      "tProtoP\001Z,github.com/evmos/evmos/v13/x/f" +
      "eemarket/types\242\002\003EFX\252\002\026Ethermint.Feemark" +
      "et.V1\312\002\026Ethermint\\Feemarket\\V1\342\002\"Ethermi" +
      "nt\\Feemarket\\V1\\GPBMetadata\352\002\030Ethermint:" +
      ":Feemarket::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_ethermint_feemarket_v1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ethermint_feemarket_v1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ethermint_feemarket_v1_Params_descriptor,
        new java.lang.String[] { "NoBaseFee", "BaseFeeChangeDenominator", "ElasticityMultiplier", "EnableHeight", "BaseFee", "MinGasPrice", "MinGasMultiplier", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ethermint/evm/v1/tx.proto

package com.ethermint.evm.v1;

public interface MsgEthereumTxResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ethermint.evm.v1.MsgEthereumTxResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * hash of the ethereum transaction in hex format. This hash differs from the
   * Tendermint sha256 hash of the transaction bytes. See
   * https://github.com/tendermint/tendermint/issues/6539 for reference
   * </pre>
   *
   * <code>string hash = 1 [json_name = "hash"];</code>
   * @return The hash.
   */
  java.lang.String getHash();
  /**
   * <pre>
   * hash of the ethereum transaction in hex format. This hash differs from the
   * Tendermint sha256 hash of the transaction bytes. See
   * https://github.com/tendermint/tendermint/issues/6539 for reference
   * </pre>
   *
   * <code>string hash = 1 [json_name = "hash"];</code>
   * @return The bytes for hash.
   */
  com.google.protobuf.ByteString
      getHashBytes();

  /**
   * <pre>
   * logs contains the transaction hash and the proto-compatible ethereum
   * logs.
   * </pre>
   *
   * <code>repeated .ethermint.evm.v1.Log logs = 2 [json_name = "logs"];</code>
   */
  java.util.List<com.ethermint.evm.v1.Log> 
      getLogsList();
  /**
   * <pre>
   * logs contains the transaction hash and the proto-compatible ethereum
   * logs.
   * </pre>
   *
   * <code>repeated .ethermint.evm.v1.Log logs = 2 [json_name = "logs"];</code>
   */
  com.ethermint.evm.v1.Log getLogs(int index);
  /**
   * <pre>
   * logs contains the transaction hash and the proto-compatible ethereum
   * logs.
   * </pre>
   *
   * <code>repeated .ethermint.evm.v1.Log logs = 2 [json_name = "logs"];</code>
   */
  int getLogsCount();
  /**
   * <pre>
   * logs contains the transaction hash and the proto-compatible ethereum
   * logs.
   * </pre>
   *
   * <code>repeated .ethermint.evm.v1.Log logs = 2 [json_name = "logs"];</code>
   */
  java.util.List<? extends com.ethermint.evm.v1.LogOrBuilder> 
      getLogsOrBuilderList();
  /**
   * <pre>
   * logs contains the transaction hash and the proto-compatible ethereum
   * logs.
   * </pre>
   *
   * <code>repeated .ethermint.evm.v1.Log logs = 2 [json_name = "logs"];</code>
   */
  com.ethermint.evm.v1.LogOrBuilder getLogsOrBuilder(
      int index);

  /**
   * <pre>
   * ret is the returned data from evm function (result or data supplied with revert
   * opcode)
   * </pre>
   *
   * <code>bytes ret = 3 [json_name = "ret"];</code>
   * @return The ret.
   */
  com.google.protobuf.ByteString getRet();

  /**
   * <pre>
   * vm_error is the error returned by vm execution
   * </pre>
   *
   * <code>string vm_error = 4 [json_name = "vmError"];</code>
   * @return The vmError.
   */
  java.lang.String getVmError();
  /**
   * <pre>
   * vm_error is the error returned by vm execution
   * </pre>
   *
   * <code>string vm_error = 4 [json_name = "vmError"];</code>
   * @return The bytes for vmError.
   */
  com.google.protobuf.ByteString
      getVmErrorBytes();

  /**
   * <pre>
   * gas_used specifies how much gas was consumed by the transaction
   * </pre>
   *
   * <code>uint64 gas_used = 5 [json_name = "gasUsed"];</code>
   * @return The gasUsed.
   */
  long getGasUsed();
}

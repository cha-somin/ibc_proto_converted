// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gravity/v1/genesis.proto

package com.gravity.v1;

public final class GenesisProto {
  private GenesisProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gravity_v1_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gravity_v1_Params_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gravity_v1_GenesisState_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gravity_v1_GenesisState_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gravity_v1_GravityNonces_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gravity_v1_GravityNonces_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030gravity/v1/genesis.proto\022\ngravity.v1\032\024" +
      "gogoproto/gogo.proto\032\026gravity/v1/types.p" +
      "roto\032\025gravity/v1/msgs.proto\032\026gravity/v1/" +
      "batch.proto\032\034gravity/v1/attestation.prot" +
      "o\032\036cosmos/base/v1beta1/coin.proto\"\305\t\n\006Pa" +
      "rams\022\035\n\ngravity_id\030\001 \001(\tR\tgravityId\0220\n\024c" +
      "ontract_source_hash\030\002 \001(\tR\022contractSourc" +
      "eHash\0226\n\027bridge_ethereum_address\030\004 \001(\tR\025" +
      "bridgeEthereumAddress\022&\n\017bridge_chain_id" +
      "\030\005 \001(\004R\rbridgeChainId\0222\n\025signed_valsets_" +
      "window\030\006 \001(\004R\023signedValsetsWindow\0222\n\025sig" +
      "ned_batches_window\030\007 \001(\004R\023signedBatchesW" +
      "indow\0229\n\031signed_logic_calls_window\030\010 \001(\004" +
      "R\026signedLogicCallsWindow\0220\n\024target_batch" +
      "_timeout\030\t \001(\004R\022targetBatchTimeout\022,\n\022av" +
      "erage_block_time\030\n \001(\004R\020averageBlockTime" +
      "\022=\n\033average_ethereum_block_time\030\013 \001(\004R\030a" +
      "verageEthereumBlockTime\022b\n\025slash_fractio" +
      "n_valset\030\014 \001(\014B.\310\336\037\000\332\336\037&github.com/cosmo" +
      "s/cosmos-sdk/types.DecR\023slashFractionVal" +
      "set\022`\n\024slash_fraction_batch\030\r \001(\014B.\310\336\037\000\332" +
      "\336\037&github.com/cosmos/cosmos-sdk/types.De" +
      "cR\022slashFractionBatch\022i\n\031slash_fraction_" +
      "logic_call\030\016 \001(\014B.\310\336\037\000\332\336\037&github.com/cos" +
      "mos/cosmos-sdk/types.DecR\026slashFractionL" +
      "ogicCall\022C\n\036unbond_slashing_valsets_wind" +
      "ow\030\017 \001(\004R\033unbondSlashingValsetsWindow\022v\n" +
      " slash_fraction_bad_eth_signature\030\020 \001(\014B" +
      ".\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/ty" +
      "pes.DecR\034slashFractionBadEthSignature\022D\n" +
      "\rvalset_reward\030\021 \001(\0132\031.cosmos.base.v1bet" +
      "a1.CoinB\004\310\336\037\000R\014valsetReward\022#\n\rbridge_ac" +
      "tive\030\022 \001(\010R\014bridgeActive\022-\n\022ethereum_bla" +
      "cklist\030\023 \003(\tR\021ethereumBlacklist\022:\n\032min_c" +
      "hain_fee_basis_points\030\024 \001(\004R\026minChainFee" +
      "BasisPoints:\004\200\334 \000\"\277\007\n\014GenesisState\022*\n\006pa" +
      "rams\030\001 \001(\0132\022.gravity.v1.ParamsR\006params\022F" +
      "\n\016gravity_nonces\030\002 \001(\0132\031.gravity.v1.Grav" +
      "ityNoncesB\004\310\336\037\000R\rgravityNonces\0222\n\007valset" +
      "s\030\003 \003(\0132\022.gravity.v1.ValsetB\004\310\336\037\000R\007valse" +
      "ts\022K\n\017valset_confirms\030\004 \003(\0132\034.gravity.v1" +
      ".MsgValsetConfirmB\004\310\336\037\000R\016valsetConfirms\022" +
      ";\n\007batches\030\005 \003(\0132\033.gravity.v1.OutgoingTx" +
      "BatchB\004\310\336\037\000R\007batches\022H\n\016batch_confirms\030\006" +
      " \003(\0132\033.gravity.v1.MsgConfirmBatchB\004\310\336\037\000R" +
      "\rbatchConfirms\022D\n\013logic_calls\030\007 \003(\0132\035.gr" +
      "avity.v1.OutgoingLogicCallB\004\310\336\037\000R\nlogicC" +
      "alls\022U\n\023logic_call_confirms\030\010 \003(\0132\037.grav" +
      "ity.v1.MsgConfirmLogicCallB\004\310\336\037\000R\021logicC" +
      "allConfirms\022A\n\014attestations\030\t \003(\0132\027.grav" +
      "ity.v1.AttestationB\004\310\336\037\000R\014attestations\022P" +
      "\n\rdelegate_keys\030\n \003(\0132%.gravity.v1.MsgSe" +
      "tOrchestratorAddressB\004\310\336\037\000R\014delegateKeys" +
      "\022F\n\017erc20_to_denoms\030\013 \003(\0132\030.gravity.v1.E" +
      "RC20ToDenomB\004\310\336\037\000R\rerc20ToDenoms\022U\n\023unba" +
      "tched_transfers\030\014 \003(\0132\036.gravity.v1.Outgo" +
      "ingTransferTxB\004\310\336\037\000R\022unbatchedTransfers\022" +
      "b\n\031pending_ibc_auto_forwards\030\r \003(\0132!.gra" +
      "vity.v1.PendingIbcAutoForwardB\004\310\336\037\000R\026pen" +
      "dingIbcAutoForwards\"\360\002\n\rGravityNonces\022.\n" +
      "\023latest_valset_nonce\030\001 \001(\004R\021latestValset" +
      "Nonce\022.\n\023last_observed_nonce\030\002 \001(\004R\021last" +
      "ObservedNonce\0229\n\031last_slashed_valset_non" +
      "ce\030\003 \001(\004R\026lastSlashedValsetNonce\0227\n\030last" +
      "_slashed_batch_block\030\004 \001(\004R\025lastSlashedB" +
      "atchBlock\022@\n\035last_slashed_logic_call_blo" +
      "ck\030\005 \001(\004R\031lastSlashedLogicCallBlock\022%\n\017l" +
      "ast_tx_pool_id\030\006 \001(\004R\014lastTxPoolId\022\"\n\rla" +
      "st_batch_id\030\007 \001(\004R\013lastBatchIdB\250\001\n\016com.g" +
      "ravity.v1B\014GenesisProtoP\001Z?github.com/Gr" +
      "avity-Bridge/Gravity-Bridge/module/x/gra" +
      "vity/types\242\002\003GXX\252\002\nGravity.V1\312\002\nGravity\\" +
      "V1\342\002\026Gravity\\V1\\GPBMetadata\352\002\013Gravity::V" +
      "1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.gravity.v1.TypesProto.getDescriptor(),
          com.gravity.v1.MsgsProto.getDescriptor(),
          com.gravity.v1.BatchProto.getDescriptor(),
          com.gravity.v1.AttestationProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
        });
    internal_static_gravity_v1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gravity_v1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gravity_v1_Params_descriptor,
        new java.lang.String[] { "GravityId", "ContractSourceHash", "BridgeEthereumAddress", "BridgeChainId", "SignedValsetsWindow", "SignedBatchesWindow", "SignedLogicCallsWindow", "TargetBatchTimeout", "AverageBlockTime", "AverageEthereumBlockTime", "SlashFractionValset", "SlashFractionBatch", "SlashFractionLogicCall", "UnbondSlashingValsetsWindow", "SlashFractionBadEthSignature", "ValsetReward", "BridgeActive", "EthereumBlacklist", "MinChainFeeBasisPoints", });
    internal_static_gravity_v1_GenesisState_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_gravity_v1_GenesisState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gravity_v1_GenesisState_descriptor,
        new java.lang.String[] { "Params", "GravityNonces", "Valsets", "ValsetConfirms", "Batches", "BatchConfirms", "LogicCalls", "LogicCallConfirms", "Attestations", "DelegateKeys", "Erc20ToDenoms", "UnbatchedTransfers", "PendingIbcAutoForwards", });
    internal_static_gravity_v1_GravityNonces_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_gravity_v1_GravityNonces_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gravity_v1_GravityNonces_descriptor,
        new java.lang.String[] { "LatestValsetNonce", "LastObservedNonce", "LastSlashedValsetNonce", "LastSlashedBatchBlock", "LastSlashedLogicCallBlock", "LastTxPoolId", "LastBatchId", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stringer);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.gravity.v1.TypesProto.getDescriptor();
    com.gravity.v1.MsgsProto.getDescriptor();
    com.gravity.v1.BatchProto.getDescriptor();
    com.gravity.v1.AttestationProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

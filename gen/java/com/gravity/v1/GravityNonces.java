// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gravity/v1/genesis.proto

package com.gravity.v1;

/**
 * <pre>
 * GravityCounters contains the many noces and counters required to maintain the bridge state in the genesis
 * </pre>
 *
 * Protobuf type {@code gravity.v1.GravityNonces}
 */
public final class GravityNonces extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:gravity.v1.GravityNonces)
    GravityNoncesOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GravityNonces.newBuilder() to construct.
  private GravityNonces(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GravityNonces() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GravityNonces();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.gravity.v1.GenesisProto.internal_static_gravity_v1_GravityNonces_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.gravity.v1.GenesisProto.internal_static_gravity_v1_GravityNonces_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.gravity.v1.GravityNonces.class, com.gravity.v1.GravityNonces.Builder.class);
  }

  public static final int LATEST_VALSET_NONCE_FIELD_NUMBER = 1;
  private long latestValsetNonce_ = 0L;
  /**
   * <pre>
   * the nonce of the last generated validator set
   * </pre>
   *
   * <code>uint64 latest_valset_nonce = 1 [json_name = "latestValsetNonce"];</code>
   * @return The latestValsetNonce.
   */
  @java.lang.Override
  public long getLatestValsetNonce() {
    return latestValsetNonce_;
  }

  public static final int LAST_OBSERVED_NONCE_FIELD_NUMBER = 2;
  private long lastObservedNonce_ = 0L;
  /**
   * <pre>
   * the last observed Gravity.sol contract event nonce
   * </pre>
   *
   * <code>uint64 last_observed_nonce = 2 [json_name = "lastObservedNonce"];</code>
   * @return The lastObservedNonce.
   */
  @java.lang.Override
  public long getLastObservedNonce() {
    return lastObservedNonce_;
  }

  public static final int LAST_SLASHED_VALSET_NONCE_FIELD_NUMBER = 3;
  private long lastSlashedValsetNonce_ = 0L;
  /**
   * <pre>
   * the last valset nonce we have slashed, to prevent double slashing
   * </pre>
   *
   * <code>uint64 last_slashed_valset_nonce = 3 [json_name = "lastSlashedValsetNonce"];</code>
   * @return The lastSlashedValsetNonce.
   */
  @java.lang.Override
  public long getLastSlashedValsetNonce() {
    return lastSlashedValsetNonce_;
  }

  public static final int LAST_SLASHED_BATCH_BLOCK_FIELD_NUMBER = 4;
  private long lastSlashedBatchBlock_ = 0L;
  /**
   * <pre>
   * the last batch Cosmos chain block that batch slashing has completed for
   * there is an individual batch nonce for each token type so this removes
   * the need to store them all
   * </pre>
   *
   * <code>uint64 last_slashed_batch_block = 4 [json_name = "lastSlashedBatchBlock"];</code>
   * @return The lastSlashedBatchBlock.
   */
  @java.lang.Override
  public long getLastSlashedBatchBlock() {
    return lastSlashedBatchBlock_;
  }

  public static final int LAST_SLASHED_LOGIC_CALL_BLOCK_FIELD_NUMBER = 5;
  private long lastSlashedLogicCallBlock_ = 0L;
  /**
   * <pre>
   * the last cosmos block that logic call slashing has completed for
   * </pre>
   *
   * <code>uint64 last_slashed_logic_call_block = 5 [json_name = "lastSlashedLogicCallBlock"];</code>
   * @return The lastSlashedLogicCallBlock.
   */
  @java.lang.Override
  public long getLastSlashedLogicCallBlock() {
    return lastSlashedLogicCallBlock_;
  }

  public static final int LAST_TX_POOL_ID_FIELD_NUMBER = 6;
  private long lastTxPoolId_ = 0L;
  /**
   * <pre>
   * the last transaction id from the Gravity TX pool, this prevents ID
   * duplication during chain upgrades
   * </pre>
   *
   * <code>uint64 last_tx_pool_id = 6 [json_name = "lastTxPoolId"];</code>
   * @return The lastTxPoolId.
   */
  @java.lang.Override
  public long getLastTxPoolId() {
    return lastTxPoolId_;
  }

  public static final int LAST_BATCH_ID_FIELD_NUMBER = 7;
  private long lastBatchId_ = 0L;
  /**
   * <pre>
   * the last batch id from the Gravity batch pool, this prevents ID duplication
   * during chain upgrades
   * </pre>
   *
   * <code>uint64 last_batch_id = 7 [json_name = "lastBatchId"];</code>
   * @return The lastBatchId.
   */
  @java.lang.Override
  public long getLastBatchId() {
    return lastBatchId_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (latestValsetNonce_ != 0L) {
      output.writeUInt64(1, latestValsetNonce_);
    }
    if (lastObservedNonce_ != 0L) {
      output.writeUInt64(2, lastObservedNonce_);
    }
    if (lastSlashedValsetNonce_ != 0L) {
      output.writeUInt64(3, lastSlashedValsetNonce_);
    }
    if (lastSlashedBatchBlock_ != 0L) {
      output.writeUInt64(4, lastSlashedBatchBlock_);
    }
    if (lastSlashedLogicCallBlock_ != 0L) {
      output.writeUInt64(5, lastSlashedLogicCallBlock_);
    }
    if (lastTxPoolId_ != 0L) {
      output.writeUInt64(6, lastTxPoolId_);
    }
    if (lastBatchId_ != 0L) {
      output.writeUInt64(7, lastBatchId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (latestValsetNonce_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, latestValsetNonce_);
    }
    if (lastObservedNonce_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, lastObservedNonce_);
    }
    if (lastSlashedValsetNonce_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, lastSlashedValsetNonce_);
    }
    if (lastSlashedBatchBlock_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, lastSlashedBatchBlock_);
    }
    if (lastSlashedLogicCallBlock_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, lastSlashedLogicCallBlock_);
    }
    if (lastTxPoolId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, lastTxPoolId_);
    }
    if (lastBatchId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, lastBatchId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.gravity.v1.GravityNonces)) {
      return super.equals(obj);
    }
    com.gravity.v1.GravityNonces other = (com.gravity.v1.GravityNonces) obj;

    if (getLatestValsetNonce()
        != other.getLatestValsetNonce()) return false;
    if (getLastObservedNonce()
        != other.getLastObservedNonce()) return false;
    if (getLastSlashedValsetNonce()
        != other.getLastSlashedValsetNonce()) return false;
    if (getLastSlashedBatchBlock()
        != other.getLastSlashedBatchBlock()) return false;
    if (getLastSlashedLogicCallBlock()
        != other.getLastSlashedLogicCallBlock()) return false;
    if (getLastTxPoolId()
        != other.getLastTxPoolId()) return false;
    if (getLastBatchId()
        != other.getLastBatchId()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LATEST_VALSET_NONCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLatestValsetNonce());
    hash = (37 * hash) + LAST_OBSERVED_NONCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLastObservedNonce());
    hash = (37 * hash) + LAST_SLASHED_VALSET_NONCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLastSlashedValsetNonce());
    hash = (37 * hash) + LAST_SLASHED_BATCH_BLOCK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLastSlashedBatchBlock());
    hash = (37 * hash) + LAST_SLASHED_LOGIC_CALL_BLOCK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLastSlashedLogicCallBlock());
    hash = (37 * hash) + LAST_TX_POOL_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLastTxPoolId());
    hash = (37 * hash) + LAST_BATCH_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLastBatchId());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.gravity.v1.GravityNonces parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.gravity.v1.GravityNonces parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.gravity.v1.GravityNonces parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.gravity.v1.GravityNonces parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.gravity.v1.GravityNonces parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.gravity.v1.GravityNonces parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.gravity.v1.GravityNonces parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.gravity.v1.GravityNonces parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.gravity.v1.GravityNonces parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.gravity.v1.GravityNonces parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.gravity.v1.GravityNonces parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.gravity.v1.GravityNonces parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.gravity.v1.GravityNonces prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * GravityCounters contains the many noces and counters required to maintain the bridge state in the genesis
   * </pre>
   *
   * Protobuf type {@code gravity.v1.GravityNonces}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:gravity.v1.GravityNonces)
      com.gravity.v1.GravityNoncesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gravity.v1.GenesisProto.internal_static_gravity_v1_GravityNonces_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gravity.v1.GenesisProto.internal_static_gravity_v1_GravityNonces_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gravity.v1.GravityNonces.class, com.gravity.v1.GravityNonces.Builder.class);
    }

    // Construct using com.gravity.v1.GravityNonces.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      latestValsetNonce_ = 0L;
      lastObservedNonce_ = 0L;
      lastSlashedValsetNonce_ = 0L;
      lastSlashedBatchBlock_ = 0L;
      lastSlashedLogicCallBlock_ = 0L;
      lastTxPoolId_ = 0L;
      lastBatchId_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.gravity.v1.GenesisProto.internal_static_gravity_v1_GravityNonces_descriptor;
    }

    @java.lang.Override
    public com.gravity.v1.GravityNonces getDefaultInstanceForType() {
      return com.gravity.v1.GravityNonces.getDefaultInstance();
    }

    @java.lang.Override
    public com.gravity.v1.GravityNonces build() {
      com.gravity.v1.GravityNonces result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.gravity.v1.GravityNonces buildPartial() {
      com.gravity.v1.GravityNonces result = new com.gravity.v1.GravityNonces(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.gravity.v1.GravityNonces result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.latestValsetNonce_ = latestValsetNonce_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.lastObservedNonce_ = lastObservedNonce_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.lastSlashedValsetNonce_ = lastSlashedValsetNonce_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.lastSlashedBatchBlock_ = lastSlashedBatchBlock_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.lastSlashedLogicCallBlock_ = lastSlashedLogicCallBlock_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.lastTxPoolId_ = lastTxPoolId_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.lastBatchId_ = lastBatchId_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.gravity.v1.GravityNonces) {
        return mergeFrom((com.gravity.v1.GravityNonces)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.gravity.v1.GravityNonces other) {
      if (other == com.gravity.v1.GravityNonces.getDefaultInstance()) return this;
      if (other.getLatestValsetNonce() != 0L) {
        setLatestValsetNonce(other.getLatestValsetNonce());
      }
      if (other.getLastObservedNonce() != 0L) {
        setLastObservedNonce(other.getLastObservedNonce());
      }
      if (other.getLastSlashedValsetNonce() != 0L) {
        setLastSlashedValsetNonce(other.getLastSlashedValsetNonce());
      }
      if (other.getLastSlashedBatchBlock() != 0L) {
        setLastSlashedBatchBlock(other.getLastSlashedBatchBlock());
      }
      if (other.getLastSlashedLogicCallBlock() != 0L) {
        setLastSlashedLogicCallBlock(other.getLastSlashedLogicCallBlock());
      }
      if (other.getLastTxPoolId() != 0L) {
        setLastTxPoolId(other.getLastTxPoolId());
      }
      if (other.getLastBatchId() != 0L) {
        setLastBatchId(other.getLastBatchId());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              latestValsetNonce_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              lastObservedNonce_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              lastSlashedValsetNonce_ = input.readUInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              lastSlashedBatchBlock_ = input.readUInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              lastSlashedLogicCallBlock_ = input.readUInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              lastTxPoolId_ = input.readUInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              lastBatchId_ = input.readUInt64();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long latestValsetNonce_ ;
    /**
     * <pre>
     * the nonce of the last generated validator set
     * </pre>
     *
     * <code>uint64 latest_valset_nonce = 1 [json_name = "latestValsetNonce"];</code>
     * @return The latestValsetNonce.
     */
    @java.lang.Override
    public long getLatestValsetNonce() {
      return latestValsetNonce_;
    }
    /**
     * <pre>
     * the nonce of the last generated validator set
     * </pre>
     *
     * <code>uint64 latest_valset_nonce = 1 [json_name = "latestValsetNonce"];</code>
     * @param value The latestValsetNonce to set.
     * @return This builder for chaining.
     */
    public Builder setLatestValsetNonce(long value) {

      latestValsetNonce_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the nonce of the last generated validator set
     * </pre>
     *
     * <code>uint64 latest_valset_nonce = 1 [json_name = "latestValsetNonce"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLatestValsetNonce() {
      bitField0_ = (bitField0_ & ~0x00000001);
      latestValsetNonce_ = 0L;
      onChanged();
      return this;
    }

    private long lastObservedNonce_ ;
    /**
     * <pre>
     * the last observed Gravity.sol contract event nonce
     * </pre>
     *
     * <code>uint64 last_observed_nonce = 2 [json_name = "lastObservedNonce"];</code>
     * @return The lastObservedNonce.
     */
    @java.lang.Override
    public long getLastObservedNonce() {
      return lastObservedNonce_;
    }
    /**
     * <pre>
     * the last observed Gravity.sol contract event nonce
     * </pre>
     *
     * <code>uint64 last_observed_nonce = 2 [json_name = "lastObservedNonce"];</code>
     * @param value The lastObservedNonce to set.
     * @return This builder for chaining.
     */
    public Builder setLastObservedNonce(long value) {

      lastObservedNonce_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the last observed Gravity.sol contract event nonce
     * </pre>
     *
     * <code>uint64 last_observed_nonce = 2 [json_name = "lastObservedNonce"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLastObservedNonce() {
      bitField0_ = (bitField0_ & ~0x00000002);
      lastObservedNonce_ = 0L;
      onChanged();
      return this;
    }

    private long lastSlashedValsetNonce_ ;
    /**
     * <pre>
     * the last valset nonce we have slashed, to prevent double slashing
     * </pre>
     *
     * <code>uint64 last_slashed_valset_nonce = 3 [json_name = "lastSlashedValsetNonce"];</code>
     * @return The lastSlashedValsetNonce.
     */
    @java.lang.Override
    public long getLastSlashedValsetNonce() {
      return lastSlashedValsetNonce_;
    }
    /**
     * <pre>
     * the last valset nonce we have slashed, to prevent double slashing
     * </pre>
     *
     * <code>uint64 last_slashed_valset_nonce = 3 [json_name = "lastSlashedValsetNonce"];</code>
     * @param value The lastSlashedValsetNonce to set.
     * @return This builder for chaining.
     */
    public Builder setLastSlashedValsetNonce(long value) {

      lastSlashedValsetNonce_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the last valset nonce we have slashed, to prevent double slashing
     * </pre>
     *
     * <code>uint64 last_slashed_valset_nonce = 3 [json_name = "lastSlashedValsetNonce"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLastSlashedValsetNonce() {
      bitField0_ = (bitField0_ & ~0x00000004);
      lastSlashedValsetNonce_ = 0L;
      onChanged();
      return this;
    }

    private long lastSlashedBatchBlock_ ;
    /**
     * <pre>
     * the last batch Cosmos chain block that batch slashing has completed for
     * there is an individual batch nonce for each token type so this removes
     * the need to store them all
     * </pre>
     *
     * <code>uint64 last_slashed_batch_block = 4 [json_name = "lastSlashedBatchBlock"];</code>
     * @return The lastSlashedBatchBlock.
     */
    @java.lang.Override
    public long getLastSlashedBatchBlock() {
      return lastSlashedBatchBlock_;
    }
    /**
     * <pre>
     * the last batch Cosmos chain block that batch slashing has completed for
     * there is an individual batch nonce for each token type so this removes
     * the need to store them all
     * </pre>
     *
     * <code>uint64 last_slashed_batch_block = 4 [json_name = "lastSlashedBatchBlock"];</code>
     * @param value The lastSlashedBatchBlock to set.
     * @return This builder for chaining.
     */
    public Builder setLastSlashedBatchBlock(long value) {

      lastSlashedBatchBlock_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the last batch Cosmos chain block that batch slashing has completed for
     * there is an individual batch nonce for each token type so this removes
     * the need to store them all
     * </pre>
     *
     * <code>uint64 last_slashed_batch_block = 4 [json_name = "lastSlashedBatchBlock"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLastSlashedBatchBlock() {
      bitField0_ = (bitField0_ & ~0x00000008);
      lastSlashedBatchBlock_ = 0L;
      onChanged();
      return this;
    }

    private long lastSlashedLogicCallBlock_ ;
    /**
     * <pre>
     * the last cosmos block that logic call slashing has completed for
     * </pre>
     *
     * <code>uint64 last_slashed_logic_call_block = 5 [json_name = "lastSlashedLogicCallBlock"];</code>
     * @return The lastSlashedLogicCallBlock.
     */
    @java.lang.Override
    public long getLastSlashedLogicCallBlock() {
      return lastSlashedLogicCallBlock_;
    }
    /**
     * <pre>
     * the last cosmos block that logic call slashing has completed for
     * </pre>
     *
     * <code>uint64 last_slashed_logic_call_block = 5 [json_name = "lastSlashedLogicCallBlock"];</code>
     * @param value The lastSlashedLogicCallBlock to set.
     * @return This builder for chaining.
     */
    public Builder setLastSlashedLogicCallBlock(long value) {

      lastSlashedLogicCallBlock_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the last cosmos block that logic call slashing has completed for
     * </pre>
     *
     * <code>uint64 last_slashed_logic_call_block = 5 [json_name = "lastSlashedLogicCallBlock"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLastSlashedLogicCallBlock() {
      bitField0_ = (bitField0_ & ~0x00000010);
      lastSlashedLogicCallBlock_ = 0L;
      onChanged();
      return this;
    }

    private long lastTxPoolId_ ;
    /**
     * <pre>
     * the last transaction id from the Gravity TX pool, this prevents ID
     * duplication during chain upgrades
     * </pre>
     *
     * <code>uint64 last_tx_pool_id = 6 [json_name = "lastTxPoolId"];</code>
     * @return The lastTxPoolId.
     */
    @java.lang.Override
    public long getLastTxPoolId() {
      return lastTxPoolId_;
    }
    /**
     * <pre>
     * the last transaction id from the Gravity TX pool, this prevents ID
     * duplication during chain upgrades
     * </pre>
     *
     * <code>uint64 last_tx_pool_id = 6 [json_name = "lastTxPoolId"];</code>
     * @param value The lastTxPoolId to set.
     * @return This builder for chaining.
     */
    public Builder setLastTxPoolId(long value) {

      lastTxPoolId_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the last transaction id from the Gravity TX pool, this prevents ID
     * duplication during chain upgrades
     * </pre>
     *
     * <code>uint64 last_tx_pool_id = 6 [json_name = "lastTxPoolId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLastTxPoolId() {
      bitField0_ = (bitField0_ & ~0x00000020);
      lastTxPoolId_ = 0L;
      onChanged();
      return this;
    }

    private long lastBatchId_ ;
    /**
     * <pre>
     * the last batch id from the Gravity batch pool, this prevents ID duplication
     * during chain upgrades
     * </pre>
     *
     * <code>uint64 last_batch_id = 7 [json_name = "lastBatchId"];</code>
     * @return The lastBatchId.
     */
    @java.lang.Override
    public long getLastBatchId() {
      return lastBatchId_;
    }
    /**
     * <pre>
     * the last batch id from the Gravity batch pool, this prevents ID duplication
     * during chain upgrades
     * </pre>
     *
     * <code>uint64 last_batch_id = 7 [json_name = "lastBatchId"];</code>
     * @param value The lastBatchId to set.
     * @return This builder for chaining.
     */
    public Builder setLastBatchId(long value) {

      lastBatchId_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the last batch id from the Gravity batch pool, this prevents ID duplication
     * during chain upgrades
     * </pre>
     *
     * <code>uint64 last_batch_id = 7 [json_name = "lastBatchId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLastBatchId() {
      bitField0_ = (bitField0_ & ~0x00000040);
      lastBatchId_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:gravity.v1.GravityNonces)
  }

  // @@protoc_insertion_point(class_scope:gravity.v1.GravityNonces)
  private static final com.gravity.v1.GravityNonces DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.gravity.v1.GravityNonces();
  }

  public static com.gravity.v1.GravityNonces getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GravityNonces>
      PARSER = new com.google.protobuf.AbstractParser<GravityNonces>() {
    @java.lang.Override
    public GravityNonces parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GravityNonces> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GravityNonces> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.gravity.v1.GravityNonces getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


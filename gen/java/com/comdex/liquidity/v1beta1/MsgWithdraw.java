// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: comdex/liquidity/v1beta1/tx.proto

package com.comdex.liquidity.v1beta1;

/**
 * <pre>
 * MsgWithdraw defines an SDK message for withdrawing pool coin from the pool
 * </pre>
 *
 * Protobuf type {@code comdex.liquidity.v1beta1.MsgWithdraw}
 */
public final class MsgWithdraw extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:comdex.liquidity.v1beta1.MsgWithdraw)
    MsgWithdrawOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MsgWithdraw.newBuilder() to construct.
  private MsgWithdraw(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MsgWithdraw() {
    withdrawer_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MsgWithdraw();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.comdex.liquidity.v1beta1.TxProto.internal_static_comdex_liquidity_v1beta1_MsgWithdraw_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.comdex.liquidity.v1beta1.TxProto.internal_static_comdex_liquidity_v1beta1_MsgWithdraw_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.comdex.liquidity.v1beta1.MsgWithdraw.class, com.comdex.liquidity.v1beta1.MsgWithdraw.Builder.class);
  }

  public static final int WITHDRAWER_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object withdrawer_ = "";
  /**
   * <pre>
   * withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
   * </pre>
   *
   * <code>string withdrawer = 1 [json_name = "withdrawer"];</code>
   * @return The withdrawer.
   */
  @java.lang.Override
  public java.lang.String getWithdrawer() {
    java.lang.Object ref = withdrawer_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      withdrawer_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
   * </pre>
   *
   * <code>string withdrawer = 1 [json_name = "withdrawer"];</code>
   * @return The bytes for withdrawer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getWithdrawerBytes() {
    java.lang.Object ref = withdrawer_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      withdrawer_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int POOL_ID_FIELD_NUMBER = 2;
  private long poolId_ = 0L;
  /**
   * <pre>
   * pool_id specifies the pool id
   * </pre>
   *
   * <code>uint64 pool_id = 2 [json_name = "poolId"];</code>
   * @return The poolId.
   */
  @java.lang.Override
  public long getPoolId() {
    return poolId_;
  }

  public static final int POOL_COIN_FIELD_NUMBER = 3;
  private com.cosmos.base.v1beta1.Coin poolCoin_;
  /**
   * <pre>
   * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
   * @return Whether the poolCoin field is set.
   */
  @java.lang.Override
  public boolean hasPoolCoin() {
    return poolCoin_ != null;
  }
  /**
   * <pre>
   * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
   * @return The poolCoin.
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getPoolCoin() {
    return poolCoin_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : poolCoin_;
  }
  /**
   * <pre>
   * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getPoolCoinOrBuilder() {
    return poolCoin_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : poolCoin_;
  }

  public static final int APP_ID_FIELD_NUMBER = 4;
  private long appId_ = 0L;
  /**
   * <code>uint64 app_id = 4 [json_name = "appId"];</code>
   * @return The appId.
   */
  @java.lang.Override
  public long getAppId() {
    return appId_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(withdrawer_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, withdrawer_);
    }
    if (poolId_ != 0L) {
      output.writeUInt64(2, poolId_);
    }
    if (poolCoin_ != null) {
      output.writeMessage(3, getPoolCoin());
    }
    if (appId_ != 0L) {
      output.writeUInt64(4, appId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(withdrawer_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, withdrawer_);
    }
    if (poolId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, poolId_);
    }
    if (poolCoin_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getPoolCoin());
    }
    if (appId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, appId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.comdex.liquidity.v1beta1.MsgWithdraw)) {
      return super.equals(obj);
    }
    com.comdex.liquidity.v1beta1.MsgWithdraw other = (com.comdex.liquidity.v1beta1.MsgWithdraw) obj;

    if (!getWithdrawer()
        .equals(other.getWithdrawer())) return false;
    if (getPoolId()
        != other.getPoolId()) return false;
    if (hasPoolCoin() != other.hasPoolCoin()) return false;
    if (hasPoolCoin()) {
      if (!getPoolCoin()
          .equals(other.getPoolCoin())) return false;
    }
    if (getAppId()
        != other.getAppId()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + WITHDRAWER_FIELD_NUMBER;
    hash = (53 * hash) + getWithdrawer().hashCode();
    hash = (37 * hash) + POOL_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPoolId());
    if (hasPoolCoin()) {
      hash = (37 * hash) + POOL_COIN_FIELD_NUMBER;
      hash = (53 * hash) + getPoolCoin().hashCode();
    }
    hash = (37 * hash) + APP_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getAppId());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.comdex.liquidity.v1beta1.MsgWithdraw parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.comdex.liquidity.v1beta1.MsgWithdraw parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.comdex.liquidity.v1beta1.MsgWithdraw parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.comdex.liquidity.v1beta1.MsgWithdraw parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.comdex.liquidity.v1beta1.MsgWithdraw parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.comdex.liquidity.v1beta1.MsgWithdraw parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.comdex.liquidity.v1beta1.MsgWithdraw parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.comdex.liquidity.v1beta1.MsgWithdraw parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.comdex.liquidity.v1beta1.MsgWithdraw parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.comdex.liquidity.v1beta1.MsgWithdraw parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.comdex.liquidity.v1beta1.MsgWithdraw parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.comdex.liquidity.v1beta1.MsgWithdraw parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.comdex.liquidity.v1beta1.MsgWithdraw prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * MsgWithdraw defines an SDK message for withdrawing pool coin from the pool
   * </pre>
   *
   * Protobuf type {@code comdex.liquidity.v1beta1.MsgWithdraw}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:comdex.liquidity.v1beta1.MsgWithdraw)
      com.comdex.liquidity.v1beta1.MsgWithdrawOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.comdex.liquidity.v1beta1.TxProto.internal_static_comdex_liquidity_v1beta1_MsgWithdraw_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.comdex.liquidity.v1beta1.TxProto.internal_static_comdex_liquidity_v1beta1_MsgWithdraw_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.comdex.liquidity.v1beta1.MsgWithdraw.class, com.comdex.liquidity.v1beta1.MsgWithdraw.Builder.class);
    }

    // Construct using com.comdex.liquidity.v1beta1.MsgWithdraw.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      withdrawer_ = "";
      poolId_ = 0L;
      poolCoin_ = null;
      if (poolCoinBuilder_ != null) {
        poolCoinBuilder_.dispose();
        poolCoinBuilder_ = null;
      }
      appId_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.comdex.liquidity.v1beta1.TxProto.internal_static_comdex_liquidity_v1beta1_MsgWithdraw_descriptor;
    }

    @java.lang.Override
    public com.comdex.liquidity.v1beta1.MsgWithdraw getDefaultInstanceForType() {
      return com.comdex.liquidity.v1beta1.MsgWithdraw.getDefaultInstance();
    }

    @java.lang.Override
    public com.comdex.liquidity.v1beta1.MsgWithdraw build() {
      com.comdex.liquidity.v1beta1.MsgWithdraw result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.comdex.liquidity.v1beta1.MsgWithdraw buildPartial() {
      com.comdex.liquidity.v1beta1.MsgWithdraw result = new com.comdex.liquidity.v1beta1.MsgWithdraw(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.comdex.liquidity.v1beta1.MsgWithdraw result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.withdrawer_ = withdrawer_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.poolId_ = poolId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.poolCoin_ = poolCoinBuilder_ == null
            ? poolCoin_
            : poolCoinBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.appId_ = appId_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.comdex.liquidity.v1beta1.MsgWithdraw) {
        return mergeFrom((com.comdex.liquidity.v1beta1.MsgWithdraw)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.comdex.liquidity.v1beta1.MsgWithdraw other) {
      if (other == com.comdex.liquidity.v1beta1.MsgWithdraw.getDefaultInstance()) return this;
      if (!other.getWithdrawer().isEmpty()) {
        withdrawer_ = other.withdrawer_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getPoolId() != 0L) {
        setPoolId(other.getPoolId());
      }
      if (other.hasPoolCoin()) {
        mergePoolCoin(other.getPoolCoin());
      }
      if (other.getAppId() != 0L) {
        setAppId(other.getAppId());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              withdrawer_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              poolId_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              input.readMessage(
                  getPoolCoinFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              appId_ = input.readUInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object withdrawer_ = "";
    /**
     * <pre>
     * withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
     * </pre>
     *
     * <code>string withdrawer = 1 [json_name = "withdrawer"];</code>
     * @return The withdrawer.
     */
    public java.lang.String getWithdrawer() {
      java.lang.Object ref = withdrawer_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        withdrawer_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
     * </pre>
     *
     * <code>string withdrawer = 1 [json_name = "withdrawer"];</code>
     * @return The bytes for withdrawer.
     */
    public com.google.protobuf.ByteString
        getWithdrawerBytes() {
      java.lang.Object ref = withdrawer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        withdrawer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
     * </pre>
     *
     * <code>string withdrawer = 1 [json_name = "withdrawer"];</code>
     * @param value The withdrawer to set.
     * @return This builder for chaining.
     */
    public Builder setWithdrawer(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      withdrawer_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
     * </pre>
     *
     * <code>string withdrawer = 1 [json_name = "withdrawer"];</code>
     * @return This builder for chaining.
     */
    public Builder clearWithdrawer() {
      withdrawer_ = getDefaultInstance().getWithdrawer();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
     * </pre>
     *
     * <code>string withdrawer = 1 [json_name = "withdrawer"];</code>
     * @param value The bytes for withdrawer to set.
     * @return This builder for chaining.
     */
    public Builder setWithdrawerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      withdrawer_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private long poolId_ ;
    /**
     * <pre>
     * pool_id specifies the pool id
     * </pre>
     *
     * <code>uint64 pool_id = 2 [json_name = "poolId"];</code>
     * @return The poolId.
     */
    @java.lang.Override
    public long getPoolId() {
      return poolId_;
    }
    /**
     * <pre>
     * pool_id specifies the pool id
     * </pre>
     *
     * <code>uint64 pool_id = 2 [json_name = "poolId"];</code>
     * @param value The poolId to set.
     * @return This builder for chaining.
     */
    public Builder setPoolId(long value) {

      poolId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * pool_id specifies the pool id
     * </pre>
     *
     * <code>uint64 pool_id = 2 [json_name = "poolId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPoolId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      poolId_ = 0L;
      onChanged();
      return this;
    }

    private com.cosmos.base.v1beta1.Coin poolCoin_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> poolCoinBuilder_;
    /**
     * <pre>
     * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
     * @return Whether the poolCoin field is set.
     */
    public boolean hasPoolCoin() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
     * @return The poolCoin.
     */
    public com.cosmos.base.v1beta1.Coin getPoolCoin() {
      if (poolCoinBuilder_ == null) {
        return poolCoin_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : poolCoin_;
      } else {
        return poolCoinBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
     */
    public Builder setPoolCoin(com.cosmos.base.v1beta1.Coin value) {
      if (poolCoinBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        poolCoin_ = value;
      } else {
        poolCoinBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
     */
    public Builder setPoolCoin(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (poolCoinBuilder_ == null) {
        poolCoin_ = builderForValue.build();
      } else {
        poolCoinBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergePoolCoin(com.cosmos.base.v1beta1.Coin value) {
      if (poolCoinBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          poolCoin_ != null &&
          poolCoin_ != com.cosmos.base.v1beta1.Coin.getDefaultInstance()) {
          getPoolCoinBuilder().mergeFrom(value);
        } else {
          poolCoin_ = value;
        }
      } else {
        poolCoinBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearPoolCoin() {
      bitField0_ = (bitField0_ & ~0x00000004);
      poolCoin_ = null;
      if (poolCoinBuilder_ != null) {
        poolCoinBuilder_.dispose();
        poolCoinBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getPoolCoinBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getPoolCoinFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getPoolCoinOrBuilder() {
      if (poolCoinBuilder_ != null) {
        return poolCoinBuilder_.getMessageOrBuilder();
      } else {
        return poolCoin_ == null ?
            com.cosmos.base.v1beta1.Coin.getDefaultInstance() : poolCoin_;
      }
    }
    /**
     * <pre>
     * pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin pool_coin = 3 [json_name = "poolCoin", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getPoolCoinFieldBuilder() {
      if (poolCoinBuilder_ == null) {
        poolCoinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                getPoolCoin(),
                getParentForChildren(),
                isClean());
        poolCoin_ = null;
      }
      return poolCoinBuilder_;
    }

    private long appId_ ;
    /**
     * <code>uint64 app_id = 4 [json_name = "appId"];</code>
     * @return The appId.
     */
    @java.lang.Override
    public long getAppId() {
      return appId_;
    }
    /**
     * <code>uint64 app_id = 4 [json_name = "appId"];</code>
     * @param value The appId to set.
     * @return This builder for chaining.
     */
    public Builder setAppId(long value) {

      appId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 app_id = 4 [json_name = "appId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAppId() {
      bitField0_ = (bitField0_ & ~0x00000008);
      appId_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:comdex.liquidity.v1beta1.MsgWithdraw)
  }

  // @@protoc_insertion_point(class_scope:comdex.liquidity.v1beta1.MsgWithdraw)
  private static final com.comdex.liquidity.v1beta1.MsgWithdraw DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.comdex.liquidity.v1beta1.MsgWithdraw();
  }

  public static com.comdex.liquidity.v1beta1.MsgWithdraw getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MsgWithdraw>
      PARSER = new com.google.protobuf.AbstractParser<MsgWithdraw>() {
    @java.lang.Override
    public MsgWithdraw parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MsgWithdraw> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MsgWithdraw> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.comdex.liquidity.v1beta1.MsgWithdraw getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


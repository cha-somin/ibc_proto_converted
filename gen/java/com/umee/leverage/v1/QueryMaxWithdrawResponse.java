// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: umee/leverage/v1/query.proto

package com.umee.leverage.v1;

/**
 * <pre>
 * QueryMaxWithdrawResponse defines the response structure for the MaxWithdraw gRPC service handler.
 * </pre>
 *
 * Protobuf type {@code umee.leverage.v1.QueryMaxWithdrawResponse}
 */
public final class QueryMaxWithdrawResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:umee.leverage.v1.QueryMaxWithdrawResponse)
    QueryMaxWithdrawResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use QueryMaxWithdrawResponse.newBuilder() to construct.
  private QueryMaxWithdrawResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private QueryMaxWithdrawResponse() {
    uTokens_ = java.util.Collections.emptyList();
    tokens_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new QueryMaxWithdrawResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.umee.leverage.v1.QueryProto.internal_static_umee_leverage_v1_QueryMaxWithdrawResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.umee.leverage.v1.QueryProto.internal_static_umee_leverage_v1_QueryMaxWithdrawResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.umee.leverage.v1.QueryMaxWithdrawResponse.class, com.umee.leverage.v1.QueryMaxWithdrawResponse.Builder.class);
  }

  public static final int UTOKENS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> uTokens_;
  /**
   * <pre>
   * uTokens is the maximum amount of uTokens that can be withdrawn
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getUTokensList() {
    return uTokens_;
  }
  /**
   * <pre>
   * uTokens is the maximum amount of uTokens that can be withdrawn
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getUTokensOrBuilderList() {
    return uTokens_;
  }
  /**
   * <pre>
   * uTokens is the maximum amount of uTokens that can be withdrawn
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getUTokensCount() {
    return uTokens_.size();
  }
  /**
   * <pre>
   * uTokens is the maximum amount of uTokens that can be withdrawn
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getUTokens(int index) {
    return uTokens_.get(index);
  }
  /**
   * <pre>
   * uTokens is the maximum amount of uTokens that can be withdrawn
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getUTokensOrBuilder(
      int index) {
    return uTokens_.get(index);
  }

  public static final int TOKENS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> tokens_;
  /**
   * <pre>
   * Tokens is the equivalent of max uTokens converted to base tokens
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getTokensList() {
    return tokens_;
  }
  /**
   * <pre>
   * Tokens is the equivalent of max uTokens converted to base tokens
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getTokensOrBuilderList() {
    return tokens_;
  }
  /**
   * <pre>
   * Tokens is the equivalent of max uTokens converted to base tokens
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getTokensCount() {
    return tokens_.size();
  }
  /**
   * <pre>
   * Tokens is the equivalent of max uTokens converted to base tokens
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getTokens(int index) {
    return tokens_.get(index);
  }
  /**
   * <pre>
   * Tokens is the equivalent of max uTokens converted to base tokens
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getTokensOrBuilder(
      int index) {
    return tokens_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < uTokens_.size(); i++) {
      output.writeMessage(1, uTokens_.get(i));
    }
    for (int i = 0; i < tokens_.size(); i++) {
      output.writeMessage(2, tokens_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < uTokens_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, uTokens_.get(i));
    }
    for (int i = 0; i < tokens_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, tokens_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.umee.leverage.v1.QueryMaxWithdrawResponse)) {
      return super.equals(obj);
    }
    com.umee.leverage.v1.QueryMaxWithdrawResponse other = (com.umee.leverage.v1.QueryMaxWithdrawResponse) obj;

    if (!getUTokensList()
        .equals(other.getUTokensList())) return false;
    if (!getTokensList()
        .equals(other.getTokensList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getUTokensCount() > 0) {
      hash = (37 * hash) + UTOKENS_FIELD_NUMBER;
      hash = (53 * hash) + getUTokensList().hashCode();
    }
    if (getTokensCount() > 0) {
      hash = (37 * hash) + TOKENS_FIELD_NUMBER;
      hash = (53 * hash) + getTokensList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.umee.leverage.v1.QueryMaxWithdrawResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.umee.leverage.v1.QueryMaxWithdrawResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.umee.leverage.v1.QueryMaxWithdrawResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.umee.leverage.v1.QueryMaxWithdrawResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.umee.leverage.v1.QueryMaxWithdrawResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.umee.leverage.v1.QueryMaxWithdrawResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.umee.leverage.v1.QueryMaxWithdrawResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.umee.leverage.v1.QueryMaxWithdrawResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.umee.leverage.v1.QueryMaxWithdrawResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.umee.leverage.v1.QueryMaxWithdrawResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.umee.leverage.v1.QueryMaxWithdrawResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.umee.leverage.v1.QueryMaxWithdrawResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.umee.leverage.v1.QueryMaxWithdrawResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * QueryMaxWithdrawResponse defines the response structure for the MaxWithdraw gRPC service handler.
   * </pre>
   *
   * Protobuf type {@code umee.leverage.v1.QueryMaxWithdrawResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:umee.leverage.v1.QueryMaxWithdrawResponse)
      com.umee.leverage.v1.QueryMaxWithdrawResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.umee.leverage.v1.QueryProto.internal_static_umee_leverage_v1_QueryMaxWithdrawResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.umee.leverage.v1.QueryProto.internal_static_umee_leverage_v1_QueryMaxWithdrawResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.umee.leverage.v1.QueryMaxWithdrawResponse.class, com.umee.leverage.v1.QueryMaxWithdrawResponse.Builder.class);
    }

    // Construct using com.umee.leverage.v1.QueryMaxWithdrawResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (uTokensBuilder_ == null) {
        uTokens_ = java.util.Collections.emptyList();
      } else {
        uTokens_ = null;
        uTokensBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (tokensBuilder_ == null) {
        tokens_ = java.util.Collections.emptyList();
      } else {
        tokens_ = null;
        tokensBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.umee.leverage.v1.QueryProto.internal_static_umee_leverage_v1_QueryMaxWithdrawResponse_descriptor;
    }

    @java.lang.Override
    public com.umee.leverage.v1.QueryMaxWithdrawResponse getDefaultInstanceForType() {
      return com.umee.leverage.v1.QueryMaxWithdrawResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.umee.leverage.v1.QueryMaxWithdrawResponse build() {
      com.umee.leverage.v1.QueryMaxWithdrawResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.umee.leverage.v1.QueryMaxWithdrawResponse buildPartial() {
      com.umee.leverage.v1.QueryMaxWithdrawResponse result = new com.umee.leverage.v1.QueryMaxWithdrawResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.umee.leverage.v1.QueryMaxWithdrawResponse result) {
      if (uTokensBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          uTokens_ = java.util.Collections.unmodifiableList(uTokens_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.uTokens_ = uTokens_;
      } else {
        result.uTokens_ = uTokensBuilder_.build();
      }
      if (tokensBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          tokens_ = java.util.Collections.unmodifiableList(tokens_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.tokens_ = tokens_;
      } else {
        result.tokens_ = tokensBuilder_.build();
      }
    }

    private void buildPartial0(com.umee.leverage.v1.QueryMaxWithdrawResponse result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.umee.leverage.v1.QueryMaxWithdrawResponse) {
        return mergeFrom((com.umee.leverage.v1.QueryMaxWithdrawResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.umee.leverage.v1.QueryMaxWithdrawResponse other) {
      if (other == com.umee.leverage.v1.QueryMaxWithdrawResponse.getDefaultInstance()) return this;
      if (uTokensBuilder_ == null) {
        if (!other.uTokens_.isEmpty()) {
          if (uTokens_.isEmpty()) {
            uTokens_ = other.uTokens_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUTokensIsMutable();
            uTokens_.addAll(other.uTokens_);
          }
          onChanged();
        }
      } else {
        if (!other.uTokens_.isEmpty()) {
          if (uTokensBuilder_.isEmpty()) {
            uTokensBuilder_.dispose();
            uTokensBuilder_ = null;
            uTokens_ = other.uTokens_;
            bitField0_ = (bitField0_ & ~0x00000001);
            uTokensBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getUTokensFieldBuilder() : null;
          } else {
            uTokensBuilder_.addAllMessages(other.uTokens_);
          }
        }
      }
      if (tokensBuilder_ == null) {
        if (!other.tokens_.isEmpty()) {
          if (tokens_.isEmpty()) {
            tokens_ = other.tokens_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTokensIsMutable();
            tokens_.addAll(other.tokens_);
          }
          onChanged();
        }
      } else {
        if (!other.tokens_.isEmpty()) {
          if (tokensBuilder_.isEmpty()) {
            tokensBuilder_.dispose();
            tokensBuilder_ = null;
            tokens_ = other.tokens_;
            bitField0_ = (bitField0_ & ~0x00000002);
            tokensBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTokensFieldBuilder() : null;
          } else {
            tokensBuilder_.addAllMessages(other.tokens_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (uTokensBuilder_ == null) {
                ensureUTokensIsMutable();
                uTokens_.add(m);
              } else {
                uTokensBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (tokensBuilder_ == null) {
                ensureTokensIsMutable();
                tokens_.add(m);
              } else {
                tokensBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.cosmos.base.v1beta1.Coin> uTokens_ =
      java.util.Collections.emptyList();
    private void ensureUTokensIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        uTokens_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(uTokens_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> uTokensBuilder_;

    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getUTokensList() {
      if (uTokensBuilder_ == null) {
        return java.util.Collections.unmodifiableList(uTokens_);
      } else {
        return uTokensBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getUTokensCount() {
      if (uTokensBuilder_ == null) {
        return uTokens_.size();
      } else {
        return uTokensBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getUTokens(int index) {
      if (uTokensBuilder_ == null) {
        return uTokens_.get(index);
      } else {
        return uTokensBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setUTokens(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (uTokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUTokensIsMutable();
        uTokens_.set(index, value);
        onChanged();
      } else {
        uTokensBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setUTokens(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (uTokensBuilder_ == null) {
        ensureUTokensIsMutable();
        uTokens_.set(index, builderForValue.build());
        onChanged();
      } else {
        uTokensBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addUTokens(com.cosmos.base.v1beta1.Coin value) {
      if (uTokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUTokensIsMutable();
        uTokens_.add(value);
        onChanged();
      } else {
        uTokensBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addUTokens(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (uTokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUTokensIsMutable();
        uTokens_.add(index, value);
        onChanged();
      } else {
        uTokensBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addUTokens(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (uTokensBuilder_ == null) {
        ensureUTokensIsMutable();
        uTokens_.add(builderForValue.build());
        onChanged();
      } else {
        uTokensBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addUTokens(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (uTokensBuilder_ == null) {
        ensureUTokensIsMutable();
        uTokens_.add(index, builderForValue.build());
        onChanged();
      } else {
        uTokensBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllUTokens(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (uTokensBuilder_ == null) {
        ensureUTokensIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uTokens_);
        onChanged();
      } else {
        uTokensBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearUTokens() {
      if (uTokensBuilder_ == null) {
        uTokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        uTokensBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeUTokens(int index) {
      if (uTokensBuilder_ == null) {
        ensureUTokensIsMutable();
        uTokens_.remove(index);
        onChanged();
      } else {
        uTokensBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getUTokensBuilder(
        int index) {
      return getUTokensFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getUTokensOrBuilder(
        int index) {
      if (uTokensBuilder_ == null) {
        return uTokens_.get(index);  } else {
        return uTokensBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getUTokensOrBuilderList() {
      if (uTokensBuilder_ != null) {
        return uTokensBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(uTokens_);
      }
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addUTokensBuilder() {
      return getUTokensFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addUTokensBuilder(
        int index) {
      return getUTokensFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * uTokens is the maximum amount of uTokens that can be withdrawn
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin uTokens = 1 [json_name = "uTokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getUTokensBuilderList() {
      return getUTokensFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getUTokensFieldBuilder() {
      if (uTokensBuilder_ == null) {
        uTokensBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                uTokens_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        uTokens_ = null;
      }
      return uTokensBuilder_;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> tokens_ =
      java.util.Collections.emptyList();
    private void ensureTokensIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        tokens_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(tokens_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> tokensBuilder_;

    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getTokensList() {
      if (tokensBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tokens_);
      } else {
        return tokensBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getTokensCount() {
      if (tokensBuilder_ == null) {
        return tokens_.size();
      } else {
        return tokensBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getTokens(int index) {
      if (tokensBuilder_ == null) {
        return tokens_.get(index);
      } else {
        return tokensBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setTokens(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (tokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokensIsMutable();
        tokens_.set(index, value);
        onChanged();
      } else {
        tokensBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setTokens(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        tokens_.set(index, builderForValue.build());
        onChanged();
      } else {
        tokensBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addTokens(com.cosmos.base.v1beta1.Coin value) {
      if (tokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokensIsMutable();
        tokens_.add(value);
        onChanged();
      } else {
        tokensBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addTokens(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (tokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokensIsMutable();
        tokens_.add(index, value);
        onChanged();
      } else {
        tokensBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addTokens(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        tokens_.add(builderForValue.build());
        onChanged();
      } else {
        tokensBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addTokens(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        tokens_.add(index, builderForValue.build());
        onChanged();
      } else {
        tokensBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllTokens(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tokens_);
        onChanged();
      } else {
        tokensBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearTokens() {
      if (tokensBuilder_ == null) {
        tokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        tokensBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeTokens(int index) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        tokens_.remove(index);
        onChanged();
      } else {
        tokensBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getTokensBuilder(
        int index) {
      return getTokensFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getTokensOrBuilder(
        int index) {
      if (tokensBuilder_ == null) {
        return tokens_.get(index);  } else {
        return tokensBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getTokensOrBuilderList() {
      if (tokensBuilder_ != null) {
        return tokensBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tokens_);
      }
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addTokensBuilder() {
      return getTokensFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addTokensBuilder(
        int index) {
      return getTokensFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * Tokens is the equivalent of max uTokens converted to base tokens
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin tokens = 2 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getTokensBuilderList() {
      return getTokensFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getTokensFieldBuilder() {
      if (tokensBuilder_ == null) {
        tokensBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                tokens_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        tokens_ = null;
      }
      return tokensBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:umee.leverage.v1.QueryMaxWithdrawResponse)
  }

  // @@protoc_insertion_point(class_scope:umee.leverage.v1.QueryMaxWithdrawResponse)
  private static final com.umee.leverage.v1.QueryMaxWithdrawResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.umee.leverage.v1.QueryMaxWithdrawResponse();
  }

  public static com.umee.leverage.v1.QueryMaxWithdrawResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<QueryMaxWithdrawResponse>
      PARSER = new com.google.protobuf.AbstractParser<QueryMaxWithdrawResponse>() {
    @java.lang.Override
    public QueryMaxWithdrawResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<QueryMaxWithdrawResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<QueryMaxWithdrawResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.umee.leverage.v1.QueryMaxWithdrawResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


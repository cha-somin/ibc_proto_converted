// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: umee/leverage/v1/tx.proto

package com.umee.leverage.v1;

/**
 * <pre>
 * MsgLiquidateResponse defines the Msg/Liquidate response type.
 * </pre>
 *
 * Protobuf type {@code umee.leverage.v1.MsgLiquidateResponse}
 */
public final class MsgLiquidateResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:umee.leverage.v1.MsgLiquidateResponse)
    MsgLiquidateResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MsgLiquidateResponse.newBuilder() to construct.
  private MsgLiquidateResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MsgLiquidateResponse() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MsgLiquidateResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.umee.leverage.v1.TxProto.internal_static_umee_leverage_v1_MsgLiquidateResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.umee.leverage.v1.TxProto.internal_static_umee_leverage_v1_MsgLiquidateResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.umee.leverage.v1.MsgLiquidateResponse.class, com.umee.leverage.v1.MsgLiquidateResponse.Builder.class);
  }

  public static final int REPAID_FIELD_NUMBER = 1;
  private com.cosmos.base.v1beta1.Coin repaid_;
  /**
   * <pre>
   * Repaid is the amount of borrowed base tokens that the liquidator repaid
   * to the module on behalf of the borrower.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin repaid = 1 [json_name = "repaid", (.gogoproto.nullable) = false];</code>
   * @return Whether the repaid field is set.
   */
  @java.lang.Override
  public boolean hasRepaid() {
    return repaid_ != null;
  }
  /**
   * <pre>
   * Repaid is the amount of borrowed base tokens that the liquidator repaid
   * to the module on behalf of the borrower.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin repaid = 1 [json_name = "repaid", (.gogoproto.nullable) = false];</code>
   * @return The repaid.
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getRepaid() {
    return repaid_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : repaid_;
  }
  /**
   * <pre>
   * Repaid is the amount of borrowed base tokens that the liquidator repaid
   * to the module on behalf of the borrower.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin repaid = 1 [json_name = "repaid", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getRepaidOrBuilder() {
    return repaid_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : repaid_;
  }

  public static final int COLLATERAL_FIELD_NUMBER = 2;
  private com.cosmos.base.v1beta1.Coin collateral_;
  /**
   * <pre>
   * Collateral is the amount of the borrower's uToken collateral that
   * was liquidated.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin collateral = 2 [json_name = "collateral", (.gogoproto.nullable) = false];</code>
   * @return Whether the collateral field is set.
   */
  @java.lang.Override
  public boolean hasCollateral() {
    return collateral_ != null;
  }
  /**
   * <pre>
   * Collateral is the amount of the borrower's uToken collateral that
   * was liquidated.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin collateral = 2 [json_name = "collateral", (.gogoproto.nullable) = false];</code>
   * @return The collateral.
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getCollateral() {
    return collateral_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : collateral_;
  }
  /**
   * <pre>
   * Collateral is the amount of the borrower's uToken collateral that
   * was liquidated.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin collateral = 2 [json_name = "collateral", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getCollateralOrBuilder() {
    return collateral_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : collateral_;
  }

  public static final int REWARD_FIELD_NUMBER = 3;
  private com.cosmos.base.v1beta1.Coin reward_;
  /**
   * <pre>
   * Reward is the amount of base tokens that the liquidator received from
   * the module as reward for the liquidation.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin reward = 3 [json_name = "reward", (.gogoproto.nullable) = false];</code>
   * @return Whether the reward field is set.
   */
  @java.lang.Override
  public boolean hasReward() {
    return reward_ != null;
  }
  /**
   * <pre>
   * Reward is the amount of base tokens that the liquidator received from
   * the module as reward for the liquidation.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin reward = 3 [json_name = "reward", (.gogoproto.nullable) = false];</code>
   * @return The reward.
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getReward() {
    return reward_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : reward_;
  }
  /**
   * <pre>
   * Reward is the amount of base tokens that the liquidator received from
   * the module as reward for the liquidation.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin reward = 3 [json_name = "reward", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getRewardOrBuilder() {
    return reward_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : reward_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (repaid_ != null) {
      output.writeMessage(1, getRepaid());
    }
    if (collateral_ != null) {
      output.writeMessage(2, getCollateral());
    }
    if (reward_ != null) {
      output.writeMessage(3, getReward());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (repaid_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getRepaid());
    }
    if (collateral_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getCollateral());
    }
    if (reward_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getReward());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.umee.leverage.v1.MsgLiquidateResponse)) {
      return super.equals(obj);
    }
    com.umee.leverage.v1.MsgLiquidateResponse other = (com.umee.leverage.v1.MsgLiquidateResponse) obj;

    if (hasRepaid() != other.hasRepaid()) return false;
    if (hasRepaid()) {
      if (!getRepaid()
          .equals(other.getRepaid())) return false;
    }
    if (hasCollateral() != other.hasCollateral()) return false;
    if (hasCollateral()) {
      if (!getCollateral()
          .equals(other.getCollateral())) return false;
    }
    if (hasReward() != other.hasReward()) return false;
    if (hasReward()) {
      if (!getReward()
          .equals(other.getReward())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRepaid()) {
      hash = (37 * hash) + REPAID_FIELD_NUMBER;
      hash = (53 * hash) + getRepaid().hashCode();
    }
    if (hasCollateral()) {
      hash = (37 * hash) + COLLATERAL_FIELD_NUMBER;
      hash = (53 * hash) + getCollateral().hashCode();
    }
    if (hasReward()) {
      hash = (37 * hash) + REWARD_FIELD_NUMBER;
      hash = (53 * hash) + getReward().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.umee.leverage.v1.MsgLiquidateResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.umee.leverage.v1.MsgLiquidateResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.umee.leverage.v1.MsgLiquidateResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.umee.leverage.v1.MsgLiquidateResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.umee.leverage.v1.MsgLiquidateResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.umee.leverage.v1.MsgLiquidateResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.umee.leverage.v1.MsgLiquidateResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.umee.leverage.v1.MsgLiquidateResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.umee.leverage.v1.MsgLiquidateResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.umee.leverage.v1.MsgLiquidateResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.umee.leverage.v1.MsgLiquidateResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.umee.leverage.v1.MsgLiquidateResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.umee.leverage.v1.MsgLiquidateResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * MsgLiquidateResponse defines the Msg/Liquidate response type.
   * </pre>
   *
   * Protobuf type {@code umee.leverage.v1.MsgLiquidateResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:umee.leverage.v1.MsgLiquidateResponse)
      com.umee.leverage.v1.MsgLiquidateResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.umee.leverage.v1.TxProto.internal_static_umee_leverage_v1_MsgLiquidateResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.umee.leverage.v1.TxProto.internal_static_umee_leverage_v1_MsgLiquidateResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.umee.leverage.v1.MsgLiquidateResponse.class, com.umee.leverage.v1.MsgLiquidateResponse.Builder.class);
    }

    // Construct using com.umee.leverage.v1.MsgLiquidateResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      repaid_ = null;
      if (repaidBuilder_ != null) {
        repaidBuilder_.dispose();
        repaidBuilder_ = null;
      }
      collateral_ = null;
      if (collateralBuilder_ != null) {
        collateralBuilder_.dispose();
        collateralBuilder_ = null;
      }
      reward_ = null;
      if (rewardBuilder_ != null) {
        rewardBuilder_.dispose();
        rewardBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.umee.leverage.v1.TxProto.internal_static_umee_leverage_v1_MsgLiquidateResponse_descriptor;
    }

    @java.lang.Override
    public com.umee.leverage.v1.MsgLiquidateResponse getDefaultInstanceForType() {
      return com.umee.leverage.v1.MsgLiquidateResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.umee.leverage.v1.MsgLiquidateResponse build() {
      com.umee.leverage.v1.MsgLiquidateResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.umee.leverage.v1.MsgLiquidateResponse buildPartial() {
      com.umee.leverage.v1.MsgLiquidateResponse result = new com.umee.leverage.v1.MsgLiquidateResponse(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.umee.leverage.v1.MsgLiquidateResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.repaid_ = repaidBuilder_ == null
            ? repaid_
            : repaidBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.collateral_ = collateralBuilder_ == null
            ? collateral_
            : collateralBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.reward_ = rewardBuilder_ == null
            ? reward_
            : rewardBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.umee.leverage.v1.MsgLiquidateResponse) {
        return mergeFrom((com.umee.leverage.v1.MsgLiquidateResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.umee.leverage.v1.MsgLiquidateResponse other) {
      if (other == com.umee.leverage.v1.MsgLiquidateResponse.getDefaultInstance()) return this;
      if (other.hasRepaid()) {
        mergeRepaid(other.getRepaid());
      }
      if (other.hasCollateral()) {
        mergeCollateral(other.getCollateral());
      }
      if (other.hasReward()) {
        mergeReward(other.getReward());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getRepaidFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getCollateralFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getRewardFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.cosmos.base.v1beta1.Coin repaid_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> repaidBuilder_;
    /**
     * <pre>
     * Repaid is the amount of borrowed base tokens that the liquidator repaid
     * to the module on behalf of the borrower.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin repaid = 1 [json_name = "repaid", (.gogoproto.nullable) = false];</code>
     * @return Whether the repaid field is set.
     */
    public boolean hasRepaid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Repaid is the amount of borrowed base tokens that the liquidator repaid
     * to the module on behalf of the borrower.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin repaid = 1 [json_name = "repaid", (.gogoproto.nullable) = false];</code>
     * @return The repaid.
     */
    public com.cosmos.base.v1beta1.Coin getRepaid() {
      if (repaidBuilder_ == null) {
        return repaid_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : repaid_;
      } else {
        return repaidBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Repaid is the amount of borrowed base tokens that the liquidator repaid
     * to the module on behalf of the borrower.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin repaid = 1 [json_name = "repaid", (.gogoproto.nullable) = false];</code>
     */
    public Builder setRepaid(com.cosmos.base.v1beta1.Coin value) {
      if (repaidBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        repaid_ = value;
      } else {
        repaidBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Repaid is the amount of borrowed base tokens that the liquidator repaid
     * to the module on behalf of the borrower.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin repaid = 1 [json_name = "repaid", (.gogoproto.nullable) = false];</code>
     */
    public Builder setRepaid(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (repaidBuilder_ == null) {
        repaid_ = builderForValue.build();
      } else {
        repaidBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Repaid is the amount of borrowed base tokens that the liquidator repaid
     * to the module on behalf of the borrower.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin repaid = 1 [json_name = "repaid", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeRepaid(com.cosmos.base.v1beta1.Coin value) {
      if (repaidBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          repaid_ != null &&
          repaid_ != com.cosmos.base.v1beta1.Coin.getDefaultInstance()) {
          getRepaidBuilder().mergeFrom(value);
        } else {
          repaid_ = value;
        }
      } else {
        repaidBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Repaid is the amount of borrowed base tokens that the liquidator repaid
     * to the module on behalf of the borrower.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin repaid = 1 [json_name = "repaid", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearRepaid() {
      bitField0_ = (bitField0_ & ~0x00000001);
      repaid_ = null;
      if (repaidBuilder_ != null) {
        repaidBuilder_.dispose();
        repaidBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Repaid is the amount of borrowed base tokens that the liquidator repaid
     * to the module on behalf of the borrower.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin repaid = 1 [json_name = "repaid", (.gogoproto.nullable) = false];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getRepaidBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getRepaidFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Repaid is the amount of borrowed base tokens that the liquidator repaid
     * to the module on behalf of the borrower.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin repaid = 1 [json_name = "repaid", (.gogoproto.nullable) = false];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getRepaidOrBuilder() {
      if (repaidBuilder_ != null) {
        return repaidBuilder_.getMessageOrBuilder();
      } else {
        return repaid_ == null ?
            com.cosmos.base.v1beta1.Coin.getDefaultInstance() : repaid_;
      }
    }
    /**
     * <pre>
     * Repaid is the amount of borrowed base tokens that the liquidator repaid
     * to the module on behalf of the borrower.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin repaid = 1 [json_name = "repaid", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getRepaidFieldBuilder() {
      if (repaidBuilder_ == null) {
        repaidBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                getRepaid(),
                getParentForChildren(),
                isClean());
        repaid_ = null;
      }
      return repaidBuilder_;
    }

    private com.cosmos.base.v1beta1.Coin collateral_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> collateralBuilder_;
    /**
     * <pre>
     * Collateral is the amount of the borrower's uToken collateral that
     * was liquidated.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin collateral = 2 [json_name = "collateral", (.gogoproto.nullable) = false];</code>
     * @return Whether the collateral field is set.
     */
    public boolean hasCollateral() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Collateral is the amount of the borrower's uToken collateral that
     * was liquidated.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin collateral = 2 [json_name = "collateral", (.gogoproto.nullable) = false];</code>
     * @return The collateral.
     */
    public com.cosmos.base.v1beta1.Coin getCollateral() {
      if (collateralBuilder_ == null) {
        return collateral_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : collateral_;
      } else {
        return collateralBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Collateral is the amount of the borrower's uToken collateral that
     * was liquidated.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin collateral = 2 [json_name = "collateral", (.gogoproto.nullable) = false];</code>
     */
    public Builder setCollateral(com.cosmos.base.v1beta1.Coin value) {
      if (collateralBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        collateral_ = value;
      } else {
        collateralBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Collateral is the amount of the borrower's uToken collateral that
     * was liquidated.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin collateral = 2 [json_name = "collateral", (.gogoproto.nullable) = false];</code>
     */
    public Builder setCollateral(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (collateralBuilder_ == null) {
        collateral_ = builderForValue.build();
      } else {
        collateralBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Collateral is the amount of the borrower's uToken collateral that
     * was liquidated.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin collateral = 2 [json_name = "collateral", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeCollateral(com.cosmos.base.v1beta1.Coin value) {
      if (collateralBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          collateral_ != null &&
          collateral_ != com.cosmos.base.v1beta1.Coin.getDefaultInstance()) {
          getCollateralBuilder().mergeFrom(value);
        } else {
          collateral_ = value;
        }
      } else {
        collateralBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Collateral is the amount of the borrower's uToken collateral that
     * was liquidated.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin collateral = 2 [json_name = "collateral", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearCollateral() {
      bitField0_ = (bitField0_ & ~0x00000002);
      collateral_ = null;
      if (collateralBuilder_ != null) {
        collateralBuilder_.dispose();
        collateralBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Collateral is the amount of the borrower's uToken collateral that
     * was liquidated.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin collateral = 2 [json_name = "collateral", (.gogoproto.nullable) = false];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getCollateralBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getCollateralFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Collateral is the amount of the borrower's uToken collateral that
     * was liquidated.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin collateral = 2 [json_name = "collateral", (.gogoproto.nullable) = false];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getCollateralOrBuilder() {
      if (collateralBuilder_ != null) {
        return collateralBuilder_.getMessageOrBuilder();
      } else {
        return collateral_ == null ?
            com.cosmos.base.v1beta1.Coin.getDefaultInstance() : collateral_;
      }
    }
    /**
     * <pre>
     * Collateral is the amount of the borrower's uToken collateral that
     * was liquidated.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin collateral = 2 [json_name = "collateral", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getCollateralFieldBuilder() {
      if (collateralBuilder_ == null) {
        collateralBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                getCollateral(),
                getParentForChildren(),
                isClean());
        collateral_ = null;
      }
      return collateralBuilder_;
    }

    private com.cosmos.base.v1beta1.Coin reward_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> rewardBuilder_;
    /**
     * <pre>
     * Reward is the amount of base tokens that the liquidator received from
     * the module as reward for the liquidation.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin reward = 3 [json_name = "reward", (.gogoproto.nullable) = false];</code>
     * @return Whether the reward field is set.
     */
    public boolean hasReward() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Reward is the amount of base tokens that the liquidator received from
     * the module as reward for the liquidation.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin reward = 3 [json_name = "reward", (.gogoproto.nullable) = false];</code>
     * @return The reward.
     */
    public com.cosmos.base.v1beta1.Coin getReward() {
      if (rewardBuilder_ == null) {
        return reward_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : reward_;
      } else {
        return rewardBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Reward is the amount of base tokens that the liquidator received from
     * the module as reward for the liquidation.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin reward = 3 [json_name = "reward", (.gogoproto.nullable) = false];</code>
     */
    public Builder setReward(com.cosmos.base.v1beta1.Coin value) {
      if (rewardBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        reward_ = value;
      } else {
        rewardBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reward is the amount of base tokens that the liquidator received from
     * the module as reward for the liquidation.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin reward = 3 [json_name = "reward", (.gogoproto.nullable) = false];</code>
     */
    public Builder setReward(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (rewardBuilder_ == null) {
        reward_ = builderForValue.build();
      } else {
        rewardBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reward is the amount of base tokens that the liquidator received from
     * the module as reward for the liquidation.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin reward = 3 [json_name = "reward", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeReward(com.cosmos.base.v1beta1.Coin value) {
      if (rewardBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          reward_ != null &&
          reward_ != com.cosmos.base.v1beta1.Coin.getDefaultInstance()) {
          getRewardBuilder().mergeFrom(value);
        } else {
          reward_ = value;
        }
      } else {
        rewardBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reward is the amount of base tokens that the liquidator received from
     * the module as reward for the liquidation.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin reward = 3 [json_name = "reward", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearReward() {
      bitField0_ = (bitField0_ & ~0x00000004);
      reward_ = null;
      if (rewardBuilder_ != null) {
        rewardBuilder_.dispose();
        rewardBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reward is the amount of base tokens that the liquidator received from
     * the module as reward for the liquidation.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin reward = 3 [json_name = "reward", (.gogoproto.nullable) = false];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getRewardBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getRewardFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Reward is the amount of base tokens that the liquidator received from
     * the module as reward for the liquidation.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin reward = 3 [json_name = "reward", (.gogoproto.nullable) = false];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getRewardOrBuilder() {
      if (rewardBuilder_ != null) {
        return rewardBuilder_.getMessageOrBuilder();
      } else {
        return reward_ == null ?
            com.cosmos.base.v1beta1.Coin.getDefaultInstance() : reward_;
      }
    }
    /**
     * <pre>
     * Reward is the amount of base tokens that the liquidator received from
     * the module as reward for the liquidation.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin reward = 3 [json_name = "reward", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getRewardFieldBuilder() {
      if (rewardBuilder_ == null) {
        rewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                getReward(),
                getParentForChildren(),
                isClean());
        reward_ = null;
      }
      return rewardBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:umee.leverage.v1.MsgLiquidateResponse)
  }

  // @@protoc_insertion_point(class_scope:umee.leverage.v1.MsgLiquidateResponse)
  private static final com.umee.leverage.v1.MsgLiquidateResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.umee.leverage.v1.MsgLiquidateResponse();
  }

  public static com.umee.leverage.v1.MsgLiquidateResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MsgLiquidateResponse>
      PARSER = new com.google.protobuf.AbstractParser<MsgLiquidateResponse>() {
    @java.lang.Override
    public MsgLiquidateResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MsgLiquidateResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MsgLiquidateResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.umee.leverage.v1.MsgLiquidateResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


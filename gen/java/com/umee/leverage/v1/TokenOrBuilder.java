// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: umee/leverage/v1/leverage.proto

package com.umee.leverage.v1;

public interface TokenOrBuilder extends
    // @@protoc_insertion_point(interface_extends:umee.leverage.v1.Token)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Base Denom is the denomination of the underlying base token. Must be the base
   * denom as registered in the Bank module (so IBC denom for IBC tokens).
   * </pre>
   *
   * <code>string base_denom = 1 [json_name = "baseDenom", (.gogoproto.moretags) = "yaml:&#92;"base_denom&#92;""];</code>
   * @return The baseDenom.
   */
  java.lang.String getBaseDenom();
  /**
   * <pre>
   * Base Denom is the denomination of the underlying base token. Must be the base
   * denom as registered in the Bank module (so IBC denom for IBC tokens).
   * </pre>
   *
   * <code>string base_denom = 1 [json_name = "baseDenom", (.gogoproto.moretags) = "yaml:&#92;"base_denom&#92;""];</code>
   * @return The bytes for baseDenom.
   */
  com.google.protobuf.ByteString
      getBaseDenomBytes();

  /**
   * <pre>
   * Reserve Factor defines what portion of accrued interest goes to reserves
   * when this token is borrowed.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string reserve_factor = 2 [json_name = "reserveFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"reserve_factor&#92;""];</code>
   * @return The reserveFactor.
   */
  java.lang.String getReserveFactor();
  /**
   * <pre>
   * Reserve Factor defines what portion of accrued interest goes to reserves
   * when this token is borrowed.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string reserve_factor = 2 [json_name = "reserveFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"reserve_factor&#92;""];</code>
   * @return The bytes for reserveFactor.
   */
  com.google.protobuf.ByteString
      getReserveFactorBytes();

  /**
   * <pre>
   * Collateral Weight defines what portion of the total value of the asset
   * can contribute to a users borrowing power. If the collateral weight is
   * zero, using this asset as collateral against borrowing will be disabled.
   * Must be smaller than `liquidation_threshold`.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string collateral_weight = 3 [json_name = "collateralWeight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"collateral_weight&#92;""];</code>
   * @return The collateralWeight.
   */
  java.lang.String getCollateralWeight();
  /**
   * <pre>
   * Collateral Weight defines what portion of the total value of the asset
   * can contribute to a users borrowing power. If the collateral weight is
   * zero, using this asset as collateral against borrowing will be disabled.
   * Must be smaller than `liquidation_threshold`.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string collateral_weight = 3 [json_name = "collateralWeight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"collateral_weight&#92;""];</code>
   * @return The bytes for collateralWeight.
   */
  com.google.protobuf.ByteString
      getCollateralWeightBytes();

  /**
   * <pre>
   * Liquidation Threshold defines what amount of the total value of the
   * asset as a collateral can contribute to a user's liquidation threshold
   * (above which they become eligible for liquidation).
   * Must be bigger than `collateral_weight`.
   * Valid values: 0-1.
   * See also: min_close_factor.
   * </pre>
   *
   * <code>string liquidation_threshold = 4 [json_name = "liquidationThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"liquidation_threshold&#92;""];</code>
   * @return The liquidationThreshold.
   */
  java.lang.String getLiquidationThreshold();
  /**
   * <pre>
   * Liquidation Threshold defines what amount of the total value of the
   * asset as a collateral can contribute to a user's liquidation threshold
   * (above which they become eligible for liquidation).
   * Must be bigger than `collateral_weight`.
   * Valid values: 0-1.
   * See also: min_close_factor.
   * </pre>
   *
   * <code>string liquidation_threshold = 4 [json_name = "liquidationThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"liquidation_threshold&#92;""];</code>
   * @return The bytes for liquidationThreshold.
   */
  com.google.protobuf.ByteString
      getLiquidationThresholdBytes();

  /**
   * <pre>
   * Base Borrow Rate defines the minimum interest rate for borrowing this
   * asset.
   * Valid values: 0-∞
   * </pre>
   *
   * <code>string base_borrow_rate = 5 [json_name = "baseBorrowRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"base_borrow_rate&#92;""];</code>
   * @return The baseBorrowRate.
   */
  java.lang.String getBaseBorrowRate();
  /**
   * <pre>
   * Base Borrow Rate defines the minimum interest rate for borrowing this
   * asset.
   * Valid values: 0-∞
   * </pre>
   *
   * <code>string base_borrow_rate = 5 [json_name = "baseBorrowRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"base_borrow_rate&#92;""];</code>
   * @return The bytes for baseBorrowRate.
   */
  com.google.protobuf.ByteString
      getBaseBorrowRateBytes();

  /**
   * <pre>
   * Kink Borrow Rate defines the interest rate for borrowing this
   * asset when supply utilization is equal to 'kink_utilization'.
   * Valid values: 0-∞
   * </pre>
   *
   * <code>string kink_borrow_rate = 6 [json_name = "kinkBorrowRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"kink_borrow_rate&#92;""];</code>
   * @return The kinkBorrowRate.
   */
  java.lang.String getKinkBorrowRate();
  /**
   * <pre>
   * Kink Borrow Rate defines the interest rate for borrowing this
   * asset when supply utilization is equal to 'kink_utilization'.
   * Valid values: 0-∞
   * </pre>
   *
   * <code>string kink_borrow_rate = 6 [json_name = "kinkBorrowRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"kink_borrow_rate&#92;""];</code>
   * @return The bytes for kinkBorrowRate.
   */
  com.google.protobuf.ByteString
      getKinkBorrowRateBytes();

  /**
   * <pre>
   * Max Borrow Rate defines the interest rate for borrowing this
   * asset when supply utilization is at its maximum.
   * Valid values: 0-∞
   * </pre>
   *
   * <code>string max_borrow_rate = 7 [json_name = "maxBorrowRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"max_borrow_rate&#92;""];</code>
   * @return The maxBorrowRate.
   */
  java.lang.String getMaxBorrowRate();
  /**
   * <pre>
   * Max Borrow Rate defines the interest rate for borrowing this
   * asset when supply utilization is at its maximum.
   * Valid values: 0-∞
   * </pre>
   *
   * <code>string max_borrow_rate = 7 [json_name = "maxBorrowRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"max_borrow_rate&#92;""];</code>
   * @return The bytes for maxBorrowRate.
   */
  com.google.protobuf.ByteString
      getMaxBorrowRateBytes();

  /**
   * <pre>
   * Kink Utilization defines the supply utilization value where
   * the kink in the borrow interest rate function occurs.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string kink_utilization = 8 [json_name = "kinkUtilization", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"kink_utilization&#92;""];</code>
   * @return The kinkUtilization.
   */
  java.lang.String getKinkUtilization();
  /**
   * <pre>
   * Kink Utilization defines the supply utilization value where
   * the kink in the borrow interest rate function occurs.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string kink_utilization = 8 [json_name = "kinkUtilization", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"kink_utilization&#92;""];</code>
   * @return The bytes for kinkUtilization.
   */
  com.google.protobuf.ByteString
      getKinkUtilizationBytes();

  /**
   * <pre>
   * Liquidation Incentive determines the portion of bonus collateral of
   * a token type liquidators receive as a liquidation reward.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string liquidation_incentive = 9 [json_name = "liquidationIncentive", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"liquidation_incentive&#92;""];</code>
   * @return The liquidationIncentive.
   */
  java.lang.String getLiquidationIncentive();
  /**
   * <pre>
   * Liquidation Incentive determines the portion of bonus collateral of
   * a token type liquidators receive as a liquidation reward.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string liquidation_incentive = 9 [json_name = "liquidationIncentive", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"liquidation_incentive&#92;""];</code>
   * @return The bytes for liquidationIncentive.
   */
  com.google.protobuf.ByteString
      getLiquidationIncentiveBytes();

  /**
   * <pre>
   * Symbol Denom is the human readable denomination of this token.
   * </pre>
   *
   * <code>string symbol_denom = 10 [json_name = "symbolDenom", (.gogoproto.moretags) = "yaml:&#92;"symbol_denom&#92;""];</code>
   * @return The symbolDenom.
   */
  java.lang.String getSymbolDenom();
  /**
   * <pre>
   * Symbol Denom is the human readable denomination of this token.
   * </pre>
   *
   * <code>string symbol_denom = 10 [json_name = "symbolDenom", (.gogoproto.moretags) = "yaml:&#92;"symbol_denom&#92;""];</code>
   * @return The bytes for symbolDenom.
   */
  com.google.protobuf.ByteString
      getSymbolDenomBytes();

  /**
   * <pre>
   * Exponent is the power of ten by which to multiply, in order to convert
   * an amount of the token denoted in its symbol denom to the actual amount
   * of its base denom.
   * </pre>
   *
   * <code>uint32 exponent = 11 [json_name = "exponent", (.gogoproto.moretags) = "yaml:&#92;"exponent&#92;""];</code>
   * @return The exponent.
   */
  int getExponent();

  /**
   * <pre>
   * Enable Msg Supply allows supplying for lending or collateral using this
   * token. `false` means that a token can no longer be supplied.
   * Note that withdrawing is always enabled. Disabling supply would
   * be one step in phasing out an asset type.
   * </pre>
   *
   * <code>bool enable_msg_supply = 12 [json_name = "enableMsgSupply", (.gogoproto.moretags) = "yaml:&#92;"enable_msg_supply&#92;""];</code>
   * @return The enableMsgSupply.
   */
  boolean getEnableMsgSupply();

  /**
   * <pre>
   * Enable Msg Borrow allows borrowing of this token. Note that repaying is
   * always enabled. Disabling borrowing would be one step in phasing out an
   * asset type, but could also be used from the start for asset types meant
   * to be collateral only, like meTokens.
   * </pre>
   *
   * <code>bool enable_msg_borrow = 13 [json_name = "enableMsgBorrow", (.gogoproto.moretags) = "yaml:&#92;"enable_msg_borrow&#92;""];</code>
   * @return The enableMsgBorrow.
   */
  boolean getEnableMsgBorrow();

  /**
   * <pre>
   * Blacklist should only be used to eliminate an asset completely. A blacklisted
   * asset is treated as though its oracle price is zero, and thus ignored by
   * calculations such as collateral value and borrow limit. Can still be repaid
   * or withdrawn, but not liquidated. A blacklisted token must have enable_msg_supply
   * and enable_msg_borrow set to false. Such tokens can be safely removed from the
   * oracle and price feeder as well.
   * </pre>
   *
   * <code>bool blacklist = 14 [json_name = "blacklist"];</code>
   * @return The blacklist.
   */
  boolean getBlacklist();

  /**
   * <pre>
   * Max Collateral Share specifies how much of the system's overall collateral
   * can be provided by a given token. 1.0 means that the token has no restriction.
   * 0.1 means maximum 10% of system's total collateral value can be provided by this token.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string max_collateral_share = 15 [json_name = "maxCollateralShare", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"max_collateral_share&#92;""];</code>
   * @return The maxCollateralShare.
   */
  java.lang.String getMaxCollateralShare();
  /**
   * <pre>
   * Max Collateral Share specifies how much of the system's overall collateral
   * can be provided by a given token. 1.0 means that the token has no restriction.
   * 0.1 means maximum 10% of system's total collateral value can be provided by this token.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string max_collateral_share = 15 [json_name = "maxCollateralShare", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"max_collateral_share&#92;""];</code>
   * @return The bytes for maxCollateralShare.
   */
  com.google.protobuf.ByteString
      getMaxCollateralShareBytes();

  /**
   * <pre>
   * Max Supply Utilization specifies the maximum supply utilization a token is
   * allowed to reach as a direct result of user borrowing. New borrows are not allowed when
   * the supply utilization is above `max_supply_utilization`.
   *    supply_utilization(token) = total_borrowed(token) / total_supply(token)
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string max_supply_utilization = 16 [json_name = "maxSupplyUtilization", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"max_supply_utilization&#92;""];</code>
   * @return The maxSupplyUtilization.
   */
  java.lang.String getMaxSupplyUtilization();
  /**
   * <pre>
   * Max Supply Utilization specifies the maximum supply utilization a token is
   * allowed to reach as a direct result of user borrowing. New borrows are not allowed when
   * the supply utilization is above `max_supply_utilization`.
   *    supply_utilization(token) = total_borrowed(token) / total_supply(token)
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string max_supply_utilization = 16 [json_name = "maxSupplyUtilization", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"max_supply_utilization&#92;""];</code>
   * @return The bytes for maxSupplyUtilization.
   */
  com.google.protobuf.ByteString
      getMaxSupplyUtilizationBytes();

  /**
   * <pre>
   * Min Collateral Liquidity specifies min limit for the following function:
   *    collateral_liquidity(token) = available(token) / total_collateral(token)
   * Borrowing, collateralizing, or withdrawing assets is not allowed when the
   * result of such action invalidates min_collateral_liquidity.
   * Liquidity can only drop below this value due to interest or liquidations.
   * The goal is to assure that there is enough available (not borrowed) token to be available
   * for withdraw when there is a collateral liquidation and the liquidator needs to
   * withdraw uToken.
   * Valid values: 0 - inf
   * </pre>
   *
   * <code>string min_collateral_liquidity = 17 [json_name = "minCollateralLiquidity", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"min_collateral_liquidity&#92;""];</code>
   * @return The minCollateralLiquidity.
   */
  java.lang.String getMinCollateralLiquidity();
  /**
   * <pre>
   * Min Collateral Liquidity specifies min limit for the following function:
   *    collateral_liquidity(token) = available(token) / total_collateral(token)
   * Borrowing, collateralizing, or withdrawing assets is not allowed when the
   * result of such action invalidates min_collateral_liquidity.
   * Liquidity can only drop below this value due to interest or liquidations.
   * The goal is to assure that there is enough available (not borrowed) token to be available
   * for withdraw when there is a collateral liquidation and the liquidator needs to
   * withdraw uToken.
   * Valid values: 0 - inf
   * </pre>
   *
   * <code>string min_collateral_liquidity = 17 [json_name = "minCollateralLiquidity", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"min_collateral_liquidity&#92;""];</code>
   * @return The bytes for minCollateralLiquidity.
   */
  com.google.protobuf.ByteString
      getMinCollateralLiquidityBytes();

  /**
   * <pre>
   * Max Supply is the maximum amount of tokens the protocol can hold.
   * Adding more supply of the given token to the protocol will return an error.
   * Must be a non negative value. 0 means that there is no limit.
   * To mark a token as not valid for supply, `msg_supply` must be set to false.
   * </pre>
   *
   * <code>string max_supply = 18 [json_name = "maxSupply", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "yaml:&#92;"max_supply&#92;""];</code>
   * @return The maxSupply.
   */
  java.lang.String getMaxSupply();
  /**
   * <pre>
   * Max Supply is the maximum amount of tokens the protocol can hold.
   * Adding more supply of the given token to the protocol will return an error.
   * Must be a non negative value. 0 means that there is no limit.
   * To mark a token as not valid for supply, `msg_supply` must be set to false.
   * </pre>
   *
   * <code>string max_supply = 18 [json_name = "maxSupply", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "yaml:&#92;"max_supply&#92;""];</code>
   * @return The bytes for maxSupply.
   */
  com.google.protobuf.ByteString
      getMaxSupplyBytes();

  /**
   * <pre>
   * Historic Medians is the number of median historic prices to request from
   * the oracle module when evaluating new borrow positions containing this token.
   * All MsgBorrow, MsgWithdraw, and MsgDecollateralize must result in healthy
   * borrow positions under both current and historic prices. The default value of
   * zero for this field causes current price to be used in those calculations
   * for the affected Token.
   * The time span covered by the historic median will be:
   *     oracle.Params.median_stamp_period * oracle.Params.historic_stamp_period * historic_medians.
   * </pre>
   *
   * <code>uint32 historic_medians = 19 [json_name = "historicMedians", (.gogoproto.moretags) = "yaml:&#92;"historic_medians&#92;""];</code>
   * @return The historicMedians.
   */
  int getHistoricMedians();
}

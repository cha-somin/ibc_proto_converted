// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: umee/leverage/v1/leverage.proto

package com.umee.leverage.v1;

/**
 * <pre>
 * Params defines the parameters for the leverage module.
 * See https://github.com/umee-network/umee/blob/main/docs/design_docs/010-market-params.md
 * for more details.
 * </pre>
 *
 * Protobuf type {@code umee.leverage.v1.Params}
 */
public final class Params extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:umee.leverage.v1.Params)
    ParamsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Params.newBuilder() to construct.
  private Params(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Params() {
    completeLiquidationThreshold_ = "";
    minimumCloseFactor_ = "";
    oracleRewardFactor_ = "";
    smallLiquidationSize_ = "";
    directLiquidationFee_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Params();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.umee.leverage.v1.LeverageProto.internal_static_umee_leverage_v1_Params_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.umee.leverage.v1.LeverageProto.internal_static_umee_leverage_v1_Params_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.umee.leverage.v1.Params.class, com.umee.leverage.v1.Params.Builder.class);
  }

  public static final int COMPLETE_LIQUIDATION_THRESHOLD_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object completeLiquidationThreshold_ = "";
  /**
   * <pre>
   * Complete Liquidation Threshold determines how far between
   * liquidation_threshold (LT) and collateral_value (CV) a borrower's
   * borrowed value must have progressed in order to allow a full liquidation.
   * 0.3 indicates 30% of the way from LT to CV.
   * See also `minimum_close_factor` for more information.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string complete_liquidation_threshold = 2 [json_name = "completeLiquidationThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"complete_liquidation_threshold&#92;""];</code>
   * @return The completeLiquidationThreshold.
   */
  @java.lang.Override
  public java.lang.String getCompleteLiquidationThreshold() {
    java.lang.Object ref = completeLiquidationThreshold_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      completeLiquidationThreshold_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Complete Liquidation Threshold determines how far between
   * liquidation_threshold (LT) and collateral_value (CV) a borrower's
   * borrowed value must have progressed in order to allow a full liquidation.
   * 0.3 indicates 30% of the way from LT to CV.
   * See also `minimum_close_factor` for more information.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string complete_liquidation_threshold = 2 [json_name = "completeLiquidationThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"complete_liquidation_threshold&#92;""];</code>
   * @return The bytes for completeLiquidationThreshold.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCompleteLiquidationThresholdBytes() {
    java.lang.Object ref = completeLiquidationThreshold_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      completeLiquidationThreshold_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MINIMUM_CLOSE_FACTOR_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object minimumCloseFactor_ = "";
  /**
   * <pre>
   * Close Factor determines the portion of a borrower's position that can be
   * liquidated in a single event. Minimum Close Factor is Close Factor at
   * liquidation_threshold. 0.1 means that that 10% of the borrower position can
   * be liquidated when the borrowed value passes the liquidation_threshold.
   * close_factor scales linearly between minimum_close_factor and 1.0,
   * reaching its maximum when borrowed value passes
   * complete_liquidation_threshold. We can put it into the picture:
   *
   *             borrowed          CV := collateral
   *             value                   value
   *  --- | ------- | ----- | -------- | -------&gt;
   *     LV                 CL
   *
   * LV = liquidation value = liquidation_threshold * CV
   * CL = LV + (CV-LV) * complete_liquidation_threshold
   *    is the borrowed value above which close factor will be 1.
   *
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string minimum_close_factor = 3 [json_name = "minimumCloseFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"minimum_close_factor&#92;""];</code>
   * @return The minimumCloseFactor.
   */
  @java.lang.Override
  public java.lang.String getMinimumCloseFactor() {
    java.lang.Object ref = minimumCloseFactor_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      minimumCloseFactor_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Close Factor determines the portion of a borrower's position that can be
   * liquidated in a single event. Minimum Close Factor is Close Factor at
   * liquidation_threshold. 0.1 means that that 10% of the borrower position can
   * be liquidated when the borrowed value passes the liquidation_threshold.
   * close_factor scales linearly between minimum_close_factor and 1.0,
   * reaching its maximum when borrowed value passes
   * complete_liquidation_threshold. We can put it into the picture:
   *
   *             borrowed          CV := collateral
   *             value                   value
   *  --- | ------- | ----- | -------- | -------&gt;
   *     LV                 CL
   *
   * LV = liquidation value = liquidation_threshold * CV
   * CL = LV + (CV-LV) * complete_liquidation_threshold
   *    is the borrowed value above which close factor will be 1.
   *
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string minimum_close_factor = 3 [json_name = "minimumCloseFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"minimum_close_factor&#92;""];</code>
   * @return The bytes for minimumCloseFactor.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMinimumCloseFactorBytes() {
    java.lang.Object ref = minimumCloseFactor_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      minimumCloseFactor_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ORACLE_REWARD_FACTOR_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object oracleRewardFactor_ = "";
  /**
   * <pre>
   * Oracle Reward Factor determines the portion of interest accrued on
   * borrows that is sent to the oracle module to fund its reward pool.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string oracle_reward_factor = 4 [json_name = "oracleRewardFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"oracle_reward_factor&#92;""];</code>
   * @return The oracleRewardFactor.
   */
  @java.lang.Override
  public java.lang.String getOracleRewardFactor() {
    java.lang.Object ref = oracleRewardFactor_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      oracleRewardFactor_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Oracle Reward Factor determines the portion of interest accrued on
   * borrows that is sent to the oracle module to fund its reward pool.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string oracle_reward_factor = 4 [json_name = "oracleRewardFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"oracle_reward_factor&#92;""];</code>
   * @return The bytes for oracleRewardFactor.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOracleRewardFactorBytes() {
    java.lang.Object ref = oracleRewardFactor_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      oracleRewardFactor_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SMALL_LIQUIDATION_SIZE_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object smallLiquidationSize_ = "";
  /**
   * <pre>
   * Small Liquidation Size determines the USD value at which a borrow is
   * considered small enough to be liquidated in a single transaction, bypassing
   * dynamic close factor.
   * </pre>
   *
   * <code>string small_liquidation_size = 5 [json_name = "smallLiquidationSize", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"small_liquidation_size&#92;""];</code>
   * @return The smallLiquidationSize.
   */
  @java.lang.Override
  public java.lang.String getSmallLiquidationSize() {
    java.lang.Object ref = smallLiquidationSize_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      smallLiquidationSize_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Small Liquidation Size determines the USD value at which a borrow is
   * considered small enough to be liquidated in a single transaction, bypassing
   * dynamic close factor.
   * </pre>
   *
   * <code>string small_liquidation_size = 5 [json_name = "smallLiquidationSize", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"small_liquidation_size&#92;""];</code>
   * @return The bytes for smallLiquidationSize.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSmallLiquidationSizeBytes() {
    java.lang.Object ref = smallLiquidationSize_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      smallLiquidationSize_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DIRECT_LIQUIDATION_FEE_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object directLiquidationFee_ = "";
  /**
   * <pre>
   * Direct Liquidation Fee is a reduction factor in liquidation incentive
   * experienced by liquidators who choose to receive base assets instead of
   * uTokens as liquidation rewards.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string direct_liquidation_fee = 6 [json_name = "directLiquidationFee", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"direct_liquidation_fee&#92;""];</code>
   * @return The directLiquidationFee.
   */
  @java.lang.Override
  public java.lang.String getDirectLiquidationFee() {
    java.lang.Object ref = directLiquidationFee_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      directLiquidationFee_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Direct Liquidation Fee is a reduction factor in liquidation incentive
   * experienced by liquidators who choose to receive base assets instead of
   * uTokens as liquidation rewards.
   * Valid values: 0-1.
   * </pre>
   *
   * <code>string direct_liquidation_fee = 6 [json_name = "directLiquidationFee", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"direct_liquidation_fee&#92;""];</code>
   * @return The bytes for directLiquidationFee.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDirectLiquidationFeeBytes() {
    java.lang.Object ref = directLiquidationFee_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      directLiquidationFee_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(completeLiquidationThreshold_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, completeLiquidationThreshold_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(minimumCloseFactor_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, minimumCloseFactor_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(oracleRewardFactor_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, oracleRewardFactor_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(smallLiquidationSize_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, smallLiquidationSize_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(directLiquidationFee_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, directLiquidationFee_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(completeLiquidationThreshold_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, completeLiquidationThreshold_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(minimumCloseFactor_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, minimumCloseFactor_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(oracleRewardFactor_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, oracleRewardFactor_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(smallLiquidationSize_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, smallLiquidationSize_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(directLiquidationFee_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, directLiquidationFee_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.umee.leverage.v1.Params)) {
      return super.equals(obj);
    }
    com.umee.leverage.v1.Params other = (com.umee.leverage.v1.Params) obj;

    if (!getCompleteLiquidationThreshold()
        .equals(other.getCompleteLiquidationThreshold())) return false;
    if (!getMinimumCloseFactor()
        .equals(other.getMinimumCloseFactor())) return false;
    if (!getOracleRewardFactor()
        .equals(other.getOracleRewardFactor())) return false;
    if (!getSmallLiquidationSize()
        .equals(other.getSmallLiquidationSize())) return false;
    if (!getDirectLiquidationFee()
        .equals(other.getDirectLiquidationFee())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + COMPLETE_LIQUIDATION_THRESHOLD_FIELD_NUMBER;
    hash = (53 * hash) + getCompleteLiquidationThreshold().hashCode();
    hash = (37 * hash) + MINIMUM_CLOSE_FACTOR_FIELD_NUMBER;
    hash = (53 * hash) + getMinimumCloseFactor().hashCode();
    hash = (37 * hash) + ORACLE_REWARD_FACTOR_FIELD_NUMBER;
    hash = (53 * hash) + getOracleRewardFactor().hashCode();
    hash = (37 * hash) + SMALL_LIQUIDATION_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getSmallLiquidationSize().hashCode();
    hash = (37 * hash) + DIRECT_LIQUIDATION_FEE_FIELD_NUMBER;
    hash = (53 * hash) + getDirectLiquidationFee().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.umee.leverage.v1.Params parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.umee.leverage.v1.Params parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.umee.leverage.v1.Params parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.umee.leverage.v1.Params parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.umee.leverage.v1.Params parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.umee.leverage.v1.Params parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.umee.leverage.v1.Params parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.umee.leverage.v1.Params parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.umee.leverage.v1.Params parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.umee.leverage.v1.Params parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.umee.leverage.v1.Params parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.umee.leverage.v1.Params parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.umee.leverage.v1.Params prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Params defines the parameters for the leverage module.
   * See https://github.com/umee-network/umee/blob/main/docs/design_docs/010-market-params.md
   * for more details.
   * </pre>
   *
   * Protobuf type {@code umee.leverage.v1.Params}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:umee.leverage.v1.Params)
      com.umee.leverage.v1.ParamsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.umee.leverage.v1.LeverageProto.internal_static_umee_leverage_v1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.umee.leverage.v1.LeverageProto.internal_static_umee_leverage_v1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.umee.leverage.v1.Params.class, com.umee.leverage.v1.Params.Builder.class);
    }

    // Construct using com.umee.leverage.v1.Params.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      completeLiquidationThreshold_ = "";
      minimumCloseFactor_ = "";
      oracleRewardFactor_ = "";
      smallLiquidationSize_ = "";
      directLiquidationFee_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.umee.leverage.v1.LeverageProto.internal_static_umee_leverage_v1_Params_descriptor;
    }

    @java.lang.Override
    public com.umee.leverage.v1.Params getDefaultInstanceForType() {
      return com.umee.leverage.v1.Params.getDefaultInstance();
    }

    @java.lang.Override
    public com.umee.leverage.v1.Params build() {
      com.umee.leverage.v1.Params result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.umee.leverage.v1.Params buildPartial() {
      com.umee.leverage.v1.Params result = new com.umee.leverage.v1.Params(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.umee.leverage.v1.Params result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.completeLiquidationThreshold_ = completeLiquidationThreshold_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.minimumCloseFactor_ = minimumCloseFactor_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.oracleRewardFactor_ = oracleRewardFactor_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.smallLiquidationSize_ = smallLiquidationSize_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.directLiquidationFee_ = directLiquidationFee_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.umee.leverage.v1.Params) {
        return mergeFrom((com.umee.leverage.v1.Params)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.umee.leverage.v1.Params other) {
      if (other == com.umee.leverage.v1.Params.getDefaultInstance()) return this;
      if (!other.getCompleteLiquidationThreshold().isEmpty()) {
        completeLiquidationThreshold_ = other.completeLiquidationThreshold_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getMinimumCloseFactor().isEmpty()) {
        minimumCloseFactor_ = other.minimumCloseFactor_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getOracleRewardFactor().isEmpty()) {
        oracleRewardFactor_ = other.oracleRewardFactor_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getSmallLiquidationSize().isEmpty()) {
        smallLiquidationSize_ = other.smallLiquidationSize_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getDirectLiquidationFee().isEmpty()) {
        directLiquidationFee_ = other.directLiquidationFee_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              completeLiquidationThreshold_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 18
            case 26: {
              minimumCloseFactor_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 26
            case 34: {
              oracleRewardFactor_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 34
            case 42: {
              smallLiquidationSize_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 42
            case 50: {
              directLiquidationFee_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object completeLiquidationThreshold_ = "";
    /**
     * <pre>
     * Complete Liquidation Threshold determines how far between
     * liquidation_threshold (LT) and collateral_value (CV) a borrower's
     * borrowed value must have progressed in order to allow a full liquidation.
     * 0.3 indicates 30% of the way from LT to CV.
     * See also `minimum_close_factor` for more information.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string complete_liquidation_threshold = 2 [json_name = "completeLiquidationThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"complete_liquidation_threshold&#92;""];</code>
     * @return The completeLiquidationThreshold.
     */
    public java.lang.String getCompleteLiquidationThreshold() {
      java.lang.Object ref = completeLiquidationThreshold_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        completeLiquidationThreshold_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Complete Liquidation Threshold determines how far between
     * liquidation_threshold (LT) and collateral_value (CV) a borrower's
     * borrowed value must have progressed in order to allow a full liquidation.
     * 0.3 indicates 30% of the way from LT to CV.
     * See also `minimum_close_factor` for more information.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string complete_liquidation_threshold = 2 [json_name = "completeLiquidationThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"complete_liquidation_threshold&#92;""];</code>
     * @return The bytes for completeLiquidationThreshold.
     */
    public com.google.protobuf.ByteString
        getCompleteLiquidationThresholdBytes() {
      java.lang.Object ref = completeLiquidationThreshold_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        completeLiquidationThreshold_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Complete Liquidation Threshold determines how far between
     * liquidation_threshold (LT) and collateral_value (CV) a borrower's
     * borrowed value must have progressed in order to allow a full liquidation.
     * 0.3 indicates 30% of the way from LT to CV.
     * See also `minimum_close_factor` for more information.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string complete_liquidation_threshold = 2 [json_name = "completeLiquidationThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"complete_liquidation_threshold&#92;""];</code>
     * @param value The completeLiquidationThreshold to set.
     * @return This builder for chaining.
     */
    public Builder setCompleteLiquidationThreshold(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      completeLiquidationThreshold_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Complete Liquidation Threshold determines how far between
     * liquidation_threshold (LT) and collateral_value (CV) a borrower's
     * borrowed value must have progressed in order to allow a full liquidation.
     * 0.3 indicates 30% of the way from LT to CV.
     * See also `minimum_close_factor` for more information.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string complete_liquidation_threshold = 2 [json_name = "completeLiquidationThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"complete_liquidation_threshold&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearCompleteLiquidationThreshold() {
      completeLiquidationThreshold_ = getDefaultInstance().getCompleteLiquidationThreshold();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Complete Liquidation Threshold determines how far between
     * liquidation_threshold (LT) and collateral_value (CV) a borrower's
     * borrowed value must have progressed in order to allow a full liquidation.
     * 0.3 indicates 30% of the way from LT to CV.
     * See also `minimum_close_factor` for more information.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string complete_liquidation_threshold = 2 [json_name = "completeLiquidationThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"complete_liquidation_threshold&#92;""];</code>
     * @param value The bytes for completeLiquidationThreshold to set.
     * @return This builder for chaining.
     */
    public Builder setCompleteLiquidationThresholdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      completeLiquidationThreshold_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object minimumCloseFactor_ = "";
    /**
     * <pre>
     * Close Factor determines the portion of a borrower's position that can be
     * liquidated in a single event. Minimum Close Factor is Close Factor at
     * liquidation_threshold. 0.1 means that that 10% of the borrower position can
     * be liquidated when the borrowed value passes the liquidation_threshold.
     * close_factor scales linearly between minimum_close_factor and 1.0,
     * reaching its maximum when borrowed value passes
     * complete_liquidation_threshold. We can put it into the picture:
     *
     *             borrowed          CV := collateral
     *             value                   value
     *  --- | ------- | ----- | -------- | -------&gt;
     *     LV                 CL
     *
     * LV = liquidation value = liquidation_threshold * CV
     * CL = LV + (CV-LV) * complete_liquidation_threshold
     *    is the borrowed value above which close factor will be 1.
     *
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string minimum_close_factor = 3 [json_name = "minimumCloseFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"minimum_close_factor&#92;""];</code>
     * @return The minimumCloseFactor.
     */
    public java.lang.String getMinimumCloseFactor() {
      java.lang.Object ref = minimumCloseFactor_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        minimumCloseFactor_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Close Factor determines the portion of a borrower's position that can be
     * liquidated in a single event. Minimum Close Factor is Close Factor at
     * liquidation_threshold. 0.1 means that that 10% of the borrower position can
     * be liquidated when the borrowed value passes the liquidation_threshold.
     * close_factor scales linearly between minimum_close_factor and 1.0,
     * reaching its maximum when borrowed value passes
     * complete_liquidation_threshold. We can put it into the picture:
     *
     *             borrowed          CV := collateral
     *             value                   value
     *  --- | ------- | ----- | -------- | -------&gt;
     *     LV                 CL
     *
     * LV = liquidation value = liquidation_threshold * CV
     * CL = LV + (CV-LV) * complete_liquidation_threshold
     *    is the borrowed value above which close factor will be 1.
     *
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string minimum_close_factor = 3 [json_name = "minimumCloseFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"minimum_close_factor&#92;""];</code>
     * @return The bytes for minimumCloseFactor.
     */
    public com.google.protobuf.ByteString
        getMinimumCloseFactorBytes() {
      java.lang.Object ref = minimumCloseFactor_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        minimumCloseFactor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Close Factor determines the portion of a borrower's position that can be
     * liquidated in a single event. Minimum Close Factor is Close Factor at
     * liquidation_threshold. 0.1 means that that 10% of the borrower position can
     * be liquidated when the borrowed value passes the liquidation_threshold.
     * close_factor scales linearly between minimum_close_factor and 1.0,
     * reaching its maximum when borrowed value passes
     * complete_liquidation_threshold. We can put it into the picture:
     *
     *             borrowed          CV := collateral
     *             value                   value
     *  --- | ------- | ----- | -------- | -------&gt;
     *     LV                 CL
     *
     * LV = liquidation value = liquidation_threshold * CV
     * CL = LV + (CV-LV) * complete_liquidation_threshold
     *    is the borrowed value above which close factor will be 1.
     *
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string minimum_close_factor = 3 [json_name = "minimumCloseFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"minimum_close_factor&#92;""];</code>
     * @param value The minimumCloseFactor to set.
     * @return This builder for chaining.
     */
    public Builder setMinimumCloseFactor(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      minimumCloseFactor_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Close Factor determines the portion of a borrower's position that can be
     * liquidated in a single event. Minimum Close Factor is Close Factor at
     * liquidation_threshold. 0.1 means that that 10% of the borrower position can
     * be liquidated when the borrowed value passes the liquidation_threshold.
     * close_factor scales linearly between minimum_close_factor and 1.0,
     * reaching its maximum when borrowed value passes
     * complete_liquidation_threshold. We can put it into the picture:
     *
     *             borrowed          CV := collateral
     *             value                   value
     *  --- | ------- | ----- | -------- | -------&gt;
     *     LV                 CL
     *
     * LV = liquidation value = liquidation_threshold * CV
     * CL = LV + (CV-LV) * complete_liquidation_threshold
     *    is the borrowed value above which close factor will be 1.
     *
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string minimum_close_factor = 3 [json_name = "minimumCloseFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"minimum_close_factor&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearMinimumCloseFactor() {
      minimumCloseFactor_ = getDefaultInstance().getMinimumCloseFactor();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Close Factor determines the portion of a borrower's position that can be
     * liquidated in a single event. Minimum Close Factor is Close Factor at
     * liquidation_threshold. 0.1 means that that 10% of the borrower position can
     * be liquidated when the borrowed value passes the liquidation_threshold.
     * close_factor scales linearly between minimum_close_factor and 1.0,
     * reaching its maximum when borrowed value passes
     * complete_liquidation_threshold. We can put it into the picture:
     *
     *             borrowed          CV := collateral
     *             value                   value
     *  --- | ------- | ----- | -------- | -------&gt;
     *     LV                 CL
     *
     * LV = liquidation value = liquidation_threshold * CV
     * CL = LV + (CV-LV) * complete_liquidation_threshold
     *    is the borrowed value above which close factor will be 1.
     *
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string minimum_close_factor = 3 [json_name = "minimumCloseFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"minimum_close_factor&#92;""];</code>
     * @param value The bytes for minimumCloseFactor to set.
     * @return This builder for chaining.
     */
    public Builder setMinimumCloseFactorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      minimumCloseFactor_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object oracleRewardFactor_ = "";
    /**
     * <pre>
     * Oracle Reward Factor determines the portion of interest accrued on
     * borrows that is sent to the oracle module to fund its reward pool.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string oracle_reward_factor = 4 [json_name = "oracleRewardFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"oracle_reward_factor&#92;""];</code>
     * @return The oracleRewardFactor.
     */
    public java.lang.String getOracleRewardFactor() {
      java.lang.Object ref = oracleRewardFactor_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        oracleRewardFactor_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Oracle Reward Factor determines the portion of interest accrued on
     * borrows that is sent to the oracle module to fund its reward pool.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string oracle_reward_factor = 4 [json_name = "oracleRewardFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"oracle_reward_factor&#92;""];</code>
     * @return The bytes for oracleRewardFactor.
     */
    public com.google.protobuf.ByteString
        getOracleRewardFactorBytes() {
      java.lang.Object ref = oracleRewardFactor_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        oracleRewardFactor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Oracle Reward Factor determines the portion of interest accrued on
     * borrows that is sent to the oracle module to fund its reward pool.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string oracle_reward_factor = 4 [json_name = "oracleRewardFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"oracle_reward_factor&#92;""];</code>
     * @param value The oracleRewardFactor to set.
     * @return This builder for chaining.
     */
    public Builder setOracleRewardFactor(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      oracleRewardFactor_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Oracle Reward Factor determines the portion of interest accrued on
     * borrows that is sent to the oracle module to fund its reward pool.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string oracle_reward_factor = 4 [json_name = "oracleRewardFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"oracle_reward_factor&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearOracleRewardFactor() {
      oracleRewardFactor_ = getDefaultInstance().getOracleRewardFactor();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Oracle Reward Factor determines the portion of interest accrued on
     * borrows that is sent to the oracle module to fund its reward pool.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string oracle_reward_factor = 4 [json_name = "oracleRewardFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"oracle_reward_factor&#92;""];</code>
     * @param value The bytes for oracleRewardFactor to set.
     * @return This builder for chaining.
     */
    public Builder setOracleRewardFactorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      oracleRewardFactor_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object smallLiquidationSize_ = "";
    /**
     * <pre>
     * Small Liquidation Size determines the USD value at which a borrow is
     * considered small enough to be liquidated in a single transaction, bypassing
     * dynamic close factor.
     * </pre>
     *
     * <code>string small_liquidation_size = 5 [json_name = "smallLiquidationSize", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"small_liquidation_size&#92;""];</code>
     * @return The smallLiquidationSize.
     */
    public java.lang.String getSmallLiquidationSize() {
      java.lang.Object ref = smallLiquidationSize_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        smallLiquidationSize_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Small Liquidation Size determines the USD value at which a borrow is
     * considered small enough to be liquidated in a single transaction, bypassing
     * dynamic close factor.
     * </pre>
     *
     * <code>string small_liquidation_size = 5 [json_name = "smallLiquidationSize", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"small_liquidation_size&#92;""];</code>
     * @return The bytes for smallLiquidationSize.
     */
    public com.google.protobuf.ByteString
        getSmallLiquidationSizeBytes() {
      java.lang.Object ref = smallLiquidationSize_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        smallLiquidationSize_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Small Liquidation Size determines the USD value at which a borrow is
     * considered small enough to be liquidated in a single transaction, bypassing
     * dynamic close factor.
     * </pre>
     *
     * <code>string small_liquidation_size = 5 [json_name = "smallLiquidationSize", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"small_liquidation_size&#92;""];</code>
     * @param value The smallLiquidationSize to set.
     * @return This builder for chaining.
     */
    public Builder setSmallLiquidationSize(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      smallLiquidationSize_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Small Liquidation Size determines the USD value at which a borrow is
     * considered small enough to be liquidated in a single transaction, bypassing
     * dynamic close factor.
     * </pre>
     *
     * <code>string small_liquidation_size = 5 [json_name = "smallLiquidationSize", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"small_liquidation_size&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearSmallLiquidationSize() {
      smallLiquidationSize_ = getDefaultInstance().getSmallLiquidationSize();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Small Liquidation Size determines the USD value at which a borrow is
     * considered small enough to be liquidated in a single transaction, bypassing
     * dynamic close factor.
     * </pre>
     *
     * <code>string small_liquidation_size = 5 [json_name = "smallLiquidationSize", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"small_liquidation_size&#92;""];</code>
     * @param value The bytes for smallLiquidationSize to set.
     * @return This builder for chaining.
     */
    public Builder setSmallLiquidationSizeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      smallLiquidationSize_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object directLiquidationFee_ = "";
    /**
     * <pre>
     * Direct Liquidation Fee is a reduction factor in liquidation incentive
     * experienced by liquidators who choose to receive base assets instead of
     * uTokens as liquidation rewards.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string direct_liquidation_fee = 6 [json_name = "directLiquidationFee", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"direct_liquidation_fee&#92;""];</code>
     * @return The directLiquidationFee.
     */
    public java.lang.String getDirectLiquidationFee() {
      java.lang.Object ref = directLiquidationFee_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        directLiquidationFee_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Direct Liquidation Fee is a reduction factor in liquidation incentive
     * experienced by liquidators who choose to receive base assets instead of
     * uTokens as liquidation rewards.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string direct_liquidation_fee = 6 [json_name = "directLiquidationFee", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"direct_liquidation_fee&#92;""];</code>
     * @return The bytes for directLiquidationFee.
     */
    public com.google.protobuf.ByteString
        getDirectLiquidationFeeBytes() {
      java.lang.Object ref = directLiquidationFee_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        directLiquidationFee_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Direct Liquidation Fee is a reduction factor in liquidation incentive
     * experienced by liquidators who choose to receive base assets instead of
     * uTokens as liquidation rewards.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string direct_liquidation_fee = 6 [json_name = "directLiquidationFee", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"direct_liquidation_fee&#92;""];</code>
     * @param value The directLiquidationFee to set.
     * @return This builder for chaining.
     */
    public Builder setDirectLiquidationFee(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      directLiquidationFee_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Direct Liquidation Fee is a reduction factor in liquidation incentive
     * experienced by liquidators who choose to receive base assets instead of
     * uTokens as liquidation rewards.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string direct_liquidation_fee = 6 [json_name = "directLiquidationFee", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"direct_liquidation_fee&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearDirectLiquidationFee() {
      directLiquidationFee_ = getDefaultInstance().getDirectLiquidationFee();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Direct Liquidation Fee is a reduction factor in liquidation incentive
     * experienced by liquidators who choose to receive base assets instead of
     * uTokens as liquidation rewards.
     * Valid values: 0-1.
     * </pre>
     *
     * <code>string direct_liquidation_fee = 6 [json_name = "directLiquidationFee", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"direct_liquidation_fee&#92;""];</code>
     * @param value The bytes for directLiquidationFee to set.
     * @return This builder for chaining.
     */
    public Builder setDirectLiquidationFeeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      directLiquidationFee_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:umee.leverage.v1.Params)
  }

  // @@protoc_insertion_point(class_scope:umee.leverage.v1.Params)
  private static final com.umee.leverage.v1.Params DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.umee.leverage.v1.Params();
  }

  public static com.umee.leverage.v1.Params getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Params>
      PARSER = new com.google.protobuf.AbstractParser<Params>() {
    @java.lang.Override
    public Params parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Params> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Params> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.umee.leverage.v1.Params getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: regen/group/v1alpha1/types.proto

package com.regen.group.v1alpha1;

public interface ProposalOrBuilder extends
    // @@protoc_insertion_point(interface_extends:regen.group.v1alpha1.Proposal)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * proposal_id is the unique id of the proposal.
   * </pre>
   *
   * <code>uint64 proposal_id = 1 [json_name = "proposalId"];</code>
   * @return The proposalId.
   */
  long getProposalId();

  /**
   * <pre>
   * address is the group account address.
   * </pre>
   *
   * <code>string address = 2 [json_name = "address"];</code>
   * @return The address.
   */
  java.lang.String getAddress();
  /**
   * <pre>
   * address is the group account address.
   * </pre>
   *
   * <code>string address = 2 [json_name = "address"];</code>
   * @return The bytes for address.
   */
  com.google.protobuf.ByteString
      getAddressBytes();

  /**
   * <pre>
   * metadata is any arbitrary metadata to attached to the proposal.
   * </pre>
   *
   * <code>bytes metadata = 3 [json_name = "metadata"];</code>
   * @return The metadata.
   */
  com.google.protobuf.ByteString getMetadata();

  /**
   * <pre>
   * proposers are the account addresses of the proposers.
   * </pre>
   *
   * <code>repeated string proposers = 4 [json_name = "proposers"];</code>
   * @return A list containing the proposers.
   */
  java.util.List<java.lang.String>
      getProposersList();
  /**
   * <pre>
   * proposers are the account addresses of the proposers.
   * </pre>
   *
   * <code>repeated string proposers = 4 [json_name = "proposers"];</code>
   * @return The count of proposers.
   */
  int getProposersCount();
  /**
   * <pre>
   * proposers are the account addresses of the proposers.
   * </pre>
   *
   * <code>repeated string proposers = 4 [json_name = "proposers"];</code>
   * @param index The index of the element to return.
   * @return The proposers at the given index.
   */
  java.lang.String getProposers(int index);
  /**
   * <pre>
   * proposers are the account addresses of the proposers.
   * </pre>
   *
   * <code>repeated string proposers = 4 [json_name = "proposers"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the proposers at the given index.
   */
  com.google.protobuf.ByteString
      getProposersBytes(int index);

  /**
   * <pre>
   * submitted_at is a timestamp specifying when a proposal was submitted.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp submitted_at = 5 [json_name = "submittedAt", (.gogoproto.nullable) = false];</code>
   * @return Whether the submittedAt field is set.
   */
  boolean hasSubmittedAt();
  /**
   * <pre>
   * submitted_at is a timestamp specifying when a proposal was submitted.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp submitted_at = 5 [json_name = "submittedAt", (.gogoproto.nullable) = false];</code>
   * @return The submittedAt.
   */
  com.google.protobuf.Timestamp getSubmittedAt();
  /**
   * <pre>
   * submitted_at is a timestamp specifying when a proposal was submitted.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp submitted_at = 5 [json_name = "submittedAt", (.gogoproto.nullable) = false];</code>
   */
  com.google.protobuf.TimestampOrBuilder getSubmittedAtOrBuilder();

  /**
   * <pre>
   * group_version tracks the version of the group that this proposal corresponds to.
   * When group membership is changed, existing proposals from previous group versions will become invalid.
   * </pre>
   *
   * <code>uint64 group_version = 6 [json_name = "groupVersion"];</code>
   * @return The groupVersion.
   */
  long getGroupVersion();

  /**
   * <pre>
   * group_account_version tracks the version of the group account that this proposal corresponds to.
   * When a decision policy is changed, existing proposals from previous policy versions will become invalid.
   * </pre>
   *
   * <code>uint64 group_account_version = 7 [json_name = "groupAccountVersion"];</code>
   * @return The groupAccountVersion.
   */
  long getGroupAccountVersion();

  /**
   * <pre>
   * Status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
   * </pre>
   *
   * <code>.regen.group.v1alpha1.Proposal.Status status = 8 [json_name = "status"];</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <pre>
   * Status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
   * </pre>
   *
   * <code>.regen.group.v1alpha1.Proposal.Status status = 8 [json_name = "status"];</code>
   * @return The status.
   */
  com.regen.group.v1alpha1.Proposal.Status getStatus();

  /**
   * <pre>
   * result is the final result based on the votes and election rule. Initial value is unfinalized.
   * The result is persisted so that clients can always rely on this state and not have to replicate the logic.
   * </pre>
   *
   * <code>.regen.group.v1alpha1.Proposal.Result result = 9 [json_name = "result"];</code>
   * @return The enum numeric value on the wire for result.
   */
  int getResultValue();
  /**
   * <pre>
   * result is the final result based on the votes and election rule. Initial value is unfinalized.
   * The result is persisted so that clients can always rely on this state and not have to replicate the logic.
   * </pre>
   *
   * <code>.regen.group.v1alpha1.Proposal.Result result = 9 [json_name = "result"];</code>
   * @return The result.
   */
  com.regen.group.v1alpha1.Proposal.Result getResult();

  /**
   * <pre>
   * vote_state contains the sums of all weighted votes for this proposal.
   * </pre>
   *
   * <code>.regen.group.v1alpha1.Tally vote_state = 10 [json_name = "voteState", (.gogoproto.nullable) = false];</code>
   * @return Whether the voteState field is set.
   */
  boolean hasVoteState();
  /**
   * <pre>
   * vote_state contains the sums of all weighted votes for this proposal.
   * </pre>
   *
   * <code>.regen.group.v1alpha1.Tally vote_state = 10 [json_name = "voteState", (.gogoproto.nullable) = false];</code>
   * @return The voteState.
   */
  com.regen.group.v1alpha1.Tally getVoteState();
  /**
   * <pre>
   * vote_state contains the sums of all weighted votes for this proposal.
   * </pre>
   *
   * <code>.regen.group.v1alpha1.Tally vote_state = 10 [json_name = "voteState", (.gogoproto.nullable) = false];</code>
   */
  com.regen.group.v1alpha1.TallyOrBuilder getVoteStateOrBuilder();

  /**
   * <pre>
   * timeout is the timestamp of the block where the proposal execution times out. Header times of the votes and execution messages
   * must be before this end time to be included in the election. After the timeout timestamp the proposal can not be
   * executed anymore and should be considered pending delete.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timeout = 11 [json_name = "timeout", (.gogoproto.nullable) = false];</code>
   * @return Whether the timeout field is set.
   */
  boolean hasTimeout();
  /**
   * <pre>
   * timeout is the timestamp of the block where the proposal execution times out. Header times of the votes and execution messages
   * must be before this end time to be included in the election. After the timeout timestamp the proposal can not be
   * executed anymore and should be considered pending delete.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timeout = 11 [json_name = "timeout", (.gogoproto.nullable) = false];</code>
   * @return The timeout.
   */
  com.google.protobuf.Timestamp getTimeout();
  /**
   * <pre>
   * timeout is the timestamp of the block where the proposal execution times out. Header times of the votes and execution messages
   * must be before this end time to be included in the election. After the timeout timestamp the proposal can not be
   * executed anymore and should be considered pending delete.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timeout = 11 [json_name = "timeout", (.gogoproto.nullable) = false];</code>
   */
  com.google.protobuf.TimestampOrBuilder getTimeoutOrBuilder();

  /**
   * <pre>
   * executor_result is the final result based on the votes and election rule. Initial value is NotRun.
   * </pre>
   *
   * <code>.regen.group.v1alpha1.Proposal.ExecutorResult executor_result = 12 [json_name = "executorResult"];</code>
   * @return The enum numeric value on the wire for executorResult.
   */
  int getExecutorResultValue();
  /**
   * <pre>
   * executor_result is the final result based on the votes and election rule. Initial value is NotRun.
   * </pre>
   *
   * <code>.regen.group.v1alpha1.Proposal.ExecutorResult executor_result = 12 [json_name = "executorResult"];</code>
   * @return The executorResult.
   */
  com.regen.group.v1alpha1.Proposal.ExecutorResult getExecutorResult();

  /**
   * <pre>
   * msgs is a list of Msgs that will be executed if the proposal passes.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any msgs = 13 [json_name = "msgs"];</code>
   */
  java.util.List<com.google.protobuf.Any> 
      getMsgsList();
  /**
   * <pre>
   * msgs is a list of Msgs that will be executed if the proposal passes.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any msgs = 13 [json_name = "msgs"];</code>
   */
  com.google.protobuf.Any getMsgs(int index);
  /**
   * <pre>
   * msgs is a list of Msgs that will be executed if the proposal passes.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any msgs = 13 [json_name = "msgs"];</code>
   */
  int getMsgsCount();
  /**
   * <pre>
   * msgs is a list of Msgs that will be executed if the proposal passes.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any msgs = 13 [json_name = "msgs"];</code>
   */
  java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
      getMsgsOrBuilderList();
  /**
   * <pre>
   * msgs is a list of Msgs that will be executed if the proposal passes.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any msgs = 13 [json_name = "msgs"];</code>
   */
  com.google.protobuf.AnyOrBuilder getMsgsOrBuilder(
      int index);
}

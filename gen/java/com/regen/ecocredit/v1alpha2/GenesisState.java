// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: regen/ecocredit/v1alpha2/genesis.proto

package com.regen.ecocredit.v1alpha2;

/**
 * <pre>
 * GenesisState defines ecocredit module's genesis state.
 * </pre>
 *
 * Protobuf type {@code regen.ecocredit.v1alpha2.GenesisState}
 */
public final class GenesisState extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:regen.ecocredit.v1alpha2.GenesisState)
    GenesisStateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GenesisState.newBuilder() to construct.
  private GenesisState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GenesisState() {
    classInfo_ = java.util.Collections.emptyList();
    batchInfo_ = java.util.Collections.emptyList();
    sequences_ = java.util.Collections.emptyList();
    balances_ = java.util.Collections.emptyList();
    supplies_ = java.util.Collections.emptyList();
    projectInfo_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GenesisState();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.regen.ecocredit.v1alpha2.GenesisProto.internal_static_regen_ecocredit_v1alpha2_GenesisState_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.regen.ecocredit.v1alpha2.GenesisProto.internal_static_regen_ecocredit_v1alpha2_GenesisState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.regen.ecocredit.v1alpha2.GenesisState.class, com.regen.ecocredit.v1alpha2.GenesisState.Builder.class);
  }

  public static final int PARAMS_FIELD_NUMBER = 1;
  private com.regen.ecocredit.v1alpha2.Params params_;
  /**
   * <pre>
   * Params contains the updateable global parameters for use with the x/params
   * module
   * </pre>
   *
   * <code>.regen.ecocredit.v1alpha2.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return Whether the params field is set.
   */
  @java.lang.Override
  public boolean hasParams() {
    return params_ != null;
  }
  /**
   * <pre>
   * Params contains the updateable global parameters for use with the x/params
   * module
   * </pre>
   *
   * <code>.regen.ecocredit.v1alpha2.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return The params.
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.Params getParams() {
    return params_ == null ? com.regen.ecocredit.v1alpha2.Params.getDefaultInstance() : params_;
  }
  /**
   * <pre>
   * Params contains the updateable global parameters for use with the x/params
   * module
   * </pre>
   *
   * <code>.regen.ecocredit.v1alpha2.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.ParamsOrBuilder getParamsOrBuilder() {
    return params_ == null ? com.regen.ecocredit.v1alpha2.Params.getDefaultInstance() : params_;
  }

  public static final int CLASS_INFO_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.regen.ecocredit.v1alpha2.ClassInfo> classInfo_;
  /**
   * <pre>
   * class_info is the list of credit class info.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
   */
  @java.lang.Override
  public java.util.List<com.regen.ecocredit.v1alpha2.ClassInfo> getClassInfoList() {
    return classInfo_;
  }
  /**
   * <pre>
   * class_info is the list of credit class info.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.regen.ecocredit.v1alpha2.ClassInfoOrBuilder> 
      getClassInfoOrBuilderList() {
    return classInfo_;
  }
  /**
   * <pre>
   * class_info is the list of credit class info.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
   */
  @java.lang.Override
  public int getClassInfoCount() {
    return classInfo_.size();
  }
  /**
   * <pre>
   * class_info is the list of credit class info.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.ClassInfo getClassInfo(int index) {
    return classInfo_.get(index);
  }
  /**
   * <pre>
   * class_info is the list of credit class info.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.ClassInfoOrBuilder getClassInfoOrBuilder(
      int index) {
    return classInfo_.get(index);
  }

  public static final int BATCH_INFO_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.regen.ecocredit.v1alpha2.BatchInfo> batchInfo_;
  /**
   * <pre>
   * batch_info is the list of credit batch info.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
   */
  @java.lang.Override
  public java.util.List<com.regen.ecocredit.v1alpha2.BatchInfo> getBatchInfoList() {
    return batchInfo_;
  }
  /**
   * <pre>
   * batch_info is the list of credit batch info.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.regen.ecocredit.v1alpha2.BatchInfoOrBuilder> 
      getBatchInfoOrBuilderList() {
    return batchInfo_;
  }
  /**
   * <pre>
   * batch_info is the list of credit batch info.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
   */
  @java.lang.Override
  public int getBatchInfoCount() {
    return batchInfo_.size();
  }
  /**
   * <pre>
   * batch_info is the list of credit batch info.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.BatchInfo getBatchInfo(int index) {
    return batchInfo_.get(index);
  }
  /**
   * <pre>
   * batch_info is the list of credit batch info.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.BatchInfoOrBuilder getBatchInfoOrBuilder(
      int index) {
    return batchInfo_.get(index);
  }

  public static final int SEQUENCES_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.regen.ecocredit.v1alpha2.CreditTypeSeq> sequences_;
  /**
   * <pre>
   * sequences is the list of credit type sequence.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
   */
  @java.lang.Override
  public java.util.List<com.regen.ecocredit.v1alpha2.CreditTypeSeq> getSequencesList() {
    return sequences_;
  }
  /**
   * <pre>
   * sequences is the list of credit type sequence.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.regen.ecocredit.v1alpha2.CreditTypeSeqOrBuilder> 
      getSequencesOrBuilderList() {
    return sequences_;
  }
  /**
   * <pre>
   * sequences is the list of credit type sequence.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
   */
  @java.lang.Override
  public int getSequencesCount() {
    return sequences_.size();
  }
  /**
   * <pre>
   * sequences is the list of credit type sequence.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.CreditTypeSeq getSequences(int index) {
    return sequences_.get(index);
  }
  /**
   * <pre>
   * sequences is the list of credit type sequence.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.CreditTypeSeqOrBuilder getSequencesOrBuilder(
      int index) {
    return sequences_.get(index);
  }

  public static final int BALANCES_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<com.regen.ecocredit.v1alpha2.Balance> balances_;
  /**
   * <pre>
   * balances is the list of credit batch tradable/retired units.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
   */
  @java.lang.Override
  public java.util.List<com.regen.ecocredit.v1alpha2.Balance> getBalancesList() {
    return balances_;
  }
  /**
   * <pre>
   * balances is the list of credit batch tradable/retired units.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.regen.ecocredit.v1alpha2.BalanceOrBuilder> 
      getBalancesOrBuilderList() {
    return balances_;
  }
  /**
   * <pre>
   * balances is the list of credit batch tradable/retired units.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
   */
  @java.lang.Override
  public int getBalancesCount() {
    return balances_.size();
  }
  /**
   * <pre>
   * balances is the list of credit batch tradable/retired units.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.Balance getBalances(int index) {
    return balances_.get(index);
  }
  /**
   * <pre>
   * balances is the list of credit batch tradable/retired units.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.BalanceOrBuilder getBalancesOrBuilder(
      int index) {
    return balances_.get(index);
  }

  public static final int SUPPLIES_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<com.regen.ecocredit.v1alpha2.Supply> supplies_;
  /**
   * <pre>
   * supplies is the list of credit batch tradable/retired supply.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
   */
  @java.lang.Override
  public java.util.List<com.regen.ecocredit.v1alpha2.Supply> getSuppliesList() {
    return supplies_;
  }
  /**
   * <pre>
   * supplies is the list of credit batch tradable/retired supply.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.regen.ecocredit.v1alpha2.SupplyOrBuilder> 
      getSuppliesOrBuilderList() {
    return supplies_;
  }
  /**
   * <pre>
   * supplies is the list of credit batch tradable/retired supply.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
   */
  @java.lang.Override
  public int getSuppliesCount() {
    return supplies_.size();
  }
  /**
   * <pre>
   * supplies is the list of credit batch tradable/retired supply.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.Supply getSupplies(int index) {
    return supplies_.get(index);
  }
  /**
   * <pre>
   * supplies is the list of credit batch tradable/retired supply.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.SupplyOrBuilder getSuppliesOrBuilder(
      int index) {
    return supplies_.get(index);
  }

  public static final int PROJECT_INFO_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<com.regen.ecocredit.v1alpha2.ProjectInfo> projectInfo_;
  /**
   * <pre>
   * project_info is the list of projects.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
   */
  @java.lang.Override
  public java.util.List<com.regen.ecocredit.v1alpha2.ProjectInfo> getProjectInfoList() {
    return projectInfo_;
  }
  /**
   * <pre>
   * project_info is the list of projects.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.regen.ecocredit.v1alpha2.ProjectInfoOrBuilder> 
      getProjectInfoOrBuilderList() {
    return projectInfo_;
  }
  /**
   * <pre>
   * project_info is the list of projects.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
   */
  @java.lang.Override
  public int getProjectInfoCount() {
    return projectInfo_.size();
  }
  /**
   * <pre>
   * project_info is the list of projects.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.ProjectInfo getProjectInfo(int index) {
    return projectInfo_.get(index);
  }
  /**
   * <pre>
   * project_info is the list of projects.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
   */
  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.ProjectInfoOrBuilder getProjectInfoOrBuilder(
      int index) {
    return projectInfo_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (params_ != null) {
      output.writeMessage(1, getParams());
    }
    for (int i = 0; i < classInfo_.size(); i++) {
      output.writeMessage(2, classInfo_.get(i));
    }
    for (int i = 0; i < batchInfo_.size(); i++) {
      output.writeMessage(3, batchInfo_.get(i));
    }
    for (int i = 0; i < sequences_.size(); i++) {
      output.writeMessage(4, sequences_.get(i));
    }
    for (int i = 0; i < balances_.size(); i++) {
      output.writeMessage(5, balances_.get(i));
    }
    for (int i = 0; i < supplies_.size(); i++) {
      output.writeMessage(6, supplies_.get(i));
    }
    for (int i = 0; i < projectInfo_.size(); i++) {
      output.writeMessage(7, projectInfo_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (params_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getParams());
    }
    for (int i = 0; i < classInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, classInfo_.get(i));
    }
    for (int i = 0; i < batchInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, batchInfo_.get(i));
    }
    for (int i = 0; i < sequences_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, sequences_.get(i));
    }
    for (int i = 0; i < balances_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, balances_.get(i));
    }
    for (int i = 0; i < supplies_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, supplies_.get(i));
    }
    for (int i = 0; i < projectInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, projectInfo_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.regen.ecocredit.v1alpha2.GenesisState)) {
      return super.equals(obj);
    }
    com.regen.ecocredit.v1alpha2.GenesisState other = (com.regen.ecocredit.v1alpha2.GenesisState) obj;

    if (hasParams() != other.hasParams()) return false;
    if (hasParams()) {
      if (!getParams()
          .equals(other.getParams())) return false;
    }
    if (!getClassInfoList()
        .equals(other.getClassInfoList())) return false;
    if (!getBatchInfoList()
        .equals(other.getBatchInfoList())) return false;
    if (!getSequencesList()
        .equals(other.getSequencesList())) return false;
    if (!getBalancesList()
        .equals(other.getBalancesList())) return false;
    if (!getSuppliesList()
        .equals(other.getSuppliesList())) return false;
    if (!getProjectInfoList()
        .equals(other.getProjectInfoList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasParams()) {
      hash = (37 * hash) + PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getParams().hashCode();
    }
    if (getClassInfoCount() > 0) {
      hash = (37 * hash) + CLASS_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getClassInfoList().hashCode();
    }
    if (getBatchInfoCount() > 0) {
      hash = (37 * hash) + BATCH_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getBatchInfoList().hashCode();
    }
    if (getSequencesCount() > 0) {
      hash = (37 * hash) + SEQUENCES_FIELD_NUMBER;
      hash = (53 * hash) + getSequencesList().hashCode();
    }
    if (getBalancesCount() > 0) {
      hash = (37 * hash) + BALANCES_FIELD_NUMBER;
      hash = (53 * hash) + getBalancesList().hashCode();
    }
    if (getSuppliesCount() > 0) {
      hash = (37 * hash) + SUPPLIES_FIELD_NUMBER;
      hash = (53 * hash) + getSuppliesList().hashCode();
    }
    if (getProjectInfoCount() > 0) {
      hash = (37 * hash) + PROJECT_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getProjectInfoList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.regen.ecocredit.v1alpha2.GenesisState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.regen.ecocredit.v1alpha2.GenesisState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.regen.ecocredit.v1alpha2.GenesisState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.regen.ecocredit.v1alpha2.GenesisState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.regen.ecocredit.v1alpha2.GenesisState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.regen.ecocredit.v1alpha2.GenesisState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.regen.ecocredit.v1alpha2.GenesisState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.regen.ecocredit.v1alpha2.GenesisState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.regen.ecocredit.v1alpha2.GenesisState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.regen.ecocredit.v1alpha2.GenesisState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.regen.ecocredit.v1alpha2.GenesisState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.regen.ecocredit.v1alpha2.GenesisState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.regen.ecocredit.v1alpha2.GenesisState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * GenesisState defines ecocredit module's genesis state.
   * </pre>
   *
   * Protobuf type {@code regen.ecocredit.v1alpha2.GenesisState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:regen.ecocredit.v1alpha2.GenesisState)
      com.regen.ecocredit.v1alpha2.GenesisStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.regen.ecocredit.v1alpha2.GenesisProto.internal_static_regen_ecocredit_v1alpha2_GenesisState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.regen.ecocredit.v1alpha2.GenesisProto.internal_static_regen_ecocredit_v1alpha2_GenesisState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.regen.ecocredit.v1alpha2.GenesisState.class, com.regen.ecocredit.v1alpha2.GenesisState.Builder.class);
    }

    // Construct using com.regen.ecocredit.v1alpha2.GenesisState.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      params_ = null;
      if (paramsBuilder_ != null) {
        paramsBuilder_.dispose();
        paramsBuilder_ = null;
      }
      if (classInfoBuilder_ == null) {
        classInfo_ = java.util.Collections.emptyList();
      } else {
        classInfo_ = null;
        classInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (batchInfoBuilder_ == null) {
        batchInfo_ = java.util.Collections.emptyList();
      } else {
        batchInfo_ = null;
        batchInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (sequencesBuilder_ == null) {
        sequences_ = java.util.Collections.emptyList();
      } else {
        sequences_ = null;
        sequencesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (balancesBuilder_ == null) {
        balances_ = java.util.Collections.emptyList();
      } else {
        balances_ = null;
        balancesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      if (suppliesBuilder_ == null) {
        supplies_ = java.util.Collections.emptyList();
      } else {
        supplies_ = null;
        suppliesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (projectInfoBuilder_ == null) {
        projectInfo_ = java.util.Collections.emptyList();
      } else {
        projectInfo_ = null;
        projectInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.regen.ecocredit.v1alpha2.GenesisProto.internal_static_regen_ecocredit_v1alpha2_GenesisState_descriptor;
    }

    @java.lang.Override
    public com.regen.ecocredit.v1alpha2.GenesisState getDefaultInstanceForType() {
      return com.regen.ecocredit.v1alpha2.GenesisState.getDefaultInstance();
    }

    @java.lang.Override
    public com.regen.ecocredit.v1alpha2.GenesisState build() {
      com.regen.ecocredit.v1alpha2.GenesisState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.regen.ecocredit.v1alpha2.GenesisState buildPartial() {
      com.regen.ecocredit.v1alpha2.GenesisState result = new com.regen.ecocredit.v1alpha2.GenesisState(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.regen.ecocredit.v1alpha2.GenesisState result) {
      if (classInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          classInfo_ = java.util.Collections.unmodifiableList(classInfo_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.classInfo_ = classInfo_;
      } else {
        result.classInfo_ = classInfoBuilder_.build();
      }
      if (batchInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          batchInfo_ = java.util.Collections.unmodifiableList(batchInfo_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.batchInfo_ = batchInfo_;
      } else {
        result.batchInfo_ = batchInfoBuilder_.build();
      }
      if (sequencesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          sequences_ = java.util.Collections.unmodifiableList(sequences_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.sequences_ = sequences_;
      } else {
        result.sequences_ = sequencesBuilder_.build();
      }
      if (balancesBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          balances_ = java.util.Collections.unmodifiableList(balances_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.balances_ = balances_;
      } else {
        result.balances_ = balancesBuilder_.build();
      }
      if (suppliesBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          supplies_ = java.util.Collections.unmodifiableList(supplies_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.supplies_ = supplies_;
      } else {
        result.supplies_ = suppliesBuilder_.build();
      }
      if (projectInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          projectInfo_ = java.util.Collections.unmodifiableList(projectInfo_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.projectInfo_ = projectInfo_;
      } else {
        result.projectInfo_ = projectInfoBuilder_.build();
      }
    }

    private void buildPartial0(com.regen.ecocredit.v1alpha2.GenesisState result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.params_ = paramsBuilder_ == null
            ? params_
            : paramsBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.regen.ecocredit.v1alpha2.GenesisState) {
        return mergeFrom((com.regen.ecocredit.v1alpha2.GenesisState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.regen.ecocredit.v1alpha2.GenesisState other) {
      if (other == com.regen.ecocredit.v1alpha2.GenesisState.getDefaultInstance()) return this;
      if (other.hasParams()) {
        mergeParams(other.getParams());
      }
      if (classInfoBuilder_ == null) {
        if (!other.classInfo_.isEmpty()) {
          if (classInfo_.isEmpty()) {
            classInfo_ = other.classInfo_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureClassInfoIsMutable();
            classInfo_.addAll(other.classInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.classInfo_.isEmpty()) {
          if (classInfoBuilder_.isEmpty()) {
            classInfoBuilder_.dispose();
            classInfoBuilder_ = null;
            classInfo_ = other.classInfo_;
            bitField0_ = (bitField0_ & ~0x00000002);
            classInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getClassInfoFieldBuilder() : null;
          } else {
            classInfoBuilder_.addAllMessages(other.classInfo_);
          }
        }
      }
      if (batchInfoBuilder_ == null) {
        if (!other.batchInfo_.isEmpty()) {
          if (batchInfo_.isEmpty()) {
            batchInfo_ = other.batchInfo_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureBatchInfoIsMutable();
            batchInfo_.addAll(other.batchInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.batchInfo_.isEmpty()) {
          if (batchInfoBuilder_.isEmpty()) {
            batchInfoBuilder_.dispose();
            batchInfoBuilder_ = null;
            batchInfo_ = other.batchInfo_;
            bitField0_ = (bitField0_ & ~0x00000004);
            batchInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBatchInfoFieldBuilder() : null;
          } else {
            batchInfoBuilder_.addAllMessages(other.batchInfo_);
          }
        }
      }
      if (sequencesBuilder_ == null) {
        if (!other.sequences_.isEmpty()) {
          if (sequences_.isEmpty()) {
            sequences_ = other.sequences_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSequencesIsMutable();
            sequences_.addAll(other.sequences_);
          }
          onChanged();
        }
      } else {
        if (!other.sequences_.isEmpty()) {
          if (sequencesBuilder_.isEmpty()) {
            sequencesBuilder_.dispose();
            sequencesBuilder_ = null;
            sequences_ = other.sequences_;
            bitField0_ = (bitField0_ & ~0x00000008);
            sequencesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSequencesFieldBuilder() : null;
          } else {
            sequencesBuilder_.addAllMessages(other.sequences_);
          }
        }
      }
      if (balancesBuilder_ == null) {
        if (!other.balances_.isEmpty()) {
          if (balances_.isEmpty()) {
            balances_ = other.balances_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureBalancesIsMutable();
            balances_.addAll(other.balances_);
          }
          onChanged();
        }
      } else {
        if (!other.balances_.isEmpty()) {
          if (balancesBuilder_.isEmpty()) {
            balancesBuilder_.dispose();
            balancesBuilder_ = null;
            balances_ = other.balances_;
            bitField0_ = (bitField0_ & ~0x00000010);
            balancesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBalancesFieldBuilder() : null;
          } else {
            balancesBuilder_.addAllMessages(other.balances_);
          }
        }
      }
      if (suppliesBuilder_ == null) {
        if (!other.supplies_.isEmpty()) {
          if (supplies_.isEmpty()) {
            supplies_ = other.supplies_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSuppliesIsMutable();
            supplies_.addAll(other.supplies_);
          }
          onChanged();
        }
      } else {
        if (!other.supplies_.isEmpty()) {
          if (suppliesBuilder_.isEmpty()) {
            suppliesBuilder_.dispose();
            suppliesBuilder_ = null;
            supplies_ = other.supplies_;
            bitField0_ = (bitField0_ & ~0x00000020);
            suppliesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSuppliesFieldBuilder() : null;
          } else {
            suppliesBuilder_.addAllMessages(other.supplies_);
          }
        }
      }
      if (projectInfoBuilder_ == null) {
        if (!other.projectInfo_.isEmpty()) {
          if (projectInfo_.isEmpty()) {
            projectInfo_ = other.projectInfo_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureProjectInfoIsMutable();
            projectInfo_.addAll(other.projectInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.projectInfo_.isEmpty()) {
          if (projectInfoBuilder_.isEmpty()) {
            projectInfoBuilder_.dispose();
            projectInfoBuilder_ = null;
            projectInfo_ = other.projectInfo_;
            bitField0_ = (bitField0_ & ~0x00000040);
            projectInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getProjectInfoFieldBuilder() : null;
          } else {
            projectInfoBuilder_.addAllMessages(other.projectInfo_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getParamsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.regen.ecocredit.v1alpha2.ClassInfo m =
                  input.readMessage(
                      com.regen.ecocredit.v1alpha2.ClassInfo.parser(),
                      extensionRegistry);
              if (classInfoBuilder_ == null) {
                ensureClassInfoIsMutable();
                classInfo_.add(m);
              } else {
                classInfoBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.regen.ecocredit.v1alpha2.BatchInfo m =
                  input.readMessage(
                      com.regen.ecocredit.v1alpha2.BatchInfo.parser(),
                      extensionRegistry);
              if (batchInfoBuilder_ == null) {
                ensureBatchInfoIsMutable();
                batchInfo_.add(m);
              } else {
                batchInfoBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.regen.ecocredit.v1alpha2.CreditTypeSeq m =
                  input.readMessage(
                      com.regen.ecocredit.v1alpha2.CreditTypeSeq.parser(),
                      extensionRegistry);
              if (sequencesBuilder_ == null) {
                ensureSequencesIsMutable();
                sequences_.add(m);
              } else {
                sequencesBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              com.regen.ecocredit.v1alpha2.Balance m =
                  input.readMessage(
                      com.regen.ecocredit.v1alpha2.Balance.parser(),
                      extensionRegistry);
              if (balancesBuilder_ == null) {
                ensureBalancesIsMutable();
                balances_.add(m);
              } else {
                balancesBuilder_.addMessage(m);
              }
              break;
            } // case 42
            case 50: {
              com.regen.ecocredit.v1alpha2.Supply m =
                  input.readMessage(
                      com.regen.ecocredit.v1alpha2.Supply.parser(),
                      extensionRegistry);
              if (suppliesBuilder_ == null) {
                ensureSuppliesIsMutable();
                supplies_.add(m);
              } else {
                suppliesBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 58: {
              com.regen.ecocredit.v1alpha2.ProjectInfo m =
                  input.readMessage(
                      com.regen.ecocredit.v1alpha2.ProjectInfo.parser(),
                      extensionRegistry);
              if (projectInfoBuilder_ == null) {
                ensureProjectInfoIsMutable();
                projectInfo_.add(m);
              } else {
                projectInfoBuilder_.addMessage(m);
              }
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.regen.ecocredit.v1alpha2.Params params_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.Params, com.regen.ecocredit.v1alpha2.Params.Builder, com.regen.ecocredit.v1alpha2.ParamsOrBuilder> paramsBuilder_;
    /**
     * <pre>
     * Params contains the updateable global parameters for use with the x/params
     * module
     * </pre>
     *
     * <code>.regen.ecocredit.v1alpha2.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return Whether the params field is set.
     */
    public boolean hasParams() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Params contains the updateable global parameters for use with the x/params
     * module
     * </pre>
     *
     * <code>.regen.ecocredit.v1alpha2.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return The params.
     */
    public com.regen.ecocredit.v1alpha2.Params getParams() {
      if (paramsBuilder_ == null) {
        return params_ == null ? com.regen.ecocredit.v1alpha2.Params.getDefaultInstance() : params_;
      } else {
        return paramsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Params contains the updateable global parameters for use with the x/params
     * module
     * </pre>
     *
     * <code>.regen.ecocredit.v1alpha2.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder setParams(com.regen.ecocredit.v1alpha2.Params value) {
      if (paramsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
      } else {
        paramsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Params contains the updateable global parameters for use with the x/params
     * module
     * </pre>
     *
     * <code>.regen.ecocredit.v1alpha2.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder setParams(
        com.regen.ecocredit.v1alpha2.Params.Builder builderForValue) {
      if (paramsBuilder_ == null) {
        params_ = builderForValue.build();
      } else {
        paramsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Params contains the updateable global parameters for use with the x/params
     * module
     * </pre>
     *
     * <code>.regen.ecocredit.v1alpha2.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeParams(com.regen.ecocredit.v1alpha2.Params value) {
      if (paramsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          params_ != null &&
          params_ != com.regen.ecocredit.v1alpha2.Params.getDefaultInstance()) {
          getParamsBuilder().mergeFrom(value);
        } else {
          params_ = value;
        }
      } else {
        paramsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Params contains the updateable global parameters for use with the x/params
     * module
     * </pre>
     *
     * <code>.regen.ecocredit.v1alpha2.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearParams() {
      bitField0_ = (bitField0_ & ~0x00000001);
      params_ = null;
      if (paramsBuilder_ != null) {
        paramsBuilder_.dispose();
        paramsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Params contains the updateable global parameters for use with the x/params
     * module
     * </pre>
     *
     * <code>.regen.ecocredit.v1alpha2.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public com.regen.ecocredit.v1alpha2.Params.Builder getParamsBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getParamsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Params contains the updateable global parameters for use with the x/params
     * module
     * </pre>
     *
     * <code>.regen.ecocredit.v1alpha2.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public com.regen.ecocredit.v1alpha2.ParamsOrBuilder getParamsOrBuilder() {
      if (paramsBuilder_ != null) {
        return paramsBuilder_.getMessageOrBuilder();
      } else {
        return params_ == null ?
            com.regen.ecocredit.v1alpha2.Params.getDefaultInstance() : params_;
      }
    }
    /**
     * <pre>
     * Params contains the updateable global parameters for use with the x/params
     * module
     * </pre>
     *
     * <code>.regen.ecocredit.v1alpha2.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.Params, com.regen.ecocredit.v1alpha2.Params.Builder, com.regen.ecocredit.v1alpha2.ParamsOrBuilder> 
        getParamsFieldBuilder() {
      if (paramsBuilder_ == null) {
        paramsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.regen.ecocredit.v1alpha2.Params, com.regen.ecocredit.v1alpha2.Params.Builder, com.regen.ecocredit.v1alpha2.ParamsOrBuilder>(
                getParams(),
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      return paramsBuilder_;
    }

    private java.util.List<com.regen.ecocredit.v1alpha2.ClassInfo> classInfo_ =
      java.util.Collections.emptyList();
    private void ensureClassInfoIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        classInfo_ = new java.util.ArrayList<com.regen.ecocredit.v1alpha2.ClassInfo>(classInfo_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.ClassInfo, com.regen.ecocredit.v1alpha2.ClassInfo.Builder, com.regen.ecocredit.v1alpha2.ClassInfoOrBuilder> classInfoBuilder_;

    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public java.util.List<com.regen.ecocredit.v1alpha2.ClassInfo> getClassInfoList() {
      if (classInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(classInfo_);
      } else {
        return classInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public int getClassInfoCount() {
      if (classInfoBuilder_ == null) {
        return classInfo_.size();
      } else {
        return classInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.ClassInfo getClassInfo(int index) {
      if (classInfoBuilder_ == null) {
        return classInfo_.get(index);
      } else {
        return classInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public Builder setClassInfo(
        int index, com.regen.ecocredit.v1alpha2.ClassInfo value) {
      if (classInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClassInfoIsMutable();
        classInfo_.set(index, value);
        onChanged();
      } else {
        classInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public Builder setClassInfo(
        int index, com.regen.ecocredit.v1alpha2.ClassInfo.Builder builderForValue) {
      if (classInfoBuilder_ == null) {
        ensureClassInfoIsMutable();
        classInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        classInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public Builder addClassInfo(com.regen.ecocredit.v1alpha2.ClassInfo value) {
      if (classInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClassInfoIsMutable();
        classInfo_.add(value);
        onChanged();
      } else {
        classInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public Builder addClassInfo(
        int index, com.regen.ecocredit.v1alpha2.ClassInfo value) {
      if (classInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClassInfoIsMutable();
        classInfo_.add(index, value);
        onChanged();
      } else {
        classInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public Builder addClassInfo(
        com.regen.ecocredit.v1alpha2.ClassInfo.Builder builderForValue) {
      if (classInfoBuilder_ == null) {
        ensureClassInfoIsMutable();
        classInfo_.add(builderForValue.build());
        onChanged();
      } else {
        classInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public Builder addClassInfo(
        int index, com.regen.ecocredit.v1alpha2.ClassInfo.Builder builderForValue) {
      if (classInfoBuilder_ == null) {
        ensureClassInfoIsMutable();
        classInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        classInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public Builder addAllClassInfo(
        java.lang.Iterable<? extends com.regen.ecocredit.v1alpha2.ClassInfo> values) {
      if (classInfoBuilder_ == null) {
        ensureClassInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, classInfo_);
        onChanged();
      } else {
        classInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public Builder clearClassInfo() {
      if (classInfoBuilder_ == null) {
        classInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        classInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public Builder removeClassInfo(int index) {
      if (classInfoBuilder_ == null) {
        ensureClassInfoIsMutable();
        classInfo_.remove(index);
        onChanged();
      } else {
        classInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.ClassInfo.Builder getClassInfoBuilder(
        int index) {
      return getClassInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.ClassInfoOrBuilder getClassInfoOrBuilder(
        int index) {
      if (classInfoBuilder_ == null) {
        return classInfo_.get(index);  } else {
        return classInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public java.util.List<? extends com.regen.ecocredit.v1alpha2.ClassInfoOrBuilder> 
         getClassInfoOrBuilderList() {
      if (classInfoBuilder_ != null) {
        return classInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(classInfo_);
      }
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.ClassInfo.Builder addClassInfoBuilder() {
      return getClassInfoFieldBuilder().addBuilder(
          com.regen.ecocredit.v1alpha2.ClassInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.ClassInfo.Builder addClassInfoBuilder(
        int index) {
      return getClassInfoFieldBuilder().addBuilder(
          index, com.regen.ecocredit.v1alpha2.ClassInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * class_info is the list of credit class info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ClassInfo class_info = 2 [json_name = "classInfo"];</code>
     */
    public java.util.List<com.regen.ecocredit.v1alpha2.ClassInfo.Builder> 
         getClassInfoBuilderList() {
      return getClassInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.ClassInfo, com.regen.ecocredit.v1alpha2.ClassInfo.Builder, com.regen.ecocredit.v1alpha2.ClassInfoOrBuilder> 
        getClassInfoFieldBuilder() {
      if (classInfoBuilder_ == null) {
        classInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.regen.ecocredit.v1alpha2.ClassInfo, com.regen.ecocredit.v1alpha2.ClassInfo.Builder, com.regen.ecocredit.v1alpha2.ClassInfoOrBuilder>(
                classInfo_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        classInfo_ = null;
      }
      return classInfoBuilder_;
    }

    private java.util.List<com.regen.ecocredit.v1alpha2.BatchInfo> batchInfo_ =
      java.util.Collections.emptyList();
    private void ensureBatchInfoIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        batchInfo_ = new java.util.ArrayList<com.regen.ecocredit.v1alpha2.BatchInfo>(batchInfo_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.BatchInfo, com.regen.ecocredit.v1alpha2.BatchInfo.Builder, com.regen.ecocredit.v1alpha2.BatchInfoOrBuilder> batchInfoBuilder_;

    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public java.util.List<com.regen.ecocredit.v1alpha2.BatchInfo> getBatchInfoList() {
      if (batchInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(batchInfo_);
      } else {
        return batchInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public int getBatchInfoCount() {
      if (batchInfoBuilder_ == null) {
        return batchInfo_.size();
      } else {
        return batchInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.BatchInfo getBatchInfo(int index) {
      if (batchInfoBuilder_ == null) {
        return batchInfo_.get(index);
      } else {
        return batchInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public Builder setBatchInfo(
        int index, com.regen.ecocredit.v1alpha2.BatchInfo value) {
      if (batchInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBatchInfoIsMutable();
        batchInfo_.set(index, value);
        onChanged();
      } else {
        batchInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public Builder setBatchInfo(
        int index, com.regen.ecocredit.v1alpha2.BatchInfo.Builder builderForValue) {
      if (batchInfoBuilder_ == null) {
        ensureBatchInfoIsMutable();
        batchInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        batchInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public Builder addBatchInfo(com.regen.ecocredit.v1alpha2.BatchInfo value) {
      if (batchInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBatchInfoIsMutable();
        batchInfo_.add(value);
        onChanged();
      } else {
        batchInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public Builder addBatchInfo(
        int index, com.regen.ecocredit.v1alpha2.BatchInfo value) {
      if (batchInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBatchInfoIsMutable();
        batchInfo_.add(index, value);
        onChanged();
      } else {
        batchInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public Builder addBatchInfo(
        com.regen.ecocredit.v1alpha2.BatchInfo.Builder builderForValue) {
      if (batchInfoBuilder_ == null) {
        ensureBatchInfoIsMutable();
        batchInfo_.add(builderForValue.build());
        onChanged();
      } else {
        batchInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public Builder addBatchInfo(
        int index, com.regen.ecocredit.v1alpha2.BatchInfo.Builder builderForValue) {
      if (batchInfoBuilder_ == null) {
        ensureBatchInfoIsMutable();
        batchInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        batchInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public Builder addAllBatchInfo(
        java.lang.Iterable<? extends com.regen.ecocredit.v1alpha2.BatchInfo> values) {
      if (batchInfoBuilder_ == null) {
        ensureBatchInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, batchInfo_);
        onChanged();
      } else {
        batchInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public Builder clearBatchInfo() {
      if (batchInfoBuilder_ == null) {
        batchInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        batchInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public Builder removeBatchInfo(int index) {
      if (batchInfoBuilder_ == null) {
        ensureBatchInfoIsMutable();
        batchInfo_.remove(index);
        onChanged();
      } else {
        batchInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.BatchInfo.Builder getBatchInfoBuilder(
        int index) {
      return getBatchInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.BatchInfoOrBuilder getBatchInfoOrBuilder(
        int index) {
      if (batchInfoBuilder_ == null) {
        return batchInfo_.get(index);  } else {
        return batchInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public java.util.List<? extends com.regen.ecocredit.v1alpha2.BatchInfoOrBuilder> 
         getBatchInfoOrBuilderList() {
      if (batchInfoBuilder_ != null) {
        return batchInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(batchInfo_);
      }
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.BatchInfo.Builder addBatchInfoBuilder() {
      return getBatchInfoFieldBuilder().addBuilder(
          com.regen.ecocredit.v1alpha2.BatchInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.BatchInfo.Builder addBatchInfoBuilder(
        int index) {
      return getBatchInfoFieldBuilder().addBuilder(
          index, com.regen.ecocredit.v1alpha2.BatchInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * batch_info is the list of credit batch info.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.BatchInfo batch_info = 3 [json_name = "batchInfo"];</code>
     */
    public java.util.List<com.regen.ecocredit.v1alpha2.BatchInfo.Builder> 
         getBatchInfoBuilderList() {
      return getBatchInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.BatchInfo, com.regen.ecocredit.v1alpha2.BatchInfo.Builder, com.regen.ecocredit.v1alpha2.BatchInfoOrBuilder> 
        getBatchInfoFieldBuilder() {
      if (batchInfoBuilder_ == null) {
        batchInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.regen.ecocredit.v1alpha2.BatchInfo, com.regen.ecocredit.v1alpha2.BatchInfo.Builder, com.regen.ecocredit.v1alpha2.BatchInfoOrBuilder>(
                batchInfo_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        batchInfo_ = null;
      }
      return batchInfoBuilder_;
    }

    private java.util.List<com.regen.ecocredit.v1alpha2.CreditTypeSeq> sequences_ =
      java.util.Collections.emptyList();
    private void ensureSequencesIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        sequences_ = new java.util.ArrayList<com.regen.ecocredit.v1alpha2.CreditTypeSeq>(sequences_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.CreditTypeSeq, com.regen.ecocredit.v1alpha2.CreditTypeSeq.Builder, com.regen.ecocredit.v1alpha2.CreditTypeSeqOrBuilder> sequencesBuilder_;

    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public java.util.List<com.regen.ecocredit.v1alpha2.CreditTypeSeq> getSequencesList() {
      if (sequencesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sequences_);
      } else {
        return sequencesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public int getSequencesCount() {
      if (sequencesBuilder_ == null) {
        return sequences_.size();
      } else {
        return sequencesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public com.regen.ecocredit.v1alpha2.CreditTypeSeq getSequences(int index) {
      if (sequencesBuilder_ == null) {
        return sequences_.get(index);
      } else {
        return sequencesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public Builder setSequences(
        int index, com.regen.ecocredit.v1alpha2.CreditTypeSeq value) {
      if (sequencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSequencesIsMutable();
        sequences_.set(index, value);
        onChanged();
      } else {
        sequencesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public Builder setSequences(
        int index, com.regen.ecocredit.v1alpha2.CreditTypeSeq.Builder builderForValue) {
      if (sequencesBuilder_ == null) {
        ensureSequencesIsMutable();
        sequences_.set(index, builderForValue.build());
        onChanged();
      } else {
        sequencesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public Builder addSequences(com.regen.ecocredit.v1alpha2.CreditTypeSeq value) {
      if (sequencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSequencesIsMutable();
        sequences_.add(value);
        onChanged();
      } else {
        sequencesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public Builder addSequences(
        int index, com.regen.ecocredit.v1alpha2.CreditTypeSeq value) {
      if (sequencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSequencesIsMutable();
        sequences_.add(index, value);
        onChanged();
      } else {
        sequencesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public Builder addSequences(
        com.regen.ecocredit.v1alpha2.CreditTypeSeq.Builder builderForValue) {
      if (sequencesBuilder_ == null) {
        ensureSequencesIsMutable();
        sequences_.add(builderForValue.build());
        onChanged();
      } else {
        sequencesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public Builder addSequences(
        int index, com.regen.ecocredit.v1alpha2.CreditTypeSeq.Builder builderForValue) {
      if (sequencesBuilder_ == null) {
        ensureSequencesIsMutable();
        sequences_.add(index, builderForValue.build());
        onChanged();
      } else {
        sequencesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public Builder addAllSequences(
        java.lang.Iterable<? extends com.regen.ecocredit.v1alpha2.CreditTypeSeq> values) {
      if (sequencesBuilder_ == null) {
        ensureSequencesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sequences_);
        onChanged();
      } else {
        sequencesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public Builder clearSequences() {
      if (sequencesBuilder_ == null) {
        sequences_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        sequencesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public Builder removeSequences(int index) {
      if (sequencesBuilder_ == null) {
        ensureSequencesIsMutable();
        sequences_.remove(index);
        onChanged();
      } else {
        sequencesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public com.regen.ecocredit.v1alpha2.CreditTypeSeq.Builder getSequencesBuilder(
        int index) {
      return getSequencesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public com.regen.ecocredit.v1alpha2.CreditTypeSeqOrBuilder getSequencesOrBuilder(
        int index) {
      if (sequencesBuilder_ == null) {
        return sequences_.get(index);  } else {
        return sequencesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public java.util.List<? extends com.regen.ecocredit.v1alpha2.CreditTypeSeqOrBuilder> 
         getSequencesOrBuilderList() {
      if (sequencesBuilder_ != null) {
        return sequencesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sequences_);
      }
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public com.regen.ecocredit.v1alpha2.CreditTypeSeq.Builder addSequencesBuilder() {
      return getSequencesFieldBuilder().addBuilder(
          com.regen.ecocredit.v1alpha2.CreditTypeSeq.getDefaultInstance());
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public com.regen.ecocredit.v1alpha2.CreditTypeSeq.Builder addSequencesBuilder(
        int index) {
      return getSequencesFieldBuilder().addBuilder(
          index, com.regen.ecocredit.v1alpha2.CreditTypeSeq.getDefaultInstance());
    }
    /**
     * <pre>
     * sequences is the list of credit type sequence.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.CreditTypeSeq sequences = 4 [json_name = "sequences"];</code>
     */
    public java.util.List<com.regen.ecocredit.v1alpha2.CreditTypeSeq.Builder> 
         getSequencesBuilderList() {
      return getSequencesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.CreditTypeSeq, com.regen.ecocredit.v1alpha2.CreditTypeSeq.Builder, com.regen.ecocredit.v1alpha2.CreditTypeSeqOrBuilder> 
        getSequencesFieldBuilder() {
      if (sequencesBuilder_ == null) {
        sequencesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.regen.ecocredit.v1alpha2.CreditTypeSeq, com.regen.ecocredit.v1alpha2.CreditTypeSeq.Builder, com.regen.ecocredit.v1alpha2.CreditTypeSeqOrBuilder>(
                sequences_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        sequences_ = null;
      }
      return sequencesBuilder_;
    }

    private java.util.List<com.regen.ecocredit.v1alpha2.Balance> balances_ =
      java.util.Collections.emptyList();
    private void ensureBalancesIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        balances_ = new java.util.ArrayList<com.regen.ecocredit.v1alpha2.Balance>(balances_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.Balance, com.regen.ecocredit.v1alpha2.Balance.Builder, com.regen.ecocredit.v1alpha2.BalanceOrBuilder> balancesBuilder_;

    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public java.util.List<com.regen.ecocredit.v1alpha2.Balance> getBalancesList() {
      if (balancesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(balances_);
      } else {
        return balancesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public int getBalancesCount() {
      if (balancesBuilder_ == null) {
        return balances_.size();
      } else {
        return balancesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public com.regen.ecocredit.v1alpha2.Balance getBalances(int index) {
      if (balancesBuilder_ == null) {
        return balances_.get(index);
      } else {
        return balancesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public Builder setBalances(
        int index, com.regen.ecocredit.v1alpha2.Balance value) {
      if (balancesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBalancesIsMutable();
        balances_.set(index, value);
        onChanged();
      } else {
        balancesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public Builder setBalances(
        int index, com.regen.ecocredit.v1alpha2.Balance.Builder builderForValue) {
      if (balancesBuilder_ == null) {
        ensureBalancesIsMutable();
        balances_.set(index, builderForValue.build());
        onChanged();
      } else {
        balancesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public Builder addBalances(com.regen.ecocredit.v1alpha2.Balance value) {
      if (balancesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBalancesIsMutable();
        balances_.add(value);
        onChanged();
      } else {
        balancesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public Builder addBalances(
        int index, com.regen.ecocredit.v1alpha2.Balance value) {
      if (balancesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBalancesIsMutable();
        balances_.add(index, value);
        onChanged();
      } else {
        balancesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public Builder addBalances(
        com.regen.ecocredit.v1alpha2.Balance.Builder builderForValue) {
      if (balancesBuilder_ == null) {
        ensureBalancesIsMutable();
        balances_.add(builderForValue.build());
        onChanged();
      } else {
        balancesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public Builder addBalances(
        int index, com.regen.ecocredit.v1alpha2.Balance.Builder builderForValue) {
      if (balancesBuilder_ == null) {
        ensureBalancesIsMutable();
        balances_.add(index, builderForValue.build());
        onChanged();
      } else {
        balancesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public Builder addAllBalances(
        java.lang.Iterable<? extends com.regen.ecocredit.v1alpha2.Balance> values) {
      if (balancesBuilder_ == null) {
        ensureBalancesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, balances_);
        onChanged();
      } else {
        balancesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public Builder clearBalances() {
      if (balancesBuilder_ == null) {
        balances_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        balancesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public Builder removeBalances(int index) {
      if (balancesBuilder_ == null) {
        ensureBalancesIsMutable();
        balances_.remove(index);
        onChanged();
      } else {
        balancesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public com.regen.ecocredit.v1alpha2.Balance.Builder getBalancesBuilder(
        int index) {
      return getBalancesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public com.regen.ecocredit.v1alpha2.BalanceOrBuilder getBalancesOrBuilder(
        int index) {
      if (balancesBuilder_ == null) {
        return balances_.get(index);  } else {
        return balancesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public java.util.List<? extends com.regen.ecocredit.v1alpha2.BalanceOrBuilder> 
         getBalancesOrBuilderList() {
      if (balancesBuilder_ != null) {
        return balancesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(balances_);
      }
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public com.regen.ecocredit.v1alpha2.Balance.Builder addBalancesBuilder() {
      return getBalancesFieldBuilder().addBuilder(
          com.regen.ecocredit.v1alpha2.Balance.getDefaultInstance());
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public com.regen.ecocredit.v1alpha2.Balance.Builder addBalancesBuilder(
        int index) {
      return getBalancesFieldBuilder().addBuilder(
          index, com.regen.ecocredit.v1alpha2.Balance.getDefaultInstance());
    }
    /**
     * <pre>
     * balances is the list of credit batch tradable/retired units.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Balance balances = 5 [json_name = "balances"];</code>
     */
    public java.util.List<com.regen.ecocredit.v1alpha2.Balance.Builder> 
         getBalancesBuilderList() {
      return getBalancesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.Balance, com.regen.ecocredit.v1alpha2.Balance.Builder, com.regen.ecocredit.v1alpha2.BalanceOrBuilder> 
        getBalancesFieldBuilder() {
      if (balancesBuilder_ == null) {
        balancesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.regen.ecocredit.v1alpha2.Balance, com.regen.ecocredit.v1alpha2.Balance.Builder, com.regen.ecocredit.v1alpha2.BalanceOrBuilder>(
                balances_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        balances_ = null;
      }
      return balancesBuilder_;
    }

    private java.util.List<com.regen.ecocredit.v1alpha2.Supply> supplies_ =
      java.util.Collections.emptyList();
    private void ensureSuppliesIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        supplies_ = new java.util.ArrayList<com.regen.ecocredit.v1alpha2.Supply>(supplies_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.Supply, com.regen.ecocredit.v1alpha2.Supply.Builder, com.regen.ecocredit.v1alpha2.SupplyOrBuilder> suppliesBuilder_;

    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public java.util.List<com.regen.ecocredit.v1alpha2.Supply> getSuppliesList() {
      if (suppliesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(supplies_);
      } else {
        return suppliesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public int getSuppliesCount() {
      if (suppliesBuilder_ == null) {
        return supplies_.size();
      } else {
        return suppliesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public com.regen.ecocredit.v1alpha2.Supply getSupplies(int index) {
      if (suppliesBuilder_ == null) {
        return supplies_.get(index);
      } else {
        return suppliesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public Builder setSupplies(
        int index, com.regen.ecocredit.v1alpha2.Supply value) {
      if (suppliesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSuppliesIsMutable();
        supplies_.set(index, value);
        onChanged();
      } else {
        suppliesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public Builder setSupplies(
        int index, com.regen.ecocredit.v1alpha2.Supply.Builder builderForValue) {
      if (suppliesBuilder_ == null) {
        ensureSuppliesIsMutable();
        supplies_.set(index, builderForValue.build());
        onChanged();
      } else {
        suppliesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public Builder addSupplies(com.regen.ecocredit.v1alpha2.Supply value) {
      if (suppliesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSuppliesIsMutable();
        supplies_.add(value);
        onChanged();
      } else {
        suppliesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public Builder addSupplies(
        int index, com.regen.ecocredit.v1alpha2.Supply value) {
      if (suppliesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSuppliesIsMutable();
        supplies_.add(index, value);
        onChanged();
      } else {
        suppliesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public Builder addSupplies(
        com.regen.ecocredit.v1alpha2.Supply.Builder builderForValue) {
      if (suppliesBuilder_ == null) {
        ensureSuppliesIsMutable();
        supplies_.add(builderForValue.build());
        onChanged();
      } else {
        suppliesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public Builder addSupplies(
        int index, com.regen.ecocredit.v1alpha2.Supply.Builder builderForValue) {
      if (suppliesBuilder_ == null) {
        ensureSuppliesIsMutable();
        supplies_.add(index, builderForValue.build());
        onChanged();
      } else {
        suppliesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public Builder addAllSupplies(
        java.lang.Iterable<? extends com.regen.ecocredit.v1alpha2.Supply> values) {
      if (suppliesBuilder_ == null) {
        ensureSuppliesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, supplies_);
        onChanged();
      } else {
        suppliesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public Builder clearSupplies() {
      if (suppliesBuilder_ == null) {
        supplies_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        suppliesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public Builder removeSupplies(int index) {
      if (suppliesBuilder_ == null) {
        ensureSuppliesIsMutable();
        supplies_.remove(index);
        onChanged();
      } else {
        suppliesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public com.regen.ecocredit.v1alpha2.Supply.Builder getSuppliesBuilder(
        int index) {
      return getSuppliesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public com.regen.ecocredit.v1alpha2.SupplyOrBuilder getSuppliesOrBuilder(
        int index) {
      if (suppliesBuilder_ == null) {
        return supplies_.get(index);  } else {
        return suppliesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public java.util.List<? extends com.regen.ecocredit.v1alpha2.SupplyOrBuilder> 
         getSuppliesOrBuilderList() {
      if (suppliesBuilder_ != null) {
        return suppliesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(supplies_);
      }
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public com.regen.ecocredit.v1alpha2.Supply.Builder addSuppliesBuilder() {
      return getSuppliesFieldBuilder().addBuilder(
          com.regen.ecocredit.v1alpha2.Supply.getDefaultInstance());
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public com.regen.ecocredit.v1alpha2.Supply.Builder addSuppliesBuilder(
        int index) {
      return getSuppliesFieldBuilder().addBuilder(
          index, com.regen.ecocredit.v1alpha2.Supply.getDefaultInstance());
    }
    /**
     * <pre>
     * supplies is the list of credit batch tradable/retired supply.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.Supply supplies = 6 [json_name = "supplies"];</code>
     */
    public java.util.List<com.regen.ecocredit.v1alpha2.Supply.Builder> 
         getSuppliesBuilderList() {
      return getSuppliesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.Supply, com.regen.ecocredit.v1alpha2.Supply.Builder, com.regen.ecocredit.v1alpha2.SupplyOrBuilder> 
        getSuppliesFieldBuilder() {
      if (suppliesBuilder_ == null) {
        suppliesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.regen.ecocredit.v1alpha2.Supply, com.regen.ecocredit.v1alpha2.Supply.Builder, com.regen.ecocredit.v1alpha2.SupplyOrBuilder>(
                supplies_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        supplies_ = null;
      }
      return suppliesBuilder_;
    }

    private java.util.List<com.regen.ecocredit.v1alpha2.ProjectInfo> projectInfo_ =
      java.util.Collections.emptyList();
    private void ensureProjectInfoIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        projectInfo_ = new java.util.ArrayList<com.regen.ecocredit.v1alpha2.ProjectInfo>(projectInfo_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.ProjectInfo, com.regen.ecocredit.v1alpha2.ProjectInfo.Builder, com.regen.ecocredit.v1alpha2.ProjectInfoOrBuilder> projectInfoBuilder_;

    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public java.util.List<com.regen.ecocredit.v1alpha2.ProjectInfo> getProjectInfoList() {
      if (projectInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(projectInfo_);
      } else {
        return projectInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public int getProjectInfoCount() {
      if (projectInfoBuilder_ == null) {
        return projectInfo_.size();
      } else {
        return projectInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.ProjectInfo getProjectInfo(int index) {
      if (projectInfoBuilder_ == null) {
        return projectInfo_.get(index);
      } else {
        return projectInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public Builder setProjectInfo(
        int index, com.regen.ecocredit.v1alpha2.ProjectInfo value) {
      if (projectInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProjectInfoIsMutable();
        projectInfo_.set(index, value);
        onChanged();
      } else {
        projectInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public Builder setProjectInfo(
        int index, com.regen.ecocredit.v1alpha2.ProjectInfo.Builder builderForValue) {
      if (projectInfoBuilder_ == null) {
        ensureProjectInfoIsMutable();
        projectInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        projectInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public Builder addProjectInfo(com.regen.ecocredit.v1alpha2.ProjectInfo value) {
      if (projectInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProjectInfoIsMutable();
        projectInfo_.add(value);
        onChanged();
      } else {
        projectInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public Builder addProjectInfo(
        int index, com.regen.ecocredit.v1alpha2.ProjectInfo value) {
      if (projectInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProjectInfoIsMutable();
        projectInfo_.add(index, value);
        onChanged();
      } else {
        projectInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public Builder addProjectInfo(
        com.regen.ecocredit.v1alpha2.ProjectInfo.Builder builderForValue) {
      if (projectInfoBuilder_ == null) {
        ensureProjectInfoIsMutable();
        projectInfo_.add(builderForValue.build());
        onChanged();
      } else {
        projectInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public Builder addProjectInfo(
        int index, com.regen.ecocredit.v1alpha2.ProjectInfo.Builder builderForValue) {
      if (projectInfoBuilder_ == null) {
        ensureProjectInfoIsMutable();
        projectInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        projectInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public Builder addAllProjectInfo(
        java.lang.Iterable<? extends com.regen.ecocredit.v1alpha2.ProjectInfo> values) {
      if (projectInfoBuilder_ == null) {
        ensureProjectInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, projectInfo_);
        onChanged();
      } else {
        projectInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public Builder clearProjectInfo() {
      if (projectInfoBuilder_ == null) {
        projectInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        projectInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public Builder removeProjectInfo(int index) {
      if (projectInfoBuilder_ == null) {
        ensureProjectInfoIsMutable();
        projectInfo_.remove(index);
        onChanged();
      } else {
        projectInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.ProjectInfo.Builder getProjectInfoBuilder(
        int index) {
      return getProjectInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.ProjectInfoOrBuilder getProjectInfoOrBuilder(
        int index) {
      if (projectInfoBuilder_ == null) {
        return projectInfo_.get(index);  } else {
        return projectInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public java.util.List<? extends com.regen.ecocredit.v1alpha2.ProjectInfoOrBuilder> 
         getProjectInfoOrBuilderList() {
      if (projectInfoBuilder_ != null) {
        return projectInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(projectInfo_);
      }
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.ProjectInfo.Builder addProjectInfoBuilder() {
      return getProjectInfoFieldBuilder().addBuilder(
          com.regen.ecocredit.v1alpha2.ProjectInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public com.regen.ecocredit.v1alpha2.ProjectInfo.Builder addProjectInfoBuilder(
        int index) {
      return getProjectInfoFieldBuilder().addBuilder(
          index, com.regen.ecocredit.v1alpha2.ProjectInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * project_info is the list of projects.
     * </pre>
     *
     * <code>repeated .regen.ecocredit.v1alpha2.ProjectInfo project_info = 7 [json_name = "projectInfo"];</code>
     */
    public java.util.List<com.regen.ecocredit.v1alpha2.ProjectInfo.Builder> 
         getProjectInfoBuilderList() {
      return getProjectInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.regen.ecocredit.v1alpha2.ProjectInfo, com.regen.ecocredit.v1alpha2.ProjectInfo.Builder, com.regen.ecocredit.v1alpha2.ProjectInfoOrBuilder> 
        getProjectInfoFieldBuilder() {
      if (projectInfoBuilder_ == null) {
        projectInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.regen.ecocredit.v1alpha2.ProjectInfo, com.regen.ecocredit.v1alpha2.ProjectInfo.Builder, com.regen.ecocredit.v1alpha2.ProjectInfoOrBuilder>(
                projectInfo_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        projectInfo_ = null;
      }
      return projectInfoBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:regen.ecocredit.v1alpha2.GenesisState)
  }

  // @@protoc_insertion_point(class_scope:regen.ecocredit.v1alpha2.GenesisState)
  private static final com.regen.ecocredit.v1alpha2.GenesisState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.regen.ecocredit.v1alpha2.GenesisState();
  }

  public static com.regen.ecocredit.v1alpha2.GenesisState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GenesisState>
      PARSER = new com.google.protobuf.AbstractParser<GenesisState>() {
    @java.lang.Override
    public GenesisState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GenesisState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GenesisState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.regen.ecocredit.v1alpha2.GenesisState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: regen/ecocredit/v1alpha2/tx.proto

package com.regen.ecocredit.v1alpha2;

public interface MsgCreateBasketOrBuilder extends
    // @@protoc_insertion_point(interface_extends:regen.ecocredit.v1alpha2.MsgCreateBasket)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * curator is the address of the basket curator who is able to change certain
   * basket settings.
   * </pre>
   *
   * <code>string curator = 1 [json_name = "curator"];</code>
   * @return The curator.
   */
  java.lang.String getCurator();
  /**
   * <pre>
   * curator is the address of the basket curator who is able to change certain
   * basket settings.
   * </pre>
   *
   * <code>string curator = 1 [json_name = "curator"];</code>
   * @return The bytes for curator.
   */
  com.google.protobuf.ByteString
      getCuratorBytes();

  /**
   * <pre>
   * name will be used to create a bank denom for this basket token of the form
   * ecocredit:{curator}:{name}.
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * name will be used to create a bank denom for this basket token of the form
   * ecocredit:{curator}:{name}.
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * display_name will be used to create a bank Metadata display name for this
   * basket token of the form ecocredit:{curator}:{display_name}.
   * </pre>
   *
   * <code>string display_name = 3 [json_name = "displayName"];</code>
   * @return The displayName.
   */
  java.lang.String getDisplayName();
  /**
   * <pre>
   * display_name will be used to create a bank Metadata display name for this
   * basket token of the form ecocredit:{curator}:{display_name}.
   * </pre>
   *
   * <code>string display_name = 3 [json_name = "displayName"];</code>
   * @return The bytes for displayName.
   */
  com.google.protobuf.ByteString
      getDisplayNameBytes();

  /**
   * <pre>
   * exponent is the exponent that will be used for denom metadata. An exponent
   * of 6 will mean that 10^6 units of a basket token should be displayed
   * as one unit in user interfaces.
   * </pre>
   *
   * <code>uint32 exponent = 4 [json_name = "exponent"];</code>
   * @return The exponent.
   */
  int getExponent();

  /**
   * <pre>
   * basket_criteria is the criteria by which credits can be added to the
   * basket. Basket criteria will be applied in order and the first criteria
   * which applies to a credit will determine its multiplier in the basket.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.BasketCriteria basket_criteria = 5 [json_name = "basketCriteria"];</code>
   */
  java.util.List<com.regen.ecocredit.v1alpha2.BasketCriteria> 
      getBasketCriteriaList();
  /**
   * <pre>
   * basket_criteria is the criteria by which credits can be added to the
   * basket. Basket criteria will be applied in order and the first criteria
   * which applies to a credit will determine its multiplier in the basket.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.BasketCriteria basket_criteria = 5 [json_name = "basketCriteria"];</code>
   */
  com.regen.ecocredit.v1alpha2.BasketCriteria getBasketCriteria(int index);
  /**
   * <pre>
   * basket_criteria is the criteria by which credits can be added to the
   * basket. Basket criteria will be applied in order and the first criteria
   * which applies to a credit will determine its multiplier in the basket.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.BasketCriteria basket_criteria = 5 [json_name = "basketCriteria"];</code>
   */
  int getBasketCriteriaCount();
  /**
   * <pre>
   * basket_criteria is the criteria by which credits can be added to the
   * basket. Basket criteria will be applied in order and the first criteria
   * which applies to a credit will determine its multiplier in the basket.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.BasketCriteria basket_criteria = 5 [json_name = "basketCriteria"];</code>
   */
  java.util.List<? extends com.regen.ecocredit.v1alpha2.BasketCriteriaOrBuilder> 
      getBasketCriteriaOrBuilderList();
  /**
   * <pre>
   * basket_criteria is the criteria by which credits can be added to the
   * basket. Basket criteria will be applied in order and the first criteria
   * which applies to a credit will determine its multiplier in the basket.
   * </pre>
   *
   * <code>repeated .regen.ecocredit.v1alpha2.BasketCriteria basket_criteria = 5 [json_name = "basketCriteria"];</code>
   */
  com.regen.ecocredit.v1alpha2.BasketCriteriaOrBuilder getBasketCriteriaOrBuilder(
      int index);

  /**
   * <pre>
   * disable_auto_retire allows auto-retirement to be disabled.
   * The credits will be auto-retired if disable_auto_retire is
   * false unless the credits were previously put into the basket by the
   * address picking them from the basket, in which case they will remain
   * tradable.
   * </pre>
   *
   * <code>bool disable_auto_retire = 6 [json_name = "disableAutoRetire"];</code>
   * @return The disableAutoRetire.
   */
  boolean getDisableAutoRetire();

  /**
   * <pre>
   * allow_picking specifies whether an address which didn't deposit the credits
   * in the basket can pick those credits or not. 
   * </pre>
   *
   * <code>bool allow_picking = 7 [json_name = "allowPicking"];</code>
   * @return The allowPicking.
   */
  boolean getAllowPicking();
}

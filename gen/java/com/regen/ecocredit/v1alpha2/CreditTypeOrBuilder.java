// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: regen/ecocredit/v1alpha2/types.proto

package com.regen.ecocredit.v1alpha2;

public interface CreditTypeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:regen.ecocredit.v1alpha2.CreditType)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * the type of credit (e.g. carbon, biodiversity, etc)
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * the type of credit (e.g. carbon, biodiversity, etc)
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * abbreviation is a 1-3 character uppercase abbreviation of the CreditType
   * name, used in batch denominations within the CreditType. It must be unique.
   * </pre>
   *
   * <code>string abbreviation = 2 [json_name = "abbreviation"];</code>
   * @return The abbreviation.
   */
  java.lang.String getAbbreviation();
  /**
   * <pre>
   * abbreviation is a 1-3 character uppercase abbreviation of the CreditType
   * name, used in batch denominations within the CreditType. It must be unique.
   * </pre>
   *
   * <code>string abbreviation = 2 [json_name = "abbreviation"];</code>
   * @return The bytes for abbreviation.
   */
  com.google.protobuf.ByteString
      getAbbreviationBytes();

  /**
   * <pre>
   * the measurement unit (e.g. kg, ton, etc)
   * </pre>
   *
   * <code>string unit = 3 [json_name = "unit"];</code>
   * @return The unit.
   */
  java.lang.String getUnit();
  /**
   * <pre>
   * the measurement unit (e.g. kg, ton, etc)
   * </pre>
   *
   * <code>string unit = 3 [json_name = "unit"];</code>
   * @return The bytes for unit.
   */
  com.google.protobuf.ByteString
      getUnitBytes();

  /**
   * <pre>
   * the decimal precision
   * </pre>
   *
   * <code>uint32 precision = 4 [json_name = "precision"];</code>
   * @return The precision.
   */
  int getPrecision();
}

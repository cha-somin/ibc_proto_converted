// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: regen/ecocredit/v1alpha2/types.proto

package com.regen.ecocredit.v1alpha2;

public interface BasketCreditOrBuilder extends
    // @@protoc_insertion_point(interface_extends:regen.ecocredit.v1alpha2.BasketCredit)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * batch_denom is the unique ID of the credit batch.
   * </pre>
   *
   * <code>string batch_denom = 1 [json_name = "batchDenom"];</code>
   * @return The batchDenom.
   */
  java.lang.String getBatchDenom();
  /**
   * <pre>
   * batch_denom is the unique ID of the credit batch.
   * </pre>
   *
   * <code>string batch_denom = 1 [json_name = "batchDenom"];</code>
   * @return The bytes for batchDenom.
   */
  com.google.protobuf.ByteString
      getBatchDenomBytes();

  /**
   * <pre>
   * tradable_amount is the number of credits in this transfer that can be
   * traded by the recipient. Decimal values are acceptable within the
   * precision returned by Query/Precision.
   * </pre>
   *
   * <code>string tradable_amount = 2 [json_name = "tradableAmount"];</code>
   * @return The tradableAmount.
   */
  java.lang.String getTradableAmount();
  /**
   * <pre>
   * tradable_amount is the number of credits in this transfer that can be
   * traded by the recipient. Decimal values are acceptable within the
   * precision returned by Query/Precision.
   * </pre>
   *
   * <code>string tradable_amount = 2 [json_name = "tradableAmount"];</code>
   * @return The bytes for tradableAmount.
   */
  com.google.protobuf.ByteString
      getTradableAmountBytes();
}

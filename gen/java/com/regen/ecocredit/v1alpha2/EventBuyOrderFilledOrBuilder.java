// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: regen/ecocredit/v1alpha2/events.proto

package com.regen.ecocredit.v1alpha2;

public interface EventBuyOrderFilledOrBuilder extends
    // @@protoc_insertion_point(interface_extends:regen.ecocredit.v1alpha2.EventBuyOrderFilled)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * buy_order_id is the unique ID of the buy order.
   * </pre>
   *
   * <code>uint64 buy_order_id = 1 [json_name = "buyOrderId"];</code>
   * @return The buyOrderId.
   */
  long getBuyOrderId();

  /**
   * <pre>
   * sell_order_id is the unique ID of the sell order.
   * </pre>
   *
   * <code>uint64 sell_order_id = 2 [json_name = "sellOrderId"];</code>
   * @return The sellOrderId.
   */
  long getSellOrderId();

  /**
   * <pre>
   * batch_denom is the credit batch ID of the purchased credits.
   * </pre>
   *
   * <code>string batch_denom = 3 [json_name = "batchDenom"];</code>
   * @return The batchDenom.
   */
  java.lang.String getBatchDenom();
  /**
   * <pre>
   * batch_denom is the credit batch ID of the purchased credits.
   * </pre>
   *
   * <code>string batch_denom = 3 [json_name = "batchDenom"];</code>
   * @return The bytes for batchDenom.
   */
  com.google.protobuf.ByteString
      getBatchDenomBytes();

  /**
   * <pre>
   * quantity is the quantity of the purchased credits.
   * </pre>
   *
   * <code>string quantity = 4 [json_name = "quantity"];</code>
   * @return The quantity.
   */
  java.lang.String getQuantity();
  /**
   * <pre>
   * quantity is the quantity of the purchased credits.
   * </pre>
   *
   * <code>string quantity = 4 [json_name = "quantity"];</code>
   * @return The bytes for quantity.
   */
  com.google.protobuf.ByteString
      getQuantityBytes();

  /**
   * <pre>
   * total_price is the total price for the purchased credits.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin total_price = 5 [json_name = "totalPrice"];</code>
   * @return Whether the totalPrice field is set.
   */
  boolean hasTotalPrice();
  /**
   * <pre>
   * total_price is the total price for the purchased credits.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin total_price = 5 [json_name = "totalPrice"];</code>
   * @return The totalPrice.
   */
  com.cosmos.base.v1beta1.Coin getTotalPrice();
  /**
   * <pre>
   * total_price is the total price for the purchased credits.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin total_price = 5 [json_name = "totalPrice"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getTotalPriceOrBuilder();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmwasm/wasm/v1/tx.proto

package com.cosmwasm.wasm.v1;

public interface MsgStoreCodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmwasm.wasm.v1.MsgStoreCode)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Sender is the that actor that signed the messages
   * </pre>
   *
   * <code>string sender = 1 [json_name = "sender"];</code>
   * @return The sender.
   */
  java.lang.String getSender();
  /**
   * <pre>
   * Sender is the that actor that signed the messages
   * </pre>
   *
   * <code>string sender = 1 [json_name = "sender"];</code>
   * @return The bytes for sender.
   */
  com.google.protobuf.ByteString
      getSenderBytes();

  /**
   * <pre>
   * WASMByteCode can be raw or gzip compressed
   * </pre>
   *
   * <code>bytes wasm_byte_code = 2 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];</code>
   * @return The wasmByteCode.
   */
  com.google.protobuf.ByteString getWasmByteCode();

  /**
   * <pre>
   * InstantiatePermission access control to apply on contract creation,
   * optional
   * </pre>
   *
   * <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5 [json_name = "instantiatePermission"];</code>
   * @return Whether the instantiatePermission field is set.
   */
  boolean hasInstantiatePermission();
  /**
   * <pre>
   * InstantiatePermission access control to apply on contract creation,
   * optional
   * </pre>
   *
   * <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5 [json_name = "instantiatePermission"];</code>
   * @return The instantiatePermission.
   */
  com.cosmwasm.wasm.v1.AccessConfig getInstantiatePermission();
  /**
   * <pre>
   * InstantiatePermission access control to apply on contract creation,
   * optional
   * </pre>
   *
   * <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5 [json_name = "instantiatePermission"];</code>
   */
  com.cosmwasm.wasm.v1.AccessConfigOrBuilder getInstantiatePermissionOrBuilder();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bitsong/merkledrop/v1beta1/merkledrop.proto

package com.bitsong.merkledrop.v1beta1;

public final class MerkledropProto {
  private MerkledropProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bitsong_merkledrop_v1beta1_Merkledrop_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bitsong_merkledrop_v1beta1_Merkledrop_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+bitsong/merkledrop/v1beta1/merkledrop." +
      "proto\022\032bitsong.merkledrop.v1beta1\032\024gogop" +
      "roto/gogo.proto\032\037google/protobuf/timesta" +
      "mp.proto\032\036cosmos/base/v1beta1/coin.proto" +
      "\"\337\002\n\nMerkledrop\022\016\n\002id\030\001 \001(\004R\002id\0227\n\013merkl" +
      "e_root\030\002 \001(\tB\026\362\336\037\022yaml:\"merkle_root\"R\nme" +
      "rkleRoot\022!\n\014start_height\030\003 \001(\003R\013startHei" +
      "ght\022\035\n\nend_height\030\004 \001(\003R\tendHeight\022\024\n\005de" +
      "nom\030\005 \001(\tR\005denom\022F\n\006amount\030\006 \001(\tB.\310\336\037\000\332\336" +
      "\037&github.com/cosmos/cosmos-sdk/types.Int" +
      "R\006amount\022H\n\007claimed\030\007 \001(\tB.\310\336\037\000\332\336\037&githu" +
      "b.com/cosmos/cosmos-sdk/types.IntR\007claim" +
      "ed\022\024\n\005owner\030\010 \001(\tR\005owner:\010\210\240\037\000\230\240\037\000B\371\001\n\036c" +
      "om.bitsong.merkledrop.v1beta1B\017Merkledro" +
      "pProtoP\001Z8github.com/bitsongofficial/go-" +
      "bitsong/x/merkledrop/types\242\002\003BMX\252\002\032Bitso" +
      "ng.Merkledrop.V1beta1\312\002\032Bitsong\\Merkledr" +
      "op\\V1beta1\342\002&Bitsong\\Merkledrop\\V1beta1\\" +
      "GPBMetadata\352\002\034Bitsong::Merkledrop::V1bet" +
      "a1\310\341\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
        });
    internal_static_bitsong_merkledrop_v1beta1_Merkledrop_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bitsong_merkledrop_v1beta1_Merkledrop_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bitsong_merkledrop_v1beta1_Merkledrop_descriptor,
        new java.lang.String[] { "Id", "MerkleRoot", "StartHeight", "EndHeight", "Denom", "Amount", "Claimed", "Owner", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.goprotoGettersAll);
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bitsong/merkledrop/v1beta1/tx.proto

package com.bitsong.merkledrop.v1beta1;

public interface MsgCreateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bitsong.merkledrop.v1beta1.MsgCreate)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * owner of the merkledrop
   * </pre>
   *
   * <code>string owner = 1 [json_name = "owner"];</code>
   * @return The owner.
   */
  java.lang.String getOwner();
  /**
   * <pre>
   * owner of the merkledrop
   * </pre>
   *
   * <code>string owner = 1 [json_name = "owner"];</code>
   * @return The bytes for owner.
   */
  com.google.protobuf.ByteString
      getOwnerBytes();

  /**
   * <pre>
   * merkle_root used to compute proofs
   * </pre>
   *
   * <code>string merkle_root = 2 [json_name = "merkleRoot", (.gogoproto.moretags) = "yaml:&#92;"merkle_root&#92;""];</code>
   * @return The merkleRoot.
   */
  java.lang.String getMerkleRoot();
  /**
   * <pre>
   * merkle_root used to compute proofs
   * </pre>
   *
   * <code>string merkle_root = 2 [json_name = "merkleRoot", (.gogoproto.moretags) = "yaml:&#92;"merkle_root&#92;""];</code>
   * @return The bytes for merkleRoot.
   */
  com.google.protobuf.ByteString
      getMerkleRootBytes();

  /**
   * <pre>
   * merkledrop start height
   * </pre>
   *
   * <code>int64 start_height = 3 [json_name = "startHeight"];</code>
   * @return The startHeight.
   */
  long getStartHeight();

  /**
   * <pre>
   * merkledrop end height
   * </pre>
   *
   * <code>int64 end_height = 4 [json_name = "endHeight"];</code>
   * @return The endHeight.
   */
  long getEndHeight();

  /**
   * <pre>
   * coins to distribute
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin coin = 5 [json_name = "coin", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"];</code>
   * @return Whether the coin field is set.
   */
  boolean hasCoin();
  /**
   * <pre>
   * coins to distribute
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin coin = 5 [json_name = "coin", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"];</code>
   * @return The coin.
   */
  com.cosmos.base.v1beta1.Coin getCoin();
  /**
   * <pre>
   * coins to distribute
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin coin = 5 [json_name = "coin", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getCoinOrBuilder();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sentinel/node/v2/params.proto

package com.sentinel.node.v2;

public final class ParamsProto {
  private ParamsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sentinel_node_v2_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sentinel_node_v2_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035sentinel/node/v2/params.proto\022\020sentine" +
      "l.node.v2\032\036cosmos/base/v1beta1/coin.prot" +
      "o\032\024gogoproto/gogo.proto\032\036google/protobuf" +
      "/duration.proto\"\272\007\n\006Params\0229\n\007deposit\030\001 " +
      "\001(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000R\007de" +
      "posit\022L\n\017expiry_duration\030\002 \001(\0132\031.google." +
      "protobuf.DurationB\010\310\336\037\000\230\337\037\001R\016expiryDurat" +
      "ion\022{\n\023max_gigabyte_prices\030\003 \003(\0132\031.cosmo" +
      "s.base.v1beta1.CoinB0\310\336\037\000\252\337\037(github.com/" +
      "cosmos/cosmos-sdk/types.CoinsR\021maxGigaby" +
      "tePrices\022{\n\023min_gigabyte_prices\030\004 \003(\0132\031." +
      "cosmos.base.v1beta1.CoinB0\310\336\037\000\252\337\037(github" +
      ".com/cosmos/cosmos-sdk/types.CoinsR\021minG" +
      "igabytePrices\022w\n\021max_hourly_prices\030\005 \003(\013" +
      "2\031.cosmos.base.v1beta1.CoinB0\310\336\037\000\252\337\037(git" +
      "hub.com/cosmos/cosmos-sdk/types.CoinsR\017m" +
      "axHourlyPrices\022w\n\021min_hourly_prices\030\006 \003(" +
      "\0132\031.cosmos.base.v1beta1.CoinB0\310\336\037\000\252\337\037(gi" +
      "thub.com/cosmos/cosmos-sdk/types.CoinsR\017" +
      "minHourlyPrices\022<\n\032max_subscription_giga" +
      "bytes\030\007 \001(\003R\030maxSubscriptionGigabytes\022<\n" +
      "\032min_subscription_gigabytes\030\010 \001(\003R\030minSu" +
      "bscriptionGigabytes\0224\n\026max_subscription_" +
      "hours\030\t \001(\003R\024maxSubscriptionHours\0224\n\026min" +
      "_subscription_hours\030\n \001(\003R\024minSubscripti" +
      "onHours\022S\n\rrevenue_share\030\013 \001(\tB.\310\336\037\000\332\336\037&" +
      "github.com/cosmos/cosmos-sdk/types.DecR\014" +
      "revenueShareB\274\001\n\024com.sentinel.node.v2B\013P" +
      "aramsProtoP\001Z-github.com/sentinel-offici" +
      "al/hub/x/node/types\242\002\003SNX\252\002\020Sentinel.Nod" +
      "e.V2\312\002\020Sentinel\\Node\\V2\342\002\034Sentinel\\Node\\" +
      "V2\\GPBMetadata\352\002\022Sentinel::Node::V2\310\341\036\000\250" +
      "\342\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
        });
    internal_static_sentinel_node_v2_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_sentinel_node_v2_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sentinel_node_v2_Params_descriptor,
        new java.lang.String[] { "Deposit", "ExpiryDuration", "MaxGigabytePrices", "MinGigabytePrices", "MaxHourlyPrices", "MinHourlyPrices", "MaxSubscriptionGigabytes", "MinSubscriptionGigabytes", "MaxSubscriptionHours", "MinSubscriptionHours", "RevenueShare", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.equalAll);
    registry.add(com.gogoproto.GogoProto.goprotoGettersAll);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stdduration);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

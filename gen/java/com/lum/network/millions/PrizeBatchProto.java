// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lum-network/millions/prize_batch.proto

package com.lum.network.millions;

public final class PrizeBatchProto {
  private PrizeBatchProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_lum_network_millions_PrizeBatch_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_lum_network_millions_PrizeBatch_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&lum-network/millions/prize_batch.proto" +
      "\022\024lum.network.millions\032\024gogoproto/gogo.p" +
      "roto\"\246\001\n\nPrizeBatch\022!\n\014pool_percent\030\001 \001(" +
      "\004R\013poolPercent\022\032\n\010quantity\030\002 \001(\004R\010quanti" +
      "ty\022Y\n\020draw_probability\030\003 \001(\tB.\310\336\037\000\332\336\037&gi" +
      "thub.com/cosmos/cosmos-sdk/types.DecR\017dr" +
      "awProbabilityB\314\001\n\030com.lum.network.millio" +
      "nsB\017PrizeBatchProtoP\001Z-github.com/lum-ne" +
      "twork/chain/x/millions/types\242\002\003LNM\252\002\024Lum" +
      ".Network.Millions\312\002\024Lum\\Network\\Millions" +
      "\342\002 Lum\\Network\\Millions\\GPBMetadata\352\002\026Lu" +
      "m::Network::Millionsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_lum_network_millions_PrizeBatch_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_lum_network_millions_PrizeBatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_lum_network_millions_PrizeBatch_descriptor,
        new java.lang.String[] { "PoolPercent", "Quantity", "DrawProbability", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

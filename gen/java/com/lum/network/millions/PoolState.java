// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lum-network/millions/pool.proto

package com.lum.network.millions;

/**
 * <pre>
 * PoolState the state of a Pool
 * Deposits are only accepted for Pools in a Ready state
 * 
 * TODO:
 * Pool states PAUSED and KILLED are not available in the current implementation
 * Introduce the capability to:
 * - Pause a Pool in case of Interchain issues or via Governance proposal
 * - Kill a Pool and withdraw or migrate all deposits to another Pool via Governance proposal
 * </pre>
 *
 * Protobuf enum {@code lum.network.millions.PoolState}
 */
public enum PoolState
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>POOL_STATE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "Unspecified"];</code>
   */
  POOL_STATE_UNSPECIFIED(0),
  /**
   * <code>POOL_STATE_CREATED = 1 [(.gogoproto.enumvalue_customname) = "Created"];</code>
   */
  POOL_STATE_CREATED(1),
  /**
   * <code>POOL_STATE_READY = 2 [(.gogoproto.enumvalue_customname) = "Ready"];</code>
   */
  POOL_STATE_READY(2),
  /**
   * <code>POOL_STATE_PAUSED = 3 [(.gogoproto.enumvalue_customname) = "Paused"];</code>
   */
  POOL_STATE_PAUSED(3),
  /**
   * <code>POOL_STATE_KILLED = 4 [(.gogoproto.enumvalue_customname) = "Killed"];</code>
   */
  POOL_STATE_KILLED(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>POOL_STATE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "Unspecified"];</code>
   */
  public static final int POOL_STATE_UNSPECIFIED_VALUE = 0;
  /**
   * <code>POOL_STATE_CREATED = 1 [(.gogoproto.enumvalue_customname) = "Created"];</code>
   */
  public static final int POOL_STATE_CREATED_VALUE = 1;
  /**
   * <code>POOL_STATE_READY = 2 [(.gogoproto.enumvalue_customname) = "Ready"];</code>
   */
  public static final int POOL_STATE_READY_VALUE = 2;
  /**
   * <code>POOL_STATE_PAUSED = 3 [(.gogoproto.enumvalue_customname) = "Paused"];</code>
   */
  public static final int POOL_STATE_PAUSED_VALUE = 3;
  /**
   * <code>POOL_STATE_KILLED = 4 [(.gogoproto.enumvalue_customname) = "Killed"];</code>
   */
  public static final int POOL_STATE_KILLED_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static PoolState valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static PoolState forNumber(int value) {
    switch (value) {
      case 0: return POOL_STATE_UNSPECIFIED;
      case 1: return POOL_STATE_CREATED;
      case 2: return POOL_STATE_READY;
      case 3: return POOL_STATE_PAUSED;
      case 4: return POOL_STATE_KILLED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<PoolState>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      PoolState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<PoolState>() {
          public PoolState findValueByNumber(int number) {
            return PoolState.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.lum.network.millions.PoolProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final PoolState[] VALUES = values();

  public static PoolState valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private PoolState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:lum.network.millions.PoolState)
}


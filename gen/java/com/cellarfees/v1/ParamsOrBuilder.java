// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sommelier/cellarfees/v1/params.proto

package com.cellarfees.v1;

public interface ParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cellarfees.v1.Params)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The number of fee accruals after which an auction should be started
   * </pre>
   *
   * <code>uint64 fee_accrual_auction_threshold = 1 [json_name = "feeAccrualAuctionThreshold"];</code>
   * @return The feeAccrualAuctionThreshold.
   */
  long getFeeAccrualAuctionThreshold();

  /**
   * <pre>
   * Emission rate factor. Specifically, the number of blocks over which to distribute
   * some amount of staking rewards.
   * </pre>
   *
   * <code>uint64 reward_emission_period = 2 [json_name = "rewardEmissionPeriod"];</code>
   * @return The rewardEmissionPeriod.
   */
  long getRewardEmissionPeriod();

  /**
   * <pre>
   * The initial rate at which auctions should decrease their denom's price in SOMM
   * </pre>
   *
   * <code>string initial_price_decrease_rate = 3 [json_name = "initialPriceDecreaseRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The initialPriceDecreaseRate.
   */
  java.lang.String getInitialPriceDecreaseRate();
  /**
   * <pre>
   * The initial rate at which auctions should decrease their denom's price in SOMM
   * </pre>
   *
   * <code>string initial_price_decrease_rate = 3 [json_name = "initialPriceDecreaseRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for initialPriceDecreaseRate.
   */
  com.google.protobuf.ByteString
      getInitialPriceDecreaseRateBytes();

  /**
   * <pre>
   * Number of blocks between auction price decreases
   * </pre>
   *
   * <code>uint64 price_decrease_block_interval = 4 [json_name = "priceDecreaseBlockInterval"];</code>
   * @return The priceDecreaseBlockInterval.
   */
  long getPriceDecreaseBlockInterval();
}

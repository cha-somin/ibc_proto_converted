// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: assetmantle/ids/base/any_id.proto

package com.assetmantle.schema.ids.base;

public final class AnyIdProto {
  private AnyIdProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_assetmantle_schema_ids_base_AnyID_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_assetmantle_schema_ids_base_AnyID_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!assetmantle/ids/base/any_id.proto\022\033ass" +
      "etmantle.schema.ids.base\032\024gogoproto/gogo" +
      ".proto\032)assetmantle/ids/base/any_ownable" +
      "_id.proto\032#assetmantle/ids/base/asset_id" +
      ".proto\032,assetmantle/ids/base/classificat" +
      "ion_id.proto\032\"assetmantle/ids/base/coin_" +
      "id.proto\032\"assetmantle/ids/base/data_id.p" +
      "roto\032\"assetmantle/ids/base/hash_id.proto" +
      "\032&assetmantle/ids/base/identity_id.proto" +
      "\032(assetmantle/ids/base/maintainer_id.pro" +
      "to\032#assetmantle/ids/base/order_id.proto\032" +
      "&assetmantle/ids/base/property_id.proto\032" +
      "#assetmantle/ids/base/split_id.proto\032$as" +
      "setmantle/ids/base/string_id.proto\"\204\007\n\005A" +
      "nyID\022B\n\tasset_i_d\030\001 \001(\0132$.assetmantle.sc" +
      "hema.ids.base.AssetIDH\000R\007assetID\022]\n\022clas" +
      "sification_i_d\030\002 \001(\0132-.assetmantle.schem" +
      "a.ids.base.ClassificationIDH\000R\020classific" +
      "ationID\022?\n\010coin_i_d\030\003 \001(\0132#.assetmantle." +
      "schema.ids.base.CoinIDH\000R\006coinID\022?\n\010data" +
      "_i_d\030\004 \001(\0132#.assetmantle.schema.ids.base" +
      ".DataIDH\000R\006dataID\022?\n\010hash_i_d\030\005 \001(\0132#.as" +
      "setmantle.schema.ids.base.HashIDH\000R\006hash" +
      "ID\022K\n\014identity_i_d\030\006 \001(\0132\'.assetmantle.s" +
      "chema.ids.base.IdentityIDH\000R\nidentityID\022" +
      "Q\n\016maintainer_i_d\030\007 \001(\0132).assetmantle.sc" +
      "hema.ids.base.MaintainerIDH\000R\014maintainer" +
      "ID\022B\n\torder_i_d\030\010 \001(\0132$.assetmantle.sche" +
      "ma.ids.base.OrderIDH\000R\007orderID\022K\n\013ownabl" +
      "e_i_d\030\t \001(\0132).assetmantle.schema.ids.bas" +
      "e.AnyOwnableIDH\000R\townableID\022K\n\014property_" +
      "i_d\030\n \001(\0132\'.assetmantle.schema.ids.base." +
      "PropertyIDH\000R\npropertyID\022B\n\tsplit_i_d\030\013 " +
      "\001(\0132$.assetmantle.schema.ids.base.SplitI" +
      "DH\000R\007splitID\022E\n\nstring_i_d\030\014 \001(\0132%.asset" +
      "mantle.schema.ids.base.StringIDH\000R\010strin" +
      "gID:\004\210\240\037\000B\006\n\004implB\275\001\n\037com.assetmantle.sc" +
      "hema.ids.baseB\nAnyIdProtoP\001\242\002\004ASIB\252\002\033Ass" +
      "etmantle.Schema.Ids.Base\312\002\033Assetmantle\\S" +
      "chema\\Ids\\Base\342\002\'Assetmantle\\Schema\\Ids\\" +
      "Base\\GPBMetadata\352\002\036Assetmantle::Schema::" +
      "Ids::Baseb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.assetmantle.schema.ids.base.AnyOwnableIdProto.getDescriptor(),
          com.assetmantle.schema.ids.base.AssetIdProto.getDescriptor(),
          com.assetmantle.schema.ids.base.ClassificationIdProto.getDescriptor(),
          com.assetmantle.schema.ids.base.CoinIdProto.getDescriptor(),
          com.assetmantle.schema.ids.base.DataIdProto.getDescriptor(),
          com.assetmantle.schema.ids.base.HashIdProto.getDescriptor(),
          com.assetmantle.schema.ids.base.IdentityIdProto.getDescriptor(),
          com.assetmantle.schema.ids.base.MaintainerIdProto.getDescriptor(),
          com.assetmantle.schema.ids.base.OrderIdProto.getDescriptor(),
          com.assetmantle.schema.ids.base.PropertyIdProto.getDescriptor(),
          com.assetmantle.schema.ids.base.SplitIdProto.getDescriptor(),
          com.assetmantle.schema.ids.base.StringIdProto.getDescriptor(),
        });
    internal_static_assetmantle_schema_ids_base_AnyID_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_assetmantle_schema_ids_base_AnyID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_assetmantle_schema_ids_base_AnyID_descriptor,
        new java.lang.String[] { "AssetID", "ClassificationID", "CoinID", "DataID", "HashID", "IdentityID", "MaintainerID", "OrderID", "OwnableID", "PropertyID", "SplitID", "StringID", "Impl", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.assetmantle.schema.ids.base.AnyOwnableIdProto.getDescriptor();
    com.assetmantle.schema.ids.base.AssetIdProto.getDescriptor();
    com.assetmantle.schema.ids.base.ClassificationIdProto.getDescriptor();
    com.assetmantle.schema.ids.base.CoinIdProto.getDescriptor();
    com.assetmantle.schema.ids.base.DataIdProto.getDescriptor();
    com.assetmantle.schema.ids.base.HashIdProto.getDescriptor();
    com.assetmantle.schema.ids.base.IdentityIdProto.getDescriptor();
    com.assetmantle.schema.ids.base.MaintainerIdProto.getDescriptor();
    com.assetmantle.schema.ids.base.OrderIdProto.getDescriptor();
    com.assetmantle.schema.ids.base.PropertyIdProto.getDescriptor();
    com.assetmantle.schema.ids.base.SplitIdProto.getDescriptor();
    com.assetmantle.schema.ids.base.StringIdProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

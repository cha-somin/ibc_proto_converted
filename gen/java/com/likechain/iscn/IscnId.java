// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: likechain/iscn/iscnid.proto

package com.likechain.iscn;

/**
 * Protobuf type {@code likechain.iscn.IscnId}
 */
public final class IscnId extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:likechain.iscn.IscnId)
    IscnIdOrBuilder {
private static final long serialVersionUID = 0L;
  // Use IscnId.newBuilder() to construct.
  private IscnId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private IscnId() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new IscnId();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.likechain.iscn.IscnidProto.internal_static_likechain_iscn_IscnId_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.likechain.iscn.IscnidProto.internal_static_likechain_iscn_IscnId_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.likechain.iscn.IscnId.class, com.likechain.iscn.IscnId.Builder.class);
  }

  public static final int PREFIX_FIELD_NUMBER = 1;
  private com.likechain.iscn.IscnIdPrefix prefix_;
  /**
   * <code>.likechain.iscn.IscnIdPrefix prefix = 1 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
   * @return Whether the prefix field is set.
   */
  @java.lang.Override
  public boolean hasPrefix() {
    return prefix_ != null;
  }
  /**
   * <code>.likechain.iscn.IscnIdPrefix prefix = 1 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
   * @return The prefix.
   */
  @java.lang.Override
  public com.likechain.iscn.IscnIdPrefix getPrefix() {
    return prefix_ == null ? com.likechain.iscn.IscnIdPrefix.getDefaultInstance() : prefix_;
  }
  /**
   * <code>.likechain.iscn.IscnIdPrefix prefix = 1 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.likechain.iscn.IscnIdPrefixOrBuilder getPrefixOrBuilder() {
    return prefix_ == null ? com.likechain.iscn.IscnIdPrefix.getDefaultInstance() : prefix_;
  }

  public static final int VERSION_FIELD_NUMBER = 2;
  private long version_ = 0L;
  /**
   * <code>uint64 version = 2 [json_name = "version"];</code>
   * @return The version.
   */
  @java.lang.Override
  public long getVersion() {
    return version_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (prefix_ != null) {
      output.writeMessage(1, getPrefix());
    }
    if (version_ != 0L) {
      output.writeUInt64(2, version_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (prefix_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getPrefix());
    }
    if (version_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, version_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.likechain.iscn.IscnId)) {
      return super.equals(obj);
    }
    com.likechain.iscn.IscnId other = (com.likechain.iscn.IscnId) obj;

    if (hasPrefix() != other.hasPrefix()) return false;
    if (hasPrefix()) {
      if (!getPrefix()
          .equals(other.getPrefix())) return false;
    }
    if (getVersion()
        != other.getVersion()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasPrefix()) {
      hash = (37 * hash) + PREFIX_FIELD_NUMBER;
      hash = (53 * hash) + getPrefix().hashCode();
    }
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getVersion());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.likechain.iscn.IscnId parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.likechain.iscn.IscnId parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.likechain.iscn.IscnId parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.likechain.iscn.IscnId parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.likechain.iscn.IscnId parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.likechain.iscn.IscnId parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.likechain.iscn.IscnId parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.likechain.iscn.IscnId parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.likechain.iscn.IscnId parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.likechain.iscn.IscnId parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.likechain.iscn.IscnId parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.likechain.iscn.IscnId parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.likechain.iscn.IscnId prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code likechain.iscn.IscnId}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:likechain.iscn.IscnId)
      com.likechain.iscn.IscnIdOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.likechain.iscn.IscnidProto.internal_static_likechain_iscn_IscnId_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.likechain.iscn.IscnidProto.internal_static_likechain_iscn_IscnId_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.likechain.iscn.IscnId.class, com.likechain.iscn.IscnId.Builder.class);
    }

    // Construct using com.likechain.iscn.IscnId.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      prefix_ = null;
      if (prefixBuilder_ != null) {
        prefixBuilder_.dispose();
        prefixBuilder_ = null;
      }
      version_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.likechain.iscn.IscnidProto.internal_static_likechain_iscn_IscnId_descriptor;
    }

    @java.lang.Override
    public com.likechain.iscn.IscnId getDefaultInstanceForType() {
      return com.likechain.iscn.IscnId.getDefaultInstance();
    }

    @java.lang.Override
    public com.likechain.iscn.IscnId build() {
      com.likechain.iscn.IscnId result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.likechain.iscn.IscnId buildPartial() {
      com.likechain.iscn.IscnId result = new com.likechain.iscn.IscnId(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.likechain.iscn.IscnId result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.prefix_ = prefixBuilder_ == null
            ? prefix_
            : prefixBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.version_ = version_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.likechain.iscn.IscnId) {
        return mergeFrom((com.likechain.iscn.IscnId)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.likechain.iscn.IscnId other) {
      if (other == com.likechain.iscn.IscnId.getDefaultInstance()) return this;
      if (other.hasPrefix()) {
        mergePrefix(other.getPrefix());
      }
      if (other.getVersion() != 0L) {
        setVersion(other.getVersion());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getPrefixFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              version_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.likechain.iscn.IscnIdPrefix prefix_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.likechain.iscn.IscnIdPrefix, com.likechain.iscn.IscnIdPrefix.Builder, com.likechain.iscn.IscnIdPrefixOrBuilder> prefixBuilder_;
    /**
     * <code>.likechain.iscn.IscnIdPrefix prefix = 1 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
     * @return Whether the prefix field is set.
     */
    public boolean hasPrefix() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.likechain.iscn.IscnIdPrefix prefix = 1 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
     * @return The prefix.
     */
    public com.likechain.iscn.IscnIdPrefix getPrefix() {
      if (prefixBuilder_ == null) {
        return prefix_ == null ? com.likechain.iscn.IscnIdPrefix.getDefaultInstance() : prefix_;
      } else {
        return prefixBuilder_.getMessage();
      }
    }
    /**
     * <code>.likechain.iscn.IscnIdPrefix prefix = 1 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
     */
    public Builder setPrefix(com.likechain.iscn.IscnIdPrefix value) {
      if (prefixBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        prefix_ = value;
      } else {
        prefixBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.likechain.iscn.IscnIdPrefix prefix = 1 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
     */
    public Builder setPrefix(
        com.likechain.iscn.IscnIdPrefix.Builder builderForValue) {
      if (prefixBuilder_ == null) {
        prefix_ = builderForValue.build();
      } else {
        prefixBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.likechain.iscn.IscnIdPrefix prefix = 1 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergePrefix(com.likechain.iscn.IscnIdPrefix value) {
      if (prefixBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          prefix_ != null &&
          prefix_ != com.likechain.iscn.IscnIdPrefix.getDefaultInstance()) {
          getPrefixBuilder().mergeFrom(value);
        } else {
          prefix_ = value;
        }
      } else {
        prefixBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.likechain.iscn.IscnIdPrefix prefix = 1 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearPrefix() {
      bitField0_ = (bitField0_ & ~0x00000001);
      prefix_ = null;
      if (prefixBuilder_ != null) {
        prefixBuilder_.dispose();
        prefixBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.likechain.iscn.IscnIdPrefix prefix = 1 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
     */
    public com.likechain.iscn.IscnIdPrefix.Builder getPrefixBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getPrefixFieldBuilder().getBuilder();
    }
    /**
     * <code>.likechain.iscn.IscnIdPrefix prefix = 1 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
     */
    public com.likechain.iscn.IscnIdPrefixOrBuilder getPrefixOrBuilder() {
      if (prefixBuilder_ != null) {
        return prefixBuilder_.getMessageOrBuilder();
      } else {
        return prefix_ == null ?
            com.likechain.iscn.IscnIdPrefix.getDefaultInstance() : prefix_;
      }
    }
    /**
     * <code>.likechain.iscn.IscnIdPrefix prefix = 1 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.likechain.iscn.IscnIdPrefix, com.likechain.iscn.IscnIdPrefix.Builder, com.likechain.iscn.IscnIdPrefixOrBuilder> 
        getPrefixFieldBuilder() {
      if (prefixBuilder_ == null) {
        prefixBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.likechain.iscn.IscnIdPrefix, com.likechain.iscn.IscnIdPrefix.Builder, com.likechain.iscn.IscnIdPrefixOrBuilder>(
                getPrefix(),
                getParentForChildren(),
                isClean());
        prefix_ = null;
      }
      return prefixBuilder_;
    }

    private long version_ ;
    /**
     * <code>uint64 version = 2 [json_name = "version"];</code>
     * @return The version.
     */
    @java.lang.Override
    public long getVersion() {
      return version_;
    }
    /**
     * <code>uint64 version = 2 [json_name = "version"];</code>
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(long value) {

      version_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 version = 2 [json_name = "version"];</code>
     * @return This builder for chaining.
     */
    public Builder clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000002);
      version_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:likechain.iscn.IscnId)
  }

  // @@protoc_insertion_point(class_scope:likechain.iscn.IscnId)
  private static final com.likechain.iscn.IscnId DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.likechain.iscn.IscnId();
  }

  public static com.likechain.iscn.IscnId getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IscnId>
      PARSER = new com.google.protobuf.AbstractParser<IscnId>() {
    @java.lang.Override
    public IscnId parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<IscnId> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IscnId> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.likechain.iscn.IscnId getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


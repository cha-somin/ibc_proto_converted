// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quicksilver/interchainstaking/v1/genesis.proto

package com.quicksilver.interchainstaking.v1;

/**
 * Protobuf type {@code quicksilver.interchainstaking.v1.DelegatorIntentsForZone}
 */
public final class DelegatorIntentsForZone extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:quicksilver.interchainstaking.v1.DelegatorIntentsForZone)
    DelegatorIntentsForZoneOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DelegatorIntentsForZone.newBuilder() to construct.
  private DelegatorIntentsForZone(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DelegatorIntentsForZone() {
    chainId_ = "";
    delegationIntent_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DelegatorIntentsForZone();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.quicksilver.interchainstaking.v1.GenesisProto.internal_static_quicksilver_interchainstaking_v1_DelegatorIntentsForZone_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.quicksilver.interchainstaking.v1.GenesisProto.internal_static_quicksilver_interchainstaking_v1_DelegatorIntentsForZone_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone.class, com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone.Builder.class);
  }

  public static final int CHAIN_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object chainId_ = "";
  /**
   * <code>string chain_id = 1 [json_name = "chainId"];</code>
   * @return The chainId.
   */
  @java.lang.Override
  public java.lang.String getChainId() {
    java.lang.Object ref = chainId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      chainId_ = s;
      return s;
    }
  }
  /**
   * <code>string chain_id = 1 [json_name = "chainId"];</code>
   * @return The bytes for chainId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getChainIdBytes() {
    java.lang.Object ref = chainId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      chainId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DELEGATION_INTENT_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.quicksilver.interchainstaking.v1.DelegatorIntent> delegationIntent_;
  /**
   * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
   */
  @java.lang.Override
  public java.util.List<com.quicksilver.interchainstaking.v1.DelegatorIntent> getDelegationIntentList() {
    return delegationIntent_;
  }
  /**
   * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.quicksilver.interchainstaking.v1.DelegatorIntentOrBuilder> 
      getDelegationIntentOrBuilderList() {
    return delegationIntent_;
  }
  /**
   * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
   */
  @java.lang.Override
  public int getDelegationIntentCount() {
    return delegationIntent_.size();
  }
  /**
   * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
   */
  @java.lang.Override
  public com.quicksilver.interchainstaking.v1.DelegatorIntent getDelegationIntent(int index) {
    return delegationIntent_.get(index);
  }
  /**
   * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
   */
  @java.lang.Override
  public com.quicksilver.interchainstaking.v1.DelegatorIntentOrBuilder getDelegationIntentOrBuilder(
      int index) {
    return delegationIntent_.get(index);
  }

  public static final int SNAPSHOT_FIELD_NUMBER = 3;
  private boolean snapshot_ = false;
  /**
   * <code>bool snapshot = 3 [json_name = "snapshot"];</code>
   * @return The snapshot.
   */
  @java.lang.Override
  public boolean getSnapshot() {
    return snapshot_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(chainId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, chainId_);
    }
    for (int i = 0; i < delegationIntent_.size(); i++) {
      output.writeMessage(2, delegationIntent_.get(i));
    }
    if (snapshot_ != false) {
      output.writeBool(3, snapshot_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(chainId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, chainId_);
    }
    for (int i = 0; i < delegationIntent_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, delegationIntent_.get(i));
    }
    if (snapshot_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, snapshot_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone)) {
      return super.equals(obj);
    }
    com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone other = (com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone) obj;

    if (!getChainId()
        .equals(other.getChainId())) return false;
    if (!getDelegationIntentList()
        .equals(other.getDelegationIntentList())) return false;
    if (getSnapshot()
        != other.getSnapshot()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CHAIN_ID_FIELD_NUMBER;
    hash = (53 * hash) + getChainId().hashCode();
    if (getDelegationIntentCount() > 0) {
      hash = (37 * hash) + DELEGATION_INTENT_FIELD_NUMBER;
      hash = (53 * hash) + getDelegationIntentList().hashCode();
    }
    hash = (37 * hash) + SNAPSHOT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSnapshot());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code quicksilver.interchainstaking.v1.DelegatorIntentsForZone}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:quicksilver.interchainstaking.v1.DelegatorIntentsForZone)
      com.quicksilver.interchainstaking.v1.DelegatorIntentsForZoneOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.quicksilver.interchainstaking.v1.GenesisProto.internal_static_quicksilver_interchainstaking_v1_DelegatorIntentsForZone_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.quicksilver.interchainstaking.v1.GenesisProto.internal_static_quicksilver_interchainstaking_v1_DelegatorIntentsForZone_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone.class, com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone.Builder.class);
    }

    // Construct using com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      chainId_ = "";
      if (delegationIntentBuilder_ == null) {
        delegationIntent_ = java.util.Collections.emptyList();
      } else {
        delegationIntent_ = null;
        delegationIntentBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      snapshot_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.quicksilver.interchainstaking.v1.GenesisProto.internal_static_quicksilver_interchainstaking_v1_DelegatorIntentsForZone_descriptor;
    }

    @java.lang.Override
    public com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone getDefaultInstanceForType() {
      return com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone.getDefaultInstance();
    }

    @java.lang.Override
    public com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone build() {
      com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone buildPartial() {
      com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone result = new com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone result) {
      if (delegationIntentBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          delegationIntent_ = java.util.Collections.unmodifiableList(delegationIntent_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.delegationIntent_ = delegationIntent_;
      } else {
        result.delegationIntent_ = delegationIntentBuilder_.build();
      }
    }

    private void buildPartial0(com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.chainId_ = chainId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.snapshot_ = snapshot_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone) {
        return mergeFrom((com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone other) {
      if (other == com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone.getDefaultInstance()) return this;
      if (!other.getChainId().isEmpty()) {
        chainId_ = other.chainId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (delegationIntentBuilder_ == null) {
        if (!other.delegationIntent_.isEmpty()) {
          if (delegationIntent_.isEmpty()) {
            delegationIntent_ = other.delegationIntent_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDelegationIntentIsMutable();
            delegationIntent_.addAll(other.delegationIntent_);
          }
          onChanged();
        }
      } else {
        if (!other.delegationIntent_.isEmpty()) {
          if (delegationIntentBuilder_.isEmpty()) {
            delegationIntentBuilder_.dispose();
            delegationIntentBuilder_ = null;
            delegationIntent_ = other.delegationIntent_;
            bitField0_ = (bitField0_ & ~0x00000002);
            delegationIntentBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDelegationIntentFieldBuilder() : null;
          } else {
            delegationIntentBuilder_.addAllMessages(other.delegationIntent_);
          }
        }
      }
      if (other.getSnapshot() != false) {
        setSnapshot(other.getSnapshot());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              chainId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.quicksilver.interchainstaking.v1.DelegatorIntent m =
                  input.readMessage(
                      com.quicksilver.interchainstaking.v1.DelegatorIntent.parser(),
                      extensionRegistry);
              if (delegationIntentBuilder_ == null) {
                ensureDelegationIntentIsMutable();
                delegationIntent_.add(m);
              } else {
                delegationIntentBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 24: {
              snapshot_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object chainId_ = "";
    /**
     * <code>string chain_id = 1 [json_name = "chainId"];</code>
     * @return The chainId.
     */
    public java.lang.String getChainId() {
      java.lang.Object ref = chainId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        chainId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string chain_id = 1 [json_name = "chainId"];</code>
     * @return The bytes for chainId.
     */
    public com.google.protobuf.ByteString
        getChainIdBytes() {
      java.lang.Object ref = chainId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chainId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string chain_id = 1 [json_name = "chainId"];</code>
     * @param value The chainId to set.
     * @return This builder for chaining.
     */
    public Builder setChainId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      chainId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string chain_id = 1 [json_name = "chainId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearChainId() {
      chainId_ = getDefaultInstance().getChainId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string chain_id = 1 [json_name = "chainId"];</code>
     * @param value The bytes for chainId to set.
     * @return This builder for chaining.
     */
    public Builder setChainIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      chainId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<com.quicksilver.interchainstaking.v1.DelegatorIntent> delegationIntent_ =
      java.util.Collections.emptyList();
    private void ensureDelegationIntentIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        delegationIntent_ = new java.util.ArrayList<com.quicksilver.interchainstaking.v1.DelegatorIntent>(delegationIntent_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.quicksilver.interchainstaking.v1.DelegatorIntent, com.quicksilver.interchainstaking.v1.DelegatorIntent.Builder, com.quicksilver.interchainstaking.v1.DelegatorIntentOrBuilder> delegationIntentBuilder_;

    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public java.util.List<com.quicksilver.interchainstaking.v1.DelegatorIntent> getDelegationIntentList() {
      if (delegationIntentBuilder_ == null) {
        return java.util.Collections.unmodifiableList(delegationIntent_);
      } else {
        return delegationIntentBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public int getDelegationIntentCount() {
      if (delegationIntentBuilder_ == null) {
        return delegationIntent_.size();
      } else {
        return delegationIntentBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public com.quicksilver.interchainstaking.v1.DelegatorIntent getDelegationIntent(int index) {
      if (delegationIntentBuilder_ == null) {
        return delegationIntent_.get(index);
      } else {
        return delegationIntentBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public Builder setDelegationIntent(
        int index, com.quicksilver.interchainstaking.v1.DelegatorIntent value) {
      if (delegationIntentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDelegationIntentIsMutable();
        delegationIntent_.set(index, value);
        onChanged();
      } else {
        delegationIntentBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public Builder setDelegationIntent(
        int index, com.quicksilver.interchainstaking.v1.DelegatorIntent.Builder builderForValue) {
      if (delegationIntentBuilder_ == null) {
        ensureDelegationIntentIsMutable();
        delegationIntent_.set(index, builderForValue.build());
        onChanged();
      } else {
        delegationIntentBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public Builder addDelegationIntent(com.quicksilver.interchainstaking.v1.DelegatorIntent value) {
      if (delegationIntentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDelegationIntentIsMutable();
        delegationIntent_.add(value);
        onChanged();
      } else {
        delegationIntentBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public Builder addDelegationIntent(
        int index, com.quicksilver.interchainstaking.v1.DelegatorIntent value) {
      if (delegationIntentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDelegationIntentIsMutable();
        delegationIntent_.add(index, value);
        onChanged();
      } else {
        delegationIntentBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public Builder addDelegationIntent(
        com.quicksilver.interchainstaking.v1.DelegatorIntent.Builder builderForValue) {
      if (delegationIntentBuilder_ == null) {
        ensureDelegationIntentIsMutable();
        delegationIntent_.add(builderForValue.build());
        onChanged();
      } else {
        delegationIntentBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public Builder addDelegationIntent(
        int index, com.quicksilver.interchainstaking.v1.DelegatorIntent.Builder builderForValue) {
      if (delegationIntentBuilder_ == null) {
        ensureDelegationIntentIsMutable();
        delegationIntent_.add(index, builderForValue.build());
        onChanged();
      } else {
        delegationIntentBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public Builder addAllDelegationIntent(
        java.lang.Iterable<? extends com.quicksilver.interchainstaking.v1.DelegatorIntent> values) {
      if (delegationIntentBuilder_ == null) {
        ensureDelegationIntentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, delegationIntent_);
        onChanged();
      } else {
        delegationIntentBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public Builder clearDelegationIntent() {
      if (delegationIntentBuilder_ == null) {
        delegationIntent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        delegationIntentBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public Builder removeDelegationIntent(int index) {
      if (delegationIntentBuilder_ == null) {
        ensureDelegationIntentIsMutable();
        delegationIntent_.remove(index);
        onChanged();
      } else {
        delegationIntentBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public com.quicksilver.interchainstaking.v1.DelegatorIntent.Builder getDelegationIntentBuilder(
        int index) {
      return getDelegationIntentFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public com.quicksilver.interchainstaking.v1.DelegatorIntentOrBuilder getDelegationIntentOrBuilder(
        int index) {
      if (delegationIntentBuilder_ == null) {
        return delegationIntent_.get(index);  } else {
        return delegationIntentBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public java.util.List<? extends com.quicksilver.interchainstaking.v1.DelegatorIntentOrBuilder> 
         getDelegationIntentOrBuilderList() {
      if (delegationIntentBuilder_ != null) {
        return delegationIntentBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(delegationIntent_);
      }
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public com.quicksilver.interchainstaking.v1.DelegatorIntent.Builder addDelegationIntentBuilder() {
      return getDelegationIntentFieldBuilder().addBuilder(
          com.quicksilver.interchainstaking.v1.DelegatorIntent.getDefaultInstance());
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public com.quicksilver.interchainstaking.v1.DelegatorIntent.Builder addDelegationIntentBuilder(
        int index) {
      return getDelegationIntentFieldBuilder().addBuilder(
          index, com.quicksilver.interchainstaking.v1.DelegatorIntent.getDefaultInstance());
    }
    /**
     * <code>repeated .quicksilver.interchainstaking.v1.DelegatorIntent delegation_intent = 2 [json_name = "delegationIntent"];</code>
     */
    public java.util.List<com.quicksilver.interchainstaking.v1.DelegatorIntent.Builder> 
         getDelegationIntentBuilderList() {
      return getDelegationIntentFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.quicksilver.interchainstaking.v1.DelegatorIntent, com.quicksilver.interchainstaking.v1.DelegatorIntent.Builder, com.quicksilver.interchainstaking.v1.DelegatorIntentOrBuilder> 
        getDelegationIntentFieldBuilder() {
      if (delegationIntentBuilder_ == null) {
        delegationIntentBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.quicksilver.interchainstaking.v1.DelegatorIntent, com.quicksilver.interchainstaking.v1.DelegatorIntent.Builder, com.quicksilver.interchainstaking.v1.DelegatorIntentOrBuilder>(
                delegationIntent_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        delegationIntent_ = null;
      }
      return delegationIntentBuilder_;
    }

    private boolean snapshot_ ;
    /**
     * <code>bool snapshot = 3 [json_name = "snapshot"];</code>
     * @return The snapshot.
     */
    @java.lang.Override
    public boolean getSnapshot() {
      return snapshot_;
    }
    /**
     * <code>bool snapshot = 3 [json_name = "snapshot"];</code>
     * @param value The snapshot to set.
     * @return This builder for chaining.
     */
    public Builder setSnapshot(boolean value) {

      snapshot_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>bool snapshot = 3 [json_name = "snapshot"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSnapshot() {
      bitField0_ = (bitField0_ & ~0x00000004);
      snapshot_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:quicksilver.interchainstaking.v1.DelegatorIntentsForZone)
  }

  // @@protoc_insertion_point(class_scope:quicksilver.interchainstaking.v1.DelegatorIntentsForZone)
  private static final com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone();
  }

  public static com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DelegatorIntentsForZone>
      PARSER = new com.google.protobuf.AbstractParser<DelegatorIntentsForZone>() {
    @java.lang.Override
    public DelegatorIntentsForZone parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DelegatorIntentsForZone> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DelegatorIntentsForZone> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.quicksilver.interchainstaking.v1.DelegatorIntentsForZone getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


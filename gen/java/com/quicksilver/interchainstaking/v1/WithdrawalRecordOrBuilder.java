// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quicksilver/interchainstaking/v1/interchainstaking.proto

package com.quicksilver.interchainstaking.v1;

public interface WithdrawalRecordOrBuilder extends
    // @@protoc_insertion_point(interface_extends:quicksilver.interchainstaking.v1.WithdrawalRecord)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string chain_id = 1 [json_name = "chainId"];</code>
   * @return The chainId.
   */
  java.lang.String getChainId();
  /**
   * <code>string chain_id = 1 [json_name = "chainId"];</code>
   * @return The bytes for chainId.
   */
  com.google.protobuf.ByteString
      getChainIdBytes();

  /**
   * <code>string delegator = 2 [json_name = "delegator", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The delegator.
   */
  java.lang.String getDelegator();
  /**
   * <code>string delegator = 2 [json_name = "delegator", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The bytes for delegator.
   */
  com.google.protobuf.ByteString
      getDelegatorBytes();

  /**
   * <code>repeated .quicksilver.interchainstaking.v1.Distribution distribution = 3 [json_name = "distribution"];</code>
   */
  java.util.List<com.quicksilver.interchainstaking.v1.Distribution> 
      getDistributionList();
  /**
   * <code>repeated .quicksilver.interchainstaking.v1.Distribution distribution = 3 [json_name = "distribution"];</code>
   */
  com.quicksilver.interchainstaking.v1.Distribution getDistribution(int index);
  /**
   * <code>repeated .quicksilver.interchainstaking.v1.Distribution distribution = 3 [json_name = "distribution"];</code>
   */
  int getDistributionCount();
  /**
   * <code>repeated .quicksilver.interchainstaking.v1.Distribution distribution = 3 [json_name = "distribution"];</code>
   */
  java.util.List<? extends com.quicksilver.interchainstaking.v1.DistributionOrBuilder> 
      getDistributionOrBuilderList();
  /**
   * <code>repeated .quicksilver.interchainstaking.v1.Distribution distribution = 3 [json_name = "distribution"];</code>
   */
  com.quicksilver.interchainstaking.v1.DistributionOrBuilder getDistributionOrBuilder(
      int index);

  /**
   * <code>string recipient = 4 [json_name = "recipient", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The recipient.
   */
  java.lang.String getRecipient();
  /**
   * <code>string recipient = 4 [json_name = "recipient", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The bytes for recipient.
   */
  com.google.protobuf.ByteString
      getRecipientBytes();

  /**
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 5 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.Coin> 
      getAmountList();
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 5 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.Coin getAmount(int index);
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 5 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  int getAmountCount();
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 5 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getAmountOrBuilderList();
  /**
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 5 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getAmountOrBuilder(
      int index);

  /**
   * <code>.cosmos.base.v1beta1.Coin burn_amount = 6 [json_name = "burnAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (.cosmos_proto.scalar) = "cosmos.Coin"];</code>
   * @return Whether the burnAmount field is set.
   */
  boolean hasBurnAmount();
  /**
   * <code>.cosmos.base.v1beta1.Coin burn_amount = 6 [json_name = "burnAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (.cosmos_proto.scalar) = "cosmos.Coin"];</code>
   * @return The burnAmount.
   */
  com.cosmos.base.v1beta1.Coin getBurnAmount();
  /**
   * <code>.cosmos.base.v1beta1.Coin burn_amount = 6 [json_name = "burnAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (.cosmos_proto.scalar) = "cosmos.Coin"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getBurnAmountOrBuilder();

  /**
   * <code>string txhash = 7 [json_name = "txhash"];</code>
   * @return The txhash.
   */
  java.lang.String getTxhash();
  /**
   * <code>string txhash = 7 [json_name = "txhash"];</code>
   * @return The bytes for txhash.
   */
  com.google.protobuf.ByteString
      getTxhashBytes();

  /**
   * <code>int32 status = 8 [json_name = "status"];</code>
   * @return The status.
   */
  int getStatus();

  /**
   * <code>.google.protobuf.Timestamp completion_time = 9 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return Whether the completionTime field is set.
   */
  boolean hasCompletionTime();
  /**
   * <code>.google.protobuf.Timestamp completion_time = 9 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return The completionTime.
   */
  com.google.protobuf.Timestamp getCompletionTime();
  /**
   * <code>.google.protobuf.Timestamp completion_time = 9 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getCompletionTimeOrBuilder();

  /**
   * <code>bool requeued = 10 [json_name = "requeued"];</code>
   * @return The requeued.
   */
  boolean getRequeued();
}

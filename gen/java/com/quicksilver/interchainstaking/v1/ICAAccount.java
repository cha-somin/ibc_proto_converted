// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quicksilver/interchainstaking/v1/interchainstaking.proto

package com.quicksilver.interchainstaking.v1;

/**
 * Protobuf type {@code quicksilver.interchainstaking.v1.ICAAccount}
 */
public final class ICAAccount extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:quicksilver.interchainstaking.v1.ICAAccount)
    ICAAccountOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ICAAccount.newBuilder() to construct.
  private ICAAccount(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ICAAccount() {
    address_ = "";
    balance_ = java.util.Collections.emptyList();
    portName_ = "";
    withdrawalAddress_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ICAAccount();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.quicksilver.interchainstaking.v1.InterchainstakingProto.internal_static_quicksilver_interchainstaking_v1_ICAAccount_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.quicksilver.interchainstaking.v1.InterchainstakingProto.internal_static_quicksilver_interchainstaking_v1_ICAAccount_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.quicksilver.interchainstaking.v1.ICAAccount.class, com.quicksilver.interchainstaking.v1.ICAAccount.Builder.class);
  }

  public static final int ADDRESS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object address_ = "";
  /**
   * <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The address.
   */
  @java.lang.Override
  public java.lang.String getAddress() {
    java.lang.Object ref = address_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      address_ = s;
      return s;
    }
  }
  /**
   * <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The bytes for address.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAddressBytes() {
    java.lang.Object ref = address_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      address_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BALANCE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> balance_;
  /**
   * <pre>
   * balance defines the different coins this balance holds.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getBalanceList() {
    return balance_;
  }
  /**
   * <pre>
   * balance defines the different coins this balance holds.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getBalanceOrBuilderList() {
    return balance_;
  }
  /**
   * <pre>
   * balance defines the different coins this balance holds.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getBalanceCount() {
    return balance_.size();
  }
  /**
   * <pre>
   * balance defines the different coins this balance holds.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getBalance(int index) {
    return balance_.get(index);
  }
  /**
   * <pre>
   * balance defines the different coins this balance holds.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getBalanceOrBuilder(
      int index) {
    return balance_.get(index);
  }

  public static final int PORT_NAME_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object portName_ = "";
  /**
   * <code>string port_name = 3 [json_name = "portName"];</code>
   * @return The portName.
   */
  @java.lang.Override
  public java.lang.String getPortName() {
    java.lang.Object ref = portName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      portName_ = s;
      return s;
    }
  }
  /**
   * <code>string port_name = 3 [json_name = "portName"];</code>
   * @return The bytes for portName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPortNameBytes() {
    java.lang.Object ref = portName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      portName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WITHDRAWAL_ADDRESS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object withdrawalAddress_ = "";
  /**
   * <code>string withdrawal_address = 4 [json_name = "withdrawalAddress"];</code>
   * @return The withdrawalAddress.
   */
  @java.lang.Override
  public java.lang.String getWithdrawalAddress() {
    java.lang.Object ref = withdrawalAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      withdrawalAddress_ = s;
      return s;
    }
  }
  /**
   * <code>string withdrawal_address = 4 [json_name = "withdrawalAddress"];</code>
   * @return The bytes for withdrawalAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getWithdrawalAddressBytes() {
    java.lang.Object ref = withdrawalAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      withdrawalAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BALANCE_WAITGROUP_FIELD_NUMBER = 5;
  private int balanceWaitgroup_ = 0;
  /**
   * <code>uint32 balance_waitgroup = 5 [json_name = "balanceWaitgroup"];</code>
   * @return The balanceWaitgroup.
   */
  @java.lang.Override
  public int getBalanceWaitgroup() {
    return balanceWaitgroup_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(address_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, address_);
    }
    for (int i = 0; i < balance_.size(); i++) {
      output.writeMessage(2, balance_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(portName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, portName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(withdrawalAddress_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, withdrawalAddress_);
    }
    if (balanceWaitgroup_ != 0) {
      output.writeUInt32(5, balanceWaitgroup_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(address_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, address_);
    }
    for (int i = 0; i < balance_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, balance_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(portName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, portName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(withdrawalAddress_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, withdrawalAddress_);
    }
    if (balanceWaitgroup_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, balanceWaitgroup_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.quicksilver.interchainstaking.v1.ICAAccount)) {
      return super.equals(obj);
    }
    com.quicksilver.interchainstaking.v1.ICAAccount other = (com.quicksilver.interchainstaking.v1.ICAAccount) obj;

    if (!getAddress()
        .equals(other.getAddress())) return false;
    if (!getBalanceList()
        .equals(other.getBalanceList())) return false;
    if (!getPortName()
        .equals(other.getPortName())) return false;
    if (!getWithdrawalAddress()
        .equals(other.getWithdrawalAddress())) return false;
    if (getBalanceWaitgroup()
        != other.getBalanceWaitgroup()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getAddress().hashCode();
    if (getBalanceCount() > 0) {
      hash = (37 * hash) + BALANCE_FIELD_NUMBER;
      hash = (53 * hash) + getBalanceList().hashCode();
    }
    hash = (37 * hash) + PORT_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getPortName().hashCode();
    hash = (37 * hash) + WITHDRAWAL_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getWithdrawalAddress().hashCode();
    hash = (37 * hash) + BALANCE_WAITGROUP_FIELD_NUMBER;
    hash = (53 * hash) + getBalanceWaitgroup();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.quicksilver.interchainstaking.v1.ICAAccount parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.quicksilver.interchainstaking.v1.ICAAccount parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.quicksilver.interchainstaking.v1.ICAAccount parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.quicksilver.interchainstaking.v1.ICAAccount parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.quicksilver.interchainstaking.v1.ICAAccount parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.quicksilver.interchainstaking.v1.ICAAccount parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.quicksilver.interchainstaking.v1.ICAAccount parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.quicksilver.interchainstaking.v1.ICAAccount parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.quicksilver.interchainstaking.v1.ICAAccount parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.quicksilver.interchainstaking.v1.ICAAccount parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.quicksilver.interchainstaking.v1.ICAAccount parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.quicksilver.interchainstaking.v1.ICAAccount parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.quicksilver.interchainstaking.v1.ICAAccount prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code quicksilver.interchainstaking.v1.ICAAccount}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:quicksilver.interchainstaking.v1.ICAAccount)
      com.quicksilver.interchainstaking.v1.ICAAccountOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.quicksilver.interchainstaking.v1.InterchainstakingProto.internal_static_quicksilver_interchainstaking_v1_ICAAccount_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.quicksilver.interchainstaking.v1.InterchainstakingProto.internal_static_quicksilver_interchainstaking_v1_ICAAccount_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.quicksilver.interchainstaking.v1.ICAAccount.class, com.quicksilver.interchainstaking.v1.ICAAccount.Builder.class);
    }

    // Construct using com.quicksilver.interchainstaking.v1.ICAAccount.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      address_ = "";
      if (balanceBuilder_ == null) {
        balance_ = java.util.Collections.emptyList();
      } else {
        balance_ = null;
        balanceBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      portName_ = "";
      withdrawalAddress_ = "";
      balanceWaitgroup_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.quicksilver.interchainstaking.v1.InterchainstakingProto.internal_static_quicksilver_interchainstaking_v1_ICAAccount_descriptor;
    }

    @java.lang.Override
    public com.quicksilver.interchainstaking.v1.ICAAccount getDefaultInstanceForType() {
      return com.quicksilver.interchainstaking.v1.ICAAccount.getDefaultInstance();
    }

    @java.lang.Override
    public com.quicksilver.interchainstaking.v1.ICAAccount build() {
      com.quicksilver.interchainstaking.v1.ICAAccount result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.quicksilver.interchainstaking.v1.ICAAccount buildPartial() {
      com.quicksilver.interchainstaking.v1.ICAAccount result = new com.quicksilver.interchainstaking.v1.ICAAccount(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.quicksilver.interchainstaking.v1.ICAAccount result) {
      if (balanceBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          balance_ = java.util.Collections.unmodifiableList(balance_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.balance_ = balance_;
      } else {
        result.balance_ = balanceBuilder_.build();
      }
    }

    private void buildPartial0(com.quicksilver.interchainstaking.v1.ICAAccount result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.address_ = address_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.portName_ = portName_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.withdrawalAddress_ = withdrawalAddress_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.balanceWaitgroup_ = balanceWaitgroup_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.quicksilver.interchainstaking.v1.ICAAccount) {
        return mergeFrom((com.quicksilver.interchainstaking.v1.ICAAccount)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.quicksilver.interchainstaking.v1.ICAAccount other) {
      if (other == com.quicksilver.interchainstaking.v1.ICAAccount.getDefaultInstance()) return this;
      if (!other.getAddress().isEmpty()) {
        address_ = other.address_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (balanceBuilder_ == null) {
        if (!other.balance_.isEmpty()) {
          if (balance_.isEmpty()) {
            balance_ = other.balance_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBalanceIsMutable();
            balance_.addAll(other.balance_);
          }
          onChanged();
        }
      } else {
        if (!other.balance_.isEmpty()) {
          if (balanceBuilder_.isEmpty()) {
            balanceBuilder_.dispose();
            balanceBuilder_ = null;
            balance_ = other.balance_;
            bitField0_ = (bitField0_ & ~0x00000002);
            balanceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBalanceFieldBuilder() : null;
          } else {
            balanceBuilder_.addAllMessages(other.balance_);
          }
        }
      }
      if (!other.getPortName().isEmpty()) {
        portName_ = other.portName_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getWithdrawalAddress().isEmpty()) {
        withdrawalAddress_ = other.withdrawalAddress_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.getBalanceWaitgroup() != 0) {
        setBalanceWaitgroup(other.getBalanceWaitgroup());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              address_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (balanceBuilder_ == null) {
                ensureBalanceIsMutable();
                balance_.add(m);
              } else {
                balanceBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              portName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              withdrawalAddress_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              balanceWaitgroup_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object address_ = "";
    /**
     * <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The address.
     */
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        address_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for address.
     */
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param value The address to set.
     * @return This builder for chaining.
     */
    public Builder setAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      address_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAddress() {
      address_ = getDefaultInstance().getAddress();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param value The bytes for address to set.
     * @return This builder for chaining.
     */
    public Builder setAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      address_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> balance_ =
      java.util.Collections.emptyList();
    private void ensureBalanceIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        balance_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(balance_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> balanceBuilder_;

    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getBalanceList() {
      if (balanceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(balance_);
      } else {
        return balanceBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getBalanceCount() {
      if (balanceBuilder_ == null) {
        return balance_.size();
      } else {
        return balanceBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getBalance(int index) {
      if (balanceBuilder_ == null) {
        return balance_.get(index);
      } else {
        return balanceBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setBalance(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (balanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBalanceIsMutable();
        balance_.set(index, value);
        onChanged();
      } else {
        balanceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setBalance(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (balanceBuilder_ == null) {
        ensureBalanceIsMutable();
        balance_.set(index, builderForValue.build());
        onChanged();
      } else {
        balanceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addBalance(com.cosmos.base.v1beta1.Coin value) {
      if (balanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBalanceIsMutable();
        balance_.add(value);
        onChanged();
      } else {
        balanceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addBalance(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (balanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBalanceIsMutable();
        balance_.add(index, value);
        onChanged();
      } else {
        balanceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addBalance(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (balanceBuilder_ == null) {
        ensureBalanceIsMutable();
        balance_.add(builderForValue.build());
        onChanged();
      } else {
        balanceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addBalance(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (balanceBuilder_ == null) {
        ensureBalanceIsMutable();
        balance_.add(index, builderForValue.build());
        onChanged();
      } else {
        balanceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllBalance(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (balanceBuilder_ == null) {
        ensureBalanceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, balance_);
        onChanged();
      } else {
        balanceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearBalance() {
      if (balanceBuilder_ == null) {
        balance_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        balanceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeBalance(int index) {
      if (balanceBuilder_ == null) {
        ensureBalanceIsMutable();
        balance_.remove(index);
        onChanged();
      } else {
        balanceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getBalanceBuilder(
        int index) {
      return getBalanceFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getBalanceOrBuilder(
        int index) {
      if (balanceBuilder_ == null) {
        return balance_.get(index);  } else {
        return balanceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getBalanceOrBuilderList() {
      if (balanceBuilder_ != null) {
        return balanceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(balance_);
      }
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addBalanceBuilder() {
      return getBalanceFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addBalanceBuilder(
        int index) {
      return getBalanceFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * balance defines the different coins this balance holds.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getBalanceBuilderList() {
      return getBalanceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getBalanceFieldBuilder() {
      if (balanceBuilder_ == null) {
        balanceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                balance_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        balance_ = null;
      }
      return balanceBuilder_;
    }

    private java.lang.Object portName_ = "";
    /**
     * <code>string port_name = 3 [json_name = "portName"];</code>
     * @return The portName.
     */
    public java.lang.String getPortName() {
      java.lang.Object ref = portName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        portName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string port_name = 3 [json_name = "portName"];</code>
     * @return The bytes for portName.
     */
    public com.google.protobuf.ByteString
        getPortNameBytes() {
      java.lang.Object ref = portName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        portName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string port_name = 3 [json_name = "portName"];</code>
     * @param value The portName to set.
     * @return This builder for chaining.
     */
    public Builder setPortName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      portName_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>string port_name = 3 [json_name = "portName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPortName() {
      portName_ = getDefaultInstance().getPortName();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>string port_name = 3 [json_name = "portName"];</code>
     * @param value The bytes for portName to set.
     * @return This builder for chaining.
     */
    public Builder setPortNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      portName_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object withdrawalAddress_ = "";
    /**
     * <code>string withdrawal_address = 4 [json_name = "withdrawalAddress"];</code>
     * @return The withdrawalAddress.
     */
    public java.lang.String getWithdrawalAddress() {
      java.lang.Object ref = withdrawalAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        withdrawalAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string withdrawal_address = 4 [json_name = "withdrawalAddress"];</code>
     * @return The bytes for withdrawalAddress.
     */
    public com.google.protobuf.ByteString
        getWithdrawalAddressBytes() {
      java.lang.Object ref = withdrawalAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        withdrawalAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string withdrawal_address = 4 [json_name = "withdrawalAddress"];</code>
     * @param value The withdrawalAddress to set.
     * @return This builder for chaining.
     */
    public Builder setWithdrawalAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      withdrawalAddress_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>string withdrawal_address = 4 [json_name = "withdrawalAddress"];</code>
     * @return This builder for chaining.
     */
    public Builder clearWithdrawalAddress() {
      withdrawalAddress_ = getDefaultInstance().getWithdrawalAddress();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <code>string withdrawal_address = 4 [json_name = "withdrawalAddress"];</code>
     * @param value The bytes for withdrawalAddress to set.
     * @return This builder for chaining.
     */
    public Builder setWithdrawalAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      withdrawalAddress_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private int balanceWaitgroup_ ;
    /**
     * <code>uint32 balance_waitgroup = 5 [json_name = "balanceWaitgroup"];</code>
     * @return The balanceWaitgroup.
     */
    @java.lang.Override
    public int getBalanceWaitgroup() {
      return balanceWaitgroup_;
    }
    /**
     * <code>uint32 balance_waitgroup = 5 [json_name = "balanceWaitgroup"];</code>
     * @param value The balanceWaitgroup to set.
     * @return This builder for chaining.
     */
    public Builder setBalanceWaitgroup(int value) {

      balanceWaitgroup_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 balance_waitgroup = 5 [json_name = "balanceWaitgroup"];</code>
     * @return This builder for chaining.
     */
    public Builder clearBalanceWaitgroup() {
      bitField0_ = (bitField0_ & ~0x00000010);
      balanceWaitgroup_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:quicksilver.interchainstaking.v1.ICAAccount)
  }

  // @@protoc_insertion_point(class_scope:quicksilver.interchainstaking.v1.ICAAccount)
  private static final com.quicksilver.interchainstaking.v1.ICAAccount DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.quicksilver.interchainstaking.v1.ICAAccount();
  }

  public static com.quicksilver.interchainstaking.v1.ICAAccount getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ICAAccount>
      PARSER = new com.google.protobuf.AbstractParser<ICAAccount>() {
    @java.lang.Override
    public ICAAccount parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ICAAccount> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ICAAccount> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.quicksilver.interchainstaking.v1.ICAAccount getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


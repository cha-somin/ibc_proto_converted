// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quicksilver/interchainstaking/v1/interchainstaking.proto

package com.quicksilver.interchainstaking.v1;

public final class InterchainstakingProto {
  private InterchainstakingProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_Zone_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_Zone_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_ICAAccount_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_ICAAccount_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_Distribution_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_Distribution_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_WithdrawalRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_WithdrawalRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_UnbondingRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_UnbondingRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_RedelegationRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_RedelegationRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_TransferRecord_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_TransferRecord_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_Validator_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_Validator_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_DelegatorIntent_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_DelegatorIntent_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_ValidatorIntent_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_ValidatorIntent_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_Delegation_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_Delegation_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_PortConnectionTuple_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_PortConnectionTuple_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainstaking_v1_Receipt_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainstaking_v1_Receipt_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n8quicksilver/interchainstaking/v1/inter" +
      "chainstaking.proto\022 quicksilver.intercha" +
      "instaking.v1\032\036cosmos/base/v1beta1/coin.p" +
      "roto\032\031cosmos_proto/cosmos.proto\032\024gogopro" +
      "to/gogo.proto\032\037google/protobuf/timestamp" +
      ".proto\"\346\014\n\004Zone\022#\n\rconnection_id\030\001 \001(\tR\014" +
      "connectionId\022\031\n\010chain_id\030\002 \001(\tR\007chainId\022" +
      "U\n\017deposit_address\030\003 \001(\0132,.quicksilver.i" +
      "nterchainstaking.v1.ICAAccountR\016depositA" +
      "ddress\022[\n\022withdrawal_address\030\004 \001(\0132,.qui" +
      "cksilver.interchainstaking.v1.ICAAccount" +
      "R\021withdrawalAddress\022]\n\023performance_addre" +
      "ss\030\005 \001(\0132,.quicksilver.interchainstaking" +
      ".v1.ICAAccountR\022performanceAddress\022[\n\022de" +
      "legation_address\030\006 \001(\0132,.quicksilver.int" +
      "erchainstaking.v1.ICAAccountR\021delegation" +
      "Address\022%\n\016account_prefix\030\007 \001(\tR\raccount" +
      "Prefix\022\037\n\013local_denom\030\010 \001(\tR\nlocalDenom\022" +
      "\035\n\nbase_denom\030\t \001(\tR\tbaseDenom\022e\n\017redemp" +
      "tion_rate\030\n \001(\tB<\310\336\037\000\332\336\037&github.com/cosm" +
      "os/cosmos-sdk/types.Dec\322\264-\ncosmos.DecR\016r" +
      "edemptionRate\022n\n\024last_redemption_rate\030\013 " +
      "\001(\tB<\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sd" +
      "k/types.Dec\322\264-\ncosmos.DecR\022lastRedemptio" +
      "nRate\022K\n\nvalidators\030\014 \003(\0132+.quicksilver." +
      "interchainstaking.v1.ValidatorR\nvalidato" +
      "rs\022r\n\020aggregate_intent\030\r \003(\01321.quicksilv" +
      "er.interchainstaking.v1.ValidatorIntentB" +
      "\024\252\337\037\020ValidatorIntentsR\017aggregateIntent\022\035" +
      "\n\nmulti_send\030\016 \001(\010R\tmultiSend\022)\n\020liquidi" +
      "ty_module\030\017 \001(\010R\017liquidityModule\0221\n\024with" +
      "drawal_waitgroup\030\020 \001(\rR\023withdrawalWaitgr" +
      "oup\0227\n\030ibc_next_validators_hash\030\021 \001(\014R\025i" +
      "bcNextValidatorsHash\022D\n\036validator_select" +
      "ion_allocation\030\022 \001(\004R\034validatorSelection" +
      "Allocation\022/\n\023holdings_allocation\030\023 \001(\004R" +
      "\022holdingsAllocation\022*\n\021last_epoch_height" +
      "\030\024 \001(\003R\017lastEpochHeight\022N\n\003tvl\030\025 \001(\tB<\310\336" +
      "\037\000\332\336\037&github.com/cosmos/cosmos-sdk/types" +
      ".Dec\322\264-\ncosmos.DecR\003tvl\022)\n\020unbonding_per" +
      "iod\030\026 \001(\003R\017unbondingPeriod\022&\n\017messages_p" +
      "er_tx\030\027 \001(\003R\rmessagesPerTx\022\032\n\010decimals\030\030" +
      " \001(\003R\010decimals\022+\n\021unbonding_enabled\030\031 \001(" +
      "\010R\020unbondingEnabled\022)\n\020deposits_enabled\030" +
      "\032 \001(\010R\017depositsEnabled\022(\n\020return_to_send" +
      "er\030\033 \001(\010R\016returnToSender\022\025\n\006is_118\030\034 \001(\010" +
      "R\005is118\"\240\002\n\nICAAccount\0222\n\007address\030\001 \001(\tB" +
      "\030\322\264-\024cosmos.AddressStringR\007address\022e\n\007ba" +
      "lance\030\002 \003(\0132\031.cosmos.base.v1beta1.CoinB0" +
      "\310\336\037\000\252\337\037(github.com/cosmos/cosmos-sdk/typ" +
      "es.CoinsR\007balance\022\033\n\tport_name\030\003 \001(\tR\010po" +
      "rtName\022-\n\022withdrawal_address\030\004 \001(\tR\021with" +
      "drawalAddress\022+\n\021balance_waitgroup\030\005 \001(\r" +
      "R\020balanceWaitgroup\"@\n\014Distribution\022\030\n\007va" +
      "loper\030\001 \001(\tR\007valoper\022\026\n\006amount\030\002 \001(\004R\006am" +
      "ount\"\355\004\n\020WithdrawalRecord\022\031\n\010chain_id\030\001 " +
      "\001(\tR\007chainId\0226\n\tdelegator\030\002 \001(\tB\030\322\264-\024cos" +
      "mos.AddressStringR\tdelegator\022R\n\014distribu" +
      "tion\030\003 \003(\0132..quicksilver.interchainstaki" +
      "ng.v1.DistributionR\014distribution\0226\n\treci" +
      "pient\030\004 \001(\tB\030\322\264-\024cosmos.AddressStringR\tr" +
      "ecipient\022c\n\006amount\030\005 \003(\0132\031.cosmos.base.v" +
      "1beta1.CoinB0\310\336\037\000\252\337\037(github.com/cosmos/c" +
      "osmos-sdk/types.CoinsR\006amount\022z\n\013burn_am" +
      "ount\030\006 \001(\0132\031.cosmos.base.v1beta1.CoinB>\310" +
      "\336\037\000\332\336\037\'github.com/cosmos/cosmos-sdk/type" +
      "s.Coin\322\264-\013cosmos.CoinR\nburnAmount\022\026\n\006txh" +
      "ash\030\007 \001(\tR\006txhash\022\026\n\006status\030\010 \001(\005R\006statu" +
      "s\022M\n\017completion_time\030\t \001(\0132\032.google.prot" +
      "obuf.TimestampB\010\310\336\037\000\220\337\037\001R\016completionTime" +
      "\022\032\n\010requeued\030\n \001(\010R\010requeued\"\256\001\n\017Unbondi" +
      "ngRecord\022\031\n\010chain_id\030\001 \001(\tR\007chainId\022!\n\014e" +
      "poch_number\030\002 \001(\003R\013epochNumber\0226\n\tvalida" +
      "tor\030\003 \001(\tB\030\322\264-\024cosmos.AddressStringR\tval" +
      "idator\022%\n\016related_txhash\030\004 \003(\tR\rrelatedT" +
      "xhash\"\247\002\n\022RedelegationRecord\022\031\n\010chain_id" +
      "\030\001 \001(\tR\007chainId\022!\n\014epoch_number\030\002 \001(\003R\013e" +
      "pochNumber\0220\n\006source\030\003 \001(\tB\030\322\264-\024cosmos.A" +
      "ddressStringR\006source\022:\n\013destination\030\004 \001(" +
      "\tB\030\322\264-\024cosmos.AddressStringR\013destination" +
      "\022\026\n\006amount\030\005 \001(\003R\006amount\022M\n\017completion_t" +
      "ime\030\006 \001(\0132\032.google.protobuf.TimestampB\010\310" +
      "\336\037\000\220\337\037\001R\016completionTime\"\355\001\n\016TransferReco" +
      "rd\0220\n\006sender\030\001 \001(\tB\030\322\264-\024cosmos.AddressSt" +
      "ringR\006sender\0226\n\trecipient\030\002 \001(\tB\030\322\264-\024cos" +
      "mos.AddressStringR\trecipient\022q\n\006amount\030\003" +
      " \001(\0132\031.cosmos.base.v1beta1.CoinB>\310\336\037\000\332\336\037" +
      "\'github.com/cosmos/cosmos-sdk/types.Coin" +
      "\322\264-\013cosmos.CoinR\006amount\"\354\004\n\tValidator\022A\n" +
      "\017valoper_address\030\001 \001(\tB\030\322\264-\024cosmos.Addre" +
      "ssStringR\016valoperAddress\022e\n\017commission_r" +
      "ate\030\002 \001(\tB<\310\336\037\000\332\336\037&github.com/cosmos/cos" +
      "mos-sdk/types.Dec\322\264-\ncosmos.DecR\016commiss" +
      "ionRate\022g\n\020delegator_shares\030\003 \001(\tB<\310\336\037\000\332" +
      "\336\037&github.com/cosmos/cosmos-sdk/types.De" +
      "c\322\264-\ncosmos.DecR\017delegatorShares\022_\n\014voti" +
      "ng_power\030\004 \001(\tB<\310\336\037\000\332\336\037&github.com/cosmo" +
      "s/cosmos-sdk/types.Int\322\264-\ncosmos.IntR\013vo" +
      "tingPower\022R\n\005score\030\005 \001(\tB<\310\336\037\000\332\336\037&github" +
      ".com/cosmos/cosmos-sdk/types.Dec\322\264-\ncosm" +
      "os.DecR\005score\022\026\n\006status\030\006 \001(\tR\006status\022\026\n" +
      "\006jailed\030\007 \001(\010R\006jailed\022\036\n\ntombstoned\030\010 \001(" +
      "\010R\ntombstoned\022G\n\014jailed_since\030\t \001(\0132\032.go" +
      "ogle.protobuf.TimestampB\010\310\336\037\000\220\337\037\001R\013jaile" +
      "dSince\"\254\001\n\017DelegatorIntent\0226\n\tdelegator\030" +
      "\001 \001(\tB\030\322\264-\024cosmos.AddressStringR\tdelegat" +
      "or\022a\n\007intents\030\002 \003(\01321.quicksilver.interc" +
      "hainstaking.v1.ValidatorIntentB\024\252\337\037\020Vali" +
      "datorIntentsR\007intents\"\274\001\n\017ValidatorInten" +
      "t\022B\n\017valoper_address\030\001 \001(\tB\030\322\264-\024cosmos.A" +
      "ddressStringR\017valoper_address\022e\n\006weight\030" +
      "\002 \001(\tBM\310\336\037\000\332\336\037&github.com/cosmos/cosmos-" +
      "sdk/types.Dec\362\336\037\ryaml:\"weight\"\322\264-\ncosmos" +
      ".DecR\006weight\"\322\002\n\nDelegation\022G\n\022delegatio" +
      "n_address\030\001 \001(\tB\030\322\264-\024cosmos.AddressStrin" +
      "gR\021delegationAddress\022E\n\021validator_addres" +
      "s\030\002 \001(\tB\030\322\264-\024cosmos.AddressStringR\020valid" +
      "atorAddress\022q\n\006amount\030\003 \001(\0132\031.cosmos.bas" +
      "e.v1beta1.CoinB>\310\336\037\000\332\336\037\'github.com/cosmo" +
      "s/cosmos-sdk/types.Coin\322\264-\013cosmos.CoinR\006" +
      "amount\022\026\n\006height\030\004 \001(\003R\006height\022)\n\020redele" +
      "gation_end\030\005 \001(\003R\017redelegationEnd\"S\n\023Por" +
      "tConnectionTuple\022#\n\rconnection_id\030\001 \001(\tR" +
      "\014connectionId\022\027\n\007port_id\030\002 \001(\tR\006portId\"\334" +
      "\002\n\007Receipt\022\031\n\010chain_id\030\001 \001(\tR\007chainId\0220\n" +
      "\006sender\030\002 \001(\tB\030\322\264-\024cosmos.AddressStringR" +
      "\006sender\022\026\n\006txhash\030\003 \001(\tR\006txhash\022c\n\006amoun" +
      "t\030\004 \003(\0132\031.cosmos.base.v1beta1.CoinB0\310\336\037\000" +
      "\252\337\037(github.com/cosmos/cosmos-sdk/types.C" +
      "oinsR\006amount\022C\n\nfirst_seen\030\005 \001(\0132\032.googl" +
      "e.protobuf.TimestampB\010\310\336\037\001\220\337\037\001R\tfirstSee" +
      "n\022B\n\tcompleted\030\006 \001(\0132\032.google.protobuf.T" +
      "imestampB\010\310\336\037\001\220\337\037\001R\tcompletedB\242\002\n$com.qu" +
      "icksilver.interchainstaking.v1B\026Intercha" +
      "instakingProtoP\001Z@github.com/ingenuity-b" +
      "uild/quicksilver/x/interchainstaking/typ" +
      "es\242\002\003QIX\252\002 Quicksilver.Interchainstaking" +
      ".V1\312\002 Quicksilver\\Interchainstaking\\V1\342\002" +
      ",Quicksilver\\Interchainstaking\\V1\\GPBMet" +
      "adata\352\002\"Quicksilver::Interchainstaking::" +
      "V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_quicksilver_interchainstaking_v1_Zone_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_quicksilver_interchainstaking_v1_Zone_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_Zone_descriptor,
        new java.lang.String[] { "ConnectionId", "ChainId", "DepositAddress", "WithdrawalAddress", "PerformanceAddress", "DelegationAddress", "AccountPrefix", "LocalDenom", "BaseDenom", "RedemptionRate", "LastRedemptionRate", "Validators", "AggregateIntent", "MultiSend", "LiquidityModule", "WithdrawalWaitgroup", "IbcNextValidatorsHash", "ValidatorSelectionAllocation", "HoldingsAllocation", "LastEpochHeight", "Tvl", "UnbondingPeriod", "MessagesPerTx", "Decimals", "UnbondingEnabled", "DepositsEnabled", "ReturnToSender", "Is118", });
    internal_static_quicksilver_interchainstaking_v1_ICAAccount_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_quicksilver_interchainstaking_v1_ICAAccount_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_ICAAccount_descriptor,
        new java.lang.String[] { "Address", "Balance", "PortName", "WithdrawalAddress", "BalanceWaitgroup", });
    internal_static_quicksilver_interchainstaking_v1_Distribution_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_quicksilver_interchainstaking_v1_Distribution_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_Distribution_descriptor,
        new java.lang.String[] { "Valoper", "Amount", });
    internal_static_quicksilver_interchainstaking_v1_WithdrawalRecord_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_quicksilver_interchainstaking_v1_WithdrawalRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_WithdrawalRecord_descriptor,
        new java.lang.String[] { "ChainId", "Delegator", "Distribution", "Recipient", "Amount", "BurnAmount", "Txhash", "Status", "CompletionTime", "Requeued", });
    internal_static_quicksilver_interchainstaking_v1_UnbondingRecord_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_quicksilver_interchainstaking_v1_UnbondingRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_UnbondingRecord_descriptor,
        new java.lang.String[] { "ChainId", "EpochNumber", "Validator", "RelatedTxhash", });
    internal_static_quicksilver_interchainstaking_v1_RedelegationRecord_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_quicksilver_interchainstaking_v1_RedelegationRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_RedelegationRecord_descriptor,
        new java.lang.String[] { "ChainId", "EpochNumber", "Source", "Destination", "Amount", "CompletionTime", });
    internal_static_quicksilver_interchainstaking_v1_TransferRecord_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_quicksilver_interchainstaking_v1_TransferRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_TransferRecord_descriptor,
        new java.lang.String[] { "Sender", "Recipient", "Amount", });
    internal_static_quicksilver_interchainstaking_v1_Validator_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_quicksilver_interchainstaking_v1_Validator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_Validator_descriptor,
        new java.lang.String[] { "ValoperAddress", "CommissionRate", "DelegatorShares", "VotingPower", "Score", "Status", "Jailed", "Tombstoned", "JailedSince", });
    internal_static_quicksilver_interchainstaking_v1_DelegatorIntent_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_quicksilver_interchainstaking_v1_DelegatorIntent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_DelegatorIntent_descriptor,
        new java.lang.String[] { "Delegator", "Intents", });
    internal_static_quicksilver_interchainstaking_v1_ValidatorIntent_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_quicksilver_interchainstaking_v1_ValidatorIntent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_ValidatorIntent_descriptor,
        new java.lang.String[] { "ValoperAddress", "Weight", });
    internal_static_quicksilver_interchainstaking_v1_Delegation_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_quicksilver_interchainstaking_v1_Delegation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_Delegation_descriptor,
        new java.lang.String[] { "DelegationAddress", "ValidatorAddress", "Amount", "Height", "RedelegationEnd", });
    internal_static_quicksilver_interchainstaking_v1_PortConnectionTuple_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_quicksilver_interchainstaking_v1_PortConnectionTuple_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_PortConnectionTuple_descriptor,
        new java.lang.String[] { "ConnectionId", "PortId", });
    internal_static_quicksilver_interchainstaking_v1_Receipt_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_quicksilver_interchainstaking_v1_Receipt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainstaking_v1_Receipt_descriptor,
        new java.lang.String[] { "ChainId", "Sender", "Txhash", "Amount", "FirstSeen", "Completed", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.cosmos_proto.CosmosProto.scalar);
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

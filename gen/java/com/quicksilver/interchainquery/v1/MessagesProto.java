// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quicksilver/interchainquery/v1/messages.proto

package com.quicksilver.interchainquery.v1;

public final class MessagesProto {
  private MessagesProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainquery_v1_MsgSubmitQueryResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainquery_v1_MsgSubmitQueryResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_interchainquery_v1_MsgSubmitQueryResponseResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_interchainquery_v1_MsgSubmitQueryResponseResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-quicksilver/interchainquery/v1/message" +
      "s.proto\022\036quicksilver.interchainquery.v1\032" +
      "\024gogoproto/gogo.proto\032\031cosmos_proto/cosm" +
      "os.proto\032\034google/api/annotations.proto\032\035" +
      "tendermint/crypto/proof.proto\"\351\002\n\026MsgSub" +
      "mitQueryResponse\022.\n\010chain_id\030\001 \001(\tB\023\362\336\037\017" +
      "yaml:\"chain_id\"R\007chainId\022.\n\010query_id\030\002 \001" +
      "(\tB\023\362\336\037\017yaml:\"query_id\"R\007queryId\022)\n\006resu" +
      "lt\030\003 \001(\014B\021\362\336\037\ryaml:\"result\"R\006result\022N\n\tp" +
      "roof_ops\030\004 \001(\0132\033.tendermint.crypto.Proof" +
      "OpsB\024\362\336\037\020yaml:\"proof_ops\"R\010proofOps\022)\n\006h" +
      "eight\030\005 \001(\003B\021\362\336\037\ryaml:\"height\"R\006height\022;" +
      "\n\014from_address\030\006 \001(\tB\030\322\264-\024cosmos.Address" +
      "StringR\013fromAddress:\014\210\240\037\000\230\240\037\001\350\240\037\000\" \n\036Msg" +
      "SubmitQueryResponseResponse2\311\001\n\003Msg\022\301\001\n\023" +
      "SubmitQueryResponse\0226.quicksilver.interc" +
      "hainquery.v1.MsgSubmitQueryResponse\032>.qu" +
      "icksilver.interchainquery.v1.MsgSubmitQu" +
      "eryResponseResponse\"2\202\323\344\223\002,\"\'/interchain" +
      "query/tx/v1beta1/submitquery:\001*B\215\002\n\"com." +
      "quicksilver.interchainquery.v1B\rMessages" +
      "ProtoP\001Z>github.com/ingenuity-build/quic" +
      "ksilver/x/interchainquery/types\242\002\003QIX\252\002\036" +
      "Quicksilver.Interchainquery.V1\312\002\036Quicksi" +
      "lver\\Interchainquery\\V1\342\002*Quicksilver\\In" +
      "terchainquery\\V1\\GPBMetadata\352\002 Quicksilv" +
      "er::Interchainquery::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
          com.google.api.AnnotationsProto.getDescriptor(),
          com.tendermint.crypto.ProofProto.getDescriptor(),
        });
    internal_static_quicksilver_interchainquery_v1_MsgSubmitQueryResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_quicksilver_interchainquery_v1_MsgSubmitQueryResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainquery_v1_MsgSubmitQueryResponse_descriptor,
        new java.lang.String[] { "ChainId", "QueryId", "Result", "ProofOps", "Height", "FromAddress", });
    internal_static_quicksilver_interchainquery_v1_MsgSubmitQueryResponseResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_quicksilver_interchainquery_v1_MsgSubmitQueryResponseResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_interchainquery_v1_MsgSubmitQueryResponseResponse_descriptor,
        new java.lang.String[] { });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.cosmos_proto.CosmosProto.scalar);
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
    com.google.api.AnnotationsProto.getDescriptor();
    com.tendermint.crypto.ProofProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

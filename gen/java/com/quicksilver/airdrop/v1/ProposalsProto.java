// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quicksilver/airdrop/v1/proposals.proto

package com.quicksilver.airdrop.v1;

public final class ProposalsProto {
  private ProposalsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quicksilver_airdrop_v1_RegisterZoneDropProposal_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quicksilver_airdrop_v1_RegisterZoneDropProposal_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&quicksilver/airdrop/v1/proposals.proto" +
      "\022\026quicksilver.airdrop.v1\032\024gogoproto/gogo" +
      ".proto\032$quicksilver/airdrop/v1/airdrop.p" +
      "roto\"\364\001\n\030RegisterZoneDropProposal\022\024\n\005tit" +
      "le\030\001 \001(\tR\005title\022 \n\013description\030\002 \001(\tR\013de" +
      "scription\022S\n\tzone_drop\030\003 \001(\0132 .quicksilv" +
      "er.airdrop.v1.ZoneDropB\024\362\336\037\020yaml:\"zone_d" +
      "rop\"R\010zoneDrop\022=\n\rclaim_records\030\004 \001(\014B\030\362" +
      "\336\037\024yaml:\"claim_records\"R\014claimRecords:\014\210" +
      "\240\037\000\230\240\037\000\350\240\037\000B\336\001\n\032com.quicksilver.airdrop." +
      "v1B\016ProposalsProtoP\001Z6github.com/ingenui" +
      "ty-build/quicksilver/x/airdrop/types\242\002\003Q" +
      "AX\252\002\026Quicksilver.Airdrop.V1\312\002\026Quicksilve" +
      "r\\Airdrop\\V1\342\002\"Quicksilver\\Airdrop\\V1\\GP" +
      "BMetadata\352\002\030Quicksilver::Airdrop::V1b\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.quicksilver.airdrop.v1.AirdropProto.getDescriptor(),
        });
    internal_static_quicksilver_airdrop_v1_RegisterZoneDropProposal_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_quicksilver_airdrop_v1_RegisterZoneDropProposal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quicksilver_airdrop_v1_RegisterZoneDropProposal_descriptor,
        new java.lang.String[] { "Title", "Description", "ZoneDrop", "ClaimRecords", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.moretags);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.quicksilver.airdrop.v1.AirdropProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

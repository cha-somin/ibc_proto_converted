// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quicksilver/airdrop/v1/airdrop.proto

package com.quicksilver.airdrop.v1;

/**
 * <pre>
 * Action is used as an enum to denote specific actions or tasks.
 * </pre>
 *
 * Protobuf enum {@code quicksilver.airdrop.v1.Action}
 */
public enum Action
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Undefined action (per protobuf spec)
   * </pre>
   *
   * <code>ActionUndefined = 0;</code>
   */
  ActionUndefined(0),
  /**
   * <pre>
   * Initial claim action
   * </pre>
   *
   * <code>ActionInitialClaim = 1;</code>
   */
  ActionInitialClaim(1),
  /**
   * <pre>
   * Deposit tier 1 (e.g. &gt; 5% of base_value)
   * </pre>
   *
   * <code>ActionDepositT1 = 2;</code>
   */
  ActionDepositT1(2),
  /**
   * <pre>
   * Deposit tier 2 (e.g. &gt; 10% of base_value)
   * </pre>
   *
   * <code>ActionDepositT2 = 3;</code>
   */
  ActionDepositT2(3),
  /**
   * <pre>
   * Deposit tier 3 (e.g. &gt; 15% of base_value)
   * </pre>
   *
   * <code>ActionDepositT3 = 4;</code>
   */
  ActionDepositT3(4),
  /**
   * <pre>
   * Deposit tier 4 (e.g. &gt; 22% of base_value)
   * </pre>
   *
   * <code>ActionDepositT4 = 5;</code>
   */
  ActionDepositT4(5),
  /**
   * <pre>
   * Deposit tier 5 (e.g. &gt; 30% of base_value)
   * </pre>
   *
   * <code>ActionDepositT5 = 6;</code>
   */
  ActionDepositT5(6),
  /**
   * <pre>
   * Active QCK delegation
   * </pre>
   *
   * <code>ActionStakeQCK = 7;</code>
   */
  ActionStakeQCK(7),
  /**
   * <pre>
   * Intent is set
   * </pre>
   *
   * <code>ActionSignalIntent = 8;</code>
   */
  ActionSignalIntent(8),
  /**
   * <pre>
   * Cast governance vote on QS
   * </pre>
   *
   * <code>ActionQSGov = 9;</code>
   */
  ActionQSGov(9),
  /**
   * <pre>
   * Governance By Proxy (GbP): cast vote on remote zone
   * </pre>
   *
   * <code>ActionGbP = 10;</code>
   */
  ActionGbP(10),
  /**
   * <pre>
   * Provide liquidity on Osmosis
   * </pre>
   *
   * <code>ActionOsmosis = 11;</code>
   */
  ActionOsmosis(11),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Undefined action (per protobuf spec)
   * </pre>
   *
   * <code>ActionUndefined = 0;</code>
   */
  public static final int ActionUndefined_VALUE = 0;
  /**
   * <pre>
   * Initial claim action
   * </pre>
   *
   * <code>ActionInitialClaim = 1;</code>
   */
  public static final int ActionInitialClaim_VALUE = 1;
  /**
   * <pre>
   * Deposit tier 1 (e.g. &gt; 5% of base_value)
   * </pre>
   *
   * <code>ActionDepositT1 = 2;</code>
   */
  public static final int ActionDepositT1_VALUE = 2;
  /**
   * <pre>
   * Deposit tier 2 (e.g. &gt; 10% of base_value)
   * </pre>
   *
   * <code>ActionDepositT2 = 3;</code>
   */
  public static final int ActionDepositT2_VALUE = 3;
  /**
   * <pre>
   * Deposit tier 3 (e.g. &gt; 15% of base_value)
   * </pre>
   *
   * <code>ActionDepositT3 = 4;</code>
   */
  public static final int ActionDepositT3_VALUE = 4;
  /**
   * <pre>
   * Deposit tier 4 (e.g. &gt; 22% of base_value)
   * </pre>
   *
   * <code>ActionDepositT4 = 5;</code>
   */
  public static final int ActionDepositT4_VALUE = 5;
  /**
   * <pre>
   * Deposit tier 5 (e.g. &gt; 30% of base_value)
   * </pre>
   *
   * <code>ActionDepositT5 = 6;</code>
   */
  public static final int ActionDepositT5_VALUE = 6;
  /**
   * <pre>
   * Active QCK delegation
   * </pre>
   *
   * <code>ActionStakeQCK = 7;</code>
   */
  public static final int ActionStakeQCK_VALUE = 7;
  /**
   * <pre>
   * Intent is set
   * </pre>
   *
   * <code>ActionSignalIntent = 8;</code>
   */
  public static final int ActionSignalIntent_VALUE = 8;
  /**
   * <pre>
   * Cast governance vote on QS
   * </pre>
   *
   * <code>ActionQSGov = 9;</code>
   */
  public static final int ActionQSGov_VALUE = 9;
  /**
   * <pre>
   * Governance By Proxy (GbP): cast vote on remote zone
   * </pre>
   *
   * <code>ActionGbP = 10;</code>
   */
  public static final int ActionGbP_VALUE = 10;
  /**
   * <pre>
   * Provide liquidity on Osmosis
   * </pre>
   *
   * <code>ActionOsmosis = 11;</code>
   */
  public static final int ActionOsmosis_VALUE = 11;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Action valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Action forNumber(int value) {
    switch (value) {
      case 0: return ActionUndefined;
      case 1: return ActionInitialClaim;
      case 2: return ActionDepositT1;
      case 3: return ActionDepositT2;
      case 4: return ActionDepositT3;
      case 5: return ActionDepositT4;
      case 6: return ActionDepositT5;
      case 7: return ActionStakeQCK;
      case 8: return ActionSignalIntent;
      case 9: return ActionQSGov;
      case 10: return ActionGbP;
      case 11: return ActionOsmosis;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Action>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Action> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Action>() {
          public Action findValueByNumber(int number) {
            return Action.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.quicksilver.airdrop.v1.AirdropProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final Action[] VALUES = values();

  public static Action valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Action(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:quicksilver.airdrop.v1.Action)
}


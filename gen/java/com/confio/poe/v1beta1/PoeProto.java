// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: confio/poe/v1beta1/poe.proto

package com.confio.poe.v1beta1;

public final class PoeProto {
  private PoeProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_confio_poe_v1beta1_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_confio_poe_v1beta1_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034confio/poe/v1beta1/poe.proto\022\022confio.p" +
      "oe.v1beta1\032\024gogoproto/gogo.proto\032\031google" +
      "/protobuf/any.proto\032\036google/protobuf/dur" +
      "ation.proto\032\037google/protobuf/timestamp.p" +
      "roto\032\031cosmos_proto/cosmos.proto\032\036cosmos/" +
      "base/v1beta1/coin.proto\032$cosmos/staking/" +
      "v1beta1/staking.proto\032\034tendermint/types/" +
      "types.proto\"\362\002\n\006Params\022L\n\022historical_ent" +
      "ries\030\001 \001(\rB\035\362\336\037\031yaml:\"historical_entries" +
      "\"R\021historicalEntries\022k\n\035initial_val_enga" +
      "gement_points\030\002 \001(\004B(\362\336\037$yaml:\"initial_v" +
      "al_engagement_points\"R\032initialValEngagem" +
      "entPoints\022\242\001\n\026min_delegation_amounts\030\003 \003" +
      "(\0132\031.cosmos.base.v1beta1.CoinBQ\310\336\037\000\362\336\037\035y" +
      "aml:\"min_delegation_amounts\"\252\337\037(github.c" +
      "om/cosmos/cosmos-sdk/types.CoinsR\024minDel" +
      "egationAmounts:\010\230\240\037\000\350\240\037\001*\222\005\n\017PoEContract" +
      "Type\022+\n\tUNDEFINED\020\000\032\034\212\235 \030PoEContractType" +
      "Undefined\022\'\n\007STAKING\020\001\032\032\212\235 \026PoEContractT" +
      "ypeStaking\022%\n\006VALSET\020\002\032\031\212\235 \025PoEContractT" +
      "ypeValset\022-\n\nENGAGEMENT\020\003\032\035\212\235 \031PoEContra" +
      "ctTypeEngagement\022#\n\005MIXER\020\004\032\030\212\235 \024PoECont" +
      "ractTypeMixer\0221\n\014DISTRIBUTION\020\005\032\037\212\235 \033PoE" +
      "ContractTypeDistribution\022>\n\023OVERSIGHT_CO" +
      "MMUNITY\020\006\032%\212\235 !PoEContractTypeOversightC" +
      "ommunity\022T\n\035OVERSIGHT_COMMUNITY_PROPOSAL" +
      "S\020\007\0321\212\235 -PoEContractTypeOversightCommuni" +
      "tyGovProposals\0224\n\016COMMUNITY_POOL\020\010\032 \212\235 \034" +
      "PoEContractTypeCommunityPool\0228\n\020VALIDATO" +
      "R_VOTING\020\t\032\"\212\235 \036PoEContractTypeValidator" +
      "Voting\0220\n\014ARBITER_POOL\020\n\032\036\212\235 \032PoEContrac" +
      "tTypeArbiterPool\022=\n\023ARBITER_POOL_VOTING\020" +
      "\013\032$\212\235  PoEContractTypeArbiterPoolVoting\032" +
      "\004\210\243\036\000B\262\001\n\026com.confio.poe.v1beta1B\010PoePro" +
      "toP\001Z$github.com/confio/tgrade/x/poe/typ" +
      "es\242\002\003CPX\252\002\022Confio.Poe.V1beta1\312\002\022Confio\\P" +
      "oe\\V1beta1\342\002\036Confio\\Poe\\V1beta1\\GPBMetad" +
      "ata\352\002\024Confio::Poe::V1beta1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.google.protobuf.AnyProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.cosmos.staking.v1beta1.StakingProto.getDescriptor(),
          com.tendermint.types.TypesProto.getDescriptor(),
        });
    internal_static_confio_poe_v1beta1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_confio_poe_v1beta1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_confio_poe_v1beta1_Params_descriptor,
        new java.lang.String[] { "HistoricalEntries", "InitialValEngagementPoints", "MinDelegationAmounts", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.enumvalueCustomname);
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.goprotoEnumPrefix);
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.google.protobuf.AnyProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.cosmos.staking.v1beta1.StakingProto.getDescriptor();
    com.tendermint.types.TypesProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

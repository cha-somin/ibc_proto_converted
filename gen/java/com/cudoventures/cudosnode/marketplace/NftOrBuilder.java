// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cudos/marketplace/nft.proto

package com.cudoventures.cudosnode.marketplace;

public interface NftOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cudoventures.cudosnode.marketplace.Nft)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>uint64 id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  long getId();

  /**
   * <code>string tokenId = 2 [json_name = "tokenId"];</code>
   * @return The tokenId.
   */
  java.lang.String getTokenId();
  /**
   * <code>string tokenId = 2 [json_name = "tokenId"];</code>
   * @return The bytes for tokenId.
   */
  com.google.protobuf.ByteString
      getTokenIdBytes();

  /**
   * <code>string denomId = 3 [json_name = "denomId"];</code>
   * @return The denomId.
   */
  java.lang.String getDenomId();
  /**
   * <code>string denomId = 3 [json_name = "denomId"];</code>
   * @return The bytes for denomId.
   */
  com.google.protobuf.ByteString
      getDenomIdBytes();

  /**
   * <code>.cosmos.base.v1beta1.Coin price = 4 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   * @return Whether the price field is set.
   */
  boolean hasPrice();
  /**
   * <code>.cosmos.base.v1beta1.Coin price = 4 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   * @return The price.
   */
  com.cosmos.base.v1beta1.Coin getPrice();
  /**
   * <code>.cosmos.base.v1beta1.Coin price = 4 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getPriceOrBuilder();

  /**
   * <code>string owner = 5 [json_name = "owner"];</code>
   * @return The owner.
   */
  java.lang.String getOwner();
  /**
   * <code>string owner = 5 [json_name = "owner"];</code>
   * @return The bytes for owner.
   */
  com.google.protobuf.ByteString
      getOwnerBytes();
}

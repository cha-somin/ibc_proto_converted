// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: canto/erc20/v1/erc20.proto

package com.canto.erc20.v1;

public interface TokenPairOrBuilder extends
    // @@protoc_insertion_point(interface_extends:canto.erc20.v1.TokenPair)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * address of ERC20 contract token
   * </pre>
   *
   * <code>string erc20_address = 1 [json_name = "erc20Address"];</code>
   * @return The erc20Address.
   */
  java.lang.String getErc20Address();
  /**
   * <pre>
   * address of ERC20 contract token
   * </pre>
   *
   * <code>string erc20_address = 1 [json_name = "erc20Address"];</code>
   * @return The bytes for erc20Address.
   */
  com.google.protobuf.ByteString
      getErc20AddressBytes();

  /**
   * <pre>
   * cosmos base denomination to be mapped to
   * </pre>
   *
   * <code>string denom = 2 [json_name = "denom"];</code>
   * @return The denom.
   */
  java.lang.String getDenom();
  /**
   * <pre>
   * cosmos base denomination to be mapped to
   * </pre>
   *
   * <code>string denom = 2 [json_name = "denom"];</code>
   * @return The bytes for denom.
   */
  com.google.protobuf.ByteString
      getDenomBytes();

  /**
   * <pre>
   * shows token mapping enable status
   * </pre>
   *
   * <code>bool enabled = 3 [json_name = "enabled"];</code>
   * @return The enabled.
   */
  boolean getEnabled();

  /**
   * <pre>
   * ERC20 owner address ENUM (0 invalid, 1 ModuleAccount, 2 external address)
   * </pre>
   *
   * <code>.canto.erc20.v1.Owner contract_owner = 4 [json_name = "contractOwner"];</code>
   * @return The enum numeric value on the wire for contractOwner.
   */
  int getContractOwnerValue();
  /**
   * <pre>
   * ERC20 owner address ENUM (0 invalid, 1 ModuleAccount, 2 external address)
   * </pre>
   *
   * <code>.canto.erc20.v1.Owner contract_owner = 4 [json_name = "contractOwner"];</code>
   * @return The contractOwner.
   */
  com.canto.erc20.v1.Owner getContractOwner();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: canto/erc20/v1/erc20.proto

package com.canto.erc20.v1;

/**
 * <pre>
 * Owner enumerates the ownership of a ERC20 contract.
 * </pre>
 *
 * Protobuf enum {@code canto.erc20.v1.Owner}
 */
public enum Owner
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * OWNER_UNSPECIFIED defines an invalid/undefined owner.
   * </pre>
   *
   * <code>OWNER_UNSPECIFIED = 0;</code>
   */
  OWNER_UNSPECIFIED(0),
  /**
   * <pre>
   * OWNER_MODULE erc20 is owned by the erc20 module account.
   * </pre>
   *
   * <code>OWNER_MODULE = 1;</code>
   */
  OWNER_MODULE(1),
  /**
   * <pre>
   * EXTERNAL erc20 is owned by an external account.
   * </pre>
   *
   * <code>OWNER_EXTERNAL = 2;</code>
   */
  OWNER_EXTERNAL(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * OWNER_UNSPECIFIED defines an invalid/undefined owner.
   * </pre>
   *
   * <code>OWNER_UNSPECIFIED = 0;</code>
   */
  public static final int OWNER_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * OWNER_MODULE erc20 is owned by the erc20 module account.
   * </pre>
   *
   * <code>OWNER_MODULE = 1;</code>
   */
  public static final int OWNER_MODULE_VALUE = 1;
  /**
   * <pre>
   * EXTERNAL erc20 is owned by an external account.
   * </pre>
   *
   * <code>OWNER_EXTERNAL = 2;</code>
   */
  public static final int OWNER_EXTERNAL_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Owner valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Owner forNumber(int value) {
    switch (value) {
      case 0: return OWNER_UNSPECIFIED;
      case 1: return OWNER_MODULE;
      case 2: return OWNER_EXTERNAL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Owner>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Owner> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Owner>() {
          public Owner findValueByNumber(int number) {
            return Owner.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.canto.erc20.v1.Erc20Proto.getDescriptor().getEnumTypes().get(0);
  }

  private static final Owner[] VALUES = values();

  public static Owner valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Owner(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:canto.erc20.v1.Owner)
}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: juno/feeshare/v1/genesis.proto

package com.juno.feeshare.v1;

public interface ParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:juno.feeshare.v1.Params)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * enable_feeshare defines a parameter to enable the feeshare module
   * </pre>
   *
   * <code>bool enable_fee_share = 1 [json_name = "enableFeeShare"];</code>
   * @return The enableFeeShare.
   */
  boolean getEnableFeeShare();

  /**
   * <pre>
   * developer_shares defines the proportion of the transaction fees to be
   * distributed to the registered contract owner
   * </pre>
   *
   * <code>string developer_shares = 2 [json_name = "developerShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The developerShares.
   */
  java.lang.String getDeveloperShares();
  /**
   * <pre>
   * developer_shares defines the proportion of the transaction fees to be
   * distributed to the registered contract owner
   * </pre>
   *
   * <code>string developer_shares = 2 [json_name = "developerShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for developerShares.
   */
  com.google.protobuf.ByteString
      getDeveloperSharesBytes();

  /**
   * <pre>
   * allowed_denoms defines the list of denoms that are allowed to be paid to
   * the contract withdraw addresses. If said denom is not in the list, the fees
   * will ONLY be sent to the community pool.
   * If this list is empty, all denoms are allowed.
   * </pre>
   *
   * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
   * @return A list containing the allowedDenoms.
   */
  java.util.List<java.lang.String>
      getAllowedDenomsList();
  /**
   * <pre>
   * allowed_denoms defines the list of denoms that are allowed to be paid to
   * the contract withdraw addresses. If said denom is not in the list, the fees
   * will ONLY be sent to the community pool.
   * If this list is empty, all denoms are allowed.
   * </pre>
   *
   * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
   * @return The count of allowedDenoms.
   */
  int getAllowedDenomsCount();
  /**
   * <pre>
   * allowed_denoms defines the list of denoms that are allowed to be paid to
   * the contract withdraw addresses. If said denom is not in the list, the fees
   * will ONLY be sent to the community pool.
   * If this list is empty, all denoms are allowed.
   * </pre>
   *
   * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
   * @param index The index of the element to return.
   * @return The allowedDenoms at the given index.
   */
  java.lang.String getAllowedDenoms(int index);
  /**
   * <pre>
   * allowed_denoms defines the list of denoms that are allowed to be paid to
   * the contract withdraw addresses. If said denom is not in the list, the fees
   * will ONLY be sent to the community pool.
   * If this list is empty, all denoms are allowed.
   * </pre>
   *
   * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the allowedDenoms at the given index.
   */
  com.google.protobuf.ByteString
      getAllowedDenomsBytes(int index);
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: juno/feeshare/v1/genesis.proto

package com.juno.feeshare.v1;

/**
 * <pre>
 * Params defines the feeshare module params
 * </pre>
 *
 * Protobuf type {@code juno.feeshare.v1.Params}
 */
public final class Params extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:juno.feeshare.v1.Params)
    ParamsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Params.newBuilder() to construct.
  private Params(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Params() {
    developerShares_ = "";
    allowedDenoms_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Params();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.juno.feeshare.v1.GenesisProto.internal_static_juno_feeshare_v1_Params_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.juno.feeshare.v1.GenesisProto.internal_static_juno_feeshare_v1_Params_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.juno.feeshare.v1.Params.class, com.juno.feeshare.v1.Params.Builder.class);
  }

  public static final int ENABLE_FEE_SHARE_FIELD_NUMBER = 1;
  private boolean enableFeeShare_ = false;
  /**
   * <pre>
   * enable_feeshare defines a parameter to enable the feeshare module
   * </pre>
   *
   * <code>bool enable_fee_share = 1 [json_name = "enableFeeShare"];</code>
   * @return The enableFeeShare.
   */
  @java.lang.Override
  public boolean getEnableFeeShare() {
    return enableFeeShare_;
  }

  public static final int DEVELOPER_SHARES_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object developerShares_ = "";
  /**
   * <pre>
   * developer_shares defines the proportion of the transaction fees to be
   * distributed to the registered contract owner
   * </pre>
   *
   * <code>string developer_shares = 2 [json_name = "developerShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The developerShares.
   */
  @java.lang.Override
  public java.lang.String getDeveloperShares() {
    java.lang.Object ref = developerShares_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      developerShares_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * developer_shares defines the proportion of the transaction fees to be
   * distributed to the registered contract owner
   * </pre>
   *
   * <code>string developer_shares = 2 [json_name = "developerShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for developerShares.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDeveloperSharesBytes() {
    java.lang.Object ref = developerShares_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      developerShares_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ALLOWED_DENOMS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList allowedDenoms_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * allowed_denoms defines the list of denoms that are allowed to be paid to
   * the contract withdraw addresses. If said denom is not in the list, the fees
   * will ONLY be sent to the community pool.
   * If this list is empty, all denoms are allowed.
   * </pre>
   *
   * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
   * @return A list containing the allowedDenoms.
   */
  public com.google.protobuf.ProtocolStringList
      getAllowedDenomsList() {
    return allowedDenoms_;
  }
  /**
   * <pre>
   * allowed_denoms defines the list of denoms that are allowed to be paid to
   * the contract withdraw addresses. If said denom is not in the list, the fees
   * will ONLY be sent to the community pool.
   * If this list is empty, all denoms are allowed.
   * </pre>
   *
   * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
   * @return The count of allowedDenoms.
   */
  public int getAllowedDenomsCount() {
    return allowedDenoms_.size();
  }
  /**
   * <pre>
   * allowed_denoms defines the list of denoms that are allowed to be paid to
   * the contract withdraw addresses. If said denom is not in the list, the fees
   * will ONLY be sent to the community pool.
   * If this list is empty, all denoms are allowed.
   * </pre>
   *
   * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
   * @param index The index of the element to return.
   * @return The allowedDenoms at the given index.
   */
  public java.lang.String getAllowedDenoms(int index) {
    return allowedDenoms_.get(index);
  }
  /**
   * <pre>
   * allowed_denoms defines the list of denoms that are allowed to be paid to
   * the contract withdraw addresses. If said denom is not in the list, the fees
   * will ONLY be sent to the community pool.
   * If this list is empty, all denoms are allowed.
   * </pre>
   *
   * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the allowedDenoms at the given index.
   */
  public com.google.protobuf.ByteString
      getAllowedDenomsBytes(int index) {
    return allowedDenoms_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (enableFeeShare_ != false) {
      output.writeBool(1, enableFeeShare_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(developerShares_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, developerShares_);
    }
    for (int i = 0; i < allowedDenoms_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, allowedDenoms_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (enableFeeShare_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, enableFeeShare_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(developerShares_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, developerShares_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < allowedDenoms_.size(); i++) {
        dataSize += computeStringSizeNoTag(allowedDenoms_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getAllowedDenomsList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.juno.feeshare.v1.Params)) {
      return super.equals(obj);
    }
    com.juno.feeshare.v1.Params other = (com.juno.feeshare.v1.Params) obj;

    if (getEnableFeeShare()
        != other.getEnableFeeShare()) return false;
    if (!getDeveloperShares()
        .equals(other.getDeveloperShares())) return false;
    if (!getAllowedDenomsList()
        .equals(other.getAllowedDenomsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ENABLE_FEE_SHARE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnableFeeShare());
    hash = (37 * hash) + DEVELOPER_SHARES_FIELD_NUMBER;
    hash = (53 * hash) + getDeveloperShares().hashCode();
    if (getAllowedDenomsCount() > 0) {
      hash = (37 * hash) + ALLOWED_DENOMS_FIELD_NUMBER;
      hash = (53 * hash) + getAllowedDenomsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.juno.feeshare.v1.Params parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.juno.feeshare.v1.Params parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.juno.feeshare.v1.Params parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.juno.feeshare.v1.Params parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.juno.feeshare.v1.Params parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.juno.feeshare.v1.Params parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.juno.feeshare.v1.Params parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.juno.feeshare.v1.Params parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.juno.feeshare.v1.Params parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.juno.feeshare.v1.Params parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.juno.feeshare.v1.Params parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.juno.feeshare.v1.Params parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.juno.feeshare.v1.Params prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Params defines the feeshare module params
   * </pre>
   *
   * Protobuf type {@code juno.feeshare.v1.Params}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:juno.feeshare.v1.Params)
      com.juno.feeshare.v1.ParamsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.juno.feeshare.v1.GenesisProto.internal_static_juno_feeshare_v1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.juno.feeshare.v1.GenesisProto.internal_static_juno_feeshare_v1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.juno.feeshare.v1.Params.class, com.juno.feeshare.v1.Params.Builder.class);
    }

    // Construct using com.juno.feeshare.v1.Params.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      enableFeeShare_ = false;
      developerShares_ = "";
      allowedDenoms_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.juno.feeshare.v1.GenesisProto.internal_static_juno_feeshare_v1_Params_descriptor;
    }

    @java.lang.Override
    public com.juno.feeshare.v1.Params getDefaultInstanceForType() {
      return com.juno.feeshare.v1.Params.getDefaultInstance();
    }

    @java.lang.Override
    public com.juno.feeshare.v1.Params build() {
      com.juno.feeshare.v1.Params result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.juno.feeshare.v1.Params buildPartial() {
      com.juno.feeshare.v1.Params result = new com.juno.feeshare.v1.Params(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.juno.feeshare.v1.Params result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.enableFeeShare_ = enableFeeShare_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.developerShares_ = developerShares_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        allowedDenoms_.makeImmutable();
        result.allowedDenoms_ = allowedDenoms_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.juno.feeshare.v1.Params) {
        return mergeFrom((com.juno.feeshare.v1.Params)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.juno.feeshare.v1.Params other) {
      if (other == com.juno.feeshare.v1.Params.getDefaultInstance()) return this;
      if (other.getEnableFeeShare() != false) {
        setEnableFeeShare(other.getEnableFeeShare());
      }
      if (!other.getDeveloperShares().isEmpty()) {
        developerShares_ = other.developerShares_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.allowedDenoms_.isEmpty()) {
        if (allowedDenoms_.isEmpty()) {
          allowedDenoms_ = other.allowedDenoms_;
          bitField0_ |= 0x00000004;
        } else {
          ensureAllowedDenomsIsMutable();
          allowedDenoms_.addAll(other.allowedDenoms_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              enableFeeShare_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              developerShares_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureAllowedDenomsIsMutable();
              allowedDenoms_.add(s);
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean enableFeeShare_ ;
    /**
     * <pre>
     * enable_feeshare defines a parameter to enable the feeshare module
     * </pre>
     *
     * <code>bool enable_fee_share = 1 [json_name = "enableFeeShare"];</code>
     * @return The enableFeeShare.
     */
    @java.lang.Override
    public boolean getEnableFeeShare() {
      return enableFeeShare_;
    }
    /**
     * <pre>
     * enable_feeshare defines a parameter to enable the feeshare module
     * </pre>
     *
     * <code>bool enable_fee_share = 1 [json_name = "enableFeeShare"];</code>
     * @param value The enableFeeShare to set.
     * @return This builder for chaining.
     */
    public Builder setEnableFeeShare(boolean value) {

      enableFeeShare_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * enable_feeshare defines a parameter to enable the feeshare module
     * </pre>
     *
     * <code>bool enable_fee_share = 1 [json_name = "enableFeeShare"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableFeeShare() {
      bitField0_ = (bitField0_ & ~0x00000001);
      enableFeeShare_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object developerShares_ = "";
    /**
     * <pre>
     * developer_shares defines the proportion of the transaction fees to be
     * distributed to the registered contract owner
     * </pre>
     *
     * <code>string developer_shares = 2 [json_name = "developerShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @return The developerShares.
     */
    public java.lang.String getDeveloperShares() {
      java.lang.Object ref = developerShares_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        developerShares_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * developer_shares defines the proportion of the transaction fees to be
     * distributed to the registered contract owner
     * </pre>
     *
     * <code>string developer_shares = 2 [json_name = "developerShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @return The bytes for developerShares.
     */
    public com.google.protobuf.ByteString
        getDeveloperSharesBytes() {
      java.lang.Object ref = developerShares_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        developerShares_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * developer_shares defines the proportion of the transaction fees to be
     * distributed to the registered contract owner
     * </pre>
     *
     * <code>string developer_shares = 2 [json_name = "developerShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @param value The developerShares to set.
     * @return This builder for chaining.
     */
    public Builder setDeveloperShares(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      developerShares_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * developer_shares defines the proportion of the transaction fees to be
     * distributed to the registered contract owner
     * </pre>
     *
     * <code>string developer_shares = 2 [json_name = "developerShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDeveloperShares() {
      developerShares_ = getDefaultInstance().getDeveloperShares();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * developer_shares defines the proportion of the transaction fees to be
     * distributed to the registered contract owner
     * </pre>
     *
     * <code>string developer_shares = 2 [json_name = "developerShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @param value The bytes for developerShares to set.
     * @return This builder for chaining.
     */
    public Builder setDeveloperSharesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      developerShares_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList allowedDenoms_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureAllowedDenomsIsMutable() {
      if (!allowedDenoms_.isModifiable()) {
        allowedDenoms_ = new com.google.protobuf.LazyStringArrayList(allowedDenoms_);
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * allowed_denoms defines the list of denoms that are allowed to be paid to
     * the contract withdraw addresses. If said denom is not in the list, the fees
     * will ONLY be sent to the community pool.
     * If this list is empty, all denoms are allowed.
     * </pre>
     *
     * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
     * @return A list containing the allowedDenoms.
     */
    public com.google.protobuf.ProtocolStringList
        getAllowedDenomsList() {
      allowedDenoms_.makeImmutable();
      return allowedDenoms_;
    }
    /**
     * <pre>
     * allowed_denoms defines the list of denoms that are allowed to be paid to
     * the contract withdraw addresses. If said denom is not in the list, the fees
     * will ONLY be sent to the community pool.
     * If this list is empty, all denoms are allowed.
     * </pre>
     *
     * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
     * @return The count of allowedDenoms.
     */
    public int getAllowedDenomsCount() {
      return allowedDenoms_.size();
    }
    /**
     * <pre>
     * allowed_denoms defines the list of denoms that are allowed to be paid to
     * the contract withdraw addresses. If said denom is not in the list, the fees
     * will ONLY be sent to the community pool.
     * If this list is empty, all denoms are allowed.
     * </pre>
     *
     * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
     * @param index The index of the element to return.
     * @return The allowedDenoms at the given index.
     */
    public java.lang.String getAllowedDenoms(int index) {
      return allowedDenoms_.get(index);
    }
    /**
     * <pre>
     * allowed_denoms defines the list of denoms that are allowed to be paid to
     * the contract withdraw addresses. If said denom is not in the list, the fees
     * will ONLY be sent to the community pool.
     * If this list is empty, all denoms are allowed.
     * </pre>
     *
     * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the allowedDenoms at the given index.
     */
    public com.google.protobuf.ByteString
        getAllowedDenomsBytes(int index) {
      return allowedDenoms_.getByteString(index);
    }
    /**
     * <pre>
     * allowed_denoms defines the list of denoms that are allowed to be paid to
     * the contract withdraw addresses. If said denom is not in the list, the fees
     * will ONLY be sent to the community pool.
     * If this list is empty, all denoms are allowed.
     * </pre>
     *
     * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
     * @param index The index to set the value at.
     * @param value The allowedDenoms to set.
     * @return This builder for chaining.
     */
    public Builder setAllowedDenoms(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureAllowedDenomsIsMutable();
      allowedDenoms_.set(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * allowed_denoms defines the list of denoms that are allowed to be paid to
     * the contract withdraw addresses. If said denom is not in the list, the fees
     * will ONLY be sent to the community pool.
     * If this list is empty, all denoms are allowed.
     * </pre>
     *
     * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
     * @param value The allowedDenoms to add.
     * @return This builder for chaining.
     */
    public Builder addAllowedDenoms(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureAllowedDenomsIsMutable();
      allowedDenoms_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * allowed_denoms defines the list of denoms that are allowed to be paid to
     * the contract withdraw addresses. If said denom is not in the list, the fees
     * will ONLY be sent to the community pool.
     * If this list is empty, all denoms are allowed.
     * </pre>
     *
     * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
     * @param values The allowedDenoms to add.
     * @return This builder for chaining.
     */
    public Builder addAllAllowedDenoms(
        java.lang.Iterable<java.lang.String> values) {
      ensureAllowedDenomsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, allowedDenoms_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * allowed_denoms defines the list of denoms that are allowed to be paid to
     * the contract withdraw addresses. If said denom is not in the list, the fees
     * will ONLY be sent to the community pool.
     * If this list is empty, all denoms are allowed.
     * </pre>
     *
     * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowedDenoms() {
      allowedDenoms_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * allowed_denoms defines the list of denoms that are allowed to be paid to
     * the contract withdraw addresses. If said denom is not in the list, the fees
     * will ONLY be sent to the community pool.
     * If this list is empty, all denoms are allowed.
     * </pre>
     *
     * <code>repeated string allowed_denoms = 3 [json_name = "allowedDenoms"];</code>
     * @param value The bytes of the allowedDenoms to add.
     * @return This builder for chaining.
     */
    public Builder addAllowedDenomsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureAllowedDenomsIsMutable();
      allowedDenoms_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:juno.feeshare.v1.Params)
  }

  // @@protoc_insertion_point(class_scope:juno.feeshare.v1.Params)
  private static final com.juno.feeshare.v1.Params DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.juno.feeshare.v1.Params();
  }

  public static com.juno.feeshare.v1.Params getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Params>
      PARSER = new com.google.protobuf.AbstractParser<Params>() {
    @java.lang.Override
    public Params parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Params> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Params> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.juno.feeshare.v1.Params getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


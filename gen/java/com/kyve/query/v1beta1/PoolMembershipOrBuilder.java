// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyve/query/v1beta1/query.proto

package com.kyve.query.v1beta1;

public interface PoolMembershipOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kyve.query.v1beta1.PoolMembership)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * pool contains useful information about the pool
   * </pre>
   *
   * <code>.kyve.query.v1beta1.BasicPool pool = 1 [json_name = "pool"];</code>
   * @return Whether the pool field is set.
   */
  boolean hasPool();
  /**
   * <pre>
   * pool contains useful information about the pool
   * </pre>
   *
   * <code>.kyve.query.v1beta1.BasicPool pool = 1 [json_name = "pool"];</code>
   * @return The pool.
   */
  com.kyve.query.v1beta1.BasicPool getPool();
  /**
   * <pre>
   * pool contains useful information about the pool
   * </pre>
   *
   * <code>.kyve.query.v1beta1.BasicPool pool = 1 [json_name = "pool"];</code>
   */
  com.kyve.query.v1beta1.BasicPoolOrBuilder getPoolOrBuilder();

  /**
   * <pre>
   * points indicates if the staker is inactive
   * If the staker misses a vote, a point is added.
   * After 5 points the staker is removed from
   * the stakers set.
   * </pre>
   *
   * <code>uint64 points = 2 [json_name = "points"];</code>
   * @return The points.
   */
  long getPoints();

  /**
   * <pre>
   * is_leaving indicates if a user has scheduled a
   * a PoolLeave entry. After the leave-time is over
   * the staker will no longer participate in that pool
   * </pre>
   *
   * <code>bool is_leaving = 3 [json_name = "isLeaving"];</code>
   * @return The isLeaving.
   */
  boolean getIsLeaving();

  /**
   * <pre>
   * Valaddress is the address which is authorized to vote
   * and submit bundles. If the server gets compromised
   * the staker can just change the valaddress.
   * </pre>
   *
   * <code>string valaddress = 4 [json_name = "valaddress"];</code>
   * @return The valaddress.
   */
  java.lang.String getValaddress();
  /**
   * <pre>
   * Valaddress is the address which is authorized to vote
   * and submit bundles. If the server gets compromised
   * the staker can just change the valaddress.
   * </pre>
   *
   * <code>string valaddress = 4 [json_name = "valaddress"];</code>
   * @return The bytes for valaddress.
   */
  com.google.protobuf.ByteString
      getValaddressBytes();

  /**
   * <pre>
   * balance is the valaddress account balance and indicates
   * whether or not the valaccount needs additional funds to
   * pay for gas fees
   * </pre>
   *
   * <code>uint64 balance = 5 [json_name = "balance"];</code>
   * @return The balance.
   */
  long getBalance();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyve/pool/v1beta1/pool.proto

package com.kyve.pool.v1beta1;

public interface UpgradePlanOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kyve.pool.v1beta1.UpgradePlan)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * version is the new software version tag of the upgrade
   * </pre>
   *
   * <code>string version = 1 [json_name = "version"];</code>
   * @return The version.
   */
  java.lang.String getVersion();
  /**
   * <pre>
   * version is the new software version tag of the upgrade
   * </pre>
   *
   * <code>string version = 1 [json_name = "version"];</code>
   * @return The bytes for version.
   */
  com.google.protobuf.ByteString
      getVersionBytes();

  /**
   * <pre>
   * binaries is the new stringified json object which holds binaries in the
   * upgrade version for multiple platforms and architectures
   * </pre>
   *
   * <code>string binaries = 2 [json_name = "binaries"];</code>
   * @return The binaries.
   */
  java.lang.String getBinaries();
  /**
   * <pre>
   * binaries is the new stringified json object which holds binaries in the
   * upgrade version for multiple platforms and architectures
   * </pre>
   *
   * <code>string binaries = 2 [json_name = "binaries"];</code>
   * @return The bytes for binaries.
   */
  com.google.protobuf.ByteString
      getBinariesBytes();

  /**
   * <pre>
   * scheduled_at is the unix time the upgrade is supposed to be done
   * </pre>
   *
   * <code>uint64 scheduled_at = 3 [json_name = "scheduledAt"];</code>
   * @return The scheduledAt.
   */
  long getScheduledAt();

  /**
   * <pre>
   * duration is the time in seconds how long the pool should halt
   * during the upgrade to give all validators a chance of switching
   * to the new binaries
   * </pre>
   *
   * <code>uint64 duration = 4 [json_name = "duration"];</code>
   * @return The duration.
   */
  long getDuration();
}

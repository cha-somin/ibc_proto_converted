// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyve/pool/v1beta1/pool.proto

package com.kyve.pool.v1beta1;

public interface PoolOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kyve.pool.v1beta1.Pool)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * id - unique identifier of the pool, can not be changed
   * </pre>
   *
   * <code>uint64 id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  long getId();

  /**
   * <pre>
   * name is a human readable name for the pool
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * name is a human readable name for the pool
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * runtime specified which protocol and which version needs is required
   * </pre>
   *
   * <code>string runtime = 3 [json_name = "runtime"];</code>
   * @return The runtime.
   */
  java.lang.String getRuntime();
  /**
   * <pre>
   * runtime specified which protocol and which version needs is required
   * </pre>
   *
   * <code>string runtime = 3 [json_name = "runtime"];</code>
   * @return The bytes for runtime.
   */
  com.google.protobuf.ByteString
      getRuntimeBytes();

  /**
   * <pre>
   * logo is a link to an image file
   * </pre>
   *
   * <code>string logo = 4 [json_name = "logo"];</code>
   * @return The logo.
   */
  java.lang.String getLogo();
  /**
   * <pre>
   * logo is a link to an image file
   * </pre>
   *
   * <code>string logo = 4 [json_name = "logo"];</code>
   * @return The bytes for logo.
   */
  com.google.protobuf.ByteString
      getLogoBytes();

  /**
   * <pre>
   * config is either a JSON encoded string or a link to an external storage provider.
   * This is up to the implementation of the protocol node.
   * </pre>
   *
   * <code>string config = 5 [json_name = "config"];</code>
   * @return The config.
   */
  java.lang.String getConfig();
  /**
   * <pre>
   * config is either a JSON encoded string or a link to an external storage provider.
   * This is up to the implementation of the protocol node.
   * </pre>
   *
   * <code>string config = 5 [json_name = "config"];</code>
   * @return The bytes for config.
   */
  com.google.protobuf.ByteString
      getConfigBytes();

  /**
   * <pre>
   * start_key ...
   * </pre>
   *
   * <code>string start_key = 6 [json_name = "startKey"];</code>
   * @return The startKey.
   */
  java.lang.String getStartKey();
  /**
   * <pre>
   * start_key ...
   * </pre>
   *
   * <code>string start_key = 6 [json_name = "startKey"];</code>
   * @return The bytes for startKey.
   */
  com.google.protobuf.ByteString
      getStartKeyBytes();

  /**
   * <pre>
   * current_key ...
   * </pre>
   *
   * <code>string current_key = 7 [json_name = "currentKey"];</code>
   * @return The currentKey.
   */
  java.lang.String getCurrentKey();
  /**
   * <pre>
   * current_key ...
   * </pre>
   *
   * <code>string current_key = 7 [json_name = "currentKey"];</code>
   * @return The bytes for currentKey.
   */
  com.google.protobuf.ByteString
      getCurrentKeyBytes();

  /**
   * <pre>
   * current_summary ...
   * </pre>
   *
   * <code>string current_summary = 8 [json_name = "currentSummary"];</code>
   * @return The currentSummary.
   */
  java.lang.String getCurrentSummary();
  /**
   * <pre>
   * current_summary ...
   * </pre>
   *
   * <code>string current_summary = 8 [json_name = "currentSummary"];</code>
   * @return The bytes for currentSummary.
   */
  com.google.protobuf.ByteString
      getCurrentSummaryBytes();

  /**
   * <pre>
   * current_index ...
   * </pre>
   *
   * <code>uint64 current_index = 9 [json_name = "currentIndex"];</code>
   * @return The currentIndex.
   */
  long getCurrentIndex();

  /**
   * <pre>
   * total_bundles is the number of total finalized bundles
   * </pre>
   *
   * <code>uint64 total_bundles = 10 [json_name = "totalBundles"];</code>
   * @return The totalBundles.
   */
  long getTotalBundles();

  /**
   * <pre>
   * upload_interval ...
   * </pre>
   *
   * <code>uint64 upload_interval = 11 [json_name = "uploadInterval"];</code>
   * @return The uploadInterval.
   */
  long getUploadInterval();

  /**
   * <pre>
   * operating_cost ...
   * </pre>
   *
   * <code>uint64 operating_cost = 12 [json_name = "operatingCost"];</code>
   * @return The operatingCost.
   */
  long getOperatingCost();

  /**
   * <pre>
   * min_delegation ...
   * </pre>
   *
   * <code>uint64 min_delegation = 13 [json_name = "minDelegation"];</code>
   * @return The minDelegation.
   */
  long getMinDelegation();

  /**
   * <pre>
   * max_bundle_size ...
   * </pre>
   *
   * <code>uint64 max_bundle_size = 14 [json_name = "maxBundleSize"];</code>
   * @return The maxBundleSize.
   */
  long getMaxBundleSize();

  /**
   * <pre>
   * disabled is true when the pool is disabled.
   * Can only be done via governance.
   * </pre>
   *
   * <code>bool disabled = 15 [json_name = "disabled"];</code>
   * @return The disabled.
   */
  boolean getDisabled();

  /**
   * <pre>
   * funders ...
   * </pre>
   *
   * <code>repeated .kyve.pool.v1beta1.Funder funders = 16 [json_name = "funders"];</code>
   */
  java.util.List<com.kyve.pool.v1beta1.Funder> 
      getFundersList();
  /**
   * <pre>
   * funders ...
   * </pre>
   *
   * <code>repeated .kyve.pool.v1beta1.Funder funders = 16 [json_name = "funders"];</code>
   */
  com.kyve.pool.v1beta1.Funder getFunders(int index);
  /**
   * <pre>
   * funders ...
   * </pre>
   *
   * <code>repeated .kyve.pool.v1beta1.Funder funders = 16 [json_name = "funders"];</code>
   */
  int getFundersCount();
  /**
   * <pre>
   * funders ...
   * </pre>
   *
   * <code>repeated .kyve.pool.v1beta1.Funder funders = 16 [json_name = "funders"];</code>
   */
  java.util.List<? extends com.kyve.pool.v1beta1.FunderOrBuilder> 
      getFundersOrBuilderList();
  /**
   * <pre>
   * funders ...
   * </pre>
   *
   * <code>repeated .kyve.pool.v1beta1.Funder funders = 16 [json_name = "funders"];</code>
   */
  com.kyve.pool.v1beta1.FunderOrBuilder getFundersOrBuilder(
      int index);

  /**
   * <pre>
   * total_funds ...
   * </pre>
   *
   * <code>uint64 total_funds = 17 [json_name = "totalFunds"];</code>
   * @return The totalFunds.
   */
  long getTotalFunds();

  /**
   * <pre>
   * protocol ...
   * </pre>
   *
   * <code>.kyve.pool.v1beta1.Protocol protocol = 18 [json_name = "protocol"];</code>
   * @return Whether the protocol field is set.
   */
  boolean hasProtocol();
  /**
   * <pre>
   * protocol ...
   * </pre>
   *
   * <code>.kyve.pool.v1beta1.Protocol protocol = 18 [json_name = "protocol"];</code>
   * @return The protocol.
   */
  com.kyve.pool.v1beta1.Protocol getProtocol();
  /**
   * <pre>
   * protocol ...
   * </pre>
   *
   * <code>.kyve.pool.v1beta1.Protocol protocol = 18 [json_name = "protocol"];</code>
   */
  com.kyve.pool.v1beta1.ProtocolOrBuilder getProtocolOrBuilder();

  /**
   * <pre>
   * upgrade_plan ...
   * </pre>
   *
   * <code>.kyve.pool.v1beta1.UpgradePlan upgrade_plan = 19 [json_name = "upgradePlan"];</code>
   * @return Whether the upgradePlan field is set.
   */
  boolean hasUpgradePlan();
  /**
   * <pre>
   * upgrade_plan ...
   * </pre>
   *
   * <code>.kyve.pool.v1beta1.UpgradePlan upgrade_plan = 19 [json_name = "upgradePlan"];</code>
   * @return The upgradePlan.
   */
  com.kyve.pool.v1beta1.UpgradePlan getUpgradePlan();
  /**
   * <pre>
   * upgrade_plan ...
   * </pre>
   *
   * <code>.kyve.pool.v1beta1.UpgradePlan upgrade_plan = 19 [json_name = "upgradePlan"];</code>
   */
  com.kyve.pool.v1beta1.UpgradePlanOrBuilder getUpgradePlanOrBuilder();

  /**
   * <pre>
   * storage_provider_id ...
   * </pre>
   *
   * <code>uint32 current_storage_provider_id = 20 [json_name = "currentStorageProviderId"];</code>
   * @return The currentStorageProviderId.
   */
  int getCurrentStorageProviderId();

  /**
   * <pre>
   * compression_id ...
   * </pre>
   *
   * <code>uint32 current_compression_id = 21 [json_name = "currentCompressionId"];</code>
   * @return The currentCompressionId.
   */
  int getCurrentCompressionId();
}

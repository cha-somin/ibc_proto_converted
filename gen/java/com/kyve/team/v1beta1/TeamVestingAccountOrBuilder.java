// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyve/team/v1beta1/team.proto

package com.kyve.team.v1beta1;

public interface TeamVestingAccountOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kyve.team.v1beta1.TeamVestingAccount)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * id is a unique identify for each vesting account, tied to a single team member.
   * </pre>
   *
   * <code>uint64 id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  long getId();

  /**
   * <pre>
   * total_allocation is the number of tokens reserved for this team member.
   * </pre>
   *
   * <code>uint64 total_allocation = 2 [json_name = "totalAllocation"];</code>
   * @return The totalAllocation.
   */
  long getTotalAllocation();

  /**
   * <pre>
   * commencement is the unix timestamp of the member's official start date in seconds
   * </pre>
   *
   * <code>uint64 commencement = 3 [json_name = "commencement"];</code>
   * @return The commencement.
   */
  long getCommencement();

  /**
   * <pre>
   * clawback is a unix timestamp of a clawback in seconds. If timestamp is zero
   * it means that the account has not received a clawback
   * </pre>
   *
   * <code>uint64 clawback = 4 [json_name = "clawback"];</code>
   * @return The clawback.
   */
  long getClawback();

  /**
   * <pre>
   * unlocked_claimed is the amount of $KYVE already claimed by the account holder
   * </pre>
   *
   * <code>uint64 unlocked_claimed = 5 [json_name = "unlockedClaimed"];</code>
   * @return The unlockedClaimed.
   */
  long getUnlockedClaimed();

  /**
   * <pre>
   * the last time the unlocked amount was claimed
   * </pre>
   *
   * <code>uint64 last_claimed_time = 6 [json_name = "lastClaimedTime"];</code>
   * @return The lastClaimedTime.
   */
  long getLastClaimedTime();

  /**
   * <pre>
   * total rewards is the total amount of rewards the account has received ever
   * </pre>
   *
   * <code>uint64 total_rewards = 7 [json_name = "totalRewards"];</code>
   * @return The totalRewards.
   */
  long getTotalRewards();

  /**
   * <pre>
   * rewards claimed is the amount inflation rewards claimed by account holder
   * </pre>
   *
   * <code>uint64 rewards_claimed = 8 [json_name = "rewardsClaimed"];</code>
   * @return The rewardsClaimed.
   */
  long getRewardsClaimed();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyve/delegation/v1beta1/delegation.proto

package com.kyve.delegation.v1beta1;

public interface DelegatorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kyve.delegation.v1beta1.Delegator)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * staker corresponds to a KYVE-staker on the protocol-side
   * </pre>
   *
   * <code>string staker = 1 [json_name = "staker"];</code>
   * @return The staker.
   */
  java.lang.String getStaker();
  /**
   * <pre>
   * staker corresponds to a KYVE-staker on the protocol-side
   * </pre>
   *
   * <code>string staker = 1 [json_name = "staker"];</code>
   * @return The bytes for staker.
   */
  com.google.protobuf.ByteString
      getStakerBytes();

  /**
   * <pre>
   * delegator the user who delegate to the staker.
   * If staker and delegator are the same we call it: self-delegation
   * </pre>
   *
   * <code>string delegator = 2 [json_name = "delegator"];</code>
   * @return The delegator.
   */
  java.lang.String getDelegator();
  /**
   * <pre>
   * delegator the user who delegate to the staker.
   * If staker and delegator are the same we call it: self-delegation
   * </pre>
   *
   * <code>string delegator = 2 [json_name = "delegator"];</code>
   * @return The bytes for delegator.
   */
  com.google.protobuf.ByteString
      getDelegatorBytes();

  /**
   * <pre>
   * k_index is an internal index for the f1-distribution algorithm
   * </pre>
   *
   * <code>uint64 k_index = 3 [json_name = "kIndex"];</code>
   * @return The kIndex.
   */
  long getKIndex();

  /**
   * <pre>
   * initial_amount of stake the user had when it delegated.
   * slashes can cause that the actual stake is lower.
   * </pre>
   *
   * <code>uint64 initial_amount = 4 [json_name = "initialAmount"];</code>
   * @return The initialAmount.
   */
  long getInitialAmount();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyve/bundles/v1beta1/events.proto

package com.kyve.bundles.v1beta1;

public interface EventBundleFinalizedOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kyve.bundles.v1beta1.EventBundleFinalized)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * pool_id is the unique ID of the pool.
   * </pre>
   *
   * <code>uint64 pool_id = 1 [json_name = "poolId"];</code>
   * @return The poolId.
   */
  long getPoolId();

  /**
   * <pre>
   * internal id for the KYVE-bundle
   * </pre>
   *
   * <code>uint64 id = 2 [json_name = "id"];</code>
   * @return The id.
   */
  long getId();

  /**
   * <pre>
   * total voting power which voted for valid
   * </pre>
   *
   * <code>uint64 valid = 3 [json_name = "valid"];</code>
   * @return The valid.
   */
  long getValid();

  /**
   * <pre>
   * total voting power which voted for invalid
   * </pre>
   *
   * <code>uint64 invalid = 4 [json_name = "invalid"];</code>
   * @return The invalid.
   */
  long getInvalid();

  /**
   * <pre>
   * total voting power which voted for abstain
   * </pre>
   *
   * <code>uint64 abstain = 5 [json_name = "abstain"];</code>
   * @return The abstain.
   */
  long getAbstain();

  /**
   * <pre>
   * total voting power of the pool
   * </pre>
   *
   * <code>uint64 total = 6 [json_name = "total"];</code>
   * @return The total.
   */
  long getTotal();

  /**
   * <pre>
   * status of the finalized bundle
   * </pre>
   *
   * <code>.kyve.bundles.v1beta1.BundleStatus status = 7 [json_name = "status"];</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <pre>
   * status of the finalized bundle
   * </pre>
   *
   * <code>.kyve.bundles.v1beta1.BundleStatus status = 7 [json_name = "status"];</code>
   * @return The status.
   */
  com.kyve.bundles.v1beta1.BundleStatus getStatus();

  /**
   * <pre>
   * rewards transferred to treasury (in ukyve)
   * </pre>
   *
   * <code>uint64 reward_treasury = 8 [json_name = "rewardTreasury"];</code>
   * @return The rewardTreasury.
   */
  long getRewardTreasury();

  /**
   * <pre>
   * rewardUploader rewards directly transferred to uploader (in ukyve)
   * </pre>
   *
   * <code>uint64 reward_uploader = 9 [json_name = "rewardUploader"];</code>
   * @return The rewardUploader.
   */
  long getRewardUploader();

  /**
   * <pre>
   * rewardDelegation rewards distributed among all delegators (in ukyve)
   * </pre>
   *
   * <code>uint64 reward_delegation = 10 [json_name = "rewardDelegation"];</code>
   * @return The rewardDelegation.
   */
  long getRewardDelegation();

  /**
   * <pre>
   * rewardTotal the total bundle reward
   * </pre>
   *
   * <code>uint64 reward_total = 11 [json_name = "rewardTotal"];</code>
   * @return The rewardTotal.
   */
  long getRewardTotal();

  /**
   * <pre>
   * finalized_at the block height where the bundle got finalized
   * </pre>
   *
   * <code>uint64 finalized_at = 12 [json_name = "finalizedAt"];</code>
   * @return The finalizedAt.
   */
  long getFinalizedAt();

  /**
   * <pre>
   * uploader the address of the uploader of this bundle
   * </pre>
   *
   * <code>string uploader = 13 [json_name = "uploader"];</code>
   * @return The uploader.
   */
  java.lang.String getUploader();
  /**
   * <pre>
   * uploader the address of the uploader of this bundle
   * </pre>
   *
   * <code>string uploader = 13 [json_name = "uploader"];</code>
   * @return The bytes for uploader.
   */
  com.google.protobuf.ByteString
      getUploaderBytes();

  /**
   * <pre>
   * next_uploader the address of the next uploader after this bundle
   * </pre>
   *
   * <code>string next_uploader = 14 [json_name = "nextUploader"];</code>
   * @return The nextUploader.
   */
  java.lang.String getNextUploader();
  /**
   * <pre>
   * next_uploader the address of the next uploader after this bundle
   * </pre>
   *
   * <code>string next_uploader = 14 [json_name = "nextUploader"];</code>
   * @return The bytes for nextUploader.
   */
  com.google.protobuf.ByteString
      getNextUploaderBytes();
}

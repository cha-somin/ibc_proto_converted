// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyve/global/v1beta1/global.proto

package com.kyve.global.v1beta1;

public interface ParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kyve.global.v1beta1.Params)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * min_gas_price defines the minimum gas price value for all transactions.
   * </pre>
   *
   * <code>string min_gas_price = 1 [json_name = "minGasPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The minGasPrice.
   */
  java.lang.String getMinGasPrice();
  /**
   * <pre>
   * min_gas_price defines the minimum gas price value for all transactions.
   * </pre>
   *
   * <code>string min_gas_price = 1 [json_name = "minGasPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for minGasPrice.
   */
  com.google.protobuf.ByteString
      getMinGasPriceBytes();

  /**
   * <pre>
   * burn_ratio defines the ratio of transaction fees burnt.
   * </pre>
   *
   * <code>string burn_ratio = 2 [json_name = "burnRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The burnRatio.
   */
  java.lang.String getBurnRatio();
  /**
   * <pre>
   * burn_ratio defines the ratio of transaction fees burnt.
   * </pre>
   *
   * <code>string burn_ratio = 2 [json_name = "burnRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for burnRatio.
   */
  com.google.protobuf.ByteString
      getBurnRatioBytes();

  /**
   * <pre>
   * gas_adjustments can add a constant amount of gas to a specific message type.
   * This gives more control to make certain messages more expensive to avoid spamming
   * of certain types of messages.
   * </pre>
   *
   * <code>repeated .kyve.global.v1beta1.GasAdjustment gas_adjustments = 3 [json_name = "gasAdjustments", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<com.kyve.global.v1beta1.GasAdjustment> 
      getGasAdjustmentsList();
  /**
   * <pre>
   * gas_adjustments can add a constant amount of gas to a specific message type.
   * This gives more control to make certain messages more expensive to avoid spamming
   * of certain types of messages.
   * </pre>
   *
   * <code>repeated .kyve.global.v1beta1.GasAdjustment gas_adjustments = 3 [json_name = "gasAdjustments", (.gogoproto.nullable) = false];</code>
   */
  com.kyve.global.v1beta1.GasAdjustment getGasAdjustments(int index);
  /**
   * <pre>
   * gas_adjustments can add a constant amount of gas to a specific message type.
   * This gives more control to make certain messages more expensive to avoid spamming
   * of certain types of messages.
   * </pre>
   *
   * <code>repeated .kyve.global.v1beta1.GasAdjustment gas_adjustments = 3 [json_name = "gasAdjustments", (.gogoproto.nullable) = false];</code>
   */
  int getGasAdjustmentsCount();
  /**
   * <pre>
   * gas_adjustments can add a constant amount of gas to a specific message type.
   * This gives more control to make certain messages more expensive to avoid spamming
   * of certain types of messages.
   * </pre>
   *
   * <code>repeated .kyve.global.v1beta1.GasAdjustment gas_adjustments = 3 [json_name = "gasAdjustments", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<? extends com.kyve.global.v1beta1.GasAdjustmentOrBuilder> 
      getGasAdjustmentsOrBuilderList();
  /**
   * <pre>
   * gas_adjustments can add a constant amount of gas to a specific message type.
   * This gives more control to make certain messages more expensive to avoid spamming
   * of certain types of messages.
   * </pre>
   *
   * <code>repeated .kyve.global.v1beta1.GasAdjustment gas_adjustments = 3 [json_name = "gasAdjustments", (.gogoproto.nullable) = false];</code>
   */
  com.kyve.global.v1beta1.GasAdjustmentOrBuilder getGasAdjustmentsOrBuilder(
      int index);

  /**
   * <pre>
   * gas_refunds lets the governance specify a fraction of how much gas
   * a user gets refunded for a certain type of transaction.
   * This could be used to make transactions which support to network cheaper.
   * Gas refunds only work if the transaction only included one message.
   * </pre>
   *
   * <code>repeated .kyve.global.v1beta1.GasRefund gas_refunds = 4 [json_name = "gasRefunds", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<com.kyve.global.v1beta1.GasRefund> 
      getGasRefundsList();
  /**
   * <pre>
   * gas_refunds lets the governance specify a fraction of how much gas
   * a user gets refunded for a certain type of transaction.
   * This could be used to make transactions which support to network cheaper.
   * Gas refunds only work if the transaction only included one message.
   * </pre>
   *
   * <code>repeated .kyve.global.v1beta1.GasRefund gas_refunds = 4 [json_name = "gasRefunds", (.gogoproto.nullable) = false];</code>
   */
  com.kyve.global.v1beta1.GasRefund getGasRefunds(int index);
  /**
   * <pre>
   * gas_refunds lets the governance specify a fraction of how much gas
   * a user gets refunded for a certain type of transaction.
   * This could be used to make transactions which support to network cheaper.
   * Gas refunds only work if the transaction only included one message.
   * </pre>
   *
   * <code>repeated .kyve.global.v1beta1.GasRefund gas_refunds = 4 [json_name = "gasRefunds", (.gogoproto.nullable) = false];</code>
   */
  int getGasRefundsCount();
  /**
   * <pre>
   * gas_refunds lets the governance specify a fraction of how much gas
   * a user gets refunded for a certain type of transaction.
   * This could be used to make transactions which support to network cheaper.
   * Gas refunds only work if the transaction only included one message.
   * </pre>
   *
   * <code>repeated .kyve.global.v1beta1.GasRefund gas_refunds = 4 [json_name = "gasRefunds", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<? extends com.kyve.global.v1beta1.GasRefundOrBuilder> 
      getGasRefundsOrBuilderList();
  /**
   * <pre>
   * gas_refunds lets the governance specify a fraction of how much gas
   * a user gets refunded for a certain type of transaction.
   * This could be used to make transactions which support to network cheaper.
   * Gas refunds only work if the transaction only included one message.
   * </pre>
   *
   * <code>repeated .kyve.global.v1beta1.GasRefund gas_refunds = 4 [json_name = "gasRefunds", (.gogoproto.nullable) = false];</code>
   */
  com.kyve.global.v1beta1.GasRefundOrBuilder getGasRefundsOrBuilder(
      int index);

  /**
   * <pre>
   * min_initial_deposit_ratio sets a minimum fraction of initial deposit for a
   * governance proposal. This is used to avoid spamming of proposals and
   * polluting the proposals page.
   * </pre>
   *
   * <code>string min_initial_deposit_ratio = 5 [json_name = "minInitialDepositRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The minInitialDepositRatio.
   */
  java.lang.String getMinInitialDepositRatio();
  /**
   * <pre>
   * min_initial_deposit_ratio sets a minimum fraction of initial deposit for a
   * governance proposal. This is used to avoid spamming of proposals and
   * polluting the proposals page.
   * </pre>
   *
   * <code>string min_initial_deposit_ratio = 5 [json_name = "minInitialDepositRatio", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
   * @return The bytes for minInitialDepositRatio.
   */
  com.google.protobuf.ByteString
      getMinInitialDepositRatioBytes();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/p8e/p8e.proto

package com.provenance.metadata.v1.p8e;

@java.lang.Deprecated public interface SignatureOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.metadata.v1.p8e.Signature)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string algo = 1 [json_name = "algo"];</code>
   * @return The algo.
   */
  java.lang.String getAlgo();
  /**
   * <code>string algo = 1 [json_name = "algo"];</code>
   * @return The bytes for algo.
   */
  com.google.protobuf.ByteString
      getAlgoBytes();

  /**
   * <code>string provider = 2 [json_name = "provider"];</code>
   * @return The provider.
   */
  java.lang.String getProvider();
  /**
   * <code>string provider = 2 [json_name = "provider"];</code>
   * @return The bytes for provider.
   */
  com.google.protobuf.ByteString
      getProviderBytes();

  /**
   * <code>string signature = 3 [json_name = "signature"];</code>
   * @return The signature.
   */
  java.lang.String getSignature();
  /**
   * <code>string signature = 3 [json_name = "signature"];</code>
   * @return The bytes for signature.
   */
  com.google.protobuf.ByteString
      getSignatureBytes();

  /**
   * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
   * @return Whether the signer field is set.
   */
  boolean hasSigner();
  /**
   * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
   * @return The signer.
   */
  com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys getSigner();
  /**
   * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
   */
  com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeysOrBuilder getSignerOrBuilder();
}

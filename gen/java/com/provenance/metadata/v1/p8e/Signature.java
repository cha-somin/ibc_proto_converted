// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/p8e/p8e.proto

package com.provenance.metadata.v1.p8e;

/**
 * <pre>
 * Deprecated: Do not use.
 * </pre>
 *
 * Protobuf type {@code provenance.metadata.v1.p8e.Signature}
 */
@java.lang.Deprecated public final class Signature extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:provenance.metadata.v1.p8e.Signature)
    SignatureOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Signature.newBuilder() to construct.
  private Signature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Signature() {
    algo_ = "";
    provider_ = "";
    signature_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Signature();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.provenance.metadata.v1.p8e.P8eProto.internal_static_provenance_metadata_v1_p8e_Signature_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.provenance.metadata.v1.p8e.P8eProto.internal_static_provenance_metadata_v1_p8e_Signature_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.provenance.metadata.v1.p8e.Signature.class, com.provenance.metadata.v1.p8e.Signature.Builder.class);
  }

  public static final int ALGO_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object algo_ = "";
  /**
   * <code>string algo = 1 [json_name = "algo"];</code>
   * @return The algo.
   */
  @java.lang.Override
  public java.lang.String getAlgo() {
    java.lang.Object ref = algo_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      algo_ = s;
      return s;
    }
  }
  /**
   * <code>string algo = 1 [json_name = "algo"];</code>
   * @return The bytes for algo.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAlgoBytes() {
    java.lang.Object ref = algo_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      algo_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROVIDER_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object provider_ = "";
  /**
   * <code>string provider = 2 [json_name = "provider"];</code>
   * @return The provider.
   */
  @java.lang.Override
  public java.lang.String getProvider() {
    java.lang.Object ref = provider_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      provider_ = s;
      return s;
    }
  }
  /**
   * <code>string provider = 2 [json_name = "provider"];</code>
   * @return The bytes for provider.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getProviderBytes() {
    java.lang.Object ref = provider_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      provider_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SIGNATURE_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object signature_ = "";
  /**
   * <code>string signature = 3 [json_name = "signature"];</code>
   * @return The signature.
   */
  @java.lang.Override
  public java.lang.String getSignature() {
    java.lang.Object ref = signature_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      signature_ = s;
      return s;
    }
  }
  /**
   * <code>string signature = 3 [json_name = "signature"];</code>
   * @return The bytes for signature.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSignatureBytes() {
    java.lang.Object ref = signature_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      signature_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SIGNER_FIELD_NUMBER = 4;
  private com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer_;
  /**
   * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
   * @return Whether the signer field is set.
   */
  @java.lang.Override
  public boolean hasSigner() {
    return signer_ != null;
  }
  /**
   * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
   * @return The signer.
   */
  @java.lang.Override
  public com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys getSigner() {
    return signer_ == null ? com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys.getDefaultInstance() : signer_;
  }
  /**
   * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
   */
  @java.lang.Override
  public com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeysOrBuilder getSignerOrBuilder() {
    return signer_ == null ? com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys.getDefaultInstance() : signer_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(algo_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, algo_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(provider_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, provider_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(signature_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, signature_);
    }
    if (signer_ != null) {
      output.writeMessage(4, getSigner());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(algo_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, algo_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(provider_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, provider_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(signature_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, signature_);
    }
    if (signer_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getSigner());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.provenance.metadata.v1.p8e.Signature)) {
      return super.equals(obj);
    }
    com.provenance.metadata.v1.p8e.Signature other = (com.provenance.metadata.v1.p8e.Signature) obj;

    if (!getAlgo()
        .equals(other.getAlgo())) return false;
    if (!getProvider()
        .equals(other.getProvider())) return false;
    if (!getSignature()
        .equals(other.getSignature())) return false;
    if (hasSigner() != other.hasSigner()) return false;
    if (hasSigner()) {
      if (!getSigner()
          .equals(other.getSigner())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ALGO_FIELD_NUMBER;
    hash = (53 * hash) + getAlgo().hashCode();
    hash = (37 * hash) + PROVIDER_FIELD_NUMBER;
    hash = (53 * hash) + getProvider().hashCode();
    hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
    hash = (53 * hash) + getSignature().hashCode();
    if (hasSigner()) {
      hash = (37 * hash) + SIGNER_FIELD_NUMBER;
      hash = (53 * hash) + getSigner().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.provenance.metadata.v1.p8e.Signature parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.provenance.metadata.v1.p8e.Signature parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.provenance.metadata.v1.p8e.Signature parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.provenance.metadata.v1.p8e.Signature parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.provenance.metadata.v1.p8e.Signature parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.provenance.metadata.v1.p8e.Signature parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.provenance.metadata.v1.p8e.Signature parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.provenance.metadata.v1.p8e.Signature parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.provenance.metadata.v1.p8e.Signature parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.provenance.metadata.v1.p8e.Signature parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.provenance.metadata.v1.p8e.Signature parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.provenance.metadata.v1.p8e.Signature parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.provenance.metadata.v1.p8e.Signature prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Deprecated: Do not use.
   * </pre>
   *
   * Protobuf type {@code provenance.metadata.v1.p8e.Signature}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:provenance.metadata.v1.p8e.Signature)
      com.provenance.metadata.v1.p8e.SignatureOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.provenance.metadata.v1.p8e.P8eProto.internal_static_provenance_metadata_v1_p8e_Signature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.provenance.metadata.v1.p8e.P8eProto.internal_static_provenance_metadata_v1_p8e_Signature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.provenance.metadata.v1.p8e.Signature.class, com.provenance.metadata.v1.p8e.Signature.Builder.class);
    }

    // Construct using com.provenance.metadata.v1.p8e.Signature.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      algo_ = "";
      provider_ = "";
      signature_ = "";
      signer_ = null;
      if (signerBuilder_ != null) {
        signerBuilder_.dispose();
        signerBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.provenance.metadata.v1.p8e.P8eProto.internal_static_provenance_metadata_v1_p8e_Signature_descriptor;
    }

    @java.lang.Override
    public com.provenance.metadata.v1.p8e.Signature getDefaultInstanceForType() {
      return com.provenance.metadata.v1.p8e.Signature.getDefaultInstance();
    }

    @java.lang.Override
    public com.provenance.metadata.v1.p8e.Signature build() {
      com.provenance.metadata.v1.p8e.Signature result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.provenance.metadata.v1.p8e.Signature buildPartial() {
      com.provenance.metadata.v1.p8e.Signature result = new com.provenance.metadata.v1.p8e.Signature(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.provenance.metadata.v1.p8e.Signature result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.algo_ = algo_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.provider_ = provider_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.signature_ = signature_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.signer_ = signerBuilder_ == null
            ? signer_
            : signerBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.provenance.metadata.v1.p8e.Signature) {
        return mergeFrom((com.provenance.metadata.v1.p8e.Signature)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.provenance.metadata.v1.p8e.Signature other) {
      if (other == com.provenance.metadata.v1.p8e.Signature.getDefaultInstance()) return this;
      if (!other.getAlgo().isEmpty()) {
        algo_ = other.algo_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getProvider().isEmpty()) {
        provider_ = other.provider_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getSignature().isEmpty()) {
        signature_ = other.signature_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.hasSigner()) {
        mergeSigner(other.getSigner());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              algo_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              provider_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              signature_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getSignerFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object algo_ = "";
    /**
     * <code>string algo = 1 [json_name = "algo"];</code>
     * @return The algo.
     */
    public java.lang.String getAlgo() {
      java.lang.Object ref = algo_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        algo_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string algo = 1 [json_name = "algo"];</code>
     * @return The bytes for algo.
     */
    public com.google.protobuf.ByteString
        getAlgoBytes() {
      java.lang.Object ref = algo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        algo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string algo = 1 [json_name = "algo"];</code>
     * @param value The algo to set.
     * @return This builder for chaining.
     */
    public Builder setAlgo(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      algo_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string algo = 1 [json_name = "algo"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAlgo() {
      algo_ = getDefaultInstance().getAlgo();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string algo = 1 [json_name = "algo"];</code>
     * @param value The bytes for algo to set.
     * @return This builder for chaining.
     */
    public Builder setAlgoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      algo_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object provider_ = "";
    /**
     * <code>string provider = 2 [json_name = "provider"];</code>
     * @return The provider.
     */
    public java.lang.String getProvider() {
      java.lang.Object ref = provider_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        provider_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string provider = 2 [json_name = "provider"];</code>
     * @return The bytes for provider.
     */
    public com.google.protobuf.ByteString
        getProviderBytes() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        provider_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string provider = 2 [json_name = "provider"];</code>
     * @param value The provider to set.
     * @return This builder for chaining.
     */
    public Builder setProvider(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      provider_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string provider = 2 [json_name = "provider"];</code>
     * @return This builder for chaining.
     */
    public Builder clearProvider() {
      provider_ = getDefaultInstance().getProvider();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string provider = 2 [json_name = "provider"];</code>
     * @param value The bytes for provider to set.
     * @return This builder for chaining.
     */
    public Builder setProviderBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      provider_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object signature_ = "";
    /**
     * <code>string signature = 3 [json_name = "signature"];</code>
     * @return The signature.
     */
    public java.lang.String getSignature() {
      java.lang.Object ref = signature_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        signature_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string signature = 3 [json_name = "signature"];</code>
     * @return The bytes for signature.
     */
    public com.google.protobuf.ByteString
        getSignatureBytes() {
      java.lang.Object ref = signature_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        signature_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string signature = 3 [json_name = "signature"];</code>
     * @param value The signature to set.
     * @return This builder for chaining.
     */
    public Builder setSignature(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      signature_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>string signature = 3 [json_name = "signature"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSignature() {
      signature_ = getDefaultInstance().getSignature();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>string signature = 3 [json_name = "signature"];</code>
     * @param value The bytes for signature to set.
     * @return This builder for chaining.
     */
    public Builder setSignatureBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      signature_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys, com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys.Builder, com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeysOrBuilder> signerBuilder_;
    /**
     * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
     * @return Whether the signer field is set.
     */
    public boolean hasSigner() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
     * @return The signer.
     */
    public com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys getSigner() {
      if (signerBuilder_ == null) {
        return signer_ == null ? com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys.getDefaultInstance() : signer_;
      } else {
        return signerBuilder_.getMessage();
      }
    }
    /**
     * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
     */
    public Builder setSigner(com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys value) {
      if (signerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        signer_ = value;
      } else {
        signerBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
     */
    public Builder setSigner(
        com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys.Builder builderForValue) {
      if (signerBuilder_ == null) {
        signer_ = builderForValue.build();
      } else {
        signerBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
     */
    public Builder mergeSigner(com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys value) {
      if (signerBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          signer_ != null &&
          signer_ != com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys.getDefaultInstance()) {
          getSignerBuilder().mergeFrom(value);
        } else {
          signer_ = value;
        }
      } else {
        signerBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
     */
    public Builder clearSigner() {
      bitField0_ = (bitField0_ & ~0x00000008);
      signer_ = null;
      if (signerBuilder_ != null) {
        signerBuilder_.dispose();
        signerBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
     */
    public com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys.Builder getSignerBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getSignerFieldBuilder().getBuilder();
    }
    /**
     * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
     */
    public com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeysOrBuilder getSignerOrBuilder() {
      if (signerBuilder_ != null) {
        return signerBuilder_.getMessageOrBuilder();
      } else {
        return signer_ == null ?
            com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys.getDefaultInstance() : signer_;
      }
    }
    /**
     * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4 [json_name = "signer"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys, com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys.Builder, com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeysOrBuilder> 
        getSignerFieldBuilder() {
      if (signerBuilder_ == null) {
        signerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys, com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys.Builder, com.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeysOrBuilder>(
                getSigner(),
                getParentForChildren(),
                isClean());
        signer_ = null;
      }
      return signerBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:provenance.metadata.v1.p8e.Signature)
  }

  // @@protoc_insertion_point(class_scope:provenance.metadata.v1.p8e.Signature)
  private static final com.provenance.metadata.v1.p8e.Signature DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.provenance.metadata.v1.p8e.Signature();
  }

  public static com.provenance.metadata.v1.p8e.Signature getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Signature>
      PARSER = new com.google.protobuf.AbstractParser<Signature>() {
    @java.lang.Override
    public Signature parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Signature> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Signature> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.provenance.metadata.v1.p8e.Signature getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


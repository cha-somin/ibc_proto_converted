// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/query.proto

package com.provenance.metadata.v1;

public interface ScopesAllResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.metadata.v1.ScopesAllResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * scopes are the wrapped scopes.
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.ScopeWrapper scopes = 1 [json_name = "scopes"];</code>
   */
  java.util.List<com.provenance.metadata.v1.ScopeWrapper> 
      getScopesList();
  /**
   * <pre>
   * scopes are the wrapped scopes.
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.ScopeWrapper scopes = 1 [json_name = "scopes"];</code>
   */
  com.provenance.metadata.v1.ScopeWrapper getScopes(int index);
  /**
   * <pre>
   * scopes are the wrapped scopes.
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.ScopeWrapper scopes = 1 [json_name = "scopes"];</code>
   */
  int getScopesCount();
  /**
   * <pre>
   * scopes are the wrapped scopes.
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.ScopeWrapper scopes = 1 [json_name = "scopes"];</code>
   */
  java.util.List<? extends com.provenance.metadata.v1.ScopeWrapperOrBuilder> 
      getScopesOrBuilderList();
  /**
   * <pre>
   * scopes are the wrapped scopes.
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.ScopeWrapper scopes = 1 [json_name = "scopes"];</code>
   */
  com.provenance.metadata.v1.ScopeWrapperOrBuilder getScopesOrBuilder(
      int index);

  /**
   * <pre>
   * request is a copy of the request that generated these results.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopesAllRequest request = 98 [json_name = "request"];</code>
   * @return Whether the request field is set.
   */
  boolean hasRequest();
  /**
   * <pre>
   * request is a copy of the request that generated these results.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopesAllRequest request = 98 [json_name = "request"];</code>
   * @return The request.
   */
  com.provenance.metadata.v1.ScopesAllRequest getRequest();
  /**
   * <pre>
   * request is a copy of the request that generated these results.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopesAllRequest request = 98 [json_name = "request"];</code>
   */
  com.provenance.metadata.v1.ScopesAllRequestOrBuilder getRequestOrBuilder();

  /**
   * <pre>
   * pagination provides the pagination information of this response.
   * </pre>
   *
   * <code>.cosmos.base.query.v1beta1.PageResponse pagination = 99 [json_name = "pagination"];</code>
   * @return Whether the pagination field is set.
   */
  boolean hasPagination();
  /**
   * <pre>
   * pagination provides the pagination information of this response.
   * </pre>
   *
   * <code>.cosmos.base.query.v1beta1.PageResponse pagination = 99 [json_name = "pagination"];</code>
   * @return The pagination.
   */
  com.cosmos.base.query.v1beta1.PageResponse getPagination();
  /**
   * <pre>
   * pagination provides the pagination information of this response.
   * </pre>
   *
   * <code>.cosmos.base.query.v1beta1.PageResponse pagination = 99 [json_name = "pagination"];</code>
   */
  com.cosmos.base.query.v1beta1.PageResponseOrBuilder getPaginationOrBuilder();
}

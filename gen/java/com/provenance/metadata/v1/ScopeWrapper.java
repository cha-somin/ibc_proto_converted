// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/query.proto

package com.provenance.metadata.v1;

/**
 * <pre>
 * SessionWrapper contains a single scope and its uuid.
 * </pre>
 *
 * Protobuf type {@code provenance.metadata.v1.ScopeWrapper}
 */
public final class ScopeWrapper extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:provenance.metadata.v1.ScopeWrapper)
    ScopeWrapperOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ScopeWrapper.newBuilder() to construct.
  private ScopeWrapper(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ScopeWrapper() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ScopeWrapper();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.provenance.metadata.v1.QueryProto.internal_static_provenance_metadata_v1_ScopeWrapper_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.provenance.metadata.v1.QueryProto.internal_static_provenance_metadata_v1_ScopeWrapper_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.provenance.metadata.v1.ScopeWrapper.class, com.provenance.metadata.v1.ScopeWrapper.Builder.class);
  }

  public static final int SCOPE_FIELD_NUMBER = 1;
  private com.provenance.metadata.v1.Scope scope_;
  /**
   * <pre>
   * scope is the on-chain scope message.
   * </pre>
   *
   * <code>.provenance.metadata.v1.Scope scope = 1 [json_name = "scope"];</code>
   * @return Whether the scope field is set.
   */
  @java.lang.Override
  public boolean hasScope() {
    return scope_ != null;
  }
  /**
   * <pre>
   * scope is the on-chain scope message.
   * </pre>
   *
   * <code>.provenance.metadata.v1.Scope scope = 1 [json_name = "scope"];</code>
   * @return The scope.
   */
  @java.lang.Override
  public com.provenance.metadata.v1.Scope getScope() {
    return scope_ == null ? com.provenance.metadata.v1.Scope.getDefaultInstance() : scope_;
  }
  /**
   * <pre>
   * scope is the on-chain scope message.
   * </pre>
   *
   * <code>.provenance.metadata.v1.Scope scope = 1 [json_name = "scope"];</code>
   */
  @java.lang.Override
  public com.provenance.metadata.v1.ScopeOrBuilder getScopeOrBuilder() {
    return scope_ == null ? com.provenance.metadata.v1.Scope.getDefaultInstance() : scope_;
  }

  public static final int SCOPE_ID_INFO_FIELD_NUMBER = 2;
  private com.provenance.metadata.v1.ScopeIdInfo scopeIdInfo_;
  /**
   * <pre>
   * scope_id_info contains information about the id/address of the scope.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [json_name = "scopeIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
   * @return Whether the scopeIdInfo field is set.
   */
  @java.lang.Override
  public boolean hasScopeIdInfo() {
    return scopeIdInfo_ != null;
  }
  /**
   * <pre>
   * scope_id_info contains information about the id/address of the scope.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [json_name = "scopeIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
   * @return The scopeIdInfo.
   */
  @java.lang.Override
  public com.provenance.metadata.v1.ScopeIdInfo getScopeIdInfo() {
    return scopeIdInfo_ == null ? com.provenance.metadata.v1.ScopeIdInfo.getDefaultInstance() : scopeIdInfo_;
  }
  /**
   * <pre>
   * scope_id_info contains information about the id/address of the scope.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [json_name = "scopeIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
   */
  @java.lang.Override
  public com.provenance.metadata.v1.ScopeIdInfoOrBuilder getScopeIdInfoOrBuilder() {
    return scopeIdInfo_ == null ? com.provenance.metadata.v1.ScopeIdInfo.getDefaultInstance() : scopeIdInfo_;
  }

  public static final int SCOPE_SPEC_ID_INFO_FIELD_NUMBER = 3;
  private com.provenance.metadata.v1.ScopeSpecIdInfo scopeSpecIdInfo_;
  /**
   * <pre>
   * scope_spec_id_info contains information about the id/address of the scope specification.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [json_name = "scopeSpecIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
   * @return Whether the scopeSpecIdInfo field is set.
   */
  @java.lang.Override
  public boolean hasScopeSpecIdInfo() {
    return scopeSpecIdInfo_ != null;
  }
  /**
   * <pre>
   * scope_spec_id_info contains information about the id/address of the scope specification.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [json_name = "scopeSpecIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
   * @return The scopeSpecIdInfo.
   */
  @java.lang.Override
  public com.provenance.metadata.v1.ScopeSpecIdInfo getScopeSpecIdInfo() {
    return scopeSpecIdInfo_ == null ? com.provenance.metadata.v1.ScopeSpecIdInfo.getDefaultInstance() : scopeSpecIdInfo_;
  }
  /**
   * <pre>
   * scope_spec_id_info contains information about the id/address of the scope specification.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [json_name = "scopeSpecIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
   */
  @java.lang.Override
  public com.provenance.metadata.v1.ScopeSpecIdInfoOrBuilder getScopeSpecIdInfoOrBuilder() {
    return scopeSpecIdInfo_ == null ? com.provenance.metadata.v1.ScopeSpecIdInfo.getDefaultInstance() : scopeSpecIdInfo_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (scope_ != null) {
      output.writeMessage(1, getScope());
    }
    if (scopeIdInfo_ != null) {
      output.writeMessage(2, getScopeIdInfo());
    }
    if (scopeSpecIdInfo_ != null) {
      output.writeMessage(3, getScopeSpecIdInfo());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (scope_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getScope());
    }
    if (scopeIdInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getScopeIdInfo());
    }
    if (scopeSpecIdInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getScopeSpecIdInfo());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.provenance.metadata.v1.ScopeWrapper)) {
      return super.equals(obj);
    }
    com.provenance.metadata.v1.ScopeWrapper other = (com.provenance.metadata.v1.ScopeWrapper) obj;

    if (hasScope() != other.hasScope()) return false;
    if (hasScope()) {
      if (!getScope()
          .equals(other.getScope())) return false;
    }
    if (hasScopeIdInfo() != other.hasScopeIdInfo()) return false;
    if (hasScopeIdInfo()) {
      if (!getScopeIdInfo()
          .equals(other.getScopeIdInfo())) return false;
    }
    if (hasScopeSpecIdInfo() != other.hasScopeSpecIdInfo()) return false;
    if (hasScopeSpecIdInfo()) {
      if (!getScopeSpecIdInfo()
          .equals(other.getScopeSpecIdInfo())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasScope()) {
      hash = (37 * hash) + SCOPE_FIELD_NUMBER;
      hash = (53 * hash) + getScope().hashCode();
    }
    if (hasScopeIdInfo()) {
      hash = (37 * hash) + SCOPE_ID_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getScopeIdInfo().hashCode();
    }
    if (hasScopeSpecIdInfo()) {
      hash = (37 * hash) + SCOPE_SPEC_ID_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getScopeSpecIdInfo().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.provenance.metadata.v1.ScopeWrapper parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.provenance.metadata.v1.ScopeWrapper parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.provenance.metadata.v1.ScopeWrapper parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.provenance.metadata.v1.ScopeWrapper parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.provenance.metadata.v1.ScopeWrapper parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.provenance.metadata.v1.ScopeWrapper parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.provenance.metadata.v1.ScopeWrapper parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.provenance.metadata.v1.ScopeWrapper parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.provenance.metadata.v1.ScopeWrapper parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.provenance.metadata.v1.ScopeWrapper parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.provenance.metadata.v1.ScopeWrapper parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.provenance.metadata.v1.ScopeWrapper parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.provenance.metadata.v1.ScopeWrapper prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * SessionWrapper contains a single scope and its uuid.
   * </pre>
   *
   * Protobuf type {@code provenance.metadata.v1.ScopeWrapper}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:provenance.metadata.v1.ScopeWrapper)
      com.provenance.metadata.v1.ScopeWrapperOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.provenance.metadata.v1.QueryProto.internal_static_provenance_metadata_v1_ScopeWrapper_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.provenance.metadata.v1.QueryProto.internal_static_provenance_metadata_v1_ScopeWrapper_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.provenance.metadata.v1.ScopeWrapper.class, com.provenance.metadata.v1.ScopeWrapper.Builder.class);
    }

    // Construct using com.provenance.metadata.v1.ScopeWrapper.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      scope_ = null;
      if (scopeBuilder_ != null) {
        scopeBuilder_.dispose();
        scopeBuilder_ = null;
      }
      scopeIdInfo_ = null;
      if (scopeIdInfoBuilder_ != null) {
        scopeIdInfoBuilder_.dispose();
        scopeIdInfoBuilder_ = null;
      }
      scopeSpecIdInfo_ = null;
      if (scopeSpecIdInfoBuilder_ != null) {
        scopeSpecIdInfoBuilder_.dispose();
        scopeSpecIdInfoBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.provenance.metadata.v1.QueryProto.internal_static_provenance_metadata_v1_ScopeWrapper_descriptor;
    }

    @java.lang.Override
    public com.provenance.metadata.v1.ScopeWrapper getDefaultInstanceForType() {
      return com.provenance.metadata.v1.ScopeWrapper.getDefaultInstance();
    }

    @java.lang.Override
    public com.provenance.metadata.v1.ScopeWrapper build() {
      com.provenance.metadata.v1.ScopeWrapper result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.provenance.metadata.v1.ScopeWrapper buildPartial() {
      com.provenance.metadata.v1.ScopeWrapper result = new com.provenance.metadata.v1.ScopeWrapper(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.provenance.metadata.v1.ScopeWrapper result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.scope_ = scopeBuilder_ == null
            ? scope_
            : scopeBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.scopeIdInfo_ = scopeIdInfoBuilder_ == null
            ? scopeIdInfo_
            : scopeIdInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.scopeSpecIdInfo_ = scopeSpecIdInfoBuilder_ == null
            ? scopeSpecIdInfo_
            : scopeSpecIdInfoBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.provenance.metadata.v1.ScopeWrapper) {
        return mergeFrom((com.provenance.metadata.v1.ScopeWrapper)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.provenance.metadata.v1.ScopeWrapper other) {
      if (other == com.provenance.metadata.v1.ScopeWrapper.getDefaultInstance()) return this;
      if (other.hasScope()) {
        mergeScope(other.getScope());
      }
      if (other.hasScopeIdInfo()) {
        mergeScopeIdInfo(other.getScopeIdInfo());
      }
      if (other.hasScopeSpecIdInfo()) {
        mergeScopeSpecIdInfo(other.getScopeSpecIdInfo());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getScopeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getScopeIdInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getScopeSpecIdInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.provenance.metadata.v1.Scope scope_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.provenance.metadata.v1.Scope, com.provenance.metadata.v1.Scope.Builder, com.provenance.metadata.v1.ScopeOrBuilder> scopeBuilder_;
    /**
     * <pre>
     * scope is the on-chain scope message.
     * </pre>
     *
     * <code>.provenance.metadata.v1.Scope scope = 1 [json_name = "scope"];</code>
     * @return Whether the scope field is set.
     */
    public boolean hasScope() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * scope is the on-chain scope message.
     * </pre>
     *
     * <code>.provenance.metadata.v1.Scope scope = 1 [json_name = "scope"];</code>
     * @return The scope.
     */
    public com.provenance.metadata.v1.Scope getScope() {
      if (scopeBuilder_ == null) {
        return scope_ == null ? com.provenance.metadata.v1.Scope.getDefaultInstance() : scope_;
      } else {
        return scopeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * scope is the on-chain scope message.
     * </pre>
     *
     * <code>.provenance.metadata.v1.Scope scope = 1 [json_name = "scope"];</code>
     */
    public Builder setScope(com.provenance.metadata.v1.Scope value) {
      if (scopeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scope_ = value;
      } else {
        scopeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * scope is the on-chain scope message.
     * </pre>
     *
     * <code>.provenance.metadata.v1.Scope scope = 1 [json_name = "scope"];</code>
     */
    public Builder setScope(
        com.provenance.metadata.v1.Scope.Builder builderForValue) {
      if (scopeBuilder_ == null) {
        scope_ = builderForValue.build();
      } else {
        scopeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * scope is the on-chain scope message.
     * </pre>
     *
     * <code>.provenance.metadata.v1.Scope scope = 1 [json_name = "scope"];</code>
     */
    public Builder mergeScope(com.provenance.metadata.v1.Scope value) {
      if (scopeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          scope_ != null &&
          scope_ != com.provenance.metadata.v1.Scope.getDefaultInstance()) {
          getScopeBuilder().mergeFrom(value);
        } else {
          scope_ = value;
        }
      } else {
        scopeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * scope is the on-chain scope message.
     * </pre>
     *
     * <code>.provenance.metadata.v1.Scope scope = 1 [json_name = "scope"];</code>
     */
    public Builder clearScope() {
      bitField0_ = (bitField0_ & ~0x00000001);
      scope_ = null;
      if (scopeBuilder_ != null) {
        scopeBuilder_.dispose();
        scopeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * scope is the on-chain scope message.
     * </pre>
     *
     * <code>.provenance.metadata.v1.Scope scope = 1 [json_name = "scope"];</code>
     */
    public com.provenance.metadata.v1.Scope.Builder getScopeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getScopeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * scope is the on-chain scope message.
     * </pre>
     *
     * <code>.provenance.metadata.v1.Scope scope = 1 [json_name = "scope"];</code>
     */
    public com.provenance.metadata.v1.ScopeOrBuilder getScopeOrBuilder() {
      if (scopeBuilder_ != null) {
        return scopeBuilder_.getMessageOrBuilder();
      } else {
        return scope_ == null ?
            com.provenance.metadata.v1.Scope.getDefaultInstance() : scope_;
      }
    }
    /**
     * <pre>
     * scope is the on-chain scope message.
     * </pre>
     *
     * <code>.provenance.metadata.v1.Scope scope = 1 [json_name = "scope"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.provenance.metadata.v1.Scope, com.provenance.metadata.v1.Scope.Builder, com.provenance.metadata.v1.ScopeOrBuilder> 
        getScopeFieldBuilder() {
      if (scopeBuilder_ == null) {
        scopeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.provenance.metadata.v1.Scope, com.provenance.metadata.v1.Scope.Builder, com.provenance.metadata.v1.ScopeOrBuilder>(
                getScope(),
                getParentForChildren(),
                isClean());
        scope_ = null;
      }
      return scopeBuilder_;
    }

    private com.provenance.metadata.v1.ScopeIdInfo scopeIdInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.provenance.metadata.v1.ScopeIdInfo, com.provenance.metadata.v1.ScopeIdInfo.Builder, com.provenance.metadata.v1.ScopeIdInfoOrBuilder> scopeIdInfoBuilder_;
    /**
     * <pre>
     * scope_id_info contains information about the id/address of the scope.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [json_name = "scopeIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
     * @return Whether the scopeIdInfo field is set.
     */
    public boolean hasScopeIdInfo() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * scope_id_info contains information about the id/address of the scope.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [json_name = "scopeIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
     * @return The scopeIdInfo.
     */
    public com.provenance.metadata.v1.ScopeIdInfo getScopeIdInfo() {
      if (scopeIdInfoBuilder_ == null) {
        return scopeIdInfo_ == null ? com.provenance.metadata.v1.ScopeIdInfo.getDefaultInstance() : scopeIdInfo_;
      } else {
        return scopeIdInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * scope_id_info contains information about the id/address of the scope.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [json_name = "scopeIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
     */
    public Builder setScopeIdInfo(com.provenance.metadata.v1.ScopeIdInfo value) {
      if (scopeIdInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scopeIdInfo_ = value;
      } else {
        scopeIdInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * scope_id_info contains information about the id/address of the scope.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [json_name = "scopeIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
     */
    public Builder setScopeIdInfo(
        com.provenance.metadata.v1.ScopeIdInfo.Builder builderForValue) {
      if (scopeIdInfoBuilder_ == null) {
        scopeIdInfo_ = builderForValue.build();
      } else {
        scopeIdInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * scope_id_info contains information about the id/address of the scope.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [json_name = "scopeIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
     */
    public Builder mergeScopeIdInfo(com.provenance.metadata.v1.ScopeIdInfo value) {
      if (scopeIdInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          scopeIdInfo_ != null &&
          scopeIdInfo_ != com.provenance.metadata.v1.ScopeIdInfo.getDefaultInstance()) {
          getScopeIdInfoBuilder().mergeFrom(value);
        } else {
          scopeIdInfo_ = value;
        }
      } else {
        scopeIdInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * scope_id_info contains information about the id/address of the scope.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [json_name = "scopeIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
     */
    public Builder clearScopeIdInfo() {
      bitField0_ = (bitField0_ & ~0x00000002);
      scopeIdInfo_ = null;
      if (scopeIdInfoBuilder_ != null) {
        scopeIdInfoBuilder_.dispose();
        scopeIdInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * scope_id_info contains information about the id/address of the scope.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [json_name = "scopeIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
     */
    public com.provenance.metadata.v1.ScopeIdInfo.Builder getScopeIdInfoBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getScopeIdInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * scope_id_info contains information about the id/address of the scope.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [json_name = "scopeIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
     */
    public com.provenance.metadata.v1.ScopeIdInfoOrBuilder getScopeIdInfoOrBuilder() {
      if (scopeIdInfoBuilder_ != null) {
        return scopeIdInfoBuilder_.getMessageOrBuilder();
      } else {
        return scopeIdInfo_ == null ?
            com.provenance.metadata.v1.ScopeIdInfo.getDefaultInstance() : scopeIdInfo_;
      }
    }
    /**
     * <pre>
     * scope_id_info contains information about the id/address of the scope.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [json_name = "scopeIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.provenance.metadata.v1.ScopeIdInfo, com.provenance.metadata.v1.ScopeIdInfo.Builder, com.provenance.metadata.v1.ScopeIdInfoOrBuilder> 
        getScopeIdInfoFieldBuilder() {
      if (scopeIdInfoBuilder_ == null) {
        scopeIdInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.provenance.metadata.v1.ScopeIdInfo, com.provenance.metadata.v1.ScopeIdInfo.Builder, com.provenance.metadata.v1.ScopeIdInfoOrBuilder>(
                getScopeIdInfo(),
                getParentForChildren(),
                isClean());
        scopeIdInfo_ = null;
      }
      return scopeIdInfoBuilder_;
    }

    private com.provenance.metadata.v1.ScopeSpecIdInfo scopeSpecIdInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.provenance.metadata.v1.ScopeSpecIdInfo, com.provenance.metadata.v1.ScopeSpecIdInfo.Builder, com.provenance.metadata.v1.ScopeSpecIdInfoOrBuilder> scopeSpecIdInfoBuilder_;
    /**
     * <pre>
     * scope_spec_id_info contains information about the id/address of the scope specification.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [json_name = "scopeSpecIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
     * @return Whether the scopeSpecIdInfo field is set.
     */
    public boolean hasScopeSpecIdInfo() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * scope_spec_id_info contains information about the id/address of the scope specification.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [json_name = "scopeSpecIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
     * @return The scopeSpecIdInfo.
     */
    public com.provenance.metadata.v1.ScopeSpecIdInfo getScopeSpecIdInfo() {
      if (scopeSpecIdInfoBuilder_ == null) {
        return scopeSpecIdInfo_ == null ? com.provenance.metadata.v1.ScopeSpecIdInfo.getDefaultInstance() : scopeSpecIdInfo_;
      } else {
        return scopeSpecIdInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * scope_spec_id_info contains information about the id/address of the scope specification.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [json_name = "scopeSpecIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
     */
    public Builder setScopeSpecIdInfo(com.provenance.metadata.v1.ScopeSpecIdInfo value) {
      if (scopeSpecIdInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scopeSpecIdInfo_ = value;
      } else {
        scopeSpecIdInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * scope_spec_id_info contains information about the id/address of the scope specification.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [json_name = "scopeSpecIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
     */
    public Builder setScopeSpecIdInfo(
        com.provenance.metadata.v1.ScopeSpecIdInfo.Builder builderForValue) {
      if (scopeSpecIdInfoBuilder_ == null) {
        scopeSpecIdInfo_ = builderForValue.build();
      } else {
        scopeSpecIdInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * scope_spec_id_info contains information about the id/address of the scope specification.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [json_name = "scopeSpecIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
     */
    public Builder mergeScopeSpecIdInfo(com.provenance.metadata.v1.ScopeSpecIdInfo value) {
      if (scopeSpecIdInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          scopeSpecIdInfo_ != null &&
          scopeSpecIdInfo_ != com.provenance.metadata.v1.ScopeSpecIdInfo.getDefaultInstance()) {
          getScopeSpecIdInfoBuilder().mergeFrom(value);
        } else {
          scopeSpecIdInfo_ = value;
        }
      } else {
        scopeSpecIdInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * scope_spec_id_info contains information about the id/address of the scope specification.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [json_name = "scopeSpecIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
     */
    public Builder clearScopeSpecIdInfo() {
      bitField0_ = (bitField0_ & ~0x00000004);
      scopeSpecIdInfo_ = null;
      if (scopeSpecIdInfoBuilder_ != null) {
        scopeSpecIdInfoBuilder_.dispose();
        scopeSpecIdInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * scope_spec_id_info contains information about the id/address of the scope specification.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [json_name = "scopeSpecIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
     */
    public com.provenance.metadata.v1.ScopeSpecIdInfo.Builder getScopeSpecIdInfoBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getScopeSpecIdInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * scope_spec_id_info contains information about the id/address of the scope specification.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [json_name = "scopeSpecIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
     */
    public com.provenance.metadata.v1.ScopeSpecIdInfoOrBuilder getScopeSpecIdInfoOrBuilder() {
      if (scopeSpecIdInfoBuilder_ != null) {
        return scopeSpecIdInfoBuilder_.getMessageOrBuilder();
      } else {
        return scopeSpecIdInfo_ == null ?
            com.provenance.metadata.v1.ScopeSpecIdInfo.getDefaultInstance() : scopeSpecIdInfo_;
      }
    }
    /**
     * <pre>
     * scope_spec_id_info contains information about the id/address of the scope specification.
     * </pre>
     *
     * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [json_name = "scopeSpecIdInfo", (.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.provenance.metadata.v1.ScopeSpecIdInfo, com.provenance.metadata.v1.ScopeSpecIdInfo.Builder, com.provenance.metadata.v1.ScopeSpecIdInfoOrBuilder> 
        getScopeSpecIdInfoFieldBuilder() {
      if (scopeSpecIdInfoBuilder_ == null) {
        scopeSpecIdInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.provenance.metadata.v1.ScopeSpecIdInfo, com.provenance.metadata.v1.ScopeSpecIdInfo.Builder, com.provenance.metadata.v1.ScopeSpecIdInfoOrBuilder>(
                getScopeSpecIdInfo(),
                getParentForChildren(),
                isClean());
        scopeSpecIdInfo_ = null;
      }
      return scopeSpecIdInfoBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:provenance.metadata.v1.ScopeWrapper)
  }

  // @@protoc_insertion_point(class_scope:provenance.metadata.v1.ScopeWrapper)
  private static final com.provenance.metadata.v1.ScopeWrapper DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.provenance.metadata.v1.ScopeWrapper();
  }

  public static com.provenance.metadata.v1.ScopeWrapper getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ScopeWrapper>
      PARSER = new com.google.protobuf.AbstractParser<ScopeWrapper>() {
    @java.lang.Override
    public ScopeWrapper parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ScopeWrapper> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ScopeWrapper> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.provenance.metadata.v1.ScopeWrapper getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


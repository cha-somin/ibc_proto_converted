// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/query.proto

package com.provenance.metadata.v1;

public interface ScopeSpecificationRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.metadata.v1.ScopeSpecificationRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * specification_id can either be a uuid, e.g. dc83ea70-eacd-40fe-9adf-1cf6148bf8a2 or a bech32 scope specification
   * address, e.g. scopespec1qnwg86nsatx5pl56muw0v9ytlz3qu3jx6m.
   * </pre>
   *
   * <code>string specification_id = 1 [json_name = "specificationId", (.gogoproto.moretags) = "yaml:&#92;"specification_id&#92;""];</code>
   * @return The specificationId.
   */
  java.lang.String getSpecificationId();
  /**
   * <pre>
   * specification_id can either be a uuid, e.g. dc83ea70-eacd-40fe-9adf-1cf6148bf8a2 or a bech32 scope specification
   * address, e.g. scopespec1qnwg86nsatx5pl56muw0v9ytlz3qu3jx6m.
   * </pre>
   *
   * <code>string specification_id = 1 [json_name = "specificationId", (.gogoproto.moretags) = "yaml:&#92;"specification_id&#92;""];</code>
   * @return The bytes for specificationId.
   */
  com.google.protobuf.ByteString
      getSpecificationIdBytes();

  /**
   * <pre>
   * include_contract_specs is a flag for whether or not the contract specifications in the scope specification should
   * be included.
   * </pre>
   *
   * <code>bool include_contract_specs = 10 [json_name = "includeContractSpecs", (.gogoproto.moretags) = "yaml:&#92;"include_contract_specs&#92;""];</code>
   * @return The includeContractSpecs.
   */
  boolean getIncludeContractSpecs();

  /**
   * <pre>
   * include_record_specs is a flag for whether or not the record specifications in the scope specification should be
   * included.
   * </pre>
   *
   * <code>bool include_record_specs = 11 [json_name = "includeRecordSpecs", (.gogoproto.moretags) = "yaml:&#92;"include_record_specs&#92;""];</code>
   * @return The includeRecordSpecs.
   */
  boolean getIncludeRecordSpecs();
}

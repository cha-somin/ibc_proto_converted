// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/scope.proto

package com.provenance.metadata.v1;

public interface ScopeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.metadata.v1.Scope)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Unique ID for this scope.  Implements sdk.Address interface for use where addresses are required in Cosmos
   * </pre>
   *
   * <code>bytes scope_id = 1 [json_name = "scopeId", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "MetadataAddress", (.gogoproto.moretags) = "yaml:&#92;"scope_id&#92;""];</code>
   * @return The scopeId.
   */
  com.google.protobuf.ByteString getScopeId();

  /**
   * <pre>
   * the scope specification that contains the specifications for data elements allowed within this scope
   * </pre>
   *
   * <code>bytes specification_id = 2 [json_name = "specificationId", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "MetadataAddress", (.gogoproto.moretags) = "yaml:&#92;"specification_id&#92;""];</code>
   * @return The specificationId.
   */
  com.google.protobuf.ByteString getSpecificationId();

  /**
   * <pre>
   * These parties represent top level owners of the records within.  These parties must sign any requests that modify
   * the data within the scope.  These addresses are in union with parties listed on the sessions.
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.Party owners = 3 [json_name = "owners", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<com.provenance.metadata.v1.Party> 
      getOwnersList();
  /**
   * <pre>
   * These parties represent top level owners of the records within.  These parties must sign any requests that modify
   * the data within the scope.  These addresses are in union with parties listed on the sessions.
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.Party owners = 3 [json_name = "owners", (.gogoproto.nullable) = false];</code>
   */
  com.provenance.metadata.v1.Party getOwners(int index);
  /**
   * <pre>
   * These parties represent top level owners of the records within.  These parties must sign any requests that modify
   * the data within the scope.  These addresses are in union with parties listed on the sessions.
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.Party owners = 3 [json_name = "owners", (.gogoproto.nullable) = false];</code>
   */
  int getOwnersCount();
  /**
   * <pre>
   * These parties represent top level owners of the records within.  These parties must sign any requests that modify
   * the data within the scope.  These addresses are in union with parties listed on the sessions.
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.Party owners = 3 [json_name = "owners", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<? extends com.provenance.metadata.v1.PartyOrBuilder> 
      getOwnersOrBuilderList();
  /**
   * <pre>
   * These parties represent top level owners of the records within.  These parties must sign any requests that modify
   * the data within the scope.  These addresses are in union with parties listed on the sessions.
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.Party owners = 3 [json_name = "owners", (.gogoproto.nullable) = false];</code>
   */
  com.provenance.metadata.v1.PartyOrBuilder getOwnersOrBuilder(
      int index);

  /**
   * <pre>
   * Addresses in this list are authorized to receive off-chain data associated with this scope.
   * </pre>
   *
   * <code>repeated string data_access = 4 [json_name = "dataAccess", (.gogoproto.moretags) = "yaml:&#92;"data_access&#92;""];</code>
   * @return A list containing the dataAccess.
   */
  java.util.List<java.lang.String>
      getDataAccessList();
  /**
   * <pre>
   * Addresses in this list are authorized to receive off-chain data associated with this scope.
   * </pre>
   *
   * <code>repeated string data_access = 4 [json_name = "dataAccess", (.gogoproto.moretags) = "yaml:&#92;"data_access&#92;""];</code>
   * @return The count of dataAccess.
   */
  int getDataAccessCount();
  /**
   * <pre>
   * Addresses in this list are authorized to receive off-chain data associated with this scope.
   * </pre>
   *
   * <code>repeated string data_access = 4 [json_name = "dataAccess", (.gogoproto.moretags) = "yaml:&#92;"data_access&#92;""];</code>
   * @param index The index of the element to return.
   * @return The dataAccess at the given index.
   */
  java.lang.String getDataAccess(int index);
  /**
   * <pre>
   * Addresses in this list are authorized to receive off-chain data associated with this scope.
   * </pre>
   *
   * <code>repeated string data_access = 4 [json_name = "dataAccess", (.gogoproto.moretags) = "yaml:&#92;"data_access&#92;""];</code>
   * @param index The index of the value to return.
   * @return The bytes of the dataAccess at the given index.
   */
  com.google.protobuf.ByteString
      getDataAccessBytes(int index);

  /**
   * <pre>
   * An address that controls the value associated with this scope.  Standard blockchain accounts and marker accounts
   * are supported for this value.  This attribute may only be changed by the entity indicated once it is set.
   * </pre>
   *
   * <code>string value_owner_address = 5 [json_name = "valueOwnerAddress", (.gogoproto.moretags) = "yaml:&#92;"value_owner_address&#92;""];</code>
   * @return The valueOwnerAddress.
   */
  java.lang.String getValueOwnerAddress();
  /**
   * <pre>
   * An address that controls the value associated with this scope.  Standard blockchain accounts and marker accounts
   * are supported for this value.  This attribute may only be changed by the entity indicated once it is set.
   * </pre>
   *
   * <code>string value_owner_address = 5 [json_name = "valueOwnerAddress", (.gogoproto.moretags) = "yaml:&#92;"value_owner_address&#92;""];</code>
   * @return The bytes for valueOwnerAddress.
   */
  com.google.protobuf.ByteString
      getValueOwnerAddressBytes();

  /**
   * <pre>
   * Whether all parties in this scope and its sessions must be present in this scope's owners field.
   * This also enables use of optional=true scope owners and session parties.
   * </pre>
   *
   * <code>bool require_party_rollup = 6 [json_name = "requirePartyRollup", (.gogoproto.moretags) = "yaml:&#92;"require_party_rollup&#92;""];</code>
   * @return The requirePartyRollup.
   */
  boolean getRequirePartyRollup();
}

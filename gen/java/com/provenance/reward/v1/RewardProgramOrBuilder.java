// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/reward/v1/reward.proto

package com.provenance.reward.v1;

public interface RewardProgramOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.reward.v1.RewardProgram)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * An integer to uniquely identify the reward program.
   * </pre>
   *
   * <code>uint64 id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  long getId();

  /**
   * <pre>
   * Name to help identify the Reward Program.(MaxTitleLength=140)
   * </pre>
   *
   * <code>string title = 2 [json_name = "title"];</code>
   * @return The title.
   */
  java.lang.String getTitle();
  /**
   * <pre>
   * Name to help identify the Reward Program.(MaxTitleLength=140)
   * </pre>
   *
   * <code>string title = 2 [json_name = "title"];</code>
   * @return The bytes for title.
   */
  com.google.protobuf.ByteString
      getTitleBytes();

  /**
   * <pre>
   * Short summary describing the Reward Program.(MaxDescriptionLength=10000)
   * </pre>
   *
   * <code>string description = 3 [json_name = "description"];</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * Short summary describing the Reward Program.(MaxDescriptionLength=10000)
   * </pre>
   *
   * <code>string description = 3 [json_name = "description"];</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * address that provides funds for the total reward pool.
   * </pre>
   *
   * <code>string distribute_from_address = 4 [json_name = "distributeFromAddress"];</code>
   * @return The distributeFromAddress.
   */
  java.lang.String getDistributeFromAddress();
  /**
   * <pre>
   * address that provides funds for the total reward pool.
   * </pre>
   *
   * <code>string distribute_from_address = 4 [json_name = "distributeFromAddress"];</code>
   * @return The bytes for distributeFromAddress.
   */
  com.google.protobuf.ByteString
      getDistributeFromAddressBytes();

  /**
   * <pre>
   * The total amount of funding given to the RewardProgram.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin total_reward_pool = 5 [json_name = "totalRewardPool", (.gogoproto.nullable) = false];</code>
   * @return Whether the totalRewardPool field is set.
   */
  boolean hasTotalRewardPool();
  /**
   * <pre>
   * The total amount of funding given to the RewardProgram.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin total_reward_pool = 5 [json_name = "totalRewardPool", (.gogoproto.nullable) = false];</code>
   * @return The totalRewardPool.
   */
  com.cosmos.base.v1beta1.Coin getTotalRewardPool();
  /**
   * <pre>
   * The total amount of funding given to the RewardProgram.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin total_reward_pool = 5 [json_name = "totalRewardPool", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getTotalRewardPoolOrBuilder();

  /**
   * <pre>
   * The remaining funds available to distribute after n claim periods have passed.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin remaining_pool_balance = 6 [json_name = "remainingPoolBalance", (.gogoproto.nullable) = false];</code>
   * @return Whether the remainingPoolBalance field is set.
   */
  boolean hasRemainingPoolBalance();
  /**
   * <pre>
   * The remaining funds available to distribute after n claim periods have passed.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin remaining_pool_balance = 6 [json_name = "remainingPoolBalance", (.gogoproto.nullable) = false];</code>
   * @return The remainingPoolBalance.
   */
  com.cosmos.base.v1beta1.Coin getRemainingPoolBalance();
  /**
   * <pre>
   * The remaining funds available to distribute after n claim periods have passed.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin remaining_pool_balance = 6 [json_name = "remainingPoolBalance", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getRemainingPoolBalanceOrBuilder();

  /**
   * <pre>
   * The total amount of all funds claimed by participants for all past claim periods.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin claimed_amount = 7 [json_name = "claimedAmount", (.gogoproto.nullable) = false];</code>
   * @return Whether the claimedAmount field is set.
   */
  boolean hasClaimedAmount();
  /**
   * <pre>
   * The total amount of all funds claimed by participants for all past claim periods.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin claimed_amount = 7 [json_name = "claimedAmount", (.gogoproto.nullable) = false];</code>
   * @return The claimedAmount.
   */
  com.cosmos.base.v1beta1.Coin getClaimedAmount();
  /**
   * <pre>
   * The total amount of all funds claimed by participants for all past claim periods.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin claimed_amount = 7 [json_name = "claimedAmount", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getClaimedAmountOrBuilder();

  /**
   * <pre>
   * Maximum reward per claim period per address.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin max_reward_by_address = 8 [json_name = "maxRewardByAddress", (.gogoproto.nullable) = false];</code>
   * @return Whether the maxRewardByAddress field is set.
   */
  boolean hasMaxRewardByAddress();
  /**
   * <pre>
   * Maximum reward per claim period per address.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin max_reward_by_address = 8 [json_name = "maxRewardByAddress", (.gogoproto.nullable) = false];</code>
   * @return The maxRewardByAddress.
   */
  com.cosmos.base.v1beta1.Coin getMaxRewardByAddress();
  /**
   * <pre>
   * Maximum reward per claim period per address.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin max_reward_by_address = 8 [json_name = "maxRewardByAddress", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getMaxRewardByAddressOrBuilder();

  /**
   * <pre>
   * Minimum amount of coins for a program to rollover.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin minimum_rollover_amount = 9 [json_name = "minimumRolloverAmount", (.gogoproto.nullable) = false];</code>
   * @return Whether the minimumRolloverAmount field is set.
   */
  boolean hasMinimumRolloverAmount();
  /**
   * <pre>
   * Minimum amount of coins for a program to rollover.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin minimum_rollover_amount = 9 [json_name = "minimumRolloverAmount", (.gogoproto.nullable) = false];</code>
   * @return The minimumRolloverAmount.
   */
  com.cosmos.base.v1beta1.Coin getMinimumRolloverAmount();
  /**
   * <pre>
   * Minimum amount of coins for a program to rollover.
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin minimum_rollover_amount = 9 [json_name = "minimumRolloverAmount", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getMinimumRolloverAmountOrBuilder();

  /**
   * <pre>
   * Number of seconds that a claim period lasts.
   * </pre>
   *
   * <code>uint64 claim_period_seconds = 10 [json_name = "claimPeriodSeconds"];</code>
   * @return The claimPeriodSeconds.
   */
  long getClaimPeriodSeconds();

  /**
   * <pre>
   * Time that a RewardProgram should start and switch to STARTED state.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp program_start_time = 11 [json_name = "programStartTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return Whether the programStartTime field is set.
   */
  boolean hasProgramStartTime();
  /**
   * <pre>
   * Time that a RewardProgram should start and switch to STARTED state.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp program_start_time = 11 [json_name = "programStartTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return The programStartTime.
   */
  com.google.protobuf.Timestamp getProgramStartTime();
  /**
   * <pre>
   * Time that a RewardProgram should start and switch to STARTED state.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp program_start_time = 11 [json_name = "programStartTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getProgramStartTimeOrBuilder();

  /**
   * <pre>
   * Time that a RewardProgram is expected to end, based on data when it was setup.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expected_program_end_time = 12 [json_name = "expectedProgramEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return Whether the expectedProgramEndTime field is set.
   */
  boolean hasExpectedProgramEndTime();
  /**
   * <pre>
   * Time that a RewardProgram is expected to end, based on data when it was setup.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expected_program_end_time = 12 [json_name = "expectedProgramEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return The expectedProgramEndTime.
   */
  com.google.protobuf.Timestamp getExpectedProgramEndTime();
  /**
   * <pre>
   * Time that a RewardProgram is expected to end, based on data when it was setup.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expected_program_end_time = 12 [json_name = "expectedProgramEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getExpectedProgramEndTimeOrBuilder();

  /**
   * <pre>
   * Time that a RewardProgram MUST end.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp program_end_time_max = 13 [json_name = "programEndTimeMax", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return Whether the programEndTimeMax field is set.
   */
  boolean hasProgramEndTimeMax();
  /**
   * <pre>
   * Time that a RewardProgram MUST end.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp program_end_time_max = 13 [json_name = "programEndTimeMax", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return The programEndTimeMax.
   */
  com.google.protobuf.Timestamp getProgramEndTimeMax();
  /**
   * <pre>
   * Time that a RewardProgram MUST end.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp program_end_time_max = 13 [json_name = "programEndTimeMax", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getProgramEndTimeMaxOrBuilder();

  /**
   * <pre>
   * Used internally to calculate and track the current claim period's ending time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp claim_period_end_time = 14 [json_name = "claimPeriodEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return Whether the claimPeriodEndTime field is set.
   */
  boolean hasClaimPeriodEndTime();
  /**
   * <pre>
   * Used internally to calculate and track the current claim period's ending time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp claim_period_end_time = 14 [json_name = "claimPeriodEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return The claimPeriodEndTime.
   */
  com.google.protobuf.Timestamp getClaimPeriodEndTime();
  /**
   * <pre>
   * Used internally to calculate and track the current claim period's ending time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp claim_period_end_time = 14 [json_name = "claimPeriodEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getClaimPeriodEndTimeOrBuilder();

  /**
   * <pre>
   * Time the RewardProgram switched to FINISHED state. Initially set as empty.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp actual_program_end_time = 15 [json_name = "actualProgramEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return Whether the actualProgramEndTime field is set.
   */
  boolean hasActualProgramEndTime();
  /**
   * <pre>
   * Time the RewardProgram switched to FINISHED state. Initially set as empty.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp actual_program_end_time = 15 [json_name = "actualProgramEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return The actualProgramEndTime.
   */
  com.google.protobuf.Timestamp getActualProgramEndTime();
  /**
   * <pre>
   * Time the RewardProgram switched to FINISHED state. Initially set as empty.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp actual_program_end_time = 15 [json_name = "actualProgramEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getActualProgramEndTimeOrBuilder();

  /**
   * <pre>
   * Number of claim periods this program will run for.
   * </pre>
   *
   * <code>uint64 claim_periods = 16 [json_name = "claimPeriods"];</code>
   * @return The claimPeriods.
   */
  long getClaimPeriods();

  /**
   * <pre>
   * Current claim period of the RewardProgram. Uses 1-based indexing.
   * </pre>
   *
   * <code>uint64 current_claim_period = 17 [json_name = "currentClaimPeriod"];</code>
   * @return The currentClaimPeriod.
   */
  long getCurrentClaimPeriod();

  /**
   * <pre>
   * maximum number of claim periods a reward program can rollover.
   * </pre>
   *
   * <code>uint64 max_rollover_claim_periods = 18 [json_name = "maxRolloverClaimPeriods"];</code>
   * @return The maxRolloverClaimPeriods.
   */
  long getMaxRolloverClaimPeriods();

  /**
   * <pre>
   * Current state of the RewardProgram.
   * </pre>
   *
   * <code>.provenance.reward.v1.RewardProgram.State state = 19 [json_name = "state"];</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <pre>
   * Current state of the RewardProgram.
   * </pre>
   *
   * <code>.provenance.reward.v1.RewardProgram.State state = 19 [json_name = "state"];</code>
   * @return The state.
   */
  com.provenance.reward.v1.RewardProgram.State getState();

  /**
   * <pre>
   * Grace period after a RewardProgram FINISHED. It is the number of seconds until a RewardProgram enters the EXPIRED
   * state.
   * </pre>
   *
   * <code>uint64 expiration_offset = 20 [json_name = "expirationOffset"];</code>
   * @return The expirationOffset.
   */
  long getExpirationOffset();

  /**
   * <pre>
   * Actions that count towards the reward.
   * </pre>
   *
   * <code>repeated .provenance.reward.v1.QualifyingAction qualifying_actions = 21 [json_name = "qualifyingActions", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<com.provenance.reward.v1.QualifyingAction> 
      getQualifyingActionsList();
  /**
   * <pre>
   * Actions that count towards the reward.
   * </pre>
   *
   * <code>repeated .provenance.reward.v1.QualifyingAction qualifying_actions = 21 [json_name = "qualifyingActions", (.gogoproto.nullable) = false];</code>
   */
  com.provenance.reward.v1.QualifyingAction getQualifyingActions(int index);
  /**
   * <pre>
   * Actions that count towards the reward.
   * </pre>
   *
   * <code>repeated .provenance.reward.v1.QualifyingAction qualifying_actions = 21 [json_name = "qualifyingActions", (.gogoproto.nullable) = false];</code>
   */
  int getQualifyingActionsCount();
  /**
   * <pre>
   * Actions that count towards the reward.
   * </pre>
   *
   * <code>repeated .provenance.reward.v1.QualifyingAction qualifying_actions = 21 [json_name = "qualifyingActions", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<? extends com.provenance.reward.v1.QualifyingActionOrBuilder> 
      getQualifyingActionsOrBuilderList();
  /**
   * <pre>
   * Actions that count towards the reward.
   * </pre>
   *
   * <code>repeated .provenance.reward.v1.QualifyingAction qualifying_actions = 21 [json_name = "qualifyingActions", (.gogoproto.nullable) = false];</code>
   */
  com.provenance.reward.v1.QualifyingActionOrBuilder getQualifyingActionsOrBuilder(
      int index);
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/attribute/v1/attribute.proto

package com.provenance.attribute.v1;

public interface AttributeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.attribute.v1.Attribute)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The attribute name.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The attribute name.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The attribute value.
   * </pre>
   *
   * <code>bytes value = 2 [json_name = "value"];</code>
   * @return The value.
   */
  com.google.protobuf.ByteString getValue();

  /**
   * <pre>
   * The attribute value type.
   * </pre>
   *
   * <code>.provenance.attribute.v1.AttributeType attribute_type = 3 [json_name = "attributeType"];</code>
   * @return The enum numeric value on the wire for attributeType.
   */
  int getAttributeTypeValue();
  /**
   * <pre>
   * The attribute value type.
   * </pre>
   *
   * <code>.provenance.attribute.v1.AttributeType attribute_type = 3 [json_name = "attributeType"];</code>
   * @return The attributeType.
   */
  com.provenance.attribute.v1.AttributeType getAttributeType();

  /**
   * <pre>
   * The address the attribute is bound to
   * </pre>
   *
   * <code>string address = 4 [json_name = "address"];</code>
   * @return The address.
   */
  java.lang.String getAddress();
  /**
   * <pre>
   * The address the attribute is bound to
   * </pre>
   *
   * <code>string address = 4 [json_name = "address"];</code>
   * @return The bytes for address.
   */
  com.google.protobuf.ByteString
      getAddressBytes();

  /**
   * <pre>
   * Time that an attribute will expire.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration_date = 5 [json_name = "expirationDate", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true];</code>
   * @return Whether the expirationDate field is set.
   */
  boolean hasExpirationDate();
  /**
   * <pre>
   * Time that an attribute will expire.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration_date = 5 [json_name = "expirationDate", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true];</code>
   * @return The expirationDate.
   */
  com.google.protobuf.Timestamp getExpirationDate();
  /**
   * <pre>
   * Time that an attribute will expire.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration_date = 5 [json_name = "expirationDate", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getExpirationDateOrBuilder();
}

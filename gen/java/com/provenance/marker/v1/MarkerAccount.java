// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/marker/v1/marker.proto

package com.provenance.marker.v1;

/**
 * <pre>
 * MarkerAccount holds the marker configuration information in addition to a base account structure.
 * </pre>
 *
 * Protobuf type {@code provenance.marker.v1.MarkerAccount}
 */
public final class MarkerAccount extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:provenance.marker.v1.MarkerAccount)
    MarkerAccountOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MarkerAccount.newBuilder() to construct.
  private MarkerAccount(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MarkerAccount() {
    manager_ = "";
    accessControl_ = java.util.Collections.emptyList();
    status_ = 0;
    denom_ = "";
    supply_ = "";
    markerType_ = 0;
    requiredAttributes_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MarkerAccount();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.provenance.marker.v1.MarkerProto.internal_static_provenance_marker_v1_MarkerAccount_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.provenance.marker.v1.MarkerProto.internal_static_provenance_marker_v1_MarkerAccount_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.provenance.marker.v1.MarkerAccount.class, com.provenance.marker.v1.MarkerAccount.Builder.class);
  }

  public static final int BASE_ACCOUNT_FIELD_NUMBER = 1;
  private com.cosmos.auth.v1beta1.BaseAccount baseAccount_;
  /**
   * <pre>
   * base cosmos account information including address and coin holdings.
   * </pre>
   *
   * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
   * @return Whether the baseAccount field is set.
   */
  @java.lang.Override
  public boolean hasBaseAccount() {
    return baseAccount_ != null;
  }
  /**
   * <pre>
   * base cosmos account information including address and coin holdings.
   * </pre>
   *
   * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
   * @return The baseAccount.
   */
  @java.lang.Override
  public com.cosmos.auth.v1beta1.BaseAccount getBaseAccount() {
    return baseAccount_ == null ? com.cosmos.auth.v1beta1.BaseAccount.getDefaultInstance() : baseAccount_;
  }
  /**
   * <pre>
   * base cosmos account information including address and coin holdings.
   * </pre>
   *
   * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
   */
  @java.lang.Override
  public com.cosmos.auth.v1beta1.BaseAccountOrBuilder getBaseAccountOrBuilder() {
    return baseAccount_ == null ? com.cosmos.auth.v1beta1.BaseAccount.getDefaultInstance() : baseAccount_;
  }

  public static final int MANAGER_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object manager_ = "";
  /**
   * <pre>
   * Address that owns the marker configuration.  This account must sign any requests
   * to change marker config (only valid for statuses prior to finalization)
   * </pre>
   *
   * <code>string manager = 2 [json_name = "manager", (.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
   * @return The manager.
   */
  @java.lang.Override
  public java.lang.String getManager() {
    java.lang.Object ref = manager_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      manager_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Address that owns the marker configuration.  This account must sign any requests
   * to change marker config (only valid for statuses prior to finalization)
   * </pre>
   *
   * <code>string manager = 2 [json_name = "manager", (.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
   * @return The bytes for manager.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getManagerBytes() {
    java.lang.Object ref = manager_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      manager_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ACCESS_CONTROL_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.provenance.marker.v1.AccessGrant> accessControl_;
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<com.provenance.marker.v1.AccessGrant> getAccessControlList() {
    return accessControl_;
  }
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.provenance.marker.v1.AccessGrantOrBuilder> 
      getAccessControlOrBuilderList() {
    return accessControl_;
  }
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public int getAccessControlCount() {
    return accessControl_.size();
  }
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.provenance.marker.v1.AccessGrant getAccessControl(int index) {
    return accessControl_.get(index);
  }
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.provenance.marker.v1.AccessGrantOrBuilder getAccessControlOrBuilder(
      int index) {
    return accessControl_.get(index);
  }

  public static final int STATUS_FIELD_NUMBER = 4;
  private int status_ = 0;
  /**
   * <pre>
   * Indicates the current status of this marker record.
   * </pre>
   *
   * <code>.provenance.marker.v1.MarkerStatus status = 4 [json_name = "status"];</code>
   * @return The enum numeric value on the wire for status.
   */
  @java.lang.Override public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   * Indicates the current status of this marker record.
   * </pre>
   *
   * <code>.provenance.marker.v1.MarkerStatus status = 4 [json_name = "status"];</code>
   * @return The status.
   */
  @java.lang.Override public com.provenance.marker.v1.MarkerStatus getStatus() {
    com.provenance.marker.v1.MarkerStatus result = com.provenance.marker.v1.MarkerStatus.forNumber(status_);
    return result == null ? com.provenance.marker.v1.MarkerStatus.UNRECOGNIZED : result;
  }

  public static final int DENOM_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object denom_ = "";
  /**
   * <pre>
   * value denomination and total supply for the token.
   * </pre>
   *
   * <code>string denom = 5 [json_name = "denom"];</code>
   * @return The denom.
   */
  @java.lang.Override
  public java.lang.String getDenom() {
    java.lang.Object ref = denom_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      denom_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * value denomination and total supply for the token.
   * </pre>
   *
   * <code>string denom = 5 [json_name = "denom"];</code>
   * @return The bytes for denom.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDenomBytes() {
    java.lang.Object ref = denom_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      denom_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SUPPLY_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object supply_ = "";
  /**
   * <pre>
   * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
   * </pre>
   *
   * <code>string supply = 6 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
   * @return The supply.
   */
  @java.lang.Override
  public java.lang.String getSupply() {
    java.lang.Object ref = supply_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      supply_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
   * </pre>
   *
   * <code>string supply = 6 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
   * @return The bytes for supply.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSupplyBytes() {
    java.lang.Object ref = supply_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      supply_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MARKER_TYPE_FIELD_NUMBER = 7;
  private int markerType_ = 0;
  /**
   * <pre>
   * Marker type information
   * </pre>
   *
   * <code>.provenance.marker.v1.MarkerType marker_type = 7 [json_name = "markerType", (.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
   * @return The enum numeric value on the wire for markerType.
   */
  @java.lang.Override public int getMarkerTypeValue() {
    return markerType_;
  }
  /**
   * <pre>
   * Marker type information
   * </pre>
   *
   * <code>.provenance.marker.v1.MarkerType marker_type = 7 [json_name = "markerType", (.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
   * @return The markerType.
   */
  @java.lang.Override public com.provenance.marker.v1.MarkerType getMarkerType() {
    com.provenance.marker.v1.MarkerType result = com.provenance.marker.v1.MarkerType.forNumber(markerType_);
    return result == null ? com.provenance.marker.v1.MarkerType.UNRECOGNIZED : result;
  }

  public static final int SUPPLY_FIXED_FIELD_NUMBER = 8;
  private boolean supplyFixed_ = false;
  /**
   * <pre>
   * A fixed supply will mint additional coin automatically if the total supply decreases below a set value.  This
   * may occur if the coin is burned or an account holding the coin is slashed. (default: true)
   * </pre>
   *
   * <code>bool supply_fixed = 8 [json_name = "supplyFixed"];</code>
   * @return The supplyFixed.
   */
  @java.lang.Override
  public boolean getSupplyFixed() {
    return supplyFixed_;
  }

  public static final int ALLOW_GOVERNANCE_CONTROL_FIELD_NUMBER = 9;
  private boolean allowGovernanceControl_ = false;
  /**
   * <pre>
   * indicates that governance based control is allowed for this marker
   * </pre>
   *
   * <code>bool allow_governance_control = 9 [json_name = "allowGovernanceControl"];</code>
   * @return The allowGovernanceControl.
   */
  @java.lang.Override
  public boolean getAllowGovernanceControl() {
    return allowGovernanceControl_;
  }

  public static final int ALLOW_FORCED_TRANSFER_FIELD_NUMBER = 10;
  private boolean allowForcedTransfer_ = false;
  /**
   * <pre>
   * Whether an admin can transfer restricted coins from a 3rd-party account without their signature.
   * </pre>
   *
   * <code>bool allow_forced_transfer = 10 [json_name = "allowForcedTransfer"];</code>
   * @return The allowForcedTransfer.
   */
  @java.lang.Override
  public boolean getAllowForcedTransfer() {
    return allowForcedTransfer_;
  }

  public static final int REQUIRED_ATTRIBUTES_FIELD_NUMBER = 11;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList requiredAttributes_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
   * transfer authority
   * </pre>
   *
   * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
   * @return A list containing the requiredAttributes.
   */
  public com.google.protobuf.ProtocolStringList
      getRequiredAttributesList() {
    return requiredAttributes_;
  }
  /**
   * <pre>
   * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
   * transfer authority
   * </pre>
   *
   * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
   * @return The count of requiredAttributes.
   */
  public int getRequiredAttributesCount() {
    return requiredAttributes_.size();
  }
  /**
   * <pre>
   * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
   * transfer authority
   * </pre>
   *
   * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
   * @param index The index of the element to return.
   * @return The requiredAttributes at the given index.
   */
  public java.lang.String getRequiredAttributes(int index) {
    return requiredAttributes_.get(index);
  }
  /**
   * <pre>
   * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
   * transfer authority
   * </pre>
   *
   * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the requiredAttributes at the given index.
   */
  public com.google.protobuf.ByteString
      getRequiredAttributesBytes(int index) {
    return requiredAttributes_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (baseAccount_ != null) {
      output.writeMessage(1, getBaseAccount());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(manager_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, manager_);
    }
    for (int i = 0; i < accessControl_.size(); i++) {
      output.writeMessage(3, accessControl_.get(i));
    }
    if (status_ != com.provenance.marker.v1.MarkerStatus.MARKER_STATUS_UNSPECIFIED.getNumber()) {
      output.writeEnum(4, status_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(denom_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, denom_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(supply_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, supply_);
    }
    if (markerType_ != com.provenance.marker.v1.MarkerType.MARKER_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(7, markerType_);
    }
    if (supplyFixed_ != false) {
      output.writeBool(8, supplyFixed_);
    }
    if (allowGovernanceControl_ != false) {
      output.writeBool(9, allowGovernanceControl_);
    }
    if (allowForcedTransfer_ != false) {
      output.writeBool(10, allowForcedTransfer_);
    }
    for (int i = 0; i < requiredAttributes_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, requiredAttributes_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (baseAccount_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBaseAccount());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(manager_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, manager_);
    }
    for (int i = 0; i < accessControl_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, accessControl_.get(i));
    }
    if (status_ != com.provenance.marker.v1.MarkerStatus.MARKER_STATUS_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, status_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(denom_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, denom_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(supply_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, supply_);
    }
    if (markerType_ != com.provenance.marker.v1.MarkerType.MARKER_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, markerType_);
    }
    if (supplyFixed_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, supplyFixed_);
    }
    if (allowGovernanceControl_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, allowGovernanceControl_);
    }
    if (allowForcedTransfer_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, allowForcedTransfer_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < requiredAttributes_.size(); i++) {
        dataSize += computeStringSizeNoTag(requiredAttributes_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getRequiredAttributesList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.provenance.marker.v1.MarkerAccount)) {
      return super.equals(obj);
    }
    com.provenance.marker.v1.MarkerAccount other = (com.provenance.marker.v1.MarkerAccount) obj;

    if (hasBaseAccount() != other.hasBaseAccount()) return false;
    if (hasBaseAccount()) {
      if (!getBaseAccount()
          .equals(other.getBaseAccount())) return false;
    }
    if (!getManager()
        .equals(other.getManager())) return false;
    if (!getAccessControlList()
        .equals(other.getAccessControlList())) return false;
    if (status_ != other.status_) return false;
    if (!getDenom()
        .equals(other.getDenom())) return false;
    if (!getSupply()
        .equals(other.getSupply())) return false;
    if (markerType_ != other.markerType_) return false;
    if (getSupplyFixed()
        != other.getSupplyFixed()) return false;
    if (getAllowGovernanceControl()
        != other.getAllowGovernanceControl()) return false;
    if (getAllowForcedTransfer()
        != other.getAllowForcedTransfer()) return false;
    if (!getRequiredAttributesList()
        .equals(other.getRequiredAttributesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBaseAccount()) {
      hash = (37 * hash) + BASE_ACCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getBaseAccount().hashCode();
    }
    hash = (37 * hash) + MANAGER_FIELD_NUMBER;
    hash = (53 * hash) + getManager().hashCode();
    if (getAccessControlCount() > 0) {
      hash = (37 * hash) + ACCESS_CONTROL_FIELD_NUMBER;
      hash = (53 * hash) + getAccessControlList().hashCode();
    }
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    hash = (37 * hash) + DENOM_FIELD_NUMBER;
    hash = (53 * hash) + getDenom().hashCode();
    hash = (37 * hash) + SUPPLY_FIELD_NUMBER;
    hash = (53 * hash) + getSupply().hashCode();
    hash = (37 * hash) + MARKER_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + markerType_;
    hash = (37 * hash) + SUPPLY_FIXED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSupplyFixed());
    hash = (37 * hash) + ALLOW_GOVERNANCE_CONTROL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllowGovernanceControl());
    hash = (37 * hash) + ALLOW_FORCED_TRANSFER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllowForcedTransfer());
    if (getRequiredAttributesCount() > 0) {
      hash = (37 * hash) + REQUIRED_ATTRIBUTES_FIELD_NUMBER;
      hash = (53 * hash) + getRequiredAttributesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.provenance.marker.v1.MarkerAccount parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.provenance.marker.v1.MarkerAccount parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.provenance.marker.v1.MarkerAccount parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.provenance.marker.v1.MarkerAccount parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.provenance.marker.v1.MarkerAccount parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.provenance.marker.v1.MarkerAccount parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.provenance.marker.v1.MarkerAccount parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.provenance.marker.v1.MarkerAccount parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.provenance.marker.v1.MarkerAccount parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.provenance.marker.v1.MarkerAccount parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.provenance.marker.v1.MarkerAccount parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.provenance.marker.v1.MarkerAccount parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.provenance.marker.v1.MarkerAccount prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * MarkerAccount holds the marker configuration information in addition to a base account structure.
   * </pre>
   *
   * Protobuf type {@code provenance.marker.v1.MarkerAccount}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:provenance.marker.v1.MarkerAccount)
      com.provenance.marker.v1.MarkerAccountOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.provenance.marker.v1.MarkerProto.internal_static_provenance_marker_v1_MarkerAccount_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.provenance.marker.v1.MarkerProto.internal_static_provenance_marker_v1_MarkerAccount_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.provenance.marker.v1.MarkerAccount.class, com.provenance.marker.v1.MarkerAccount.Builder.class);
    }

    // Construct using com.provenance.marker.v1.MarkerAccount.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      baseAccount_ = null;
      if (baseAccountBuilder_ != null) {
        baseAccountBuilder_.dispose();
        baseAccountBuilder_ = null;
      }
      manager_ = "";
      if (accessControlBuilder_ == null) {
        accessControl_ = java.util.Collections.emptyList();
      } else {
        accessControl_ = null;
        accessControlBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      status_ = 0;
      denom_ = "";
      supply_ = "";
      markerType_ = 0;
      supplyFixed_ = false;
      allowGovernanceControl_ = false;
      allowForcedTransfer_ = false;
      requiredAttributes_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.provenance.marker.v1.MarkerProto.internal_static_provenance_marker_v1_MarkerAccount_descriptor;
    }

    @java.lang.Override
    public com.provenance.marker.v1.MarkerAccount getDefaultInstanceForType() {
      return com.provenance.marker.v1.MarkerAccount.getDefaultInstance();
    }

    @java.lang.Override
    public com.provenance.marker.v1.MarkerAccount build() {
      com.provenance.marker.v1.MarkerAccount result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.provenance.marker.v1.MarkerAccount buildPartial() {
      com.provenance.marker.v1.MarkerAccount result = new com.provenance.marker.v1.MarkerAccount(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.provenance.marker.v1.MarkerAccount result) {
      if (accessControlBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          accessControl_ = java.util.Collections.unmodifiableList(accessControl_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.accessControl_ = accessControl_;
      } else {
        result.accessControl_ = accessControlBuilder_.build();
      }
    }

    private void buildPartial0(com.provenance.marker.v1.MarkerAccount result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.baseAccount_ = baseAccountBuilder_ == null
            ? baseAccount_
            : baseAccountBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.manager_ = manager_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.status_ = status_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.denom_ = denom_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.supply_ = supply_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.markerType_ = markerType_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.supplyFixed_ = supplyFixed_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.allowGovernanceControl_ = allowGovernanceControl_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.allowForcedTransfer_ = allowForcedTransfer_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        requiredAttributes_.makeImmutable();
        result.requiredAttributes_ = requiredAttributes_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.provenance.marker.v1.MarkerAccount) {
        return mergeFrom((com.provenance.marker.v1.MarkerAccount)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.provenance.marker.v1.MarkerAccount other) {
      if (other == com.provenance.marker.v1.MarkerAccount.getDefaultInstance()) return this;
      if (other.hasBaseAccount()) {
        mergeBaseAccount(other.getBaseAccount());
      }
      if (!other.getManager().isEmpty()) {
        manager_ = other.manager_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (accessControlBuilder_ == null) {
        if (!other.accessControl_.isEmpty()) {
          if (accessControl_.isEmpty()) {
            accessControl_ = other.accessControl_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAccessControlIsMutable();
            accessControl_.addAll(other.accessControl_);
          }
          onChanged();
        }
      } else {
        if (!other.accessControl_.isEmpty()) {
          if (accessControlBuilder_.isEmpty()) {
            accessControlBuilder_.dispose();
            accessControlBuilder_ = null;
            accessControl_ = other.accessControl_;
            bitField0_ = (bitField0_ & ~0x00000004);
            accessControlBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAccessControlFieldBuilder() : null;
          } else {
            accessControlBuilder_.addAllMessages(other.accessControl_);
          }
        }
      }
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      if (!other.getDenom().isEmpty()) {
        denom_ = other.denom_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (!other.getSupply().isEmpty()) {
        supply_ = other.supply_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (other.markerType_ != 0) {
        setMarkerTypeValue(other.getMarkerTypeValue());
      }
      if (other.getSupplyFixed() != false) {
        setSupplyFixed(other.getSupplyFixed());
      }
      if (other.getAllowGovernanceControl() != false) {
        setAllowGovernanceControl(other.getAllowGovernanceControl());
      }
      if (other.getAllowForcedTransfer() != false) {
        setAllowForcedTransfer(other.getAllowForcedTransfer());
      }
      if (!other.requiredAttributes_.isEmpty()) {
        if (requiredAttributes_.isEmpty()) {
          requiredAttributes_ = other.requiredAttributes_;
          bitField0_ |= 0x00000400;
        } else {
          ensureRequiredAttributesIsMutable();
          requiredAttributes_.addAll(other.requiredAttributes_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getBaseAccountFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              manager_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.provenance.marker.v1.AccessGrant m =
                  input.readMessage(
                      com.provenance.marker.v1.AccessGrant.parser(),
                      extensionRegistry);
              if (accessControlBuilder_ == null) {
                ensureAccessControlIsMutable();
                accessControl_.add(m);
              } else {
                accessControlBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 32: {
              status_ = input.readEnum();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              denom_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              supply_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 56: {
              markerType_ = input.readEnum();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              supplyFixed_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              allowGovernanceControl_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              allowForcedTransfer_ = input.readBool();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureRequiredAttributesIsMutable();
              requiredAttributes_.add(s);
              break;
            } // case 90
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.cosmos.auth.v1beta1.BaseAccount baseAccount_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.auth.v1beta1.BaseAccount, com.cosmos.auth.v1beta1.BaseAccount.Builder, com.cosmos.auth.v1beta1.BaseAccountOrBuilder> baseAccountBuilder_;
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     * @return Whether the baseAccount field is set.
     */
    public boolean hasBaseAccount() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     * @return The baseAccount.
     */
    public com.cosmos.auth.v1beta1.BaseAccount getBaseAccount() {
      if (baseAccountBuilder_ == null) {
        return baseAccount_ == null ? com.cosmos.auth.v1beta1.BaseAccount.getDefaultInstance() : baseAccount_;
      } else {
        return baseAccountBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    public Builder setBaseAccount(com.cosmos.auth.v1beta1.BaseAccount value) {
      if (baseAccountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        baseAccount_ = value;
      } else {
        baseAccountBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    public Builder setBaseAccount(
        com.cosmos.auth.v1beta1.BaseAccount.Builder builderForValue) {
      if (baseAccountBuilder_ == null) {
        baseAccount_ = builderForValue.build();
      } else {
        baseAccountBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    public Builder mergeBaseAccount(com.cosmos.auth.v1beta1.BaseAccount value) {
      if (baseAccountBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          baseAccount_ != null &&
          baseAccount_ != com.cosmos.auth.v1beta1.BaseAccount.getDefaultInstance()) {
          getBaseAccountBuilder().mergeFrom(value);
        } else {
          baseAccount_ = value;
        }
      } else {
        baseAccountBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    public Builder clearBaseAccount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      baseAccount_ = null;
      if (baseAccountBuilder_ != null) {
        baseAccountBuilder_.dispose();
        baseAccountBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    public com.cosmos.auth.v1beta1.BaseAccount.Builder getBaseAccountBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getBaseAccountFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    public com.cosmos.auth.v1beta1.BaseAccountOrBuilder getBaseAccountOrBuilder() {
      if (baseAccountBuilder_ != null) {
        return baseAccountBuilder_.getMessageOrBuilder();
      } else {
        return baseAccount_ == null ?
            com.cosmos.auth.v1beta1.BaseAccount.getDefaultInstance() : baseAccount_;
      }
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.auth.v1beta1.BaseAccount, com.cosmos.auth.v1beta1.BaseAccount.Builder, com.cosmos.auth.v1beta1.BaseAccountOrBuilder> 
        getBaseAccountFieldBuilder() {
      if (baseAccountBuilder_ == null) {
        baseAccountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.cosmos.auth.v1beta1.BaseAccount, com.cosmos.auth.v1beta1.BaseAccount.Builder, com.cosmos.auth.v1beta1.BaseAccountOrBuilder>(
                getBaseAccount(),
                getParentForChildren(),
                isClean());
        baseAccount_ = null;
      }
      return baseAccountBuilder_;
    }

    private java.lang.Object manager_ = "";
    /**
     * <pre>
     * Address that owns the marker configuration.  This account must sign any requests
     * to change marker config (only valid for statuses prior to finalization)
     * </pre>
     *
     * <code>string manager = 2 [json_name = "manager", (.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
     * @return The manager.
     */
    public java.lang.String getManager() {
      java.lang.Object ref = manager_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        manager_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Address that owns the marker configuration.  This account must sign any requests
     * to change marker config (only valid for statuses prior to finalization)
     * </pre>
     *
     * <code>string manager = 2 [json_name = "manager", (.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
     * @return The bytes for manager.
     */
    public com.google.protobuf.ByteString
        getManagerBytes() {
      java.lang.Object ref = manager_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        manager_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Address that owns the marker configuration.  This account must sign any requests
     * to change marker config (only valid for statuses prior to finalization)
     * </pre>
     *
     * <code>string manager = 2 [json_name = "manager", (.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
     * @param value The manager to set.
     * @return This builder for chaining.
     */
    public Builder setManager(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      manager_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Address that owns the marker configuration.  This account must sign any requests
     * to change marker config (only valid for statuses prior to finalization)
     * </pre>
     *
     * <code>string manager = 2 [json_name = "manager", (.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearManager() {
      manager_ = getDefaultInstance().getManager();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Address that owns the marker configuration.  This account must sign any requests
     * to change marker config (only valid for statuses prior to finalization)
     * </pre>
     *
     * <code>string manager = 2 [json_name = "manager", (.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
     * @param value The bytes for manager to set.
     * @return This builder for chaining.
     */
    public Builder setManagerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      manager_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.util.List<com.provenance.marker.v1.AccessGrant> accessControl_ =
      java.util.Collections.emptyList();
    private void ensureAccessControlIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        accessControl_ = new java.util.ArrayList<com.provenance.marker.v1.AccessGrant>(accessControl_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.provenance.marker.v1.AccessGrant, com.provenance.marker.v1.AccessGrant.Builder, com.provenance.marker.v1.AccessGrantOrBuilder> accessControlBuilder_;

    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.provenance.marker.v1.AccessGrant> getAccessControlList() {
      if (accessControlBuilder_ == null) {
        return java.util.Collections.unmodifiableList(accessControl_);
      } else {
        return accessControlBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public int getAccessControlCount() {
      if (accessControlBuilder_ == null) {
        return accessControl_.size();
      } else {
        return accessControlBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public com.provenance.marker.v1.AccessGrant getAccessControl(int index) {
      if (accessControlBuilder_ == null) {
        return accessControl_.get(index);
      } else {
        return accessControlBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public Builder setAccessControl(
        int index, com.provenance.marker.v1.AccessGrant value) {
      if (accessControlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessControlIsMutable();
        accessControl_.set(index, value);
        onChanged();
      } else {
        accessControlBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public Builder setAccessControl(
        int index, com.provenance.marker.v1.AccessGrant.Builder builderForValue) {
      if (accessControlBuilder_ == null) {
        ensureAccessControlIsMutable();
        accessControl_.set(index, builderForValue.build());
        onChanged();
      } else {
        accessControlBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAccessControl(com.provenance.marker.v1.AccessGrant value) {
      if (accessControlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessControlIsMutable();
        accessControl_.add(value);
        onChanged();
      } else {
        accessControlBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAccessControl(
        int index, com.provenance.marker.v1.AccessGrant value) {
      if (accessControlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessControlIsMutable();
        accessControl_.add(index, value);
        onChanged();
      } else {
        accessControlBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAccessControl(
        com.provenance.marker.v1.AccessGrant.Builder builderForValue) {
      if (accessControlBuilder_ == null) {
        ensureAccessControlIsMutable();
        accessControl_.add(builderForValue.build());
        onChanged();
      } else {
        accessControlBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAccessControl(
        int index, com.provenance.marker.v1.AccessGrant.Builder builderForValue) {
      if (accessControlBuilder_ == null) {
        ensureAccessControlIsMutable();
        accessControl_.add(index, builderForValue.build());
        onChanged();
      } else {
        accessControlBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAllAccessControl(
        java.lang.Iterable<? extends com.provenance.marker.v1.AccessGrant> values) {
      if (accessControlBuilder_ == null) {
        ensureAccessControlIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, accessControl_);
        onChanged();
      } else {
        accessControlBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearAccessControl() {
      if (accessControlBuilder_ == null) {
        accessControl_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        accessControlBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public Builder removeAccessControl(int index) {
      if (accessControlBuilder_ == null) {
        ensureAccessControlIsMutable();
        accessControl_.remove(index);
        onChanged();
      } else {
        accessControlBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public com.provenance.marker.v1.AccessGrant.Builder getAccessControlBuilder(
        int index) {
      return getAccessControlFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public com.provenance.marker.v1.AccessGrantOrBuilder getAccessControlOrBuilder(
        int index) {
      if (accessControlBuilder_ == null) {
        return accessControl_.get(index);  } else {
        return accessControlBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<? extends com.provenance.marker.v1.AccessGrantOrBuilder> 
         getAccessControlOrBuilderList() {
      if (accessControlBuilder_ != null) {
        return accessControlBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(accessControl_);
      }
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public com.provenance.marker.v1.AccessGrant.Builder addAccessControlBuilder() {
      return getAccessControlFieldBuilder().addBuilder(
          com.provenance.marker.v1.AccessGrant.getDefaultInstance());
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public com.provenance.marker.v1.AccessGrant.Builder addAccessControlBuilder(
        int index) {
      return getAccessControlFieldBuilder().addBuilder(
          index, com.provenance.marker.v1.AccessGrant.getDefaultInstance());
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.provenance.marker.v1.AccessGrant.Builder> 
         getAccessControlBuilderList() {
      return getAccessControlFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.provenance.marker.v1.AccessGrant, com.provenance.marker.v1.AccessGrant.Builder, com.provenance.marker.v1.AccessGrantOrBuilder> 
        getAccessControlFieldBuilder() {
      if (accessControlBuilder_ == null) {
        accessControlBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.provenance.marker.v1.AccessGrant, com.provenance.marker.v1.AccessGrant.Builder, com.provenance.marker.v1.AccessGrantOrBuilder>(
                accessControl_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        accessControl_ = null;
      }
      return accessControlBuilder_;
    }

    private int status_ = 0;
    /**
     * <pre>
     * Indicates the current status of this marker record.
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerStatus status = 4 [json_name = "status"];</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * Indicates the current status of this marker record.
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerStatus status = 4 [json_name = "status"];</code>
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatusValue(int value) {
      status_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the current status of this marker record.
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerStatus status = 4 [json_name = "status"];</code>
     * @return The status.
     */
    @java.lang.Override
    public com.provenance.marker.v1.MarkerStatus getStatus() {
      com.provenance.marker.v1.MarkerStatus result = com.provenance.marker.v1.MarkerStatus.forNumber(status_);
      return result == null ? com.provenance.marker.v1.MarkerStatus.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Indicates the current status of this marker record.
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerStatus status = 4 [json_name = "status"];</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(com.provenance.marker.v1.MarkerStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the current status of this marker record.
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerStatus status = 4 [json_name = "status"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000008);
      status_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object denom_ = "";
    /**
     * <pre>
     * value denomination and total supply for the token.
     * </pre>
     *
     * <code>string denom = 5 [json_name = "denom"];</code>
     * @return The denom.
     */
    public java.lang.String getDenom() {
      java.lang.Object ref = denom_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        denom_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * value denomination and total supply for the token.
     * </pre>
     *
     * <code>string denom = 5 [json_name = "denom"];</code>
     * @return The bytes for denom.
     */
    public com.google.protobuf.ByteString
        getDenomBytes() {
      java.lang.Object ref = denom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        denom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * value denomination and total supply for the token.
     * </pre>
     *
     * <code>string denom = 5 [json_name = "denom"];</code>
     * @param value The denom to set.
     * @return This builder for chaining.
     */
    public Builder setDenom(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      denom_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * value denomination and total supply for the token.
     * </pre>
     *
     * <code>string denom = 5 [json_name = "denom"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDenom() {
      denom_ = getDefaultInstance().getDenom();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * value denomination and total supply for the token.
     * </pre>
     *
     * <code>string denom = 5 [json_name = "denom"];</code>
     * @param value The bytes for denom to set.
     * @return This builder for chaining.
     */
    public Builder setDenomBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      denom_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private java.lang.Object supply_ = "";
    /**
     * <pre>
     * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
     * </pre>
     *
     * <code>string supply = 6 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
     * @return The supply.
     */
    public java.lang.String getSupply() {
      java.lang.Object ref = supply_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        supply_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
     * </pre>
     *
     * <code>string supply = 6 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
     * @return The bytes for supply.
     */
    public com.google.protobuf.ByteString
        getSupplyBytes() {
      java.lang.Object ref = supply_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        supply_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
     * </pre>
     *
     * <code>string supply = 6 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
     * @param value The supply to set.
     * @return This builder for chaining.
     */
    public Builder setSupply(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      supply_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
     * </pre>
     *
     * <code>string supply = 6 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearSupply() {
      supply_ = getDefaultInstance().getSupply();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
     * </pre>
     *
     * <code>string supply = 6 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
     * @param value The bytes for supply to set.
     * @return This builder for chaining.
     */
    public Builder setSupplyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      supply_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private int markerType_ = 0;
    /**
     * <pre>
     * Marker type information
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerType marker_type = 7 [json_name = "markerType", (.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
     * @return The enum numeric value on the wire for markerType.
     */
    @java.lang.Override public int getMarkerTypeValue() {
      return markerType_;
    }
    /**
     * <pre>
     * Marker type information
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerType marker_type = 7 [json_name = "markerType", (.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
     * @param value The enum numeric value on the wire for markerType to set.
     * @return This builder for chaining.
     */
    public Builder setMarkerTypeValue(int value) {
      markerType_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Marker type information
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerType marker_type = 7 [json_name = "markerType", (.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
     * @return The markerType.
     */
    @java.lang.Override
    public com.provenance.marker.v1.MarkerType getMarkerType() {
      com.provenance.marker.v1.MarkerType result = com.provenance.marker.v1.MarkerType.forNumber(markerType_);
      return result == null ? com.provenance.marker.v1.MarkerType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Marker type information
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerType marker_type = 7 [json_name = "markerType", (.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
     * @param value The markerType to set.
     * @return This builder for chaining.
     */
    public Builder setMarkerType(com.provenance.marker.v1.MarkerType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      markerType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Marker type information
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerType marker_type = 7 [json_name = "markerType", (.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearMarkerType() {
      bitField0_ = (bitField0_ & ~0x00000040);
      markerType_ = 0;
      onChanged();
      return this;
    }

    private boolean supplyFixed_ ;
    /**
     * <pre>
     * A fixed supply will mint additional coin automatically if the total supply decreases below a set value.  This
     * may occur if the coin is burned or an account holding the coin is slashed. (default: true)
     * </pre>
     *
     * <code>bool supply_fixed = 8 [json_name = "supplyFixed"];</code>
     * @return The supplyFixed.
     */
    @java.lang.Override
    public boolean getSupplyFixed() {
      return supplyFixed_;
    }
    /**
     * <pre>
     * A fixed supply will mint additional coin automatically if the total supply decreases below a set value.  This
     * may occur if the coin is burned or an account holding the coin is slashed. (default: true)
     * </pre>
     *
     * <code>bool supply_fixed = 8 [json_name = "supplyFixed"];</code>
     * @param value The supplyFixed to set.
     * @return This builder for chaining.
     */
    public Builder setSupplyFixed(boolean value) {

      supplyFixed_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A fixed supply will mint additional coin automatically if the total supply decreases below a set value.  This
     * may occur if the coin is burned or an account holding the coin is slashed. (default: true)
     * </pre>
     *
     * <code>bool supply_fixed = 8 [json_name = "supplyFixed"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSupplyFixed() {
      bitField0_ = (bitField0_ & ~0x00000080);
      supplyFixed_ = false;
      onChanged();
      return this;
    }

    private boolean allowGovernanceControl_ ;
    /**
     * <pre>
     * indicates that governance based control is allowed for this marker
     * </pre>
     *
     * <code>bool allow_governance_control = 9 [json_name = "allowGovernanceControl"];</code>
     * @return The allowGovernanceControl.
     */
    @java.lang.Override
    public boolean getAllowGovernanceControl() {
      return allowGovernanceControl_;
    }
    /**
     * <pre>
     * indicates that governance based control is allowed for this marker
     * </pre>
     *
     * <code>bool allow_governance_control = 9 [json_name = "allowGovernanceControl"];</code>
     * @param value The allowGovernanceControl to set.
     * @return This builder for chaining.
     */
    public Builder setAllowGovernanceControl(boolean value) {

      allowGovernanceControl_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * indicates that governance based control is allowed for this marker
     * </pre>
     *
     * <code>bool allow_governance_control = 9 [json_name = "allowGovernanceControl"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowGovernanceControl() {
      bitField0_ = (bitField0_ & ~0x00000100);
      allowGovernanceControl_ = false;
      onChanged();
      return this;
    }

    private boolean allowForcedTransfer_ ;
    /**
     * <pre>
     * Whether an admin can transfer restricted coins from a 3rd-party account without their signature.
     * </pre>
     *
     * <code>bool allow_forced_transfer = 10 [json_name = "allowForcedTransfer"];</code>
     * @return The allowForcedTransfer.
     */
    @java.lang.Override
    public boolean getAllowForcedTransfer() {
      return allowForcedTransfer_;
    }
    /**
     * <pre>
     * Whether an admin can transfer restricted coins from a 3rd-party account without their signature.
     * </pre>
     *
     * <code>bool allow_forced_transfer = 10 [json_name = "allowForcedTransfer"];</code>
     * @param value The allowForcedTransfer to set.
     * @return This builder for chaining.
     */
    public Builder setAllowForcedTransfer(boolean value) {

      allowForcedTransfer_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether an admin can transfer restricted coins from a 3rd-party account without their signature.
     * </pre>
     *
     * <code>bool allow_forced_transfer = 10 [json_name = "allowForcedTransfer"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowForcedTransfer() {
      bitField0_ = (bitField0_ & ~0x00000200);
      allowForcedTransfer_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList requiredAttributes_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureRequiredAttributesIsMutable() {
      if (!requiredAttributes_.isModifiable()) {
        requiredAttributes_ = new com.google.protobuf.LazyStringArrayList(requiredAttributes_);
      }
      bitField0_ |= 0x00000400;
    }
    /**
     * <pre>
     * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
     * transfer authority
     * </pre>
     *
     * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
     * @return A list containing the requiredAttributes.
     */
    public com.google.protobuf.ProtocolStringList
        getRequiredAttributesList() {
      requiredAttributes_.makeImmutable();
      return requiredAttributes_;
    }
    /**
     * <pre>
     * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
     * transfer authority
     * </pre>
     *
     * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
     * @return The count of requiredAttributes.
     */
    public int getRequiredAttributesCount() {
      return requiredAttributes_.size();
    }
    /**
     * <pre>
     * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
     * transfer authority
     * </pre>
     *
     * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
     * @param index The index of the element to return.
     * @return The requiredAttributes at the given index.
     */
    public java.lang.String getRequiredAttributes(int index) {
      return requiredAttributes_.get(index);
    }
    /**
     * <pre>
     * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
     * transfer authority
     * </pre>
     *
     * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the requiredAttributes at the given index.
     */
    public com.google.protobuf.ByteString
        getRequiredAttributesBytes(int index) {
      return requiredAttributes_.getByteString(index);
    }
    /**
     * <pre>
     * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
     * transfer authority
     * </pre>
     *
     * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
     * @param index The index to set the value at.
     * @param value The requiredAttributes to set.
     * @return This builder for chaining.
     */
    public Builder setRequiredAttributes(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureRequiredAttributesIsMutable();
      requiredAttributes_.set(index, value);
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
     * transfer authority
     * </pre>
     *
     * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
     * @param value The requiredAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addRequiredAttributes(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureRequiredAttributesIsMutable();
      requiredAttributes_.add(value);
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
     * transfer authority
     * </pre>
     *
     * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
     * @param values The requiredAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addAllRequiredAttributes(
        java.lang.Iterable<java.lang.String> values) {
      ensureRequiredAttributesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, requiredAttributes_);
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
     * transfer authority
     * </pre>
     *
     * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRequiredAttributes() {
      requiredAttributes_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000400);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
     * transfer authority
     * </pre>
     *
     * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
     * @param value The bytes of the requiredAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addRequiredAttributesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureRequiredAttributesIsMutable();
      requiredAttributes_.add(value);
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:provenance.marker.v1.MarkerAccount)
  }

  // @@protoc_insertion_point(class_scope:provenance.marker.v1.MarkerAccount)
  private static final com.provenance.marker.v1.MarkerAccount DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.provenance.marker.v1.MarkerAccount();
  }

  public static com.provenance.marker.v1.MarkerAccount getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MarkerAccount>
      PARSER = new com.google.protobuf.AbstractParser<MarkerAccount>() {
    @java.lang.Override
    public MarkerAccount parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MarkerAccount> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MarkerAccount> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.provenance.marker.v1.MarkerAccount getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


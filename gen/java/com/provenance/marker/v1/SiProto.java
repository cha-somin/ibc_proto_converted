// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/marker/v1/si.proto

package com.provenance.marker.v1;

public final class SiProto {
  private SiProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * SIPrefix represents an International System of Units (SI) Prefix.
   * </pre>
   *
   * Protobuf enum {@code provenance.marker.v1.SIPrefix}
   */
  public enum SIPrefix
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 10^0    (none)
     * </pre>
     *
     * <code>SI_PREFIX_NONE = 0;</code>
     */
    SI_PREFIX_NONE(0),
    /**
     * <pre>
     * 10^1    deka   da
     * </pre>
     *
     * <code>SI_PREFIX_DEKA = 1;</code>
     */
    SI_PREFIX_DEKA(1),
    /**
     * <pre>
     * 10^2    hecto   h
     * </pre>
     *
     * <code>SI_PREFIX_HECTO = 2;</code>
     */
    SI_PREFIX_HECTO(2),
    /**
     * <pre>
     * 10^3    kilo    k
     * </pre>
     *
     * <code>SI_PREFIX_KILO = 3;</code>
     */
    SI_PREFIX_KILO(3),
    /**
     * <pre>
     * 10^6    mega    M
     * </pre>
     *
     * <code>SI_PREFIX_MEGA = 6;</code>
     */
    SI_PREFIX_MEGA(6),
    /**
     * <pre>
     * 10^9    giga    G
     * </pre>
     *
     * <code>SI_PREFIX_GIGA = 9;</code>
     */
    SI_PREFIX_GIGA(9),
    /**
     * <pre>
     * 10^12   tera    T
     * </pre>
     *
     * <code>SI_PREFIX_TERA = 12;</code>
     */
    SI_PREFIX_TERA(12),
    /**
     * <pre>
     * 10^15   peta    P
     * </pre>
     *
     * <code>SI_PREFIX_PETA = 15;</code>
     */
    SI_PREFIX_PETA(15),
    /**
     * <pre>
     * 10^18   exa     E
     * </pre>
     *
     * <code>SI_PREFIX_EXA = 18;</code>
     */
    SI_PREFIX_EXA(18),
    /**
     * <pre>
     * 10^21   zetta   Z
     * </pre>
     *
     * <code>SI_PREFIX_ZETTA = 21;</code>
     */
    SI_PREFIX_ZETTA(21),
    /**
     * <pre>
     * 10^24   yotta   Y
     * </pre>
     *
     * <code>SI_PREFIX_YOTTA = 24;</code>
     */
    SI_PREFIX_YOTTA(24),
    /**
     * <pre>
     * 10^-1   deci    d
     * </pre>
     *
     * <code>SI_PREFIX_DECI = -1;</code>
     */
    SI_PREFIX_DECI(-1),
    /**
     * <pre>
     * 10^-2   centi   c
     * </pre>
     *
     * <code>SI_PREFIX_CENTI = -2;</code>
     */
    SI_PREFIX_CENTI(-2),
    /**
     * <pre>
     * 10^-3   milli   m
     * </pre>
     *
     * <code>SI_PREFIX_MILLI = -3;</code>
     */
    SI_PREFIX_MILLI(-3),
    /**
     * <pre>
     * 10^-6   micro   µ
     * </pre>
     *
     * <code>SI_PREFIX_MICRO = -6;</code>
     */
    SI_PREFIX_MICRO(-6),
    /**
     * <pre>
     * 10^-9   nano    n
     * </pre>
     *
     * <code>SI_PREFIX_NANO = -9;</code>
     */
    SI_PREFIX_NANO(-9),
    /**
     * <pre>
     * 10^-12  pico    p
     * </pre>
     *
     * <code>SI_PREFIX_PICO = -12;</code>
     */
    SI_PREFIX_PICO(-12),
    /**
     * <pre>
     * 10^-15  femto   f
     * </pre>
     *
     * <code>SI_PREFIX_FEMTO = -15;</code>
     */
    SI_PREFIX_FEMTO(-15),
    /**
     * <pre>
     * 10^-18  atto    a
     * </pre>
     *
     * <code>SI_PREFIX_ATTO = -18;</code>
     */
    SI_PREFIX_ATTO(-18),
    /**
     * <pre>
     * 10^-21  zepto   z
     * </pre>
     *
     * <code>SI_PREFIX_ZEPTO = -21;</code>
     */
    SI_PREFIX_ZEPTO(-21),
    /**
     * <pre>
     * 10^-24  yocto   y
     * </pre>
     *
     * <code>SI_PREFIX_YOCTO = -24;</code>
     */
    SI_PREFIX_YOCTO(-24),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 10^0    (none)
     * </pre>
     *
     * <code>SI_PREFIX_NONE = 0;</code>
     */
    public static final int SI_PREFIX_NONE_VALUE = 0;
    /**
     * <pre>
     * 10^1    deka   da
     * </pre>
     *
     * <code>SI_PREFIX_DEKA = 1;</code>
     */
    public static final int SI_PREFIX_DEKA_VALUE = 1;
    /**
     * <pre>
     * 10^2    hecto   h
     * </pre>
     *
     * <code>SI_PREFIX_HECTO = 2;</code>
     */
    public static final int SI_PREFIX_HECTO_VALUE = 2;
    /**
     * <pre>
     * 10^3    kilo    k
     * </pre>
     *
     * <code>SI_PREFIX_KILO = 3;</code>
     */
    public static final int SI_PREFIX_KILO_VALUE = 3;
    /**
     * <pre>
     * 10^6    mega    M
     * </pre>
     *
     * <code>SI_PREFIX_MEGA = 6;</code>
     */
    public static final int SI_PREFIX_MEGA_VALUE = 6;
    /**
     * <pre>
     * 10^9    giga    G
     * </pre>
     *
     * <code>SI_PREFIX_GIGA = 9;</code>
     */
    public static final int SI_PREFIX_GIGA_VALUE = 9;
    /**
     * <pre>
     * 10^12   tera    T
     * </pre>
     *
     * <code>SI_PREFIX_TERA = 12;</code>
     */
    public static final int SI_PREFIX_TERA_VALUE = 12;
    /**
     * <pre>
     * 10^15   peta    P
     * </pre>
     *
     * <code>SI_PREFIX_PETA = 15;</code>
     */
    public static final int SI_PREFIX_PETA_VALUE = 15;
    /**
     * <pre>
     * 10^18   exa     E
     * </pre>
     *
     * <code>SI_PREFIX_EXA = 18;</code>
     */
    public static final int SI_PREFIX_EXA_VALUE = 18;
    /**
     * <pre>
     * 10^21   zetta   Z
     * </pre>
     *
     * <code>SI_PREFIX_ZETTA = 21;</code>
     */
    public static final int SI_PREFIX_ZETTA_VALUE = 21;
    /**
     * <pre>
     * 10^24   yotta   Y
     * </pre>
     *
     * <code>SI_PREFIX_YOTTA = 24;</code>
     */
    public static final int SI_PREFIX_YOTTA_VALUE = 24;
    /**
     * <pre>
     * 10^-1   deci    d
     * </pre>
     *
     * <code>SI_PREFIX_DECI = -1;</code>
     */
    public static final int SI_PREFIX_DECI_VALUE = -1;
    /**
     * <pre>
     * 10^-2   centi   c
     * </pre>
     *
     * <code>SI_PREFIX_CENTI = -2;</code>
     */
    public static final int SI_PREFIX_CENTI_VALUE = -2;
    /**
     * <pre>
     * 10^-3   milli   m
     * </pre>
     *
     * <code>SI_PREFIX_MILLI = -3;</code>
     */
    public static final int SI_PREFIX_MILLI_VALUE = -3;
    /**
     * <pre>
     * 10^-6   micro   µ
     * </pre>
     *
     * <code>SI_PREFIX_MICRO = -6;</code>
     */
    public static final int SI_PREFIX_MICRO_VALUE = -6;
    /**
     * <pre>
     * 10^-9   nano    n
     * </pre>
     *
     * <code>SI_PREFIX_NANO = -9;</code>
     */
    public static final int SI_PREFIX_NANO_VALUE = -9;
    /**
     * <pre>
     * 10^-12  pico    p
     * </pre>
     *
     * <code>SI_PREFIX_PICO = -12;</code>
     */
    public static final int SI_PREFIX_PICO_VALUE = -12;
    /**
     * <pre>
     * 10^-15  femto   f
     * </pre>
     *
     * <code>SI_PREFIX_FEMTO = -15;</code>
     */
    public static final int SI_PREFIX_FEMTO_VALUE = -15;
    /**
     * <pre>
     * 10^-18  atto    a
     * </pre>
     *
     * <code>SI_PREFIX_ATTO = -18;</code>
     */
    public static final int SI_PREFIX_ATTO_VALUE = -18;
    /**
     * <pre>
     * 10^-21  zepto   z
     * </pre>
     *
     * <code>SI_PREFIX_ZEPTO = -21;</code>
     */
    public static final int SI_PREFIX_ZEPTO_VALUE = -21;
    /**
     * <pre>
     * 10^-24  yocto   y
     * </pre>
     *
     * <code>SI_PREFIX_YOCTO = -24;</code>
     */
    public static final int SI_PREFIX_YOCTO_VALUE = -24;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SIPrefix valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SIPrefix forNumber(int value) {
      switch (value) {
        case 0: return SI_PREFIX_NONE;
        case 1: return SI_PREFIX_DEKA;
        case 2: return SI_PREFIX_HECTO;
        case 3: return SI_PREFIX_KILO;
        case 6: return SI_PREFIX_MEGA;
        case 9: return SI_PREFIX_GIGA;
        case 12: return SI_PREFIX_TERA;
        case 15: return SI_PREFIX_PETA;
        case 18: return SI_PREFIX_EXA;
        case 21: return SI_PREFIX_ZETTA;
        case 24: return SI_PREFIX_YOTTA;
        case -1: return SI_PREFIX_DECI;
        case -2: return SI_PREFIX_CENTI;
        case -3: return SI_PREFIX_MILLI;
        case -6: return SI_PREFIX_MICRO;
        case -9: return SI_PREFIX_NANO;
        case -12: return SI_PREFIX_PICO;
        case -15: return SI_PREFIX_FEMTO;
        case -18: return SI_PREFIX_ATTO;
        case -21: return SI_PREFIX_ZEPTO;
        case -24: return SI_PREFIX_YOCTO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SIPrefix>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SIPrefix> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SIPrefix>() {
            public SIPrefix findValueByNumber(int number) {
              return SIPrefix.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.provenance.marker.v1.SiProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final SIPrefix[] VALUES = values();

    public static SIPrefix valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SIPrefix(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:provenance.marker.v1.SIPrefix)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035provenance/marker/v1/si.proto\022\024provena" +
      "nce.marker.v1\032\024gogoproto/gogo.proto*\226\004\n\010" +
      "SIPrefix\022\022\n\016SI_PREFIX_NONE\020\000\022\022\n\016SI_PREFI" +
      "X_DEKA\020\001\022\023\n\017SI_PREFIX_HECTO\020\002\022\022\n\016SI_PREF" +
      "IX_KILO\020\003\022\022\n\016SI_PREFIX_MEGA\020\006\022\022\n\016SI_PREF" +
      "IX_GIGA\020\t\022\022\n\016SI_PREFIX_TERA\020\014\022\022\n\016SI_PREF" +
      "IX_PETA\020\017\022\021\n\rSI_PREFIX_EXA\020\022\022\023\n\017SI_PREFI" +
      "X_ZETTA\020\025\022\023\n\017SI_PREFIX_YOTTA\020\030\022\033\n\016SI_PRE" +
      "FIX_DECI\020\377\377\377\377\377\377\377\377\377\001\022\034\n\017SI_PREFIX_CENTI\020\376" +
      "\377\377\377\377\377\377\377\377\001\022\034\n\017SI_PREFIX_MILLI\020\375\377\377\377\377\377\377\377\377\001\022" +
      "\034\n\017SI_PREFIX_MICRO\020\372\377\377\377\377\377\377\377\377\001\022\033\n\016SI_PREF" +
      "IX_NANO\020\367\377\377\377\377\377\377\377\377\001\022\033\n\016SI_PREFIX_PICO\020\364\377\377" +
      "\377\377\377\377\377\377\001\022\034\n\017SI_PREFIX_FEMTO\020\361\377\377\377\377\377\377\377\377\001\022\033\n" +
      "\016SI_PREFIX_ATTO\020\356\377\377\377\377\377\377\377\377\001\022\034\n\017SI_PREFIX_" +
      "ZEPTO\020\353\377\377\377\377\377\377\377\377\001\022\034\n\017SI_PREFIX_YOCTO\020\350\377\377\377" +
      "\377\377\377\377\377\001\032\004\210\243\036\000B\311\001\n\030com.provenance.marker.v" +
      "1B\007SiProtoP\000Z2github.com/provenance-io/p" +
      "rovenance/x/marker/types\242\002\003PMX\252\002\024Provena" +
      "nce.Marker.V1\312\002\024Provenance\\Marker\\V1\342\002 P" +
      "rovenance\\Marker\\V1\\GPBMetadata\352\002\026Proven" +
      "ance::Marker::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
        });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.goprotoEnumPrefix);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/marker/v1/marker.proto

package com.provenance.marker.v1;

public interface MarkerAccountOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.marker.v1.MarkerAccount)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * base cosmos account information including address and coin holdings.
   * </pre>
   *
   * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
   * @return Whether the baseAccount field is set.
   */
  boolean hasBaseAccount();
  /**
   * <pre>
   * base cosmos account information including address and coin holdings.
   * </pre>
   *
   * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
   * @return The baseAccount.
   */
  com.cosmos.auth.v1beta1.BaseAccount getBaseAccount();
  /**
   * <pre>
   * base cosmos account information including address and coin holdings.
   * </pre>
   *
   * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
   */
  com.cosmos.auth.v1beta1.BaseAccountOrBuilder getBaseAccountOrBuilder();

  /**
   * <pre>
   * Address that owns the marker configuration.  This account must sign any requests
   * to change marker config (only valid for statuses prior to finalization)
   * </pre>
   *
   * <code>string manager = 2 [json_name = "manager", (.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
   * @return The manager.
   */
  java.lang.String getManager();
  /**
   * <pre>
   * Address that owns the marker configuration.  This account must sign any requests
   * to change marker config (only valid for statuses prior to finalization)
   * </pre>
   *
   * <code>string manager = 2 [json_name = "manager", (.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
   * @return The bytes for manager.
   */
  com.google.protobuf.ByteString
      getManagerBytes();

  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<com.provenance.marker.v1.AccessGrant> 
      getAccessControlList();
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
   */
  com.provenance.marker.v1.AccessGrant getAccessControl(int index);
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
   */
  int getAccessControlCount();
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<? extends com.provenance.marker.v1.AccessGrantOrBuilder> 
      getAccessControlOrBuilderList();
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [json_name = "accessControl", (.gogoproto.nullable) = false];</code>
   */
  com.provenance.marker.v1.AccessGrantOrBuilder getAccessControlOrBuilder(
      int index);

  /**
   * <pre>
   * Indicates the current status of this marker record.
   * </pre>
   *
   * <code>.provenance.marker.v1.MarkerStatus status = 4 [json_name = "status"];</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <pre>
   * Indicates the current status of this marker record.
   * </pre>
   *
   * <code>.provenance.marker.v1.MarkerStatus status = 4 [json_name = "status"];</code>
   * @return The status.
   */
  com.provenance.marker.v1.MarkerStatus getStatus();

  /**
   * <pre>
   * value denomination and total supply for the token.
   * </pre>
   *
   * <code>string denom = 5 [json_name = "denom"];</code>
   * @return The denom.
   */
  java.lang.String getDenom();
  /**
   * <pre>
   * value denomination and total supply for the token.
   * </pre>
   *
   * <code>string denom = 5 [json_name = "denom"];</code>
   * @return The bytes for denom.
   */
  com.google.protobuf.ByteString
      getDenomBytes();

  /**
   * <pre>
   * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
   * </pre>
   *
   * <code>string supply = 6 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
   * @return The supply.
   */
  java.lang.String getSupply();
  /**
   * <pre>
   * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
   * </pre>
   *
   * <code>string supply = 6 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
   * @return The bytes for supply.
   */
  com.google.protobuf.ByteString
      getSupplyBytes();

  /**
   * <pre>
   * Marker type information
   * </pre>
   *
   * <code>.provenance.marker.v1.MarkerType marker_type = 7 [json_name = "markerType", (.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
   * @return The enum numeric value on the wire for markerType.
   */
  int getMarkerTypeValue();
  /**
   * <pre>
   * Marker type information
   * </pre>
   *
   * <code>.provenance.marker.v1.MarkerType marker_type = 7 [json_name = "markerType", (.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
   * @return The markerType.
   */
  com.provenance.marker.v1.MarkerType getMarkerType();

  /**
   * <pre>
   * A fixed supply will mint additional coin automatically if the total supply decreases below a set value.  This
   * may occur if the coin is burned or an account holding the coin is slashed. (default: true)
   * </pre>
   *
   * <code>bool supply_fixed = 8 [json_name = "supplyFixed"];</code>
   * @return The supplyFixed.
   */
  boolean getSupplyFixed();

  /**
   * <pre>
   * indicates that governance based control is allowed for this marker
   * </pre>
   *
   * <code>bool allow_governance_control = 9 [json_name = "allowGovernanceControl"];</code>
   * @return The allowGovernanceControl.
   */
  boolean getAllowGovernanceControl();

  /**
   * <pre>
   * Whether an admin can transfer restricted coins from a 3rd-party account without their signature.
   * </pre>
   *
   * <code>bool allow_forced_transfer = 10 [json_name = "allowForcedTransfer"];</code>
   * @return The allowForcedTransfer.
   */
  boolean getAllowForcedTransfer();

  /**
   * <pre>
   * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
   * transfer authority
   * </pre>
   *
   * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
   * @return A list containing the requiredAttributes.
   */
  java.util.List<java.lang.String>
      getRequiredAttributesList();
  /**
   * <pre>
   * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
   * transfer authority
   * </pre>
   *
   * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
   * @return The count of requiredAttributes.
   */
  int getRequiredAttributesCount();
  /**
   * <pre>
   * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
   * transfer authority
   * </pre>
   *
   * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
   * @param index The index of the element to return.
   * @return The requiredAttributes at the given index.
   */
  java.lang.String getRequiredAttributes(int index);
  /**
   * <pre>
   * list of required attributes on restricted marker in order to send and receive transfers if sender does not have
   * transfer authority
   * </pre>
   *
   * <code>repeated string required_attributes = 11 [json_name = "requiredAttributes"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the requiredAttributes at the given index.
   */
  com.google.protobuf.ByteString
      getRequiredAttributesBytes(int index);
}

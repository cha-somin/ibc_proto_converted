// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/msgfees/v1/msgfees.proto

package com.provenance.msgfees.v1;

public interface ParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.msgfees.v1.Params)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * constant used to calculate fees when gas fees shares denom with msg fee
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
   * @return Whether the floorGasPrice field is set.
   */
  boolean hasFloorGasPrice();
  /**
   * <pre>
   * constant used to calculate fees when gas fees shares denom with msg fee
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
   * @return The floorGasPrice.
   */
  com.cosmos.base.v1beta1.Coin getFloorGasPrice();
  /**
   * <pre>
   * constant used to calculate fees when gas fees shares denom with msg fee
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getFloorGasPriceOrBuilder();

  /**
   * <pre>
   * total nhash per usd mil for converting usd to nhash
   * </pre>
   *
   * <code>uint64 nhash_per_usd_mil = 3 [json_name = "nhashPerUsdMil"];</code>
   * @return The nhashPerUsdMil.
   */
  long getNhashPerUsdMil();

  /**
   * <pre>
   * conversion fee denom is the denom usd is converted to
   * </pre>
   *
   * <code>string conversion_fee_denom = 4 [json_name = "conversionFeeDenom"];</code>
   * @return The conversionFeeDenom.
   */
  java.lang.String getConversionFeeDenom();
  /**
   * <pre>
   * conversion fee denom is the denom usd is converted to
   * </pre>
   *
   * <code>string conversion_fee_denom = 4 [json_name = "conversionFeeDenom"];</code>
   * @return The bytes for conversionFeeDenom.
   */
  com.google.protobuf.ByteString
      getConversionFeeDenomBytes();
}

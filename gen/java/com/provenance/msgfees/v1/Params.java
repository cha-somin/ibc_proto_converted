// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/msgfees/v1/msgfees.proto

package com.provenance.msgfees.v1;

/**
 * <pre>
 * Params defines the set of params for the msgfees module.
 * </pre>
 *
 * Protobuf type {@code provenance.msgfees.v1.Params}
 */
public final class Params extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:provenance.msgfees.v1.Params)
    ParamsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Params.newBuilder() to construct.
  private Params(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Params() {
    conversionFeeDenom_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Params();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.provenance.msgfees.v1.MsgfeesProto.internal_static_provenance_msgfees_v1_Params_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.provenance.msgfees.v1.MsgfeesProto.internal_static_provenance_msgfees_v1_Params_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.provenance.msgfees.v1.Params.class, com.provenance.msgfees.v1.Params.Builder.class);
  }

  public static final int FLOOR_GAS_PRICE_FIELD_NUMBER = 2;
  private com.cosmos.base.v1beta1.Coin floorGasPrice_;
  /**
   * <pre>
   * constant used to calculate fees when gas fees shares denom with msg fee
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
   * @return Whether the floorGasPrice field is set.
   */
  @java.lang.Override
  public boolean hasFloorGasPrice() {
    return floorGasPrice_ != null;
  }
  /**
   * <pre>
   * constant used to calculate fees when gas fees shares denom with msg fee
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
   * @return The floorGasPrice.
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getFloorGasPrice() {
    return floorGasPrice_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : floorGasPrice_;
  }
  /**
   * <pre>
   * constant used to calculate fees when gas fees shares denom with msg fee
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getFloorGasPriceOrBuilder() {
    return floorGasPrice_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : floorGasPrice_;
  }

  public static final int NHASH_PER_USD_MIL_FIELD_NUMBER = 3;
  private long nhashPerUsdMil_ = 0L;
  /**
   * <pre>
   * total nhash per usd mil for converting usd to nhash
   * </pre>
   *
   * <code>uint64 nhash_per_usd_mil = 3 [json_name = "nhashPerUsdMil"];</code>
   * @return The nhashPerUsdMil.
   */
  @java.lang.Override
  public long getNhashPerUsdMil() {
    return nhashPerUsdMil_;
  }

  public static final int CONVERSION_FEE_DENOM_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object conversionFeeDenom_ = "";
  /**
   * <pre>
   * conversion fee denom is the denom usd is converted to
   * </pre>
   *
   * <code>string conversion_fee_denom = 4 [json_name = "conversionFeeDenom"];</code>
   * @return The conversionFeeDenom.
   */
  @java.lang.Override
  public java.lang.String getConversionFeeDenom() {
    java.lang.Object ref = conversionFeeDenom_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      conversionFeeDenom_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * conversion fee denom is the denom usd is converted to
   * </pre>
   *
   * <code>string conversion_fee_denom = 4 [json_name = "conversionFeeDenom"];</code>
   * @return The bytes for conversionFeeDenom.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getConversionFeeDenomBytes() {
    java.lang.Object ref = conversionFeeDenom_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      conversionFeeDenom_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (floorGasPrice_ != null) {
      output.writeMessage(2, getFloorGasPrice());
    }
    if (nhashPerUsdMil_ != 0L) {
      output.writeUInt64(3, nhashPerUsdMil_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(conversionFeeDenom_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, conversionFeeDenom_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (floorGasPrice_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getFloorGasPrice());
    }
    if (nhashPerUsdMil_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, nhashPerUsdMil_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(conversionFeeDenom_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, conversionFeeDenom_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.provenance.msgfees.v1.Params)) {
      return super.equals(obj);
    }
    com.provenance.msgfees.v1.Params other = (com.provenance.msgfees.v1.Params) obj;

    if (hasFloorGasPrice() != other.hasFloorGasPrice()) return false;
    if (hasFloorGasPrice()) {
      if (!getFloorGasPrice()
          .equals(other.getFloorGasPrice())) return false;
    }
    if (getNhashPerUsdMil()
        != other.getNhashPerUsdMil()) return false;
    if (!getConversionFeeDenom()
        .equals(other.getConversionFeeDenom())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasFloorGasPrice()) {
      hash = (37 * hash) + FLOOR_GAS_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + getFloorGasPrice().hashCode();
    }
    hash = (37 * hash) + NHASH_PER_USD_MIL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getNhashPerUsdMil());
    hash = (37 * hash) + CONVERSION_FEE_DENOM_FIELD_NUMBER;
    hash = (53 * hash) + getConversionFeeDenom().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.provenance.msgfees.v1.Params parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.provenance.msgfees.v1.Params parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.provenance.msgfees.v1.Params parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.provenance.msgfees.v1.Params parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.provenance.msgfees.v1.Params parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.provenance.msgfees.v1.Params parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.provenance.msgfees.v1.Params parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.provenance.msgfees.v1.Params parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.provenance.msgfees.v1.Params parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.provenance.msgfees.v1.Params parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.provenance.msgfees.v1.Params parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.provenance.msgfees.v1.Params parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.provenance.msgfees.v1.Params prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Params defines the set of params for the msgfees module.
   * </pre>
   *
   * Protobuf type {@code provenance.msgfees.v1.Params}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:provenance.msgfees.v1.Params)
      com.provenance.msgfees.v1.ParamsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.provenance.msgfees.v1.MsgfeesProto.internal_static_provenance_msgfees_v1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.provenance.msgfees.v1.MsgfeesProto.internal_static_provenance_msgfees_v1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.provenance.msgfees.v1.Params.class, com.provenance.msgfees.v1.Params.Builder.class);
    }

    // Construct using com.provenance.msgfees.v1.Params.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      floorGasPrice_ = null;
      if (floorGasPriceBuilder_ != null) {
        floorGasPriceBuilder_.dispose();
        floorGasPriceBuilder_ = null;
      }
      nhashPerUsdMil_ = 0L;
      conversionFeeDenom_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.provenance.msgfees.v1.MsgfeesProto.internal_static_provenance_msgfees_v1_Params_descriptor;
    }

    @java.lang.Override
    public com.provenance.msgfees.v1.Params getDefaultInstanceForType() {
      return com.provenance.msgfees.v1.Params.getDefaultInstance();
    }

    @java.lang.Override
    public com.provenance.msgfees.v1.Params build() {
      com.provenance.msgfees.v1.Params result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.provenance.msgfees.v1.Params buildPartial() {
      com.provenance.msgfees.v1.Params result = new com.provenance.msgfees.v1.Params(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.provenance.msgfees.v1.Params result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.floorGasPrice_ = floorGasPriceBuilder_ == null
            ? floorGasPrice_
            : floorGasPriceBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.nhashPerUsdMil_ = nhashPerUsdMil_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.conversionFeeDenom_ = conversionFeeDenom_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.provenance.msgfees.v1.Params) {
        return mergeFrom((com.provenance.msgfees.v1.Params)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.provenance.msgfees.v1.Params other) {
      if (other == com.provenance.msgfees.v1.Params.getDefaultInstance()) return this;
      if (other.hasFloorGasPrice()) {
        mergeFloorGasPrice(other.getFloorGasPrice());
      }
      if (other.getNhashPerUsdMil() != 0L) {
        setNhashPerUsdMil(other.getNhashPerUsdMil());
      }
      if (!other.getConversionFeeDenom().isEmpty()) {
        conversionFeeDenom_ = other.conversionFeeDenom_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              input.readMessage(
                  getFloorGasPriceFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 18
            case 24: {
              nhashPerUsdMil_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 24
            case 34: {
              conversionFeeDenom_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.cosmos.base.v1beta1.Coin floorGasPrice_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> floorGasPriceBuilder_;
    /**
     * <pre>
     * constant used to calculate fees when gas fees shares denom with msg fee
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
     * @return Whether the floorGasPrice field is set.
     */
    public boolean hasFloorGasPrice() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * constant used to calculate fees when gas fees shares denom with msg fee
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
     * @return The floorGasPrice.
     */
    public com.cosmos.base.v1beta1.Coin getFloorGasPrice() {
      if (floorGasPriceBuilder_ == null) {
        return floorGasPrice_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : floorGasPrice_;
      } else {
        return floorGasPriceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * constant used to calculate fees when gas fees shares denom with msg fee
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
     */
    public Builder setFloorGasPrice(com.cosmos.base.v1beta1.Coin value) {
      if (floorGasPriceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        floorGasPrice_ = value;
      } else {
        floorGasPriceBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * constant used to calculate fees when gas fees shares denom with msg fee
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
     */
    public Builder setFloorGasPrice(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (floorGasPriceBuilder_ == null) {
        floorGasPrice_ = builderForValue.build();
      } else {
        floorGasPriceBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * constant used to calculate fees when gas fees shares denom with msg fee
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeFloorGasPrice(com.cosmos.base.v1beta1.Coin value) {
      if (floorGasPriceBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          floorGasPrice_ != null &&
          floorGasPrice_ != com.cosmos.base.v1beta1.Coin.getDefaultInstance()) {
          getFloorGasPriceBuilder().mergeFrom(value);
        } else {
          floorGasPrice_ = value;
        }
      } else {
        floorGasPriceBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * constant used to calculate fees when gas fees shares denom with msg fee
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearFloorGasPrice() {
      bitField0_ = (bitField0_ & ~0x00000001);
      floorGasPrice_ = null;
      if (floorGasPriceBuilder_ != null) {
        floorGasPriceBuilder_.dispose();
        floorGasPriceBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * constant used to calculate fees when gas fees shares denom with msg fee
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getFloorGasPriceBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getFloorGasPriceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * constant used to calculate fees when gas fees shares denom with msg fee
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getFloorGasPriceOrBuilder() {
      if (floorGasPriceBuilder_ != null) {
        return floorGasPriceBuilder_.getMessageOrBuilder();
      } else {
        return floorGasPrice_ == null ?
            com.cosmos.base.v1beta1.Coin.getDefaultInstance() : floorGasPrice_;
      }
    }
    /**
     * <pre>
     * constant used to calculate fees when gas fees shares denom with msg fee
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin floor_gas_price = 2 [json_name = "floorGasPrice", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getFloorGasPriceFieldBuilder() {
      if (floorGasPriceBuilder_ == null) {
        floorGasPriceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                getFloorGasPrice(),
                getParentForChildren(),
                isClean());
        floorGasPrice_ = null;
      }
      return floorGasPriceBuilder_;
    }

    private long nhashPerUsdMil_ ;
    /**
     * <pre>
     * total nhash per usd mil for converting usd to nhash
     * </pre>
     *
     * <code>uint64 nhash_per_usd_mil = 3 [json_name = "nhashPerUsdMil"];</code>
     * @return The nhashPerUsdMil.
     */
    @java.lang.Override
    public long getNhashPerUsdMil() {
      return nhashPerUsdMil_;
    }
    /**
     * <pre>
     * total nhash per usd mil for converting usd to nhash
     * </pre>
     *
     * <code>uint64 nhash_per_usd_mil = 3 [json_name = "nhashPerUsdMil"];</code>
     * @param value The nhashPerUsdMil to set.
     * @return This builder for chaining.
     */
    public Builder setNhashPerUsdMil(long value) {

      nhashPerUsdMil_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total nhash per usd mil for converting usd to nhash
     * </pre>
     *
     * <code>uint64 nhash_per_usd_mil = 3 [json_name = "nhashPerUsdMil"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNhashPerUsdMil() {
      bitField0_ = (bitField0_ & ~0x00000002);
      nhashPerUsdMil_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object conversionFeeDenom_ = "";
    /**
     * <pre>
     * conversion fee denom is the denom usd is converted to
     * </pre>
     *
     * <code>string conversion_fee_denom = 4 [json_name = "conversionFeeDenom"];</code>
     * @return The conversionFeeDenom.
     */
    public java.lang.String getConversionFeeDenom() {
      java.lang.Object ref = conversionFeeDenom_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        conversionFeeDenom_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * conversion fee denom is the denom usd is converted to
     * </pre>
     *
     * <code>string conversion_fee_denom = 4 [json_name = "conversionFeeDenom"];</code>
     * @return The bytes for conversionFeeDenom.
     */
    public com.google.protobuf.ByteString
        getConversionFeeDenomBytes() {
      java.lang.Object ref = conversionFeeDenom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        conversionFeeDenom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * conversion fee denom is the denom usd is converted to
     * </pre>
     *
     * <code>string conversion_fee_denom = 4 [json_name = "conversionFeeDenom"];</code>
     * @param value The conversionFeeDenom to set.
     * @return This builder for chaining.
     */
    public Builder setConversionFeeDenom(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      conversionFeeDenom_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * conversion fee denom is the denom usd is converted to
     * </pre>
     *
     * <code>string conversion_fee_denom = 4 [json_name = "conversionFeeDenom"];</code>
     * @return This builder for chaining.
     */
    public Builder clearConversionFeeDenom() {
      conversionFeeDenom_ = getDefaultInstance().getConversionFeeDenom();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * conversion fee denom is the denom usd is converted to
     * </pre>
     *
     * <code>string conversion_fee_denom = 4 [json_name = "conversionFeeDenom"];</code>
     * @param value The bytes for conversionFeeDenom to set.
     * @return This builder for chaining.
     */
    public Builder setConversionFeeDenomBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      conversionFeeDenom_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:provenance.msgfees.v1.Params)
  }

  // @@protoc_insertion_point(class_scope:provenance.msgfees.v1.Params)
  private static final com.provenance.msgfees.v1.Params DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.provenance.msgfees.v1.Params();
  }

  public static com.provenance.msgfees.v1.Params getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Params>
      PARSER = new com.google.protobuf.AbstractParser<Params>() {
    @java.lang.Override
    public Params parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Params> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Params> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.provenance.msgfees.v1.Params getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


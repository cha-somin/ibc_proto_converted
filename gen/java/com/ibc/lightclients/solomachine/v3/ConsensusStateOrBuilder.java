// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/lightclients/solomachine/v3/solomachine.proto

package com.ibc.lightclients.solomachine.v3;

public interface ConsensusStateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ibc.lightclients.solomachine.v3.ConsensusState)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * public key of the solo machine
   * </pre>
   *
   * <code>.google.protobuf.Any public_key = 1 [json_name = "publicKey"];</code>
   * @return Whether the publicKey field is set.
   */
  boolean hasPublicKey();
  /**
   * <pre>
   * public key of the solo machine
   * </pre>
   *
   * <code>.google.protobuf.Any public_key = 1 [json_name = "publicKey"];</code>
   * @return The publicKey.
   */
  com.google.protobuf.Any getPublicKey();
  /**
   * <pre>
   * public key of the solo machine
   * </pre>
   *
   * <code>.google.protobuf.Any public_key = 1 [json_name = "publicKey"];</code>
   */
  com.google.protobuf.AnyOrBuilder getPublicKeyOrBuilder();

  /**
   * <pre>
   * diversifier allows the same public key to be re-used across different solo
   * machine clients (potentially on different chains) without being considered
   * misbehaviour.
   * </pre>
   *
   * <code>string diversifier = 2 [json_name = "diversifier"];</code>
   * @return The diversifier.
   */
  java.lang.String getDiversifier();
  /**
   * <pre>
   * diversifier allows the same public key to be re-used across different solo
   * machine clients (potentially on different chains) without being considered
   * misbehaviour.
   * </pre>
   *
   * <code>string diversifier = 2 [json_name = "diversifier"];</code>
   * @return The bytes for diversifier.
   */
  com.google.protobuf.ByteString
      getDiversifierBytes();

  /**
   * <code>uint64 timestamp = 3 [json_name = "timestamp"];</code>
   * @return The timestamp.
   */
  long getTimestamp();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quasar/qoracle/pool.proto

package com.quasarlabs.quasarnode.qoracle;

public final class PoolProto {
  private PoolProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quasarlabs_quasarnode_qoracle_Pool_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quasarlabs_quasarnode_qoracle_Pool_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031quasar/qoracle/pool.proto\022\035quasarlabs." +
      "quasarnode.qoracle\032\024gogoproto/gogo.proto" +
      "\032\031google/protobuf/any.proto\032\037google/prot" +
      "obuf/timestamp.proto\032\036cosmos/base/v1beta" +
      "1/coin.proto\"\212\003\n\004Pool\022\016\n\002id\030\001 \001(\tR\002id\022s\n" +
      "\006assets\030\002 \003(\0132\031.cosmos.base.v1beta1.Coin" +
      "B@\310\336\037\000\362\336\037\014yaml:\"token\"\252\337\037(github.com/cos" +
      "mos/cosmos-sdk/types.CoinsR\006assets\022G\n\003tv" +
      "l\030\003 \001(\014B5\310\336\037\000\332\336\037&github.com/cosmos/cosmo" +
      "s-sdk/types.Dec\342\336\037\003TVLR\003tvl\022G\n\003apy\030\004 \001(\014" +
      "B5\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/t" +
      "ypes.Dec\342\336\037\003APYR\003apy\022&\n\003raw\030\005 \001(\0132\024.goog" +
      "le.protobuf.AnyR\003raw\022C\n\nupdated_at\030\006 \001(\013" +
      "2\032.google.protobuf.TimestampB\010\310\336\037\000\220\337\037\001R\t" +
      "updatedAtB\366\001\n!com.quasarlabs.quasarnode." +
      "qoracleB\tPoolProtoP\001Z0github.com/quasarl" +
      "abs/quasarnode/x/qoracle/types\242\002\003QQQ\252\002\035Q" +
      "uasarlabs.Quasarnode.Qoracle\312\002\035Quasarlab" +
      "s\\Quasarnode\\Qoracle\342\002)Quasarlabs\\Quasar" +
      "node\\Qoracle\\GPBMetadata\352\002\037Quasarlabs::Q" +
      "uasarnode::Qoracleb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.google.protobuf.AnyProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
        });
    internal_static_quasarlabs_quasarnode_qoracle_Pool_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_quasarlabs_quasarnode_qoracle_Pool_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quasarlabs_quasarnode_qoracle_Pool_descriptor,
        new java.lang.String[] { "Id", "Assets", "Tvl", "Apy", "Raw", "UpdatedAt", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.customname);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.google.protobuf.AnyProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ixo/bonds/v1beta1/bonds.proto

package com.ixo.bonds.v1beta1;

public final class BondsProto {
  private BondsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ixo_bonds_v1beta1_FunctionParam_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ixo_bonds_v1beta1_FunctionParam_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ixo_bonds_v1beta1_BondDetails_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ixo_bonds_v1beta1_BondDetails_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ixo_bonds_v1beta1_Bond_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ixo_bonds_v1beta1_Bond_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ixo_bonds_v1beta1_BaseOrder_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ixo_bonds_v1beta1_BaseOrder_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ixo_bonds_v1beta1_BuyOrder_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ixo_bonds_v1beta1_BuyOrder_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ixo_bonds_v1beta1_SellOrder_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ixo_bonds_v1beta1_SellOrder_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ixo_bonds_v1beta1_SwapOrder_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ixo_bonds_v1beta1_SwapOrder_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ixo_bonds_v1beta1_Batch_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ixo_bonds_v1beta1_Batch_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ixo_bonds_v1beta1_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ixo_bonds_v1beta1_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035ixo/bonds/v1beta1/bonds.proto\022\021ixo.bon" +
      "ds.v1beta1\032\024gogoproto/gogo.proto\032\036cosmos" +
      "/base/v1beta1/coin.proto\"\215\001\n\rFunctionPar" +
      "am\022&\n\005param\030\001 \001(\tB\020\362\336\037\014yaml:\"param\"R\005par" +
      "am\022T\n\005value\030\002 \001(\tB>\310\336\037\000\332\336\037&github.com/co" +
      "smos/cosmos-sdk/types.Dec\362\336\037\014yaml:\"value" +
      "\"R\005value\"\212\003\n\013BondDetails\0220\n\010bond_did\030\001 \001" +
      "(\tB\025\352\336\037\003did\362\336\037\nyaml:\"did\"R\007bondDid\022\205\001\n\ns" +
      "pot_price\030\002 \003(\0132\034.cosmos.base.v1beta1.De" +
      "cCoinBH\310\336\037\000\362\336\037\021yaml:\"spot_price\"\252\337\037+gith" +
      "ub.com/cosmos/cosmos-sdk/types.DecCoinsR" +
      "\tspotPrice\022H\n\006supply\030\003 \001(\0132\031.cosmos.base" +
      ".v1beta1.CoinB\025\310\336\037\000\362\336\037\ryaml:\"supply\"R\006su" +
      "pply\022w\n\007reserve\030\004 \003(\0132\031.cosmos.base.v1be" +
      "ta1.CoinBB\310\336\037\000\362\336\037\016yaml:\"reserve\"\252\337\037(gith" +
      "ub.com/cosmos/cosmos-sdk/types.CoinsR\007re" +
      "serve\"\342\025\n\004Bond\022&\n\005token\030\001 \001(\tB\020\362\336\037\014yaml:" +
      "\"token\"R\005token\022#\n\004name\030\002 \001(\tB\017\362\336\037\013yaml:\"" +
      "name\"R\004name\0228\n\013description\030\003 \001(\tB\026\362\336\037\022ya" +
      "ml:\"description\"R\013description\022z\n\013creator" +
      "_did\030\004 \001(\tBY\362\336\037\022yaml:\"creator_did\"\372\336\037?gi" +
      "thub.com/ixofoundation/ixo-blockchain/x/" +
      "iid/types.DIDFragmentR\ncreatorDid\022\203\001\n\016co" +
      "ntroller_did\030\005 \001(\tB\\\362\336\037\025yaml:\"controller" +
      "_did\"\372\336\037?github.com/ixofoundation/ixo-bl" +
      "ockchain/x/iid/types.DIDFragmentR\rcontro" +
      "llerDid\022=\n\rfunction_type\030\006 \001(\tB\030\362\336\037\024yaml" +
      ":\"function_type\"R\014functionType\022\207\001\n\023funct" +
      "ion_parameters\030\007 \003(\0132 .ixo.bonds.v1beta1" +
      ".FunctionParamB4\310\336\037\000\362\336\037\032yaml:\"function_p" +
      "arameters\"\252\337\037\016FunctionParamsR\022functionPa" +
      "rameters\022@\n\016reserve_tokens\030\010 \003(\tB\031\362\336\037\025ya" +
      "ml:\"reserve_tokens\"R\rreserveTokens\022v\n\021tx" +
      "_fee_percentage\030\t \001(\tBJ\310\336\037\000\332\336\037&github.co" +
      "m/cosmos/cosmos-sdk/types.Dec\362\336\037\030yaml:\"t" +
      "x_fee_percentage\"R\017txFeePercentage\022|\n\023ex" +
      "it_fee_percentage\030\n \001(\tBL\310\336\037\000\332\336\037&github." +
      "com/cosmos/cosmos-sdk/types.Dec\362\336\037\032yaml:" +
      "\"exit_fee_percentage\"R\021exitFeePercentage" +
      "\0227\n\013fee_address\030\013 \001(\tB\026\362\336\037\022yaml:\"fee_add" +
      "ress\"R\nfeeAddress\022c\n\032reserve_withdrawal_" +
      "address\030\014 \001(\tB%\362\336\037!yaml:\"reserve_withdra" +
      "wal_address\"R\030reserveWithdrawalAddress\022S" +
      "\n\nmax_supply\030\r \001(\0132\031.cosmos.base.v1beta1" +
      ".CoinB\031\310\336\037\000\362\336\037\021yaml:\"max_supply\"R\tmaxSup" +
      "ply\022\237\001\n\025order_quantity_limits\030\016 \003(\0132\031.co" +
      "smos.base.v1beta1.CoinBP\310\336\037\000\362\336\037\034yaml:\"or" +
      "der_quantity_limits\"\252\337\037(github.com/cosmo" +
      "s/cosmos-sdk/types.CoinsR\023orderQuantityL" +
      "imits\022e\n\013sanity_rate\030\017 \001(\tBD\310\336\037\000\332\336\037&gith" +
      "ub.com/cosmos/cosmos-sdk/types.Dec\362\336\037\022ya" +
      "ml:\"sanity_rate\"R\nsanityRate\022\213\001\n\030sanity_" +
      "margin_percentage\030\020 \001(\tBQ\310\336\037\000\332\336\037&github." +
      "com/cosmos/cosmos-sdk/types.Dec\362\336\037\037yaml:" +
      "\"sanity_margin_percentage\"R\026sanityMargin" +
      "Percentage\022_\n\016current_supply\030\021 \001(\0132\031.cos" +
      "mos.base.v1beta1.CoinB\035\310\336\037\000\362\336\037\025yaml:\"cur" +
      "rent_supply\"R\rcurrentSupply\022\216\001\n\017current_" +
      "reserve\030\022 \003(\0132\031.cosmos.base.v1beta1.Coin" +
      "BJ\310\336\037\000\362\336\037\026yaml:\"current_reserve\"\252\337\037(gith" +
      "ub.com/cosmos/cosmos-sdk/types.CoinsR\016cu" +
      "rrentReserve\022\224\001\n\021available_reserve\030\023 \003(\013" +
      "2\031.cosmos.base.v1beta1.CoinBL\310\336\037\000\362\336\037\030yam" +
      "l:\"available_reserve\"\252\337\037(github.com/cosm" +
      "os/cosmos-sdk/types.CoinsR\020availableRese" +
      "rve\022\274\001\n\037current_outcome_payment_reserve\030" +
      "\024 \003(\0132\031.cosmos.base.v1beta1.CoinBZ\310\336\037\000\362\336" +
      "\037&yaml:\"current_outcome_payment_reserve\"" +
      "\252\337\037(github.com/cosmos/cosmos-sdk/types.C" +
      "oinsR\034currentOutcomePaymentReserve\0227\n\013al" +
      "low_sells\030\025 \001(\010B\026\362\336\037\022yaml:\"allow_sells\"R" +
      "\nallowSells\022`\n\031allow_reserve_withdrawals" +
      "\030\026 \001(\010B$\362\336\037 yaml:\"allow_reserve_withdraw" +
      "als\"R\027allowReserveWithdrawals\0224\n\nalpha_b" +
      "ond\030\027 \001(\010B\025\362\336\037\021yaml:\"alpha_bond\"R\talphaB" +
      "ond\022i\n\014batch_blocks\030\030 \001(\tBF\310\336\037\000\332\336\037\'githu" +
      "b.com/cosmos/cosmos-sdk/types.Uint\362\336\037\023ya" +
      "ml:\"batch_blocks\"R\013batchBlocks\022q\n\017outcom" +
      "e_payment\030\031 \001(\tBH\310\336\037\000\332\336\037&github.com/cosm" +
      "os/cosmos-sdk/types.Int\362\336\037\026yaml:\"outcome" +
      "_payment\"R\016outcomePayment\022&\n\005state\030\032 \001(\t" +
      "B\020\362\336\037\014yaml:\"state\"R\005state\022.\n\010bond_did\030\033 " +
      "\001(\tB\023\362\336\037\017yaml:\"bond_did\"R\007bondDid\022w\n\nora" +
      "cle_did\030\034 \001(\tBX\362\336\037\021yaml:\"oracle_did\"\372\336\037?" +
      "github.com/ixofoundation/ixo-blockchain/" +
      "x/iid/types.DIDFragmentR\toracleDid\"\304\002\n\tB" +
      "aseOrder\022z\n\013account_did\030\001 \001(\tBY\362\336\037\022yaml:" +
      "\"account_did\"\372\336\037?github.com/ixofoundatio" +
      "n/ixo-blockchain/x/iid/types.DIDFragment" +
      "R\naccountDid\022H\n\006amount\030\002 \001(\0132\031.cosmos.ba" +
      "se.v1beta1.CoinB\025\310\336\037\000\362\336\037\ryaml:\"amount\"R\006" +
      "amount\0222\n\tcancelled\030\003 \001(\010B\024\362\336\037\020yaml:\"can" +
      "celled\"R\tcancelled\022=\n\rcancel_reason\030\004 \001(" +
      "\tB\030\362\336\037\024yaml:\"cancel_reason\"R\014cancelReaso" +
      "n\"\343\001\n\010BuyOrder\022V\n\nbase_order\030\001 \001(\0132\034.ixo" +
      ".bonds.v1beta1.BaseOrderB\031\310\336\037\000\362\336\037\021yaml:\"" +
      "base_order\"R\tbaseOrder\022\177\n\nmax_prices\030\002 \003" +
      "(\0132\031.cosmos.base.v1beta1.CoinBE\310\336\037\000\362\336\037\021y" +
      "aml:\"max_prices\"\252\337\037(github.com/cosmos/co" +
      "smos-sdk/types.CoinsR\tmaxPrices\"c\n\tSellO" +
      "rder\022V\n\nbase_order\030\001 \001(\0132\034.ixo.bonds.v1b" +
      "eta1.BaseOrderB\031\310\336\037\000\362\336\037\021yaml:\"base_order" +
      "\"R\tbaseOrder\"\223\001\n\tSwapOrder\022V\n\nbase_order" +
      "\030\001 \001(\0132\034.ixo.bonds.v1beta1.BaseOrderB\031\310\336" +
      "\037\000\362\336\037\021yaml:\"base_order\"R\tbaseOrder\022.\n\010to" +
      "_token\030\002 \001(\tB\023\362\336\037\017yaml:\"to_token\"R\007toTok" +
      "en\"\342\007\n\005Batch\022.\n\010bond_did\030\001 \001(\tB\023\362\336\037\017yaml" +
      ":\"bond_did\"R\007bondDid\022u\n\020blocks_remaining" +
      "\030\002 \001(\tBJ\310\336\037\000\332\336\037\'github.com/cosmos/cosmos" +
      "-sdk/types.Uint\362\336\037\027yaml:\"blocks_remainin" +
      "g\"R\017blocksRemaining\022v\n\021next_public_alpha" +
      "\030\003 \001(\tBJ\310\336\037\000\332\336\037&github.com/cosmos/cosmos" +
      "-sdk/types.Dec\362\336\037\030yaml:\"next_public_alph" +
      "a\"R\017nextPublicAlpha\022d\n\020total_buy_amount\030" +
      "\004 \001(\0132\031.cosmos.base.v1beta1.CoinB\037\310\336\037\000\362\336" +
      "\037\027yaml:\"total_buy_amount\"R\016totalBuyAmoun" +
      "t\022g\n\021total_sell_amount\030\005 \001(\0132\031.cosmos.ba" +
      "se.v1beta1.CoinB \310\336\037\000\362\336\037\030yaml:\"total_sel" +
      "l_amount\"R\017totalSellAmount\022\205\001\n\nbuy_price" +
      "s\030\006 \003(\0132\034.cosmos.base.v1beta1.DecCoinBH\310" +
      "\336\037\000\362\336\037\021yaml:\"buy_prices\"\252\337\037+github.com/c" +
      "osmos/cosmos-sdk/types.DecCoinsR\tbuyPric" +
      "es\022\210\001\n\013sell_prices\030\007 \003(\0132\034.cosmos.base.v" +
      "1beta1.DecCoinBI\310\336\037\000\362\336\037\022yaml:\"sell_price" +
      "s\"\252\337\037+github.com/cosmos/cosmos-sdk/types" +
      ".DecCoinsR\nsellPrices\022D\n\004buys\030\010 \003(\0132\033.ix" +
      "o.bonds.v1beta1.BuyOrderB\023\310\336\037\000\362\336\037\013yaml:\"" +
      "buys\"R\004buys\022H\n\005sells\030\t \003(\0132\034.ixo.bonds.v" +
      "1beta1.SellOrderB\024\310\336\037\000\362\336\037\014yaml:\"sells\"R\005" +
      "sells\022H\n\005swaps\030\n \003(\0132\034.ixo.bonds.v1beta1" +
      ".SwapOrderB\024\310\336\037\000\362\336\037\014yaml:\"swaps\"R\005swaps\"" +
      "[\n\006Params\022Q\n\024reserved_bond_tokens\030\001 \003(\tB" +
      "\037\362\336\037\033yaml:\"reserved_bond_tokens\"R\022reserv" +
      "edBondTokensB\300\001\n\025com.ixo.bonds.v1beta1B\n" +
      "BondsProtoP\001Z5github.com/ixofoundation/i" +
      "xo-blockchain/x/bonds/types\242\002\003IBX\252\002\021Ixo." +
      "Bonds.V1beta1\312\002\021Ixo\\Bonds\\V1beta1\342\002\035Ixo\\" +
      "Bonds\\V1beta1\\GPBMetadata\352\002\023Ixo::Bonds::" +
      "V1beta1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
        });
    internal_static_ixo_bonds_v1beta1_FunctionParam_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ixo_bonds_v1beta1_FunctionParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ixo_bonds_v1beta1_FunctionParam_descriptor,
        new java.lang.String[] { "Param", "Value", });
    internal_static_ixo_bonds_v1beta1_BondDetails_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ixo_bonds_v1beta1_BondDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ixo_bonds_v1beta1_BondDetails_descriptor,
        new java.lang.String[] { "BondDid", "SpotPrice", "Supply", "Reserve", });
    internal_static_ixo_bonds_v1beta1_Bond_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ixo_bonds_v1beta1_Bond_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ixo_bonds_v1beta1_Bond_descriptor,
        new java.lang.String[] { "Token", "Name", "Description", "CreatorDid", "ControllerDid", "FunctionType", "FunctionParameters", "ReserveTokens", "TxFeePercentage", "ExitFeePercentage", "FeeAddress", "ReserveWithdrawalAddress", "MaxSupply", "OrderQuantityLimits", "SanityRate", "SanityMarginPercentage", "CurrentSupply", "CurrentReserve", "AvailableReserve", "CurrentOutcomePaymentReserve", "AllowSells", "AllowReserveWithdrawals", "AlphaBond", "BatchBlocks", "OutcomePayment", "State", "BondDid", "OracleDid", });
    internal_static_ixo_bonds_v1beta1_BaseOrder_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_ixo_bonds_v1beta1_BaseOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ixo_bonds_v1beta1_BaseOrder_descriptor,
        new java.lang.String[] { "AccountDid", "Amount", "Cancelled", "CancelReason", });
    internal_static_ixo_bonds_v1beta1_BuyOrder_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_ixo_bonds_v1beta1_BuyOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ixo_bonds_v1beta1_BuyOrder_descriptor,
        new java.lang.String[] { "BaseOrder", "MaxPrices", });
    internal_static_ixo_bonds_v1beta1_SellOrder_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_ixo_bonds_v1beta1_SellOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ixo_bonds_v1beta1_SellOrder_descriptor,
        new java.lang.String[] { "BaseOrder", });
    internal_static_ixo_bonds_v1beta1_SwapOrder_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_ixo_bonds_v1beta1_SwapOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ixo_bonds_v1beta1_SwapOrder_descriptor,
        new java.lang.String[] { "BaseOrder", "ToToken", });
    internal_static_ixo_bonds_v1beta1_Batch_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_ixo_bonds_v1beta1_Batch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ixo_bonds_v1beta1_Batch_descriptor,
        new java.lang.String[] { "BondDid", "BlocksRemaining", "NextPublicAlpha", "TotalBuyAmount", "TotalSellAmount", "BuyPrices", "SellPrices", "Buys", "Sells", "Swaps", });
    internal_static_ixo_bonds_v1beta1_Params_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_ixo_bonds_v1beta1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ixo_bonds_v1beta1_Params_descriptor,
        new java.lang.String[] { "ReservedBondTokens", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.casttype);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.jsontag);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

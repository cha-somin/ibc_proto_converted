// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sommelier/pubsub/v1/pubsub.proto

package com.pubsub.v1;

public interface SubscriberOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pubsub.v1.Subscriber)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * unique key, account address representation of either an account or a validator
   * </pre>
   *
   * <code>string address = 1 [json_name = "address"];</code>
   * @return The address.
   */
  java.lang.String getAddress();
  /**
   * <pre>
   * unique key, account address representation of either an account or a validator
   * </pre>
   *
   * <code>string address = 1 [json_name = "address"];</code>
   * @return The bytes for address.
   */
  com.google.protobuf.ByteString
      getAddressBytes();

  /**
   * <pre>
   * FQDN of the subscriber, max length of 256
   * </pre>
   *
   * <code>string domain = 2 [json_name = "domain"];</code>
   * @return The domain.
   */
  java.lang.String getDomain();
  /**
   * <pre>
   * FQDN of the subscriber, max length of 256
   * </pre>
   *
   * <code>string domain = 2 [json_name = "domain"];</code>
   * @return The bytes for domain.
   */
  com.google.protobuf.ByteString
      getDomainBytes();

  /**
   * <pre>
   * the subscriber's self-signed CA cert PEM file, expecting TLS 1.3 compatible ECDSA certificates, max length 4096
   * </pre>
   *
   * <code>string ca_cert = 3 [json_name = "caCert"];</code>
   * @return The caCert.
   */
  java.lang.String getCaCert();
  /**
   * <pre>
   * the subscriber's self-signed CA cert PEM file, expecting TLS 1.3 compatible ECDSA certificates, max length 4096
   * </pre>
   *
   * <code>string ca_cert = 3 [json_name = "caCert"];</code>
   * @return The bytes for caCert.
   */
  com.google.protobuf.ByteString
      getCaCertBytes();
}

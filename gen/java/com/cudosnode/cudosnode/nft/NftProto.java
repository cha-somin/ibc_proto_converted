// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cudos/nft/nft.proto

package com.cudosnode.cudosnode.nft;

public final class NftProto {
  private NftProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cudosnode_cudosnode_nft_BaseNFT_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cudosnode_cudosnode_nft_BaseNFT_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cudosnode_cudosnode_nft_Denom_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cudosnode_cudosnode_nft_Denom_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cudosnode_cudosnode_nft_IDCollection_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cudosnode_cudosnode_nft_IDCollection_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cudosnode_cudosnode_nft_Owner_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cudosnode_cudosnode_nft_Owner_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cudosnode_cudosnode_nft_Collection_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cudosnode_cudosnode_nft_Collection_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cudosnode_cudosnode_nft_ApprovedAddresses_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cudosnode_cudosnode_nft_ApprovedAddresses_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cudosnode_cudosnode_nft_ApprovedAddresses_ApprovedAddressesEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cudosnode_cudosnode_nft_ApprovedAddresses_ApprovedAddressesEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cudosnode_cudosnode_nft_ApprovedAddressesData_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cudosnode_cudosnode_nft_ApprovedAddressesData_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cudosnode_cudosnode_nft_ApprovedAddressesData_ApprovedAddressesDataEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cudosnode_cudosnode_nft_ApprovedAddressesData_ApprovedAddressesDataEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023cudos/nft/nft.proto\022\027cudosnode.cudosno" +
      "de.nft\032\024gogoproto/gogo.proto\"\331\001\n\007BaseNFT" +
      "\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022 \n\003" +
      "uri\030\003 \001(\tB\016\342\336\037\003URI\352\336\037\003uriR\003uri\022\034\n\004data\030\004" +
      " \001(\tB\010\352\336\037\004dataR\004data\022\024\n\005owner\030\005 \001(\tR\005own" +
      "er\022N\n\021approvedAddresses\030\006 \003(\tB \352\336\037\034appro" +
      "ved_addresses,omitemptyR\021approvedAddress" +
      "es:\004\350\240\037\001\"\313\002\n\005Denom\022\026\n\002id\030\001 \001(\tB\006\352\336\037\002idR\002" +
      "id\022\034\n\004name\030\002 \001(\tB\010\352\336\037\004nameR\004name\022\"\n\006sche" +
      "ma\030\003 \001(\tB\n\352\336\037\006schemaR\006schema\022%\n\007creator\030" +
      "\004 \001(\tB\013\352\336\037\007creatorR\007creator\022\"\n\006symbol\030\005 " +
      "\001(\tB\n\352\336\037\006symbolR\006symbol\022\"\n\006traits\030\006 \001(\tB" +
      "\n\352\336\037\006traitsR\006traits\022\"\n\006minter\030\007 \001(\tB\n\352\336\037" +
      "\006minterR\006minter\0221\n\013description\030\010 \001(\tB\017\352\336" +
      "\037\013descriptionR\013description\022\034\n\004data\030\t \001(\t" +
      "B\010\352\336\037\004dataR\004data:\004\350\240\037\001\"w\n\014IDCollection\022." +
      "\n\010denom_id\030\001 \001(\tB\023\362\336\037\017yaml:\"denom_id\"R\007d" +
      "enomId\0221\n\ttoken_ids\030\002 \003(\tB\024\362\336\037\020yaml:\"tok" +
      "en_ids\"R\010tokenIds:\004\350\240\037\001\"\233\001\n\005Owner\022\030\n\007add" +
      "ress\030\001 \001(\tR\007address\022r\n\016id_collections\030\002 " +
      "\003(\0132%.cudosnode.cudosnode.nft.IDCollecti" +
      "onB$\310\336\037\000\342\336\037\rIDCollections\362\336\037\013yaml:\"idcs\"" +
      "R\ridCollections:\004\350\240\037\001\"\222\001\n\nCollection\022:\n\005" +
      "denom\030\001 \001(\0132\036.cudosnode.cudosnode.nft.De" +
      "nomB\004\310\336\037\000R\005denom\022B\n\004nfts\030\002 \003(\0132 .cudosno" +
      "de.cudosnode.nft.BaseNFTB\014\310\336\037\000\342\336\037\004NFTsR\004" +
      "nfts:\004\350\240\037\001\"\200\002\n\021ApprovedAddresses\022o\n\021appr" +
      "ovedAddresses\030\001 \003(\0132A.cudosnode.cudosnod" +
      "e.nft.ApprovedAddresses.ApprovedAddresse" +
      "sEntryR\021approvedAddresses\032t\n\026ApprovedAdd" +
      "ressesEntry\022\020\n\003key\030\001 \001(\tR\003key\022D\n\005value\030\002" +
      " \001(\0132..cudosnode.cudosnode.nft.ApprovedA" +
      "ddressesDataR\005value:\0028\001:\004\350\240\037\001\"\350\001\n\025Approv" +
      "edAddressesData\022\177\n\025approvedAddressesData" +
      "\030\001 \003(\0132I.cudosnode.cudosnode.nft.Approve" +
      "dAddressesData.ApprovedAddressesDataEntr" +
      "yR\025approvedAddressesData\032H\n\032ApprovedAddr" +
      "essesDataEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005valu" +
      "e\030\002 \001(\010R\005value:\0028\001:\004\350\240\037\001B\331\001\n\033com.cudosno" +
      "de.cudosnode.nftB\010NftProtoP\001Z.github.com" +
      "/CudoVentures/cudos-node/x/nft/types\242\002\003C" +
      "CN\252\002\027Cudosnode.Cudosnode.Nft\312\002\027Cudosnode" +
      "\\Cudosnode\\Nft\342\002#Cudosnode\\Cudosnode\\Nft" +
      "\\GPBMetadata\352\002\031Cudosnode::Cudosnode::Nft" +
      "\310\341\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_cudosnode_cudosnode_nft_BaseNFT_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cudosnode_cudosnode_nft_BaseNFT_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cudosnode_cudosnode_nft_BaseNFT_descriptor,
        new java.lang.String[] { "Id", "Name", "Uri", "Data", "Owner", "ApprovedAddresses", });
    internal_static_cudosnode_cudosnode_nft_Denom_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cudosnode_cudosnode_nft_Denom_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cudosnode_cudosnode_nft_Denom_descriptor,
        new java.lang.String[] { "Id", "Name", "Schema", "Creator", "Symbol", "Traits", "Minter", "Description", "Data", });
    internal_static_cudosnode_cudosnode_nft_IDCollection_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_cudosnode_cudosnode_nft_IDCollection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cudosnode_cudosnode_nft_IDCollection_descriptor,
        new java.lang.String[] { "DenomId", "TokenIds", });
    internal_static_cudosnode_cudosnode_nft_Owner_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_cudosnode_cudosnode_nft_Owner_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cudosnode_cudosnode_nft_Owner_descriptor,
        new java.lang.String[] { "Address", "IdCollections", });
    internal_static_cudosnode_cudosnode_nft_Collection_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_cudosnode_cudosnode_nft_Collection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cudosnode_cudosnode_nft_Collection_descriptor,
        new java.lang.String[] { "Denom", "Nfts", });
    internal_static_cudosnode_cudosnode_nft_ApprovedAddresses_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_cudosnode_cudosnode_nft_ApprovedAddresses_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cudosnode_cudosnode_nft_ApprovedAddresses_descriptor,
        new java.lang.String[] { "ApprovedAddresses", });
    internal_static_cudosnode_cudosnode_nft_ApprovedAddresses_ApprovedAddressesEntry_descriptor =
      internal_static_cudosnode_cudosnode_nft_ApprovedAddresses_descriptor.getNestedTypes().get(0);
    internal_static_cudosnode_cudosnode_nft_ApprovedAddresses_ApprovedAddressesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cudosnode_cudosnode_nft_ApprovedAddresses_ApprovedAddressesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_cudosnode_cudosnode_nft_ApprovedAddressesData_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_cudosnode_cudosnode_nft_ApprovedAddressesData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cudosnode_cudosnode_nft_ApprovedAddressesData_descriptor,
        new java.lang.String[] { "ApprovedAddressesData", });
    internal_static_cudosnode_cudosnode_nft_ApprovedAddressesData_ApprovedAddressesDataEntry_descriptor =
      internal_static_cudosnode_cudosnode_nft_ApprovedAddressesData_descriptor.getNestedTypes().get(0);
    internal_static_cudosnode_cudosnode_nft_ApprovedAddressesData_ApprovedAddressesDataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cudosnode_cudosnode_nft_ApprovedAddressesData_ApprovedAddressesDataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customname);
    registry.add(com.gogoproto.GogoProto.equal);
    registry.add(com.gogoproto.GogoProto.goprotoGettersAll);
    registry.add(com.gogoproto.GogoProto.jsontag);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mars/envoy/v1beta1/tx.proto

package com.mars.envoy.v1beta1;

public interface MsgSendFundsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:mars.envoy.v1beta1.MsgSendFunds)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Authority is the account executing this message.
   * It is typically the x/gov module account.
   * </pre>
   *
   * <code>string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The authority.
   */
  java.lang.String getAuthority();
  /**
   * <pre>
   * Authority is the account executing this message.
   * It is typically the x/gov module account.
   * </pre>
   *
   * <code>string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The bytes for authority.
   */
  com.google.protobuf.ByteString
      getAuthorityBytes();

  /**
   * <pre>
   * ChannelId identifies the channel through which the transfer is to be sent.
   *
   * Unlike other messages of this module which only requires specifying the
   * connection id, we have to specify the channel id here, because there can be
   * multiple transfer channels associated with the same connection.
   * </pre>
   *
   * <code>string channel_id = 2 [json_name = "channelId", (.gogoproto.moretags) = "yaml:&#92;"channel_id&#92;""];</code>
   * @return The channelId.
   */
  java.lang.String getChannelId();
  /**
   * <pre>
   * ChannelId identifies the channel through which the transfer is to be sent.
   *
   * Unlike other messages of this module which only requires specifying the
   * connection id, we have to specify the channel id here, because there can be
   * multiple transfer channels associated with the same connection.
   * </pre>
   *
   * <code>string channel_id = 2 [json_name = "channelId", (.gogoproto.moretags) = "yaml:&#92;"channel_id&#92;""];</code>
   * @return The bytes for channelId.
   */
  com.google.protobuf.ByteString
      getChannelIdBytes();

  /**
   * <pre>
   * Amount is the coins that are to be sent.
   *
   * Here we support multiple coins in one proposal. As ICS-20 specs only allow
   * one denom per packet, we will have one packet per denom.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.Coin> 
      getAmountList();
  /**
   * <pre>
   * Amount is the coins that are to be sent.
   *
   * Here we support multiple coins in one proposal. As ICS-20 specs only allow
   * one denom per packet, we will have one packet per denom.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.Coin getAmount(int index);
  /**
   * <pre>
   * Amount is the coins that are to be sent.
   *
   * Here we support multiple coins in one proposal. As ICS-20 specs only allow
   * one denom per packet, we will have one packet per denom.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  int getAmountCount();
  /**
   * <pre>
   * Amount is the coins that are to be sent.
   *
   * Here we support multiple coins in one proposal. As ICS-20 specs only allow
   * one denom per packet, we will have one packet per denom.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getAmountOrBuilderList();
  /**
   * <pre>
   * Amount is the coins that are to be sent.
   *
   * Here we support multiple coins in one proposal. As ICS-20 specs only allow
   * one denom per packet, we will have one packet per denom.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getAmountOrBuilder(
      int index);
}

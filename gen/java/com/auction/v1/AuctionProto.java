// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sommelier/auction/v1/auction.proto

package com.auction.v1;

public final class AuctionProto {
  private AuctionProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_auction_v1_Auction_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_auction_v1_Auction_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_auction_v1_Bid_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_auction_v1_Bid_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_auction_v1_TokenPrice_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_auction_v1_TokenPrice_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_auction_v1_ProposedTokenPrice_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_auction_v1_ProposedTokenPrice_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"sommelier/auction/v1/auction.proto\022\nau" +
      "ction.v1\032\036cosmos/base/v1beta1/coin.proto" +
      "\032\031cosmos_proto/cosmos.proto\032\024gogoproto/g" +
      "ogo.proto\"\370\006\n\007Auction\022\016\n\002id\030\001 \001(\rR\002id\022X\n" +
      "\030starting_tokens_for_sale\030\002 \001(\0132\031.cosmos" +
      ".base.v1beta1.CoinB\004\310\336\037\000R\025startingTokens" +
      "ForSale\022\037\n\013start_block\030\003 \001(\004R\nstartBlock" +
      "\022\033\n\tend_block\030\004 \001(\004R\010endBlock\022m\n\033initial" +
      "_price_decrease_rate\030\005 \001(\tB.\310\336\037\000\332\336\037&gith" +
      "ub.com/cosmos/cosmos-sdk/types.DecR\030init" +
      "ialPriceDecreaseRate\022m\n\033current_price_de" +
      "crease_rate\030\006 \001(\tB.\310\336\037\000\332\336\037&github.com/co" +
      "smos/cosmos-sdk/types.DecR\030currentPriceD" +
      "ecreaseRate\022A\n\035price_decrease_block_inte" +
      "rval\030\007 \001(\004R\032priceDecreaseBlockInterval\022l" +
      "\n\033initial_unit_price_in_usomm\030\010 \001(\tB.\310\336\037" +
      "\000\332\336\037&github.com/cosmos/cosmos-sdk/types." +
      "DecR\027initialUnitPriceInUsomm\022l\n\033current_" +
      "unit_price_in_usomm\030\t \001(\tB.\310\336\037\000\332\336\037&githu" +
      "b.com/cosmos/cosmos-sdk/types.DecR\027curre" +
      "ntUnitPriceInUsomm\022Z\n\031remaining_tokens_f" +
      "or_sale\030\n \001(\0132\031.cosmos.base.v1beta1.Coin" +
      "B\004\310\336\037\000R\026remainingTokensForSale\0224\n\026fundin" +
      "g_module_account\030\013 \001(\tR\024fundingModuleAcc" +
      "ount\0226\n\027proceeds_module_account\030\014 \001(\tR\025p" +
      "roceedsModuleAccount\"\263\004\n\003Bid\022\016\n\002id\030\001 \001(\004" +
      "R\002id\022\035\n\nauction_id\030\002 \001(\rR\tauctionId\022\026\n\006b" +
      "idder\030\003 \001(\tR\006bidder\022H\n\020max_bid_in_usomm\030" +
      "\004 \001(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000R\r" +
      "maxBidInUsomm\022Z\n\031sale_token_minimum_amou" +
      "nt\030\005 \001(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336\037" +
      "\000R\026saleTokenMinimumAmount\022^\n\033total_fulfi" +
      "lled_sale_tokens\030\006 \001(\0132\031.cosmos.base.v1b" +
      "eta1.CoinB\004\310\336\037\000R\030totalFulfilledSaleToken" +
      "s\022q\n\036sale_token_unit_price_in_usomm\030\007 \001(" +
      "\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/" +
      "types.DecR\031saleTokenUnitPriceInUsomm\022I\n\020" +
      "total_usomm_paid\030\010 \001(\0132\031.cosmos.base.v1b" +
      "eta1.CoinB\004\310\336\037\000R\016totalUsommPaid\022!\n\014block" +
      "_height\030\t \001(\004R\013blockHeight\"\235\001\n\nTokenPric" +
      "e\022\024\n\005denom\030\001 \001(\tR\005denom\022K\n\tusd_price\030\002 \001" +
      "(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk" +
      "/types.DecR\010usdPrice\022,\n\022last_updated_blo" +
      "ck\030\003 \001(\004R\020lastUpdatedBlock\"w\n\022ProposedTo" +
      "kenPrice\022\024\n\005denom\030\001 \001(\tR\005denom\022K\n\tusd_pr" +
      "ice\030\002 \001(\tB.\310\336\037\000\332\336\037&github.com/cosmos/cos" +
      "mos-sdk/types.DecR\010usdPriceB\230\001\n\016com.auct" +
      "ion.v1B\014AuctionProtoP\001Z/github.com/peggy" +
      "jv/sommelier/v4/x/auction/types\242\002\003AXX\252\002\n" +
      "Auction.V1\312\002\nAuction\\V1\342\002\026Auction\\V1\\GPB" +
      "Metadata\352\002\013Auction::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_auction_v1_Auction_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_auction_v1_Auction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_auction_v1_Auction_descriptor,
        new java.lang.String[] { "Id", "StartingTokensForSale", "StartBlock", "EndBlock", "InitialPriceDecreaseRate", "CurrentPriceDecreaseRate", "PriceDecreaseBlockInterval", "InitialUnitPriceInUsomm", "CurrentUnitPriceInUsomm", "RemainingTokensForSale", "FundingModuleAccount", "ProceedsModuleAccount", });
    internal_static_auction_v1_Bid_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_auction_v1_Bid_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_auction_v1_Bid_descriptor,
        new java.lang.String[] { "Id", "AuctionId", "Bidder", "MaxBidInUsomm", "SaleTokenMinimumAmount", "TotalFulfilledSaleTokens", "SaleTokenUnitPriceInUsomm", "TotalUsommPaid", "BlockHeight", });
    internal_static_auction_v1_TokenPrice_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_auction_v1_TokenPrice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_auction_v1_TokenPrice_descriptor,
        new java.lang.String[] { "Denom", "UsdPrice", "LastUpdatedBlock", });
    internal_static_auction_v1_ProposedTokenPrice_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_auction_v1_ProposedTokenPrice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_auction_v1_ProposedTokenPrice_descriptor,
        new java.lang.String[] { "Denom", "UsdPrice", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: band/bandchain/v1/oracle/proof.proto

package com.bandchain.v1.oracle;

/**
 * <pre>
 * MultiStoreProof stores a compact of other Cosmos-SDK modules' storage hash in multistore to
 * compute (in combination with oracle store hash) Tendermint's application state hash at a given block.
 *
 *	                                           ________________[AppHash]_________________________
 *	                                          /                                                  &#92;
 *	                      _________________[N15]_________________                             __[N16]___
 *	                     /                                        &#92;                          /          &#92;
 *	          _______[N12]______                          _______[N13]________             [N14]        [I]
 *	         /                  &#92;                        /                    &#92;           /     &#92;
 *	    __[N8]__             __[N9]__                __[N10]__              __[N11]__    [G]   [H]
 *	   /         &#92;          /         &#92;            /          &#92;            /         &#92;
 *	  [N0]       [N1]      [N2]       [N3]       [N4]        [N5]         [N6]       [N7]
 *	/     &#92;     /    &#92;    /    &#92;     /     &#92;     /     &#92;     /     &#92;     /     &#92;     /    &#92;
 *
 * [0]   [1]  [2]   [3] [4]   [5]  [6]    [7]  [8]    [9]  [A]    [B]  [C]    [D]  [E]   [F]
 *
 * [0] - acc (auth) [1] - authz    [2] - bank     [3] - capability [4] - crisis   [5] - dist
 * [6] - evidence   [7] - feegrant [8] - gov      [9] - group      [A] - ibccore    [B] - icahost
 * [C] - mint       [D] - oracle   [E] - params   [F] - slashing   [G] - staking    [H] - transfer [I] - upgrade
 * Notice that NOT all leaves of the Merkle tree are needed in order to compute the Merkle
 * root hash, since we only want to validate the correctness of [D] In fact, only
 * [C], [N7], [N10], [N12], and [N16] are needed in order to compute [AppHash].
 * </pre>
 *
 * Protobuf type {@code bandchain.v1.oracle.MultiStoreProof}
 */
public final class MultiStoreProof extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bandchain.v1.oracle.MultiStoreProof)
    MultiStoreProofOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MultiStoreProof.newBuilder() to construct.
  private MultiStoreProof(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MultiStoreProof() {
    oracleIavlStateHash_ = com.google.protobuf.ByteString.EMPTY;
    mintStoreMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
    paramsToSlashingStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
    govToIcahostStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
    authToFeegrantStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
    stakingToUpgradeStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MultiStoreProof();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.bandchain.v1.oracle.ProofProto.internal_static_bandchain_v1_oracle_MultiStoreProof_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.bandchain.v1.oracle.ProofProto.internal_static_bandchain_v1_oracle_MultiStoreProof_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.bandchain.v1.oracle.MultiStoreProof.class, com.bandchain.v1.oracle.MultiStoreProof.Builder.class);
  }

  public static final int ORACLE_IAVL_STATE_HASH_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString oracleIavlStateHash_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <code>bytes oracle_iavl_state_hash = 1 [json_name = "oracleIavlStateHash", (.gogoproto.customname) = "OracleIAVLStateHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
   * @return The oracleIavlStateHash.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getOracleIavlStateHash() {
    return oracleIavlStateHash_;
  }

  public static final int MINT_STORE_MERKLE_HASH_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString mintStoreMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <code>bytes mint_store_merkle_hash = 2 [json_name = "mintStoreMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
   * @return The mintStoreMerkleHash.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getMintStoreMerkleHash() {
    return mintStoreMerkleHash_;
  }

  public static final int PARAMS_TO_SLASHING_STORES_MERKLE_HASH_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString paramsToSlashingStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <code>bytes params_to_slashing_stores_merkle_hash = 3 [json_name = "paramsToSlashingStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
   * @return The paramsToSlashingStoresMerkleHash.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getParamsToSlashingStoresMerkleHash() {
    return paramsToSlashingStoresMerkleHash_;
  }

  public static final int GOV_TO_ICAHOST_STORES_MERKLE_HASH_FIELD_NUMBER = 4;
  private com.google.protobuf.ByteString govToIcahostStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <code>bytes gov_to_icahost_stores_merkle_hash = 4 [json_name = "govToIcahostStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
   * @return The govToIcahostStoresMerkleHash.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getGovToIcahostStoresMerkleHash() {
    return govToIcahostStoresMerkleHash_;
  }

  public static final int AUTH_TO_FEEGRANT_STORES_MERKLE_HASH_FIELD_NUMBER = 5;
  private com.google.protobuf.ByteString authToFeegrantStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <code>bytes auth_to_feegrant_stores_merkle_hash = 5 [json_name = "authToFeegrantStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
   * @return The authToFeegrantStoresMerkleHash.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getAuthToFeegrantStoresMerkleHash() {
    return authToFeegrantStoresMerkleHash_;
  }

  public static final int STAKING_TO_UPGRADE_STORES_MERKLE_HASH_FIELD_NUMBER = 6;
  private com.google.protobuf.ByteString stakingToUpgradeStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <code>bytes staking_to_upgrade_stores_merkle_hash = 6 [json_name = "stakingToUpgradeStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
   * @return The stakingToUpgradeStoresMerkleHash.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getStakingToUpgradeStoresMerkleHash() {
    return stakingToUpgradeStoresMerkleHash_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!oracleIavlStateHash_.isEmpty()) {
      output.writeBytes(1, oracleIavlStateHash_);
    }
    if (!mintStoreMerkleHash_.isEmpty()) {
      output.writeBytes(2, mintStoreMerkleHash_);
    }
    if (!paramsToSlashingStoresMerkleHash_.isEmpty()) {
      output.writeBytes(3, paramsToSlashingStoresMerkleHash_);
    }
    if (!govToIcahostStoresMerkleHash_.isEmpty()) {
      output.writeBytes(4, govToIcahostStoresMerkleHash_);
    }
    if (!authToFeegrantStoresMerkleHash_.isEmpty()) {
      output.writeBytes(5, authToFeegrantStoresMerkleHash_);
    }
    if (!stakingToUpgradeStoresMerkleHash_.isEmpty()) {
      output.writeBytes(6, stakingToUpgradeStoresMerkleHash_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!oracleIavlStateHash_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, oracleIavlStateHash_);
    }
    if (!mintStoreMerkleHash_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, mintStoreMerkleHash_);
    }
    if (!paramsToSlashingStoresMerkleHash_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(3, paramsToSlashingStoresMerkleHash_);
    }
    if (!govToIcahostStoresMerkleHash_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(4, govToIcahostStoresMerkleHash_);
    }
    if (!authToFeegrantStoresMerkleHash_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(5, authToFeegrantStoresMerkleHash_);
    }
    if (!stakingToUpgradeStoresMerkleHash_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(6, stakingToUpgradeStoresMerkleHash_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.bandchain.v1.oracle.MultiStoreProof)) {
      return super.equals(obj);
    }
    com.bandchain.v1.oracle.MultiStoreProof other = (com.bandchain.v1.oracle.MultiStoreProof) obj;

    if (!getOracleIavlStateHash()
        .equals(other.getOracleIavlStateHash())) return false;
    if (!getMintStoreMerkleHash()
        .equals(other.getMintStoreMerkleHash())) return false;
    if (!getParamsToSlashingStoresMerkleHash()
        .equals(other.getParamsToSlashingStoresMerkleHash())) return false;
    if (!getGovToIcahostStoresMerkleHash()
        .equals(other.getGovToIcahostStoresMerkleHash())) return false;
    if (!getAuthToFeegrantStoresMerkleHash()
        .equals(other.getAuthToFeegrantStoresMerkleHash())) return false;
    if (!getStakingToUpgradeStoresMerkleHash()
        .equals(other.getStakingToUpgradeStoresMerkleHash())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ORACLE_IAVL_STATE_HASH_FIELD_NUMBER;
    hash = (53 * hash) + getOracleIavlStateHash().hashCode();
    hash = (37 * hash) + MINT_STORE_MERKLE_HASH_FIELD_NUMBER;
    hash = (53 * hash) + getMintStoreMerkleHash().hashCode();
    hash = (37 * hash) + PARAMS_TO_SLASHING_STORES_MERKLE_HASH_FIELD_NUMBER;
    hash = (53 * hash) + getParamsToSlashingStoresMerkleHash().hashCode();
    hash = (37 * hash) + GOV_TO_ICAHOST_STORES_MERKLE_HASH_FIELD_NUMBER;
    hash = (53 * hash) + getGovToIcahostStoresMerkleHash().hashCode();
    hash = (37 * hash) + AUTH_TO_FEEGRANT_STORES_MERKLE_HASH_FIELD_NUMBER;
    hash = (53 * hash) + getAuthToFeegrantStoresMerkleHash().hashCode();
    hash = (37 * hash) + STAKING_TO_UPGRADE_STORES_MERKLE_HASH_FIELD_NUMBER;
    hash = (53 * hash) + getStakingToUpgradeStoresMerkleHash().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.bandchain.v1.oracle.MultiStoreProof parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bandchain.v1.oracle.MultiStoreProof parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bandchain.v1.oracle.MultiStoreProof parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bandchain.v1.oracle.MultiStoreProof parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bandchain.v1.oracle.MultiStoreProof parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bandchain.v1.oracle.MultiStoreProof parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bandchain.v1.oracle.MultiStoreProof parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.bandchain.v1.oracle.MultiStoreProof parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.bandchain.v1.oracle.MultiStoreProof parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.bandchain.v1.oracle.MultiStoreProof parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.bandchain.v1.oracle.MultiStoreProof parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.bandchain.v1.oracle.MultiStoreProof parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.bandchain.v1.oracle.MultiStoreProof prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * MultiStoreProof stores a compact of other Cosmos-SDK modules' storage hash in multistore to
   * compute (in combination with oracle store hash) Tendermint's application state hash at a given block.
   *
   *	                                           ________________[AppHash]_________________________
   *	                                          /                                                  &#92;
   *	                      _________________[N15]_________________                             __[N16]___
   *	                     /                                        &#92;                          /          &#92;
   *	          _______[N12]______                          _______[N13]________             [N14]        [I]
   *	         /                  &#92;                        /                    &#92;           /     &#92;
   *	    __[N8]__             __[N9]__                __[N10]__              __[N11]__    [G]   [H]
   *	   /         &#92;          /         &#92;            /          &#92;            /         &#92;
   *	  [N0]       [N1]      [N2]       [N3]       [N4]        [N5]         [N6]       [N7]
   *	/     &#92;     /    &#92;    /    &#92;     /     &#92;     /     &#92;     /     &#92;     /     &#92;     /    &#92;
   *
   * [0]   [1]  [2]   [3] [4]   [5]  [6]    [7]  [8]    [9]  [A]    [B]  [C]    [D]  [E]   [F]
   *
   * [0] - acc (auth) [1] - authz    [2] - bank     [3] - capability [4] - crisis   [5] - dist
   * [6] - evidence   [7] - feegrant [8] - gov      [9] - group      [A] - ibccore    [B] - icahost
   * [C] - mint       [D] - oracle   [E] - params   [F] - slashing   [G] - staking    [H] - transfer [I] - upgrade
   * Notice that NOT all leaves of the Merkle tree are needed in order to compute the Merkle
   * root hash, since we only want to validate the correctness of [D] In fact, only
   * [C], [N7], [N10], [N12], and [N16] are needed in order to compute [AppHash].
   * </pre>
   *
   * Protobuf type {@code bandchain.v1.oracle.MultiStoreProof}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bandchain.v1.oracle.MultiStoreProof)
      com.bandchain.v1.oracle.MultiStoreProofOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bandchain.v1.oracle.ProofProto.internal_static_bandchain_v1_oracle_MultiStoreProof_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bandchain.v1.oracle.ProofProto.internal_static_bandchain_v1_oracle_MultiStoreProof_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bandchain.v1.oracle.MultiStoreProof.class, com.bandchain.v1.oracle.MultiStoreProof.Builder.class);
    }

    // Construct using com.bandchain.v1.oracle.MultiStoreProof.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      oracleIavlStateHash_ = com.google.protobuf.ByteString.EMPTY;
      mintStoreMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
      paramsToSlashingStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
      govToIcahostStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
      authToFeegrantStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
      stakingToUpgradeStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.bandchain.v1.oracle.ProofProto.internal_static_bandchain_v1_oracle_MultiStoreProof_descriptor;
    }

    @java.lang.Override
    public com.bandchain.v1.oracle.MultiStoreProof getDefaultInstanceForType() {
      return com.bandchain.v1.oracle.MultiStoreProof.getDefaultInstance();
    }

    @java.lang.Override
    public com.bandchain.v1.oracle.MultiStoreProof build() {
      com.bandchain.v1.oracle.MultiStoreProof result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.bandchain.v1.oracle.MultiStoreProof buildPartial() {
      com.bandchain.v1.oracle.MultiStoreProof result = new com.bandchain.v1.oracle.MultiStoreProof(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.bandchain.v1.oracle.MultiStoreProof result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.oracleIavlStateHash_ = oracleIavlStateHash_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.mintStoreMerkleHash_ = mintStoreMerkleHash_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.paramsToSlashingStoresMerkleHash_ = paramsToSlashingStoresMerkleHash_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.govToIcahostStoresMerkleHash_ = govToIcahostStoresMerkleHash_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.authToFeegrantStoresMerkleHash_ = authToFeegrantStoresMerkleHash_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.stakingToUpgradeStoresMerkleHash_ = stakingToUpgradeStoresMerkleHash_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.bandchain.v1.oracle.MultiStoreProof) {
        return mergeFrom((com.bandchain.v1.oracle.MultiStoreProof)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.bandchain.v1.oracle.MultiStoreProof other) {
      if (other == com.bandchain.v1.oracle.MultiStoreProof.getDefaultInstance()) return this;
      if (other.getOracleIavlStateHash() != com.google.protobuf.ByteString.EMPTY) {
        setOracleIavlStateHash(other.getOracleIavlStateHash());
      }
      if (other.getMintStoreMerkleHash() != com.google.protobuf.ByteString.EMPTY) {
        setMintStoreMerkleHash(other.getMintStoreMerkleHash());
      }
      if (other.getParamsToSlashingStoresMerkleHash() != com.google.protobuf.ByteString.EMPTY) {
        setParamsToSlashingStoresMerkleHash(other.getParamsToSlashingStoresMerkleHash());
      }
      if (other.getGovToIcahostStoresMerkleHash() != com.google.protobuf.ByteString.EMPTY) {
        setGovToIcahostStoresMerkleHash(other.getGovToIcahostStoresMerkleHash());
      }
      if (other.getAuthToFeegrantStoresMerkleHash() != com.google.protobuf.ByteString.EMPTY) {
        setAuthToFeegrantStoresMerkleHash(other.getAuthToFeegrantStoresMerkleHash());
      }
      if (other.getStakingToUpgradeStoresMerkleHash() != com.google.protobuf.ByteString.EMPTY) {
        setStakingToUpgradeStoresMerkleHash(other.getStakingToUpgradeStoresMerkleHash());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              oracleIavlStateHash_ = input.readBytes();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              mintStoreMerkleHash_ = input.readBytes();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              paramsToSlashingStoresMerkleHash_ = input.readBytes();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              govToIcahostStoresMerkleHash_ = input.readBytes();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              authToFeegrantStoresMerkleHash_ = input.readBytes();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              stakingToUpgradeStoresMerkleHash_ = input.readBytes();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.ByteString oracleIavlStateHash_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes oracle_iavl_state_hash = 1 [json_name = "oracleIavlStateHash", (.gogoproto.customname) = "OracleIAVLStateHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @return The oracleIavlStateHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getOracleIavlStateHash() {
      return oracleIavlStateHash_;
    }
    /**
     * <code>bytes oracle_iavl_state_hash = 1 [json_name = "oracleIavlStateHash", (.gogoproto.customname) = "OracleIAVLStateHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @param value The oracleIavlStateHash to set.
     * @return This builder for chaining.
     */
    public Builder setOracleIavlStateHash(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      oracleIavlStateHash_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>bytes oracle_iavl_state_hash = 1 [json_name = "oracleIavlStateHash", (.gogoproto.customname) = "OracleIAVLStateHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOracleIavlStateHash() {
      bitField0_ = (bitField0_ & ~0x00000001);
      oracleIavlStateHash_ = getDefaultInstance().getOracleIavlStateHash();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString mintStoreMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes mint_store_merkle_hash = 2 [json_name = "mintStoreMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @return The mintStoreMerkleHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMintStoreMerkleHash() {
      return mintStoreMerkleHash_;
    }
    /**
     * <code>bytes mint_store_merkle_hash = 2 [json_name = "mintStoreMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @param value The mintStoreMerkleHash to set.
     * @return This builder for chaining.
     */
    public Builder setMintStoreMerkleHash(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      mintStoreMerkleHash_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>bytes mint_store_merkle_hash = 2 [json_name = "mintStoreMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMintStoreMerkleHash() {
      bitField0_ = (bitField0_ & ~0x00000002);
      mintStoreMerkleHash_ = getDefaultInstance().getMintStoreMerkleHash();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString paramsToSlashingStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes params_to_slashing_stores_merkle_hash = 3 [json_name = "paramsToSlashingStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @return The paramsToSlashingStoresMerkleHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getParamsToSlashingStoresMerkleHash() {
      return paramsToSlashingStoresMerkleHash_;
    }
    /**
     * <code>bytes params_to_slashing_stores_merkle_hash = 3 [json_name = "paramsToSlashingStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @param value The paramsToSlashingStoresMerkleHash to set.
     * @return This builder for chaining.
     */
    public Builder setParamsToSlashingStoresMerkleHash(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      paramsToSlashingStoresMerkleHash_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>bytes params_to_slashing_stores_merkle_hash = 3 [json_name = "paramsToSlashingStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearParamsToSlashingStoresMerkleHash() {
      bitField0_ = (bitField0_ & ~0x00000004);
      paramsToSlashingStoresMerkleHash_ = getDefaultInstance().getParamsToSlashingStoresMerkleHash();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString govToIcahostStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes gov_to_icahost_stores_merkle_hash = 4 [json_name = "govToIcahostStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @return The govToIcahostStoresMerkleHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getGovToIcahostStoresMerkleHash() {
      return govToIcahostStoresMerkleHash_;
    }
    /**
     * <code>bytes gov_to_icahost_stores_merkle_hash = 4 [json_name = "govToIcahostStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @param value The govToIcahostStoresMerkleHash to set.
     * @return This builder for chaining.
     */
    public Builder setGovToIcahostStoresMerkleHash(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      govToIcahostStoresMerkleHash_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>bytes gov_to_icahost_stores_merkle_hash = 4 [json_name = "govToIcahostStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearGovToIcahostStoresMerkleHash() {
      bitField0_ = (bitField0_ & ~0x00000008);
      govToIcahostStoresMerkleHash_ = getDefaultInstance().getGovToIcahostStoresMerkleHash();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString authToFeegrantStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes auth_to_feegrant_stores_merkle_hash = 5 [json_name = "authToFeegrantStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @return The authToFeegrantStoresMerkleHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAuthToFeegrantStoresMerkleHash() {
      return authToFeegrantStoresMerkleHash_;
    }
    /**
     * <code>bytes auth_to_feegrant_stores_merkle_hash = 5 [json_name = "authToFeegrantStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @param value The authToFeegrantStoresMerkleHash to set.
     * @return This builder for chaining.
     */
    public Builder setAuthToFeegrantStoresMerkleHash(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      authToFeegrantStoresMerkleHash_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>bytes auth_to_feegrant_stores_merkle_hash = 5 [json_name = "authToFeegrantStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAuthToFeegrantStoresMerkleHash() {
      bitField0_ = (bitField0_ & ~0x00000010);
      authToFeegrantStoresMerkleHash_ = getDefaultInstance().getAuthToFeegrantStoresMerkleHash();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString stakingToUpgradeStoresMerkleHash_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes staking_to_upgrade_stores_merkle_hash = 6 [json_name = "stakingToUpgradeStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @return The stakingToUpgradeStoresMerkleHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getStakingToUpgradeStoresMerkleHash() {
      return stakingToUpgradeStoresMerkleHash_;
    }
    /**
     * <code>bytes staking_to_upgrade_stores_merkle_hash = 6 [json_name = "stakingToUpgradeStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @param value The stakingToUpgradeStoresMerkleHash to set.
     * @return This builder for chaining.
     */
    public Builder setStakingToUpgradeStoresMerkleHash(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      stakingToUpgradeStoresMerkleHash_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>bytes staking_to_upgrade_stores_merkle_hash = 6 [json_name = "stakingToUpgradeStoresMerkleHash", (.gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStakingToUpgradeStoresMerkleHash() {
      bitField0_ = (bitField0_ & ~0x00000020);
      stakingToUpgradeStoresMerkleHash_ = getDefaultInstance().getStakingToUpgradeStoresMerkleHash();
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bandchain.v1.oracle.MultiStoreProof)
  }

  // @@protoc_insertion_point(class_scope:bandchain.v1.oracle.MultiStoreProof)
  private static final com.bandchain.v1.oracle.MultiStoreProof DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.bandchain.v1.oracle.MultiStoreProof();
  }

  public static com.bandchain.v1.oracle.MultiStoreProof getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MultiStoreProof>
      PARSER = new com.google.protobuf.AbstractParser<MultiStoreProof>() {
    @java.lang.Override
    public MultiStoreProof parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MultiStoreProof> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MultiStoreProof> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.bandchain.v1.oracle.MultiStoreProof getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


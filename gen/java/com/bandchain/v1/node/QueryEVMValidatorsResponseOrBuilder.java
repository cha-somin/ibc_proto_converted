// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: band/bandchain/v1/node/query.proto

package com.bandchain.v1.node;

public interface QueryEVMValidatorsResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bandchain.v1.node.QueryEVMValidatorsResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * BlockHeight is the latest block height
   * </pre>
   *
   * <code>int64 block_height = 1 [json_name = "blockHeight"];</code>
   * @return The blockHeight.
   */
  long getBlockHeight();

  /**
   * <pre>
   * Validators is list of validator's addresss and voting power
   * </pre>
   *
   * <code>repeated .bandchain.v1.node.ValidatorMinimal validators = 2 [json_name = "validators", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<com.bandchain.v1.node.ValidatorMinimal> 
      getValidatorsList();
  /**
   * <pre>
   * Validators is list of validator's addresss and voting power
   * </pre>
   *
   * <code>repeated .bandchain.v1.node.ValidatorMinimal validators = 2 [json_name = "validators", (.gogoproto.nullable) = false];</code>
   */
  com.bandchain.v1.node.ValidatorMinimal getValidators(int index);
  /**
   * <pre>
   * Validators is list of validator's addresss and voting power
   * </pre>
   *
   * <code>repeated .bandchain.v1.node.ValidatorMinimal validators = 2 [json_name = "validators", (.gogoproto.nullable) = false];</code>
   */
  int getValidatorsCount();
  /**
   * <pre>
   * Validators is list of validator's addresss and voting power
   * </pre>
   *
   * <code>repeated .bandchain.v1.node.ValidatorMinimal validators = 2 [json_name = "validators", (.gogoproto.nullable) = false];</code>
   */
  java.util.List<? extends com.bandchain.v1.node.ValidatorMinimalOrBuilder> 
      getValidatorsOrBuilderList();
  /**
   * <pre>
   * Validators is list of validator's addresss and voting power
   * </pre>
   *
   * <code>repeated .bandchain.v1.node.ValidatorMinimal validators = 2 [json_name = "validators", (.gogoproto.nullable) = false];</code>
   */
  com.bandchain.v1.node.ValidatorMinimalOrBuilder getValidatorsOrBuilder(
      int index);
}

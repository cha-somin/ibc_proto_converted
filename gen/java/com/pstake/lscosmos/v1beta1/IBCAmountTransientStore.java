// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pstake/lscosmos/v1beta1/lscosmos.proto

package com.pstake.lscosmos.v1beta1;

/**
 * Protobuf type {@code pstake.lscosmos.v1beta1.IBCAmountTransientStore}
 */
public final class IBCAmountTransientStore extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:pstake.lscosmos.v1beta1.IBCAmountTransientStore)
    IBCAmountTransientStoreOrBuilder {
private static final long serialVersionUID = 0L;
  // Use IBCAmountTransientStore.newBuilder() to construct.
  private IBCAmountTransientStore(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private IBCAmountTransientStore() {
    iBCTransfer_ = java.util.Collections.emptyList();
    undelegatonCompleteIBCTransfer_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new IBCAmountTransientStore();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.pstake.lscosmos.v1beta1.LscosmosProto.internal_static_pstake_lscosmos_v1beta1_IBCAmountTransientStore_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.pstake.lscosmos.v1beta1.LscosmosProto.internal_static_pstake_lscosmos_v1beta1_IBCAmountTransientStore_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.pstake.lscosmos.v1beta1.IBCAmountTransientStore.class, com.pstake.lscosmos.v1beta1.IBCAmountTransientStore.Builder.class);
  }

  public static final int I_B_C_TRANSFER_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> iBCTransfer_;
  /**
   * <pre>
   * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getIBCTransferList() {
    return iBCTransfer_;
  }
  /**
   * <pre>
   * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getIBCTransferOrBuilderList() {
    return iBCTransfer_;
  }
  /**
   * <pre>
   * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public int getIBCTransferCount() {
    return iBCTransfer_.size();
  }
  /**
   * <pre>
   * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getIBCTransfer(int index) {
    return iBCTransfer_.get(index);
  }
  /**
   * <pre>
   * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getIBCTransferOrBuilder(
      int index) {
    return iBCTransfer_.get(index);
  }

  public static final int I_C_A_DELEGATE_FIELD_NUMBER = 2;
  private com.cosmos.base.v1beta1.Coin iCADelegate_;
  /**
   * <pre>
   * ica_delegate stores only token which has staking baseDenom
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin i_c_a_delegate = 2 [json_name = "iCADelegate", (.gogoproto.nullable) = false];</code>
   * @return Whether the iCADelegate field is set.
   */
  @java.lang.Override
  public boolean hasICADelegate() {
    return iCADelegate_ != null;
  }
  /**
   * <pre>
   * ica_delegate stores only token which has staking baseDenom
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin i_c_a_delegate = 2 [json_name = "iCADelegate", (.gogoproto.nullable) = false];</code>
   * @return The iCADelegate.
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getICADelegate() {
    return iCADelegate_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : iCADelegate_;
  }
  /**
   * <pre>
   * ica_delegate stores only token which has staking baseDenom
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin i_c_a_delegate = 2 [json_name = "iCADelegate", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getICADelegateOrBuilder() {
    return iCADelegate_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : iCADelegate_;
  }

  public static final int UNDELEGATON_COMPLETE_I_B_C_TRANSFER_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer> undelegatonCompleteIBCTransfer_;
  /**
   * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer> getUndelegatonCompleteIBCTransferList() {
    return undelegatonCompleteIBCTransfer_;
  }
  /**
   * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.pstake.lscosmos.v1beta1.TransientUndelegationTransferOrBuilder> 
      getUndelegatonCompleteIBCTransferOrBuilderList() {
    return undelegatonCompleteIBCTransfer_;
  }
  /**
   * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public int getUndelegatonCompleteIBCTransferCount() {
    return undelegatonCompleteIBCTransfer_.size();
  }
  /**
   * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer getUndelegatonCompleteIBCTransfer(int index) {
    return undelegatonCompleteIBCTransfer_.get(index);
  }
  /**
   * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.pstake.lscosmos.v1beta1.TransientUndelegationTransferOrBuilder getUndelegatonCompleteIBCTransferOrBuilder(
      int index) {
    return undelegatonCompleteIBCTransfer_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < iBCTransfer_.size(); i++) {
      output.writeMessage(1, iBCTransfer_.get(i));
    }
    if (iCADelegate_ != null) {
      output.writeMessage(2, getICADelegate());
    }
    for (int i = 0; i < undelegatonCompleteIBCTransfer_.size(); i++) {
      output.writeMessage(3, undelegatonCompleteIBCTransfer_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < iBCTransfer_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, iBCTransfer_.get(i));
    }
    if (iCADelegate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getICADelegate());
    }
    for (int i = 0; i < undelegatonCompleteIBCTransfer_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, undelegatonCompleteIBCTransfer_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.pstake.lscosmos.v1beta1.IBCAmountTransientStore)) {
      return super.equals(obj);
    }
    com.pstake.lscosmos.v1beta1.IBCAmountTransientStore other = (com.pstake.lscosmos.v1beta1.IBCAmountTransientStore) obj;

    if (!getIBCTransferList()
        .equals(other.getIBCTransferList())) return false;
    if (hasICADelegate() != other.hasICADelegate()) return false;
    if (hasICADelegate()) {
      if (!getICADelegate()
          .equals(other.getICADelegate())) return false;
    }
    if (!getUndelegatonCompleteIBCTransferList()
        .equals(other.getUndelegatonCompleteIBCTransferList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getIBCTransferCount() > 0) {
      hash = (37 * hash) + I_B_C_TRANSFER_FIELD_NUMBER;
      hash = (53 * hash) + getIBCTransferList().hashCode();
    }
    if (hasICADelegate()) {
      hash = (37 * hash) + I_C_A_DELEGATE_FIELD_NUMBER;
      hash = (53 * hash) + getICADelegate().hashCode();
    }
    if (getUndelegatonCompleteIBCTransferCount() > 0) {
      hash = (37 * hash) + UNDELEGATON_COMPLETE_I_B_C_TRANSFER_FIELD_NUMBER;
      hash = (53 * hash) + getUndelegatonCompleteIBCTransferList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.pstake.lscosmos.v1beta1.IBCAmountTransientStore prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code pstake.lscosmos.v1beta1.IBCAmountTransientStore}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:pstake.lscosmos.v1beta1.IBCAmountTransientStore)
      com.pstake.lscosmos.v1beta1.IBCAmountTransientStoreOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pstake.lscosmos.v1beta1.LscosmosProto.internal_static_pstake_lscosmos_v1beta1_IBCAmountTransientStore_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pstake.lscosmos.v1beta1.LscosmosProto.internal_static_pstake_lscosmos_v1beta1_IBCAmountTransientStore_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pstake.lscosmos.v1beta1.IBCAmountTransientStore.class, com.pstake.lscosmos.v1beta1.IBCAmountTransientStore.Builder.class);
    }

    // Construct using com.pstake.lscosmos.v1beta1.IBCAmountTransientStore.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (iBCTransferBuilder_ == null) {
        iBCTransfer_ = java.util.Collections.emptyList();
      } else {
        iBCTransfer_ = null;
        iBCTransferBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      iCADelegate_ = null;
      if (iCADelegateBuilder_ != null) {
        iCADelegateBuilder_.dispose();
        iCADelegateBuilder_ = null;
      }
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        undelegatonCompleteIBCTransfer_ = java.util.Collections.emptyList();
      } else {
        undelegatonCompleteIBCTransfer_ = null;
        undelegatonCompleteIBCTransferBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.pstake.lscosmos.v1beta1.LscosmosProto.internal_static_pstake_lscosmos_v1beta1_IBCAmountTransientStore_descriptor;
    }

    @java.lang.Override
    public com.pstake.lscosmos.v1beta1.IBCAmountTransientStore getDefaultInstanceForType() {
      return com.pstake.lscosmos.v1beta1.IBCAmountTransientStore.getDefaultInstance();
    }

    @java.lang.Override
    public com.pstake.lscosmos.v1beta1.IBCAmountTransientStore build() {
      com.pstake.lscosmos.v1beta1.IBCAmountTransientStore result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.pstake.lscosmos.v1beta1.IBCAmountTransientStore buildPartial() {
      com.pstake.lscosmos.v1beta1.IBCAmountTransientStore result = new com.pstake.lscosmos.v1beta1.IBCAmountTransientStore(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.pstake.lscosmos.v1beta1.IBCAmountTransientStore result) {
      if (iBCTransferBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          iBCTransfer_ = java.util.Collections.unmodifiableList(iBCTransfer_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.iBCTransfer_ = iBCTransfer_;
      } else {
        result.iBCTransfer_ = iBCTransferBuilder_.build();
      }
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          undelegatonCompleteIBCTransfer_ = java.util.Collections.unmodifiableList(undelegatonCompleteIBCTransfer_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.undelegatonCompleteIBCTransfer_ = undelegatonCompleteIBCTransfer_;
      } else {
        result.undelegatonCompleteIBCTransfer_ = undelegatonCompleteIBCTransferBuilder_.build();
      }
    }

    private void buildPartial0(com.pstake.lscosmos.v1beta1.IBCAmountTransientStore result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.iCADelegate_ = iCADelegateBuilder_ == null
            ? iCADelegate_
            : iCADelegateBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.pstake.lscosmos.v1beta1.IBCAmountTransientStore) {
        return mergeFrom((com.pstake.lscosmos.v1beta1.IBCAmountTransientStore)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.pstake.lscosmos.v1beta1.IBCAmountTransientStore other) {
      if (other == com.pstake.lscosmos.v1beta1.IBCAmountTransientStore.getDefaultInstance()) return this;
      if (iBCTransferBuilder_ == null) {
        if (!other.iBCTransfer_.isEmpty()) {
          if (iBCTransfer_.isEmpty()) {
            iBCTransfer_ = other.iBCTransfer_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIBCTransferIsMutable();
            iBCTransfer_.addAll(other.iBCTransfer_);
          }
          onChanged();
        }
      } else {
        if (!other.iBCTransfer_.isEmpty()) {
          if (iBCTransferBuilder_.isEmpty()) {
            iBCTransferBuilder_.dispose();
            iBCTransferBuilder_ = null;
            iBCTransfer_ = other.iBCTransfer_;
            bitField0_ = (bitField0_ & ~0x00000001);
            iBCTransferBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getIBCTransferFieldBuilder() : null;
          } else {
            iBCTransferBuilder_.addAllMessages(other.iBCTransfer_);
          }
        }
      }
      if (other.hasICADelegate()) {
        mergeICADelegate(other.getICADelegate());
      }
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        if (!other.undelegatonCompleteIBCTransfer_.isEmpty()) {
          if (undelegatonCompleteIBCTransfer_.isEmpty()) {
            undelegatonCompleteIBCTransfer_ = other.undelegatonCompleteIBCTransfer_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureUndelegatonCompleteIBCTransferIsMutable();
            undelegatonCompleteIBCTransfer_.addAll(other.undelegatonCompleteIBCTransfer_);
          }
          onChanged();
        }
      } else {
        if (!other.undelegatonCompleteIBCTransfer_.isEmpty()) {
          if (undelegatonCompleteIBCTransferBuilder_.isEmpty()) {
            undelegatonCompleteIBCTransferBuilder_.dispose();
            undelegatonCompleteIBCTransferBuilder_ = null;
            undelegatonCompleteIBCTransfer_ = other.undelegatonCompleteIBCTransfer_;
            bitField0_ = (bitField0_ & ~0x00000004);
            undelegatonCompleteIBCTransferBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getUndelegatonCompleteIBCTransferFieldBuilder() : null;
          } else {
            undelegatonCompleteIBCTransferBuilder_.addAllMessages(other.undelegatonCompleteIBCTransfer_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (iBCTransferBuilder_ == null) {
                ensureIBCTransferIsMutable();
                iBCTransfer_.add(m);
              } else {
                iBCTransferBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getICADelegateFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer m =
                  input.readMessage(
                      com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.parser(),
                      extensionRegistry);
              if (undelegatonCompleteIBCTransferBuilder_ == null) {
                ensureUndelegatonCompleteIBCTransferIsMutable();
                undelegatonCompleteIBCTransfer_.add(m);
              } else {
                undelegatonCompleteIBCTransferBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.cosmos.base.v1beta1.Coin> iBCTransfer_ =
      java.util.Collections.emptyList();
    private void ensureIBCTransferIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        iBCTransfer_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(iBCTransfer_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> iBCTransferBuilder_;

    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getIBCTransferList() {
      if (iBCTransferBuilder_ == null) {
        return java.util.Collections.unmodifiableList(iBCTransfer_);
      } else {
        return iBCTransferBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getIBCTransferCount() {
      if (iBCTransferBuilder_ == null) {
        return iBCTransfer_.size();
      } else {
        return iBCTransferBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getIBCTransfer(int index) {
      if (iBCTransferBuilder_ == null) {
        return iBCTransfer_.get(index);
      } else {
        return iBCTransferBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setIBCTransfer(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (iBCTransferBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIBCTransferIsMutable();
        iBCTransfer_.set(index, value);
        onChanged();
      } else {
        iBCTransferBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setIBCTransfer(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (iBCTransferBuilder_ == null) {
        ensureIBCTransferIsMutable();
        iBCTransfer_.set(index, builderForValue.build());
        onChanged();
      } else {
        iBCTransferBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addIBCTransfer(com.cosmos.base.v1beta1.Coin value) {
      if (iBCTransferBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIBCTransferIsMutable();
        iBCTransfer_.add(value);
        onChanged();
      } else {
        iBCTransferBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addIBCTransfer(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (iBCTransferBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIBCTransferIsMutable();
        iBCTransfer_.add(index, value);
        onChanged();
      } else {
        iBCTransferBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addIBCTransfer(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (iBCTransferBuilder_ == null) {
        ensureIBCTransferIsMutable();
        iBCTransfer_.add(builderForValue.build());
        onChanged();
      } else {
        iBCTransferBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addIBCTransfer(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (iBCTransferBuilder_ == null) {
        ensureIBCTransferIsMutable();
        iBCTransfer_.add(index, builderForValue.build());
        onChanged();
      } else {
        iBCTransferBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllIBCTransfer(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (iBCTransferBuilder_ == null) {
        ensureIBCTransferIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, iBCTransfer_);
        onChanged();
      } else {
        iBCTransferBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearIBCTransfer() {
      if (iBCTransferBuilder_ == null) {
        iBCTransfer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        iBCTransferBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeIBCTransfer(int index) {
      if (iBCTransferBuilder_ == null) {
        ensureIBCTransferIsMutable();
        iBCTransfer_.remove(index);
        onChanged();
      } else {
        iBCTransferBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getIBCTransferBuilder(
        int index) {
      return getIBCTransferFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getIBCTransferOrBuilder(
        int index) {
      if (iBCTransferBuilder_ == null) {
        return iBCTransfer_.get(index);  } else {
        return iBCTransferBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getIBCTransferOrBuilderList() {
      if (iBCTransferBuilder_ != null) {
        return iBCTransferBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(iBCTransfer_);
      }
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addIBCTransferBuilder() {
      return getIBCTransferFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addIBCTransferBuilder(
        int index) {
      return getIBCTransferFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * ibc_transfer stores only tokens which have ibc denoms "ibc/HEXHASH"
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin i_b_c_transfer = 1 [json_name = "iBCTransfer", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getIBCTransferBuilderList() {
      return getIBCTransferFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getIBCTransferFieldBuilder() {
      if (iBCTransferBuilder_ == null) {
        iBCTransferBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                iBCTransfer_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        iBCTransfer_ = null;
      }
      return iBCTransferBuilder_;
    }

    private com.cosmos.base.v1beta1.Coin iCADelegate_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> iCADelegateBuilder_;
    /**
     * <pre>
     * ica_delegate stores only token which has staking baseDenom
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin i_c_a_delegate = 2 [json_name = "iCADelegate", (.gogoproto.nullable) = false];</code>
     * @return Whether the iCADelegate field is set.
     */
    public boolean hasICADelegate() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * ica_delegate stores only token which has staking baseDenom
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin i_c_a_delegate = 2 [json_name = "iCADelegate", (.gogoproto.nullable) = false];</code>
     * @return The iCADelegate.
     */
    public com.cosmos.base.v1beta1.Coin getICADelegate() {
      if (iCADelegateBuilder_ == null) {
        return iCADelegate_ == null ? com.cosmos.base.v1beta1.Coin.getDefaultInstance() : iCADelegate_;
      } else {
        return iCADelegateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * ica_delegate stores only token which has staking baseDenom
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin i_c_a_delegate = 2 [json_name = "iCADelegate", (.gogoproto.nullable) = false];</code>
     */
    public Builder setICADelegate(com.cosmos.base.v1beta1.Coin value) {
      if (iCADelegateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        iCADelegate_ = value;
      } else {
        iCADelegateBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ica_delegate stores only token which has staking baseDenom
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin i_c_a_delegate = 2 [json_name = "iCADelegate", (.gogoproto.nullable) = false];</code>
     */
    public Builder setICADelegate(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (iCADelegateBuilder_ == null) {
        iCADelegate_ = builderForValue.build();
      } else {
        iCADelegateBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ica_delegate stores only token which has staking baseDenom
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin i_c_a_delegate = 2 [json_name = "iCADelegate", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeICADelegate(com.cosmos.base.v1beta1.Coin value) {
      if (iCADelegateBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          iCADelegate_ != null &&
          iCADelegate_ != com.cosmos.base.v1beta1.Coin.getDefaultInstance()) {
          getICADelegateBuilder().mergeFrom(value);
        } else {
          iCADelegate_ = value;
        }
      } else {
        iCADelegateBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ica_delegate stores only token which has staking baseDenom
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin i_c_a_delegate = 2 [json_name = "iCADelegate", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearICADelegate() {
      bitField0_ = (bitField0_ & ~0x00000002);
      iCADelegate_ = null;
      if (iCADelegateBuilder_ != null) {
        iCADelegateBuilder_.dispose();
        iCADelegateBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ica_delegate stores only token which has staking baseDenom
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin i_c_a_delegate = 2 [json_name = "iCADelegate", (.gogoproto.nullable) = false];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getICADelegateBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getICADelegateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * ica_delegate stores only token which has staking baseDenom
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin i_c_a_delegate = 2 [json_name = "iCADelegate", (.gogoproto.nullable) = false];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getICADelegateOrBuilder() {
      if (iCADelegateBuilder_ != null) {
        return iCADelegateBuilder_.getMessageOrBuilder();
      } else {
        return iCADelegate_ == null ?
            com.cosmos.base.v1beta1.Coin.getDefaultInstance() : iCADelegate_;
      }
    }
    /**
     * <pre>
     * ica_delegate stores only token which has staking baseDenom
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin i_c_a_delegate = 2 [json_name = "iCADelegate", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getICADelegateFieldBuilder() {
      if (iCADelegateBuilder_ == null) {
        iCADelegateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                getICADelegate(),
                getParentForChildren(),
                isClean());
        iCADelegate_ = null;
      }
      return iCADelegateBuilder_;
    }

    private java.util.List<com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer> undelegatonCompleteIBCTransfer_ =
      java.util.Collections.emptyList();
    private void ensureUndelegatonCompleteIBCTransferIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        undelegatonCompleteIBCTransfer_ = new java.util.ArrayList<com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer>(undelegatonCompleteIBCTransfer_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer, com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.Builder, com.pstake.lscosmos.v1beta1.TransientUndelegationTransferOrBuilder> undelegatonCompleteIBCTransferBuilder_;

    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer> getUndelegatonCompleteIBCTransferList() {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        return java.util.Collections.unmodifiableList(undelegatonCompleteIBCTransfer_);
      } else {
        return undelegatonCompleteIBCTransferBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public int getUndelegatonCompleteIBCTransferCount() {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        return undelegatonCompleteIBCTransfer_.size();
      } else {
        return undelegatonCompleteIBCTransferBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer getUndelegatonCompleteIBCTransfer(int index) {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        return undelegatonCompleteIBCTransfer_.get(index);
      } else {
        return undelegatonCompleteIBCTransferBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public Builder setUndelegatonCompleteIBCTransfer(
        int index, com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer value) {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUndelegatonCompleteIBCTransferIsMutable();
        undelegatonCompleteIBCTransfer_.set(index, value);
        onChanged();
      } else {
        undelegatonCompleteIBCTransferBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public Builder setUndelegatonCompleteIBCTransfer(
        int index, com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.Builder builderForValue) {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        ensureUndelegatonCompleteIBCTransferIsMutable();
        undelegatonCompleteIBCTransfer_.set(index, builderForValue.build());
        onChanged();
      } else {
        undelegatonCompleteIBCTransferBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public Builder addUndelegatonCompleteIBCTransfer(com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer value) {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUndelegatonCompleteIBCTransferIsMutable();
        undelegatonCompleteIBCTransfer_.add(value);
        onChanged();
      } else {
        undelegatonCompleteIBCTransferBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public Builder addUndelegatonCompleteIBCTransfer(
        int index, com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer value) {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUndelegatonCompleteIBCTransferIsMutable();
        undelegatonCompleteIBCTransfer_.add(index, value);
        onChanged();
      } else {
        undelegatonCompleteIBCTransferBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public Builder addUndelegatonCompleteIBCTransfer(
        com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.Builder builderForValue) {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        ensureUndelegatonCompleteIBCTransferIsMutable();
        undelegatonCompleteIBCTransfer_.add(builderForValue.build());
        onChanged();
      } else {
        undelegatonCompleteIBCTransferBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public Builder addUndelegatonCompleteIBCTransfer(
        int index, com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.Builder builderForValue) {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        ensureUndelegatonCompleteIBCTransferIsMutable();
        undelegatonCompleteIBCTransfer_.add(index, builderForValue.build());
        onChanged();
      } else {
        undelegatonCompleteIBCTransferBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAllUndelegatonCompleteIBCTransfer(
        java.lang.Iterable<? extends com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer> values) {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        ensureUndelegatonCompleteIBCTransferIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, undelegatonCompleteIBCTransfer_);
        onChanged();
      } else {
        undelegatonCompleteIBCTransferBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearUndelegatonCompleteIBCTransfer() {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        undelegatonCompleteIBCTransfer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        undelegatonCompleteIBCTransferBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public Builder removeUndelegatonCompleteIBCTransfer(int index) {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        ensureUndelegatonCompleteIBCTransferIsMutable();
        undelegatonCompleteIBCTransfer_.remove(index);
        onChanged();
      } else {
        undelegatonCompleteIBCTransferBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.Builder getUndelegatonCompleteIBCTransferBuilder(
        int index) {
      return getUndelegatonCompleteIBCTransferFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public com.pstake.lscosmos.v1beta1.TransientUndelegationTransferOrBuilder getUndelegatonCompleteIBCTransferOrBuilder(
        int index) {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        return undelegatonCompleteIBCTransfer_.get(index);  } else {
        return undelegatonCompleteIBCTransferBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<? extends com.pstake.lscosmos.v1beta1.TransientUndelegationTransferOrBuilder> 
         getUndelegatonCompleteIBCTransferOrBuilderList() {
      if (undelegatonCompleteIBCTransferBuilder_ != null) {
        return undelegatonCompleteIBCTransferBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(undelegatonCompleteIBCTransfer_);
      }
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.Builder addUndelegatonCompleteIBCTransferBuilder() {
      return getUndelegatonCompleteIBCTransferFieldBuilder().addBuilder(
          com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.getDefaultInstance());
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.Builder addUndelegatonCompleteIBCTransferBuilder(
        int index) {
      return getUndelegatonCompleteIBCTransferFieldBuilder().addBuilder(
          index, com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.getDefaultInstance());
    }
    /**
     * <code>repeated .pstake.lscosmos.v1beta1.TransientUndelegationTransfer undelegaton_complete_i_b_c_transfer = 3 [json_name = "undelegatonCompleteIBCTransfer", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.Builder> 
         getUndelegatonCompleteIBCTransferBuilderList() {
      return getUndelegatonCompleteIBCTransferFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer, com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.Builder, com.pstake.lscosmos.v1beta1.TransientUndelegationTransferOrBuilder> 
        getUndelegatonCompleteIBCTransferFieldBuilder() {
      if (undelegatonCompleteIBCTransferBuilder_ == null) {
        undelegatonCompleteIBCTransferBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer, com.pstake.lscosmos.v1beta1.TransientUndelegationTransfer.Builder, com.pstake.lscosmos.v1beta1.TransientUndelegationTransferOrBuilder>(
                undelegatonCompleteIBCTransfer_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        undelegatonCompleteIBCTransfer_ = null;
      }
      return undelegatonCompleteIBCTransferBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:pstake.lscosmos.v1beta1.IBCAmountTransientStore)
  }

  // @@protoc_insertion_point(class_scope:pstake.lscosmos.v1beta1.IBCAmountTransientStore)
  private static final com.pstake.lscosmos.v1beta1.IBCAmountTransientStore DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.pstake.lscosmos.v1beta1.IBCAmountTransientStore();
  }

  public static com.pstake.lscosmos.v1beta1.IBCAmountTransientStore getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IBCAmountTransientStore>
      PARSER = new com.google.protobuf.AbstractParser<IBCAmountTransientStore>() {
    @java.lang.Override
    public IBCAmountTransientStore parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<IBCAmountTransientStore> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IBCAmountTransientStore> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.pstake.lscosmos.v1beta1.IBCAmountTransientStore getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pstake/lscosmos/v1beta1/lscosmos.proto

package com.pstake.lscosmos.v1beta1;

public interface UnbondingEpochCValueOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pstake.lscosmos.v1beta1.UnbondingEpochCValue)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int64 epoch_number = 1 [json_name = "epochNumber"];</code>
   * @return The epochNumber.
   */
  long getEpochNumber();

  /**
   * <pre>
   * c_value = stk_burn.Amount/amount_unbonded.Amount
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin s_t_k_burn = 2 [json_name = "sTKBurn", (.gogoproto.nullable) = false];</code>
   * @return Whether the sTKBurn field is set.
   */
  boolean hasSTKBurn();
  /**
   * <pre>
   * c_value = stk_burn.Amount/amount_unbonded.Amount
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin s_t_k_burn = 2 [json_name = "sTKBurn", (.gogoproto.nullable) = false];</code>
   * @return The sTKBurn.
   */
  com.cosmos.base.v1beta1.Coin getSTKBurn();
  /**
   * <pre>
   * c_value = stk_burn.Amount/amount_unbonded.Amount
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin s_t_k_burn = 2 [json_name = "sTKBurn", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getSTKBurnOrBuilder();

  /**
   * <code>.cosmos.base.v1beta1.Coin amount_unbonded = 3 [json_name = "amountUnbonded", (.gogoproto.nullable) = false];</code>
   * @return Whether the amountUnbonded field is set.
   */
  boolean hasAmountUnbonded();
  /**
   * <code>.cosmos.base.v1beta1.Coin amount_unbonded = 3 [json_name = "amountUnbonded", (.gogoproto.nullable) = false];</code>
   * @return The amountUnbonded.
   */
  com.cosmos.base.v1beta1.Coin getAmountUnbonded();
  /**
   * <code>.cosmos.base.v1beta1.Coin amount_unbonded = 3 [json_name = "amountUnbonded", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getAmountUnbondedOrBuilder();

  /**
   * <code>bool is_matured = 4 [json_name = "isMatured"];</code>
   * @return The isMatured.
   */
  boolean getIsMatured();

  /**
   * <code>bool is_failed = 5 [json_name = "isFailed"];</code>
   * @return The isFailed.
   */
  boolean getIsFailed();
}

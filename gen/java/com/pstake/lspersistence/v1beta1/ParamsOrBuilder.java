// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pstake/lspersistence/v1beta1/liquidstaking.proto

package com.pstake.lspersistence.v1beta1;

public interface ParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pstake.lspersistence.v1beta1.Params)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * LiquidBondDenom specifies the denomination of the token receiving after LiquidStaking, The value is calculated
   * through NetAmount.
   * </pre>
   *
   * <code>string liquid_bond_denom = 1 [json_name = "liquidBondDenom", (.gogoproto.moretags) = "yaml:&#92;"liquid_bond_denom&#92;""];</code>
   * @return The liquidBondDenom.
   */
  java.lang.String getLiquidBondDenom();
  /**
   * <pre>
   * LiquidBondDenom specifies the denomination of the token receiving after LiquidStaking, The value is calculated
   * through NetAmount.
   * </pre>
   *
   * <code>string liquid_bond_denom = 1 [json_name = "liquidBondDenom", (.gogoproto.moretags) = "yaml:&#92;"liquid_bond_denom&#92;""];</code>
   * @return The bytes for liquidBondDenom.
   */
  com.google.protobuf.ByteString
      getLiquidBondDenomBytes();

  /**
   * <pre>
   * WhitelistedValidators specifies the validators elected to become Active Liquid Validators.
   * </pre>
   *
   * <code>repeated .pstake.lspersistence.v1beta1.WhitelistedValidator whitelisted_validators = 2 [json_name = "whitelistedValidators", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"whitelisted_validators&#92;""];</code>
   */
  java.util.List<com.pstake.lspersistence.v1beta1.WhitelistedValidator> 
      getWhitelistedValidatorsList();
  /**
   * <pre>
   * WhitelistedValidators specifies the validators elected to become Active Liquid Validators.
   * </pre>
   *
   * <code>repeated .pstake.lspersistence.v1beta1.WhitelistedValidator whitelisted_validators = 2 [json_name = "whitelistedValidators", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"whitelisted_validators&#92;""];</code>
   */
  com.pstake.lspersistence.v1beta1.WhitelistedValidator getWhitelistedValidators(int index);
  /**
   * <pre>
   * WhitelistedValidators specifies the validators elected to become Active Liquid Validators.
   * </pre>
   *
   * <code>repeated .pstake.lspersistence.v1beta1.WhitelistedValidator whitelisted_validators = 2 [json_name = "whitelistedValidators", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"whitelisted_validators&#92;""];</code>
   */
  int getWhitelistedValidatorsCount();
  /**
   * <pre>
   * WhitelistedValidators specifies the validators elected to become Active Liquid Validators.
   * </pre>
   *
   * <code>repeated .pstake.lspersistence.v1beta1.WhitelistedValidator whitelisted_validators = 2 [json_name = "whitelistedValidators", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"whitelisted_validators&#92;""];</code>
   */
  java.util.List<? extends com.pstake.lspersistence.v1beta1.WhitelistedValidatorOrBuilder> 
      getWhitelistedValidatorsOrBuilderList();
  /**
   * <pre>
   * WhitelistedValidators specifies the validators elected to become Active Liquid Validators.
   * </pre>
   *
   * <code>repeated .pstake.lspersistence.v1beta1.WhitelistedValidator whitelisted_validators = 2 [json_name = "whitelistedValidators", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"whitelisted_validators&#92;""];</code>
   */
  com.pstake.lspersistence.v1beta1.WhitelistedValidatorOrBuilder getWhitelistedValidatorsOrBuilder(
      int index);

  /**
   * <code>string stake_fee_rate = 3 [json_name = "stakeFeeRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"stake_fee_rate&#92;"", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
   * @return The stakeFeeRate.
   */
  java.lang.String getStakeFeeRate();
  /**
   * <code>string stake_fee_rate = 3 [json_name = "stakeFeeRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"stake_fee_rate&#92;"", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
   * @return The bytes for stakeFeeRate.
   */
  com.google.protobuf.ByteString
      getStakeFeeRateBytes();

  /**
   * <pre>
   * UnstakeFeeRate specifies the fee rate when liquid unstake is requested, unbonded by subtracting it from
   * unbondingAmount
   * </pre>
   *
   * <code>string unstake_fee_rate = 4 [json_name = "unstakeFeeRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"unstake_fee_rate&#92;"", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
   * @return The unstakeFeeRate.
   */
  java.lang.String getUnstakeFeeRate();
  /**
   * <pre>
   * UnstakeFeeRate specifies the fee rate when liquid unstake is requested, unbonded by subtracting it from
   * unbondingAmount
   * </pre>
   *
   * <code>string unstake_fee_rate = 4 [json_name = "unstakeFeeRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"unstake_fee_rate&#92;"", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
   * @return The bytes for unstakeFeeRate.
   */
  com.google.protobuf.ByteString
      getUnstakeFeeRateBytes();

  /**
   * <code>string redemption_fee_rate = 5 [json_name = "redemptionFeeRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"redemption_fee_rate&#92;"", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
   * @return The redemptionFeeRate.
   */
  java.lang.String getRedemptionFeeRate();
  /**
   * <code>string redemption_fee_rate = 5 [json_name = "redemptionFeeRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"redemption_fee_rate&#92;"", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
   * @return The bytes for redemptionFeeRate.
   */
  com.google.protobuf.ByteString
      getRedemptionFeeRateBytes();

  /**
   * <code>string restake_fee_rate = 6 [json_name = "restakeFeeRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"restake_fee_rate&#92;"", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
   * @return The restakeFeeRate.
   */
  java.lang.String getRestakeFeeRate();
  /**
   * <code>string restake_fee_rate = 6 [json_name = "restakeFeeRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"restake_fee_rate&#92;"", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
   * @return The bytes for restakeFeeRate.
   */
  com.google.protobuf.ByteString
      getRestakeFeeRateBytes();

  /**
   * <pre>
   * MinLiquidStakingAmount specifies the minimum number of coins to be staked to the active liquid validators on liquid
   * staking to minimize decimal loss and consider gas efficiency.
   * </pre>
   *
   * <code>string min_liquid_staking_amount = 7 [json_name = "minLiquidStakingAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "yaml:&#92;"min_liquid_staking_amount&#92;"", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
   * @return The minLiquidStakingAmount.
   */
  java.lang.String getMinLiquidStakingAmount();
  /**
   * <pre>
   * MinLiquidStakingAmount specifies the minimum number of coins to be staked to the active liquid validators on liquid
   * staking to minimize decimal loss and consider gas efficiency.
   * </pre>
   *
   * <code>string min_liquid_staking_amount = 7 [json_name = "minLiquidStakingAmount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "yaml:&#92;"min_liquid_staking_amount&#92;"", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
   * @return The bytes for minLiquidStakingAmount.
   */
  com.google.protobuf.ByteString
      getMinLiquidStakingAmountBytes();

  /**
   * <code>string admin_address = 8 [json_name = "adminAddress", (.gogoproto.moretags) = "yaml:&#92;"admin_address&#92;"", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The adminAddress.
   */
  java.lang.String getAdminAddress();
  /**
   * <code>string admin_address = 8 [json_name = "adminAddress", (.gogoproto.moretags) = "yaml:&#92;"admin_address&#92;"", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The bytes for adminAddress.
   */
  com.google.protobuf.ByteString
      getAdminAddressBytes();

  /**
   * <code>string fee_address = 9 [json_name = "feeAddress", (.gogoproto.moretags) = "yaml:&#92;"fee_address&#92;"", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The feeAddress.
   */
  java.lang.String getFeeAddress();
  /**
   * <code>string fee_address = 9 [json_name = "feeAddress", (.gogoproto.moretags) = "yaml:&#92;"fee_address&#92;"", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The bytes for feeAddress.
   */
  com.google.protobuf.ByteString
      getFeeAddressBytes();
}

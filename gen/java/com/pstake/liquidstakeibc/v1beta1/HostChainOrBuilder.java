// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pstake/liquidstakeibc/v1beta1/liquidstakeibc.proto

package com.pstake.liquidstakeibc.v1beta1;

public interface HostChainOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pstake.liquidstakeibc.v1beta1.HostChain)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * host chain id
   * </pre>
   *
   * <code>string chain_id = 1 [json_name = "chainId"];</code>
   * @return The chainId.
   */
  java.lang.String getChainId();
  /**
   * <pre>
   * host chain id
   * </pre>
   *
   * <code>string chain_id = 1 [json_name = "chainId"];</code>
   * @return The bytes for chainId.
   */
  com.google.protobuf.ByteString
      getChainIdBytes();

  /**
   * <pre>
   * ibc connection id
   * </pre>
   *
   * <code>string connection_id = 2 [json_name = "connectionId"];</code>
   * @return The connectionId.
   */
  java.lang.String getConnectionId();
  /**
   * <pre>
   * ibc connection id
   * </pre>
   *
   * <code>string connection_id = 2 [json_name = "connectionId"];</code>
   * @return The bytes for connectionId.
   */
  com.google.protobuf.ByteString
      getConnectionIdBytes();

  /**
   * <pre>
   * module params
   * </pre>
   *
   * <code>.pstake.liquidstakeibc.v1beta1.HostChainLSParams params = 3 [json_name = "params"];</code>
   * @return Whether the params field is set.
   */
  boolean hasParams();
  /**
   * <pre>
   * module params
   * </pre>
   *
   * <code>.pstake.liquidstakeibc.v1beta1.HostChainLSParams params = 3 [json_name = "params"];</code>
   * @return The params.
   */
  com.pstake.liquidstakeibc.v1beta1.HostChainLSParams getParams();
  /**
   * <pre>
   * module params
   * </pre>
   *
   * <code>.pstake.liquidstakeibc.v1beta1.HostChainLSParams params = 3 [json_name = "params"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.HostChainLSParamsOrBuilder getParamsOrBuilder();

  /**
   * <pre>
   * native token denom
   * </pre>
   *
   * <code>string host_denom = 4 [json_name = "hostDenom"];</code>
   * @return The hostDenom.
   */
  java.lang.String getHostDenom();
  /**
   * <pre>
   * native token denom
   * </pre>
   *
   * <code>string host_denom = 4 [json_name = "hostDenom"];</code>
   * @return The bytes for hostDenom.
   */
  com.google.protobuf.ByteString
      getHostDenomBytes();

  /**
   * <pre>
   * ibc connection channel id
   * </pre>
   *
   * <code>string channel_id = 5 [json_name = "channelId"];</code>
   * @return The channelId.
   */
  java.lang.String getChannelId();
  /**
   * <pre>
   * ibc connection channel id
   * </pre>
   *
   * <code>string channel_id = 5 [json_name = "channelId"];</code>
   * @return The bytes for channelId.
   */
  com.google.protobuf.ByteString
      getChannelIdBytes();

  /**
   * <pre>
   * ibc connection port id
   * </pre>
   *
   * <code>string port_id = 6 [json_name = "portId"];</code>
   * @return The portId.
   */
  java.lang.String getPortId();
  /**
   * <pre>
   * ibc connection port id
   * </pre>
   *
   * <code>string port_id = 6 [json_name = "portId"];</code>
   * @return The bytes for portId.
   */
  com.google.protobuf.ByteString
      getPortIdBytes();

  /**
   * <pre>
   * delegation host account
   * </pre>
   *
   * <code>.pstake.liquidstakeibc.v1beta1.ICAAccount delegation_account = 7 [json_name = "delegationAccount"];</code>
   * @return Whether the delegationAccount field is set.
   */
  boolean hasDelegationAccount();
  /**
   * <pre>
   * delegation host account
   * </pre>
   *
   * <code>.pstake.liquidstakeibc.v1beta1.ICAAccount delegation_account = 7 [json_name = "delegationAccount"];</code>
   * @return The delegationAccount.
   */
  com.pstake.liquidstakeibc.v1beta1.ICAAccount getDelegationAccount();
  /**
   * <pre>
   * delegation host account
   * </pre>
   *
   * <code>.pstake.liquidstakeibc.v1beta1.ICAAccount delegation_account = 7 [json_name = "delegationAccount"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.ICAAccountOrBuilder getDelegationAccountOrBuilder();

  /**
   * <pre>
   * reward host account
   * </pre>
   *
   * <code>.pstake.liquidstakeibc.v1beta1.ICAAccount rewards_account = 8 [json_name = "rewardsAccount"];</code>
   * @return Whether the rewardsAccount field is set.
   */
  boolean hasRewardsAccount();
  /**
   * <pre>
   * reward host account
   * </pre>
   *
   * <code>.pstake.liquidstakeibc.v1beta1.ICAAccount rewards_account = 8 [json_name = "rewardsAccount"];</code>
   * @return The rewardsAccount.
   */
  com.pstake.liquidstakeibc.v1beta1.ICAAccount getRewardsAccount();
  /**
   * <pre>
   * reward host account
   * </pre>
   *
   * <code>.pstake.liquidstakeibc.v1beta1.ICAAccount rewards_account = 8 [json_name = "rewardsAccount"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.ICAAccountOrBuilder getRewardsAccountOrBuilder();

  /**
   * <pre>
   * validator set
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Validator validators = 9 [json_name = "validators"];</code>
   */
  java.util.List<com.pstake.liquidstakeibc.v1beta1.Validator> 
      getValidatorsList();
  /**
   * <pre>
   * validator set
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Validator validators = 9 [json_name = "validators"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.Validator getValidators(int index);
  /**
   * <pre>
   * validator set
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Validator validators = 9 [json_name = "validators"];</code>
   */
  int getValidatorsCount();
  /**
   * <pre>
   * validator set
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Validator validators = 9 [json_name = "validators"];</code>
   */
  java.util.List<? extends com.pstake.liquidstakeibc.v1beta1.ValidatorOrBuilder> 
      getValidatorsOrBuilderList();
  /**
   * <pre>
   * validator set
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Validator validators = 9 [json_name = "validators"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.ValidatorOrBuilder getValidatorsOrBuilder(
      int index);

  /**
   * <pre>
   * minimum ls amount
   * </pre>
   *
   * <code>string minimum_deposit = 11 [json_name = "minimumDeposit", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
   * @return The minimumDeposit.
   */
  java.lang.String getMinimumDeposit();
  /**
   * <pre>
   * minimum ls amount
   * </pre>
   *
   * <code>string minimum_deposit = 11 [json_name = "minimumDeposit", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
   * @return The bytes for minimumDeposit.
   */
  com.google.protobuf.ByteString
      getMinimumDepositBytes();

  /**
   * <pre>
   * redemption rate
   * </pre>
   *
   * <code>string c_value = 12 [json_name = "cValue", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
   * @return The cValue.
   */
  java.lang.String getCValue();
  /**
   * <pre>
   * redemption rate
   * </pre>
   *
   * <code>string c_value = 12 [json_name = "cValue", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
   * @return The bytes for cValue.
   */
  com.google.protobuf.ByteString
      getCValueBytes();

  /**
   * <pre>
   * the hash of the next validator set
   * </pre>
   *
   * <code>bytes next_valset_hash = 13 [json_name = "nextValsetHash"];</code>
   * @return The nextValsetHash.
   */
  com.google.protobuf.ByteString getNextValsetHash();

  /**
   * <pre>
   * undelegation epoch factor
   * </pre>
   *
   * <code>int64 unbonding_factor = 14 [json_name = "unbondingFactor"];</code>
   * @return The unbondingFactor.
   */
  long getUnbondingFactor();

  /**
   * <pre>
   * whether the chain is ready to accept delegations or not
   * </pre>
   *
   * <code>bool active = 15 [json_name = "active"];</code>
   * @return The active.
   */
  boolean getActive();
}

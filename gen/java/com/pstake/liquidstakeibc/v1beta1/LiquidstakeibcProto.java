// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pstake/liquidstakeibc/v1beta1/liquidstakeibc.proto

package com.pstake.liquidstakeibc.v1beta1;

public final class LiquidstakeibcProto {
  private LiquidstakeibcProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pstake_liquidstakeibc_v1beta1_HostChain_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pstake_liquidstakeibc_v1beta1_HostChain_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pstake_liquidstakeibc_v1beta1_HostChainLSParams_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pstake_liquidstakeibc_v1beta1_HostChainLSParams_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pstake_liquidstakeibc_v1beta1_ICAAccount_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pstake_liquidstakeibc_v1beta1_ICAAccount_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pstake_liquidstakeibc_v1beta1_Validator_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pstake_liquidstakeibc_v1beta1_Validator_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pstake_liquidstakeibc_v1beta1_Deposit_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pstake_liquidstakeibc_v1beta1_Deposit_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pstake_liquidstakeibc_v1beta1_Unbonding_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pstake_liquidstakeibc_v1beta1_Unbonding_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pstake_liquidstakeibc_v1beta1_UserUnbonding_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pstake_liquidstakeibc_v1beta1_UserUnbonding_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pstake_liquidstakeibc_v1beta1_ValidatorUnbonding_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pstake_liquidstakeibc_v1beta1_ValidatorUnbonding_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pstake_liquidstakeibc_v1beta1_KVUpdate_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pstake_liquidstakeibc_v1beta1_KVUpdate_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n2pstake/liquidstakeibc/v1beta1/liquidst" +
      "akeibc.proto\022\035pstake.liquidstakeibc.v1be" +
      "ta1\032\024gogoproto/gogo.proto\032\031cosmos_proto/" +
      "cosmos.proto\032\036cosmos/base/v1beta1/coin.p" +
      "roto\032\037google/protobuf/timestamp.proto\"\225\006" +
      "\n\tHostChain\022\031\n\010chain_id\030\001 \001(\tR\007chainId\022#" +
      "\n\rconnection_id\030\002 \001(\tR\014connectionId\022H\n\006p" +
      "arams\030\003 \001(\01320.pstake.liquidstakeibc.v1be" +
      "ta1.HostChainLSParamsR\006params\022\035\n\nhost_de" +
      "nom\030\004 \001(\tR\thostDenom\022\035\n\nchannel_id\030\005 \001(\t" +
      "R\tchannelId\022\027\n\007port_id\030\006 \001(\tR\006portId\022X\n\022" +
      "delegation_account\030\007 \001(\0132).pstake.liquid" +
      "stakeibc.v1beta1.ICAAccountR\021delegationA" +
      "ccount\022R\n\017rewards_account\030\010 \001(\0132).pstake" +
      ".liquidstakeibc.v1beta1.ICAAccountR\016rewa" +
      "rdsAccount\022H\n\nvalidators\030\t \003(\0132(.pstake." +
      "liquidstakeibc.v1beta1.ValidatorR\nvalida" +
      "tors\022e\n\017minimum_deposit\030\013 \001(\tB<\310\336\037\000\332\336\037&g" +
      "ithub.com/cosmos/cosmos-sdk/types.Int\322\264-" +
      "\ncosmos.IntR\016minimumDeposit\022U\n\007c_value\030\014" +
      " \001(\tB<\310\336\037\000\332\336\037&github.com/cosmos/cosmos-s" +
      "dk/types.Dec\322\264-\ncosmos.DecR\006cValue\022(\n\020ne" +
      "xt_valset_hash\030\r \001(\014R\016nextValsetHash\022)\n\020" +
      "unbonding_factor\030\016 \001(\003R\017unbondingFactor\022" +
      "\026\n\006active\030\017 \001(\010R\006active:\004\230\240\037\001\"\225\003\n\021HostCh" +
      "ainLSParams\022]\n\013deposit_fee\030\001 \001(\tB<\310\336\037\000\332\336" +
      "\037&github.com/cosmos/cosmos-sdk/types.Dec" +
      "\322\264-\ncosmos.DecR\ndepositFee\022]\n\013restake_fe" +
      "e\030\002 \001(\tB<\310\336\037\000\332\336\037&github.com/cosmos/cosmo" +
      "s-sdk/types.Dec\322\264-\ncosmos.DecR\nrestakeFe" +
      "e\022]\n\013unstake_fee\030\003 \001(\tB<\310\336\037\000\332\336\037&github.c" +
      "om/cosmos/cosmos-sdk/types.Dec\322\264-\ncosmos" +
      ".DecR\nunstakeFee\022c\n\016redemption_fee\030\004 \001(\t" +
      "B<\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/t" +
      "ypes.Dec\322\264-\ncosmos.DecR\rredemptionFee\"\334\002" +
      "\n\nICAAccount\0222\n\007address\030\001 \001(\tB\030\322\264-\024cosmo" +
      "s.AddressStringR\007address\022d\n\007balance\030\002 \001(" +
      "\0132\031.cosmos.base.v1beta1.CoinB/\310\336\037\000\252\337\037\'gi" +
      "thub.com/cosmos/cosmos-sdk/types.CoinR\007b" +
      "alance\022\024\n\005owner\030\003 \001(\tR\005owner\022[\n\rchannel_" +
      "state\030\004 \001(\01626.pstake.liquidstakeibc.v1be" +
      "ta1.ICAAccount.ChannelStateR\014channelStat" +
      "e\"A\n\014ChannelState\022\030\n\024ICA_CHANNEL_CREATIN" +
      "G\020\000\022\027\n\023ICA_CHANNEL_CREATED\020\001\"\261\003\n\tValidat" +
      "or\022C\n\020operator_address\030\001 \001(\tB\030\322\264-\024cosmos" +
      ".AddressStringR\017operatorAddress\022\026\n\006statu" +
      "s\030\002 \001(\tR\006status\022T\n\006weight\030\003 \001(\tB<\310\336\037\000\332\336\037" +
      "&github.com/cosmos/cosmos-sdk/types.Dec\322" +
      "\264-\ncosmos.DecR\006weight\022g\n\020delegated_amoun" +
      "t\030\004 \001(\tB<\310\336\037\000\332\336\037&github.com/cosmos/cosmo" +
      "s-sdk/types.Int\322\264-\ncosmos.IntR\017delegated" +
      "Amount\022_\n\014total_amount\030\005 \001(\tB<\310\336\037\000\332\336\037&gi" +
      "thub.com/cosmos/cosmos-sdk/types.Int\322\264-\n" +
      "cosmos.IntR\013totalAmount\022\'\n\017unbonding_epo" +
      "ch\030\006 \001(\003R\016unbondingEpoch\"\211\003\n\007Deposit\022\031\n\010" +
      "chain_id\030\001 \001(\tR\007chainId\0227\n\006amount\030\002 \001(\0132" +
      "\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000R\006amount" +
      "\022R\n\005epoch\030\003 \001(\tB<\310\336\037\000\332\336\037&github.com/cosm" +
      "os/cosmos-sdk/types.Int\322\264-\ncosmos.IntR\005e" +
      "poch\022I\n\005state\030\004 \001(\01623.pstake.liquidstake" +
      "ibc.v1beta1.Deposit.DepositStateR\005state\022" +
      "&\n\017ibc_sequence_id\030\005 \001(\tR\ribcSequenceId\"" +
      "c\n\014DepositState\022\023\n\017DEPOSIT_PENDING\020\000\022\020\n\014" +
      "DEPOSIT_SENT\020\001\022\024\n\020DEPOSIT_RECEIVED\020\002\022\026\n\022" +
      "DEPOSIT_DELEGATING\020\003\"\260\004\n\tUnbonding\022\031\n\010ch" +
      "ain_id\030\001 \001(\tR\007chainId\022!\n\014epoch_number\030\002 " +
      "\001(\003R\013epochNumber\022E\n\013mature_time\030\003 \001(\0132\032." +
      "google.protobuf.TimestampB\010\310\336\037\000\220\337\037\001R\nmat" +
      "ureTime\022@\n\013burn_amount\030\004 \001(\0132\031.cosmos.ba" +
      "se.v1beta1.CoinB\004\310\336\037\000R\nburnAmount\022D\n\runb" +
      "ond_amount\030\005 \001(\0132\031.cosmos.base.v1beta1.C" +
      "oinB\004\310\336\037\000R\014unbondAmount\022&\n\017ibc_sequence_" +
      "id\030\006 \001(\tR\ribcSequenceId\022M\n\005state\030\007 \001(\01627" +
      ".pstake.liquidstakeibc.v1beta1.Unbonding" +
      ".UnbondingStateR\005state\"\236\001\n\016UnbondingStat" +
      "e\022\025\n\021UNBONDING_PENDING\020\000\022\027\n\023UNBONDING_IN" +
      "ITIATED\020\001\022\026\n\022UNBONDING_MATURING\020\002\022\025\n\021UNB" +
      "ONDING_MATURED\020\003\022\027\n\023UNBONDING_CLAIMABLE\020" +
      "\004\022\024\n\020UNBONDING_FAILED\020\005\"\207\002\n\rUserUnbondin" +
      "g\022\031\n\010chain_id\030\001 \001(\tR\007chainId\022!\n\014epoch_nu" +
      "mber\030\002 \001(\003R\013epochNumber\0222\n\007address\030\003 \001(\t" +
      "B\030\322\264-\024cosmos.AddressStringR\007address\022>\n\ns" +
      "tk_amount\030\004 \001(\0132\031.cosmos.base.v1beta1.Co" +
      "inB\004\310\336\037\000R\tstkAmount\022D\n\runbond_amount\030\005 \001" +
      "(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336\037\000R\014unb" +
      "ondAmount\"\301\002\n\022ValidatorUnbonding\022\031\n\010chai" +
      "n_id\030\001 \001(\tR\007chainId\022!\n\014epoch_number\030\002 \001(" +
      "\003R\013epochNumber\022E\n\013mature_time\030\003 \001(\0132\032.go" +
      "ogle.protobuf.TimestampB\010\310\336\037\000\220\337\037\001R\nmatur" +
      "eTime\022E\n\021validator_address\030\004 \001(\tB\030\322\264-\024co" +
      "smos.AddressStringR\020validatorAddress\0227\n\006" +
      "amount\030\005 \001(\0132\031.cosmos.base.v1beta1.CoinB" +
      "\004\310\336\037\000R\006amount\022&\n\017ibc_sequence_id\030\006 \001(\tR\r" +
      "ibcSequenceId\"2\n\010KVUpdate\022\020\n\003key\030\001 \001(\tR\003" +
      "key\022\024\n\005value\030\002 \001(\tR\005valueB\221\002\n!com.pstake" +
      ".liquidstakeibc.v1beta1B\023LiquidstakeibcP" +
      "rotoP\001ZAgithub.com/persistenceOne/pstake" +
      "-native/v2/x/liquidstakeibc/types\242\002\003PLX\252" +
      "\002\035Pstake.Liquidstakeibc.V1beta1\312\002\035Pstake" +
      "\\Liquidstakeibc\\V1beta1\342\002)Pstake\\Liquids" +
      "takeibc\\V1beta1\\GPBMetadata\352\002\037Pstake::Li" +
      "quidstakeibc::V1beta1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_pstake_liquidstakeibc_v1beta1_HostChain_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pstake_liquidstakeibc_v1beta1_HostChain_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pstake_liquidstakeibc_v1beta1_HostChain_descriptor,
        new java.lang.String[] { "ChainId", "ConnectionId", "Params", "HostDenom", "ChannelId", "PortId", "DelegationAccount", "RewardsAccount", "Validators", "MinimumDeposit", "CValue", "NextValsetHash", "UnbondingFactor", "Active", });
    internal_static_pstake_liquidstakeibc_v1beta1_HostChainLSParams_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pstake_liquidstakeibc_v1beta1_HostChainLSParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pstake_liquidstakeibc_v1beta1_HostChainLSParams_descriptor,
        new java.lang.String[] { "DepositFee", "RestakeFee", "UnstakeFee", "RedemptionFee", });
    internal_static_pstake_liquidstakeibc_v1beta1_ICAAccount_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_pstake_liquidstakeibc_v1beta1_ICAAccount_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pstake_liquidstakeibc_v1beta1_ICAAccount_descriptor,
        new java.lang.String[] { "Address", "Balance", "Owner", "ChannelState", });
    internal_static_pstake_liquidstakeibc_v1beta1_Validator_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_pstake_liquidstakeibc_v1beta1_Validator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pstake_liquidstakeibc_v1beta1_Validator_descriptor,
        new java.lang.String[] { "OperatorAddress", "Status", "Weight", "DelegatedAmount", "TotalAmount", "UnbondingEpoch", });
    internal_static_pstake_liquidstakeibc_v1beta1_Deposit_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_pstake_liquidstakeibc_v1beta1_Deposit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pstake_liquidstakeibc_v1beta1_Deposit_descriptor,
        new java.lang.String[] { "ChainId", "Amount", "Epoch", "State", "IbcSequenceId", });
    internal_static_pstake_liquidstakeibc_v1beta1_Unbonding_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_pstake_liquidstakeibc_v1beta1_Unbonding_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pstake_liquidstakeibc_v1beta1_Unbonding_descriptor,
        new java.lang.String[] { "ChainId", "EpochNumber", "MatureTime", "BurnAmount", "UnbondAmount", "IbcSequenceId", "State", });
    internal_static_pstake_liquidstakeibc_v1beta1_UserUnbonding_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_pstake_liquidstakeibc_v1beta1_UserUnbonding_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pstake_liquidstakeibc_v1beta1_UserUnbonding_descriptor,
        new java.lang.String[] { "ChainId", "EpochNumber", "Address", "StkAmount", "UnbondAmount", });
    internal_static_pstake_liquidstakeibc_v1beta1_ValidatorUnbonding_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_pstake_liquidstakeibc_v1beta1_ValidatorUnbonding_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pstake_liquidstakeibc_v1beta1_ValidatorUnbonding_descriptor,
        new java.lang.String[] { "ChainId", "EpochNumber", "MatureTime", "ValidatorAddress", "Amount", "IbcSequenceId", });
    internal_static_pstake_liquidstakeibc_v1beta1_KVUpdate_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_pstake_liquidstakeibc_v1beta1_KVUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pstake_liquidstakeibc_v1beta1_KVUpdate_descriptor,
        new java.lang.String[] { "Key", "Value", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.cosmos_proto.CosmosProto.scalar);
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.nullable);
    registry.add(com.gogoproto.GogoProto.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

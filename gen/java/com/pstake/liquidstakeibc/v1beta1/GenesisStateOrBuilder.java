// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pstake/liquidstakeibc/v1beta1/genesis.proto

package com.pstake.liquidstakeibc.v1beta1;

public interface GenesisStateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pstake.liquidstakeibc.v1beta1.GenesisState)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.pstake.liquidstakeibc.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return Whether the params field is set.
   */
  boolean hasParams();
  /**
   * <code>.pstake.liquidstakeibc.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return The params.
   */
  com.pstake.liquidstakeibc.v1beta1.Params getParams();
  /**
   * <code>.pstake.liquidstakeibc.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.ParamsOrBuilder getParamsOrBuilder();

  /**
   * <pre>
   * initial host chain list
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.HostChain host_chains = 2 [json_name = "hostChains"];</code>
   */
  java.util.List<com.pstake.liquidstakeibc.v1beta1.HostChain> 
      getHostChainsList();
  /**
   * <pre>
   * initial host chain list
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.HostChain host_chains = 2 [json_name = "hostChains"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.HostChain getHostChains(int index);
  /**
   * <pre>
   * initial host chain list
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.HostChain host_chains = 2 [json_name = "hostChains"];</code>
   */
  int getHostChainsCount();
  /**
   * <pre>
   * initial host chain list
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.HostChain host_chains = 2 [json_name = "hostChains"];</code>
   */
  java.util.List<? extends com.pstake.liquidstakeibc.v1beta1.HostChainOrBuilder> 
      getHostChainsOrBuilderList();
  /**
   * <pre>
   * initial host chain list
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.HostChain host_chains = 2 [json_name = "hostChains"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.HostChainOrBuilder getHostChainsOrBuilder(
      int index);

  /**
   * <pre>
   * initial deposit list
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Deposit deposits = 3 [json_name = "deposits"];</code>
   */
  java.util.List<com.pstake.liquidstakeibc.v1beta1.Deposit> 
      getDepositsList();
  /**
   * <pre>
   * initial deposit list
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Deposit deposits = 3 [json_name = "deposits"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.Deposit getDeposits(int index);
  /**
   * <pre>
   * initial deposit list
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Deposit deposits = 3 [json_name = "deposits"];</code>
   */
  int getDepositsCount();
  /**
   * <pre>
   * initial deposit list
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Deposit deposits = 3 [json_name = "deposits"];</code>
   */
  java.util.List<? extends com.pstake.liquidstakeibc.v1beta1.DepositOrBuilder> 
      getDepositsOrBuilderList();
  /**
   * <pre>
   * initial deposit list
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Deposit deposits = 3 [json_name = "deposits"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.DepositOrBuilder getDepositsOrBuilder(
      int index);

  /**
   * <pre>
   * initial unbondings
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Unbonding unbondings = 4 [json_name = "unbondings"];</code>
   */
  java.util.List<com.pstake.liquidstakeibc.v1beta1.Unbonding> 
      getUnbondingsList();
  /**
   * <pre>
   * initial unbondings
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Unbonding unbondings = 4 [json_name = "unbondings"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.Unbonding getUnbondings(int index);
  /**
   * <pre>
   * initial unbondings
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Unbonding unbondings = 4 [json_name = "unbondings"];</code>
   */
  int getUnbondingsCount();
  /**
   * <pre>
   * initial unbondings
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Unbonding unbondings = 4 [json_name = "unbondings"];</code>
   */
  java.util.List<? extends com.pstake.liquidstakeibc.v1beta1.UnbondingOrBuilder> 
      getUnbondingsOrBuilderList();
  /**
   * <pre>
   * initial unbondings
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.Unbonding unbondings = 4 [json_name = "unbondings"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.UnbondingOrBuilder getUnbondingsOrBuilder(
      int index);

  /**
   * <pre>
   * initial user unbondings
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.UserUnbonding user_unbondings = 5 [json_name = "userUnbondings"];</code>
   */
  java.util.List<com.pstake.liquidstakeibc.v1beta1.UserUnbonding> 
      getUserUnbondingsList();
  /**
   * <pre>
   * initial user unbondings
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.UserUnbonding user_unbondings = 5 [json_name = "userUnbondings"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.UserUnbonding getUserUnbondings(int index);
  /**
   * <pre>
   * initial user unbondings
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.UserUnbonding user_unbondings = 5 [json_name = "userUnbondings"];</code>
   */
  int getUserUnbondingsCount();
  /**
   * <pre>
   * initial user unbondings
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.UserUnbonding user_unbondings = 5 [json_name = "userUnbondings"];</code>
   */
  java.util.List<? extends com.pstake.liquidstakeibc.v1beta1.UserUnbondingOrBuilder> 
      getUserUnbondingsOrBuilderList();
  /**
   * <pre>
   * initial user unbondings
   * </pre>
   *
   * <code>repeated .pstake.liquidstakeibc.v1beta1.UserUnbonding user_unbondings = 5 [json_name = "userUnbondings"];</code>
   */
  com.pstake.liquidstakeibc.v1beta1.UserUnbondingOrBuilder getUserUnbondingsOrBuilder(
      int index);
}

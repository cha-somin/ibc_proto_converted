// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pstake/liquidstakeibc/v1beta1/liquidstakeibc.proto

package com.pstake.liquidstakeibc.v1beta1;

public interface UnbondingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pstake.liquidstakeibc.v1beta1.Unbonding)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * unbonding target chain
   * </pre>
   *
   * <code>string chain_id = 1 [json_name = "chainId"];</code>
   * @return The chainId.
   */
  java.lang.String getChainId();
  /**
   * <pre>
   * unbonding target chain
   * </pre>
   *
   * <code>string chain_id = 1 [json_name = "chainId"];</code>
   * @return The bytes for chainId.
   */
  com.google.protobuf.ByteString
      getChainIdBytes();

  /**
   * <pre>
   * epoch number of the unbonding record
   * </pre>
   *
   * <code>int64 epoch_number = 2 [json_name = "epochNumber"];</code>
   * @return The epochNumber.
   */
  long getEpochNumber();

  /**
   * <pre>
   * time when the unbonding matures and can be collected
   * </pre>
   *
   * <code>.google.protobuf.Timestamp mature_time = 3 [json_name = "matureTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return Whether the matureTime field is set.
   */
  boolean hasMatureTime();
  /**
   * <pre>
   * time when the unbonding matures and can be collected
   * </pre>
   *
   * <code>.google.protobuf.Timestamp mature_time = 3 [json_name = "matureTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   * @return The matureTime.
   */
  com.google.protobuf.Timestamp getMatureTime();
  /**
   * <pre>
   * time when the unbonding matures and can be collected
   * </pre>
   *
   * <code>.google.protobuf.Timestamp mature_time = 3 [json_name = "matureTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getMatureTimeOrBuilder();

  /**
   * <pre>
   * stk token amount that is burned with the unbonding
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin burn_amount = 4 [json_name = "burnAmount", (.gogoproto.nullable) = false];</code>
   * @return Whether the burnAmount field is set.
   */
  boolean hasBurnAmount();
  /**
   * <pre>
   * stk token amount that is burned with the unbonding
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin burn_amount = 4 [json_name = "burnAmount", (.gogoproto.nullable) = false];</code>
   * @return The burnAmount.
   */
  com.cosmos.base.v1beta1.Coin getBurnAmount();
  /**
   * <pre>
   * stk token amount that is burned with the unbonding
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin burn_amount = 4 [json_name = "burnAmount", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getBurnAmountOrBuilder();

  /**
   * <pre>
   * host token amount that is being unbonded
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin unbond_amount = 5 [json_name = "unbondAmount", (.gogoproto.nullable) = false];</code>
   * @return Whether the unbondAmount field is set.
   */
  boolean hasUnbondAmount();
  /**
   * <pre>
   * host token amount that is being unbonded
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin unbond_amount = 5 [json_name = "unbondAmount", (.gogoproto.nullable) = false];</code>
   * @return The unbondAmount.
   */
  com.cosmos.base.v1beta1.Coin getUnbondAmount();
  /**
   * <pre>
   * host token amount that is being unbonded
   * </pre>
   *
   * <code>.cosmos.base.v1beta1.Coin unbond_amount = 5 [json_name = "unbondAmount", (.gogoproto.nullable) = false];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getUnbondAmountOrBuilder();

  /**
   * <pre>
   * sequence id of the ibc transaction
   * </pre>
   *
   * <code>string ibc_sequence_id = 6 [json_name = "ibcSequenceId"];</code>
   * @return The ibcSequenceId.
   */
  java.lang.String getIbcSequenceId();
  /**
   * <pre>
   * sequence id of the ibc transaction
   * </pre>
   *
   * <code>string ibc_sequence_id = 6 [json_name = "ibcSequenceId"];</code>
   * @return The bytes for ibcSequenceId.
   */
  com.google.protobuf.ByteString
      getIbcSequenceIdBytes();

  /**
   * <pre>
   * state of the unbonding during the process
   * </pre>
   *
   * <code>.pstake.liquidstakeibc.v1beta1.Unbonding.UnbondingState state = 7 [json_name = "state"];</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <pre>
   * state of the unbonding during the process
   * </pre>
   *
   * <code>.pstake.liquidstakeibc.v1beta1.Unbonding.UnbondingState state = 7 [json_name = "state"];</code>
   * @return The state.
   */
  com.pstake.liquidstakeibc.v1beta1.Unbonding.UnbondingState getState();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmosis/superfluid/params.proto

package com.osmosis.superfluid;

public interface ParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:osmosis.superfluid.Params)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * minimum_risk_factor is to be cut on OSMO equivalent value of lp tokens for
   * superfluid staking, default: 5%. The minimum risk factor works
   * to counter-balance the staked amount on chain's exposure to various asset
   * volatilities, and have base staking be 'resistant' to volatility.
   * </pre>
   *
   * <code>string minimum_risk_factor = 1 [json_name = "minimumRiskFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"minimum_risk_factor&#92;""];</code>
   * @return The minimumRiskFactor.
   */
  java.lang.String getMinimumRiskFactor();
  /**
   * <pre>
   * minimum_risk_factor is to be cut on OSMO equivalent value of lp tokens for
   * superfluid staking, default: 5%. The minimum risk factor works
   * to counter-balance the staked amount on chain's exposure to various asset
   * volatilities, and have base staking be 'resistant' to volatility.
   * </pre>
   *
   * <code>string minimum_risk_factor = 1 [json_name = "minimumRiskFactor", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"minimum_risk_factor&#92;""];</code>
   * @return The bytes for minimumRiskFactor.
   */
  com.google.protobuf.ByteString
      getMinimumRiskFactorBytes();
}

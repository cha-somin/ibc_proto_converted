// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmosis/superfluid/params.proto

package com.osmosis.superfluid;

public final class ParamsProto {
  private ParamsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_osmosis_superfluid_Params_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_osmosis_superfluid_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037osmosis/superfluid/params.proto\022\022osmos" +
      "is.superfluid\032\024gogoproto/gogo.proto\032\036goo" +
      "gle/protobuf/duration.proto\"\206\001\n\006Params\022|" +
      "\n\023minimum_risk_factor\030\001 \001(\tBL\310\336\037\000\332\336\037&git" +
      "hub.com/cosmos/cosmos-sdk/types.Dec\362\336\037\032y" +
      "aml:\"minimum_risk_factor\"R\021minimumRiskFa" +
      "ctorB\306\001\n\026com.osmosis.superfluidB\013ParamsP" +
      "rotoP\001Z6github.com/osmosis-labs/osmosis/" +
      "v15/x/superfluid/types\242\002\003OSX\252\002\022Osmosis.S" +
      "uperfluid\312\002\022Osmosis\\Superfluid\342\002\036Osmosis" +
      "\\Superfluid\\GPBMetadata\352\002\023Osmosis::Super" +
      "fluidb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
        });
    internal_static_osmosis_superfluid_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_osmosis_superfluid_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_osmosis_superfluid_Params_descriptor,
        new java.lang.String[] { "MinimumRiskFactor", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

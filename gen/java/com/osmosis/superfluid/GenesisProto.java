// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmosis/superfluid/genesis.proto

package com.osmosis.superfluid;

public final class GenesisProto {
  private GenesisProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_osmosis_superfluid_GenesisState_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_osmosis_superfluid_GenesisState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n osmosis/superfluid/genesis.proto\022\022osmo" +
      "sis.superfluid\032\024gogoproto/gogo.proto\032#os" +
      "mosis/superfluid/superfluid.proto\032\037osmos" +
      "is/superfluid/params.proto\"\220\004\n\014GenesisSt" +
      "ate\0228\n\006params\030\001 \001(\0132\032.osmosis.superfluid" +
      ".ParamsB\004\310\336\037\000R\006params\022V\n\021superfluid_asse" +
      "ts\030\002 \003(\0132#.osmosis.superfluid.Superfluid" +
      "AssetB\004\310\336\037\000R\020superfluidAssets\022x\n\033osmo_eq" +
      "uivalent_multipliers\030\003 \003(\01322.osmosis.sup" +
      "erfluid.OsmoEquivalentMultiplierRecordB\004" +
      "\310\336\037\000R\031osmoEquivalentMultipliers\022l\n\025inter" +
      "mediary_accounts\030\004 \003(\01321.osmosis.superfl" +
      "uid.SuperfluidIntermediaryAccountB\004\310\336\037\000R" +
      "\024intermediaryAccounts\022\205\001\n\037intemediary_ac" +
      "count_connections\030\005 \003(\01327.osmosis.superf" +
      "luid.LockIdIntermediaryAccountConnection" +
      "B\004\310\336\037\000R\035intemediaryAccountConnectionsB\307\001" +
      "\n\026com.osmosis.superfluidB\014GenesisProtoP\001" +
      "Z6github.com/osmosis-labs/osmosis/v15/x/" +
      "superfluid/types\242\002\003OSX\252\002\022Osmosis.Superfl" +
      "uid\312\002\022Osmosis\\Superfluid\342\002\036Osmosis\\Super" +
      "fluid\\GPBMetadata\352\002\023Osmosis::Superfluidb" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.osmosis.superfluid.SuperfluidProto.getDescriptor(),
          com.osmosis.superfluid.ParamsProto.getDescriptor(),
        });
    internal_static_osmosis_superfluid_GenesisState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_osmosis_superfluid_GenesisState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_osmosis_superfluid_GenesisState_descriptor,
        new java.lang.String[] { "Params", "SuperfluidAssets", "OsmoEquivalentMultipliers", "IntermediaryAccounts", "IntemediaryAccountConnections", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.osmosis.superfluid.SuperfluidProto.getDescriptor();
    com.osmosis.superfluid.ParamsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

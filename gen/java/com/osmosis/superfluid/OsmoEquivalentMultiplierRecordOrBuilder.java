// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmosis/superfluid/superfluid.proto

package com.osmosis.superfluid;

public interface OsmoEquivalentMultiplierRecordOrBuilder extends
    // @@protoc_insertion_point(interface_extends:osmosis.superfluid.OsmoEquivalentMultiplierRecord)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int64 epoch_number = 1 [json_name = "epochNumber"];</code>
   * @return The epochNumber.
   */
  long getEpochNumber();

  /**
   * <pre>
   * superfluid asset denom, can be LP token or native token
   * </pre>
   *
   * <code>string denom = 2 [json_name = "denom"];</code>
   * @return The denom.
   */
  java.lang.String getDenom();
  /**
   * <pre>
   * superfluid asset denom, can be LP token or native token
   * </pre>
   *
   * <code>string denom = 2 [json_name = "denom"];</code>
   * @return The bytes for denom.
   */
  com.google.protobuf.ByteString
      getDenomBytes();

  /**
   * <code>string multiplier = 3 [json_name = "multiplier", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"multiplier&#92;""];</code>
   * @return The multiplier.
   */
  java.lang.String getMultiplier();
  /**
   * <code>string multiplier = 3 [json_name = "multiplier", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"multiplier&#92;""];</code>
   * @return The bytes for multiplier.
   */
  com.google.protobuf.ByteString
      getMultiplierBytes();
}

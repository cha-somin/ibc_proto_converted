// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmosis/superfluid/genesis.proto

package com.osmosis.superfluid;

/**
 * <pre>
 * GenesisState defines the module's genesis state.
 * </pre>
 *
 * Protobuf type {@code osmosis.superfluid.GenesisState}
 */
public final class GenesisState extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:osmosis.superfluid.GenesisState)
    GenesisStateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GenesisState.newBuilder() to construct.
  private GenesisState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GenesisState() {
    superfluidAssets_ = java.util.Collections.emptyList();
    osmoEquivalentMultipliers_ = java.util.Collections.emptyList();
    intermediaryAccounts_ = java.util.Collections.emptyList();
    intemediaryAccountConnections_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GenesisState();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.osmosis.superfluid.GenesisProto.internal_static_osmosis_superfluid_GenesisState_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.osmosis.superfluid.GenesisProto.internal_static_osmosis_superfluid_GenesisState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.osmosis.superfluid.GenesisState.class, com.osmosis.superfluid.GenesisState.Builder.class);
  }

  public static final int PARAMS_FIELD_NUMBER = 1;
  private com.osmosis.superfluid.Params params_;
  /**
   * <code>.osmosis.superfluid.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return Whether the params field is set.
   */
  @java.lang.Override
  public boolean hasParams() {
    return params_ != null;
  }
  /**
   * <code>.osmosis.superfluid.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return The params.
   */
  @java.lang.Override
  public com.osmosis.superfluid.Params getParams() {
    return params_ == null ? com.osmosis.superfluid.Params.getDefaultInstance() : params_;
  }
  /**
   * <code>.osmosis.superfluid.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.osmosis.superfluid.ParamsOrBuilder getParamsOrBuilder() {
    return params_ == null ? com.osmosis.superfluid.Params.getDefaultInstance() : params_;
  }

  public static final int SUPERFLUID_ASSETS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.osmosis.superfluid.SuperfluidAsset> superfluidAssets_;
  /**
   * <pre>
   * superfluid_assets defines the registered superfluid assets that have been
   * registered via governance.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<com.osmosis.superfluid.SuperfluidAsset> getSuperfluidAssetsList() {
    return superfluidAssets_;
  }
  /**
   * <pre>
   * superfluid_assets defines the registered superfluid assets that have been
   * registered via governance.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.osmosis.superfluid.SuperfluidAssetOrBuilder> 
      getSuperfluidAssetsOrBuilderList() {
    return superfluidAssets_;
  }
  /**
   * <pre>
   * superfluid_assets defines the registered superfluid assets that have been
   * registered via governance.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public int getSuperfluidAssetsCount() {
    return superfluidAssets_.size();
  }
  /**
   * <pre>
   * superfluid_assets defines the registered superfluid assets that have been
   * registered via governance.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.osmosis.superfluid.SuperfluidAsset getSuperfluidAssets(int index) {
    return superfluidAssets_.get(index);
  }
  /**
   * <pre>
   * superfluid_assets defines the registered superfluid assets that have been
   * registered via governance.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.osmosis.superfluid.SuperfluidAssetOrBuilder getSuperfluidAssetsOrBuilder(
      int index) {
    return superfluidAssets_.get(index);
  }

  public static final int OSMO_EQUIVALENT_MULTIPLIERS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.osmosis.superfluid.OsmoEquivalentMultiplierRecord> osmoEquivalentMultipliers_;
  /**
   * <pre>
   * osmo_equivalent_multipliers is the records of osmo equivalent amount of
   * each superfluid registered pool, updated every epoch.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<com.osmosis.superfluid.OsmoEquivalentMultiplierRecord> getOsmoEquivalentMultipliersList() {
    return osmoEquivalentMultipliers_;
  }
  /**
   * <pre>
   * osmo_equivalent_multipliers is the records of osmo equivalent amount of
   * each superfluid registered pool, updated every epoch.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.osmosis.superfluid.OsmoEquivalentMultiplierRecordOrBuilder> 
      getOsmoEquivalentMultipliersOrBuilderList() {
    return osmoEquivalentMultipliers_;
  }
  /**
   * <pre>
   * osmo_equivalent_multipliers is the records of osmo equivalent amount of
   * each superfluid registered pool, updated every epoch.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public int getOsmoEquivalentMultipliersCount() {
    return osmoEquivalentMultipliers_.size();
  }
  /**
   * <pre>
   * osmo_equivalent_multipliers is the records of osmo equivalent amount of
   * each superfluid registered pool, updated every epoch.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.osmosis.superfluid.OsmoEquivalentMultiplierRecord getOsmoEquivalentMultipliers(int index) {
    return osmoEquivalentMultipliers_.get(index);
  }
  /**
   * <pre>
   * osmo_equivalent_multipliers is the records of osmo equivalent amount of
   * each superfluid registered pool, updated every epoch.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.osmosis.superfluid.OsmoEquivalentMultiplierRecordOrBuilder getOsmoEquivalentMultipliersOrBuilder(
      int index) {
    return osmoEquivalentMultipliers_.get(index);
  }

  public static final int INTERMEDIARY_ACCOUNTS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.osmosis.superfluid.SuperfluidIntermediaryAccount> intermediaryAccounts_;
  /**
   * <pre>
   * intermediary_accounts is a secondary account for superfluid staking that
   * plays an intermediary role between validators and the delegators.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<com.osmosis.superfluid.SuperfluidIntermediaryAccount> getIntermediaryAccountsList() {
    return intermediaryAccounts_;
  }
  /**
   * <pre>
   * intermediary_accounts is a secondary account for superfluid staking that
   * plays an intermediary role between validators and the delegators.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.osmosis.superfluid.SuperfluidIntermediaryAccountOrBuilder> 
      getIntermediaryAccountsOrBuilderList() {
    return intermediaryAccounts_;
  }
  /**
   * <pre>
   * intermediary_accounts is a secondary account for superfluid staking that
   * plays an intermediary role between validators and the delegators.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public int getIntermediaryAccountsCount() {
    return intermediaryAccounts_.size();
  }
  /**
   * <pre>
   * intermediary_accounts is a secondary account for superfluid staking that
   * plays an intermediary role between validators and the delegators.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.osmosis.superfluid.SuperfluidIntermediaryAccount getIntermediaryAccounts(int index) {
    return intermediaryAccounts_.get(index);
  }
  /**
   * <pre>
   * intermediary_accounts is a secondary account for superfluid staking that
   * plays an intermediary role between validators and the delegators.
   * </pre>
   *
   * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.osmosis.superfluid.SuperfluidIntermediaryAccountOrBuilder getIntermediaryAccountsOrBuilder(
      int index) {
    return intermediaryAccounts_.get(index);
  }

  public static final int INTEMEDIARY_ACCOUNT_CONNECTIONS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<com.osmosis.superfluid.LockIdIntermediaryAccountConnection> intemediaryAccountConnections_;
  /**
   * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<com.osmosis.superfluid.LockIdIntermediaryAccountConnection> getIntemediaryAccountConnectionsList() {
    return intemediaryAccountConnections_;
  }
  /**
   * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.osmosis.superfluid.LockIdIntermediaryAccountConnectionOrBuilder> 
      getIntemediaryAccountConnectionsOrBuilderList() {
    return intemediaryAccountConnections_;
  }
  /**
   * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public int getIntemediaryAccountConnectionsCount() {
    return intemediaryAccountConnections_.size();
  }
  /**
   * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.osmosis.superfluid.LockIdIntermediaryAccountConnection getIntemediaryAccountConnections(int index) {
    return intemediaryAccountConnections_.get(index);
  }
  /**
   * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public com.osmosis.superfluid.LockIdIntermediaryAccountConnectionOrBuilder getIntemediaryAccountConnectionsOrBuilder(
      int index) {
    return intemediaryAccountConnections_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (params_ != null) {
      output.writeMessage(1, getParams());
    }
    for (int i = 0; i < superfluidAssets_.size(); i++) {
      output.writeMessage(2, superfluidAssets_.get(i));
    }
    for (int i = 0; i < osmoEquivalentMultipliers_.size(); i++) {
      output.writeMessage(3, osmoEquivalentMultipliers_.get(i));
    }
    for (int i = 0; i < intermediaryAccounts_.size(); i++) {
      output.writeMessage(4, intermediaryAccounts_.get(i));
    }
    for (int i = 0; i < intemediaryAccountConnections_.size(); i++) {
      output.writeMessage(5, intemediaryAccountConnections_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (params_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getParams());
    }
    for (int i = 0; i < superfluidAssets_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, superfluidAssets_.get(i));
    }
    for (int i = 0; i < osmoEquivalentMultipliers_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, osmoEquivalentMultipliers_.get(i));
    }
    for (int i = 0; i < intermediaryAccounts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, intermediaryAccounts_.get(i));
    }
    for (int i = 0; i < intemediaryAccountConnections_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, intemediaryAccountConnections_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.osmosis.superfluid.GenesisState)) {
      return super.equals(obj);
    }
    com.osmosis.superfluid.GenesisState other = (com.osmosis.superfluid.GenesisState) obj;

    if (hasParams() != other.hasParams()) return false;
    if (hasParams()) {
      if (!getParams()
          .equals(other.getParams())) return false;
    }
    if (!getSuperfluidAssetsList()
        .equals(other.getSuperfluidAssetsList())) return false;
    if (!getOsmoEquivalentMultipliersList()
        .equals(other.getOsmoEquivalentMultipliersList())) return false;
    if (!getIntermediaryAccountsList()
        .equals(other.getIntermediaryAccountsList())) return false;
    if (!getIntemediaryAccountConnectionsList()
        .equals(other.getIntemediaryAccountConnectionsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasParams()) {
      hash = (37 * hash) + PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getParams().hashCode();
    }
    if (getSuperfluidAssetsCount() > 0) {
      hash = (37 * hash) + SUPERFLUID_ASSETS_FIELD_NUMBER;
      hash = (53 * hash) + getSuperfluidAssetsList().hashCode();
    }
    if (getOsmoEquivalentMultipliersCount() > 0) {
      hash = (37 * hash) + OSMO_EQUIVALENT_MULTIPLIERS_FIELD_NUMBER;
      hash = (53 * hash) + getOsmoEquivalentMultipliersList().hashCode();
    }
    if (getIntermediaryAccountsCount() > 0) {
      hash = (37 * hash) + INTERMEDIARY_ACCOUNTS_FIELD_NUMBER;
      hash = (53 * hash) + getIntermediaryAccountsList().hashCode();
    }
    if (getIntemediaryAccountConnectionsCount() > 0) {
      hash = (37 * hash) + INTEMEDIARY_ACCOUNT_CONNECTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getIntemediaryAccountConnectionsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.osmosis.superfluid.GenesisState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.osmosis.superfluid.GenesisState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.osmosis.superfluid.GenesisState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.osmosis.superfluid.GenesisState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.osmosis.superfluid.GenesisState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.osmosis.superfluid.GenesisState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.osmosis.superfluid.GenesisState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.osmosis.superfluid.GenesisState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.osmosis.superfluid.GenesisState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.osmosis.superfluid.GenesisState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.osmosis.superfluid.GenesisState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.osmosis.superfluid.GenesisState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.osmosis.superfluid.GenesisState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * GenesisState defines the module's genesis state.
   * </pre>
   *
   * Protobuf type {@code osmosis.superfluid.GenesisState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:osmosis.superfluid.GenesisState)
      com.osmosis.superfluid.GenesisStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.osmosis.superfluid.GenesisProto.internal_static_osmosis_superfluid_GenesisState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.osmosis.superfluid.GenesisProto.internal_static_osmosis_superfluid_GenesisState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.osmosis.superfluid.GenesisState.class, com.osmosis.superfluid.GenesisState.Builder.class);
    }

    // Construct using com.osmosis.superfluid.GenesisState.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      params_ = null;
      if (paramsBuilder_ != null) {
        paramsBuilder_.dispose();
        paramsBuilder_ = null;
      }
      if (superfluidAssetsBuilder_ == null) {
        superfluidAssets_ = java.util.Collections.emptyList();
      } else {
        superfluidAssets_ = null;
        superfluidAssetsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (osmoEquivalentMultipliersBuilder_ == null) {
        osmoEquivalentMultipliers_ = java.util.Collections.emptyList();
      } else {
        osmoEquivalentMultipliers_ = null;
        osmoEquivalentMultipliersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (intermediaryAccountsBuilder_ == null) {
        intermediaryAccounts_ = java.util.Collections.emptyList();
      } else {
        intermediaryAccounts_ = null;
        intermediaryAccountsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (intemediaryAccountConnectionsBuilder_ == null) {
        intemediaryAccountConnections_ = java.util.Collections.emptyList();
      } else {
        intemediaryAccountConnections_ = null;
        intemediaryAccountConnectionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.osmosis.superfluid.GenesisProto.internal_static_osmosis_superfluid_GenesisState_descriptor;
    }

    @java.lang.Override
    public com.osmosis.superfluid.GenesisState getDefaultInstanceForType() {
      return com.osmosis.superfluid.GenesisState.getDefaultInstance();
    }

    @java.lang.Override
    public com.osmosis.superfluid.GenesisState build() {
      com.osmosis.superfluid.GenesisState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.osmosis.superfluid.GenesisState buildPartial() {
      com.osmosis.superfluid.GenesisState result = new com.osmosis.superfluid.GenesisState(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.osmosis.superfluid.GenesisState result) {
      if (superfluidAssetsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          superfluidAssets_ = java.util.Collections.unmodifiableList(superfluidAssets_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.superfluidAssets_ = superfluidAssets_;
      } else {
        result.superfluidAssets_ = superfluidAssetsBuilder_.build();
      }
      if (osmoEquivalentMultipliersBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          osmoEquivalentMultipliers_ = java.util.Collections.unmodifiableList(osmoEquivalentMultipliers_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.osmoEquivalentMultipliers_ = osmoEquivalentMultipliers_;
      } else {
        result.osmoEquivalentMultipliers_ = osmoEquivalentMultipliersBuilder_.build();
      }
      if (intermediaryAccountsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          intermediaryAccounts_ = java.util.Collections.unmodifiableList(intermediaryAccounts_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.intermediaryAccounts_ = intermediaryAccounts_;
      } else {
        result.intermediaryAccounts_ = intermediaryAccountsBuilder_.build();
      }
      if (intemediaryAccountConnectionsBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          intemediaryAccountConnections_ = java.util.Collections.unmodifiableList(intemediaryAccountConnections_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.intemediaryAccountConnections_ = intemediaryAccountConnections_;
      } else {
        result.intemediaryAccountConnections_ = intemediaryAccountConnectionsBuilder_.build();
      }
    }

    private void buildPartial0(com.osmosis.superfluid.GenesisState result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.params_ = paramsBuilder_ == null
            ? params_
            : paramsBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.osmosis.superfluid.GenesisState) {
        return mergeFrom((com.osmosis.superfluid.GenesisState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.osmosis.superfluid.GenesisState other) {
      if (other == com.osmosis.superfluid.GenesisState.getDefaultInstance()) return this;
      if (other.hasParams()) {
        mergeParams(other.getParams());
      }
      if (superfluidAssetsBuilder_ == null) {
        if (!other.superfluidAssets_.isEmpty()) {
          if (superfluidAssets_.isEmpty()) {
            superfluidAssets_ = other.superfluidAssets_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSuperfluidAssetsIsMutable();
            superfluidAssets_.addAll(other.superfluidAssets_);
          }
          onChanged();
        }
      } else {
        if (!other.superfluidAssets_.isEmpty()) {
          if (superfluidAssetsBuilder_.isEmpty()) {
            superfluidAssetsBuilder_.dispose();
            superfluidAssetsBuilder_ = null;
            superfluidAssets_ = other.superfluidAssets_;
            bitField0_ = (bitField0_ & ~0x00000002);
            superfluidAssetsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSuperfluidAssetsFieldBuilder() : null;
          } else {
            superfluidAssetsBuilder_.addAllMessages(other.superfluidAssets_);
          }
        }
      }
      if (osmoEquivalentMultipliersBuilder_ == null) {
        if (!other.osmoEquivalentMultipliers_.isEmpty()) {
          if (osmoEquivalentMultipliers_.isEmpty()) {
            osmoEquivalentMultipliers_ = other.osmoEquivalentMultipliers_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureOsmoEquivalentMultipliersIsMutable();
            osmoEquivalentMultipliers_.addAll(other.osmoEquivalentMultipliers_);
          }
          onChanged();
        }
      } else {
        if (!other.osmoEquivalentMultipliers_.isEmpty()) {
          if (osmoEquivalentMultipliersBuilder_.isEmpty()) {
            osmoEquivalentMultipliersBuilder_.dispose();
            osmoEquivalentMultipliersBuilder_ = null;
            osmoEquivalentMultipliers_ = other.osmoEquivalentMultipliers_;
            bitField0_ = (bitField0_ & ~0x00000004);
            osmoEquivalentMultipliersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getOsmoEquivalentMultipliersFieldBuilder() : null;
          } else {
            osmoEquivalentMultipliersBuilder_.addAllMessages(other.osmoEquivalentMultipliers_);
          }
        }
      }
      if (intermediaryAccountsBuilder_ == null) {
        if (!other.intermediaryAccounts_.isEmpty()) {
          if (intermediaryAccounts_.isEmpty()) {
            intermediaryAccounts_ = other.intermediaryAccounts_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureIntermediaryAccountsIsMutable();
            intermediaryAccounts_.addAll(other.intermediaryAccounts_);
          }
          onChanged();
        }
      } else {
        if (!other.intermediaryAccounts_.isEmpty()) {
          if (intermediaryAccountsBuilder_.isEmpty()) {
            intermediaryAccountsBuilder_.dispose();
            intermediaryAccountsBuilder_ = null;
            intermediaryAccounts_ = other.intermediaryAccounts_;
            bitField0_ = (bitField0_ & ~0x00000008);
            intermediaryAccountsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getIntermediaryAccountsFieldBuilder() : null;
          } else {
            intermediaryAccountsBuilder_.addAllMessages(other.intermediaryAccounts_);
          }
        }
      }
      if (intemediaryAccountConnectionsBuilder_ == null) {
        if (!other.intemediaryAccountConnections_.isEmpty()) {
          if (intemediaryAccountConnections_.isEmpty()) {
            intemediaryAccountConnections_ = other.intemediaryAccountConnections_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureIntemediaryAccountConnectionsIsMutable();
            intemediaryAccountConnections_.addAll(other.intemediaryAccountConnections_);
          }
          onChanged();
        }
      } else {
        if (!other.intemediaryAccountConnections_.isEmpty()) {
          if (intemediaryAccountConnectionsBuilder_.isEmpty()) {
            intemediaryAccountConnectionsBuilder_.dispose();
            intemediaryAccountConnectionsBuilder_ = null;
            intemediaryAccountConnections_ = other.intemediaryAccountConnections_;
            bitField0_ = (bitField0_ & ~0x00000010);
            intemediaryAccountConnectionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getIntemediaryAccountConnectionsFieldBuilder() : null;
          } else {
            intemediaryAccountConnectionsBuilder_.addAllMessages(other.intemediaryAccountConnections_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getParamsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.osmosis.superfluid.SuperfluidAsset m =
                  input.readMessage(
                      com.osmosis.superfluid.SuperfluidAsset.parser(),
                      extensionRegistry);
              if (superfluidAssetsBuilder_ == null) {
                ensureSuperfluidAssetsIsMutable();
                superfluidAssets_.add(m);
              } else {
                superfluidAssetsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.osmosis.superfluid.OsmoEquivalentMultiplierRecord m =
                  input.readMessage(
                      com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.parser(),
                      extensionRegistry);
              if (osmoEquivalentMultipliersBuilder_ == null) {
                ensureOsmoEquivalentMultipliersIsMutable();
                osmoEquivalentMultipliers_.add(m);
              } else {
                osmoEquivalentMultipliersBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.osmosis.superfluid.SuperfluidIntermediaryAccount m =
                  input.readMessage(
                      com.osmosis.superfluid.SuperfluidIntermediaryAccount.parser(),
                      extensionRegistry);
              if (intermediaryAccountsBuilder_ == null) {
                ensureIntermediaryAccountsIsMutable();
                intermediaryAccounts_.add(m);
              } else {
                intermediaryAccountsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              com.osmosis.superfluid.LockIdIntermediaryAccountConnection m =
                  input.readMessage(
                      com.osmosis.superfluid.LockIdIntermediaryAccountConnection.parser(),
                      extensionRegistry);
              if (intemediaryAccountConnectionsBuilder_ == null) {
                ensureIntemediaryAccountConnectionsIsMutable();
                intemediaryAccountConnections_.add(m);
              } else {
                intemediaryAccountConnectionsBuilder_.addMessage(m);
              }
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.osmosis.superfluid.Params params_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.osmosis.superfluid.Params, com.osmosis.superfluid.Params.Builder, com.osmosis.superfluid.ParamsOrBuilder> paramsBuilder_;
    /**
     * <code>.osmosis.superfluid.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return Whether the params field is set.
     */
    public boolean hasParams() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.osmosis.superfluid.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return The params.
     */
    public com.osmosis.superfluid.Params getParams() {
      if (paramsBuilder_ == null) {
        return params_ == null ? com.osmosis.superfluid.Params.getDefaultInstance() : params_;
      } else {
        return paramsBuilder_.getMessage();
      }
    }
    /**
     * <code>.osmosis.superfluid.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder setParams(com.osmosis.superfluid.Params value) {
      if (paramsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
      } else {
        paramsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.osmosis.superfluid.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder setParams(
        com.osmosis.superfluid.Params.Builder builderForValue) {
      if (paramsBuilder_ == null) {
        params_ = builderForValue.build();
      } else {
        paramsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.osmosis.superfluid.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeParams(com.osmosis.superfluid.Params value) {
      if (paramsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          params_ != null &&
          params_ != com.osmosis.superfluid.Params.getDefaultInstance()) {
          getParamsBuilder().mergeFrom(value);
        } else {
          params_ = value;
        }
      } else {
        paramsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.osmosis.superfluid.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearParams() {
      bitField0_ = (bitField0_ & ~0x00000001);
      params_ = null;
      if (paramsBuilder_ != null) {
        paramsBuilder_.dispose();
        paramsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.osmosis.superfluid.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.Params.Builder getParamsBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.osmosis.superfluid.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.ParamsOrBuilder getParamsOrBuilder() {
      if (paramsBuilder_ != null) {
        return paramsBuilder_.getMessageOrBuilder();
      } else {
        return params_ == null ?
            com.osmosis.superfluid.Params.getDefaultInstance() : params_;
      }
    }
    /**
     * <code>.osmosis.superfluid.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.osmosis.superfluid.Params, com.osmosis.superfluid.Params.Builder, com.osmosis.superfluid.ParamsOrBuilder> 
        getParamsFieldBuilder() {
      if (paramsBuilder_ == null) {
        paramsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.osmosis.superfluid.Params, com.osmosis.superfluid.Params.Builder, com.osmosis.superfluid.ParamsOrBuilder>(
                getParams(),
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      return paramsBuilder_;
    }

    private java.util.List<com.osmosis.superfluid.SuperfluidAsset> superfluidAssets_ =
      java.util.Collections.emptyList();
    private void ensureSuperfluidAssetsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        superfluidAssets_ = new java.util.ArrayList<com.osmosis.superfluid.SuperfluidAsset>(superfluidAssets_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.osmosis.superfluid.SuperfluidAsset, com.osmosis.superfluid.SuperfluidAsset.Builder, com.osmosis.superfluid.SuperfluidAssetOrBuilder> superfluidAssetsBuilder_;

    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.osmosis.superfluid.SuperfluidAsset> getSuperfluidAssetsList() {
      if (superfluidAssetsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(superfluidAssets_);
      } else {
        return superfluidAssetsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public int getSuperfluidAssetsCount() {
      if (superfluidAssetsBuilder_ == null) {
        return superfluidAssets_.size();
      } else {
        return superfluidAssetsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.SuperfluidAsset getSuperfluidAssets(int index) {
      if (superfluidAssetsBuilder_ == null) {
        return superfluidAssets_.get(index);
      } else {
        return superfluidAssetsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public Builder setSuperfluidAssets(
        int index, com.osmosis.superfluid.SuperfluidAsset value) {
      if (superfluidAssetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSuperfluidAssetsIsMutable();
        superfluidAssets_.set(index, value);
        onChanged();
      } else {
        superfluidAssetsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public Builder setSuperfluidAssets(
        int index, com.osmosis.superfluid.SuperfluidAsset.Builder builderForValue) {
      if (superfluidAssetsBuilder_ == null) {
        ensureSuperfluidAssetsIsMutable();
        superfluidAssets_.set(index, builderForValue.build());
        onChanged();
      } else {
        superfluidAssetsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public Builder addSuperfluidAssets(com.osmosis.superfluid.SuperfluidAsset value) {
      if (superfluidAssetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSuperfluidAssetsIsMutable();
        superfluidAssets_.add(value);
        onChanged();
      } else {
        superfluidAssetsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public Builder addSuperfluidAssets(
        int index, com.osmosis.superfluid.SuperfluidAsset value) {
      if (superfluidAssetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSuperfluidAssetsIsMutable();
        superfluidAssets_.add(index, value);
        onChanged();
      } else {
        superfluidAssetsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public Builder addSuperfluidAssets(
        com.osmosis.superfluid.SuperfluidAsset.Builder builderForValue) {
      if (superfluidAssetsBuilder_ == null) {
        ensureSuperfluidAssetsIsMutable();
        superfluidAssets_.add(builderForValue.build());
        onChanged();
      } else {
        superfluidAssetsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public Builder addSuperfluidAssets(
        int index, com.osmosis.superfluid.SuperfluidAsset.Builder builderForValue) {
      if (superfluidAssetsBuilder_ == null) {
        ensureSuperfluidAssetsIsMutable();
        superfluidAssets_.add(index, builderForValue.build());
        onChanged();
      } else {
        superfluidAssetsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAllSuperfluidAssets(
        java.lang.Iterable<? extends com.osmosis.superfluid.SuperfluidAsset> values) {
      if (superfluidAssetsBuilder_ == null) {
        ensureSuperfluidAssetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, superfluidAssets_);
        onChanged();
      } else {
        superfluidAssetsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearSuperfluidAssets() {
      if (superfluidAssetsBuilder_ == null) {
        superfluidAssets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        superfluidAssetsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public Builder removeSuperfluidAssets(int index) {
      if (superfluidAssetsBuilder_ == null) {
        ensureSuperfluidAssetsIsMutable();
        superfluidAssets_.remove(index);
        onChanged();
      } else {
        superfluidAssetsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.SuperfluidAsset.Builder getSuperfluidAssetsBuilder(
        int index) {
      return getSuperfluidAssetsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.SuperfluidAssetOrBuilder getSuperfluidAssetsOrBuilder(
        int index) {
      if (superfluidAssetsBuilder_ == null) {
        return superfluidAssets_.get(index);  } else {
        return superfluidAssetsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<? extends com.osmosis.superfluid.SuperfluidAssetOrBuilder> 
         getSuperfluidAssetsOrBuilderList() {
      if (superfluidAssetsBuilder_ != null) {
        return superfluidAssetsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(superfluidAssets_);
      }
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.SuperfluidAsset.Builder addSuperfluidAssetsBuilder() {
      return getSuperfluidAssetsFieldBuilder().addBuilder(
          com.osmosis.superfluid.SuperfluidAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.SuperfluidAsset.Builder addSuperfluidAssetsBuilder(
        int index) {
      return getSuperfluidAssetsFieldBuilder().addBuilder(
          index, com.osmosis.superfluid.SuperfluidAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * superfluid_assets defines the registered superfluid assets that have been
     * registered via governance.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidAsset superfluid_assets = 2 [json_name = "superfluidAssets", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.osmosis.superfluid.SuperfluidAsset.Builder> 
         getSuperfluidAssetsBuilderList() {
      return getSuperfluidAssetsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.osmosis.superfluid.SuperfluidAsset, com.osmosis.superfluid.SuperfluidAsset.Builder, com.osmosis.superfluid.SuperfluidAssetOrBuilder> 
        getSuperfluidAssetsFieldBuilder() {
      if (superfluidAssetsBuilder_ == null) {
        superfluidAssetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.osmosis.superfluid.SuperfluidAsset, com.osmosis.superfluid.SuperfluidAsset.Builder, com.osmosis.superfluid.SuperfluidAssetOrBuilder>(
                superfluidAssets_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        superfluidAssets_ = null;
      }
      return superfluidAssetsBuilder_;
    }

    private java.util.List<com.osmosis.superfluid.OsmoEquivalentMultiplierRecord> osmoEquivalentMultipliers_ =
      java.util.Collections.emptyList();
    private void ensureOsmoEquivalentMultipliersIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        osmoEquivalentMultipliers_ = new java.util.ArrayList<com.osmosis.superfluid.OsmoEquivalentMultiplierRecord>(osmoEquivalentMultipliers_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.osmosis.superfluid.OsmoEquivalentMultiplierRecord, com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.Builder, com.osmosis.superfluid.OsmoEquivalentMultiplierRecordOrBuilder> osmoEquivalentMultipliersBuilder_;

    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.osmosis.superfluid.OsmoEquivalentMultiplierRecord> getOsmoEquivalentMultipliersList() {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(osmoEquivalentMultipliers_);
      } else {
        return osmoEquivalentMultipliersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public int getOsmoEquivalentMultipliersCount() {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        return osmoEquivalentMultipliers_.size();
      } else {
        return osmoEquivalentMultipliersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.OsmoEquivalentMultiplierRecord getOsmoEquivalentMultipliers(int index) {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        return osmoEquivalentMultipliers_.get(index);
      } else {
        return osmoEquivalentMultipliersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public Builder setOsmoEquivalentMultipliers(
        int index, com.osmosis.superfluid.OsmoEquivalentMultiplierRecord value) {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOsmoEquivalentMultipliersIsMutable();
        osmoEquivalentMultipliers_.set(index, value);
        onChanged();
      } else {
        osmoEquivalentMultipliersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public Builder setOsmoEquivalentMultipliers(
        int index, com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.Builder builderForValue) {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        ensureOsmoEquivalentMultipliersIsMutable();
        osmoEquivalentMultipliers_.set(index, builderForValue.build());
        onChanged();
      } else {
        osmoEquivalentMultipliersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public Builder addOsmoEquivalentMultipliers(com.osmosis.superfluid.OsmoEquivalentMultiplierRecord value) {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOsmoEquivalentMultipliersIsMutable();
        osmoEquivalentMultipliers_.add(value);
        onChanged();
      } else {
        osmoEquivalentMultipliersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public Builder addOsmoEquivalentMultipliers(
        int index, com.osmosis.superfluid.OsmoEquivalentMultiplierRecord value) {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOsmoEquivalentMultipliersIsMutable();
        osmoEquivalentMultipliers_.add(index, value);
        onChanged();
      } else {
        osmoEquivalentMultipliersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public Builder addOsmoEquivalentMultipliers(
        com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.Builder builderForValue) {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        ensureOsmoEquivalentMultipliersIsMutable();
        osmoEquivalentMultipliers_.add(builderForValue.build());
        onChanged();
      } else {
        osmoEquivalentMultipliersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public Builder addOsmoEquivalentMultipliers(
        int index, com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.Builder builderForValue) {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        ensureOsmoEquivalentMultipliersIsMutable();
        osmoEquivalentMultipliers_.add(index, builderForValue.build());
        onChanged();
      } else {
        osmoEquivalentMultipliersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAllOsmoEquivalentMultipliers(
        java.lang.Iterable<? extends com.osmosis.superfluid.OsmoEquivalentMultiplierRecord> values) {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        ensureOsmoEquivalentMultipliersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, osmoEquivalentMultipliers_);
        onChanged();
      } else {
        osmoEquivalentMultipliersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearOsmoEquivalentMultipliers() {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        osmoEquivalentMultipliers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        osmoEquivalentMultipliersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public Builder removeOsmoEquivalentMultipliers(int index) {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        ensureOsmoEquivalentMultipliersIsMutable();
        osmoEquivalentMultipliers_.remove(index);
        onChanged();
      } else {
        osmoEquivalentMultipliersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.Builder getOsmoEquivalentMultipliersBuilder(
        int index) {
      return getOsmoEquivalentMultipliersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.OsmoEquivalentMultiplierRecordOrBuilder getOsmoEquivalentMultipliersOrBuilder(
        int index) {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        return osmoEquivalentMultipliers_.get(index);  } else {
        return osmoEquivalentMultipliersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<? extends com.osmosis.superfluid.OsmoEquivalentMultiplierRecordOrBuilder> 
         getOsmoEquivalentMultipliersOrBuilderList() {
      if (osmoEquivalentMultipliersBuilder_ != null) {
        return osmoEquivalentMultipliersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(osmoEquivalentMultipliers_);
      }
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.Builder addOsmoEquivalentMultipliersBuilder() {
      return getOsmoEquivalentMultipliersFieldBuilder().addBuilder(
          com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.getDefaultInstance());
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.Builder addOsmoEquivalentMultipliersBuilder(
        int index) {
      return getOsmoEquivalentMultipliersFieldBuilder().addBuilder(
          index, com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.getDefaultInstance());
    }
    /**
     * <pre>
     * osmo_equivalent_multipliers is the records of osmo equivalent amount of
     * each superfluid registered pool, updated every epoch.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.OsmoEquivalentMultiplierRecord osmo_equivalent_multipliers = 3 [json_name = "osmoEquivalentMultipliers", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.Builder> 
         getOsmoEquivalentMultipliersBuilderList() {
      return getOsmoEquivalentMultipliersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.osmosis.superfluid.OsmoEquivalentMultiplierRecord, com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.Builder, com.osmosis.superfluid.OsmoEquivalentMultiplierRecordOrBuilder> 
        getOsmoEquivalentMultipliersFieldBuilder() {
      if (osmoEquivalentMultipliersBuilder_ == null) {
        osmoEquivalentMultipliersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.osmosis.superfluid.OsmoEquivalentMultiplierRecord, com.osmosis.superfluid.OsmoEquivalentMultiplierRecord.Builder, com.osmosis.superfluid.OsmoEquivalentMultiplierRecordOrBuilder>(
                osmoEquivalentMultipliers_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        osmoEquivalentMultipliers_ = null;
      }
      return osmoEquivalentMultipliersBuilder_;
    }

    private java.util.List<com.osmosis.superfluid.SuperfluidIntermediaryAccount> intermediaryAccounts_ =
      java.util.Collections.emptyList();
    private void ensureIntermediaryAccountsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        intermediaryAccounts_ = new java.util.ArrayList<com.osmosis.superfluid.SuperfluidIntermediaryAccount>(intermediaryAccounts_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.osmosis.superfluid.SuperfluidIntermediaryAccount, com.osmosis.superfluid.SuperfluidIntermediaryAccount.Builder, com.osmosis.superfluid.SuperfluidIntermediaryAccountOrBuilder> intermediaryAccountsBuilder_;

    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.osmosis.superfluid.SuperfluidIntermediaryAccount> getIntermediaryAccountsList() {
      if (intermediaryAccountsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(intermediaryAccounts_);
      } else {
        return intermediaryAccountsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public int getIntermediaryAccountsCount() {
      if (intermediaryAccountsBuilder_ == null) {
        return intermediaryAccounts_.size();
      } else {
        return intermediaryAccountsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.SuperfluidIntermediaryAccount getIntermediaryAccounts(int index) {
      if (intermediaryAccountsBuilder_ == null) {
        return intermediaryAccounts_.get(index);
      } else {
        return intermediaryAccountsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public Builder setIntermediaryAccounts(
        int index, com.osmosis.superfluid.SuperfluidIntermediaryAccount value) {
      if (intermediaryAccountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntermediaryAccountsIsMutable();
        intermediaryAccounts_.set(index, value);
        onChanged();
      } else {
        intermediaryAccountsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public Builder setIntermediaryAccounts(
        int index, com.osmosis.superfluid.SuperfluidIntermediaryAccount.Builder builderForValue) {
      if (intermediaryAccountsBuilder_ == null) {
        ensureIntermediaryAccountsIsMutable();
        intermediaryAccounts_.set(index, builderForValue.build());
        onChanged();
      } else {
        intermediaryAccountsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public Builder addIntermediaryAccounts(com.osmosis.superfluid.SuperfluidIntermediaryAccount value) {
      if (intermediaryAccountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntermediaryAccountsIsMutable();
        intermediaryAccounts_.add(value);
        onChanged();
      } else {
        intermediaryAccountsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public Builder addIntermediaryAccounts(
        int index, com.osmosis.superfluid.SuperfluidIntermediaryAccount value) {
      if (intermediaryAccountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntermediaryAccountsIsMutable();
        intermediaryAccounts_.add(index, value);
        onChanged();
      } else {
        intermediaryAccountsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public Builder addIntermediaryAccounts(
        com.osmosis.superfluid.SuperfluidIntermediaryAccount.Builder builderForValue) {
      if (intermediaryAccountsBuilder_ == null) {
        ensureIntermediaryAccountsIsMutable();
        intermediaryAccounts_.add(builderForValue.build());
        onChanged();
      } else {
        intermediaryAccountsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public Builder addIntermediaryAccounts(
        int index, com.osmosis.superfluid.SuperfluidIntermediaryAccount.Builder builderForValue) {
      if (intermediaryAccountsBuilder_ == null) {
        ensureIntermediaryAccountsIsMutable();
        intermediaryAccounts_.add(index, builderForValue.build());
        onChanged();
      } else {
        intermediaryAccountsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAllIntermediaryAccounts(
        java.lang.Iterable<? extends com.osmosis.superfluid.SuperfluidIntermediaryAccount> values) {
      if (intermediaryAccountsBuilder_ == null) {
        ensureIntermediaryAccountsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, intermediaryAccounts_);
        onChanged();
      } else {
        intermediaryAccountsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearIntermediaryAccounts() {
      if (intermediaryAccountsBuilder_ == null) {
        intermediaryAccounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        intermediaryAccountsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public Builder removeIntermediaryAccounts(int index) {
      if (intermediaryAccountsBuilder_ == null) {
        ensureIntermediaryAccountsIsMutable();
        intermediaryAccounts_.remove(index);
        onChanged();
      } else {
        intermediaryAccountsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.SuperfluidIntermediaryAccount.Builder getIntermediaryAccountsBuilder(
        int index) {
      return getIntermediaryAccountsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.SuperfluidIntermediaryAccountOrBuilder getIntermediaryAccountsOrBuilder(
        int index) {
      if (intermediaryAccountsBuilder_ == null) {
        return intermediaryAccounts_.get(index);  } else {
        return intermediaryAccountsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<? extends com.osmosis.superfluid.SuperfluidIntermediaryAccountOrBuilder> 
         getIntermediaryAccountsOrBuilderList() {
      if (intermediaryAccountsBuilder_ != null) {
        return intermediaryAccountsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(intermediaryAccounts_);
      }
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.SuperfluidIntermediaryAccount.Builder addIntermediaryAccountsBuilder() {
      return getIntermediaryAccountsFieldBuilder().addBuilder(
          com.osmosis.superfluid.SuperfluidIntermediaryAccount.getDefaultInstance());
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.SuperfluidIntermediaryAccount.Builder addIntermediaryAccountsBuilder(
        int index) {
      return getIntermediaryAccountsFieldBuilder().addBuilder(
          index, com.osmosis.superfluid.SuperfluidIntermediaryAccount.getDefaultInstance());
    }
    /**
     * <pre>
     * intermediary_accounts is a secondary account for superfluid staking that
     * plays an intermediary role between validators and the delegators.
     * </pre>
     *
     * <code>repeated .osmosis.superfluid.SuperfluidIntermediaryAccount intermediary_accounts = 4 [json_name = "intermediaryAccounts", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.osmosis.superfluid.SuperfluidIntermediaryAccount.Builder> 
         getIntermediaryAccountsBuilderList() {
      return getIntermediaryAccountsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.osmosis.superfluid.SuperfluidIntermediaryAccount, com.osmosis.superfluid.SuperfluidIntermediaryAccount.Builder, com.osmosis.superfluid.SuperfluidIntermediaryAccountOrBuilder> 
        getIntermediaryAccountsFieldBuilder() {
      if (intermediaryAccountsBuilder_ == null) {
        intermediaryAccountsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.osmosis.superfluid.SuperfluidIntermediaryAccount, com.osmosis.superfluid.SuperfluidIntermediaryAccount.Builder, com.osmosis.superfluid.SuperfluidIntermediaryAccountOrBuilder>(
                intermediaryAccounts_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        intermediaryAccounts_ = null;
      }
      return intermediaryAccountsBuilder_;
    }

    private java.util.List<com.osmosis.superfluid.LockIdIntermediaryAccountConnection> intemediaryAccountConnections_ =
      java.util.Collections.emptyList();
    private void ensureIntemediaryAccountConnectionsIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        intemediaryAccountConnections_ = new java.util.ArrayList<com.osmosis.superfluid.LockIdIntermediaryAccountConnection>(intemediaryAccountConnections_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.osmosis.superfluid.LockIdIntermediaryAccountConnection, com.osmosis.superfluid.LockIdIntermediaryAccountConnection.Builder, com.osmosis.superfluid.LockIdIntermediaryAccountConnectionOrBuilder> intemediaryAccountConnectionsBuilder_;

    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.osmosis.superfluid.LockIdIntermediaryAccountConnection> getIntemediaryAccountConnectionsList() {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(intemediaryAccountConnections_);
      } else {
        return intemediaryAccountConnectionsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public int getIntemediaryAccountConnectionsCount() {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        return intemediaryAccountConnections_.size();
      } else {
        return intemediaryAccountConnectionsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.LockIdIntermediaryAccountConnection getIntemediaryAccountConnections(int index) {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        return intemediaryAccountConnections_.get(index);
      } else {
        return intemediaryAccountConnectionsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public Builder setIntemediaryAccountConnections(
        int index, com.osmosis.superfluid.LockIdIntermediaryAccountConnection value) {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntemediaryAccountConnectionsIsMutable();
        intemediaryAccountConnections_.set(index, value);
        onChanged();
      } else {
        intemediaryAccountConnectionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public Builder setIntemediaryAccountConnections(
        int index, com.osmosis.superfluid.LockIdIntermediaryAccountConnection.Builder builderForValue) {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        ensureIntemediaryAccountConnectionsIsMutable();
        intemediaryAccountConnections_.set(index, builderForValue.build());
        onChanged();
      } else {
        intemediaryAccountConnectionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public Builder addIntemediaryAccountConnections(com.osmosis.superfluid.LockIdIntermediaryAccountConnection value) {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntemediaryAccountConnectionsIsMutable();
        intemediaryAccountConnections_.add(value);
        onChanged();
      } else {
        intemediaryAccountConnectionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public Builder addIntemediaryAccountConnections(
        int index, com.osmosis.superfluid.LockIdIntermediaryAccountConnection value) {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntemediaryAccountConnectionsIsMutable();
        intemediaryAccountConnections_.add(index, value);
        onChanged();
      } else {
        intemediaryAccountConnectionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public Builder addIntemediaryAccountConnections(
        com.osmosis.superfluid.LockIdIntermediaryAccountConnection.Builder builderForValue) {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        ensureIntemediaryAccountConnectionsIsMutable();
        intemediaryAccountConnections_.add(builderForValue.build());
        onChanged();
      } else {
        intemediaryAccountConnectionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public Builder addIntemediaryAccountConnections(
        int index, com.osmosis.superfluid.LockIdIntermediaryAccountConnection.Builder builderForValue) {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        ensureIntemediaryAccountConnectionsIsMutable();
        intemediaryAccountConnections_.add(index, builderForValue.build());
        onChanged();
      } else {
        intemediaryAccountConnectionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAllIntemediaryAccountConnections(
        java.lang.Iterable<? extends com.osmosis.superfluid.LockIdIntermediaryAccountConnection> values) {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        ensureIntemediaryAccountConnectionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, intemediaryAccountConnections_);
        onChanged();
      } else {
        intemediaryAccountConnectionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearIntemediaryAccountConnections() {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        intemediaryAccountConnections_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        intemediaryAccountConnectionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public Builder removeIntemediaryAccountConnections(int index) {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        ensureIntemediaryAccountConnectionsIsMutable();
        intemediaryAccountConnections_.remove(index);
        onChanged();
      } else {
        intemediaryAccountConnectionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.LockIdIntermediaryAccountConnection.Builder getIntemediaryAccountConnectionsBuilder(
        int index) {
      return getIntemediaryAccountConnectionsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.LockIdIntermediaryAccountConnectionOrBuilder getIntemediaryAccountConnectionsOrBuilder(
        int index) {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        return intemediaryAccountConnections_.get(index);  } else {
        return intemediaryAccountConnectionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<? extends com.osmosis.superfluid.LockIdIntermediaryAccountConnectionOrBuilder> 
         getIntemediaryAccountConnectionsOrBuilderList() {
      if (intemediaryAccountConnectionsBuilder_ != null) {
        return intemediaryAccountConnectionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(intemediaryAccountConnections_);
      }
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.LockIdIntermediaryAccountConnection.Builder addIntemediaryAccountConnectionsBuilder() {
      return getIntemediaryAccountConnectionsFieldBuilder().addBuilder(
          com.osmosis.superfluid.LockIdIntermediaryAccountConnection.getDefaultInstance());
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public com.osmosis.superfluid.LockIdIntermediaryAccountConnection.Builder addIntemediaryAccountConnectionsBuilder(
        int index) {
      return getIntemediaryAccountConnectionsFieldBuilder().addBuilder(
          index, com.osmosis.superfluid.LockIdIntermediaryAccountConnection.getDefaultInstance());
    }
    /**
     * <code>repeated .osmosis.superfluid.LockIdIntermediaryAccountConnection intemediary_account_connections = 5 [json_name = "intemediaryAccountConnections", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<com.osmosis.superfluid.LockIdIntermediaryAccountConnection.Builder> 
         getIntemediaryAccountConnectionsBuilderList() {
      return getIntemediaryAccountConnectionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.osmosis.superfluid.LockIdIntermediaryAccountConnection, com.osmosis.superfluid.LockIdIntermediaryAccountConnection.Builder, com.osmosis.superfluid.LockIdIntermediaryAccountConnectionOrBuilder> 
        getIntemediaryAccountConnectionsFieldBuilder() {
      if (intemediaryAccountConnectionsBuilder_ == null) {
        intemediaryAccountConnectionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.osmosis.superfluid.LockIdIntermediaryAccountConnection, com.osmosis.superfluid.LockIdIntermediaryAccountConnection.Builder, com.osmosis.superfluid.LockIdIntermediaryAccountConnectionOrBuilder>(
                intemediaryAccountConnections_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        intemediaryAccountConnections_ = null;
      }
      return intemediaryAccountConnectionsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:osmosis.superfluid.GenesisState)
  }

  // @@protoc_insertion_point(class_scope:osmosis.superfluid.GenesisState)
  private static final com.osmosis.superfluid.GenesisState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.osmosis.superfluid.GenesisState();
  }

  public static com.osmosis.superfluid.GenesisState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GenesisState>
      PARSER = new com.google.protobuf.AbstractParser<GenesisState>() {
    @java.lang.Override
    public GenesisState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GenesisState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GenesisState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.osmosis.superfluid.GenesisState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


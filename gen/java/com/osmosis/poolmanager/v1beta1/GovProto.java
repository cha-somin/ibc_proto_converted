// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmosis/poolmanager/v1beta1/gov.proto

package com.osmosis.poolmanager.v1beta1;

public final class GovProto {
  private GovProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DenomPairTakerFeeProposalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:osmosis.poolmanager.v1beta1.DenomPairTakerFeeProposal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string title = 1 [json_name = "title"];</code>
     * @return The title.
     */
    java.lang.String getTitle();
    /**
     * <code>string title = 1 [json_name = "title"];</code>
     * @return The bytes for title.
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <code>string description = 2 [json_name = "description"];</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <code>string description = 2 [json_name = "description"];</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
     */
    java.util.List<com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee> 
        getDenomPairTakerFeeList();
    /**
     * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
     */
    com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee getDenomPairTakerFee(int index);
    /**
     * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
     */
    int getDenomPairTakerFeeCount();
    /**
     * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
     */
    java.util.List<? extends com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFeeOrBuilder> 
        getDenomPairTakerFeeOrBuilderList();
    /**
     * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
     */
    com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFeeOrBuilder getDenomPairTakerFeeOrBuilder(
        int index);
  }
  /**
   * <pre>
   * DenomPairTakerFeeProposal is a type for adding/removing a custom taker fee(s)
   * for one or more denom pairs.
   * </pre>
   *
   * Protobuf type {@code osmosis.poolmanager.v1beta1.DenomPairTakerFeeProposal}
   */
  public static final class DenomPairTakerFeeProposal extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:osmosis.poolmanager.v1beta1.DenomPairTakerFeeProposal)
      DenomPairTakerFeeProposalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DenomPairTakerFeeProposal.newBuilder() to construct.
    private DenomPairTakerFeeProposal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DenomPairTakerFeeProposal() {
      title_ = "";
      description_ = "";
      denomPairTakerFee_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DenomPairTakerFeeProposal();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.osmosis.poolmanager.v1beta1.GovProto.internal_static_osmosis_poolmanager_v1beta1_DenomPairTakerFeeProposal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.osmosis.poolmanager.v1beta1.GovProto.internal_static_osmosis_poolmanager_v1beta1_DenomPairTakerFeeProposal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal.class, com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal.Builder.class);
    }

    public static final int TITLE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object title_ = "";
    /**
     * <code>string title = 1 [json_name = "title"];</code>
     * @return The title.
     */
    @java.lang.Override
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <code>string title = 1 [json_name = "title"];</code>
     * @return The bytes for title.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object description_ = "";
    /**
     * <code>string description = 2 [json_name = "description"];</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <code>string description = 2 [json_name = "description"];</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DENOM_PAIR_TAKER_FEE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee> denomPairTakerFee_;
    /**
     * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public java.util.List<com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee> getDenomPairTakerFeeList() {
      return denomPairTakerFee_;
    }
    /**
     * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFeeOrBuilder> 
        getDenomPairTakerFeeOrBuilderList() {
      return denomPairTakerFee_;
    }
    /**
     * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public int getDenomPairTakerFeeCount() {
      return denomPairTakerFee_.size();
    }
    /**
     * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee getDenomPairTakerFee(int index) {
      return denomPairTakerFee_.get(index);
    }
    /**
     * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFeeOrBuilder getDenomPairTakerFeeOrBuilder(
        int index) {
      return denomPairTakerFee_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(title_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, title_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      for (int i = 0; i < denomPairTakerFee_.size(); i++) {
        output.writeMessage(3, denomPairTakerFee_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(title_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, title_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      for (int i = 0; i < denomPairTakerFee_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, denomPairTakerFee_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal)) {
        return super.equals(obj);
      }
      com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal other = (com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal) obj;

      if (!getTitle()
          .equals(other.getTitle())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getDenomPairTakerFeeList()
          .equals(other.getDenomPairTakerFeeList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      if (getDenomPairTakerFeeCount() > 0) {
        hash = (37 * hash) + DENOM_PAIR_TAKER_FEE_FIELD_NUMBER;
        hash = (53 * hash) + getDenomPairTakerFeeList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * DenomPairTakerFeeProposal is a type for adding/removing a custom taker fee(s)
     * for one or more denom pairs.
     * </pre>
     *
     * Protobuf type {@code osmosis.poolmanager.v1beta1.DenomPairTakerFeeProposal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:osmosis.poolmanager.v1beta1.DenomPairTakerFeeProposal)
        com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.osmosis.poolmanager.v1beta1.GovProto.internal_static_osmosis_poolmanager_v1beta1_DenomPairTakerFeeProposal_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.osmosis.poolmanager.v1beta1.GovProto.internal_static_osmosis_poolmanager_v1beta1_DenomPairTakerFeeProposal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal.class, com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal.Builder.class);
      }

      // Construct using com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        title_ = "";
        description_ = "";
        if (denomPairTakerFeeBuilder_ == null) {
          denomPairTakerFee_ = java.util.Collections.emptyList();
        } else {
          denomPairTakerFee_ = null;
          denomPairTakerFeeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.osmosis.poolmanager.v1beta1.GovProto.internal_static_osmosis_poolmanager_v1beta1_DenomPairTakerFeeProposal_descriptor;
      }

      @java.lang.Override
      public com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal getDefaultInstanceForType() {
        return com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal.getDefaultInstance();
      }

      @java.lang.Override
      public com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal build() {
        com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal buildPartial() {
        com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal result = new com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal result) {
        if (denomPairTakerFeeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            denomPairTakerFee_ = java.util.Collections.unmodifiableList(denomPairTakerFee_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.denomPairTakerFee_ = denomPairTakerFee_;
        } else {
          result.denomPairTakerFee_ = denomPairTakerFeeBuilder_.build();
        }
      }

      private void buildPartial0(com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.title_ = title_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.description_ = description_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal) {
          return mergeFrom((com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal other) {
        if (other == com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal.getDefaultInstance()) return this;
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (denomPairTakerFeeBuilder_ == null) {
          if (!other.denomPairTakerFee_.isEmpty()) {
            if (denomPairTakerFee_.isEmpty()) {
              denomPairTakerFee_ = other.denomPairTakerFee_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDenomPairTakerFeeIsMutable();
              denomPairTakerFee_.addAll(other.denomPairTakerFee_);
            }
            onChanged();
          }
        } else {
          if (!other.denomPairTakerFee_.isEmpty()) {
            if (denomPairTakerFeeBuilder_.isEmpty()) {
              denomPairTakerFeeBuilder_.dispose();
              denomPairTakerFeeBuilder_ = null;
              denomPairTakerFee_ = other.denomPairTakerFee_;
              bitField0_ = (bitField0_ & ~0x00000004);
              denomPairTakerFeeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDenomPairTakerFeeFieldBuilder() : null;
            } else {
              denomPairTakerFeeBuilder_.addAllMessages(other.denomPairTakerFee_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                title_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                description_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee m =
                    input.readMessage(
                        com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.parser(),
                        extensionRegistry);
                if (denomPairTakerFeeBuilder_ == null) {
                  ensureDenomPairTakerFeeIsMutable();
                  denomPairTakerFee_.add(m);
                } else {
                  denomPairTakerFeeBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object title_ = "";
      /**
       * <code>string title = 1 [json_name = "title"];</code>
       * @return The title.
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string title = 1 [json_name = "title"];</code>
       * @return The bytes for title.
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string title = 1 [json_name = "title"];</code>
       * @param value The title to set.
       * @return This builder for chaining.
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        title_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string title = 1 [json_name = "title"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTitle() {
        title_ = getDefaultInstance().getTitle();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string title = 1 [json_name = "title"];</code>
       * @param value The bytes for title to set.
       * @return This builder for chaining.
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        title_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <code>string description = 2 [json_name = "description"];</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string description = 2 [json_name = "description"];</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string description = 2 [json_name = "description"];</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        description_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string description = 2 [json_name = "description"];</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        description_ = getDefaultInstance().getDescription();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string description = 2 [json_name = "description"];</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        description_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.util.List<com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee> denomPairTakerFee_ =
        java.util.Collections.emptyList();
      private void ensureDenomPairTakerFeeIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          denomPairTakerFee_ = new java.util.ArrayList<com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee>(denomPairTakerFee_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee, com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.Builder, com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFeeOrBuilder> denomPairTakerFeeBuilder_;

      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public java.util.List<com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee> getDenomPairTakerFeeList() {
        if (denomPairTakerFeeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(denomPairTakerFee_);
        } else {
          return denomPairTakerFeeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public int getDenomPairTakerFeeCount() {
        if (denomPairTakerFeeBuilder_ == null) {
          return denomPairTakerFee_.size();
        } else {
          return denomPairTakerFeeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee getDenomPairTakerFee(int index) {
        if (denomPairTakerFeeBuilder_ == null) {
          return denomPairTakerFee_.get(index);
        } else {
          return denomPairTakerFeeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder setDenomPairTakerFee(
          int index, com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee value) {
        if (denomPairTakerFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDenomPairTakerFeeIsMutable();
          denomPairTakerFee_.set(index, value);
          onChanged();
        } else {
          denomPairTakerFeeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder setDenomPairTakerFee(
          int index, com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.Builder builderForValue) {
        if (denomPairTakerFeeBuilder_ == null) {
          ensureDenomPairTakerFeeIsMutable();
          denomPairTakerFee_.set(index, builderForValue.build());
          onChanged();
        } else {
          denomPairTakerFeeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder addDenomPairTakerFee(com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee value) {
        if (denomPairTakerFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDenomPairTakerFeeIsMutable();
          denomPairTakerFee_.add(value);
          onChanged();
        } else {
          denomPairTakerFeeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder addDenomPairTakerFee(
          int index, com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee value) {
        if (denomPairTakerFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDenomPairTakerFeeIsMutable();
          denomPairTakerFee_.add(index, value);
          onChanged();
        } else {
          denomPairTakerFeeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder addDenomPairTakerFee(
          com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.Builder builderForValue) {
        if (denomPairTakerFeeBuilder_ == null) {
          ensureDenomPairTakerFeeIsMutable();
          denomPairTakerFee_.add(builderForValue.build());
          onChanged();
        } else {
          denomPairTakerFeeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder addDenomPairTakerFee(
          int index, com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.Builder builderForValue) {
        if (denomPairTakerFeeBuilder_ == null) {
          ensureDenomPairTakerFeeIsMutable();
          denomPairTakerFee_.add(index, builderForValue.build());
          onChanged();
        } else {
          denomPairTakerFeeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder addAllDenomPairTakerFee(
          java.lang.Iterable<? extends com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee> values) {
        if (denomPairTakerFeeBuilder_ == null) {
          ensureDenomPairTakerFeeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, denomPairTakerFee_);
          onChanged();
        } else {
          denomPairTakerFeeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder clearDenomPairTakerFee() {
        if (denomPairTakerFeeBuilder_ == null) {
          denomPairTakerFee_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          denomPairTakerFeeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public Builder removeDenomPairTakerFee(int index) {
        if (denomPairTakerFeeBuilder_ == null) {
          ensureDenomPairTakerFeeIsMutable();
          denomPairTakerFee_.remove(index);
          onChanged();
        } else {
          denomPairTakerFeeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.Builder getDenomPairTakerFeeBuilder(
          int index) {
        return getDenomPairTakerFeeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFeeOrBuilder getDenomPairTakerFeeOrBuilder(
          int index) {
        if (denomPairTakerFeeBuilder_ == null) {
          return denomPairTakerFee_.get(index);  } else {
          return denomPairTakerFeeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public java.util.List<? extends com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFeeOrBuilder> 
           getDenomPairTakerFeeOrBuilderList() {
        if (denomPairTakerFeeBuilder_ != null) {
          return denomPairTakerFeeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(denomPairTakerFee_);
        }
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.Builder addDenomPairTakerFeeBuilder() {
        return getDenomPairTakerFeeFieldBuilder().addBuilder(
            com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.getDefaultInstance());
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.Builder addDenomPairTakerFeeBuilder(
          int index) {
        return getDenomPairTakerFeeFieldBuilder().addBuilder(
            index, com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.getDefaultInstance());
      }
      /**
       * <code>repeated .osmosis.poolmanager.v1beta1.DenomPairTakerFee denom_pair_taker_fee = 3 [json_name = "denomPairTakerFee", (.gogoproto.nullable) = false];</code>
       */
      public java.util.List<com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.Builder> 
           getDenomPairTakerFeeBuilderList() {
        return getDenomPairTakerFeeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee, com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.Builder, com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFeeOrBuilder> 
          getDenomPairTakerFeeFieldBuilder() {
        if (denomPairTakerFeeBuilder_ == null) {
          denomPairTakerFeeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee, com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFee.Builder, com.osmosis.poolmanager.v1beta1.TxProto.DenomPairTakerFeeOrBuilder>(
                  denomPairTakerFee_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          denomPairTakerFee_ = null;
        }
        return denomPairTakerFeeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:osmosis.poolmanager.v1beta1.DenomPairTakerFeeProposal)
    }

    // @@protoc_insertion_point(class_scope:osmosis.poolmanager.v1beta1.DenomPairTakerFeeProposal)
    private static final com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal();
    }

    public static com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DenomPairTakerFeeProposal>
        PARSER = new com.google.protobuf.AbstractParser<DenomPairTakerFeeProposal>() {
      @java.lang.Override
      public DenomPairTakerFeeProposal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DenomPairTakerFeeProposal> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DenomPairTakerFeeProposal> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.osmosis.poolmanager.v1beta1.GovProto.DenomPairTakerFeeProposal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_osmosis_poolmanager_v1beta1_DenomPairTakerFeeProposal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_osmosis_poolmanager_v1beta1_DenomPairTakerFeeProposal_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%osmosis/poolmanager/v1beta1/gov.proto\022" +
      "\033osmosis.poolmanager.v1beta1\032\024gogoproto/" +
      "gogo.proto\032$osmosis/poolmanager/v1beta1/" +
      "tx.proto\"\304\001\n\031DenomPairTakerFeeProposal\022\024" +
      "\n\005title\030\001 \001(\tR\005title\022 \n\013description\030\002 \001(" +
      "\tR\013description\022e\n\024denom_pair_taker_fee\030\003" +
      " \003(\0132..osmosis.poolmanager.v1beta1.Denom" +
      "PairTakerFeeB\004\310\336\037\000R\021denomPairTakerFee:\010\210" +
      "\240\037\000\230\240\037\000B\360\001\n\037com.osmosis.poolmanager.v1be" +
      "ta1B\010GovProtoZ7github.com/osmosis-labs/o" +
      "smosis/v26/x/poolmanager/types\242\002\003OPX\252\002\033O" +
      "smosis.Poolmanager.V1beta1\312\002\033Osmosis\\Poo" +
      "lmanager\\V1beta1\342\002\'Osmosis\\Poolmanager\\V" +
      "1beta1\\GPBMetadata\352\002\035Osmosis::Poolmanage" +
      "r::V1beta1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.osmosis.poolmanager.v1beta1.TxProto.getDescriptor(),
        });
    internal_static_osmosis_poolmanager_v1beta1_DenomPairTakerFeeProposal_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_osmosis_poolmanager_v1beta1_DenomPairTakerFeeProposal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_osmosis_poolmanager_v1beta1_DenomPairTakerFeeProposal_descriptor,
        new java.lang.String[] { "Title", "Description", "DenomPairTakerFee", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.osmosis.poolmanager.v1beta1.TxProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

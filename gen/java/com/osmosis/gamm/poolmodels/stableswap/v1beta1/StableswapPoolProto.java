// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmosis/gamm/pool-models/stableswap/stableswap_pool.proto

package com.osmosis.gamm.poolmodels.stableswap.v1beta1;

public final class StableswapPoolProto {
  private StableswapPoolProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_osmosis_gamm_poolmodels_stableswap_v1beta1_PoolParams_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_osmosis_gamm_poolmodels_stableswap_v1beta1_PoolParams_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_osmosis_gamm_poolmodels_stableswap_v1beta1_Pool_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_osmosis_gamm_poolmodels_stableswap_v1beta1_Pool_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n9osmosis/gamm/pool-models/stableswap/st" +
      "ableswap_pool.proto\022*osmosis.gamm.poolmo" +
      "dels.stableswap.v1beta1\032\031cosmos_proto/co" +
      "smos.proto\032\024gogoproto/gogo.proto\032\021amino/" +
      "amino.proto\032\036google/protobuf/duration.pr" +
      "oto\032\037google/protobuf/timestamp.proto\032\036co" +
      "smos/auth/v1beta1/auth.proto\032\036cosmos/bas" +
      "e/v1beta1/coin.proto\"\360\001\n\nPoolParams\022\\\n\010s" +
      "wap_fee\030\001 \001(\tBA\310\336\037\000\332\336\037&github.com/cosmos" +
      "/cosmos-sdk/types.Dec\362\336\037\017yaml:\"swap_fee\"" +
      "R\007swapFee\022\\\n\010exit_fee\030\002 \001(\tBA\310\336\037\000\332\336\037&git" +
      "hub.com/cosmos/cosmos-sdk/types.Dec\362\336\037\017y" +
      "aml:\"exit_fee\"R\007exitFee:&\212\347\260*!osmosis/ga" +
      "mm/StableswapPoolParams\"\313\005\n\004Pool\022,\n\007addr" +
      "ess\030\001 \001(\tB\022\362\336\037\016yaml:\"address\"R\007address\022\016" +
      "\n\002id\030\002 \001(\004R\002id\022~\n\013pool_params\030\003 \001(\01326.os" +
      "mosis.gamm.poolmodels.stableswap.v1beta1" +
      ".PoolParamsB%\310\336\037\000\362\336\037\035yaml:\"stableswap_po" +
      "ol_params\"R\npoolParams\022Q\n\024future_pool_go" +
      "vernor\030\004 \001(\tB\037\362\336\037\033yaml:\"future_pool_gove" +
      "rnor\"R\022futurePoolGovernor\022Y\n\014total_share" +
      "s\030\005 \001(\0132\031.cosmos.base.v1beta1.CoinB\033\310\336\037\000" +
      "\362\336\037\023yaml:\"total_shares\"R\013totalShares\022r\n\016" +
      "pool_liquidity\030\006 \003(\0132\031.cosmos.base.v1bet" +
      "a1.CoinB0\310\336\037\000\252\337\037(github.com/cosmos/cosmo" +
      "s-sdk/types.CoinsR\rpoolLiquidity\022N\n\017scal" +
      "ing_factors\030\007 \003(\004B%\362\336\037!yaml:\"stableswap_" +
      "scaling_factors\"R\016scalingFactors\022`\n\031scal" +
      "ing_factor_controller\030\010 \001(\tB$\362\336\037 yaml:\"s" +
      "caling_factor_controller\"R\027scalingFactor" +
      "Controller:1\210\240\037\000\230\240\037\000\312\264-\005PoolI\212\347\260*\033osmosi" +
      "s/gamm/StableswapPoolB\325\002\n.com.osmosis.ga" +
      "mm.poolmodels.stableswap.v1beta1B\023Stable" +
      "swapPoolProtoP\001ZAgithub.com/osmosis-labs" +
      "/osmosis/v15/x/gamm/pool-models/stablesw" +
      "ap\242\002\004OGPS\252\002*Osmosis.Gamm.Poolmodels.Stab" +
      "leswap.V1beta1\312\002*Osmosis\\Gamm\\Poolmodels" +
      "\\Stableswap\\V1beta1\342\0026Osmosis\\Gamm\\Poolm" +
      "odels\\Stableswap\\V1beta1\\GPBMetadata\352\002.O" +
      "smosis::Gamm::Poolmodels::Stableswap::V1" +
      "beta1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.cosmos_proto.CosmosProto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
          com.amino.AminoProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.cosmos.auth.v1beta1.AuthProto.getDescriptor(),
          com.cosmos.base.v1beta1.CoinProto.getDescriptor(),
        });
    internal_static_osmosis_gamm_poolmodels_stableswap_v1beta1_PoolParams_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_osmosis_gamm_poolmodels_stableswap_v1beta1_PoolParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_osmosis_gamm_poolmodels_stableswap_v1beta1_PoolParams_descriptor,
        new java.lang.String[] { "SwapFee", "ExitFee", });
    internal_static_osmosis_gamm_poolmodels_stableswap_v1beta1_Pool_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_osmosis_gamm_poolmodels_stableswap_v1beta1_Pool_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_osmosis_gamm_poolmodels_stableswap_v1beta1_Pool_descriptor,
        new java.lang.String[] { "Address", "Id", "PoolParams", "FuturePoolGovernor", "TotalShares", "PoolLiquidity", "ScalingFactors", "ScalingFactorController", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.amino.AminoProto.name);
    registry.add(com.cosmos_proto.CosmosProto.implementsInterface);
    registry.add(com.gogoproto.GogoProto.castrepeated);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.goprotoStringer);
    registry.add(com.gogoproto.GogoProto.moretags);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.cosmos_proto.CosmosProto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
    com.amino.AminoProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.cosmos.auth.v1beta1.AuthProto.getDescriptor();
    com.cosmos.base.v1beta1.CoinProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

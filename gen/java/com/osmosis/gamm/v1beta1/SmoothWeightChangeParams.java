// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmosis/gamm/pool-models/balancer/balancerPool.proto

package com.osmosis.gamm.v1beta1;

/**
 * <pre>
 * Parameters for changing the weights in a balancer pool smoothly from
 * a start weight and end weight over a period of time.
 * Currently, the only smooth change supported is linear changing between
 * the two weights, but more types may be added in the future.
 * When these parameters are set, the weight w(t) for pool time `t` is the
 * following:
 *   t &lt;= start_time: w(t) = initial_pool_weights
 *   start_time &lt; t &lt;= start_time + duration:
 *     w(t) = initial_pool_weights + (t - start_time) *
 *       (target_pool_weights - initial_pool_weights) / (duration)
 *   t &gt; start_time + duration: w(t) = target_pool_weights
 * </pre>
 *
 * Protobuf type {@code osmosis.gamm.v1beta1.SmoothWeightChangeParams}
 */
public final class SmoothWeightChangeParams extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:osmosis.gamm.v1beta1.SmoothWeightChangeParams)
    SmoothWeightChangeParamsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SmoothWeightChangeParams.newBuilder() to construct.
  private SmoothWeightChangeParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SmoothWeightChangeParams() {
    initialPoolWeights_ = java.util.Collections.emptyList();
    targetPoolWeights_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SmoothWeightChangeParams();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.osmosis.gamm.v1beta1.BalancerPoolProto.internal_static_osmosis_gamm_v1beta1_SmoothWeightChangeParams_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.osmosis.gamm.v1beta1.BalancerPoolProto.internal_static_osmosis_gamm_v1beta1_SmoothWeightChangeParams_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.osmosis.gamm.v1beta1.SmoothWeightChangeParams.class, com.osmosis.gamm.v1beta1.SmoothWeightChangeParams.Builder.class);
  }

  public static final int START_TIME_FIELD_NUMBER = 1;
  private com.google.protobuf.Timestamp startTime_;
  /**
   * <pre>
   * The start time for beginning the weight change.
   * If a parameter change / pool instantiation leaves this blank,
   * it should be generated by the state_machine as the current time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 1 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
   * @return Whether the startTime field is set.
   */
  @java.lang.Override
  public boolean hasStartTime() {
    return startTime_ != null;
  }
  /**
   * <pre>
   * The start time for beginning the weight change.
   * If a parameter change / pool instantiation leaves this blank,
   * it should be generated by the state_machine as the current time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 1 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
   * @return The startTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getStartTime() {
    return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
  }
  /**
   * <pre>
   * The start time for beginning the weight change.
   * If a parameter change / pool instantiation leaves this blank,
   * it should be generated by the state_machine as the current time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 1 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
    return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
  }

  public static final int DURATION_FIELD_NUMBER = 2;
  private com.google.protobuf.Duration duration_;
  /**
   * <pre>
   * Duration for the weights to change over
   * </pre>
   *
   * <code>.google.protobuf.Duration duration = 2 [json_name = "duration", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "duration,omitempty", (.gogoproto.moretags) = "yaml:&#92;"duration&#92;"", (.gogoproto.stdduration) = true];</code>
   * @return Whether the duration field is set.
   */
  @java.lang.Override
  public boolean hasDuration() {
    return duration_ != null;
  }
  /**
   * <pre>
   * Duration for the weights to change over
   * </pre>
   *
   * <code>.google.protobuf.Duration duration = 2 [json_name = "duration", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "duration,omitempty", (.gogoproto.moretags) = "yaml:&#92;"duration&#92;"", (.gogoproto.stdduration) = true];</code>
   * @return The duration.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getDuration() {
    return duration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : duration_;
  }
  /**
   * <pre>
   * Duration for the weights to change over
   * </pre>
   *
   * <code>.google.protobuf.Duration duration = 2 [json_name = "duration", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "duration,omitempty", (.gogoproto.moretags) = "yaml:&#92;"duration&#92;"", (.gogoproto.stdduration) = true];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getDurationOrBuilder() {
    return duration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : duration_;
  }

  public static final int INITIAL_POOL_WEIGHTS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.osmosis.gamm.v1beta1.PoolAsset> initialPoolWeights_;
  /**
   * <pre>
   * The initial pool weights. These are copied from the pool's settings
   * at the time of weight change instantiation.
   * The amount PoolAsset.token.amount field is ignored if present,
   * future type refactorings should just have a type with the denom &amp; weight
   * here.
   * </pre>
   *
   * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
   */
  @java.lang.Override
  public java.util.List<com.osmosis.gamm.v1beta1.PoolAsset> getInitialPoolWeightsList() {
    return initialPoolWeights_;
  }
  /**
   * <pre>
   * The initial pool weights. These are copied from the pool's settings
   * at the time of weight change instantiation.
   * The amount PoolAsset.token.amount field is ignored if present,
   * future type refactorings should just have a type with the denom &amp; weight
   * here.
   * </pre>
   *
   * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.osmosis.gamm.v1beta1.PoolAssetOrBuilder> 
      getInitialPoolWeightsOrBuilderList() {
    return initialPoolWeights_;
  }
  /**
   * <pre>
   * The initial pool weights. These are copied from the pool's settings
   * at the time of weight change instantiation.
   * The amount PoolAsset.token.amount field is ignored if present,
   * future type refactorings should just have a type with the denom &amp; weight
   * here.
   * </pre>
   *
   * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
   */
  @java.lang.Override
  public int getInitialPoolWeightsCount() {
    return initialPoolWeights_.size();
  }
  /**
   * <pre>
   * The initial pool weights. These are copied from the pool's settings
   * at the time of weight change instantiation.
   * The amount PoolAsset.token.amount field is ignored if present,
   * future type refactorings should just have a type with the denom &amp; weight
   * here.
   * </pre>
   *
   * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
   */
  @java.lang.Override
  public com.osmosis.gamm.v1beta1.PoolAsset getInitialPoolWeights(int index) {
    return initialPoolWeights_.get(index);
  }
  /**
   * <pre>
   * The initial pool weights. These are copied from the pool's settings
   * at the time of weight change instantiation.
   * The amount PoolAsset.token.amount field is ignored if present,
   * future type refactorings should just have a type with the denom &amp; weight
   * here.
   * </pre>
   *
   * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
   */
  @java.lang.Override
  public com.osmosis.gamm.v1beta1.PoolAssetOrBuilder getInitialPoolWeightsOrBuilder(
      int index) {
    return initialPoolWeights_.get(index);
  }

  public static final int TARGET_POOL_WEIGHTS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.osmosis.gamm.v1beta1.PoolAsset> targetPoolWeights_;
  /**
   * <pre>
   * The target pool weights. The pool weights will change linearly with respect
   * to time between start_time, and start_time + duration. The amount
   * PoolAsset.token.amount field is ignored if present, future type
   * refactorings should just have a type with the denom &amp; weight here.
   * </pre>
   *
   * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
   */
  @java.lang.Override
  public java.util.List<com.osmosis.gamm.v1beta1.PoolAsset> getTargetPoolWeightsList() {
    return targetPoolWeights_;
  }
  /**
   * <pre>
   * The target pool weights. The pool weights will change linearly with respect
   * to time between start_time, and start_time + duration. The amount
   * PoolAsset.token.amount field is ignored if present, future type
   * refactorings should just have a type with the denom &amp; weight here.
   * </pre>
   *
   * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.osmosis.gamm.v1beta1.PoolAssetOrBuilder> 
      getTargetPoolWeightsOrBuilderList() {
    return targetPoolWeights_;
  }
  /**
   * <pre>
   * The target pool weights. The pool weights will change linearly with respect
   * to time between start_time, and start_time + duration. The amount
   * PoolAsset.token.amount field is ignored if present, future type
   * refactorings should just have a type with the denom &amp; weight here.
   * </pre>
   *
   * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
   */
  @java.lang.Override
  public int getTargetPoolWeightsCount() {
    return targetPoolWeights_.size();
  }
  /**
   * <pre>
   * The target pool weights. The pool weights will change linearly with respect
   * to time between start_time, and start_time + duration. The amount
   * PoolAsset.token.amount field is ignored if present, future type
   * refactorings should just have a type with the denom &amp; weight here.
   * </pre>
   *
   * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
   */
  @java.lang.Override
  public com.osmosis.gamm.v1beta1.PoolAsset getTargetPoolWeights(int index) {
    return targetPoolWeights_.get(index);
  }
  /**
   * <pre>
   * The target pool weights. The pool weights will change linearly with respect
   * to time between start_time, and start_time + duration. The amount
   * PoolAsset.token.amount field is ignored if present, future type
   * refactorings should just have a type with the denom &amp; weight here.
   * </pre>
   *
   * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
   */
  @java.lang.Override
  public com.osmosis.gamm.v1beta1.PoolAssetOrBuilder getTargetPoolWeightsOrBuilder(
      int index) {
    return targetPoolWeights_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (startTime_ != null) {
      output.writeMessage(1, getStartTime());
    }
    if (duration_ != null) {
      output.writeMessage(2, getDuration());
    }
    for (int i = 0; i < initialPoolWeights_.size(); i++) {
      output.writeMessage(3, initialPoolWeights_.get(i));
    }
    for (int i = 0; i < targetPoolWeights_.size(); i++) {
      output.writeMessage(4, targetPoolWeights_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (startTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getStartTime());
    }
    if (duration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getDuration());
    }
    for (int i = 0; i < initialPoolWeights_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, initialPoolWeights_.get(i));
    }
    for (int i = 0; i < targetPoolWeights_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, targetPoolWeights_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.osmosis.gamm.v1beta1.SmoothWeightChangeParams)) {
      return super.equals(obj);
    }
    com.osmosis.gamm.v1beta1.SmoothWeightChangeParams other = (com.osmosis.gamm.v1beta1.SmoothWeightChangeParams) obj;

    if (hasStartTime() != other.hasStartTime()) return false;
    if (hasStartTime()) {
      if (!getStartTime()
          .equals(other.getStartTime())) return false;
    }
    if (hasDuration() != other.hasDuration()) return false;
    if (hasDuration()) {
      if (!getDuration()
          .equals(other.getDuration())) return false;
    }
    if (!getInitialPoolWeightsList()
        .equals(other.getInitialPoolWeightsList())) return false;
    if (!getTargetPoolWeightsList()
        .equals(other.getTargetPoolWeightsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasStartTime()) {
      hash = (37 * hash) + START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime().hashCode();
    }
    if (hasDuration()) {
      hash = (37 * hash) + DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getDuration().hashCode();
    }
    if (getInitialPoolWeightsCount() > 0) {
      hash = (37 * hash) + INITIAL_POOL_WEIGHTS_FIELD_NUMBER;
      hash = (53 * hash) + getInitialPoolWeightsList().hashCode();
    }
    if (getTargetPoolWeightsCount() > 0) {
      hash = (37 * hash) + TARGET_POOL_WEIGHTS_FIELD_NUMBER;
      hash = (53 * hash) + getTargetPoolWeightsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.osmosis.gamm.v1beta1.SmoothWeightChangeParams prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Parameters for changing the weights in a balancer pool smoothly from
   * a start weight and end weight over a period of time.
   * Currently, the only smooth change supported is linear changing between
   * the two weights, but more types may be added in the future.
   * When these parameters are set, the weight w(t) for pool time `t` is the
   * following:
   *   t &lt;= start_time: w(t) = initial_pool_weights
   *   start_time &lt; t &lt;= start_time + duration:
   *     w(t) = initial_pool_weights + (t - start_time) *
   *       (target_pool_weights - initial_pool_weights) / (duration)
   *   t &gt; start_time + duration: w(t) = target_pool_weights
   * </pre>
   *
   * Protobuf type {@code osmosis.gamm.v1beta1.SmoothWeightChangeParams}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:osmosis.gamm.v1beta1.SmoothWeightChangeParams)
      com.osmosis.gamm.v1beta1.SmoothWeightChangeParamsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.osmosis.gamm.v1beta1.BalancerPoolProto.internal_static_osmosis_gamm_v1beta1_SmoothWeightChangeParams_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.osmosis.gamm.v1beta1.BalancerPoolProto.internal_static_osmosis_gamm_v1beta1_SmoothWeightChangeParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.osmosis.gamm.v1beta1.SmoothWeightChangeParams.class, com.osmosis.gamm.v1beta1.SmoothWeightChangeParams.Builder.class);
    }

    // Construct using com.osmosis.gamm.v1beta1.SmoothWeightChangeParams.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      startTime_ = null;
      if (startTimeBuilder_ != null) {
        startTimeBuilder_.dispose();
        startTimeBuilder_ = null;
      }
      duration_ = null;
      if (durationBuilder_ != null) {
        durationBuilder_.dispose();
        durationBuilder_ = null;
      }
      if (initialPoolWeightsBuilder_ == null) {
        initialPoolWeights_ = java.util.Collections.emptyList();
      } else {
        initialPoolWeights_ = null;
        initialPoolWeightsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (targetPoolWeightsBuilder_ == null) {
        targetPoolWeights_ = java.util.Collections.emptyList();
      } else {
        targetPoolWeights_ = null;
        targetPoolWeightsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.osmosis.gamm.v1beta1.BalancerPoolProto.internal_static_osmosis_gamm_v1beta1_SmoothWeightChangeParams_descriptor;
    }

    @java.lang.Override
    public com.osmosis.gamm.v1beta1.SmoothWeightChangeParams getDefaultInstanceForType() {
      return com.osmosis.gamm.v1beta1.SmoothWeightChangeParams.getDefaultInstance();
    }

    @java.lang.Override
    public com.osmosis.gamm.v1beta1.SmoothWeightChangeParams build() {
      com.osmosis.gamm.v1beta1.SmoothWeightChangeParams result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.osmosis.gamm.v1beta1.SmoothWeightChangeParams buildPartial() {
      com.osmosis.gamm.v1beta1.SmoothWeightChangeParams result = new com.osmosis.gamm.v1beta1.SmoothWeightChangeParams(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.osmosis.gamm.v1beta1.SmoothWeightChangeParams result) {
      if (initialPoolWeightsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          initialPoolWeights_ = java.util.Collections.unmodifiableList(initialPoolWeights_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.initialPoolWeights_ = initialPoolWeights_;
      } else {
        result.initialPoolWeights_ = initialPoolWeightsBuilder_.build();
      }
      if (targetPoolWeightsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          targetPoolWeights_ = java.util.Collections.unmodifiableList(targetPoolWeights_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.targetPoolWeights_ = targetPoolWeights_;
      } else {
        result.targetPoolWeights_ = targetPoolWeightsBuilder_.build();
      }
    }

    private void buildPartial0(com.osmosis.gamm.v1beta1.SmoothWeightChangeParams result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.startTime_ = startTimeBuilder_ == null
            ? startTime_
            : startTimeBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.duration_ = durationBuilder_ == null
            ? duration_
            : durationBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.osmosis.gamm.v1beta1.SmoothWeightChangeParams) {
        return mergeFrom((com.osmosis.gamm.v1beta1.SmoothWeightChangeParams)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.osmosis.gamm.v1beta1.SmoothWeightChangeParams other) {
      if (other == com.osmosis.gamm.v1beta1.SmoothWeightChangeParams.getDefaultInstance()) return this;
      if (other.hasStartTime()) {
        mergeStartTime(other.getStartTime());
      }
      if (other.hasDuration()) {
        mergeDuration(other.getDuration());
      }
      if (initialPoolWeightsBuilder_ == null) {
        if (!other.initialPoolWeights_.isEmpty()) {
          if (initialPoolWeights_.isEmpty()) {
            initialPoolWeights_ = other.initialPoolWeights_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureInitialPoolWeightsIsMutable();
            initialPoolWeights_.addAll(other.initialPoolWeights_);
          }
          onChanged();
        }
      } else {
        if (!other.initialPoolWeights_.isEmpty()) {
          if (initialPoolWeightsBuilder_.isEmpty()) {
            initialPoolWeightsBuilder_.dispose();
            initialPoolWeightsBuilder_ = null;
            initialPoolWeights_ = other.initialPoolWeights_;
            bitField0_ = (bitField0_ & ~0x00000004);
            initialPoolWeightsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getInitialPoolWeightsFieldBuilder() : null;
          } else {
            initialPoolWeightsBuilder_.addAllMessages(other.initialPoolWeights_);
          }
        }
      }
      if (targetPoolWeightsBuilder_ == null) {
        if (!other.targetPoolWeights_.isEmpty()) {
          if (targetPoolWeights_.isEmpty()) {
            targetPoolWeights_ = other.targetPoolWeights_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTargetPoolWeightsIsMutable();
            targetPoolWeights_.addAll(other.targetPoolWeights_);
          }
          onChanged();
        }
      } else {
        if (!other.targetPoolWeights_.isEmpty()) {
          if (targetPoolWeightsBuilder_.isEmpty()) {
            targetPoolWeightsBuilder_.dispose();
            targetPoolWeightsBuilder_ = null;
            targetPoolWeights_ = other.targetPoolWeights_;
            bitField0_ = (bitField0_ & ~0x00000008);
            targetPoolWeightsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTargetPoolWeightsFieldBuilder() : null;
          } else {
            targetPoolWeightsBuilder_.addAllMessages(other.targetPoolWeights_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getStartTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getDurationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.osmosis.gamm.v1beta1.PoolAsset m =
                  input.readMessage(
                      com.osmosis.gamm.v1beta1.PoolAsset.parser(),
                      extensionRegistry);
              if (initialPoolWeightsBuilder_ == null) {
                ensureInitialPoolWeightsIsMutable();
                initialPoolWeights_.add(m);
              } else {
                initialPoolWeightsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.osmosis.gamm.v1beta1.PoolAsset m =
                  input.readMessage(
                      com.osmosis.gamm.v1beta1.PoolAsset.parser(),
                      extensionRegistry);
              if (targetPoolWeightsBuilder_ == null) {
                ensureTargetPoolWeightsIsMutable();
                targetPoolWeights_.add(m);
              } else {
                targetPoolWeightsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Timestamp startTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> startTimeBuilder_;
    /**
     * <pre>
     * The start time for beginning the weight change.
     * If a parameter change / pool instantiation leaves this blank,
     * it should be generated by the state_machine as the current time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 1 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return Whether the startTime field is set.
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The start time for beginning the weight change.
     * If a parameter change / pool instantiation leaves this blank,
     * it should be generated by the state_machine as the current time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 1 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return The startTime.
     */
    public com.google.protobuf.Timestamp getStartTime() {
      if (startTimeBuilder_ == null) {
        return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
      } else {
        return startTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The start time for beginning the weight change.
     * If a parameter change / pool instantiation leaves this blank,
     * it should be generated by the state_machine as the current time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 1 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public Builder setStartTime(com.google.protobuf.Timestamp value) {
      if (startTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        startTime_ = value;
      } else {
        startTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The start time for beginning the weight change.
     * If a parameter change / pool instantiation leaves this blank,
     * it should be generated by the state_machine as the current time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 1 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public Builder setStartTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (startTimeBuilder_ == null) {
        startTime_ = builderForValue.build();
      } else {
        startTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The start time for beginning the weight change.
     * If a parameter change / pool instantiation leaves this blank,
     * it should be generated by the state_machine as the current time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 1 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public Builder mergeStartTime(com.google.protobuf.Timestamp value) {
      if (startTimeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          startTime_ != null &&
          startTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getStartTimeBuilder().mergeFrom(value);
        } else {
          startTime_ = value;
        }
      } else {
        startTimeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The start time for beginning the weight change.
     * If a parameter change / pool instantiation leaves this blank,
     * it should be generated by the state_machine as the current time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 1 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public Builder clearStartTime() {
      bitField0_ = (bitField0_ & ~0x00000001);
      startTime_ = null;
      if (startTimeBuilder_ != null) {
        startTimeBuilder_.dispose();
        startTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The start time for beginning the weight change.
     * If a parameter change / pool instantiation leaves this blank,
     * it should be generated by the state_machine as the current time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 1 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public com.google.protobuf.Timestamp.Builder getStartTimeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getStartTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The start time for beginning the weight change.
     * If a parameter change / pool instantiation leaves this blank,
     * it should be generated by the state_machine as the current time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 1 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
      if (startTimeBuilder_ != null) {
        return startTimeBuilder_.getMessageOrBuilder();
      } else {
        return startTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
      }
    }
    /**
     * <pre>
     * The start time for beginning the weight change.
     * If a parameter change / pool instantiation leaves this blank,
     * it should be generated by the state_machine as the current time.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 1 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getStartTimeFieldBuilder() {
      if (startTimeBuilder_ == null) {
        startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getStartTime(),
                getParentForChildren(),
                isClean());
        startTime_ = null;
      }
      return startTimeBuilder_;
    }

    private com.google.protobuf.Duration duration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationBuilder_;
    /**
     * <pre>
     * Duration for the weights to change over
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [json_name = "duration", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "duration,omitempty", (.gogoproto.moretags) = "yaml:&#92;"duration&#92;"", (.gogoproto.stdduration) = true];</code>
     * @return Whether the duration field is set.
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Duration for the weights to change over
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [json_name = "duration", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "duration,omitempty", (.gogoproto.moretags) = "yaml:&#92;"duration&#92;"", (.gogoproto.stdduration) = true];</code>
     * @return The duration.
     */
    public com.google.protobuf.Duration getDuration() {
      if (durationBuilder_ == null) {
        return duration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : duration_;
      } else {
        return durationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Duration for the weights to change over
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [json_name = "duration", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "duration,omitempty", (.gogoproto.moretags) = "yaml:&#92;"duration&#92;"", (.gogoproto.stdduration) = true];</code>
     */
    public Builder setDuration(com.google.protobuf.Duration value) {
      if (durationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        duration_ = value;
      } else {
        durationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Duration for the weights to change over
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [json_name = "duration", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "duration,omitempty", (.gogoproto.moretags) = "yaml:&#92;"duration&#92;"", (.gogoproto.stdduration) = true];</code>
     */
    public Builder setDuration(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (durationBuilder_ == null) {
        duration_ = builderForValue.build();
      } else {
        durationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Duration for the weights to change over
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [json_name = "duration", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "duration,omitempty", (.gogoproto.moretags) = "yaml:&#92;"duration&#92;"", (.gogoproto.stdduration) = true];</code>
     */
    public Builder mergeDuration(com.google.protobuf.Duration value) {
      if (durationBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          duration_ != null &&
          duration_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getDurationBuilder().mergeFrom(value);
        } else {
          duration_ = value;
        }
      } else {
        durationBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Duration for the weights to change over
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [json_name = "duration", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "duration,omitempty", (.gogoproto.moretags) = "yaml:&#92;"duration&#92;"", (.gogoproto.stdduration) = true];</code>
     */
    public Builder clearDuration() {
      bitField0_ = (bitField0_ & ~0x00000002);
      duration_ = null;
      if (durationBuilder_ != null) {
        durationBuilder_.dispose();
        durationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Duration for the weights to change over
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [json_name = "duration", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "duration,omitempty", (.gogoproto.moretags) = "yaml:&#92;"duration&#92;"", (.gogoproto.stdduration) = true];</code>
     */
    public com.google.protobuf.Duration.Builder getDurationBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getDurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Duration for the weights to change over
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [json_name = "duration", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "duration,omitempty", (.gogoproto.moretags) = "yaml:&#92;"duration&#92;"", (.gogoproto.stdduration) = true];</code>
     */
    public com.google.protobuf.DurationOrBuilder getDurationOrBuilder() {
      if (durationBuilder_ != null) {
        return durationBuilder_.getMessageOrBuilder();
      } else {
        return duration_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : duration_;
      }
    }
    /**
     * <pre>
     * Duration for the weights to change over
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [json_name = "duration", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "duration,omitempty", (.gogoproto.moretags) = "yaml:&#92;"duration&#92;"", (.gogoproto.stdduration) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getDurationFieldBuilder() {
      if (durationBuilder_ == null) {
        durationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getDuration(),
                getParentForChildren(),
                isClean());
        duration_ = null;
      }
      return durationBuilder_;
    }

    private java.util.List<com.osmosis.gamm.v1beta1.PoolAsset> initialPoolWeights_ =
      java.util.Collections.emptyList();
    private void ensureInitialPoolWeightsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        initialPoolWeights_ = new java.util.ArrayList<com.osmosis.gamm.v1beta1.PoolAsset>(initialPoolWeights_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.osmosis.gamm.v1beta1.PoolAsset, com.osmosis.gamm.v1beta1.PoolAsset.Builder, com.osmosis.gamm.v1beta1.PoolAssetOrBuilder> initialPoolWeightsBuilder_;

    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public java.util.List<com.osmosis.gamm.v1beta1.PoolAsset> getInitialPoolWeightsList() {
      if (initialPoolWeightsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(initialPoolWeights_);
      } else {
        return initialPoolWeightsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public int getInitialPoolWeightsCount() {
      if (initialPoolWeightsBuilder_ == null) {
        return initialPoolWeights_.size();
      } else {
        return initialPoolWeightsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public com.osmosis.gamm.v1beta1.PoolAsset getInitialPoolWeights(int index) {
      if (initialPoolWeightsBuilder_ == null) {
        return initialPoolWeights_.get(index);
      } else {
        return initialPoolWeightsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public Builder setInitialPoolWeights(
        int index, com.osmosis.gamm.v1beta1.PoolAsset value) {
      if (initialPoolWeightsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInitialPoolWeightsIsMutable();
        initialPoolWeights_.set(index, value);
        onChanged();
      } else {
        initialPoolWeightsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public Builder setInitialPoolWeights(
        int index, com.osmosis.gamm.v1beta1.PoolAsset.Builder builderForValue) {
      if (initialPoolWeightsBuilder_ == null) {
        ensureInitialPoolWeightsIsMutable();
        initialPoolWeights_.set(index, builderForValue.build());
        onChanged();
      } else {
        initialPoolWeightsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public Builder addInitialPoolWeights(com.osmosis.gamm.v1beta1.PoolAsset value) {
      if (initialPoolWeightsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInitialPoolWeightsIsMutable();
        initialPoolWeights_.add(value);
        onChanged();
      } else {
        initialPoolWeightsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public Builder addInitialPoolWeights(
        int index, com.osmosis.gamm.v1beta1.PoolAsset value) {
      if (initialPoolWeightsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInitialPoolWeightsIsMutable();
        initialPoolWeights_.add(index, value);
        onChanged();
      } else {
        initialPoolWeightsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public Builder addInitialPoolWeights(
        com.osmosis.gamm.v1beta1.PoolAsset.Builder builderForValue) {
      if (initialPoolWeightsBuilder_ == null) {
        ensureInitialPoolWeightsIsMutable();
        initialPoolWeights_.add(builderForValue.build());
        onChanged();
      } else {
        initialPoolWeightsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public Builder addInitialPoolWeights(
        int index, com.osmosis.gamm.v1beta1.PoolAsset.Builder builderForValue) {
      if (initialPoolWeightsBuilder_ == null) {
        ensureInitialPoolWeightsIsMutable();
        initialPoolWeights_.add(index, builderForValue.build());
        onChanged();
      } else {
        initialPoolWeightsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public Builder addAllInitialPoolWeights(
        java.lang.Iterable<? extends com.osmosis.gamm.v1beta1.PoolAsset> values) {
      if (initialPoolWeightsBuilder_ == null) {
        ensureInitialPoolWeightsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, initialPoolWeights_);
        onChanged();
      } else {
        initialPoolWeightsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public Builder clearInitialPoolWeights() {
      if (initialPoolWeightsBuilder_ == null) {
        initialPoolWeights_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        initialPoolWeightsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public Builder removeInitialPoolWeights(int index) {
      if (initialPoolWeightsBuilder_ == null) {
        ensureInitialPoolWeightsIsMutable();
        initialPoolWeights_.remove(index);
        onChanged();
      } else {
        initialPoolWeightsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public com.osmosis.gamm.v1beta1.PoolAsset.Builder getInitialPoolWeightsBuilder(
        int index) {
      return getInitialPoolWeightsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public com.osmosis.gamm.v1beta1.PoolAssetOrBuilder getInitialPoolWeightsOrBuilder(
        int index) {
      if (initialPoolWeightsBuilder_ == null) {
        return initialPoolWeights_.get(index);  } else {
        return initialPoolWeightsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public java.util.List<? extends com.osmosis.gamm.v1beta1.PoolAssetOrBuilder> 
         getInitialPoolWeightsOrBuilderList() {
      if (initialPoolWeightsBuilder_ != null) {
        return initialPoolWeightsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(initialPoolWeights_);
      }
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public com.osmosis.gamm.v1beta1.PoolAsset.Builder addInitialPoolWeightsBuilder() {
      return getInitialPoolWeightsFieldBuilder().addBuilder(
          com.osmosis.gamm.v1beta1.PoolAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public com.osmosis.gamm.v1beta1.PoolAsset.Builder addInitialPoolWeightsBuilder(
        int index) {
      return getInitialPoolWeightsFieldBuilder().addBuilder(
          index, com.osmosis.gamm.v1beta1.PoolAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * The initial pool weights. These are copied from the pool's settings
     * at the time of weight change instantiation.
     * The amount PoolAsset.token.amount field is ignored if present,
     * future type refactorings should just have a type with the denom &amp; weight
     * here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset initial_pool_weights = 3 [json_name = "initialPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"initial_pool_weights&#92;""];</code>
     */
    public java.util.List<com.osmosis.gamm.v1beta1.PoolAsset.Builder> 
         getInitialPoolWeightsBuilderList() {
      return getInitialPoolWeightsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.osmosis.gamm.v1beta1.PoolAsset, com.osmosis.gamm.v1beta1.PoolAsset.Builder, com.osmosis.gamm.v1beta1.PoolAssetOrBuilder> 
        getInitialPoolWeightsFieldBuilder() {
      if (initialPoolWeightsBuilder_ == null) {
        initialPoolWeightsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.osmosis.gamm.v1beta1.PoolAsset, com.osmosis.gamm.v1beta1.PoolAsset.Builder, com.osmosis.gamm.v1beta1.PoolAssetOrBuilder>(
                initialPoolWeights_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        initialPoolWeights_ = null;
      }
      return initialPoolWeightsBuilder_;
    }

    private java.util.List<com.osmosis.gamm.v1beta1.PoolAsset> targetPoolWeights_ =
      java.util.Collections.emptyList();
    private void ensureTargetPoolWeightsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        targetPoolWeights_ = new java.util.ArrayList<com.osmosis.gamm.v1beta1.PoolAsset>(targetPoolWeights_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.osmosis.gamm.v1beta1.PoolAsset, com.osmosis.gamm.v1beta1.PoolAsset.Builder, com.osmosis.gamm.v1beta1.PoolAssetOrBuilder> targetPoolWeightsBuilder_;

    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public java.util.List<com.osmosis.gamm.v1beta1.PoolAsset> getTargetPoolWeightsList() {
      if (targetPoolWeightsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(targetPoolWeights_);
      } else {
        return targetPoolWeightsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public int getTargetPoolWeightsCount() {
      if (targetPoolWeightsBuilder_ == null) {
        return targetPoolWeights_.size();
      } else {
        return targetPoolWeightsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public com.osmosis.gamm.v1beta1.PoolAsset getTargetPoolWeights(int index) {
      if (targetPoolWeightsBuilder_ == null) {
        return targetPoolWeights_.get(index);
      } else {
        return targetPoolWeightsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public Builder setTargetPoolWeights(
        int index, com.osmosis.gamm.v1beta1.PoolAsset value) {
      if (targetPoolWeightsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTargetPoolWeightsIsMutable();
        targetPoolWeights_.set(index, value);
        onChanged();
      } else {
        targetPoolWeightsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public Builder setTargetPoolWeights(
        int index, com.osmosis.gamm.v1beta1.PoolAsset.Builder builderForValue) {
      if (targetPoolWeightsBuilder_ == null) {
        ensureTargetPoolWeightsIsMutable();
        targetPoolWeights_.set(index, builderForValue.build());
        onChanged();
      } else {
        targetPoolWeightsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public Builder addTargetPoolWeights(com.osmosis.gamm.v1beta1.PoolAsset value) {
      if (targetPoolWeightsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTargetPoolWeightsIsMutable();
        targetPoolWeights_.add(value);
        onChanged();
      } else {
        targetPoolWeightsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public Builder addTargetPoolWeights(
        int index, com.osmosis.gamm.v1beta1.PoolAsset value) {
      if (targetPoolWeightsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTargetPoolWeightsIsMutable();
        targetPoolWeights_.add(index, value);
        onChanged();
      } else {
        targetPoolWeightsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public Builder addTargetPoolWeights(
        com.osmosis.gamm.v1beta1.PoolAsset.Builder builderForValue) {
      if (targetPoolWeightsBuilder_ == null) {
        ensureTargetPoolWeightsIsMutable();
        targetPoolWeights_.add(builderForValue.build());
        onChanged();
      } else {
        targetPoolWeightsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public Builder addTargetPoolWeights(
        int index, com.osmosis.gamm.v1beta1.PoolAsset.Builder builderForValue) {
      if (targetPoolWeightsBuilder_ == null) {
        ensureTargetPoolWeightsIsMutable();
        targetPoolWeights_.add(index, builderForValue.build());
        onChanged();
      } else {
        targetPoolWeightsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public Builder addAllTargetPoolWeights(
        java.lang.Iterable<? extends com.osmosis.gamm.v1beta1.PoolAsset> values) {
      if (targetPoolWeightsBuilder_ == null) {
        ensureTargetPoolWeightsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, targetPoolWeights_);
        onChanged();
      } else {
        targetPoolWeightsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public Builder clearTargetPoolWeights() {
      if (targetPoolWeightsBuilder_ == null) {
        targetPoolWeights_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        targetPoolWeightsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public Builder removeTargetPoolWeights(int index) {
      if (targetPoolWeightsBuilder_ == null) {
        ensureTargetPoolWeightsIsMutable();
        targetPoolWeights_.remove(index);
        onChanged();
      } else {
        targetPoolWeightsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public com.osmosis.gamm.v1beta1.PoolAsset.Builder getTargetPoolWeightsBuilder(
        int index) {
      return getTargetPoolWeightsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public com.osmosis.gamm.v1beta1.PoolAssetOrBuilder getTargetPoolWeightsOrBuilder(
        int index) {
      if (targetPoolWeightsBuilder_ == null) {
        return targetPoolWeights_.get(index);  } else {
        return targetPoolWeightsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public java.util.List<? extends com.osmosis.gamm.v1beta1.PoolAssetOrBuilder> 
         getTargetPoolWeightsOrBuilderList() {
      if (targetPoolWeightsBuilder_ != null) {
        return targetPoolWeightsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(targetPoolWeights_);
      }
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public com.osmosis.gamm.v1beta1.PoolAsset.Builder addTargetPoolWeightsBuilder() {
      return getTargetPoolWeightsFieldBuilder().addBuilder(
          com.osmosis.gamm.v1beta1.PoolAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public com.osmosis.gamm.v1beta1.PoolAsset.Builder addTargetPoolWeightsBuilder(
        int index) {
      return getTargetPoolWeightsFieldBuilder().addBuilder(
          index, com.osmosis.gamm.v1beta1.PoolAsset.getDefaultInstance());
    }
    /**
     * <pre>
     * The target pool weights. The pool weights will change linearly with respect
     * to time between start_time, and start_time + duration. The amount
     * PoolAsset.token.amount field is ignored if present, future type
     * refactorings should just have a type with the denom &amp; weight here.
     * </pre>
     *
     * <code>repeated .osmosis.gamm.v1beta1.PoolAsset target_pool_weights = 4 [json_name = "targetPoolWeights", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"target_pool_weights&#92;""];</code>
     */
    public java.util.List<com.osmosis.gamm.v1beta1.PoolAsset.Builder> 
         getTargetPoolWeightsBuilderList() {
      return getTargetPoolWeightsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.osmosis.gamm.v1beta1.PoolAsset, com.osmosis.gamm.v1beta1.PoolAsset.Builder, com.osmosis.gamm.v1beta1.PoolAssetOrBuilder> 
        getTargetPoolWeightsFieldBuilder() {
      if (targetPoolWeightsBuilder_ == null) {
        targetPoolWeightsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.osmosis.gamm.v1beta1.PoolAsset, com.osmosis.gamm.v1beta1.PoolAsset.Builder, com.osmosis.gamm.v1beta1.PoolAssetOrBuilder>(
                targetPoolWeights_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        targetPoolWeights_ = null;
      }
      return targetPoolWeightsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:osmosis.gamm.v1beta1.SmoothWeightChangeParams)
  }

  // @@protoc_insertion_point(class_scope:osmosis.gamm.v1beta1.SmoothWeightChangeParams)
  private static final com.osmosis.gamm.v1beta1.SmoothWeightChangeParams DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.osmosis.gamm.v1beta1.SmoothWeightChangeParams();
  }

  public static com.osmosis.gamm.v1beta1.SmoothWeightChangeParams getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SmoothWeightChangeParams>
      PARSER = new com.google.protobuf.AbstractParser<SmoothWeightChangeParams>() {
    @java.lang.Override
    public SmoothWeightChangeParams parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SmoothWeightChangeParams> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SmoothWeightChangeParams> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.osmosis.gamm.v1beta1.SmoothWeightChangeParams getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


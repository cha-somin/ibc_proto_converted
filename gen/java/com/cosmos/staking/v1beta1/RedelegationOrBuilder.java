// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/staking/v1beta1/staking.proto

package com.cosmos.staking.v1beta1;

public interface RedelegationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmos.staking.v1beta1.Redelegation)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * delegator_address is the bech32-encoded address of the delegator.
   * </pre>
   *
   * <code>string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The delegatorAddress.
   */
  java.lang.String getDelegatorAddress();
  /**
   * <pre>
   * delegator_address is the bech32-encoded address of the delegator.
   * </pre>
   *
   * <code>string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The bytes for delegatorAddress.
   */
  com.google.protobuf.ByteString
      getDelegatorAddressBytes();

  /**
   * <pre>
   * validator_src_address is the validator redelegation source operator address.
   * </pre>
   *
   * <code>string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The validatorSrcAddress.
   */
  java.lang.String getValidatorSrcAddress();
  /**
   * <pre>
   * validator_src_address is the validator redelegation source operator address.
   * </pre>
   *
   * <code>string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The bytes for validatorSrcAddress.
   */
  com.google.protobuf.ByteString
      getValidatorSrcAddressBytes();

  /**
   * <pre>
   * validator_dst_address is the validator redelegation destination operator address.
   * </pre>
   *
   * <code>string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The validatorDstAddress.
   */
  java.lang.String getValidatorDstAddress();
  /**
   * <pre>
   * validator_dst_address is the validator redelegation destination operator address.
   * </pre>
   *
   * <code>string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The bytes for validatorDstAddress.
   */
  com.google.protobuf.ByteString
      getValidatorDstAddressBytes();

  /**
   * <pre>
   * entries are the redelegation entries.
   * </pre>
   *
   * <code>repeated .cosmos.staking.v1beta1.RedelegationEntry entries = 4 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
   */
  java.util.List<com.cosmos.staking.v1beta1.RedelegationEntry> 
      getEntriesList();
  /**
   * <pre>
   * entries are the redelegation entries.
   * </pre>
   *
   * <code>repeated .cosmos.staking.v1beta1.RedelegationEntry entries = 4 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
   */
  com.cosmos.staking.v1beta1.RedelegationEntry getEntries(int index);
  /**
   * <pre>
   * entries are the redelegation entries.
   * </pre>
   *
   * <code>repeated .cosmos.staking.v1beta1.RedelegationEntry entries = 4 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
   */
  int getEntriesCount();
  /**
   * <pre>
   * entries are the redelegation entries.
   * </pre>
   *
   * <code>repeated .cosmos.staking.v1beta1.RedelegationEntry entries = 4 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
   */
  java.util.List<? extends com.cosmos.staking.v1beta1.RedelegationEntryOrBuilder> 
      getEntriesOrBuilderList();
  /**
   * <pre>
   * entries are the redelegation entries.
   * </pre>
   *
   * <code>repeated .cosmos.staking.v1beta1.RedelegationEntry entries = 4 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
   */
  com.cosmos.staking.v1beta1.RedelegationEntryOrBuilder getEntriesOrBuilder(
      int index);
}

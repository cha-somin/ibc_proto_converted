// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/authz/v1beta1/authz.proto

package com.cosmos.authz.v1beta1;

public interface GrantOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmos.authz.v1beta1.Grant)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.google.protobuf.Any authorization = 1 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];</code>
   * @return Whether the authorization field is set.
   */
  boolean hasAuthorization();
  /**
   * <code>.google.protobuf.Any authorization = 1 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];</code>
   * @return The authorization.
   */
  com.google.protobuf.Any getAuthorization();
  /**
   * <code>.google.protobuf.Any authorization = 1 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];</code>
   */
  com.google.protobuf.AnyOrBuilder getAuthorizationOrBuilder();

  /**
   * <pre>
   * time when the grant will expire and will be pruned. If null, then the grant
   * doesn't have a time expiration (other conditions  in `authorization`
   * may apply to invalidate the grant)
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration = 2 [json_name = "expiration", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true];</code>
   * @return Whether the expiration field is set.
   */
  boolean hasExpiration();
  /**
   * <pre>
   * time when the grant will expire and will be pruned. If null, then the grant
   * doesn't have a time expiration (other conditions  in `authorization`
   * may apply to invalidate the grant)
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration = 2 [json_name = "expiration", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true];</code>
   * @return The expiration.
   */
  com.google.protobuf.Timestamp getExpiration();
  /**
   * <pre>
   * time when the grant will expire and will be pruned. If null, then the grant
   * doesn't have a time expiration (other conditions  in `authorization`
   * may apply to invalidate the grant)
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration = 2 [json_name = "expiration", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getExpirationOrBuilder();
}

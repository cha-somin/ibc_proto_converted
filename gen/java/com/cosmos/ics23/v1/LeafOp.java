// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/ics23/v1/proofs.proto

package com.cosmos.ics23.v1;

/**
 * <pre>
 **
 *LeafOp represents the raw key-value data we wish to prove, and
 *must be flexible to represent the internal transformation from
 *the original key-value pairs into the basis hash, for many existing
 *merkle trees.
 *
 *key and value are passed in. So that the signature of this operation is:
 *leafOp(key, value) -&gt; output
 *
 *To process this, first prehash the keys and values if needed (ANY means no hash in this case):
 *hkey = prehashKey(key)
 *hvalue = prehashValue(value)
 *
 *Then combine the bytes, and hash it
 *output = hash(prefix || length(hkey) || hkey || length(hvalue) || hvalue)
 * </pre>
 *
 * Protobuf type {@code cosmos.ics23.v1.LeafOp}
 */
public final class LeafOp extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:cosmos.ics23.v1.LeafOp)
    LeafOpOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LeafOp.newBuilder() to construct.
  private LeafOp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LeafOp() {
    hash_ = 0;
    prehashKey_ = 0;
    prehashValue_ = 0;
    length_ = 0;
    prefix_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LeafOp();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.cosmos.ics23.v1.ProofsProto.internal_static_cosmos_ics23_v1_LeafOp_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.cosmos.ics23.v1.ProofsProto.internal_static_cosmos_ics23_v1_LeafOp_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.cosmos.ics23.v1.LeafOp.class, com.cosmos.ics23.v1.LeafOp.Builder.class);
  }

  public static final int HASH_FIELD_NUMBER = 1;
  private int hash_ = 0;
  /**
   * <code>.cosmos.ics23.v1.HashOp hash = 1 [json_name = "hash"];</code>
   * @return The enum numeric value on the wire for hash.
   */
  @java.lang.Override public int getHashValue() {
    return hash_;
  }
  /**
   * <code>.cosmos.ics23.v1.HashOp hash = 1 [json_name = "hash"];</code>
   * @return The hash.
   */
  @java.lang.Override public com.cosmos.ics23.v1.HashOp getHash() {
    com.cosmos.ics23.v1.HashOp result = com.cosmos.ics23.v1.HashOp.forNumber(hash_);
    return result == null ? com.cosmos.ics23.v1.HashOp.UNRECOGNIZED : result;
  }

  public static final int PREHASH_KEY_FIELD_NUMBER = 2;
  private int prehashKey_ = 0;
  /**
   * <code>.cosmos.ics23.v1.HashOp prehash_key = 2 [json_name = "prehashKey"];</code>
   * @return The enum numeric value on the wire for prehashKey.
   */
  @java.lang.Override public int getPrehashKeyValue() {
    return prehashKey_;
  }
  /**
   * <code>.cosmos.ics23.v1.HashOp prehash_key = 2 [json_name = "prehashKey"];</code>
   * @return The prehashKey.
   */
  @java.lang.Override public com.cosmos.ics23.v1.HashOp getPrehashKey() {
    com.cosmos.ics23.v1.HashOp result = com.cosmos.ics23.v1.HashOp.forNumber(prehashKey_);
    return result == null ? com.cosmos.ics23.v1.HashOp.UNRECOGNIZED : result;
  }

  public static final int PREHASH_VALUE_FIELD_NUMBER = 3;
  private int prehashValue_ = 0;
  /**
   * <code>.cosmos.ics23.v1.HashOp prehash_value = 3 [json_name = "prehashValue"];</code>
   * @return The enum numeric value on the wire for prehashValue.
   */
  @java.lang.Override public int getPrehashValueValue() {
    return prehashValue_;
  }
  /**
   * <code>.cosmos.ics23.v1.HashOp prehash_value = 3 [json_name = "prehashValue"];</code>
   * @return The prehashValue.
   */
  @java.lang.Override public com.cosmos.ics23.v1.HashOp getPrehashValue() {
    com.cosmos.ics23.v1.HashOp result = com.cosmos.ics23.v1.HashOp.forNumber(prehashValue_);
    return result == null ? com.cosmos.ics23.v1.HashOp.UNRECOGNIZED : result;
  }

  public static final int LENGTH_FIELD_NUMBER = 4;
  private int length_ = 0;
  /**
   * <code>.cosmos.ics23.v1.LengthOp length = 4 [json_name = "length"];</code>
   * @return The enum numeric value on the wire for length.
   */
  @java.lang.Override public int getLengthValue() {
    return length_;
  }
  /**
   * <code>.cosmos.ics23.v1.LengthOp length = 4 [json_name = "length"];</code>
   * @return The length.
   */
  @java.lang.Override public com.cosmos.ics23.v1.LengthOp getLength() {
    com.cosmos.ics23.v1.LengthOp result = com.cosmos.ics23.v1.LengthOp.forNumber(length_);
    return result == null ? com.cosmos.ics23.v1.LengthOp.UNRECOGNIZED : result;
  }

  public static final int PREFIX_FIELD_NUMBER = 5;
  private com.google.protobuf.ByteString prefix_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * prefix is a fixed bytes that may optionally be included at the beginning to differentiate
   * a leaf node from an inner node.
   * </pre>
   *
   * <code>bytes prefix = 5 [json_name = "prefix"];</code>
   * @return The prefix.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPrefix() {
    return prefix_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (hash_ != com.cosmos.ics23.v1.HashOp.NO_HASH.getNumber()) {
      output.writeEnum(1, hash_);
    }
    if (prehashKey_ != com.cosmos.ics23.v1.HashOp.NO_HASH.getNumber()) {
      output.writeEnum(2, prehashKey_);
    }
    if (prehashValue_ != com.cosmos.ics23.v1.HashOp.NO_HASH.getNumber()) {
      output.writeEnum(3, prehashValue_);
    }
    if (length_ != com.cosmos.ics23.v1.LengthOp.NO_PREFIX.getNumber()) {
      output.writeEnum(4, length_);
    }
    if (!prefix_.isEmpty()) {
      output.writeBytes(5, prefix_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (hash_ != com.cosmos.ics23.v1.HashOp.NO_HASH.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, hash_);
    }
    if (prehashKey_ != com.cosmos.ics23.v1.HashOp.NO_HASH.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, prehashKey_);
    }
    if (prehashValue_ != com.cosmos.ics23.v1.HashOp.NO_HASH.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, prehashValue_);
    }
    if (length_ != com.cosmos.ics23.v1.LengthOp.NO_PREFIX.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, length_);
    }
    if (!prefix_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(5, prefix_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.cosmos.ics23.v1.LeafOp)) {
      return super.equals(obj);
    }
    com.cosmos.ics23.v1.LeafOp other = (com.cosmos.ics23.v1.LeafOp) obj;

    if (hash_ != other.hash_) return false;
    if (prehashKey_ != other.prehashKey_) return false;
    if (prehashValue_ != other.prehashValue_) return false;
    if (length_ != other.length_) return false;
    if (!getPrefix()
        .equals(other.getPrefix())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + HASH_FIELD_NUMBER;
    hash = (53 * hash) + hash_;
    hash = (37 * hash) + PREHASH_KEY_FIELD_NUMBER;
    hash = (53 * hash) + prehashKey_;
    hash = (37 * hash) + PREHASH_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + prehashValue_;
    hash = (37 * hash) + LENGTH_FIELD_NUMBER;
    hash = (53 * hash) + length_;
    hash = (37 * hash) + PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getPrefix().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.cosmos.ics23.v1.LeafOp parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.ics23.v1.LeafOp parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.ics23.v1.LeafOp parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.ics23.v1.LeafOp parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.ics23.v1.LeafOp parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.ics23.v1.LeafOp parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.ics23.v1.LeafOp parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.cosmos.ics23.v1.LeafOp parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.cosmos.ics23.v1.LeafOp parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.cosmos.ics23.v1.LeafOp parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.cosmos.ics23.v1.LeafOp parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.cosmos.ics23.v1.LeafOp parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.cosmos.ics23.v1.LeafOp prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   **
   *LeafOp represents the raw key-value data we wish to prove, and
   *must be flexible to represent the internal transformation from
   *the original key-value pairs into the basis hash, for many existing
   *merkle trees.
   *
   *key and value are passed in. So that the signature of this operation is:
   *leafOp(key, value) -&gt; output
   *
   *To process this, first prehash the keys and values if needed (ANY means no hash in this case):
   *hkey = prehashKey(key)
   *hvalue = prehashValue(value)
   *
   *Then combine the bytes, and hash it
   *output = hash(prefix || length(hkey) || hkey || length(hvalue) || hvalue)
   * </pre>
   *
   * Protobuf type {@code cosmos.ics23.v1.LeafOp}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:cosmos.ics23.v1.LeafOp)
      com.cosmos.ics23.v1.LeafOpOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cosmos.ics23.v1.ProofsProto.internal_static_cosmos_ics23_v1_LeafOp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cosmos.ics23.v1.ProofsProto.internal_static_cosmos_ics23_v1_LeafOp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cosmos.ics23.v1.LeafOp.class, com.cosmos.ics23.v1.LeafOp.Builder.class);
    }

    // Construct using com.cosmos.ics23.v1.LeafOp.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      hash_ = 0;
      prehashKey_ = 0;
      prehashValue_ = 0;
      length_ = 0;
      prefix_ = com.google.protobuf.ByteString.EMPTY;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.cosmos.ics23.v1.ProofsProto.internal_static_cosmos_ics23_v1_LeafOp_descriptor;
    }

    @java.lang.Override
    public com.cosmos.ics23.v1.LeafOp getDefaultInstanceForType() {
      return com.cosmos.ics23.v1.LeafOp.getDefaultInstance();
    }

    @java.lang.Override
    public com.cosmos.ics23.v1.LeafOp build() {
      com.cosmos.ics23.v1.LeafOp result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.cosmos.ics23.v1.LeafOp buildPartial() {
      com.cosmos.ics23.v1.LeafOp result = new com.cosmos.ics23.v1.LeafOp(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.cosmos.ics23.v1.LeafOp result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.hash_ = hash_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.prehashKey_ = prehashKey_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.prehashValue_ = prehashValue_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.length_ = length_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.prefix_ = prefix_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.cosmos.ics23.v1.LeafOp) {
        return mergeFrom((com.cosmos.ics23.v1.LeafOp)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.cosmos.ics23.v1.LeafOp other) {
      if (other == com.cosmos.ics23.v1.LeafOp.getDefaultInstance()) return this;
      if (other.hash_ != 0) {
        setHashValue(other.getHashValue());
      }
      if (other.prehashKey_ != 0) {
        setPrehashKeyValue(other.getPrehashKeyValue());
      }
      if (other.prehashValue_ != 0) {
        setPrehashValueValue(other.getPrehashValueValue());
      }
      if (other.length_ != 0) {
        setLengthValue(other.getLengthValue());
      }
      if (other.getPrefix() != com.google.protobuf.ByteString.EMPTY) {
        setPrefix(other.getPrefix());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              hash_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              prehashKey_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              prehashValue_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              length_ = input.readEnum();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              prefix_ = input.readBytes();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int hash_ = 0;
    /**
     * <code>.cosmos.ics23.v1.HashOp hash = 1 [json_name = "hash"];</code>
     * @return The enum numeric value on the wire for hash.
     */
    @java.lang.Override public int getHashValue() {
      return hash_;
    }
    /**
     * <code>.cosmos.ics23.v1.HashOp hash = 1 [json_name = "hash"];</code>
     * @param value The enum numeric value on the wire for hash to set.
     * @return This builder for chaining.
     */
    public Builder setHashValue(int value) {
      hash_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.cosmos.ics23.v1.HashOp hash = 1 [json_name = "hash"];</code>
     * @return The hash.
     */
    @java.lang.Override
    public com.cosmos.ics23.v1.HashOp getHash() {
      com.cosmos.ics23.v1.HashOp result = com.cosmos.ics23.v1.HashOp.forNumber(hash_);
      return result == null ? com.cosmos.ics23.v1.HashOp.UNRECOGNIZED : result;
    }
    /**
     * <code>.cosmos.ics23.v1.HashOp hash = 1 [json_name = "hash"];</code>
     * @param value The hash to set.
     * @return This builder for chaining.
     */
    public Builder setHash(com.cosmos.ics23.v1.HashOp value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      hash_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.cosmos.ics23.v1.HashOp hash = 1 [json_name = "hash"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHash() {
      bitField0_ = (bitField0_ & ~0x00000001);
      hash_ = 0;
      onChanged();
      return this;
    }

    private int prehashKey_ = 0;
    /**
     * <code>.cosmos.ics23.v1.HashOp prehash_key = 2 [json_name = "prehashKey"];</code>
     * @return The enum numeric value on the wire for prehashKey.
     */
    @java.lang.Override public int getPrehashKeyValue() {
      return prehashKey_;
    }
    /**
     * <code>.cosmos.ics23.v1.HashOp prehash_key = 2 [json_name = "prehashKey"];</code>
     * @param value The enum numeric value on the wire for prehashKey to set.
     * @return This builder for chaining.
     */
    public Builder setPrehashKeyValue(int value) {
      prehashKey_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.cosmos.ics23.v1.HashOp prehash_key = 2 [json_name = "prehashKey"];</code>
     * @return The prehashKey.
     */
    @java.lang.Override
    public com.cosmos.ics23.v1.HashOp getPrehashKey() {
      com.cosmos.ics23.v1.HashOp result = com.cosmos.ics23.v1.HashOp.forNumber(prehashKey_);
      return result == null ? com.cosmos.ics23.v1.HashOp.UNRECOGNIZED : result;
    }
    /**
     * <code>.cosmos.ics23.v1.HashOp prehash_key = 2 [json_name = "prehashKey"];</code>
     * @param value The prehashKey to set.
     * @return This builder for chaining.
     */
    public Builder setPrehashKey(com.cosmos.ics23.v1.HashOp value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      prehashKey_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.cosmos.ics23.v1.HashOp prehash_key = 2 [json_name = "prehashKey"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPrehashKey() {
      bitField0_ = (bitField0_ & ~0x00000002);
      prehashKey_ = 0;
      onChanged();
      return this;
    }

    private int prehashValue_ = 0;
    /**
     * <code>.cosmos.ics23.v1.HashOp prehash_value = 3 [json_name = "prehashValue"];</code>
     * @return The enum numeric value on the wire for prehashValue.
     */
    @java.lang.Override public int getPrehashValueValue() {
      return prehashValue_;
    }
    /**
     * <code>.cosmos.ics23.v1.HashOp prehash_value = 3 [json_name = "prehashValue"];</code>
     * @param value The enum numeric value on the wire for prehashValue to set.
     * @return This builder for chaining.
     */
    public Builder setPrehashValueValue(int value) {
      prehashValue_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.cosmos.ics23.v1.HashOp prehash_value = 3 [json_name = "prehashValue"];</code>
     * @return The prehashValue.
     */
    @java.lang.Override
    public com.cosmos.ics23.v1.HashOp getPrehashValue() {
      com.cosmos.ics23.v1.HashOp result = com.cosmos.ics23.v1.HashOp.forNumber(prehashValue_);
      return result == null ? com.cosmos.ics23.v1.HashOp.UNRECOGNIZED : result;
    }
    /**
     * <code>.cosmos.ics23.v1.HashOp prehash_value = 3 [json_name = "prehashValue"];</code>
     * @param value The prehashValue to set.
     * @return This builder for chaining.
     */
    public Builder setPrehashValue(com.cosmos.ics23.v1.HashOp value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      prehashValue_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.cosmos.ics23.v1.HashOp prehash_value = 3 [json_name = "prehashValue"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPrehashValue() {
      bitField0_ = (bitField0_ & ~0x00000004);
      prehashValue_ = 0;
      onChanged();
      return this;
    }

    private int length_ = 0;
    /**
     * <code>.cosmos.ics23.v1.LengthOp length = 4 [json_name = "length"];</code>
     * @return The enum numeric value on the wire for length.
     */
    @java.lang.Override public int getLengthValue() {
      return length_;
    }
    /**
     * <code>.cosmos.ics23.v1.LengthOp length = 4 [json_name = "length"];</code>
     * @param value The enum numeric value on the wire for length to set.
     * @return This builder for chaining.
     */
    public Builder setLengthValue(int value) {
      length_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.cosmos.ics23.v1.LengthOp length = 4 [json_name = "length"];</code>
     * @return The length.
     */
    @java.lang.Override
    public com.cosmos.ics23.v1.LengthOp getLength() {
      com.cosmos.ics23.v1.LengthOp result = com.cosmos.ics23.v1.LengthOp.forNumber(length_);
      return result == null ? com.cosmos.ics23.v1.LengthOp.UNRECOGNIZED : result;
    }
    /**
     * <code>.cosmos.ics23.v1.LengthOp length = 4 [json_name = "length"];</code>
     * @param value The length to set.
     * @return This builder for chaining.
     */
    public Builder setLength(com.cosmos.ics23.v1.LengthOp value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      length_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.cosmos.ics23.v1.LengthOp length = 4 [json_name = "length"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLength() {
      bitField0_ = (bitField0_ & ~0x00000008);
      length_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString prefix_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * prefix is a fixed bytes that may optionally be included at the beginning to differentiate
     * a leaf node from an inner node.
     * </pre>
     *
     * <code>bytes prefix = 5 [json_name = "prefix"];</code>
     * @return The prefix.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrefix() {
      return prefix_;
    }
    /**
     * <pre>
     * prefix is a fixed bytes that may optionally be included at the beginning to differentiate
     * a leaf node from an inner node.
     * </pre>
     *
     * <code>bytes prefix = 5 [json_name = "prefix"];</code>
     * @param value The prefix to set.
     * @return This builder for chaining.
     */
    public Builder setPrefix(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      prefix_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * prefix is a fixed bytes that may optionally be included at the beginning to differentiate
     * a leaf node from an inner node.
     * </pre>
     *
     * <code>bytes prefix = 5 [json_name = "prefix"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPrefix() {
      bitField0_ = (bitField0_ & ~0x00000010);
      prefix_ = getDefaultInstance().getPrefix();
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:cosmos.ics23.v1.LeafOp)
  }

  // @@protoc_insertion_point(class_scope:cosmos.ics23.v1.LeafOp)
  private static final com.cosmos.ics23.v1.LeafOp DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.cosmos.ics23.v1.LeafOp();
  }

  public static com.cosmos.ics23.v1.LeafOp getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LeafOp>
      PARSER = new com.google.protobuf.AbstractParser<LeafOp>() {
    @java.lang.Override
    public LeafOp parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<LeafOp> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LeafOp> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.cosmos.ics23.v1.LeafOp getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


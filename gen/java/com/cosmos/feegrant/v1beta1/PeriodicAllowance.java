// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/feegrant/v1beta1/feegrant.proto

package com.cosmos.feegrant.v1beta1;

/**
 * <pre>
 * PeriodicAllowance extends Allowance to allow for both a maximum cap,
 * as well as a limit per time period.
 * </pre>
 *
 * Protobuf type {@code cosmos.feegrant.v1beta1.PeriodicAllowance}
 */
public final class PeriodicAllowance extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:cosmos.feegrant.v1beta1.PeriodicAllowance)
    PeriodicAllowanceOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PeriodicAllowance.newBuilder() to construct.
  private PeriodicAllowance(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PeriodicAllowance() {
    periodSpendLimit_ = java.util.Collections.emptyList();
    periodCanSpend_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PeriodicAllowance();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.cosmos.feegrant.v1beta1.FeegrantProto.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.cosmos.feegrant.v1beta1.FeegrantProto.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.cosmos.feegrant.v1beta1.PeriodicAllowance.class, com.cosmos.feegrant.v1beta1.PeriodicAllowance.Builder.class);
  }

  public static final int BASIC_FIELD_NUMBER = 1;
  private com.cosmos.feegrant.v1beta1.BasicAllowance basic_;
  /**
   * <pre>
   * basic specifies a struct of `BasicAllowance`
   * </pre>
   *
   * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
   * @return Whether the basic field is set.
   */
  @java.lang.Override
  public boolean hasBasic() {
    return basic_ != null;
  }
  /**
   * <pre>
   * basic specifies a struct of `BasicAllowance`
   * </pre>
   *
   * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
   * @return The basic.
   */
  @java.lang.Override
  public com.cosmos.feegrant.v1beta1.BasicAllowance getBasic() {
    return basic_ == null ? com.cosmos.feegrant.v1beta1.BasicAllowance.getDefaultInstance() : basic_;
  }
  /**
   * <pre>
   * basic specifies a struct of `BasicAllowance`
   * </pre>
   *
   * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public com.cosmos.feegrant.v1beta1.BasicAllowanceOrBuilder getBasicOrBuilder() {
    return basic_ == null ? com.cosmos.feegrant.v1beta1.BasicAllowance.getDefaultInstance() : basic_;
  }

  public static final int PERIOD_FIELD_NUMBER = 2;
  private com.google.protobuf.Duration period_;
  /**
   * <pre>
   * period specifies the time duration in which period_spend_limit coins can
   * be spent before that allowance is reset
   * </pre>
   *
   * <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
   * @return Whether the period field is set.
   */
  @java.lang.Override
  public boolean hasPeriod() {
    return period_ != null;
  }
  /**
   * <pre>
   * period specifies the time duration in which period_spend_limit coins can
   * be spent before that allowance is reset
   * </pre>
   *
   * <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
   * @return The period.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getPeriod() {
    return period_ == null ? com.google.protobuf.Duration.getDefaultInstance() : period_;
  }
  /**
   * <pre>
   * period specifies the time duration in which period_spend_limit coins can
   * be spent before that allowance is reset
   * </pre>
   *
   * <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getPeriodOrBuilder() {
    return period_ == null ? com.google.protobuf.Duration.getDefaultInstance() : period_;
  }

  public static final int PERIOD_SPEND_LIMIT_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> periodSpendLimit_;
  /**
   * <pre>
   * period_spend_limit specifies the maximum number of coins that can be spent
   * in the period
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getPeriodSpendLimitList() {
    return periodSpendLimit_;
  }
  /**
   * <pre>
   * period_spend_limit specifies the maximum number of coins that can be spent
   * in the period
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getPeriodSpendLimitOrBuilderList() {
    return periodSpendLimit_;
  }
  /**
   * <pre>
   * period_spend_limit specifies the maximum number of coins that can be spent
   * in the period
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public int getPeriodSpendLimitCount() {
    return periodSpendLimit_.size();
  }
  /**
   * <pre>
   * period_spend_limit specifies the maximum number of coins that can be spent
   * in the period
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getPeriodSpendLimit(int index) {
    return periodSpendLimit_.get(index);
  }
  /**
   * <pre>
   * period_spend_limit specifies the maximum number of coins that can be spent
   * in the period
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getPeriodSpendLimitOrBuilder(
      int index) {
    return periodSpendLimit_.get(index);
  }

  public static final int PERIOD_CAN_SPEND_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> periodCanSpend_;
  /**
   * <pre>
   * period_can_spend is the number of coins left to be spent before the period_reset time
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getPeriodCanSpendList() {
    return periodCanSpend_;
  }
  /**
   * <pre>
   * period_can_spend is the number of coins left to be spent before the period_reset time
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getPeriodCanSpendOrBuilderList() {
    return periodCanSpend_;
  }
  /**
   * <pre>
   * period_can_spend is the number of coins left to be spent before the period_reset time
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public int getPeriodCanSpendCount() {
    return periodCanSpend_.size();
  }
  /**
   * <pre>
   * period_can_spend is the number of coins left to be spent before the period_reset time
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.Coin getPeriodCanSpend(int index) {
    return periodCanSpend_.get(index);
  }
  /**
   * <pre>
   * period_can_spend is the number of coins left to be spent before the period_reset time
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getPeriodCanSpendOrBuilder(
      int index) {
    return periodCanSpend_.get(index);
  }

  public static final int PERIOD_RESET_FIELD_NUMBER = 5;
  private com.google.protobuf.Timestamp periodReset_;
  /**
   * <pre>
   * period_reset is the time at which this period resets and a new one begins,
   * it is calculated from the start time of the first transaction after the
   * last period ended
   * </pre>
   *
   * <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
   * @return Whether the periodReset field is set.
   */
  @java.lang.Override
  public boolean hasPeriodReset() {
    return periodReset_ != null;
  }
  /**
   * <pre>
   * period_reset is the time at which this period resets and a new one begins,
   * it is calculated from the start time of the first transaction after the
   * last period ended
   * </pre>
   *
   * <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
   * @return The periodReset.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getPeriodReset() {
    return periodReset_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : periodReset_;
  }
  /**
   * <pre>
   * period_reset is the time at which this period resets and a new one begins,
   * it is calculated from the start time of the first transaction after the
   * last period ended
   * </pre>
   *
   * <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getPeriodResetOrBuilder() {
    return periodReset_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : periodReset_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (basic_ != null) {
      output.writeMessage(1, getBasic());
    }
    if (period_ != null) {
      output.writeMessage(2, getPeriod());
    }
    for (int i = 0; i < periodSpendLimit_.size(); i++) {
      output.writeMessage(3, periodSpendLimit_.get(i));
    }
    for (int i = 0; i < periodCanSpend_.size(); i++) {
      output.writeMessage(4, periodCanSpend_.get(i));
    }
    if (periodReset_ != null) {
      output.writeMessage(5, getPeriodReset());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (basic_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBasic());
    }
    if (period_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getPeriod());
    }
    for (int i = 0; i < periodSpendLimit_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, periodSpendLimit_.get(i));
    }
    for (int i = 0; i < periodCanSpend_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, periodCanSpend_.get(i));
    }
    if (periodReset_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getPeriodReset());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.cosmos.feegrant.v1beta1.PeriodicAllowance)) {
      return super.equals(obj);
    }
    com.cosmos.feegrant.v1beta1.PeriodicAllowance other = (com.cosmos.feegrant.v1beta1.PeriodicAllowance) obj;

    if (hasBasic() != other.hasBasic()) return false;
    if (hasBasic()) {
      if (!getBasic()
          .equals(other.getBasic())) return false;
    }
    if (hasPeriod() != other.hasPeriod()) return false;
    if (hasPeriod()) {
      if (!getPeriod()
          .equals(other.getPeriod())) return false;
    }
    if (!getPeriodSpendLimitList()
        .equals(other.getPeriodSpendLimitList())) return false;
    if (!getPeriodCanSpendList()
        .equals(other.getPeriodCanSpendList())) return false;
    if (hasPeriodReset() != other.hasPeriodReset()) return false;
    if (hasPeriodReset()) {
      if (!getPeriodReset()
          .equals(other.getPeriodReset())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBasic()) {
      hash = (37 * hash) + BASIC_FIELD_NUMBER;
      hash = (53 * hash) + getBasic().hashCode();
    }
    if (hasPeriod()) {
      hash = (37 * hash) + PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getPeriod().hashCode();
    }
    if (getPeriodSpendLimitCount() > 0) {
      hash = (37 * hash) + PERIOD_SPEND_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getPeriodSpendLimitList().hashCode();
    }
    if (getPeriodCanSpendCount() > 0) {
      hash = (37 * hash) + PERIOD_CAN_SPEND_FIELD_NUMBER;
      hash = (53 * hash) + getPeriodCanSpendList().hashCode();
    }
    if (hasPeriodReset()) {
      hash = (37 * hash) + PERIOD_RESET_FIELD_NUMBER;
      hash = (53 * hash) + getPeriodReset().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.cosmos.feegrant.v1beta1.PeriodicAllowance prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * PeriodicAllowance extends Allowance to allow for both a maximum cap,
   * as well as a limit per time period.
   * </pre>
   *
   * Protobuf type {@code cosmos.feegrant.v1beta1.PeriodicAllowance}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:cosmos.feegrant.v1beta1.PeriodicAllowance)
      com.cosmos.feegrant.v1beta1.PeriodicAllowanceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cosmos.feegrant.v1beta1.FeegrantProto.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cosmos.feegrant.v1beta1.FeegrantProto.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cosmos.feegrant.v1beta1.PeriodicAllowance.class, com.cosmos.feegrant.v1beta1.PeriodicAllowance.Builder.class);
    }

    // Construct using com.cosmos.feegrant.v1beta1.PeriodicAllowance.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      basic_ = null;
      if (basicBuilder_ != null) {
        basicBuilder_.dispose();
        basicBuilder_ = null;
      }
      period_ = null;
      if (periodBuilder_ != null) {
        periodBuilder_.dispose();
        periodBuilder_ = null;
      }
      if (periodSpendLimitBuilder_ == null) {
        periodSpendLimit_ = java.util.Collections.emptyList();
      } else {
        periodSpendLimit_ = null;
        periodSpendLimitBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (periodCanSpendBuilder_ == null) {
        periodCanSpend_ = java.util.Collections.emptyList();
      } else {
        periodCanSpend_ = null;
        periodCanSpendBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      periodReset_ = null;
      if (periodResetBuilder_ != null) {
        periodResetBuilder_.dispose();
        periodResetBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.cosmos.feegrant.v1beta1.FeegrantProto.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor;
    }

    @java.lang.Override
    public com.cosmos.feegrant.v1beta1.PeriodicAllowance getDefaultInstanceForType() {
      return com.cosmos.feegrant.v1beta1.PeriodicAllowance.getDefaultInstance();
    }

    @java.lang.Override
    public com.cosmos.feegrant.v1beta1.PeriodicAllowance build() {
      com.cosmos.feegrant.v1beta1.PeriodicAllowance result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.cosmos.feegrant.v1beta1.PeriodicAllowance buildPartial() {
      com.cosmos.feegrant.v1beta1.PeriodicAllowance result = new com.cosmos.feegrant.v1beta1.PeriodicAllowance(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.cosmos.feegrant.v1beta1.PeriodicAllowance result) {
      if (periodSpendLimitBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          periodSpendLimit_ = java.util.Collections.unmodifiableList(periodSpendLimit_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.periodSpendLimit_ = periodSpendLimit_;
      } else {
        result.periodSpendLimit_ = periodSpendLimitBuilder_.build();
      }
      if (periodCanSpendBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          periodCanSpend_ = java.util.Collections.unmodifiableList(periodCanSpend_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.periodCanSpend_ = periodCanSpend_;
      } else {
        result.periodCanSpend_ = periodCanSpendBuilder_.build();
      }
    }

    private void buildPartial0(com.cosmos.feegrant.v1beta1.PeriodicAllowance result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.basic_ = basicBuilder_ == null
            ? basic_
            : basicBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.period_ = periodBuilder_ == null
            ? period_
            : periodBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.periodReset_ = periodResetBuilder_ == null
            ? periodReset_
            : periodResetBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.cosmos.feegrant.v1beta1.PeriodicAllowance) {
        return mergeFrom((com.cosmos.feegrant.v1beta1.PeriodicAllowance)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.cosmos.feegrant.v1beta1.PeriodicAllowance other) {
      if (other == com.cosmos.feegrant.v1beta1.PeriodicAllowance.getDefaultInstance()) return this;
      if (other.hasBasic()) {
        mergeBasic(other.getBasic());
      }
      if (other.hasPeriod()) {
        mergePeriod(other.getPeriod());
      }
      if (periodSpendLimitBuilder_ == null) {
        if (!other.periodSpendLimit_.isEmpty()) {
          if (periodSpendLimit_.isEmpty()) {
            periodSpendLimit_ = other.periodSpendLimit_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePeriodSpendLimitIsMutable();
            periodSpendLimit_.addAll(other.periodSpendLimit_);
          }
          onChanged();
        }
      } else {
        if (!other.periodSpendLimit_.isEmpty()) {
          if (periodSpendLimitBuilder_.isEmpty()) {
            periodSpendLimitBuilder_.dispose();
            periodSpendLimitBuilder_ = null;
            periodSpendLimit_ = other.periodSpendLimit_;
            bitField0_ = (bitField0_ & ~0x00000004);
            periodSpendLimitBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPeriodSpendLimitFieldBuilder() : null;
          } else {
            periodSpendLimitBuilder_.addAllMessages(other.periodSpendLimit_);
          }
        }
      }
      if (periodCanSpendBuilder_ == null) {
        if (!other.periodCanSpend_.isEmpty()) {
          if (periodCanSpend_.isEmpty()) {
            periodCanSpend_ = other.periodCanSpend_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePeriodCanSpendIsMutable();
            periodCanSpend_.addAll(other.periodCanSpend_);
          }
          onChanged();
        }
      } else {
        if (!other.periodCanSpend_.isEmpty()) {
          if (periodCanSpendBuilder_.isEmpty()) {
            periodCanSpendBuilder_.dispose();
            periodCanSpendBuilder_ = null;
            periodCanSpend_ = other.periodCanSpend_;
            bitField0_ = (bitField0_ & ~0x00000008);
            periodCanSpendBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPeriodCanSpendFieldBuilder() : null;
          } else {
            periodCanSpendBuilder_.addAllMessages(other.periodCanSpend_);
          }
        }
      }
      if (other.hasPeriodReset()) {
        mergePeriodReset(other.getPeriodReset());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getBasicFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getPeriodFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (periodSpendLimitBuilder_ == null) {
                ensurePeriodSpendLimitIsMutable();
                periodSpendLimit_.add(m);
              } else {
                periodSpendLimitBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (periodCanSpendBuilder_ == null) {
                ensurePeriodCanSpendIsMutable();
                periodCanSpend_.add(m);
              } else {
                periodCanSpendBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getPeriodResetFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.cosmos.feegrant.v1beta1.BasicAllowance basic_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.feegrant.v1beta1.BasicAllowance, com.cosmos.feegrant.v1beta1.BasicAllowance.Builder, com.cosmos.feegrant.v1beta1.BasicAllowanceOrBuilder> basicBuilder_;
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     * @return Whether the basic field is set.
     */
    public boolean hasBasic() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     * @return The basic.
     */
    public com.cosmos.feegrant.v1beta1.BasicAllowance getBasic() {
      if (basicBuilder_ == null) {
        return basic_ == null ? com.cosmos.feegrant.v1beta1.BasicAllowance.getDefaultInstance() : basic_;
      } else {
        return basicBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     */
    public Builder setBasic(com.cosmos.feegrant.v1beta1.BasicAllowance value) {
      if (basicBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        basic_ = value;
      } else {
        basicBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     */
    public Builder setBasic(
        com.cosmos.feegrant.v1beta1.BasicAllowance.Builder builderForValue) {
      if (basicBuilder_ == null) {
        basic_ = builderForValue.build();
      } else {
        basicBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     */
    public Builder mergeBasic(com.cosmos.feegrant.v1beta1.BasicAllowance value) {
      if (basicBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          basic_ != null &&
          basic_ != com.cosmos.feegrant.v1beta1.BasicAllowance.getDefaultInstance()) {
          getBasicBuilder().mergeFrom(value);
        } else {
          basic_ = value;
        }
      } else {
        basicBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     */
    public Builder clearBasic() {
      bitField0_ = (bitField0_ & ~0x00000001);
      basic_ = null;
      if (basicBuilder_ != null) {
        basicBuilder_.dispose();
        basicBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     */
    public com.cosmos.feegrant.v1beta1.BasicAllowance.Builder getBasicBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getBasicFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     */
    public com.cosmos.feegrant.v1beta1.BasicAllowanceOrBuilder getBasicOrBuilder() {
      if (basicBuilder_ != null) {
        return basicBuilder_.getMessageOrBuilder();
      } else {
        return basic_ == null ?
            com.cosmos.feegrant.v1beta1.BasicAllowance.getDefaultInstance() : basic_;
      }
    }
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.cosmos.feegrant.v1beta1.BasicAllowance, com.cosmos.feegrant.v1beta1.BasicAllowance.Builder, com.cosmos.feegrant.v1beta1.BasicAllowanceOrBuilder> 
        getBasicFieldBuilder() {
      if (basicBuilder_ == null) {
        basicBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.cosmos.feegrant.v1beta1.BasicAllowance, com.cosmos.feegrant.v1beta1.BasicAllowance.Builder, com.cosmos.feegrant.v1beta1.BasicAllowanceOrBuilder>(
                getBasic(),
                getParentForChildren(),
                isClean());
        basic_ = null;
      }
      return basicBuilder_;
    }

    private com.google.protobuf.Duration period_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> periodBuilder_;
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     * @return Whether the period field is set.
     */
    public boolean hasPeriod() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     * @return The period.
     */
    public com.google.protobuf.Duration getPeriod() {
      if (periodBuilder_ == null) {
        return period_ == null ? com.google.protobuf.Duration.getDefaultInstance() : period_;
      } else {
        return periodBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder setPeriod(com.google.protobuf.Duration value) {
      if (periodBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        period_ = value;
      } else {
        periodBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder setPeriod(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (periodBuilder_ == null) {
        period_ = builderForValue.build();
      } else {
        periodBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder mergePeriod(com.google.protobuf.Duration value) {
      if (periodBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          period_ != null &&
          period_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getPeriodBuilder().mergeFrom(value);
        } else {
          period_ = value;
        }
      } else {
        periodBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder clearPeriod() {
      bitField0_ = (bitField0_ & ~0x00000002);
      period_ = null;
      if (periodBuilder_ != null) {
        periodBuilder_.dispose();
        periodBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public com.google.protobuf.Duration.Builder getPeriodBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getPeriodFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public com.google.protobuf.DurationOrBuilder getPeriodOrBuilder() {
      if (periodBuilder_ != null) {
        return periodBuilder_.getMessageOrBuilder();
      } else {
        return period_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : period_;
      }
    }
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getPeriodFieldBuilder() {
      if (periodBuilder_ == null) {
        periodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getPeriod(),
                getParentForChildren(),
                isClean());
        period_ = null;
      }
      return periodBuilder_;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> periodSpendLimit_ =
      java.util.Collections.emptyList();
    private void ensurePeriodSpendLimitIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        periodSpendLimit_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(periodSpendLimit_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> periodSpendLimitBuilder_;

    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getPeriodSpendLimitList() {
      if (periodSpendLimitBuilder_ == null) {
        return java.util.Collections.unmodifiableList(periodSpendLimit_);
      } else {
        return periodSpendLimitBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public int getPeriodSpendLimitCount() {
      if (periodSpendLimitBuilder_ == null) {
        return periodSpendLimit_.size();
      } else {
        return periodSpendLimitBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public com.cosmos.base.v1beta1.Coin getPeriodSpendLimit(int index) {
      if (periodSpendLimitBuilder_ == null) {
        return periodSpendLimit_.get(index);
      } else {
        return periodSpendLimitBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder setPeriodSpendLimit(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (periodSpendLimitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePeriodSpendLimitIsMutable();
        periodSpendLimit_.set(index, value);
        onChanged();
      } else {
        periodSpendLimitBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder setPeriodSpendLimit(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (periodSpendLimitBuilder_ == null) {
        ensurePeriodSpendLimitIsMutable();
        periodSpendLimit_.set(index, builderForValue.build());
        onChanged();
      } else {
        periodSpendLimitBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder addPeriodSpendLimit(com.cosmos.base.v1beta1.Coin value) {
      if (periodSpendLimitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePeriodSpendLimitIsMutable();
        periodSpendLimit_.add(value);
        onChanged();
      } else {
        periodSpendLimitBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder addPeriodSpendLimit(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (periodSpendLimitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePeriodSpendLimitIsMutable();
        periodSpendLimit_.add(index, value);
        onChanged();
      } else {
        periodSpendLimitBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder addPeriodSpendLimit(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (periodSpendLimitBuilder_ == null) {
        ensurePeriodSpendLimitIsMutable();
        periodSpendLimit_.add(builderForValue.build());
        onChanged();
      } else {
        periodSpendLimitBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder addPeriodSpendLimit(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (periodSpendLimitBuilder_ == null) {
        ensurePeriodSpendLimitIsMutable();
        periodSpendLimit_.add(index, builderForValue.build());
        onChanged();
      } else {
        periodSpendLimitBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder addAllPeriodSpendLimit(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (periodSpendLimitBuilder_ == null) {
        ensurePeriodSpendLimitIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, periodSpendLimit_);
        onChanged();
      } else {
        periodSpendLimitBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder clearPeriodSpendLimit() {
      if (periodSpendLimitBuilder_ == null) {
        periodSpendLimit_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        periodSpendLimitBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder removePeriodSpendLimit(int index) {
      if (periodSpendLimitBuilder_ == null) {
        ensurePeriodSpendLimitIsMutable();
        periodSpendLimit_.remove(index);
        onChanged();
      } else {
        periodSpendLimitBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getPeriodSpendLimitBuilder(
        int index) {
      return getPeriodSpendLimitFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getPeriodSpendLimitOrBuilder(
        int index) {
      if (periodSpendLimitBuilder_ == null) {
        return periodSpendLimit_.get(index);  } else {
        return periodSpendLimitBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getPeriodSpendLimitOrBuilderList() {
      if (periodSpendLimitBuilder_ != null) {
        return periodSpendLimitBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(periodSpendLimit_);
      }
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addPeriodSpendLimitBuilder() {
      return getPeriodSpendLimitFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addPeriodSpendLimitBuilder(
        int index) {
      return getPeriodSpendLimitFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getPeriodSpendLimitBuilderList() {
      return getPeriodSpendLimitFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getPeriodSpendLimitFieldBuilder() {
      if (periodSpendLimitBuilder_ == null) {
        periodSpendLimitBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                periodSpendLimit_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        periodSpendLimit_ = null;
      }
      return periodSpendLimitBuilder_;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> periodCanSpend_ =
      java.util.Collections.emptyList();
    private void ensurePeriodCanSpendIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        periodCanSpend_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(periodCanSpend_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> periodCanSpendBuilder_;

    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getPeriodCanSpendList() {
      if (periodCanSpendBuilder_ == null) {
        return java.util.Collections.unmodifiableList(periodCanSpend_);
      } else {
        return periodCanSpendBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public int getPeriodCanSpendCount() {
      if (periodCanSpendBuilder_ == null) {
        return periodCanSpend_.size();
      } else {
        return periodCanSpendBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public com.cosmos.base.v1beta1.Coin getPeriodCanSpend(int index) {
      if (periodCanSpendBuilder_ == null) {
        return periodCanSpend_.get(index);
      } else {
        return periodCanSpendBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder setPeriodCanSpend(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (periodCanSpendBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePeriodCanSpendIsMutable();
        periodCanSpend_.set(index, value);
        onChanged();
      } else {
        periodCanSpendBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder setPeriodCanSpend(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (periodCanSpendBuilder_ == null) {
        ensurePeriodCanSpendIsMutable();
        periodCanSpend_.set(index, builderForValue.build());
        onChanged();
      } else {
        periodCanSpendBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder addPeriodCanSpend(com.cosmos.base.v1beta1.Coin value) {
      if (periodCanSpendBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePeriodCanSpendIsMutable();
        periodCanSpend_.add(value);
        onChanged();
      } else {
        periodCanSpendBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder addPeriodCanSpend(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (periodCanSpendBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePeriodCanSpendIsMutable();
        periodCanSpend_.add(index, value);
        onChanged();
      } else {
        periodCanSpendBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder addPeriodCanSpend(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (periodCanSpendBuilder_ == null) {
        ensurePeriodCanSpendIsMutable();
        periodCanSpend_.add(builderForValue.build());
        onChanged();
      } else {
        periodCanSpendBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder addPeriodCanSpend(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (periodCanSpendBuilder_ == null) {
        ensurePeriodCanSpendIsMutable();
        periodCanSpend_.add(index, builderForValue.build());
        onChanged();
      } else {
        periodCanSpendBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder addAllPeriodCanSpend(
        java.lang.Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (periodCanSpendBuilder_ == null) {
        ensurePeriodCanSpendIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, periodCanSpend_);
        onChanged();
      } else {
        periodCanSpendBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder clearPeriodCanSpend() {
      if (periodCanSpendBuilder_ == null) {
        periodCanSpend_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        periodCanSpendBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public Builder removePeriodCanSpend(int index) {
      if (periodCanSpendBuilder_ == null) {
        ensurePeriodCanSpendIsMutable();
        periodCanSpend_.remove(index);
        onChanged();
      } else {
        periodCanSpendBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getPeriodCanSpendBuilder(
        int index) {
      return getPeriodCanSpendFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getPeriodCanSpendOrBuilder(
        int index) {
      if (periodCanSpendBuilder_ == null) {
        return periodCanSpend_.get(index);  } else {
        return periodCanSpendBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getPeriodCanSpendOrBuilderList() {
      if (periodCanSpendBuilder_ != null) {
        return periodCanSpendBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(periodCanSpend_);
      }
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addPeriodCanSpendBuilder() {
      return getPeriodCanSpendFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addPeriodCanSpendBuilder(
        int index) {
      return getPeriodCanSpendFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getPeriodCanSpendBuilderList() {
      return getPeriodCanSpendFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getPeriodCanSpendFieldBuilder() {
      if (periodCanSpendBuilder_ == null) {
        periodCanSpendBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                periodCanSpend_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        periodCanSpend_ = null;
      }
      return periodCanSpendBuilder_;
    }

    private com.google.protobuf.Timestamp periodReset_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> periodResetBuilder_;
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     * @return Whether the periodReset field is set.
     */
    public boolean hasPeriodReset() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     * @return The periodReset.
     */
    public com.google.protobuf.Timestamp getPeriodReset() {
      if (periodResetBuilder_ == null) {
        return periodReset_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : periodReset_;
      } else {
        return periodResetBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder setPeriodReset(com.google.protobuf.Timestamp value) {
      if (periodResetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        periodReset_ = value;
      } else {
        periodResetBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder setPeriodReset(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (periodResetBuilder_ == null) {
        periodReset_ = builderForValue.build();
      } else {
        periodResetBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder mergePeriodReset(com.google.protobuf.Timestamp value) {
      if (periodResetBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          periodReset_ != null &&
          periodReset_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getPeriodResetBuilder().mergeFrom(value);
        } else {
          periodReset_ = value;
        }
      } else {
        periodResetBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder clearPeriodReset() {
      bitField0_ = (bitField0_ & ~0x00000010);
      periodReset_ = null;
      if (periodResetBuilder_ != null) {
        periodResetBuilder_.dispose();
        periodResetBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     */
    public com.google.protobuf.Timestamp.Builder getPeriodResetBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getPeriodResetFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getPeriodResetOrBuilder() {
      if (periodResetBuilder_ != null) {
        return periodResetBuilder_.getMessageOrBuilder();
      } else {
        return periodReset_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : periodReset_;
      }
    }
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getPeriodResetFieldBuilder() {
      if (periodResetBuilder_ == null) {
        periodResetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getPeriodReset(),
                getParentForChildren(),
                isClean());
        periodReset_ = null;
      }
      return periodResetBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:cosmos.feegrant.v1beta1.PeriodicAllowance)
  }

  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.PeriodicAllowance)
  private static final com.cosmos.feegrant.v1beta1.PeriodicAllowance DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.cosmos.feegrant.v1beta1.PeriodicAllowance();
  }

  public static com.cosmos.feegrant.v1beta1.PeriodicAllowance getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PeriodicAllowance>
      PARSER = new com.google.protobuf.AbstractParser<PeriodicAllowance>() {
    @java.lang.Override
    public PeriodicAllowance parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PeriodicAllowance> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PeriodicAllowance> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.cosmos.feegrant.v1beta1.PeriodicAllowance getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


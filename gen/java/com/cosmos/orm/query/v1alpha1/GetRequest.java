// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/orm/query/v1alpha1/query.proto

package com.cosmos.orm.query.v1alpha1;

/**
 * <pre>
 * GetRequest is the Query/Get request type.
 * </pre>
 *
 * Protobuf type {@code cosmos.orm.query.v1alpha1.GetRequest}
 */
public final class GetRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:cosmos.orm.query.v1alpha1.GetRequest)
    GetRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GetRequest.newBuilder() to construct.
  private GetRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GetRequest() {
    messageName_ = "";
    index_ = "";
    values_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GetRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.cosmos.orm.query.v1alpha1.QueryProto.internal_static_cosmos_orm_query_v1alpha1_GetRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.cosmos.orm.query.v1alpha1.QueryProto.internal_static_cosmos_orm_query_v1alpha1_GetRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.cosmos.orm.query.v1alpha1.GetRequest.class, com.cosmos.orm.query.v1alpha1.GetRequest.Builder.class);
  }

  public static final int MESSAGE_NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object messageName_ = "";
  /**
   * <pre>
   * message_name is the fully-qualified message name of the ORM table being queried.
   * </pre>
   *
   * <code>string message_name = 1 [json_name = "messageName"];</code>
   * @return The messageName.
   */
  @java.lang.Override
  public java.lang.String getMessageName() {
    java.lang.Object ref = messageName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      messageName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * message_name is the fully-qualified message name of the ORM table being queried.
   * </pre>
   *
   * <code>string message_name = 1 [json_name = "messageName"];</code>
   * @return The bytes for messageName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMessageNameBytes() {
    java.lang.Object ref = messageName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      messageName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INDEX_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object index_ = "";
  /**
   * <pre>
   * index is the index fields expression used in orm definitions. If it
   * is empty, the table's primary key is assumed. If it is non-empty, it must
   * refer to an unique index.
   * </pre>
   *
   * <code>string index = 2 [json_name = "index"];</code>
   * @return The index.
   */
  @java.lang.Override
  public java.lang.String getIndex() {
    java.lang.Object ref = index_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      index_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * index is the index fields expression used in orm definitions. If it
   * is empty, the table's primary key is assumed. If it is non-empty, it must
   * refer to an unique index.
   * </pre>
   *
   * <code>string index = 2 [json_name = "index"];</code>
   * @return The bytes for index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIndexBytes() {
    java.lang.Object ref = index_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      index_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VALUES_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.orm.query.v1alpha1.IndexValue> values_;
  /**
   * <pre>
   * values are the values of the fields corresponding to the requested index.
   * There must be as many values provided as there are fields in the index and
   * these values must correspond to the index field types.
   * </pre>
   *
   * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.orm.query.v1alpha1.IndexValue> getValuesList() {
    return values_;
  }
  /**
   * <pre>
   * values are the values of the fields corresponding to the requested index.
   * There must be as many values provided as there are fields in the index and
   * these values must correspond to the index field types.
   * </pre>
   *
   * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.orm.query.v1alpha1.IndexValueOrBuilder> 
      getValuesOrBuilderList() {
    return values_;
  }
  /**
   * <pre>
   * values are the values of the fields corresponding to the requested index.
   * There must be as many values provided as there are fields in the index and
   * these values must correspond to the index field types.
   * </pre>
   *
   * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
   */
  @java.lang.Override
  public int getValuesCount() {
    return values_.size();
  }
  /**
   * <pre>
   * values are the values of the fields corresponding to the requested index.
   * There must be as many values provided as there are fields in the index and
   * these values must correspond to the index field types.
   * </pre>
   *
   * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
   */
  @java.lang.Override
  public com.cosmos.orm.query.v1alpha1.IndexValue getValues(int index) {
    return values_.get(index);
  }
  /**
   * <pre>
   * values are the values of the fields corresponding to the requested index.
   * There must be as many values provided as there are fields in the index and
   * these values must correspond to the index field types.
   * </pre>
   *
   * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
   */
  @java.lang.Override
  public com.cosmos.orm.query.v1alpha1.IndexValueOrBuilder getValuesOrBuilder(
      int index) {
    return values_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(messageName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, messageName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(index_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, index_);
    }
    for (int i = 0; i < values_.size(); i++) {
      output.writeMessage(3, values_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(messageName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, messageName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(index_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, index_);
    }
    for (int i = 0; i < values_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, values_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.cosmos.orm.query.v1alpha1.GetRequest)) {
      return super.equals(obj);
    }
    com.cosmos.orm.query.v1alpha1.GetRequest other = (com.cosmos.orm.query.v1alpha1.GetRequest) obj;

    if (!getMessageName()
        .equals(other.getMessageName())) return false;
    if (!getIndex()
        .equals(other.getIndex())) return false;
    if (!getValuesList()
        .equals(other.getValuesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MESSAGE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getMessageName().hashCode();
    hash = (37 * hash) + INDEX_FIELD_NUMBER;
    hash = (53 * hash) + getIndex().hashCode();
    if (getValuesCount() > 0) {
      hash = (37 * hash) + VALUES_FIELD_NUMBER;
      hash = (53 * hash) + getValuesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.cosmos.orm.query.v1alpha1.GetRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.orm.query.v1alpha1.GetRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.orm.query.v1alpha1.GetRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.orm.query.v1alpha1.GetRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.orm.query.v1alpha1.GetRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.orm.query.v1alpha1.GetRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.orm.query.v1alpha1.GetRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.cosmos.orm.query.v1alpha1.GetRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.cosmos.orm.query.v1alpha1.GetRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.cosmos.orm.query.v1alpha1.GetRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.cosmos.orm.query.v1alpha1.GetRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.cosmos.orm.query.v1alpha1.GetRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.cosmos.orm.query.v1alpha1.GetRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * GetRequest is the Query/Get request type.
   * </pre>
   *
   * Protobuf type {@code cosmos.orm.query.v1alpha1.GetRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:cosmos.orm.query.v1alpha1.GetRequest)
      com.cosmos.orm.query.v1alpha1.GetRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cosmos.orm.query.v1alpha1.QueryProto.internal_static_cosmos_orm_query_v1alpha1_GetRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cosmos.orm.query.v1alpha1.QueryProto.internal_static_cosmos_orm_query_v1alpha1_GetRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cosmos.orm.query.v1alpha1.GetRequest.class, com.cosmos.orm.query.v1alpha1.GetRequest.Builder.class);
    }

    // Construct using com.cosmos.orm.query.v1alpha1.GetRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      messageName_ = "";
      index_ = "";
      if (valuesBuilder_ == null) {
        values_ = java.util.Collections.emptyList();
      } else {
        values_ = null;
        valuesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.cosmos.orm.query.v1alpha1.QueryProto.internal_static_cosmos_orm_query_v1alpha1_GetRequest_descriptor;
    }

    @java.lang.Override
    public com.cosmos.orm.query.v1alpha1.GetRequest getDefaultInstanceForType() {
      return com.cosmos.orm.query.v1alpha1.GetRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.cosmos.orm.query.v1alpha1.GetRequest build() {
      com.cosmos.orm.query.v1alpha1.GetRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.cosmos.orm.query.v1alpha1.GetRequest buildPartial() {
      com.cosmos.orm.query.v1alpha1.GetRequest result = new com.cosmos.orm.query.v1alpha1.GetRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.cosmos.orm.query.v1alpha1.GetRequest result) {
      if (valuesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          values_ = java.util.Collections.unmodifiableList(values_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.values_ = values_;
      } else {
        result.values_ = valuesBuilder_.build();
      }
    }

    private void buildPartial0(com.cosmos.orm.query.v1alpha1.GetRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.messageName_ = messageName_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.index_ = index_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.cosmos.orm.query.v1alpha1.GetRequest) {
        return mergeFrom((com.cosmos.orm.query.v1alpha1.GetRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.cosmos.orm.query.v1alpha1.GetRequest other) {
      if (other == com.cosmos.orm.query.v1alpha1.GetRequest.getDefaultInstance()) return this;
      if (!other.getMessageName().isEmpty()) {
        messageName_ = other.messageName_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getIndex().isEmpty()) {
        index_ = other.index_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (valuesBuilder_ == null) {
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
      } else {
        if (!other.values_.isEmpty()) {
          if (valuesBuilder_.isEmpty()) {
            valuesBuilder_.dispose();
            valuesBuilder_ = null;
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000004);
            valuesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getValuesFieldBuilder() : null;
          } else {
            valuesBuilder_.addAllMessages(other.values_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              messageName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              index_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.cosmos.orm.query.v1alpha1.IndexValue m =
                  input.readMessage(
                      com.cosmos.orm.query.v1alpha1.IndexValue.parser(),
                      extensionRegistry);
              if (valuesBuilder_ == null) {
                ensureValuesIsMutable();
                values_.add(m);
              } else {
                valuesBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object messageName_ = "";
    /**
     * <pre>
     * message_name is the fully-qualified message name of the ORM table being queried.
     * </pre>
     *
     * <code>string message_name = 1 [json_name = "messageName"];</code>
     * @return The messageName.
     */
    public java.lang.String getMessageName() {
      java.lang.Object ref = messageName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        messageName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * message_name is the fully-qualified message name of the ORM table being queried.
     * </pre>
     *
     * <code>string message_name = 1 [json_name = "messageName"];</code>
     * @return The bytes for messageName.
     */
    public com.google.protobuf.ByteString
        getMessageNameBytes() {
      java.lang.Object ref = messageName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        messageName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * message_name is the fully-qualified message name of the ORM table being queried.
     * </pre>
     *
     * <code>string message_name = 1 [json_name = "messageName"];</code>
     * @param value The messageName to set.
     * @return This builder for chaining.
     */
    public Builder setMessageName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      messageName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * message_name is the fully-qualified message name of the ORM table being queried.
     * </pre>
     *
     * <code>string message_name = 1 [json_name = "messageName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMessageName() {
      messageName_ = getDefaultInstance().getMessageName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * message_name is the fully-qualified message name of the ORM table being queried.
     * </pre>
     *
     * <code>string message_name = 1 [json_name = "messageName"];</code>
     * @param value The bytes for messageName to set.
     * @return This builder for chaining.
     */
    public Builder setMessageNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      messageName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object index_ = "";
    /**
     * <pre>
     * index is the index fields expression used in orm definitions. If it
     * is empty, the table's primary key is assumed. If it is non-empty, it must
     * refer to an unique index.
     * </pre>
     *
     * <code>string index = 2 [json_name = "index"];</code>
     * @return The index.
     */
    public java.lang.String getIndex() {
      java.lang.Object ref = index_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        index_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * index is the index fields expression used in orm definitions. If it
     * is empty, the table's primary key is assumed. If it is non-empty, it must
     * refer to an unique index.
     * </pre>
     *
     * <code>string index = 2 [json_name = "index"];</code>
     * @return The bytes for index.
     */
    public com.google.protobuf.ByteString
        getIndexBytes() {
      java.lang.Object ref = index_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        index_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * index is the index fields expression used in orm definitions. If it
     * is empty, the table's primary key is assumed. If it is non-empty, it must
     * refer to an unique index.
     * </pre>
     *
     * <code>string index = 2 [json_name = "index"];</code>
     * @param value The index to set.
     * @return This builder for chaining.
     */
    public Builder setIndex(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      index_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * index is the index fields expression used in orm definitions. If it
     * is empty, the table's primary key is assumed. If it is non-empty, it must
     * refer to an unique index.
     * </pre>
     *
     * <code>string index = 2 [json_name = "index"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIndex() {
      index_ = getDefaultInstance().getIndex();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * index is the index fields expression used in orm definitions. If it
     * is empty, the table's primary key is assumed. If it is non-empty, it must
     * refer to an unique index.
     * </pre>
     *
     * <code>string index = 2 [json_name = "index"];</code>
     * @param value The bytes for index to set.
     * @return This builder for chaining.
     */
    public Builder setIndexBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      index_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.util.List<com.cosmos.orm.query.v1alpha1.IndexValue> values_ =
      java.util.Collections.emptyList();
    private void ensureValuesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        values_ = new java.util.ArrayList<com.cosmos.orm.query.v1alpha1.IndexValue>(values_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.orm.query.v1alpha1.IndexValue, com.cosmos.orm.query.v1alpha1.IndexValue.Builder, com.cosmos.orm.query.v1alpha1.IndexValueOrBuilder> valuesBuilder_;

    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public java.util.List<com.cosmos.orm.query.v1alpha1.IndexValue> getValuesList() {
      if (valuesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(values_);
      } else {
        return valuesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public int getValuesCount() {
      if (valuesBuilder_ == null) {
        return values_.size();
      } else {
        return valuesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public com.cosmos.orm.query.v1alpha1.IndexValue getValues(int index) {
      if (valuesBuilder_ == null) {
        return values_.get(index);
      } else {
        return valuesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public Builder setValues(
        int index, com.cosmos.orm.query.v1alpha1.IndexValue value) {
      if (valuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValuesIsMutable();
        values_.set(index, value);
        onChanged();
      } else {
        valuesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public Builder setValues(
        int index, com.cosmos.orm.query.v1alpha1.IndexValue.Builder builderForValue) {
      if (valuesBuilder_ == null) {
        ensureValuesIsMutable();
        values_.set(index, builderForValue.build());
        onChanged();
      } else {
        valuesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public Builder addValues(com.cosmos.orm.query.v1alpha1.IndexValue value) {
      if (valuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValuesIsMutable();
        values_.add(value);
        onChanged();
      } else {
        valuesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public Builder addValues(
        int index, com.cosmos.orm.query.v1alpha1.IndexValue value) {
      if (valuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValuesIsMutable();
        values_.add(index, value);
        onChanged();
      } else {
        valuesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public Builder addValues(
        com.cosmos.orm.query.v1alpha1.IndexValue.Builder builderForValue) {
      if (valuesBuilder_ == null) {
        ensureValuesIsMutable();
        values_.add(builderForValue.build());
        onChanged();
      } else {
        valuesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public Builder addValues(
        int index, com.cosmos.orm.query.v1alpha1.IndexValue.Builder builderForValue) {
      if (valuesBuilder_ == null) {
        ensureValuesIsMutable();
        values_.add(index, builderForValue.build());
        onChanged();
      } else {
        valuesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public Builder addAllValues(
        java.lang.Iterable<? extends com.cosmos.orm.query.v1alpha1.IndexValue> values) {
      if (valuesBuilder_ == null) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
      } else {
        valuesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public Builder clearValues() {
      if (valuesBuilder_ == null) {
        values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        valuesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public Builder removeValues(int index) {
      if (valuesBuilder_ == null) {
        ensureValuesIsMutable();
        values_.remove(index);
        onChanged();
      } else {
        valuesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public com.cosmos.orm.query.v1alpha1.IndexValue.Builder getValuesBuilder(
        int index) {
      return getValuesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public com.cosmos.orm.query.v1alpha1.IndexValueOrBuilder getValuesOrBuilder(
        int index) {
      if (valuesBuilder_ == null) {
        return values_.get(index);  } else {
        return valuesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public java.util.List<? extends com.cosmos.orm.query.v1alpha1.IndexValueOrBuilder> 
         getValuesOrBuilderList() {
      if (valuesBuilder_ != null) {
        return valuesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(values_);
      }
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public com.cosmos.orm.query.v1alpha1.IndexValue.Builder addValuesBuilder() {
      return getValuesFieldBuilder().addBuilder(
          com.cosmos.orm.query.v1alpha1.IndexValue.getDefaultInstance());
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public com.cosmos.orm.query.v1alpha1.IndexValue.Builder addValuesBuilder(
        int index) {
      return getValuesFieldBuilder().addBuilder(
          index, com.cosmos.orm.query.v1alpha1.IndexValue.getDefaultInstance());
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    public java.util.List<com.cosmos.orm.query.v1alpha1.IndexValue.Builder> 
         getValuesBuilderList() {
      return getValuesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.orm.query.v1alpha1.IndexValue, com.cosmos.orm.query.v1alpha1.IndexValue.Builder, com.cosmos.orm.query.v1alpha1.IndexValueOrBuilder> 
        getValuesFieldBuilder() {
      if (valuesBuilder_ == null) {
        valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.orm.query.v1alpha1.IndexValue, com.cosmos.orm.query.v1alpha1.IndexValue.Builder, com.cosmos.orm.query.v1alpha1.IndexValueOrBuilder>(
                values_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        values_ = null;
      }
      return valuesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:cosmos.orm.query.v1alpha1.GetRequest)
  }

  // @@protoc_insertion_point(class_scope:cosmos.orm.query.v1alpha1.GetRequest)
  private static final com.cosmos.orm.query.v1alpha1.GetRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.cosmos.orm.query.v1alpha1.GetRequest();
  }

  public static com.cosmos.orm.query.v1alpha1.GetRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetRequest>
      PARSER = new com.google.protobuf.AbstractParser<GetRequest>() {
    @java.lang.Override
    public GetRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GetRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GetRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.cosmos.orm.query.v1alpha1.GetRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


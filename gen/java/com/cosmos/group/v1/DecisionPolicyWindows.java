// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/group/v1/types.proto

package com.cosmos.group.v1;

/**
 * <pre>
 * DecisionPolicyWindows defines the different windows for voting and execution.
 * </pre>
 *
 * Protobuf type {@code cosmos.group.v1.DecisionPolicyWindows}
 */
public final class DecisionPolicyWindows extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:cosmos.group.v1.DecisionPolicyWindows)
    DecisionPolicyWindowsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DecisionPolicyWindows.newBuilder() to construct.
  private DecisionPolicyWindows(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DecisionPolicyWindows() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DecisionPolicyWindows();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.cosmos.group.v1.TypesProto.internal_static_cosmos_group_v1_DecisionPolicyWindows_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.cosmos.group.v1.TypesProto.internal_static_cosmos_group_v1_DecisionPolicyWindows_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.cosmos.group.v1.DecisionPolicyWindows.class, com.cosmos.group.v1.DecisionPolicyWindows.Builder.class);
  }

  public static final int VOTING_PERIOD_FIELD_NUMBER = 1;
  private com.google.protobuf.Duration votingPeriod_;
  /**
   * <pre>
   * voting_period is the duration from submission of a proposal to the end of voting period
   * Within this times votes can be submitted with MsgVote.
   * </pre>
   *
   * <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
   * @return Whether the votingPeriod field is set.
   */
  @java.lang.Override
  public boolean hasVotingPeriod() {
    return votingPeriod_ != null;
  }
  /**
   * <pre>
   * voting_period is the duration from submission of a proposal to the end of voting period
   * Within this times votes can be submitted with MsgVote.
   * </pre>
   *
   * <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
   * @return The votingPeriod.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getVotingPeriod() {
    return votingPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : votingPeriod_;
  }
  /**
   * <pre>
   * voting_period is the duration from submission of a proposal to the end of voting period
   * Within this times votes can be submitted with MsgVote.
   * </pre>
   *
   * <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getVotingPeriodOrBuilder() {
    return votingPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : votingPeriod_;
  }

  public static final int MIN_EXECUTION_PERIOD_FIELD_NUMBER = 2;
  private com.google.protobuf.Duration minExecutionPeriod_;
  /**
   * <pre>
   * min_execution_period is the minimum duration after the proposal submission
   * where members can start sending MsgExec. This means that the window for
   * sending a MsgExec transaction is:
   * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
   * where max_execution_period is a app-specific config, defined in the keeper.
   * If not set, min_execution_period will default to 0.
   *
   * Please make sure to set a `min_execution_period` that is smaller than
   * `voting_period + max_execution_period`, or else the above execution window
   * is empty, meaning that all proposals created with this decision policy
   * won't be able to be executed.
   * </pre>
   *
   * <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
   * @return Whether the minExecutionPeriod field is set.
   */
  @java.lang.Override
  public boolean hasMinExecutionPeriod() {
    return minExecutionPeriod_ != null;
  }
  /**
   * <pre>
   * min_execution_period is the minimum duration after the proposal submission
   * where members can start sending MsgExec. This means that the window for
   * sending a MsgExec transaction is:
   * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
   * where max_execution_period is a app-specific config, defined in the keeper.
   * If not set, min_execution_period will default to 0.
   *
   * Please make sure to set a `min_execution_period` that is smaller than
   * `voting_period + max_execution_period`, or else the above execution window
   * is empty, meaning that all proposals created with this decision policy
   * won't be able to be executed.
   * </pre>
   *
   * <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
   * @return The minExecutionPeriod.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getMinExecutionPeriod() {
    return minExecutionPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : minExecutionPeriod_;
  }
  /**
   * <pre>
   * min_execution_period is the minimum duration after the proposal submission
   * where members can start sending MsgExec. This means that the window for
   * sending a MsgExec transaction is:
   * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
   * where max_execution_period is a app-specific config, defined in the keeper.
   * If not set, min_execution_period will default to 0.
   *
   * Please make sure to set a `min_execution_period` that is smaller than
   * `voting_period + max_execution_period`, or else the above execution window
   * is empty, meaning that all proposals created with this decision policy
   * won't be able to be executed.
   * </pre>
   *
   * <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getMinExecutionPeriodOrBuilder() {
    return minExecutionPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : minExecutionPeriod_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (votingPeriod_ != null) {
      output.writeMessage(1, getVotingPeriod());
    }
    if (minExecutionPeriod_ != null) {
      output.writeMessage(2, getMinExecutionPeriod());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (votingPeriod_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getVotingPeriod());
    }
    if (minExecutionPeriod_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getMinExecutionPeriod());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.cosmos.group.v1.DecisionPolicyWindows)) {
      return super.equals(obj);
    }
    com.cosmos.group.v1.DecisionPolicyWindows other = (com.cosmos.group.v1.DecisionPolicyWindows) obj;

    if (hasVotingPeriod() != other.hasVotingPeriod()) return false;
    if (hasVotingPeriod()) {
      if (!getVotingPeriod()
          .equals(other.getVotingPeriod())) return false;
    }
    if (hasMinExecutionPeriod() != other.hasMinExecutionPeriod()) return false;
    if (hasMinExecutionPeriod()) {
      if (!getMinExecutionPeriod()
          .equals(other.getMinExecutionPeriod())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasVotingPeriod()) {
      hash = (37 * hash) + VOTING_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getVotingPeriod().hashCode();
    }
    if (hasMinExecutionPeriod()) {
      hash = (37 * hash) + MIN_EXECUTION_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getMinExecutionPeriod().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.cosmos.group.v1.DecisionPolicyWindows parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.group.v1.DecisionPolicyWindows parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.group.v1.DecisionPolicyWindows parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.group.v1.DecisionPolicyWindows parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.group.v1.DecisionPolicyWindows parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.group.v1.DecisionPolicyWindows parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.group.v1.DecisionPolicyWindows parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.cosmos.group.v1.DecisionPolicyWindows parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.cosmos.group.v1.DecisionPolicyWindows parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.cosmos.group.v1.DecisionPolicyWindows parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.cosmos.group.v1.DecisionPolicyWindows parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.cosmos.group.v1.DecisionPolicyWindows parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.cosmos.group.v1.DecisionPolicyWindows prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * DecisionPolicyWindows defines the different windows for voting and execution.
   * </pre>
   *
   * Protobuf type {@code cosmos.group.v1.DecisionPolicyWindows}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:cosmos.group.v1.DecisionPolicyWindows)
      com.cosmos.group.v1.DecisionPolicyWindowsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cosmos.group.v1.TypesProto.internal_static_cosmos_group_v1_DecisionPolicyWindows_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cosmos.group.v1.TypesProto.internal_static_cosmos_group_v1_DecisionPolicyWindows_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cosmos.group.v1.DecisionPolicyWindows.class, com.cosmos.group.v1.DecisionPolicyWindows.Builder.class);
    }

    // Construct using com.cosmos.group.v1.DecisionPolicyWindows.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      votingPeriod_ = null;
      if (votingPeriodBuilder_ != null) {
        votingPeriodBuilder_.dispose();
        votingPeriodBuilder_ = null;
      }
      minExecutionPeriod_ = null;
      if (minExecutionPeriodBuilder_ != null) {
        minExecutionPeriodBuilder_.dispose();
        minExecutionPeriodBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.cosmos.group.v1.TypesProto.internal_static_cosmos_group_v1_DecisionPolicyWindows_descriptor;
    }

    @java.lang.Override
    public com.cosmos.group.v1.DecisionPolicyWindows getDefaultInstanceForType() {
      return com.cosmos.group.v1.DecisionPolicyWindows.getDefaultInstance();
    }

    @java.lang.Override
    public com.cosmos.group.v1.DecisionPolicyWindows build() {
      com.cosmos.group.v1.DecisionPolicyWindows result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.cosmos.group.v1.DecisionPolicyWindows buildPartial() {
      com.cosmos.group.v1.DecisionPolicyWindows result = new com.cosmos.group.v1.DecisionPolicyWindows(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.cosmos.group.v1.DecisionPolicyWindows result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.votingPeriod_ = votingPeriodBuilder_ == null
            ? votingPeriod_
            : votingPeriodBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.minExecutionPeriod_ = minExecutionPeriodBuilder_ == null
            ? minExecutionPeriod_
            : minExecutionPeriodBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.cosmos.group.v1.DecisionPolicyWindows) {
        return mergeFrom((com.cosmos.group.v1.DecisionPolicyWindows)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.cosmos.group.v1.DecisionPolicyWindows other) {
      if (other == com.cosmos.group.v1.DecisionPolicyWindows.getDefaultInstance()) return this;
      if (other.hasVotingPeriod()) {
        mergeVotingPeriod(other.getVotingPeriod());
      }
      if (other.hasMinExecutionPeriod()) {
        mergeMinExecutionPeriod(other.getMinExecutionPeriod());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getVotingPeriodFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getMinExecutionPeriodFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Duration votingPeriod_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> votingPeriodBuilder_;
    /**
     * <pre>
     * voting_period is the duration from submission of a proposal to the end of voting period
     * Within this times votes can be submitted with MsgVote.
     * </pre>
     *
     * <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     * @return Whether the votingPeriod field is set.
     */
    public boolean hasVotingPeriod() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * voting_period is the duration from submission of a proposal to the end of voting period
     * Within this times votes can be submitted with MsgVote.
     * </pre>
     *
     * <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     * @return The votingPeriod.
     */
    public com.google.protobuf.Duration getVotingPeriod() {
      if (votingPeriodBuilder_ == null) {
        return votingPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : votingPeriod_;
      } else {
        return votingPeriodBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * voting_period is the duration from submission of a proposal to the end of voting period
     * Within this times votes can be submitted with MsgVote.
     * </pre>
     *
     * <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder setVotingPeriod(com.google.protobuf.Duration value) {
      if (votingPeriodBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        votingPeriod_ = value;
      } else {
        votingPeriodBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * voting_period is the duration from submission of a proposal to the end of voting period
     * Within this times votes can be submitted with MsgVote.
     * </pre>
     *
     * <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder setVotingPeriod(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (votingPeriodBuilder_ == null) {
        votingPeriod_ = builderForValue.build();
      } else {
        votingPeriodBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * voting_period is the duration from submission of a proposal to the end of voting period
     * Within this times votes can be submitted with MsgVote.
     * </pre>
     *
     * <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder mergeVotingPeriod(com.google.protobuf.Duration value) {
      if (votingPeriodBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          votingPeriod_ != null &&
          votingPeriod_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getVotingPeriodBuilder().mergeFrom(value);
        } else {
          votingPeriod_ = value;
        }
      } else {
        votingPeriodBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * voting_period is the duration from submission of a proposal to the end of voting period
     * Within this times votes can be submitted with MsgVote.
     * </pre>
     *
     * <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder clearVotingPeriod() {
      bitField0_ = (bitField0_ & ~0x00000001);
      votingPeriod_ = null;
      if (votingPeriodBuilder_ != null) {
        votingPeriodBuilder_.dispose();
        votingPeriodBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * voting_period is the duration from submission of a proposal to the end of voting period
     * Within this times votes can be submitted with MsgVote.
     * </pre>
     *
     * <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public com.google.protobuf.Duration.Builder getVotingPeriodBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getVotingPeriodFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * voting_period is the duration from submission of a proposal to the end of voting period
     * Within this times votes can be submitted with MsgVote.
     * </pre>
     *
     * <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public com.google.protobuf.DurationOrBuilder getVotingPeriodOrBuilder() {
      if (votingPeriodBuilder_ != null) {
        return votingPeriodBuilder_.getMessageOrBuilder();
      } else {
        return votingPeriod_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : votingPeriod_;
      }
    }
    /**
     * <pre>
     * voting_period is the duration from submission of a proposal to the end of voting period
     * Within this times votes can be submitted with MsgVote.
     * </pre>
     *
     * <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getVotingPeriodFieldBuilder() {
      if (votingPeriodBuilder_ == null) {
        votingPeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getVotingPeriod(),
                getParentForChildren(),
                isClean());
        votingPeriod_ = null;
      }
      return votingPeriodBuilder_;
    }

    private com.google.protobuf.Duration minExecutionPeriod_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> minExecutionPeriodBuilder_;
    /**
     * <pre>
     * min_execution_period is the minimum duration after the proposal submission
     * where members can start sending MsgExec. This means that the window for
     * sending a MsgExec transaction is:
     * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     * where max_execution_period is a app-specific config, defined in the keeper.
     * If not set, min_execution_period will default to 0.
     *
     * Please make sure to set a `min_execution_period` that is smaller than
     * `voting_period + max_execution_period`, or else the above execution window
     * is empty, meaning that all proposals created with this decision policy
     * won't be able to be executed.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     * @return Whether the minExecutionPeriod field is set.
     */
    public boolean hasMinExecutionPeriod() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * min_execution_period is the minimum duration after the proposal submission
     * where members can start sending MsgExec. This means that the window for
     * sending a MsgExec transaction is:
     * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     * where max_execution_period is a app-specific config, defined in the keeper.
     * If not set, min_execution_period will default to 0.
     *
     * Please make sure to set a `min_execution_period` that is smaller than
     * `voting_period + max_execution_period`, or else the above execution window
     * is empty, meaning that all proposals created with this decision policy
     * won't be able to be executed.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     * @return The minExecutionPeriod.
     */
    public com.google.protobuf.Duration getMinExecutionPeriod() {
      if (minExecutionPeriodBuilder_ == null) {
        return minExecutionPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : minExecutionPeriod_;
      } else {
        return minExecutionPeriodBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * min_execution_period is the minimum duration after the proposal submission
     * where members can start sending MsgExec. This means that the window for
     * sending a MsgExec transaction is:
     * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     * where max_execution_period is a app-specific config, defined in the keeper.
     * If not set, min_execution_period will default to 0.
     *
     * Please make sure to set a `min_execution_period` that is smaller than
     * `voting_period + max_execution_period`, or else the above execution window
     * is empty, meaning that all proposals created with this decision policy
     * won't be able to be executed.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder setMinExecutionPeriod(com.google.protobuf.Duration value) {
      if (minExecutionPeriodBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        minExecutionPeriod_ = value;
      } else {
        minExecutionPeriodBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * min_execution_period is the minimum duration after the proposal submission
     * where members can start sending MsgExec. This means that the window for
     * sending a MsgExec transaction is:
     * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     * where max_execution_period is a app-specific config, defined in the keeper.
     * If not set, min_execution_period will default to 0.
     *
     * Please make sure to set a `min_execution_period` that is smaller than
     * `voting_period + max_execution_period`, or else the above execution window
     * is empty, meaning that all proposals created with this decision policy
     * won't be able to be executed.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder setMinExecutionPeriod(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (minExecutionPeriodBuilder_ == null) {
        minExecutionPeriod_ = builderForValue.build();
      } else {
        minExecutionPeriodBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * min_execution_period is the minimum duration after the proposal submission
     * where members can start sending MsgExec. This means that the window for
     * sending a MsgExec transaction is:
     * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     * where max_execution_period is a app-specific config, defined in the keeper.
     * If not set, min_execution_period will default to 0.
     *
     * Please make sure to set a `min_execution_period` that is smaller than
     * `voting_period + max_execution_period`, or else the above execution window
     * is empty, meaning that all proposals created with this decision policy
     * won't be able to be executed.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder mergeMinExecutionPeriod(com.google.protobuf.Duration value) {
      if (minExecutionPeriodBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          minExecutionPeriod_ != null &&
          minExecutionPeriod_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getMinExecutionPeriodBuilder().mergeFrom(value);
        } else {
          minExecutionPeriod_ = value;
        }
      } else {
        minExecutionPeriodBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * min_execution_period is the minimum duration after the proposal submission
     * where members can start sending MsgExec. This means that the window for
     * sending a MsgExec transaction is:
     * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     * where max_execution_period is a app-specific config, defined in the keeper.
     * If not set, min_execution_period will default to 0.
     *
     * Please make sure to set a `min_execution_period` that is smaller than
     * `voting_period + max_execution_period`, or else the above execution window
     * is empty, meaning that all proposals created with this decision policy
     * won't be able to be executed.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public Builder clearMinExecutionPeriod() {
      bitField0_ = (bitField0_ & ~0x00000002);
      minExecutionPeriod_ = null;
      if (minExecutionPeriodBuilder_ != null) {
        minExecutionPeriodBuilder_.dispose();
        minExecutionPeriodBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * min_execution_period is the minimum duration after the proposal submission
     * where members can start sending MsgExec. This means that the window for
     * sending a MsgExec transaction is:
     * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     * where max_execution_period is a app-specific config, defined in the keeper.
     * If not set, min_execution_period will default to 0.
     *
     * Please make sure to set a `min_execution_period` that is smaller than
     * `voting_period + max_execution_period`, or else the above execution window
     * is empty, meaning that all proposals created with this decision policy
     * won't be able to be executed.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public com.google.protobuf.Duration.Builder getMinExecutionPeriodBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getMinExecutionPeriodFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * min_execution_period is the minimum duration after the proposal submission
     * where members can start sending MsgExec. This means that the window for
     * sending a MsgExec transaction is:
     * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     * where max_execution_period is a app-specific config, defined in the keeper.
     * If not set, min_execution_period will default to 0.
     *
     * Please make sure to set a `min_execution_period` that is smaller than
     * `voting_period + max_execution_period`, or else the above execution window
     * is empty, meaning that all proposals created with this decision policy
     * won't be able to be executed.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    public com.google.protobuf.DurationOrBuilder getMinExecutionPeriodOrBuilder() {
      if (minExecutionPeriodBuilder_ != null) {
        return minExecutionPeriodBuilder_.getMessageOrBuilder();
      } else {
        return minExecutionPeriod_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : minExecutionPeriod_;
      }
    }
    /**
     * <pre>
     * min_execution_period is the minimum duration after the proposal submission
     * where members can start sending MsgExec. This means that the window for
     * sending a MsgExec transaction is:
     * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     * where max_execution_period is a app-specific config, defined in the keeper.
     * If not set, min_execution_period will default to 0.
     *
     * Please make sure to set a `min_execution_period` that is smaller than
     * `voting_period + max_execution_period`, or else the above execution window
     * is empty, meaning that all proposals created with this decision policy
     * won't be able to be executed.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getMinExecutionPeriodFieldBuilder() {
      if (minExecutionPeriodBuilder_ == null) {
        minExecutionPeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getMinExecutionPeriod(),
                getParentForChildren(),
                isClean());
        minExecutionPeriod_ = null;
      }
      return minExecutionPeriodBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:cosmos.group.v1.DecisionPolicyWindows)
  }

  // @@protoc_insertion_point(class_scope:cosmos.group.v1.DecisionPolicyWindows)
  private static final com.cosmos.group.v1.DecisionPolicyWindows DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.cosmos.group.v1.DecisionPolicyWindows();
  }

  public static com.cosmos.group.v1.DecisionPolicyWindows getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DecisionPolicyWindows>
      PARSER = new com.google.protobuf.AbstractParser<DecisionPolicyWindows>() {
    @java.lang.Override
    public DecisionPolicyWindows parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DecisionPolicyWindows> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DecisionPolicyWindows> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.cosmos.group.v1.DecisionPolicyWindows getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


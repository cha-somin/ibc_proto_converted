// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/crypto/keyring/v1/record.proto

package com.cosmos.crypto.keyring.v1;

public interface RecordOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmos.crypto.keyring.v1.Record)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * name represents a name of Record
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * name represents a name of Record
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * pub_key represents a public key in any format
   * </pre>
   *
   * <code>.google.protobuf.Any pub_key = 2 [json_name = "pubKey"];</code>
   * @return Whether the pubKey field is set.
   */
  boolean hasPubKey();
  /**
   * <pre>
   * pub_key represents a public key in any format
   * </pre>
   *
   * <code>.google.protobuf.Any pub_key = 2 [json_name = "pubKey"];</code>
   * @return The pubKey.
   */
  com.google.protobuf.Any getPubKey();
  /**
   * <pre>
   * pub_key represents a public key in any format
   * </pre>
   *
   * <code>.google.protobuf.Any pub_key = 2 [json_name = "pubKey"];</code>
   */
  com.google.protobuf.AnyOrBuilder getPubKeyOrBuilder();

  /**
   * <pre>
   * local stores the private key locally.
   * </pre>
   *
   * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3 [json_name = "local"];</code>
   * @return Whether the local field is set.
   */
  boolean hasLocal();
  /**
   * <pre>
   * local stores the private key locally.
   * </pre>
   *
   * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3 [json_name = "local"];</code>
   * @return The local.
   */
  com.cosmos.crypto.keyring.v1.Record.Local getLocal();
  /**
   * <pre>
   * local stores the private key locally.
   * </pre>
   *
   * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3 [json_name = "local"];</code>
   */
  com.cosmos.crypto.keyring.v1.Record.LocalOrBuilder getLocalOrBuilder();

  /**
   * <pre>
   * ledger stores the information about a Ledger key.
   * </pre>
   *
   * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4 [json_name = "ledger"];</code>
   * @return Whether the ledger field is set.
   */
  boolean hasLedger();
  /**
   * <pre>
   * ledger stores the information about a Ledger key.
   * </pre>
   *
   * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4 [json_name = "ledger"];</code>
   * @return The ledger.
   */
  com.cosmos.crypto.keyring.v1.Record.Ledger getLedger();
  /**
   * <pre>
   * ledger stores the information about a Ledger key.
   * </pre>
   *
   * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4 [json_name = "ledger"];</code>
   */
  com.cosmos.crypto.keyring.v1.Record.LedgerOrBuilder getLedgerOrBuilder();

  /**
   * <pre>
   * Multi does not store any other information.
   * </pre>
   *
   * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5 [json_name = "multi"];</code>
   * @return Whether the multi field is set.
   */
  boolean hasMulti();
  /**
   * <pre>
   * Multi does not store any other information.
   * </pre>
   *
   * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5 [json_name = "multi"];</code>
   * @return The multi.
   */
  com.cosmos.crypto.keyring.v1.Record.Multi getMulti();
  /**
   * <pre>
   * Multi does not store any other information.
   * </pre>
   *
   * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5 [json_name = "multi"];</code>
   */
  com.cosmos.crypto.keyring.v1.Record.MultiOrBuilder getMultiOrBuilder();

  /**
   * <pre>
   * Offline does not store any other information.
   * </pre>
   *
   * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6 [json_name = "offline"];</code>
   * @return Whether the offline field is set.
   */
  boolean hasOffline();
  /**
   * <pre>
   * Offline does not store any other information.
   * </pre>
   *
   * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6 [json_name = "offline"];</code>
   * @return The offline.
   */
  com.cosmos.crypto.keyring.v1.Record.Offline getOffline();
  /**
   * <pre>
   * Offline does not store any other information.
   * </pre>
   *
   * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6 [json_name = "offline"];</code>
   */
  com.cosmos.crypto.keyring.v1.Record.OfflineOrBuilder getOfflineOrBuilder();

  com.cosmos.crypto.keyring.v1.Record.ItemCase getItemCase();
}

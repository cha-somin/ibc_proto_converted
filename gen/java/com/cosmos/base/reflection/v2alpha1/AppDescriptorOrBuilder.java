// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/base/reflection/v2alpha1/reflection.proto

package com.cosmos.base.reflection.v2alpha1;

public interface AppDescriptorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmos.base.reflection.v2alpha1.AppDescriptor)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * AuthnDescriptor provides information on how to authenticate transactions on the application
   * NOTE: experimental and subject to change in future releases.
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];</code>
   * @return Whether the authn field is set.
   */
  boolean hasAuthn();
  /**
   * <pre>
   * AuthnDescriptor provides information on how to authenticate transactions on the application
   * NOTE: experimental and subject to change in future releases.
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];</code>
   * @return The authn.
   */
  com.cosmos.base.reflection.v2alpha1.AuthnDescriptor getAuthn();
  /**
   * <pre>
   * AuthnDescriptor provides information on how to authenticate transactions on the application
   * NOTE: experimental and subject to change in future releases.
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];</code>
   */
  com.cosmos.base.reflection.v2alpha1.AuthnDescriptorOrBuilder getAuthnOrBuilder();

  /**
   * <pre>
   * chain provides the chain descriptor
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 2 [json_name = "chain"];</code>
   * @return Whether the chain field is set.
   */
  boolean hasChain();
  /**
   * <pre>
   * chain provides the chain descriptor
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 2 [json_name = "chain"];</code>
   * @return The chain.
   */
  com.cosmos.base.reflection.v2alpha1.ChainDescriptor getChain();
  /**
   * <pre>
   * chain provides the chain descriptor
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 2 [json_name = "chain"];</code>
   */
  com.cosmos.base.reflection.v2alpha1.ChainDescriptorOrBuilder getChainOrBuilder();

  /**
   * <pre>
   * codec provides metadata information regarding codec related types
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 3 [json_name = "codec"];</code>
   * @return Whether the codec field is set.
   */
  boolean hasCodec();
  /**
   * <pre>
   * codec provides metadata information regarding codec related types
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 3 [json_name = "codec"];</code>
   * @return The codec.
   */
  com.cosmos.base.reflection.v2alpha1.CodecDescriptor getCodec();
  /**
   * <pre>
   * codec provides metadata information regarding codec related types
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 3 [json_name = "codec"];</code>
   */
  com.cosmos.base.reflection.v2alpha1.CodecDescriptorOrBuilder getCodecOrBuilder();

  /**
   * <pre>
   * configuration provides metadata information regarding the sdk.Config type
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.ConfigurationDescriptor configuration = 4 [json_name = "configuration"];</code>
   * @return Whether the configuration field is set.
   */
  boolean hasConfiguration();
  /**
   * <pre>
   * configuration provides metadata information regarding the sdk.Config type
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.ConfigurationDescriptor configuration = 4 [json_name = "configuration"];</code>
   * @return The configuration.
   */
  com.cosmos.base.reflection.v2alpha1.ConfigurationDescriptor getConfiguration();
  /**
   * <pre>
   * configuration provides metadata information regarding the sdk.Config type
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.ConfigurationDescriptor configuration = 4 [json_name = "configuration"];</code>
   */
  com.cosmos.base.reflection.v2alpha1.ConfigurationDescriptorOrBuilder getConfigurationOrBuilder();

  /**
   * <pre>
   * query_services provides metadata information regarding the available queriable endpoints
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.QueryServicesDescriptor query_services = 5 [json_name = "queryServices"];</code>
   * @return Whether the queryServices field is set.
   */
  boolean hasQueryServices();
  /**
   * <pre>
   * query_services provides metadata information regarding the available queriable endpoints
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.QueryServicesDescriptor query_services = 5 [json_name = "queryServices"];</code>
   * @return The queryServices.
   */
  com.cosmos.base.reflection.v2alpha1.QueryServicesDescriptor getQueryServices();
  /**
   * <pre>
   * query_services provides metadata information regarding the available queriable endpoints
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.QueryServicesDescriptor query_services = 5 [json_name = "queryServices"];</code>
   */
  com.cosmos.base.reflection.v2alpha1.QueryServicesDescriptorOrBuilder getQueryServicesOrBuilder();

  /**
   * <pre>
   * tx provides metadata information regarding how to send transactions to the given application
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.TxDescriptor tx = 6 [json_name = "tx"];</code>
   * @return Whether the tx field is set.
   */
  boolean hasTx();
  /**
   * <pre>
   * tx provides metadata information regarding how to send transactions to the given application
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.TxDescriptor tx = 6 [json_name = "tx"];</code>
   * @return The tx.
   */
  com.cosmos.base.reflection.v2alpha1.TxDescriptor getTx();
  /**
   * <pre>
   * tx provides metadata information regarding how to send transactions to the given application
   * </pre>
   *
   * <code>.cosmos.base.reflection.v2alpha1.TxDescriptor tx = 6 [json_name = "tx"];</code>
   */
  com.cosmos.base.reflection.v2alpha1.TxDescriptorOrBuilder getTxOrBuilder();
}

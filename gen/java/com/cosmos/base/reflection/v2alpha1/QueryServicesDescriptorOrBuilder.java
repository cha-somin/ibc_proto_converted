// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/base/reflection/v2alpha1/reflection.proto

package com.cosmos.base.reflection.v2alpha1;

public interface QueryServicesDescriptorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * query_services is a list of cosmos-sdk QueryServiceDescriptor
   * </pre>
   *
   * <code>repeated .cosmos.base.reflection.v2alpha1.QueryServiceDescriptor query_services = 1 [json_name = "queryServices"];</code>
   */
  java.util.List<com.cosmos.base.reflection.v2alpha1.QueryServiceDescriptor> 
      getQueryServicesList();
  /**
   * <pre>
   * query_services is a list of cosmos-sdk QueryServiceDescriptor
   * </pre>
   *
   * <code>repeated .cosmos.base.reflection.v2alpha1.QueryServiceDescriptor query_services = 1 [json_name = "queryServices"];</code>
   */
  com.cosmos.base.reflection.v2alpha1.QueryServiceDescriptor getQueryServices(int index);
  /**
   * <pre>
   * query_services is a list of cosmos-sdk QueryServiceDescriptor
   * </pre>
   *
   * <code>repeated .cosmos.base.reflection.v2alpha1.QueryServiceDescriptor query_services = 1 [json_name = "queryServices"];</code>
   */
  int getQueryServicesCount();
  /**
   * <pre>
   * query_services is a list of cosmos-sdk QueryServiceDescriptor
   * </pre>
   *
   * <code>repeated .cosmos.base.reflection.v2alpha1.QueryServiceDescriptor query_services = 1 [json_name = "queryServices"];</code>
   */
  java.util.List<? extends com.cosmos.base.reflection.v2alpha1.QueryServiceDescriptorOrBuilder> 
      getQueryServicesOrBuilderList();
  /**
   * <pre>
   * query_services is a list of cosmos-sdk QueryServiceDescriptor
   * </pre>
   *
   * <code>repeated .cosmos.base.reflection.v2alpha1.QueryServiceDescriptor query_services = 1 [json_name = "queryServices"];</code>
   */
  com.cosmos.base.reflection.v2alpha1.QueryServiceDescriptorOrBuilder getQueryServicesOrBuilder(
      int index);
}

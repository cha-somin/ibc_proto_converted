// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/nft/v1beta1/nft.proto

package com.cosmos.nft.v1beta1;

public interface NFTOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmos.nft.v1beta1.NFT)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * class_id associated with the NFT, similar to the contract address of ERC721
   * </pre>
   *
   * <code>string class_id = 1 [json_name = "classId"];</code>
   * @return The classId.
   */
  java.lang.String getClassId();
  /**
   * <pre>
   * class_id associated with the NFT, similar to the contract address of ERC721
   * </pre>
   *
   * <code>string class_id = 1 [json_name = "classId"];</code>
   * @return The bytes for classId.
   */
  com.google.protobuf.ByteString
      getClassIdBytes();

  /**
   * <pre>
   * id is a unique identifier of the NFT
   * </pre>
   *
   * <code>string id = 2 [json_name = "id"];</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * id is a unique identifier of the NFT
   * </pre>
   *
   * <code>string id = 2 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * uri for the NFT metadata stored off chain
   * </pre>
   *
   * <code>string uri = 3 [json_name = "uri"];</code>
   * @return The uri.
   */
  java.lang.String getUri();
  /**
   * <pre>
   * uri for the NFT metadata stored off chain
   * </pre>
   *
   * <code>string uri = 3 [json_name = "uri"];</code>
   * @return The bytes for uri.
   */
  com.google.protobuf.ByteString
      getUriBytes();

  /**
   * <pre>
   * uri_hash is a hash of the document pointed by uri
   * </pre>
   *
   * <code>string uri_hash = 4 [json_name = "uriHash"];</code>
   * @return The uriHash.
   */
  java.lang.String getUriHash();
  /**
   * <pre>
   * uri_hash is a hash of the document pointed by uri
   * </pre>
   *
   * <code>string uri_hash = 4 [json_name = "uriHash"];</code>
   * @return The bytes for uriHash.
   */
  com.google.protobuf.ByteString
      getUriHashBytes();

  /**
   * <pre>
   * data is an app specific data of the NFT. Optional
   * </pre>
   *
   * <code>.google.protobuf.Any data = 10 [json_name = "data"];</code>
   * @return Whether the data field is set.
   */
  boolean hasData();
  /**
   * <pre>
   * data is an app specific data of the NFT. Optional
   * </pre>
   *
   * <code>.google.protobuf.Any data = 10 [json_name = "data"];</code>
   * @return The data.
   */
  com.google.protobuf.Any getData();
  /**
   * <pre>
   * data is an app specific data of the NFT. Optional
   * </pre>
   *
   * <code>.google.protobuf.Any data = 10 [json_name = "data"];</code>
   */
  com.google.protobuf.AnyOrBuilder getDataOrBuilder();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/nft/v1beta1/event.proto

package com.cosmos.nft.v1beta1;

public interface EventBurnOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmos.nft.v1beta1.EventBurn)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * class_id associated with the nft
   * </pre>
   *
   * <code>string class_id = 1 [json_name = "classId"];</code>
   * @return The classId.
   */
  java.lang.String getClassId();
  /**
   * <pre>
   * class_id associated with the nft
   * </pre>
   *
   * <code>string class_id = 1 [json_name = "classId"];</code>
   * @return The bytes for classId.
   */
  com.google.protobuf.ByteString
      getClassIdBytes();

  /**
   * <pre>
   * id is a unique identifier of the nft
   * </pre>
   *
   * <code>string id = 2 [json_name = "id"];</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * id is a unique identifier of the nft
   * </pre>
   *
   * <code>string id = 2 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * owner is the owner address of the nft
   * </pre>
   *
   * <code>string owner = 3 [json_name = "owner"];</code>
   * @return The owner.
   */
  java.lang.String getOwner();
  /**
   * <pre>
   * owner is the owner address of the nft
   * </pre>
   *
   * <code>string owner = 3 [json_name = "owner"];</code>
   * @return The bytes for owner.
   */
  com.google.protobuf.ByteString
      getOwnerBytes();
}

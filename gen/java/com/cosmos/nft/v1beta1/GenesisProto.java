// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/nft/v1beta1/genesis.proto

package com.cosmos.nft.v1beta1;

public final class GenesisProto {
  private GenesisProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_nft_v1beta1_GenesisState_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_nft_v1beta1_GenesisState_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_nft_v1beta1_Entry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_nft_v1beta1_Entry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n cosmos/nft/v1beta1/genesis.proto\022\022cosm" +
      "os.nft.v1beta1\032\034cosmos/nft/v1beta1/nft.p" +
      "roto\"x\n\014GenesisState\0223\n\007classes\030\001 \003(\0132\031." +
      "cosmos.nft.v1beta1.ClassR\007classes\0223\n\007ent" +
      "ries\030\002 \003(\0132\031.cosmos.nft.v1beta1.EntryR\007e" +
      "ntries\"J\n\005Entry\022\024\n\005owner\030\001 \001(\tR\005owner\022+\n" +
      "\004nfts\030\002 \003(\0132\027.cosmos.nft.v1beta1.NFTR\004nf" +
      "tsB\244\001\n\026com.cosmos.nft.v1beta1B\014GenesisPr" +
      "otoP\001Z\022cosmossdk.io/x/nft\242\002\003CNX\252\002\022Cosmos" +
      ".Nft.V1beta1\312\002\022Cosmos\\Nft\\V1beta1\342\002\036Cosm" +
      "os\\Nft\\V1beta1\\GPBMetadata\352\002\024Cosmos::Nft" +
      "::V1beta1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.cosmos.nft.v1beta1.NftProto.getDescriptor(),
        });
    internal_static_cosmos_nft_v1beta1_GenesisState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cosmos_nft_v1beta1_GenesisState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_nft_v1beta1_GenesisState_descriptor,
        new java.lang.String[] { "Classes", "Entries", });
    internal_static_cosmos_nft_v1beta1_Entry_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cosmos_nft_v1beta1_Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_nft_v1beta1_Entry_descriptor,
        new java.lang.String[] { "Owner", "Nfts", });
    com.cosmos.nft.v1beta1.NftProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

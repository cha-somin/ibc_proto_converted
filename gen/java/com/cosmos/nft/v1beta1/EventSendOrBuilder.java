// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/nft/v1beta1/event.proto

package com.cosmos.nft.v1beta1;

public interface EventSendOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmos.nft.v1beta1.EventSend)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * class_id associated with the nft
   * </pre>
   *
   * <code>string class_id = 1 [json_name = "classId"];</code>
   * @return The classId.
   */
  java.lang.String getClassId();
  /**
   * <pre>
   * class_id associated with the nft
   * </pre>
   *
   * <code>string class_id = 1 [json_name = "classId"];</code>
   * @return The bytes for classId.
   */
  com.google.protobuf.ByteString
      getClassIdBytes();

  /**
   * <pre>
   * id is a unique identifier of the nft
   * </pre>
   *
   * <code>string id = 2 [json_name = "id"];</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * id is a unique identifier of the nft
   * </pre>
   *
   * <code>string id = 2 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * sender is the address of the owner of nft
   * </pre>
   *
   * <code>string sender = 3 [json_name = "sender"];</code>
   * @return The sender.
   */
  java.lang.String getSender();
  /**
   * <pre>
   * sender is the address of the owner of nft
   * </pre>
   *
   * <code>string sender = 3 [json_name = "sender"];</code>
   * @return The bytes for sender.
   */
  com.google.protobuf.ByteString
      getSenderBytes();

  /**
   * <pre>
   * receiver is the receiver address of nft
   * </pre>
   *
   * <code>string receiver = 4 [json_name = "receiver"];</code>
   * @return The receiver.
   */
  java.lang.String getReceiver();
  /**
   * <pre>
   * receiver is the receiver address of nft
   * </pre>
   *
   * <code>string receiver = 4 [json_name = "receiver"];</code>
   * @return The bytes for receiver.
   */
  com.google.protobuf.ByteString
      getReceiverBytes();
}

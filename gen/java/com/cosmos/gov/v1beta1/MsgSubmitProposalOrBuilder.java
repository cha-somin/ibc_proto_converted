// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/gov/v1beta1/tx.proto

package com.cosmos.gov.v1beta1;

public interface MsgSubmitProposalOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmos.gov.v1beta1.MsgSubmitProposal)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * content is the proposal's content.
   * </pre>
   *
   * <code>.google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];</code>
   * @return Whether the content field is set.
   */
  boolean hasContent();
  /**
   * <pre>
   * content is the proposal's content.
   * </pre>
   *
   * <code>.google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];</code>
   * @return The content.
   */
  com.google.protobuf.Any getContent();
  /**
   * <pre>
   * content is the proposal's content.
   * </pre>
   *
   * <code>.google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];</code>
   */
  com.google.protobuf.AnyOrBuilder getContentOrBuilder();

  /**
   * <pre>
   * initial_deposit is the deposit value that must be paid at proposal submission.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin initial_deposit = 2 [json_name = "initialDeposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  java.util.List<com.cosmos.base.v1beta1.Coin> 
      getInitialDepositList();
  /**
   * <pre>
   * initial_deposit is the deposit value that must be paid at proposal submission.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin initial_deposit = 2 [json_name = "initialDeposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  com.cosmos.base.v1beta1.Coin getInitialDeposit(int index);
  /**
   * <pre>
   * initial_deposit is the deposit value that must be paid at proposal submission.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin initial_deposit = 2 [json_name = "initialDeposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  int getInitialDepositCount();
  /**
   * <pre>
   * initial_deposit is the deposit value that must be paid at proposal submission.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin initial_deposit = 2 [json_name = "initialDeposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getInitialDepositOrBuilderList();
  /**
   * <pre>
   * initial_deposit is the deposit value that must be paid at proposal submission.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin initial_deposit = 2 [json_name = "initialDeposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
   */
  com.cosmos.base.v1beta1.CoinOrBuilder getInitialDepositOrBuilder(
      int index);

  /**
   * <pre>
   * proposer is the account address of the proposer.
   * </pre>
   *
   * <code>string proposer = 3 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The proposer.
   */
  java.lang.String getProposer();
  /**
   * <pre>
   * proposer is the account address of the proposer.
   * </pre>
   *
   * <code>string proposer = 3 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
   * @return The bytes for proposer.
   */
  com.google.protobuf.ByteString
      getProposerBytes();
}

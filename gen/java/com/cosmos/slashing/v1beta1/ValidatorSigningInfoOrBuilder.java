// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/slashing/v1beta1/slashing.proto

package com.cosmos.slashing.v1beta1;

public interface ValidatorSigningInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmos.slashing.v1beta1.ValidatorSigningInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];</code>
   * @return The address.
   */
  java.lang.String getAddress();
  /**
   * <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];</code>
   * @return The bytes for address.
   */
  com.google.protobuf.ByteString
      getAddressBytes();

  /**
   * <pre>
   * Height at which validator was first a candidate OR was un-jailed
   * </pre>
   *
   * <code>int64 start_height = 2 [json_name = "startHeight"];</code>
   * @return The startHeight.
   */
  long getStartHeight();

  /**
   * <pre>
   * Index which is incremented every time a validator is bonded in a block and
   * _may_ have signed a pre-commit or not. This in conjunction with the
   * signed_blocks_window param determines the index in the missed block bitmap.
   * </pre>
   *
   * <code>int64 index_offset = 3 [json_name = "indexOffset"];</code>
   * @return The indexOffset.
   */
  long getIndexOffset();

  /**
   * <pre>
   * Timestamp until which the validator is jailed due to liveness downtime.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp jailed_until = 4 [json_name = "jailedUntil", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
   * @return Whether the jailedUntil field is set.
   */
  boolean hasJailedUntil();
  /**
   * <pre>
   * Timestamp until which the validator is jailed due to liveness downtime.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp jailed_until = 4 [json_name = "jailedUntil", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
   * @return The jailedUntil.
   */
  com.google.protobuf.Timestamp getJailedUntil();
  /**
   * <pre>
   * Timestamp until which the validator is jailed due to liveness downtime.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp jailed_until = 4 [json_name = "jailedUntil", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
   */
  com.google.protobuf.TimestampOrBuilder getJailedUntilOrBuilder();

  /**
   * <pre>
   * Whether or not a validator has been tombstoned (killed out of validator
   * set). It is set once the validator commits an equivocation or for any other
   * configured misbehavior.
   * </pre>
   *
   * <code>bool tombstoned = 5 [json_name = "tombstoned"];</code>
   * @return The tombstoned.
   */
  boolean getTombstoned();

  /**
   * <pre>
   * A counter of missed (unsigned) blocks. It is used to avoid unnecessary
   * reads in the missed block bitmap.
   * </pre>
   *
   * <code>int64 missed_blocks_counter = 6 [json_name = "missedBlocksCounter"];</code>
   * @return The missedBlocksCounter.
   */
  long getMissedBlocksCounter();
}

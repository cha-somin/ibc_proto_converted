// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/autocli/v1/options.proto

package com.cosmos.autocli.v1;

/**
 * <pre>
 * FlagOptions are options for flags generated from rpc request fields.
 * By default, all request fields are configured as flags based on the
 * kebab-case name of the field. Fields can be turned into positional arguments
 * instead by using RpcCommandOptions.positional_args.
 * </pre>
 *
 * Protobuf type {@code cosmos.autocli.v1.FlagOptions}
 */
public final class FlagOptions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:cosmos.autocli.v1.FlagOptions)
    FlagOptionsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FlagOptions.newBuilder() to construct.
  private FlagOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FlagOptions() {
    name_ = "";
    shorthand_ = "";
    usage_ = "";
    defaultValue_ = "";
    deprecated_ = "";
    shorthandDeprecated_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FlagOptions();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.cosmos.autocli.v1.OptionsProto.internal_static_cosmos_autocli_v1_FlagOptions_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.cosmos.autocli.v1.OptionsProto.internal_static_cosmos_autocli_v1_FlagOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.cosmos.autocli.v1.FlagOptions.class, com.cosmos.autocli.v1.FlagOptions.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * name is an alternate name to use for the field flag.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * name is an alternate name to use for the field flag.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SHORTHAND_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object shorthand_ = "";
  /**
   * <pre>
   * shorthand is a one-letter abbreviated flag.
   * </pre>
   *
   * <code>string shorthand = 2 [json_name = "shorthand"];</code>
   * @return The shorthand.
   */
  @java.lang.Override
  public java.lang.String getShorthand() {
    java.lang.Object ref = shorthand_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      shorthand_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * shorthand is a one-letter abbreviated flag.
   * </pre>
   *
   * <code>string shorthand = 2 [json_name = "shorthand"];</code>
   * @return The bytes for shorthand.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getShorthandBytes() {
    java.lang.Object ref = shorthand_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      shorthand_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USAGE_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object usage_ = "";
  /**
   * <pre>
   * usage is the help message.
   * </pre>
   *
   * <code>string usage = 3 [json_name = "usage"];</code>
   * @return The usage.
   */
  @java.lang.Override
  public java.lang.String getUsage() {
    java.lang.Object ref = usage_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      usage_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * usage is the help message.
   * </pre>
   *
   * <code>string usage = 3 [json_name = "usage"];</code>
   * @return The bytes for usage.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUsageBytes() {
    java.lang.Object ref = usage_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      usage_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEFAULT_VALUE_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object defaultValue_ = "";
  /**
   * <pre>
   * default_value is the default value as text.
   * </pre>
   *
   * <code>string default_value = 4 [json_name = "defaultValue"];</code>
   * @return The defaultValue.
   */
  @java.lang.Override
  public java.lang.String getDefaultValue() {
    java.lang.Object ref = defaultValue_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      defaultValue_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * default_value is the default value as text.
   * </pre>
   *
   * <code>string default_value = 4 [json_name = "defaultValue"];</code>
   * @return The bytes for defaultValue.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDefaultValueBytes() {
    java.lang.Object ref = defaultValue_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      defaultValue_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEPRECATED_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object deprecated_ = "";
  /**
   * <pre>
   * deprecated is the usage text to show if this flag is deprecated.
   * </pre>
   *
   * <code>string deprecated = 6 [json_name = "deprecated"];</code>
   * @return The deprecated.
   */
  @java.lang.Override
  public java.lang.String getDeprecated() {
    java.lang.Object ref = deprecated_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      deprecated_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * deprecated is the usage text to show if this flag is deprecated.
   * </pre>
   *
   * <code>string deprecated = 6 [json_name = "deprecated"];</code>
   * @return The bytes for deprecated.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDeprecatedBytes() {
    java.lang.Object ref = deprecated_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      deprecated_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SHORTHAND_DEPRECATED_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object shorthandDeprecated_ = "";
  /**
   * <pre>
   * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
   * </pre>
   *
   * <code>string shorthand_deprecated = 7 [json_name = "shorthandDeprecated"];</code>
   * @return The shorthandDeprecated.
   */
  @java.lang.Override
  public java.lang.String getShorthandDeprecated() {
    java.lang.Object ref = shorthandDeprecated_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      shorthandDeprecated_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
   * </pre>
   *
   * <code>string shorthand_deprecated = 7 [json_name = "shorthandDeprecated"];</code>
   * @return The bytes for shorthandDeprecated.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getShorthandDeprecatedBytes() {
    java.lang.Object ref = shorthandDeprecated_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      shorthandDeprecated_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HIDDEN_FIELD_NUMBER = 8;
  private boolean hidden_ = false;
  /**
   * <pre>
   * hidden hides the flag from help/usage text
   * </pre>
   *
   * <code>bool hidden = 8 [json_name = "hidden"];</code>
   * @return The hidden.
   */
  @java.lang.Override
  public boolean getHidden() {
    return hidden_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shorthand_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, shorthand_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(usage_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, usage_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(defaultValue_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, defaultValue_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deprecated_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, deprecated_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shorthandDeprecated_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, shorthandDeprecated_);
    }
    if (hidden_ != false) {
      output.writeBool(8, hidden_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shorthand_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, shorthand_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(usage_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, usage_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(defaultValue_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, defaultValue_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deprecated_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, deprecated_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shorthandDeprecated_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, shorthandDeprecated_);
    }
    if (hidden_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, hidden_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.cosmos.autocli.v1.FlagOptions)) {
      return super.equals(obj);
    }
    com.cosmos.autocli.v1.FlagOptions other = (com.cosmos.autocli.v1.FlagOptions) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getShorthand()
        .equals(other.getShorthand())) return false;
    if (!getUsage()
        .equals(other.getUsage())) return false;
    if (!getDefaultValue()
        .equals(other.getDefaultValue())) return false;
    if (!getDeprecated()
        .equals(other.getDeprecated())) return false;
    if (!getShorthandDeprecated()
        .equals(other.getShorthandDeprecated())) return false;
    if (getHidden()
        != other.getHidden()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + SHORTHAND_FIELD_NUMBER;
    hash = (53 * hash) + getShorthand().hashCode();
    hash = (37 * hash) + USAGE_FIELD_NUMBER;
    hash = (53 * hash) + getUsage().hashCode();
    hash = (37 * hash) + DEFAULT_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + getDefaultValue().hashCode();
    hash = (37 * hash) + DEPRECATED_FIELD_NUMBER;
    hash = (53 * hash) + getDeprecated().hashCode();
    hash = (37 * hash) + SHORTHAND_DEPRECATED_FIELD_NUMBER;
    hash = (53 * hash) + getShorthandDeprecated().hashCode();
    hash = (37 * hash) + HIDDEN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getHidden());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.cosmos.autocli.v1.FlagOptions parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.autocli.v1.FlagOptions parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.autocli.v1.FlagOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.autocli.v1.FlagOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.autocli.v1.FlagOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.autocli.v1.FlagOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.autocli.v1.FlagOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.cosmos.autocli.v1.FlagOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.cosmos.autocli.v1.FlagOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.cosmos.autocli.v1.FlagOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.cosmos.autocli.v1.FlagOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.cosmos.autocli.v1.FlagOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.cosmos.autocli.v1.FlagOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * FlagOptions are options for flags generated from rpc request fields.
   * By default, all request fields are configured as flags based on the
   * kebab-case name of the field. Fields can be turned into positional arguments
   * instead by using RpcCommandOptions.positional_args.
   * </pre>
   *
   * Protobuf type {@code cosmos.autocli.v1.FlagOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:cosmos.autocli.v1.FlagOptions)
      com.cosmos.autocli.v1.FlagOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cosmos.autocli.v1.OptionsProto.internal_static_cosmos_autocli_v1_FlagOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cosmos.autocli.v1.OptionsProto.internal_static_cosmos_autocli_v1_FlagOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cosmos.autocli.v1.FlagOptions.class, com.cosmos.autocli.v1.FlagOptions.Builder.class);
    }

    // Construct using com.cosmos.autocli.v1.FlagOptions.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      shorthand_ = "";
      usage_ = "";
      defaultValue_ = "";
      deprecated_ = "";
      shorthandDeprecated_ = "";
      hidden_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.cosmos.autocli.v1.OptionsProto.internal_static_cosmos_autocli_v1_FlagOptions_descriptor;
    }

    @java.lang.Override
    public com.cosmos.autocli.v1.FlagOptions getDefaultInstanceForType() {
      return com.cosmos.autocli.v1.FlagOptions.getDefaultInstance();
    }

    @java.lang.Override
    public com.cosmos.autocli.v1.FlagOptions build() {
      com.cosmos.autocli.v1.FlagOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.cosmos.autocli.v1.FlagOptions buildPartial() {
      com.cosmos.autocli.v1.FlagOptions result = new com.cosmos.autocli.v1.FlagOptions(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.cosmos.autocli.v1.FlagOptions result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.shorthand_ = shorthand_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.usage_ = usage_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.defaultValue_ = defaultValue_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.deprecated_ = deprecated_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.shorthandDeprecated_ = shorthandDeprecated_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.hidden_ = hidden_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.cosmos.autocli.v1.FlagOptions) {
        return mergeFrom((com.cosmos.autocli.v1.FlagOptions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.cosmos.autocli.v1.FlagOptions other) {
      if (other == com.cosmos.autocli.v1.FlagOptions.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getShorthand().isEmpty()) {
        shorthand_ = other.shorthand_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getUsage().isEmpty()) {
        usage_ = other.usage_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getDefaultValue().isEmpty()) {
        defaultValue_ = other.defaultValue_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getDeprecated().isEmpty()) {
        deprecated_ = other.deprecated_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (!other.getShorthandDeprecated().isEmpty()) {
        shorthandDeprecated_ = other.shorthandDeprecated_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (other.getHidden() != false) {
        setHidden(other.getHidden());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              shorthand_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              usage_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              defaultValue_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 50: {
              deprecated_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 50
            case 58: {
              shorthandDeprecated_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 58
            case 64: {
              hidden_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 64
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * name is an alternate name to use for the field flag.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * name is an alternate name to use for the field flag.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * name is an alternate name to use for the field flag.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * name is an alternate name to use for the field flag.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * name is an alternate name to use for the field flag.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object shorthand_ = "";
    /**
     * <pre>
     * shorthand is a one-letter abbreviated flag.
     * </pre>
     *
     * <code>string shorthand = 2 [json_name = "shorthand"];</code>
     * @return The shorthand.
     */
    public java.lang.String getShorthand() {
      java.lang.Object ref = shorthand_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        shorthand_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * shorthand is a one-letter abbreviated flag.
     * </pre>
     *
     * <code>string shorthand = 2 [json_name = "shorthand"];</code>
     * @return The bytes for shorthand.
     */
    public com.google.protobuf.ByteString
        getShorthandBytes() {
      java.lang.Object ref = shorthand_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shorthand_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * shorthand is a one-letter abbreviated flag.
     * </pre>
     *
     * <code>string shorthand = 2 [json_name = "shorthand"];</code>
     * @param value The shorthand to set.
     * @return This builder for chaining.
     */
    public Builder setShorthand(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      shorthand_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * shorthand is a one-letter abbreviated flag.
     * </pre>
     *
     * <code>string shorthand = 2 [json_name = "shorthand"];</code>
     * @return This builder for chaining.
     */
    public Builder clearShorthand() {
      shorthand_ = getDefaultInstance().getShorthand();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * shorthand is a one-letter abbreviated flag.
     * </pre>
     *
     * <code>string shorthand = 2 [json_name = "shorthand"];</code>
     * @param value The bytes for shorthand to set.
     * @return This builder for chaining.
     */
    public Builder setShorthandBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      shorthand_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object usage_ = "";
    /**
     * <pre>
     * usage is the help message.
     * </pre>
     *
     * <code>string usage = 3 [json_name = "usage"];</code>
     * @return The usage.
     */
    public java.lang.String getUsage() {
      java.lang.Object ref = usage_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        usage_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * usage is the help message.
     * </pre>
     *
     * <code>string usage = 3 [json_name = "usage"];</code>
     * @return The bytes for usage.
     */
    public com.google.protobuf.ByteString
        getUsageBytes() {
      java.lang.Object ref = usage_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        usage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * usage is the help message.
     * </pre>
     *
     * <code>string usage = 3 [json_name = "usage"];</code>
     * @param value The usage to set.
     * @return This builder for chaining.
     */
    public Builder setUsage(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      usage_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * usage is the help message.
     * </pre>
     *
     * <code>string usage = 3 [json_name = "usage"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUsage() {
      usage_ = getDefaultInstance().getUsage();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * usage is the help message.
     * </pre>
     *
     * <code>string usage = 3 [json_name = "usage"];</code>
     * @param value The bytes for usage to set.
     * @return This builder for chaining.
     */
    public Builder setUsageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      usage_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object defaultValue_ = "";
    /**
     * <pre>
     * default_value is the default value as text.
     * </pre>
     *
     * <code>string default_value = 4 [json_name = "defaultValue"];</code>
     * @return The defaultValue.
     */
    public java.lang.String getDefaultValue() {
      java.lang.Object ref = defaultValue_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        defaultValue_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * default_value is the default value as text.
     * </pre>
     *
     * <code>string default_value = 4 [json_name = "defaultValue"];</code>
     * @return The bytes for defaultValue.
     */
    public com.google.protobuf.ByteString
        getDefaultValueBytes() {
      java.lang.Object ref = defaultValue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        defaultValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * default_value is the default value as text.
     * </pre>
     *
     * <code>string default_value = 4 [json_name = "defaultValue"];</code>
     * @param value The defaultValue to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultValue(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      defaultValue_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * default_value is the default value as text.
     * </pre>
     *
     * <code>string default_value = 4 [json_name = "defaultValue"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDefaultValue() {
      defaultValue_ = getDefaultInstance().getDefaultValue();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * default_value is the default value as text.
     * </pre>
     *
     * <code>string default_value = 4 [json_name = "defaultValue"];</code>
     * @param value The bytes for defaultValue to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      defaultValue_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object deprecated_ = "";
    /**
     * <pre>
     * deprecated is the usage text to show if this flag is deprecated.
     * </pre>
     *
     * <code>string deprecated = 6 [json_name = "deprecated"];</code>
     * @return The deprecated.
     */
    public java.lang.String getDeprecated() {
      java.lang.Object ref = deprecated_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deprecated_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * deprecated is the usage text to show if this flag is deprecated.
     * </pre>
     *
     * <code>string deprecated = 6 [json_name = "deprecated"];</code>
     * @return The bytes for deprecated.
     */
    public com.google.protobuf.ByteString
        getDeprecatedBytes() {
      java.lang.Object ref = deprecated_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deprecated_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * deprecated is the usage text to show if this flag is deprecated.
     * </pre>
     *
     * <code>string deprecated = 6 [json_name = "deprecated"];</code>
     * @param value The deprecated to set.
     * @return This builder for chaining.
     */
    public Builder setDeprecated(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      deprecated_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * deprecated is the usage text to show if this flag is deprecated.
     * </pre>
     *
     * <code>string deprecated = 6 [json_name = "deprecated"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDeprecated() {
      deprecated_ = getDefaultInstance().getDeprecated();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * deprecated is the usage text to show if this flag is deprecated.
     * </pre>
     *
     * <code>string deprecated = 6 [json_name = "deprecated"];</code>
     * @param value The bytes for deprecated to set.
     * @return This builder for chaining.
     */
    public Builder setDeprecatedBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      deprecated_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private java.lang.Object shorthandDeprecated_ = "";
    /**
     * <pre>
     * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
     * </pre>
     *
     * <code>string shorthand_deprecated = 7 [json_name = "shorthandDeprecated"];</code>
     * @return The shorthandDeprecated.
     */
    public java.lang.String getShorthandDeprecated() {
      java.lang.Object ref = shorthandDeprecated_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        shorthandDeprecated_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
     * </pre>
     *
     * <code>string shorthand_deprecated = 7 [json_name = "shorthandDeprecated"];</code>
     * @return The bytes for shorthandDeprecated.
     */
    public com.google.protobuf.ByteString
        getShorthandDeprecatedBytes() {
      java.lang.Object ref = shorthandDeprecated_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shorthandDeprecated_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
     * </pre>
     *
     * <code>string shorthand_deprecated = 7 [json_name = "shorthandDeprecated"];</code>
     * @param value The shorthandDeprecated to set.
     * @return This builder for chaining.
     */
    public Builder setShorthandDeprecated(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      shorthandDeprecated_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
     * </pre>
     *
     * <code>string shorthand_deprecated = 7 [json_name = "shorthandDeprecated"];</code>
     * @return This builder for chaining.
     */
    public Builder clearShorthandDeprecated() {
      shorthandDeprecated_ = getDefaultInstance().getShorthandDeprecated();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
     * </pre>
     *
     * <code>string shorthand_deprecated = 7 [json_name = "shorthandDeprecated"];</code>
     * @param value The bytes for shorthandDeprecated to set.
     * @return This builder for chaining.
     */
    public Builder setShorthandDeprecatedBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      shorthandDeprecated_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private boolean hidden_ ;
    /**
     * <pre>
     * hidden hides the flag from help/usage text
     * </pre>
     *
     * <code>bool hidden = 8 [json_name = "hidden"];</code>
     * @return The hidden.
     */
    @java.lang.Override
    public boolean getHidden() {
      return hidden_;
    }
    /**
     * <pre>
     * hidden hides the flag from help/usage text
     * </pre>
     *
     * <code>bool hidden = 8 [json_name = "hidden"];</code>
     * @param value The hidden to set.
     * @return This builder for chaining.
     */
    public Builder setHidden(boolean value) {

      hidden_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * hidden hides the flag from help/usage text
     * </pre>
     *
     * <code>bool hidden = 8 [json_name = "hidden"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHidden() {
      bitField0_ = (bitField0_ & ~0x00000040);
      hidden_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:cosmos.autocli.v1.FlagOptions)
  }

  // @@protoc_insertion_point(class_scope:cosmos.autocli.v1.FlagOptions)
  private static final com.cosmos.autocli.v1.FlagOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.cosmos.autocli.v1.FlagOptions();
  }

  public static com.cosmos.autocli.v1.FlagOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FlagOptions>
      PARSER = new com.google.protobuf.AbstractParser<FlagOptions>() {
    @java.lang.Override
    public FlagOptions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<FlagOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FlagOptions> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.cosmos.autocli.v1.FlagOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


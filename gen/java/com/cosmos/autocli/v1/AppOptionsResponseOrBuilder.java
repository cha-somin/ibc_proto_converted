// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/autocli/v1/query.proto

package com.cosmos.autocli.v1;

public interface AppOptionsResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmos.autocli.v1.AppOptionsResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * module_options is a map of module name to autocli module options.
   * </pre>
   *
   * <code>map&lt;string, .cosmos.autocli.v1.ModuleOptions&gt; module_options = 1 [json_name = "moduleOptions"];</code>
   */
  int getModuleOptionsCount();
  /**
   * <pre>
   * module_options is a map of module name to autocli module options.
   * </pre>
   *
   * <code>map&lt;string, .cosmos.autocli.v1.ModuleOptions&gt; module_options = 1 [json_name = "moduleOptions"];</code>
   */
  boolean containsModuleOptions(
      java.lang.String key);
  /**
   * Use {@link #getModuleOptionsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.cosmos.autocli.v1.ModuleOptions>
  getModuleOptions();
  /**
   * <pre>
   * module_options is a map of module name to autocli module options.
   * </pre>
   *
   * <code>map&lt;string, .cosmos.autocli.v1.ModuleOptions&gt; module_options = 1 [json_name = "moduleOptions"];</code>
   */
  java.util.Map<java.lang.String, com.cosmos.autocli.v1.ModuleOptions>
  getModuleOptionsMap();
  /**
   * <pre>
   * module_options is a map of module name to autocli module options.
   * </pre>
   *
   * <code>map&lt;string, .cosmos.autocli.v1.ModuleOptions&gt; module_options = 1 [json_name = "moduleOptions"];</code>
   */
  /* nullable */
com.cosmos.autocli.v1.ModuleOptions getModuleOptionsOrDefault(
      java.lang.String key,
      /* nullable */
com.cosmos.autocli.v1.ModuleOptions defaultValue);
  /**
   * <pre>
   * module_options is a map of module name to autocli module options.
   * </pre>
   *
   * <code>map&lt;string, .cosmos.autocli.v1.ModuleOptions&gt; module_options = 1 [json_name = "moduleOptions"];</code>
   */
  com.cosmos.autocli.v1.ModuleOptions getModuleOptionsOrThrow(
      java.lang.String key);
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/autocli/v1/options.proto

package com.cosmos.autocli.v1;

/**
 * <pre>
 * RpcCommandOptions specifies options for commands generated from protobuf
 * rpc methods.
 * </pre>
 *
 * Protobuf type {@code cosmos.autocli.v1.RpcCommandOptions}
 */
public final class RpcCommandOptions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:cosmos.autocli.v1.RpcCommandOptions)
    RpcCommandOptionsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RpcCommandOptions.newBuilder() to construct.
  private RpcCommandOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RpcCommandOptions() {
    rpcMethod_ = "";
    use_ = "";
    long_ = "";
    short_ = "";
    example_ = "";
    alias_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    suggestFor_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    deprecated_ = "";
    version_ = "";
    positionalArgs_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RpcCommandOptions();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.cosmos.autocli.v1.OptionsProto.internal_static_cosmos_autocli_v1_RpcCommandOptions_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 10:
        return internalGetFlagOptions();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.cosmos.autocli.v1.OptionsProto.internal_static_cosmos_autocli_v1_RpcCommandOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.cosmos.autocli.v1.RpcCommandOptions.class, com.cosmos.autocli.v1.RpcCommandOptions.Builder.class);
  }

  public static final int RPC_METHOD_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object rpcMethod_ = "";
  /**
   * <pre>
   * rpc_method is short name of the protobuf rpc method that this command is
   * generated from.
   * </pre>
   *
   * <code>string rpc_method = 1 [json_name = "rpcMethod"];</code>
   * @return The rpcMethod.
   */
  @java.lang.Override
  public java.lang.String getRpcMethod() {
    java.lang.Object ref = rpcMethod_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      rpcMethod_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * rpc_method is short name of the protobuf rpc method that this command is
   * generated from.
   * </pre>
   *
   * <code>string rpc_method = 1 [json_name = "rpcMethod"];</code>
   * @return The bytes for rpcMethod.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRpcMethodBytes() {
    java.lang.Object ref = rpcMethod_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      rpcMethod_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object use_ = "";
  /**
   * <pre>
   * use is the one-line usage method. It also allows specifying an alternate
   * name for the command as the first word of the usage text.
   *
   * By default the name of an rpc command is the kebab-case short name of the
   * rpc method.
   * </pre>
   *
   * <code>string use = 2 [json_name = "use"];</code>
   * @return The use.
   */
  @java.lang.Override
  public java.lang.String getUse() {
    java.lang.Object ref = use_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      use_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * use is the one-line usage method. It also allows specifying an alternate
   * name for the command as the first word of the usage text.
   *
   * By default the name of an rpc command is the kebab-case short name of the
   * rpc method.
   * </pre>
   *
   * <code>string use = 2 [json_name = "use"];</code>
   * @return The bytes for use.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUseBytes() {
    java.lang.Object ref = use_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      use_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LONG_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object long_ = "";
  /**
   * <pre>
   * long is the long message shown in the 'help &lt;this-command&gt;' output.
   * </pre>
   *
   * <code>string long = 3 [json_name = "long"];</code>
   * @return The long.
   */
  @java.lang.Override
  public java.lang.String getLong() {
    java.lang.Object ref = long_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      long_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * long is the long message shown in the 'help &lt;this-command&gt;' output.
   * </pre>
   *
   * <code>string long = 3 [json_name = "long"];</code>
   * @return The bytes for long.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLongBytes() {
    java.lang.Object ref = long_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      long_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SHORT_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object short_ = "";
  /**
   * <pre>
   * short is the short description shown in the 'help' output.
   * </pre>
   *
   * <code>string short = 4 [json_name = "short"];</code>
   * @return The short.
   */
  @java.lang.Override
  public java.lang.String getShort() {
    java.lang.Object ref = short_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      short_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * short is the short description shown in the 'help' output.
   * </pre>
   *
   * <code>string short = 4 [json_name = "short"];</code>
   * @return The bytes for short.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getShortBytes() {
    java.lang.Object ref = short_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      short_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXAMPLE_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object example_ = "";
  /**
   * <pre>
   * example is examples of how to use the command.
   * </pre>
   *
   * <code>string example = 5 [json_name = "example"];</code>
   * @return The example.
   */
  @java.lang.Override
  public java.lang.String getExample() {
    java.lang.Object ref = example_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      example_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * example is examples of how to use the command.
   * </pre>
   *
   * <code>string example = 5 [json_name = "example"];</code>
   * @return The bytes for example.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getExampleBytes() {
    java.lang.Object ref = example_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      example_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ALIAS_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList alias_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * alias is an array of aliases that can be used instead of the first word in Use.
   * </pre>
   *
   * <code>repeated string alias = 6 [json_name = "alias"];</code>
   * @return A list containing the alias.
   */
  public com.google.protobuf.ProtocolStringList
      getAliasList() {
    return alias_;
  }
  /**
   * <pre>
   * alias is an array of aliases that can be used instead of the first word in Use.
   * </pre>
   *
   * <code>repeated string alias = 6 [json_name = "alias"];</code>
   * @return The count of alias.
   */
  public int getAliasCount() {
    return alias_.size();
  }
  /**
   * <pre>
   * alias is an array of aliases that can be used instead of the first word in Use.
   * </pre>
   *
   * <code>repeated string alias = 6 [json_name = "alias"];</code>
   * @param index The index of the element to return.
   * @return The alias at the given index.
   */
  public java.lang.String getAlias(int index) {
    return alias_.get(index);
  }
  /**
   * <pre>
   * alias is an array of aliases that can be used instead of the first word in Use.
   * </pre>
   *
   * <code>repeated string alias = 6 [json_name = "alias"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the alias at the given index.
   */
  public com.google.protobuf.ByteString
      getAliasBytes(int index) {
    return alias_.getByteString(index);
  }

  public static final int SUGGEST_FOR_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList suggestFor_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * suggest_for is an array of command names for which this command will be suggested -
   * similar to aliases but only suggests.
   * </pre>
   *
   * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
   * @return A list containing the suggestFor.
   */
  public com.google.protobuf.ProtocolStringList
      getSuggestForList() {
    return suggestFor_;
  }
  /**
   * <pre>
   * suggest_for is an array of command names for which this command will be suggested -
   * similar to aliases but only suggests.
   * </pre>
   *
   * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
   * @return The count of suggestFor.
   */
  public int getSuggestForCount() {
    return suggestFor_.size();
  }
  /**
   * <pre>
   * suggest_for is an array of command names for which this command will be suggested -
   * similar to aliases but only suggests.
   * </pre>
   *
   * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
   * @param index The index of the element to return.
   * @return The suggestFor at the given index.
   */
  public java.lang.String getSuggestFor(int index) {
    return suggestFor_.get(index);
  }
  /**
   * <pre>
   * suggest_for is an array of command names for which this command will be suggested -
   * similar to aliases but only suggests.
   * </pre>
   *
   * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the suggestFor at the given index.
   */
  public com.google.protobuf.ByteString
      getSuggestForBytes(int index) {
    return suggestFor_.getByteString(index);
  }

  public static final int DEPRECATED_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object deprecated_ = "";
  /**
   * <pre>
   * deprecated defines, if this command is deprecated and should print this string when used.
   * </pre>
   *
   * <code>string deprecated = 8 [json_name = "deprecated"];</code>
   * @return The deprecated.
   */
  @java.lang.Override
  public java.lang.String getDeprecated() {
    java.lang.Object ref = deprecated_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      deprecated_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * deprecated defines, if this command is deprecated and should print this string when used.
   * </pre>
   *
   * <code>string deprecated = 8 [json_name = "deprecated"];</code>
   * @return The bytes for deprecated.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDeprecatedBytes() {
    java.lang.Object ref = deprecated_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      deprecated_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VERSION_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private volatile java.lang.Object version_ = "";
  /**
   * <pre>
   * version defines the version for this command. If this value is non-empty and the command does not
   * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
   * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
   * command does not define one.
   * </pre>
   *
   * <code>string version = 9 [json_name = "version"];</code>
   * @return The version.
   */
  @java.lang.Override
  public java.lang.String getVersion() {
    java.lang.Object ref = version_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      version_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * version defines the version for this command. If this value is non-empty and the command does not
   * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
   * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
   * command does not define one.
   * </pre>
   *
   * <code>string version = 9 [json_name = "version"];</code>
   * @return The bytes for version.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getVersionBytes() {
    java.lang.Object ref = version_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      version_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FLAG_OPTIONS_FIELD_NUMBER = 10;
  private static final class FlagOptionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.cosmos.autocli.v1.FlagOptions> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.cosmos.autocli.v1.FlagOptions>newDefaultInstance(
                com.cosmos.autocli.v1.OptionsProto.internal_static_cosmos_autocli_v1_RpcCommandOptions_FlagOptionsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.cosmos.autocli.v1.FlagOptions.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, com.cosmos.autocli.v1.FlagOptions> flagOptions_;
  private com.google.protobuf.MapField<java.lang.String, com.cosmos.autocli.v1.FlagOptions>
  internalGetFlagOptions() {
    if (flagOptions_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          FlagOptionsDefaultEntryHolder.defaultEntry);
    }
    return flagOptions_;
  }
  public int getFlagOptionsCount() {
    return internalGetFlagOptions().getMap().size();
  }
  /**
   * <pre>
   * flag_options are options for flags generated from rpc request fields.
   * By default all request fields are configured as flags. They can
   * also be configured as positional args instead using positional_args.
   * </pre>
   *
   * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
   */
  @java.lang.Override
  public boolean containsFlagOptions(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetFlagOptions().getMap().containsKey(key);
  }
  /**
   * Use {@link #getFlagOptionsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.cosmos.autocli.v1.FlagOptions> getFlagOptions() {
    return getFlagOptionsMap();
  }
  /**
   * <pre>
   * flag_options are options for flags generated from rpc request fields.
   * By default all request fields are configured as flags. They can
   * also be configured as positional args instead using positional_args.
   * </pre>
   *
   * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, com.cosmos.autocli.v1.FlagOptions> getFlagOptionsMap() {
    return internalGetFlagOptions().getMap();
  }
  /**
   * <pre>
   * flag_options are options for flags generated from rpc request fields.
   * By default all request fields are configured as flags. They can
   * also be configured as positional args instead using positional_args.
   * </pre>
   *
   * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
   */
  @java.lang.Override
  public /* nullable */
com.cosmos.autocli.v1.FlagOptions getFlagOptionsOrDefault(
      java.lang.String key,
      /* nullable */
com.cosmos.autocli.v1.FlagOptions defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.cosmos.autocli.v1.FlagOptions> map =
        internalGetFlagOptions().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * flag_options are options for flags generated from rpc request fields.
   * By default all request fields are configured as flags. They can
   * also be configured as positional args instead using positional_args.
   * </pre>
   *
   * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
   */
  @java.lang.Override
  public com.cosmos.autocli.v1.FlagOptions getFlagOptionsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.cosmos.autocli.v1.FlagOptions> map =
        internalGetFlagOptions().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int POSITIONAL_ARGS_FIELD_NUMBER = 11;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.autocli.v1.PositionalArgDescriptor> positionalArgs_;
  /**
   * <pre>
   * positional_args specifies positional arguments for the command.
   * </pre>
   *
   * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
   */
  @java.lang.Override
  public java.util.List<com.cosmos.autocli.v1.PositionalArgDescriptor> getPositionalArgsList() {
    return positionalArgs_;
  }
  /**
   * <pre>
   * positional_args specifies positional arguments for the command.
   * </pre>
   *
   * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.cosmos.autocli.v1.PositionalArgDescriptorOrBuilder> 
      getPositionalArgsOrBuilderList() {
    return positionalArgs_;
  }
  /**
   * <pre>
   * positional_args specifies positional arguments for the command.
   * </pre>
   *
   * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
   */
  @java.lang.Override
  public int getPositionalArgsCount() {
    return positionalArgs_.size();
  }
  /**
   * <pre>
   * positional_args specifies positional arguments for the command.
   * </pre>
   *
   * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
   */
  @java.lang.Override
  public com.cosmos.autocli.v1.PositionalArgDescriptor getPositionalArgs(int index) {
    return positionalArgs_.get(index);
  }
  /**
   * <pre>
   * positional_args specifies positional arguments for the command.
   * </pre>
   *
   * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
   */
  @java.lang.Override
  public com.cosmos.autocli.v1.PositionalArgDescriptorOrBuilder getPositionalArgsOrBuilder(
      int index) {
    return positionalArgs_.get(index);
  }

  public static final int SKIP_FIELD_NUMBER = 12;
  private boolean skip_ = false;
  /**
   * <pre>
   * skip specifies whether to skip this rpc method when generating commands.
   * </pre>
   *
   * <code>bool skip = 12 [json_name = "skip"];</code>
   * @return The skip.
   */
  @java.lang.Override
  public boolean getSkip() {
    return skip_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(rpcMethod_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rpcMethod_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(use_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, use_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(long_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, long_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(short_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, short_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(example_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, example_);
    }
    for (int i = 0; i < alias_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, alias_.getRaw(i));
    }
    for (int i = 0; i < suggestFor_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, suggestFor_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deprecated_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, deprecated_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, version_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetFlagOptions(),
        FlagOptionsDefaultEntryHolder.defaultEntry,
        10);
    for (int i = 0; i < positionalArgs_.size(); i++) {
      output.writeMessage(11, positionalArgs_.get(i));
    }
    if (skip_ != false) {
      output.writeBool(12, skip_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(rpcMethod_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rpcMethod_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(use_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, use_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(long_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, long_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(short_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, short_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(example_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, example_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < alias_.size(); i++) {
        dataSize += computeStringSizeNoTag(alias_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getAliasList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < suggestFor_.size(); i++) {
        dataSize += computeStringSizeNoTag(suggestFor_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getSuggestForList().size();
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deprecated_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, deprecated_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, version_);
    }
    for (java.util.Map.Entry<java.lang.String, com.cosmos.autocli.v1.FlagOptions> entry
         : internalGetFlagOptions().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.cosmos.autocli.v1.FlagOptions>
      flagOptions__ = FlagOptionsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, flagOptions__);
    }
    for (int i = 0; i < positionalArgs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, positionalArgs_.get(i));
    }
    if (skip_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(12, skip_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.cosmos.autocli.v1.RpcCommandOptions)) {
      return super.equals(obj);
    }
    com.cosmos.autocli.v1.RpcCommandOptions other = (com.cosmos.autocli.v1.RpcCommandOptions) obj;

    if (!getRpcMethod()
        .equals(other.getRpcMethod())) return false;
    if (!getUse()
        .equals(other.getUse())) return false;
    if (!getLong()
        .equals(other.getLong())) return false;
    if (!getShort()
        .equals(other.getShort())) return false;
    if (!getExample()
        .equals(other.getExample())) return false;
    if (!getAliasList()
        .equals(other.getAliasList())) return false;
    if (!getSuggestForList()
        .equals(other.getSuggestForList())) return false;
    if (!getDeprecated()
        .equals(other.getDeprecated())) return false;
    if (!getVersion()
        .equals(other.getVersion())) return false;
    if (!internalGetFlagOptions().equals(
        other.internalGetFlagOptions())) return false;
    if (!getPositionalArgsList()
        .equals(other.getPositionalArgsList())) return false;
    if (getSkip()
        != other.getSkip()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + RPC_METHOD_FIELD_NUMBER;
    hash = (53 * hash) + getRpcMethod().hashCode();
    hash = (37 * hash) + USE_FIELD_NUMBER;
    hash = (53 * hash) + getUse().hashCode();
    hash = (37 * hash) + LONG_FIELD_NUMBER;
    hash = (53 * hash) + getLong().hashCode();
    hash = (37 * hash) + SHORT_FIELD_NUMBER;
    hash = (53 * hash) + getShort().hashCode();
    hash = (37 * hash) + EXAMPLE_FIELD_NUMBER;
    hash = (53 * hash) + getExample().hashCode();
    if (getAliasCount() > 0) {
      hash = (37 * hash) + ALIAS_FIELD_NUMBER;
      hash = (53 * hash) + getAliasList().hashCode();
    }
    if (getSuggestForCount() > 0) {
      hash = (37 * hash) + SUGGEST_FOR_FIELD_NUMBER;
      hash = (53 * hash) + getSuggestForList().hashCode();
    }
    hash = (37 * hash) + DEPRECATED_FIELD_NUMBER;
    hash = (53 * hash) + getDeprecated().hashCode();
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getVersion().hashCode();
    if (!internalGetFlagOptions().getMap().isEmpty()) {
      hash = (37 * hash) + FLAG_OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetFlagOptions().hashCode();
    }
    if (getPositionalArgsCount() > 0) {
      hash = (37 * hash) + POSITIONAL_ARGS_FIELD_NUMBER;
      hash = (53 * hash) + getPositionalArgsList().hashCode();
    }
    hash = (37 * hash) + SKIP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSkip());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.cosmos.autocli.v1.RpcCommandOptions parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.autocli.v1.RpcCommandOptions parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.autocli.v1.RpcCommandOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.autocli.v1.RpcCommandOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.autocli.v1.RpcCommandOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.cosmos.autocli.v1.RpcCommandOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.cosmos.autocli.v1.RpcCommandOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.cosmos.autocli.v1.RpcCommandOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.cosmos.autocli.v1.RpcCommandOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.cosmos.autocli.v1.RpcCommandOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.cosmos.autocli.v1.RpcCommandOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.cosmos.autocli.v1.RpcCommandOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.cosmos.autocli.v1.RpcCommandOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * RpcCommandOptions specifies options for commands generated from protobuf
   * rpc methods.
   * </pre>
   *
   * Protobuf type {@code cosmos.autocli.v1.RpcCommandOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:cosmos.autocli.v1.RpcCommandOptions)
      com.cosmos.autocli.v1.RpcCommandOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cosmos.autocli.v1.OptionsProto.internal_static_cosmos_autocli_v1_RpcCommandOptions_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 10:
          return internalGetFlagOptions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 10:
          return internalGetMutableFlagOptions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cosmos.autocli.v1.OptionsProto.internal_static_cosmos_autocli_v1_RpcCommandOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cosmos.autocli.v1.RpcCommandOptions.class, com.cosmos.autocli.v1.RpcCommandOptions.Builder.class);
    }

    // Construct using com.cosmos.autocli.v1.RpcCommandOptions.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      rpcMethod_ = "";
      use_ = "";
      long_ = "";
      short_ = "";
      example_ = "";
      alias_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      suggestFor_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      deprecated_ = "";
      version_ = "";
      internalGetMutableFlagOptions().clear();
      if (positionalArgsBuilder_ == null) {
        positionalArgs_ = java.util.Collections.emptyList();
      } else {
        positionalArgs_ = null;
        positionalArgsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      skip_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.cosmos.autocli.v1.OptionsProto.internal_static_cosmos_autocli_v1_RpcCommandOptions_descriptor;
    }

    @java.lang.Override
    public com.cosmos.autocli.v1.RpcCommandOptions getDefaultInstanceForType() {
      return com.cosmos.autocli.v1.RpcCommandOptions.getDefaultInstance();
    }

    @java.lang.Override
    public com.cosmos.autocli.v1.RpcCommandOptions build() {
      com.cosmos.autocli.v1.RpcCommandOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.cosmos.autocli.v1.RpcCommandOptions buildPartial() {
      com.cosmos.autocli.v1.RpcCommandOptions result = new com.cosmos.autocli.v1.RpcCommandOptions(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.cosmos.autocli.v1.RpcCommandOptions result) {
      if (positionalArgsBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0)) {
          positionalArgs_ = java.util.Collections.unmodifiableList(positionalArgs_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.positionalArgs_ = positionalArgs_;
      } else {
        result.positionalArgs_ = positionalArgsBuilder_.build();
      }
    }

    private void buildPartial0(com.cosmos.autocli.v1.RpcCommandOptions result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.rpcMethod_ = rpcMethod_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.use_ = use_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.long_ = long_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.short_ = short_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.example_ = example_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        alias_.makeImmutable();
        result.alias_ = alias_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        suggestFor_.makeImmutable();
        result.suggestFor_ = suggestFor_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.deprecated_ = deprecated_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.version_ = version_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.flagOptions_ = internalGetFlagOptions();
        result.flagOptions_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.skip_ = skip_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.cosmos.autocli.v1.RpcCommandOptions) {
        return mergeFrom((com.cosmos.autocli.v1.RpcCommandOptions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.cosmos.autocli.v1.RpcCommandOptions other) {
      if (other == com.cosmos.autocli.v1.RpcCommandOptions.getDefaultInstance()) return this;
      if (!other.getRpcMethod().isEmpty()) {
        rpcMethod_ = other.rpcMethod_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getUse().isEmpty()) {
        use_ = other.use_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getLong().isEmpty()) {
        long_ = other.long_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getShort().isEmpty()) {
        short_ = other.short_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getExample().isEmpty()) {
        example_ = other.example_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (!other.alias_.isEmpty()) {
        if (alias_.isEmpty()) {
          alias_ = other.alias_;
          bitField0_ |= 0x00000020;
        } else {
          ensureAliasIsMutable();
          alias_.addAll(other.alias_);
        }
        onChanged();
      }
      if (!other.suggestFor_.isEmpty()) {
        if (suggestFor_.isEmpty()) {
          suggestFor_ = other.suggestFor_;
          bitField0_ |= 0x00000040;
        } else {
          ensureSuggestForIsMutable();
          suggestFor_.addAll(other.suggestFor_);
        }
        onChanged();
      }
      if (!other.getDeprecated().isEmpty()) {
        deprecated_ = other.deprecated_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (!other.getVersion().isEmpty()) {
        version_ = other.version_;
        bitField0_ |= 0x00000100;
        onChanged();
      }
      internalGetMutableFlagOptions().mergeFrom(
          other.internalGetFlagOptions());
      bitField0_ |= 0x00000200;
      if (positionalArgsBuilder_ == null) {
        if (!other.positionalArgs_.isEmpty()) {
          if (positionalArgs_.isEmpty()) {
            positionalArgs_ = other.positionalArgs_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensurePositionalArgsIsMutable();
            positionalArgs_.addAll(other.positionalArgs_);
          }
          onChanged();
        }
      } else {
        if (!other.positionalArgs_.isEmpty()) {
          if (positionalArgsBuilder_.isEmpty()) {
            positionalArgsBuilder_.dispose();
            positionalArgsBuilder_ = null;
            positionalArgs_ = other.positionalArgs_;
            bitField0_ = (bitField0_ & ~0x00000400);
            positionalArgsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPositionalArgsFieldBuilder() : null;
          } else {
            positionalArgsBuilder_.addAllMessages(other.positionalArgs_);
          }
        }
      }
      if (other.getSkip() != false) {
        setSkip(other.getSkip());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              rpcMethod_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              use_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              long_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              short_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              example_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureAliasIsMutable();
              alias_.add(s);
              break;
            } // case 50
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureSuggestForIsMutable();
              suggestFor_.add(s);
              break;
            } // case 58
            case 66: {
              deprecated_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              version_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            case 82: {
              com.google.protobuf.MapEntry<java.lang.String, com.cosmos.autocli.v1.FlagOptions>
              flagOptions__ = input.readMessage(
                  FlagOptionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableFlagOptions().getMutableMap().put(
                  flagOptions__.getKey(), flagOptions__.getValue());
              bitField0_ |= 0x00000200;
              break;
            } // case 82
            case 90: {
              com.cosmos.autocli.v1.PositionalArgDescriptor m =
                  input.readMessage(
                      com.cosmos.autocli.v1.PositionalArgDescriptor.parser(),
                      extensionRegistry);
              if (positionalArgsBuilder_ == null) {
                ensurePositionalArgsIsMutable();
                positionalArgs_.add(m);
              } else {
                positionalArgsBuilder_.addMessage(m);
              }
              break;
            } // case 90
            case 96: {
              skip_ = input.readBool();
              bitField0_ |= 0x00000800;
              break;
            } // case 96
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object rpcMethod_ = "";
    /**
     * <pre>
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     * </pre>
     *
     * <code>string rpc_method = 1 [json_name = "rpcMethod"];</code>
     * @return The rpcMethod.
     */
    public java.lang.String getRpcMethod() {
      java.lang.Object ref = rpcMethod_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rpcMethod_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     * </pre>
     *
     * <code>string rpc_method = 1 [json_name = "rpcMethod"];</code>
     * @return The bytes for rpcMethod.
     */
    public com.google.protobuf.ByteString
        getRpcMethodBytes() {
      java.lang.Object ref = rpcMethod_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rpcMethod_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     * </pre>
     *
     * <code>string rpc_method = 1 [json_name = "rpcMethod"];</code>
     * @param value The rpcMethod to set.
     * @return This builder for chaining.
     */
    public Builder setRpcMethod(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      rpcMethod_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     * </pre>
     *
     * <code>string rpc_method = 1 [json_name = "rpcMethod"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRpcMethod() {
      rpcMethod_ = getDefaultInstance().getRpcMethod();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     * </pre>
     *
     * <code>string rpc_method = 1 [json_name = "rpcMethod"];</code>
     * @param value The bytes for rpcMethod to set.
     * @return This builder for chaining.
     */
    public Builder setRpcMethodBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      rpcMethod_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object use_ = "";
    /**
     * <pre>
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     *
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     * </pre>
     *
     * <code>string use = 2 [json_name = "use"];</code>
     * @return The use.
     */
    public java.lang.String getUse() {
      java.lang.Object ref = use_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        use_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     *
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     * </pre>
     *
     * <code>string use = 2 [json_name = "use"];</code>
     * @return The bytes for use.
     */
    public com.google.protobuf.ByteString
        getUseBytes() {
      java.lang.Object ref = use_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        use_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     *
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     * </pre>
     *
     * <code>string use = 2 [json_name = "use"];</code>
     * @param value The use to set.
     * @return This builder for chaining.
     */
    public Builder setUse(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      use_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     *
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     * </pre>
     *
     * <code>string use = 2 [json_name = "use"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUse() {
      use_ = getDefaultInstance().getUse();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     *
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     * </pre>
     *
     * <code>string use = 2 [json_name = "use"];</code>
     * @param value The bytes for use to set.
     * @return This builder for chaining.
     */
    public Builder setUseBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      use_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object long_ = "";
    /**
     * <pre>
     * long is the long message shown in the 'help &lt;this-command&gt;' output.
     * </pre>
     *
     * <code>string long = 3 [json_name = "long"];</code>
     * @return The long.
     */
    public java.lang.String getLong() {
      java.lang.Object ref = long_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        long_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * long is the long message shown in the 'help &lt;this-command&gt;' output.
     * </pre>
     *
     * <code>string long = 3 [json_name = "long"];</code>
     * @return The bytes for long.
     */
    public com.google.protobuf.ByteString
        getLongBytes() {
      java.lang.Object ref = long_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        long_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * long is the long message shown in the 'help &lt;this-command&gt;' output.
     * </pre>
     *
     * <code>string long = 3 [json_name = "long"];</code>
     * @param value The long to set.
     * @return This builder for chaining.
     */
    public Builder setLong(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      long_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * long is the long message shown in the 'help &lt;this-command&gt;' output.
     * </pre>
     *
     * <code>string long = 3 [json_name = "long"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLong() {
      long_ = getDefaultInstance().getLong();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * long is the long message shown in the 'help &lt;this-command&gt;' output.
     * </pre>
     *
     * <code>string long = 3 [json_name = "long"];</code>
     * @param value The bytes for long to set.
     * @return This builder for chaining.
     */
    public Builder setLongBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      long_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object short_ = "";
    /**
     * <pre>
     * short is the short description shown in the 'help' output.
     * </pre>
     *
     * <code>string short = 4 [json_name = "short"];</code>
     * @return The short.
     */
    public java.lang.String getShort() {
      java.lang.Object ref = short_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        short_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * short is the short description shown in the 'help' output.
     * </pre>
     *
     * <code>string short = 4 [json_name = "short"];</code>
     * @return The bytes for short.
     */
    public com.google.protobuf.ByteString
        getShortBytes() {
      java.lang.Object ref = short_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        short_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * short is the short description shown in the 'help' output.
     * </pre>
     *
     * <code>string short = 4 [json_name = "short"];</code>
     * @param value The short to set.
     * @return This builder for chaining.
     */
    public Builder setShort(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      short_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * short is the short description shown in the 'help' output.
     * </pre>
     *
     * <code>string short = 4 [json_name = "short"];</code>
     * @return This builder for chaining.
     */
    public Builder clearShort() {
      short_ = getDefaultInstance().getShort();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * short is the short description shown in the 'help' output.
     * </pre>
     *
     * <code>string short = 4 [json_name = "short"];</code>
     * @param value The bytes for short to set.
     * @return This builder for chaining.
     */
    public Builder setShortBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      short_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object example_ = "";
    /**
     * <pre>
     * example is examples of how to use the command.
     * </pre>
     *
     * <code>string example = 5 [json_name = "example"];</code>
     * @return The example.
     */
    public java.lang.String getExample() {
      java.lang.Object ref = example_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        example_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * example is examples of how to use the command.
     * </pre>
     *
     * <code>string example = 5 [json_name = "example"];</code>
     * @return The bytes for example.
     */
    public com.google.protobuf.ByteString
        getExampleBytes() {
      java.lang.Object ref = example_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        example_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * example is examples of how to use the command.
     * </pre>
     *
     * <code>string example = 5 [json_name = "example"];</code>
     * @param value The example to set.
     * @return This builder for chaining.
     */
    public Builder setExample(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      example_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * example is examples of how to use the command.
     * </pre>
     *
     * <code>string example = 5 [json_name = "example"];</code>
     * @return This builder for chaining.
     */
    public Builder clearExample() {
      example_ = getDefaultInstance().getExample();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * example is examples of how to use the command.
     * </pre>
     *
     * <code>string example = 5 [json_name = "example"];</code>
     * @param value The bytes for example to set.
     * @return This builder for chaining.
     */
    public Builder setExampleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      example_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList alias_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureAliasIsMutable() {
      if (!alias_.isModifiable()) {
        alias_ = new com.google.protobuf.LazyStringArrayList(alias_);
      }
      bitField0_ |= 0x00000020;
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @return A list containing the alias.
     */
    public com.google.protobuf.ProtocolStringList
        getAliasList() {
      alias_.makeImmutable();
      return alias_;
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @return The count of alias.
     */
    public int getAliasCount() {
      return alias_.size();
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @param index The index of the element to return.
     * @return The alias at the given index.
     */
    public java.lang.String getAlias(int index) {
      return alias_.get(index);
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the alias at the given index.
     */
    public com.google.protobuf.ByteString
        getAliasBytes(int index) {
      return alias_.getByteString(index);
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @param index The index to set the value at.
     * @param value The alias to set.
     * @return This builder for chaining.
     */
    public Builder setAlias(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureAliasIsMutable();
      alias_.set(index, value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @param value The alias to add.
     * @return This builder for chaining.
     */
    public Builder addAlias(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureAliasIsMutable();
      alias_.add(value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @param values The alias to add.
     * @return This builder for chaining.
     */
    public Builder addAllAlias(
        java.lang.Iterable<java.lang.String> values) {
      ensureAliasIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, alias_);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAlias() {
      alias_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @param value The bytes of the alias to add.
     * @return This builder for chaining.
     */
    public Builder addAliasBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureAliasIsMutable();
      alias_.add(value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList suggestFor_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureSuggestForIsMutable() {
      if (!suggestFor_.isModifiable()) {
        suggestFor_ = new com.google.protobuf.LazyStringArrayList(suggestFor_);
      }
      bitField0_ |= 0x00000040;
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @return A list containing the suggestFor.
     */
    public com.google.protobuf.ProtocolStringList
        getSuggestForList() {
      suggestFor_.makeImmutable();
      return suggestFor_;
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @return The count of suggestFor.
     */
    public int getSuggestForCount() {
      return suggestFor_.size();
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @param index The index of the element to return.
     * @return The suggestFor at the given index.
     */
    public java.lang.String getSuggestFor(int index) {
      return suggestFor_.get(index);
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the suggestFor at the given index.
     */
    public com.google.protobuf.ByteString
        getSuggestForBytes(int index) {
      return suggestFor_.getByteString(index);
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @param index The index to set the value at.
     * @param value The suggestFor to set.
     * @return This builder for chaining.
     */
    public Builder setSuggestFor(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureSuggestForIsMutable();
      suggestFor_.set(index, value);
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @param value The suggestFor to add.
     * @return This builder for chaining.
     */
    public Builder addSuggestFor(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureSuggestForIsMutable();
      suggestFor_.add(value);
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @param values The suggestFor to add.
     * @return This builder for chaining.
     */
    public Builder addAllSuggestFor(
        java.lang.Iterable<java.lang.String> values) {
      ensureSuggestForIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, suggestFor_);
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSuggestFor() {
      suggestFor_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000040);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @param value The bytes of the suggestFor to add.
     * @return This builder for chaining.
     */
    public Builder addSuggestForBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureSuggestForIsMutable();
      suggestFor_.add(value);
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private java.lang.Object deprecated_ = "";
    /**
     * <pre>
     * deprecated defines, if this command is deprecated and should print this string when used.
     * </pre>
     *
     * <code>string deprecated = 8 [json_name = "deprecated"];</code>
     * @return The deprecated.
     */
    public java.lang.String getDeprecated() {
      java.lang.Object ref = deprecated_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deprecated_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * deprecated defines, if this command is deprecated and should print this string when used.
     * </pre>
     *
     * <code>string deprecated = 8 [json_name = "deprecated"];</code>
     * @return The bytes for deprecated.
     */
    public com.google.protobuf.ByteString
        getDeprecatedBytes() {
      java.lang.Object ref = deprecated_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deprecated_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * deprecated defines, if this command is deprecated and should print this string when used.
     * </pre>
     *
     * <code>string deprecated = 8 [json_name = "deprecated"];</code>
     * @param value The deprecated to set.
     * @return This builder for chaining.
     */
    public Builder setDeprecated(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      deprecated_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * deprecated defines, if this command is deprecated and should print this string when used.
     * </pre>
     *
     * <code>string deprecated = 8 [json_name = "deprecated"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDeprecated() {
      deprecated_ = getDefaultInstance().getDeprecated();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * deprecated defines, if this command is deprecated and should print this string when used.
     * </pre>
     *
     * <code>string deprecated = 8 [json_name = "deprecated"];</code>
     * @param value The bytes for deprecated to set.
     * @return This builder for chaining.
     */
    public Builder setDeprecatedBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      deprecated_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private java.lang.Object version_ = "";
    /**
     * <pre>
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     * </pre>
     *
     * <code>string version = 9 [json_name = "version"];</code>
     * @return The version.
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     * </pre>
     *
     * <code>string version = 9 [json_name = "version"];</code>
     * @return The bytes for version.
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     * </pre>
     *
     * <code>string version = 9 [json_name = "version"];</code>
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      version_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     * </pre>
     *
     * <code>string version = 9 [json_name = "version"];</code>
     * @return This builder for chaining.
     */
    public Builder clearVersion() {
      version_ = getDefaultInstance().getVersion();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     * </pre>
     *
     * <code>string version = 9 [json_name = "version"];</code>
     * @param value The bytes for version to set.
     * @return This builder for chaining.
     */
    public Builder setVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      version_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.cosmos.autocli.v1.FlagOptions> flagOptions_;
    private com.google.protobuf.MapField<java.lang.String, com.cosmos.autocli.v1.FlagOptions>
        internalGetFlagOptions() {
      if (flagOptions_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FlagOptionsDefaultEntryHolder.defaultEntry);
      }
      return flagOptions_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.cosmos.autocli.v1.FlagOptions>
        internalGetMutableFlagOptions() {
      if (flagOptions_ == null) {
        flagOptions_ = com.google.protobuf.MapField.newMapField(
            FlagOptionsDefaultEntryHolder.defaultEntry);
      }
      if (!flagOptions_.isMutable()) {
        flagOptions_ = flagOptions_.copy();
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return flagOptions_;
    }
    public int getFlagOptionsCount() {
      return internalGetFlagOptions().getMap().size();
    }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
    @java.lang.Override
    public boolean containsFlagOptions(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetFlagOptions().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFlagOptionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.cosmos.autocli.v1.FlagOptions> getFlagOptions() {
      return getFlagOptionsMap();
    }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.cosmos.autocli.v1.FlagOptions> getFlagOptionsMap() {
      return internalGetFlagOptions().getMap();
    }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
    @java.lang.Override
    public /* nullable */
com.cosmos.autocli.v1.FlagOptions getFlagOptionsOrDefault(
        java.lang.String key,
        /* nullable */
com.cosmos.autocli.v1.FlagOptions defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.cosmos.autocli.v1.FlagOptions> map =
          internalGetFlagOptions().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
    @java.lang.Override
    public com.cosmos.autocli.v1.FlagOptions getFlagOptionsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.cosmos.autocli.v1.FlagOptions> map =
          internalGetFlagOptions().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearFlagOptions() {
      bitField0_ = (bitField0_ & ~0x00000200);
      internalGetMutableFlagOptions().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
    public Builder removeFlagOptions(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableFlagOptions().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.cosmos.autocli.v1.FlagOptions>
        getMutableFlagOptions() {
      bitField0_ |= 0x00000200;
      return internalGetMutableFlagOptions().getMutableMap();
    }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
    public Builder putFlagOptions(
        java.lang.String key,
        com.cosmos.autocli.v1.FlagOptions value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableFlagOptions().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
    public Builder putAllFlagOptions(
        java.util.Map<java.lang.String, com.cosmos.autocli.v1.FlagOptions> values) {
      internalGetMutableFlagOptions().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000200;
      return this;
    }

    private java.util.List<com.cosmos.autocli.v1.PositionalArgDescriptor> positionalArgs_ =
      java.util.Collections.emptyList();
    private void ensurePositionalArgsIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        positionalArgs_ = new java.util.ArrayList<com.cosmos.autocli.v1.PositionalArgDescriptor>(positionalArgs_);
        bitField0_ |= 0x00000400;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.autocli.v1.PositionalArgDescriptor, com.cosmos.autocli.v1.PositionalArgDescriptor.Builder, com.cosmos.autocli.v1.PositionalArgDescriptorOrBuilder> positionalArgsBuilder_;

    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public java.util.List<com.cosmos.autocli.v1.PositionalArgDescriptor> getPositionalArgsList() {
      if (positionalArgsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(positionalArgs_);
      } else {
        return positionalArgsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public int getPositionalArgsCount() {
      if (positionalArgsBuilder_ == null) {
        return positionalArgs_.size();
      } else {
        return positionalArgsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public com.cosmos.autocli.v1.PositionalArgDescriptor getPositionalArgs(int index) {
      if (positionalArgsBuilder_ == null) {
        return positionalArgs_.get(index);
      } else {
        return positionalArgsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public Builder setPositionalArgs(
        int index, com.cosmos.autocli.v1.PositionalArgDescriptor value) {
      if (positionalArgsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePositionalArgsIsMutable();
        positionalArgs_.set(index, value);
        onChanged();
      } else {
        positionalArgsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public Builder setPositionalArgs(
        int index, com.cosmos.autocli.v1.PositionalArgDescriptor.Builder builderForValue) {
      if (positionalArgsBuilder_ == null) {
        ensurePositionalArgsIsMutable();
        positionalArgs_.set(index, builderForValue.build());
        onChanged();
      } else {
        positionalArgsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public Builder addPositionalArgs(com.cosmos.autocli.v1.PositionalArgDescriptor value) {
      if (positionalArgsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePositionalArgsIsMutable();
        positionalArgs_.add(value);
        onChanged();
      } else {
        positionalArgsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public Builder addPositionalArgs(
        int index, com.cosmos.autocli.v1.PositionalArgDescriptor value) {
      if (positionalArgsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePositionalArgsIsMutable();
        positionalArgs_.add(index, value);
        onChanged();
      } else {
        positionalArgsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public Builder addPositionalArgs(
        com.cosmos.autocli.v1.PositionalArgDescriptor.Builder builderForValue) {
      if (positionalArgsBuilder_ == null) {
        ensurePositionalArgsIsMutable();
        positionalArgs_.add(builderForValue.build());
        onChanged();
      } else {
        positionalArgsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public Builder addPositionalArgs(
        int index, com.cosmos.autocli.v1.PositionalArgDescriptor.Builder builderForValue) {
      if (positionalArgsBuilder_ == null) {
        ensurePositionalArgsIsMutable();
        positionalArgs_.add(index, builderForValue.build());
        onChanged();
      } else {
        positionalArgsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public Builder addAllPositionalArgs(
        java.lang.Iterable<? extends com.cosmos.autocli.v1.PositionalArgDescriptor> values) {
      if (positionalArgsBuilder_ == null) {
        ensurePositionalArgsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, positionalArgs_);
        onChanged();
      } else {
        positionalArgsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public Builder clearPositionalArgs() {
      if (positionalArgsBuilder_ == null) {
        positionalArgs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
      } else {
        positionalArgsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public Builder removePositionalArgs(int index) {
      if (positionalArgsBuilder_ == null) {
        ensurePositionalArgsIsMutable();
        positionalArgs_.remove(index);
        onChanged();
      } else {
        positionalArgsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public com.cosmos.autocli.v1.PositionalArgDescriptor.Builder getPositionalArgsBuilder(
        int index) {
      return getPositionalArgsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public com.cosmos.autocli.v1.PositionalArgDescriptorOrBuilder getPositionalArgsOrBuilder(
        int index) {
      if (positionalArgsBuilder_ == null) {
        return positionalArgs_.get(index);  } else {
        return positionalArgsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public java.util.List<? extends com.cosmos.autocli.v1.PositionalArgDescriptorOrBuilder> 
         getPositionalArgsOrBuilderList() {
      if (positionalArgsBuilder_ != null) {
        return positionalArgsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(positionalArgs_);
      }
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public com.cosmos.autocli.v1.PositionalArgDescriptor.Builder addPositionalArgsBuilder() {
      return getPositionalArgsFieldBuilder().addBuilder(
          com.cosmos.autocli.v1.PositionalArgDescriptor.getDefaultInstance());
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public com.cosmos.autocli.v1.PositionalArgDescriptor.Builder addPositionalArgsBuilder(
        int index) {
      return getPositionalArgsFieldBuilder().addBuilder(
          index, com.cosmos.autocli.v1.PositionalArgDescriptor.getDefaultInstance());
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    public java.util.List<com.cosmos.autocli.v1.PositionalArgDescriptor.Builder> 
         getPositionalArgsBuilderList() {
      return getPositionalArgsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.autocli.v1.PositionalArgDescriptor, com.cosmos.autocli.v1.PositionalArgDescriptor.Builder, com.cosmos.autocli.v1.PositionalArgDescriptorOrBuilder> 
        getPositionalArgsFieldBuilder() {
      if (positionalArgsBuilder_ == null) {
        positionalArgsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.autocli.v1.PositionalArgDescriptor, com.cosmos.autocli.v1.PositionalArgDescriptor.Builder, com.cosmos.autocli.v1.PositionalArgDescriptorOrBuilder>(
                positionalArgs_,
                ((bitField0_ & 0x00000400) != 0),
                getParentForChildren(),
                isClean());
        positionalArgs_ = null;
      }
      return positionalArgsBuilder_;
    }

    private boolean skip_ ;
    /**
     * <pre>
     * skip specifies whether to skip this rpc method when generating commands.
     * </pre>
     *
     * <code>bool skip = 12 [json_name = "skip"];</code>
     * @return The skip.
     */
    @java.lang.Override
    public boolean getSkip() {
      return skip_;
    }
    /**
     * <pre>
     * skip specifies whether to skip this rpc method when generating commands.
     * </pre>
     *
     * <code>bool skip = 12 [json_name = "skip"];</code>
     * @param value The skip to set.
     * @return This builder for chaining.
     */
    public Builder setSkip(boolean value) {

      skip_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * skip specifies whether to skip this rpc method when generating commands.
     * </pre>
     *
     * <code>bool skip = 12 [json_name = "skip"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSkip() {
      bitField0_ = (bitField0_ & ~0x00000800);
      skip_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:cosmos.autocli.v1.RpcCommandOptions)
  }

  // @@protoc_insertion_point(class_scope:cosmos.autocli.v1.RpcCommandOptions)
  private static final com.cosmos.autocli.v1.RpcCommandOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.cosmos.autocli.v1.RpcCommandOptions();
  }

  public static com.cosmos.autocli.v1.RpcCommandOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RpcCommandOptions>
      PARSER = new com.google.protobuf.AbstractParser<RpcCommandOptions>() {
    @java.lang.Override
    public RpcCommandOptions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RpcCommandOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RpcCommandOptions> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.cosmos.autocli.v1.RpcCommandOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


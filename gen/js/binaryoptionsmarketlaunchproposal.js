// source: injective/exchange/v1beta1/tx.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

goog.forwardDeclare('proto.injective.oracle.v1beta1.OracleType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.displayName = 'proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 3, ""),
    oracleSymbol: jspb.Message.getFieldWithDefault(msg, 4, ""),
    oracleProvider: jspb.Message.getFieldWithDefault(msg, 5, ""),
    oracleType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    oracleScaleFactor: jspb.Message.getFieldWithDefault(msg, 7, 0),
    expirationTimestamp: jspb.Message.getFieldWithDefault(msg, 8, 0),
    settlementTimestamp: jspb.Message.getFieldWithDefault(msg, 9, 0),
    admin: jspb.Message.getFieldWithDefault(msg, 10, ""),
    quoteDenom: jspb.Message.getFieldWithDefault(msg, 11, ""),
    makerFeeRate: jspb.Message.getFieldWithDefault(msg, 12, ""),
    takerFeeRate: jspb.Message.getFieldWithDefault(msg, 13, ""),
    minPriceTickSize: jspb.Message.getFieldWithDefault(msg, 14, ""),
    minQuantityTickSize: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal;
  return proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleSymbol(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleProvider(value);
      break;
    case 6:
      var value = /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (reader.readEnum());
      msg.setOracleType(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOracleScaleFactor(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationTimestamp(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSettlementTimestamp(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmin(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteDenom(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerFeeRate(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerFeeRate(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinPriceTickSize(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinQuantityTickSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOracleSymbol();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOracleProvider();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOracleType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getOracleScaleFactor();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getExpirationTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getSettlementTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getAdmin();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getQuoteDenom();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getMakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMinPriceTickSize();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getMinQuantityTickSize();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ticker = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string oracle_symbol = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getOracleSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setOracleSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string oracle_provider = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getOracleProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setOracleProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional injective.oracle.v1beta1.OracleType oracle_type = 6;
 * @return {!proto.injective.oracle.v1beta1.OracleType}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getOracleType = function() {
  return /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.injective.oracle.v1beta1.OracleType} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setOracleType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional uint32 oracle_scale_factor = 7;
 * @return {number}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getOracleScaleFactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setOracleScaleFactor = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 expiration_timestamp = 8;
 * @return {number}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getExpirationTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setExpirationTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 settlement_timestamp = 9;
 * @return {number}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getSettlementTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setSettlementTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string admin = 10;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getAdmin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string quote_denom = 11;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getQuoteDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setQuoteDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string maker_fee_rate = 12;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getMakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setMakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string taker_fee_rate = 13;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getTakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setTakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string min_price_tick_size = 14;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getMinPriceTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setMinPriceTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string min_quantity_tick_size = 15;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getMinQuantityTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setMinQuantityTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};



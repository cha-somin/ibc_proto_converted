// source: axelar/snapshot/v1beta1/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.axelar.snapshot.v1beta1.QueryValidatorsResponse');
goog.provide('proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo');
goog.provide('proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.repeatedFields_, null);
};
goog.inherits(proto.axelar.snapshot.v1beta1.QueryValidatorsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.displayName = 'proto.axelar.snapshot.v1beta1.QueryValidatorsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.displayName = 'proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.displayName = 'proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.axelar.snapshot.v1beta1.QueryValidatorsResponse;
  return proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator;
      reader.readMessage(value,proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    tombstoned: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    jailed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    missedTooManyBlocks: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    noProxyRegistered: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    tssSuspended: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    proxyInsuficientFunds: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    staleTssHeartbeat: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo;
  return proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTombstoned(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJailed(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMissedTooManyBlocks(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoProxyRegistered(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTssSuspended(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProxyInsuficientFunds(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStaleTssHeartbeat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTombstoned();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getJailed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMissedTooManyBlocks();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getNoProxyRegistered();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getTssSuspended();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getProxyInsuficientFunds();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getStaleTssHeartbeat();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional bool tombstoned = 1;
 * @return {boolean}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.getTombstoned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo} returns this
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.setTombstoned = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool jailed = 2;
 * @return {boolean}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.getJailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo} returns this
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.setJailed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool missed_too_many_blocks = 3;
 * @return {boolean}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.getMissedTooManyBlocks = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo} returns this
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.setMissedTooManyBlocks = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool no_proxy_registered = 4;
 * @return {boolean}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.getNoProxyRegistered = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo} returns this
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.setNoProxyRegistered = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool tss_suspended = 5;
 * @return {boolean}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.getTssSuspended = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo} returns this
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.setTssSuspended = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool proxy_insuficient_funds = 6;
 * @return {boolean}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.getProxyInsuficientFunds = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo} returns this
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.setProxyInsuficientFunds = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool stale_tss_heartbeat = 7;
 * @return {boolean}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.getStaleTssHeartbeat = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo} returns this
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.prototype.setStaleTssHeartbeat = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.prototype.toObject = function(opt_includeInstance) {
  return proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.toObject = function(includeInstance, msg) {
  var f, obj = {
    operatorAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    moniker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tssIllegibilityInfo: (f = msg.getTssIllegibilityInfo()) && proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator;
  return proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatorAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMoniker(value);
      break;
    case 3:
      var value = new proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo;
      reader.readMessage(value,proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.deserializeBinaryFromReader);
      msg.setTssIllegibilityInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTssIllegibilityInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string operator_address = 1;
 * @return {string}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.prototype.getOperatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator} returns this
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.prototype.setOperatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string moniker = 2;
 * @return {string}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator} returns this
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TssIllegibilityInfo tss_illegibility_info = 3;
 * @return {?proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.prototype.getTssIllegibilityInfo = function() {
  return /** @type{?proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo} */ (
    jspb.Message.getWrapperField(this, proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo, 3));
};


/**
 * @param {?proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo|undefined} value
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator} returns this
*/
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.prototype.setTssIllegibilityInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator} returns this
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.prototype.clearTssIllegibilityInfo = function() {
  return this.setTssIllegibilityInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator.prototype.hasTssIllegibilityInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Validator validators = 1;
 * @return {!Array<!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator>}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator, 1));
};


/**
 * @param {!Array<!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator>} value
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse} returns this
*/
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.prototype.setValidatorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator}
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.axelar.snapshot.v1beta1.QueryValidatorsResponse} returns this
 */
proto.axelar.snapshot.v1beta1.QueryValidatorsResponse.prototype.clearValidatorsList = function() {
  return this.setValidatorsList([]);
};



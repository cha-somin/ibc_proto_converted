// source: tendermint/abci/types.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.tendermint.abci.Request');
goog.provide('proto.tendermint.abci.Request.ValueCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.tendermint.abci.RequestApplySnapshotChunk');
goog.require('proto.tendermint.abci.RequestCheckTx');
goog.require('proto.tendermint.abci.RequestCommit');
goog.require('proto.tendermint.abci.RequestEcho');
goog.require('proto.tendermint.abci.RequestExtendVote');
goog.require('proto.tendermint.abci.RequestFinalizeBlock');
goog.require('proto.tendermint.abci.RequestFlush');
goog.require('proto.tendermint.abci.RequestInfo');
goog.require('proto.tendermint.abci.RequestInitChain');
goog.require('proto.tendermint.abci.RequestListSnapshots');
goog.require('proto.tendermint.abci.RequestLoadSnapshotChunk');
goog.require('proto.tendermint.abci.RequestOfferSnapshot');
goog.require('proto.tendermint.abci.RequestPrepareProposal');
goog.require('proto.tendermint.abci.RequestProcessProposal');
goog.require('proto.tendermint.abci.RequestQuery');
goog.require('proto.tendermint.abci.RequestVerifyVoteExtension');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tendermint.abci.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tendermint.abci.Request.oneofGroups_);
};
goog.inherits(proto.tendermint.abci.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tendermint.abci.Request.displayName = 'proto.tendermint.abci.Request';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tendermint.abci.Request.oneofGroups_ = [[1,2,3,5,6,8,11,12,13,14,15,16,17,18,19,20]];

/**
 * @enum {number}
 */
proto.tendermint.abci.Request.ValueCase = {
  VALUE_NOT_SET: 0,
  ECHO: 1,
  FLUSH: 2,
  INFO: 3,
  INIT_CHAIN: 5,
  QUERY: 6,
  CHECK_TX: 8,
  COMMIT: 11,
  LIST_SNAPSHOTS: 12,
  OFFER_SNAPSHOT: 13,
  LOAD_SNAPSHOT_CHUNK: 14,
  APPLY_SNAPSHOT_CHUNK: 15,
  PREPARE_PROPOSAL: 16,
  PROCESS_PROPOSAL: 17,
  EXTEND_VOTE: 18,
  VERIFY_VOTE_EXTENSION: 19,
  FINALIZE_BLOCK: 20
};

/**
 * @return {proto.tendermint.abci.Request.ValueCase}
 */
proto.tendermint.abci.Request.prototype.getValueCase = function() {
  return /** @type {proto.tendermint.abci.Request.ValueCase} */(jspb.Message.computeOneofCase(this, proto.tendermint.abci.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tendermint.abci.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.tendermint.abci.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tendermint.abci.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tendermint.abci.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    echo: (f = msg.getEcho()) && proto.tendermint.abci.RequestEcho.toObject(includeInstance, f),
    flush: (f = msg.getFlush()) && proto.tendermint.abci.RequestFlush.toObject(includeInstance, f),
    info: (f = msg.getInfo()) && proto.tendermint.abci.RequestInfo.toObject(includeInstance, f),
    initChain: (f = msg.getInitChain()) && proto.tendermint.abci.RequestInitChain.toObject(includeInstance, f),
    query: (f = msg.getQuery()) && proto.tendermint.abci.RequestQuery.toObject(includeInstance, f),
    checkTx: (f = msg.getCheckTx()) && proto.tendermint.abci.RequestCheckTx.toObject(includeInstance, f),
    commit: (f = msg.getCommit()) && proto.tendermint.abci.RequestCommit.toObject(includeInstance, f),
    listSnapshots: (f = msg.getListSnapshots()) && proto.tendermint.abci.RequestListSnapshots.toObject(includeInstance, f),
    offerSnapshot: (f = msg.getOfferSnapshot()) && proto.tendermint.abci.RequestOfferSnapshot.toObject(includeInstance, f),
    loadSnapshotChunk: (f = msg.getLoadSnapshotChunk()) && proto.tendermint.abci.RequestLoadSnapshotChunk.toObject(includeInstance, f),
    applySnapshotChunk: (f = msg.getApplySnapshotChunk()) && proto.tendermint.abci.RequestApplySnapshotChunk.toObject(includeInstance, f),
    prepareProposal: (f = msg.getPrepareProposal()) && proto.tendermint.abci.RequestPrepareProposal.toObject(includeInstance, f),
    processProposal: (f = msg.getProcessProposal()) && proto.tendermint.abci.RequestProcessProposal.toObject(includeInstance, f),
    extendVote: (f = msg.getExtendVote()) && proto.tendermint.abci.RequestExtendVote.toObject(includeInstance, f),
    verifyVoteExtension: (f = msg.getVerifyVoteExtension()) && proto.tendermint.abci.RequestVerifyVoteExtension.toObject(includeInstance, f),
    finalizeBlock: (f = msg.getFinalizeBlock()) && proto.tendermint.abci.RequestFinalizeBlock.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tendermint.abci.Request}
 */
proto.tendermint.abci.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tendermint.abci.Request;
  return proto.tendermint.abci.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tendermint.abci.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tendermint.abci.Request}
 */
proto.tendermint.abci.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tendermint.abci.RequestEcho;
      reader.readMessage(value,proto.tendermint.abci.RequestEcho.deserializeBinaryFromReader);
      msg.setEcho(value);
      break;
    case 2:
      var value = new proto.tendermint.abci.RequestFlush;
      reader.readMessage(value,proto.tendermint.abci.RequestFlush.deserializeBinaryFromReader);
      msg.setFlush(value);
      break;
    case 3:
      var value = new proto.tendermint.abci.RequestInfo;
      reader.readMessage(value,proto.tendermint.abci.RequestInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 5:
      var value = new proto.tendermint.abci.RequestInitChain;
      reader.readMessage(value,proto.tendermint.abci.RequestInitChain.deserializeBinaryFromReader);
      msg.setInitChain(value);
      break;
    case 6:
      var value = new proto.tendermint.abci.RequestQuery;
      reader.readMessage(value,proto.tendermint.abci.RequestQuery.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 8:
      var value = new proto.tendermint.abci.RequestCheckTx;
      reader.readMessage(value,proto.tendermint.abci.RequestCheckTx.deserializeBinaryFromReader);
      msg.setCheckTx(value);
      break;
    case 11:
      var value = new proto.tendermint.abci.RequestCommit;
      reader.readMessage(value,proto.tendermint.abci.RequestCommit.deserializeBinaryFromReader);
      msg.setCommit(value);
      break;
    case 12:
      var value = new proto.tendermint.abci.RequestListSnapshots;
      reader.readMessage(value,proto.tendermint.abci.RequestListSnapshots.deserializeBinaryFromReader);
      msg.setListSnapshots(value);
      break;
    case 13:
      var value = new proto.tendermint.abci.RequestOfferSnapshot;
      reader.readMessage(value,proto.tendermint.abci.RequestOfferSnapshot.deserializeBinaryFromReader);
      msg.setOfferSnapshot(value);
      break;
    case 14:
      var value = new proto.tendermint.abci.RequestLoadSnapshotChunk;
      reader.readMessage(value,proto.tendermint.abci.RequestLoadSnapshotChunk.deserializeBinaryFromReader);
      msg.setLoadSnapshotChunk(value);
      break;
    case 15:
      var value = new proto.tendermint.abci.RequestApplySnapshotChunk;
      reader.readMessage(value,proto.tendermint.abci.RequestApplySnapshotChunk.deserializeBinaryFromReader);
      msg.setApplySnapshotChunk(value);
      break;
    case 16:
      var value = new proto.tendermint.abci.RequestPrepareProposal;
      reader.readMessage(value,proto.tendermint.abci.RequestPrepareProposal.deserializeBinaryFromReader);
      msg.setPrepareProposal(value);
      break;
    case 17:
      var value = new proto.tendermint.abci.RequestProcessProposal;
      reader.readMessage(value,proto.tendermint.abci.RequestProcessProposal.deserializeBinaryFromReader);
      msg.setProcessProposal(value);
      break;
    case 18:
      var value = new proto.tendermint.abci.RequestExtendVote;
      reader.readMessage(value,proto.tendermint.abci.RequestExtendVote.deserializeBinaryFromReader);
      msg.setExtendVote(value);
      break;
    case 19:
      var value = new proto.tendermint.abci.RequestVerifyVoteExtension;
      reader.readMessage(value,proto.tendermint.abci.RequestVerifyVoteExtension.deserializeBinaryFromReader);
      msg.setVerifyVoteExtension(value);
      break;
    case 20:
      var value = new proto.tendermint.abci.RequestFinalizeBlock;
      reader.readMessage(value,proto.tendermint.abci.RequestFinalizeBlock.deserializeBinaryFromReader);
      msg.setFinalizeBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tendermint.abci.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tendermint.abci.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tendermint.abci.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tendermint.abci.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEcho();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tendermint.abci.RequestEcho.serializeBinaryToWriter
    );
  }
  f = message.getFlush();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tendermint.abci.RequestFlush.serializeBinaryToWriter
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tendermint.abci.RequestInfo.serializeBinaryToWriter
    );
  }
  f = message.getInitChain();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tendermint.abci.RequestInitChain.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.tendermint.abci.RequestQuery.serializeBinaryToWriter
    );
  }
  f = message.getCheckTx();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.tendermint.abci.RequestCheckTx.serializeBinaryToWriter
    );
  }
  f = message.getCommit();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.tendermint.abci.RequestCommit.serializeBinaryToWriter
    );
  }
  f = message.getListSnapshots();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.tendermint.abci.RequestListSnapshots.serializeBinaryToWriter
    );
  }
  f = message.getOfferSnapshot();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.tendermint.abci.RequestOfferSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getLoadSnapshotChunk();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.tendermint.abci.RequestLoadSnapshotChunk.serializeBinaryToWriter
    );
  }
  f = message.getApplySnapshotChunk();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.tendermint.abci.RequestApplySnapshotChunk.serializeBinaryToWriter
    );
  }
  f = message.getPrepareProposal();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.tendermint.abci.RequestPrepareProposal.serializeBinaryToWriter
    );
  }
  f = message.getProcessProposal();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.tendermint.abci.RequestProcessProposal.serializeBinaryToWriter
    );
  }
  f = message.getExtendVote();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.tendermint.abci.RequestExtendVote.serializeBinaryToWriter
    );
  }
  f = message.getVerifyVoteExtension();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.tendermint.abci.RequestVerifyVoteExtension.serializeBinaryToWriter
    );
  }
  f = message.getFinalizeBlock();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.tendermint.abci.RequestFinalizeBlock.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestEcho echo = 1;
 * @return {?proto.tendermint.abci.RequestEcho}
 */
proto.tendermint.abci.Request.prototype.getEcho = function() {
  return /** @type{?proto.tendermint.abci.RequestEcho} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestEcho, 1));
};


/**
 * @param {?proto.tendermint.abci.RequestEcho|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setEcho = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearEcho = function() {
  return this.setEcho(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasEcho = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RequestFlush flush = 2;
 * @return {?proto.tendermint.abci.RequestFlush}
 */
proto.tendermint.abci.Request.prototype.getFlush = function() {
  return /** @type{?proto.tendermint.abci.RequestFlush} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestFlush, 2));
};


/**
 * @param {?proto.tendermint.abci.RequestFlush|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setFlush = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearFlush = function() {
  return this.setFlush(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasFlush = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RequestInfo info = 3;
 * @return {?proto.tendermint.abci.RequestInfo}
 */
proto.tendermint.abci.Request.prototype.getInfo = function() {
  return /** @type{?proto.tendermint.abci.RequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestInfo, 3));
};


/**
 * @param {?proto.tendermint.abci.RequestInfo|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setInfo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RequestInitChain init_chain = 5;
 * @return {?proto.tendermint.abci.RequestInitChain}
 */
proto.tendermint.abci.Request.prototype.getInitChain = function() {
  return /** @type{?proto.tendermint.abci.RequestInitChain} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestInitChain, 5));
};


/**
 * @param {?proto.tendermint.abci.RequestInitChain|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setInitChain = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearInitChain = function() {
  return this.setInitChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasInitChain = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RequestQuery query = 6;
 * @return {?proto.tendermint.abci.RequestQuery}
 */
proto.tendermint.abci.Request.prototype.getQuery = function() {
  return /** @type{?proto.tendermint.abci.RequestQuery} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestQuery, 6));
};


/**
 * @param {?proto.tendermint.abci.RequestQuery|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RequestCheckTx check_tx = 8;
 * @return {?proto.tendermint.abci.RequestCheckTx}
 */
proto.tendermint.abci.Request.prototype.getCheckTx = function() {
  return /** @type{?proto.tendermint.abci.RequestCheckTx} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestCheckTx, 8));
};


/**
 * @param {?proto.tendermint.abci.RequestCheckTx|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setCheckTx = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearCheckTx = function() {
  return this.setCheckTx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasCheckTx = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional RequestCommit commit = 11;
 * @return {?proto.tendermint.abci.RequestCommit}
 */
proto.tendermint.abci.Request.prototype.getCommit = function() {
  return /** @type{?proto.tendermint.abci.RequestCommit} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestCommit, 11));
};


/**
 * @param {?proto.tendermint.abci.RequestCommit|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setCommit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearCommit = function() {
  return this.setCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasCommit = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional RequestListSnapshots list_snapshots = 12;
 * @return {?proto.tendermint.abci.RequestListSnapshots}
 */
proto.tendermint.abci.Request.prototype.getListSnapshots = function() {
  return /** @type{?proto.tendermint.abci.RequestListSnapshots} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestListSnapshots, 12));
};


/**
 * @param {?proto.tendermint.abci.RequestListSnapshots|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setListSnapshots = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearListSnapshots = function() {
  return this.setListSnapshots(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasListSnapshots = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional RequestOfferSnapshot offer_snapshot = 13;
 * @return {?proto.tendermint.abci.RequestOfferSnapshot}
 */
proto.tendermint.abci.Request.prototype.getOfferSnapshot = function() {
  return /** @type{?proto.tendermint.abci.RequestOfferSnapshot} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestOfferSnapshot, 13));
};


/**
 * @param {?proto.tendermint.abci.RequestOfferSnapshot|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setOfferSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearOfferSnapshot = function() {
  return this.setOfferSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasOfferSnapshot = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional RequestLoadSnapshotChunk load_snapshot_chunk = 14;
 * @return {?proto.tendermint.abci.RequestLoadSnapshotChunk}
 */
proto.tendermint.abci.Request.prototype.getLoadSnapshotChunk = function() {
  return /** @type{?proto.tendermint.abci.RequestLoadSnapshotChunk} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestLoadSnapshotChunk, 14));
};


/**
 * @param {?proto.tendermint.abci.RequestLoadSnapshotChunk|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setLoadSnapshotChunk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearLoadSnapshotChunk = function() {
  return this.setLoadSnapshotChunk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasLoadSnapshotChunk = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional RequestApplySnapshotChunk apply_snapshot_chunk = 15;
 * @return {?proto.tendermint.abci.RequestApplySnapshotChunk}
 */
proto.tendermint.abci.Request.prototype.getApplySnapshotChunk = function() {
  return /** @type{?proto.tendermint.abci.RequestApplySnapshotChunk} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestApplySnapshotChunk, 15));
};


/**
 * @param {?proto.tendermint.abci.RequestApplySnapshotChunk|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setApplySnapshotChunk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearApplySnapshotChunk = function() {
  return this.setApplySnapshotChunk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasApplySnapshotChunk = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional RequestPrepareProposal prepare_proposal = 16;
 * @return {?proto.tendermint.abci.RequestPrepareProposal}
 */
proto.tendermint.abci.Request.prototype.getPrepareProposal = function() {
  return /** @type{?proto.tendermint.abci.RequestPrepareProposal} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestPrepareProposal, 16));
};


/**
 * @param {?proto.tendermint.abci.RequestPrepareProposal|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setPrepareProposal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearPrepareProposal = function() {
  return this.setPrepareProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasPrepareProposal = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional RequestProcessProposal process_proposal = 17;
 * @return {?proto.tendermint.abci.RequestProcessProposal}
 */
proto.tendermint.abci.Request.prototype.getProcessProposal = function() {
  return /** @type{?proto.tendermint.abci.RequestProcessProposal} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestProcessProposal, 17));
};


/**
 * @param {?proto.tendermint.abci.RequestProcessProposal|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setProcessProposal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearProcessProposal = function() {
  return this.setProcessProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasProcessProposal = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional RequestExtendVote extend_vote = 18;
 * @return {?proto.tendermint.abci.RequestExtendVote}
 */
proto.tendermint.abci.Request.prototype.getExtendVote = function() {
  return /** @type{?proto.tendermint.abci.RequestExtendVote} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestExtendVote, 18));
};


/**
 * @param {?proto.tendermint.abci.RequestExtendVote|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setExtendVote = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearExtendVote = function() {
  return this.setExtendVote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasExtendVote = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional RequestVerifyVoteExtension verify_vote_extension = 19;
 * @return {?proto.tendermint.abci.RequestVerifyVoteExtension}
 */
proto.tendermint.abci.Request.prototype.getVerifyVoteExtension = function() {
  return /** @type{?proto.tendermint.abci.RequestVerifyVoteExtension} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestVerifyVoteExtension, 19));
};


/**
 * @param {?proto.tendermint.abci.RequestVerifyVoteExtension|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setVerifyVoteExtension = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearVerifyVoteExtension = function() {
  return this.setVerifyVoteExtension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasVerifyVoteExtension = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional RequestFinalizeBlock finalize_block = 20;
 * @return {?proto.tendermint.abci.RequestFinalizeBlock}
 */
proto.tendermint.abci.Request.prototype.getFinalizeBlock = function() {
  return /** @type{?proto.tendermint.abci.RequestFinalizeBlock} */ (
    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestFinalizeBlock, 20));
};


/**
 * @param {?proto.tendermint.abci.RequestFinalizeBlock|undefined} value
 * @return {!proto.tendermint.abci.Request} returns this
*/
proto.tendermint.abci.Request.prototype.setFinalizeBlock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.tendermint.abci.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tendermint.abci.Request} returns this
 */
proto.tendermint.abci.Request.prototype.clearFinalizeBlock = function() {
  return this.setFinalizeBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tendermint.abci.Request.prototype.hasFinalizeBlock = function() {
  return jspb.Message.getField(this, 20) != null;
};



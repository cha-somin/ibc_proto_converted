// source: lum-network/beam/beam.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.lum.network.beam.BeamData');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.lum.network.beam.BeamMerchantReview');
goog.require('proto.lum.network.beam.BeamProductReview');
goog.require('proto.lum.network.beam.BeamReviewer');
goog.require('proto.lum.network.beam.BeamReward');
goog.require('proto.lum.network.beam.BeamVerifier');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lum.network.beam.BeamData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lum.network.beam.BeamData.repeatedFields_, null);
};
goog.inherits(proto.lum.network.beam.BeamData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lum.network.beam.BeamData.displayName = 'proto.lum.network.beam.BeamData';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lum.network.beam.BeamData.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lum.network.beam.BeamData.prototype.toObject = function(opt_includeInstance) {
  return proto.lum.network.beam.BeamData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lum.network.beam.BeamData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.BeamData.toObject = function(includeInstance, msg) {
  var f, obj = {
    reward: (f = msg.getReward()) && proto.lum.network.beam.BeamReward.toObject(includeInstance, f),
    verifier: (f = msg.getVerifier()) && proto.lum.network.beam.BeamVerifier.toObject(includeInstance, f),
    reviewer: (f = msg.getReviewer()) && proto.lum.network.beam.BeamReviewer.toObject(includeInstance, f),
    merchantReview: (f = msg.getMerchantReview()) && proto.lum.network.beam.BeamMerchantReview.toObject(includeInstance, f),
    productsReviewsList: jspb.Message.toObjectList(msg.getProductsReviewsList(),
    proto.lum.network.beam.BeamProductReview.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lum.network.beam.BeamData}
 */
proto.lum.network.beam.BeamData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lum.network.beam.BeamData;
  return proto.lum.network.beam.BeamData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lum.network.beam.BeamData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lum.network.beam.BeamData}
 */
proto.lum.network.beam.BeamData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.lum.network.beam.BeamReward;
      reader.readMessage(value,proto.lum.network.beam.BeamReward.deserializeBinaryFromReader);
      msg.setReward(value);
      break;
    case 2:
      var value = new proto.lum.network.beam.BeamVerifier;
      reader.readMessage(value,proto.lum.network.beam.BeamVerifier.deserializeBinaryFromReader);
      msg.setVerifier(value);
      break;
    case 3:
      var value = new proto.lum.network.beam.BeamReviewer;
      reader.readMessage(value,proto.lum.network.beam.BeamReviewer.deserializeBinaryFromReader);
      msg.setReviewer(value);
      break;
    case 4:
      var value = new proto.lum.network.beam.BeamMerchantReview;
      reader.readMessage(value,proto.lum.network.beam.BeamMerchantReview.deserializeBinaryFromReader);
      msg.setMerchantReview(value);
      break;
    case 5:
      var value = new proto.lum.network.beam.BeamProductReview;
      reader.readMessage(value,proto.lum.network.beam.BeamProductReview.deserializeBinaryFromReader);
      msg.addProductsReviews(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lum.network.beam.BeamData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lum.network.beam.BeamData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lum.network.beam.BeamData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.BeamData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReward();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.lum.network.beam.BeamReward.serializeBinaryToWriter
    );
  }
  f = message.getVerifier();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.lum.network.beam.BeamVerifier.serializeBinaryToWriter
    );
  }
  f = message.getReviewer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.lum.network.beam.BeamReviewer.serializeBinaryToWriter
    );
  }
  f = message.getMerchantReview();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.lum.network.beam.BeamMerchantReview.serializeBinaryToWriter
    );
  }
  f = message.getProductsReviewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.lum.network.beam.BeamProductReview.serializeBinaryToWriter
    );
  }
};


/**
 * optional BeamReward reward = 1;
 * @return {?proto.lum.network.beam.BeamReward}
 */
proto.lum.network.beam.BeamData.prototype.getReward = function() {
  return /** @type{?proto.lum.network.beam.BeamReward} */ (
    jspb.Message.getWrapperField(this, proto.lum.network.beam.BeamReward, 1));
};


/**
 * @param {?proto.lum.network.beam.BeamReward|undefined} value
 * @return {!proto.lum.network.beam.BeamData} returns this
*/
proto.lum.network.beam.BeamData.prototype.setReward = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.beam.BeamData} returns this
 */
proto.lum.network.beam.BeamData.prototype.clearReward = function() {
  return this.setReward(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.beam.BeamData.prototype.hasReward = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BeamVerifier verifier = 2;
 * @return {?proto.lum.network.beam.BeamVerifier}
 */
proto.lum.network.beam.BeamData.prototype.getVerifier = function() {
  return /** @type{?proto.lum.network.beam.BeamVerifier} */ (
    jspb.Message.getWrapperField(this, proto.lum.network.beam.BeamVerifier, 2));
};


/**
 * @param {?proto.lum.network.beam.BeamVerifier|undefined} value
 * @return {!proto.lum.network.beam.BeamData} returns this
*/
proto.lum.network.beam.BeamData.prototype.setVerifier = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.beam.BeamData} returns this
 */
proto.lum.network.beam.BeamData.prototype.clearVerifier = function() {
  return this.setVerifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.beam.BeamData.prototype.hasVerifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BeamReviewer reviewer = 3;
 * @return {?proto.lum.network.beam.BeamReviewer}
 */
proto.lum.network.beam.BeamData.prototype.getReviewer = function() {
  return /** @type{?proto.lum.network.beam.BeamReviewer} */ (
    jspb.Message.getWrapperField(this, proto.lum.network.beam.BeamReviewer, 3));
};


/**
 * @param {?proto.lum.network.beam.BeamReviewer|undefined} value
 * @return {!proto.lum.network.beam.BeamData} returns this
*/
proto.lum.network.beam.BeamData.prototype.setReviewer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.beam.BeamData} returns this
 */
proto.lum.network.beam.BeamData.prototype.clearReviewer = function() {
  return this.setReviewer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.beam.BeamData.prototype.hasReviewer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BeamMerchantReview merchant_review = 4;
 * @return {?proto.lum.network.beam.BeamMerchantReview}
 */
proto.lum.network.beam.BeamData.prototype.getMerchantReview = function() {
  return /** @type{?proto.lum.network.beam.BeamMerchantReview} */ (
    jspb.Message.getWrapperField(this, proto.lum.network.beam.BeamMerchantReview, 4));
};


/**
 * @param {?proto.lum.network.beam.BeamMerchantReview|undefined} value
 * @return {!proto.lum.network.beam.BeamData} returns this
*/
proto.lum.network.beam.BeamData.prototype.setMerchantReview = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.beam.BeamData} returns this
 */
proto.lum.network.beam.BeamData.prototype.clearMerchantReview = function() {
  return this.setMerchantReview(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.beam.BeamData.prototype.hasMerchantReview = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated BeamProductReview products_reviews = 5;
 * @return {!Array<!proto.lum.network.beam.BeamProductReview>}
 */
proto.lum.network.beam.BeamData.prototype.getProductsReviewsList = function() {
  return /** @type{!Array<!proto.lum.network.beam.BeamProductReview>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.lum.network.beam.BeamProductReview, 5));
};


/**
 * @param {!Array<!proto.lum.network.beam.BeamProductReview>} value
 * @return {!proto.lum.network.beam.BeamData} returns this
*/
proto.lum.network.beam.BeamData.prototype.setProductsReviewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.lum.network.beam.BeamProductReview=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lum.network.beam.BeamProductReview}
 */
proto.lum.network.beam.BeamData.prototype.addProductsReviews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.lum.network.beam.BeamProductReview, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lum.network.beam.BeamData} returns this
 */
proto.lum.network.beam.BeamData.prototype.clearProductsReviewsList = function() {
  return this.setProductsReviewsList([]);
};



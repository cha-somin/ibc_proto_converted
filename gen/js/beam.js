// source: lum-network/beam/beam.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.lum.network.beam.Beam');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.cosmos.base.v1beta1.Coin');
goog.require('proto.google.protobuf.Timestamp');
goog.require('proto.lum.network.beam.BeamData');

goog.forwardDeclare('proto.lum.network.beam.BeamState');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lum.network.beam.Beam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lum.network.beam.Beam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lum.network.beam.Beam.displayName = 'proto.lum.network.beam.Beam';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lum.network.beam.Beam.prototype.toObject = function(opt_includeInstance) {
  return proto.lum.network.beam.Beam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lum.network.beam.Beam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.Beam.toObject = function(includeInstance, msg) {
  var f, obj = {
    creatorAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amount: (f = msg.getAmount()) && proto.cosmos.base.v1beta1.Coin.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    secret: jspb.Message.getFieldWithDefault(msg, 5, ""),
    claimAddress: jspb.Message.getFieldWithDefault(msg, 6, ""),
    fundsWithdrawn: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    claimed: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    cancelReason: jspb.Message.getFieldWithDefault(msg, 9, ""),
    hideContent: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    schema: jspb.Message.getFieldWithDefault(msg, 11, ""),
    data: (f = msg.getData()) && proto.lum.network.beam.BeamData.toObject(includeInstance, f),
    claimExpiresAtBlock: jspb.Message.getFieldWithDefault(msg, 13, 0),
    closesAtBlock: jspb.Message.getFieldWithDefault(msg, 14, 0),
    createdAt: (f = msg.getCreatedAt()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    closedAt: (f = msg.getClosedAt()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lum.network.beam.Beam}
 */
proto.lum.network.beam.Beam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lum.network.beam.Beam;
  return proto.lum.network.beam.Beam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lum.network.beam.Beam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lum.network.beam.Beam}
 */
proto.lum.network.beam.Beam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatorAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = new proto.cosmos.base.v1beta1.Coin;
      reader.readMessage(value,proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {!proto.lum.network.beam.BeamState} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setClaimAddress(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFundsWithdrawn(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClaimed(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancelReason(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHideContent(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchema(value);
      break;
    case 12:
      var value = new proto.lum.network.beam.BeamData;
      reader.readMessage(value,proto.lum.network.beam.BeamData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClaimExpiresAtBlock(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClosesAtBlock(value);
      break;
    case 15:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 16:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setClosedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lum.network.beam.Beam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lum.network.beam.Beam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lum.network.beam.Beam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.Beam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getClaimAddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFundsWithdrawn();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getClaimed();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getCancelReason();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getHideContent();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getSchema();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.lum.network.beam.BeamData.serializeBinaryToWriter
    );
  }
  f = message.getClaimExpiresAtBlock();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getClosesAtBlock();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getClosedAt();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string creator_address = 1;
 * @return {string}
 */
proto.lum.network.beam.Beam.prototype.getCreatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.setCreatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.lum.network.beam.Beam.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional cosmos.base.v1beta1.Coin amount = 3;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.lum.network.beam.Beam.prototype.getAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, proto.cosmos.base.v1beta1.Coin, 3));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.lum.network.beam.Beam} returns this
*/
proto.lum.network.beam.Beam.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.beam.Beam.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BeamState status = 4;
 * @return {!proto.lum.network.beam.BeamState}
 */
proto.lum.network.beam.Beam.prototype.getStatus = function() {
  return /** @type {!proto.lum.network.beam.BeamState} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.lum.network.beam.BeamState} value
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string secret = 5;
 * @return {string}
 */
proto.lum.network.beam.Beam.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string claim_address = 6;
 * @return {string}
 */
proto.lum.network.beam.Beam.prototype.getClaimAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.setClaimAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool funds_withdrawn = 7;
 * @return {boolean}
 */
proto.lum.network.beam.Beam.prototype.getFundsWithdrawn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.setFundsWithdrawn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool claimed = 8;
 * @return {boolean}
 */
proto.lum.network.beam.Beam.prototype.getClaimed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.setClaimed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string cancel_reason = 9;
 * @return {string}
 */
proto.lum.network.beam.Beam.prototype.getCancelReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.setCancelReason = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool hide_content = 10;
 * @return {boolean}
 */
proto.lum.network.beam.Beam.prototype.getHideContent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.setHideContent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string schema = 11;
 * @return {string}
 */
proto.lum.network.beam.Beam.prototype.getSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.setSchema = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional BeamData data = 12;
 * @return {?proto.lum.network.beam.BeamData}
 */
proto.lum.network.beam.Beam.prototype.getData = function() {
  return /** @type{?proto.lum.network.beam.BeamData} */ (
    jspb.Message.getWrapperField(this, proto.lum.network.beam.BeamData, 12));
};


/**
 * @param {?proto.lum.network.beam.BeamData|undefined} value
 * @return {!proto.lum.network.beam.Beam} returns this
*/
proto.lum.network.beam.Beam.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.beam.Beam.prototype.hasData = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 claim_expires_at_block = 13;
 * @return {number}
 */
proto.lum.network.beam.Beam.prototype.getClaimExpiresAtBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.setClaimExpiresAtBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 closes_at_block = 14;
 * @return {number}
 */
proto.lum.network.beam.Beam.prototype.getClosesAtBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.setClosesAtBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.lum.network.beam.Beam.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 15));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.lum.network.beam.Beam} returns this
*/
proto.lum.network.beam.Beam.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.beam.Beam.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional google.protobuf.Timestamp closed_at = 16;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.lum.network.beam.Beam.prototype.getClosedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 16));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.lum.network.beam.Beam} returns this
*/
proto.lum.network.beam.Beam.prototype.setClosedAt = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.beam.Beam} returns this
 */
proto.lum.network.beam.Beam.prototype.clearClosedAt = function() {
  return this.setClosedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.beam.Beam.prototype.hasClosedAt = function() {
  return jspb.Message.getField(this, 16) != null;
};



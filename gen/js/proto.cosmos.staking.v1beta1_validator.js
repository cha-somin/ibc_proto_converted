// source: cosmos/staking/v1beta1/staking.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.cosmos.staking.v1beta1.Validator');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.cosmos.staking.v1beta1.Commission');
goog.require('proto.cosmos.staking.v1beta1.Description');
goog.require('proto.google.protobuf.Any');
goog.require('proto.google.protobuf.Timestamp');

goog.forwardDeclare('proto.cosmos.staking.v1beta1.BondStatus');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.staking.v1beta1.Validator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.staking.v1beta1.Validator.repeatedFields_, null);
};
goog.inherits(proto.cosmos.staking.v1beta1.Validator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.staking.v1beta1.Validator.displayName = 'proto.cosmos.staking.v1beta1.Validator';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.staking.v1beta1.Validator.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.staking.v1beta1.Validator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.staking.v1beta1.Validator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.staking.v1beta1.Validator.toObject = function(includeInstance, msg) {
  var f, obj = {
    operatorAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    consensusPubkey: (f = msg.getConsensusPubkey()) && proto.google.protobuf.Any.toObject(includeInstance, f),
    jailed: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    tokens: jspb.Message.getFieldWithDefault(msg, 5, ""),
    delegatorShares: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: (f = msg.getDescription()) && proto.cosmos.staking.v1beta1.Description.toObject(includeInstance, f),
    unbondingHeight: jspb.Message.getFieldWithDefault(msg, 8, 0),
    unbondingTime: (f = msg.getUnbondingTime()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    commission: (f = msg.getCommission()) && proto.cosmos.staking.v1beta1.Commission.toObject(includeInstance, f),
    minSelfDelegation: jspb.Message.getFieldWithDefault(msg, 11, ""),
    unbondingOnHoldRefCount: jspb.Message.getFieldWithDefault(msg, 12, 0),
    unbondingIdsList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.staking.v1beta1.Validator}
 */
proto.cosmos.staking.v1beta1.Validator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.staking.v1beta1.Validator;
  return proto.cosmos.staking.v1beta1.Validator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.staking.v1beta1.Validator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.staking.v1beta1.Validator}
 */
proto.cosmos.staking.v1beta1.Validator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatorAddress(value);
      break;
    case 2:
      var value = new proto.google.protobuf.Any;
      reader.readMessage(value,proto.google.protobuf.Any.deserializeBinaryFromReader);
      msg.setConsensusPubkey(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJailed(value);
      break;
    case 4:
      var value = /** @type {!proto.cosmos.staking.v1beta1.BondStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokens(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorShares(value);
      break;
    case 7:
      var value = new proto.cosmos.staking.v1beta1.Description;
      reader.readMessage(value,proto.cosmos.staking.v1beta1.Description.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnbondingHeight(value);
      break;
    case 9:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setUnbondingTime(value);
      break;
    case 10:
      var value = new proto.cosmos.staking.v1beta1.Commission;
      reader.readMessage(value,proto.cosmos.staking.v1beta1.Commission.deserializeBinaryFromReader);
      msg.setCommission(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinSelfDelegation(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnbondingOnHoldRefCount(value);
      break;
    case 13:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnbondingIds(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.staking.v1beta1.Validator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.staking.v1beta1.Validator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.staking.v1beta1.Validator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConsensusPubkey();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.protobuf.Any.serializeBinaryToWriter
    );
  }
  f = message.getJailed();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getTokens();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDelegatorShares();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cosmos.staking.v1beta1.Description.serializeBinaryToWriter
    );
  }
  f = message.getUnbondingHeight();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getUnbondingTime();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCommission();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.cosmos.staking.v1beta1.Commission.serializeBinaryToWriter
    );
  }
  f = message.getMinSelfDelegation();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getUnbondingOnHoldRefCount();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getUnbondingIdsList();
  if (f.length > 0) {
    writer.writePackedUint64(
      13,
      f
    );
  }
};


/**
 * optional string operator_address = 1;
 * @return {string}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getOperatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.setOperatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Any consensus_pubkey = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getConsensusPubkey = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
*/
proto.cosmos.staking.v1beta1.Validator.prototype.setConsensusPubkey = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.clearConsensusPubkey = function() {
  return this.setConsensusPubkey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.hasConsensusPubkey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool jailed = 3;
 * @return {boolean}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getJailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.setJailed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional BondStatus status = 4;
 * @return {!proto.cosmos.staking.v1beta1.BondStatus}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getStatus = function() {
  return /** @type {!proto.cosmos.staking.v1beta1.BondStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cosmos.staking.v1beta1.BondStatus} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string tokens = 5;
 * @return {string}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getTokens = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.setTokens = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string delegator_shares = 6;
 * @return {string}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getDelegatorShares = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.setDelegatorShares = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Description description = 7;
 * @return {?proto.cosmos.staking.v1beta1.Description}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getDescription = function() {
  return /** @type{?proto.cosmos.staking.v1beta1.Description} */ (
    jspb.Message.getWrapperField(this, proto.cosmos.staking.v1beta1.Description, 7));
};


/**
 * @param {?proto.cosmos.staking.v1beta1.Description|undefined} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
*/
proto.cosmos.staking.v1beta1.Validator.prototype.setDescription = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.clearDescription = function() {
  return this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 unbonding_height = 8;
 * @return {number}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getUnbondingHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.setUnbondingHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp unbonding_time = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getUnbondingTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
*/
proto.cosmos.staking.v1beta1.Validator.prototype.setUnbondingTime = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.clearUnbondingTime = function() {
  return this.setUnbondingTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.hasUnbondingTime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Commission commission = 10;
 * @return {?proto.cosmos.staking.v1beta1.Commission}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getCommission = function() {
  return /** @type{?proto.cosmos.staking.v1beta1.Commission} */ (
    jspb.Message.getWrapperField(this, proto.cosmos.staking.v1beta1.Commission, 10));
};


/**
 * @param {?proto.cosmos.staking.v1beta1.Commission|undefined} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
*/
proto.cosmos.staking.v1beta1.Validator.prototype.setCommission = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.clearCommission = function() {
  return this.setCommission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.hasCommission = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string min_self_delegation = 11;
 * @return {string}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getMinSelfDelegation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.setMinSelfDelegation = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int64 unbonding_on_hold_ref_count = 12;
 * @return {number}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getUnbondingOnHoldRefCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.setUnbondingOnHoldRefCount = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * repeated uint64 unbonding_ids = 13;
 * @return {!Array<number>}
 */
proto.cosmos.staking.v1beta1.Validator.prototype.getUnbondingIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.setUnbondingIdsList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.addUnbondingIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.staking.v1beta1.Validator} returns this
 */
proto.cosmos.staking.v1beta1.Validator.prototype.clearUnbondingIdsList = function() {
  return this.setUnbondingIdsList([]);
};



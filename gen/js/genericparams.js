// source: comdex/liquidity/v1beta1/params.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.comdex.liquidity.v1beta1.GenericParams');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.cosmos.base.v1beta1.Coin');
goog.require('proto.google.protobuf.Duration');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.comdex.liquidity.v1beta1.GenericParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.comdex.liquidity.v1beta1.GenericParams.repeatedFields_, null);
};
goog.inherits(proto.comdex.liquidity.v1beta1.GenericParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.comdex.liquidity.v1beta1.GenericParams.displayName = 'proto.comdex.liquidity.v1beta1.GenericParams';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.comdex.liquidity.v1beta1.GenericParams.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.toObject = function(opt_includeInstance) {
  return proto.comdex.liquidity.v1beta1.GenericParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.comdex.liquidity.v1beta1.GenericParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.comdex.liquidity.v1beta1.GenericParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    batchSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tickPrecision: jspb.Message.getFieldWithDefault(msg, 2, 0),
    feeCollectorAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dustCollectorAddress: jspb.Message.getFieldWithDefault(msg, 4, ""),
    minInitialPoolCoinSupply: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pairCreationFeeList: jspb.Message.toObjectList(msg.getPairCreationFeeList(),
    proto.cosmos.base.v1beta1.Coin.toObject, includeInstance),
    poolCreationFeeList: jspb.Message.toObjectList(msg.getPoolCreationFeeList(),
    proto.cosmos.base.v1beta1.Coin.toObject, includeInstance),
    minInitialDepositAmount: jspb.Message.getFieldWithDefault(msg, 8, ""),
    maxPriceLimitRatio: jspb.Message.getFieldWithDefault(msg, 9, ""),
    maxOrderLifespan: (f = msg.getMaxOrderLifespan()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    swapFeeRate: jspb.Message.getFieldWithDefault(msg, 11, ""),
    withdrawFeeRate: jspb.Message.getFieldWithDefault(msg, 12, ""),
    depositExtraGas: jspb.Message.getFieldWithDefault(msg, 13, 0),
    withdrawExtraGas: jspb.Message.getFieldWithDefault(msg, 14, 0),
    orderExtraGas: jspb.Message.getFieldWithDefault(msg, 15, 0),
    swapFeeDistrDenom: jspb.Message.getFieldWithDefault(msg, 16, ""),
    swapFeeBurnRate: jspb.Message.getFieldWithDefault(msg, 17, ""),
    appId: jspb.Message.getFieldWithDefault(msg, 18, 0),
    maxNumMarketMakingOrderTicks: jspb.Message.getFieldWithDefault(msg, 19, 0),
    maxNumActivePoolsPerPair: jspb.Message.getFieldWithDefault(msg, 20, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams}
 */
proto.comdex.liquidity.v1beta1.GenericParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.comdex.liquidity.v1beta1.GenericParams;
  return proto.comdex.liquidity.v1beta1.GenericParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.comdex.liquidity.v1beta1.GenericParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams}
 */
proto.comdex.liquidity.v1beta1.GenericParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBatchSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTickPrecision(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeeCollectorAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDustCollectorAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinInitialPoolCoinSupply(value);
      break;
    case 6:
      var value = new proto.cosmos.base.v1beta1.Coin;
      reader.readMessage(value,proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader);
      msg.addPairCreationFee(value);
      break;
    case 7:
      var value = new proto.cosmos.base.v1beta1.Coin;
      reader.readMessage(value,proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader);
      msg.addPoolCreationFee(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinInitialDepositAmount(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxPriceLimitRatio(value);
      break;
    case 10:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setMaxOrderLifespan(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSwapFeeRate(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setWithdrawFeeRate(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDepositExtraGas(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWithdrawExtraGas(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOrderExtraGas(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSwapFeeDistrDenom(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setSwapFeeBurnRate(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAppId(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxNumMarketMakingOrderTicks(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxNumActivePoolsPerPair(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.comdex.liquidity.v1beta1.GenericParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.comdex.liquidity.v1beta1.GenericParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.comdex.liquidity.v1beta1.GenericParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBatchSize();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTickPrecision();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getFeeCollectorAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDustCollectorAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMinInitialPoolCoinSupply();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPairCreationFeeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter
    );
  }
  f = message.getPoolCreationFeeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter
    );
  }
  f = message.getMinInitialDepositAmount();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMaxPriceLimitRatio();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMaxOrderLifespan();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getSwapFeeRate();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getWithdrawFeeRate();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getDepositExtraGas();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getWithdrawExtraGas();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getOrderExtraGas();
  if (f !== 0) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getSwapFeeDistrDenom();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getSwapFeeBurnRate();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getAppId();
  if (f !== 0) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = message.getMaxNumMarketMakingOrderTicks();
  if (f !== 0) {
    writer.writeUint64(
      19,
      f
    );
  }
  f = message.getMaxNumActivePoolsPerPair();
  if (f !== 0) {
    writer.writeUint64(
      20,
      f
    );
  }
};


/**
 * optional uint64 batch_size = 1;
 * @return {number}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getBatchSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setBatchSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 tick_precision = 2;
 * @return {number}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getTickPrecision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setTickPrecision = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string fee_collector_address = 3;
 * @return {string}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getFeeCollectorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setFeeCollectorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string dust_collector_address = 4;
 * @return {string}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getDustCollectorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setDustCollectorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string min_initial_pool_coin_supply = 5;
 * @return {string}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getMinInitialPoolCoinSupply = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setMinInitialPoolCoinSupply = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin pair_creation_fee = 6;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getPairCreationFeeList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cosmos.base.v1beta1.Coin, 6));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
*/
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setPairCreationFeeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.addPairCreationFee = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.clearPairCreationFeeList = function() {
  return this.setPairCreationFeeList([]);
};


/**
 * repeated cosmos.base.v1beta1.Coin pool_creation_fee = 7;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getPoolCreationFeeList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cosmos.base.v1beta1.Coin, 7));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
*/
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setPoolCreationFeeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.addPoolCreationFee = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.clearPoolCreationFeeList = function() {
  return this.setPoolCreationFeeList([]);
};


/**
 * optional string min_initial_deposit_amount = 8;
 * @return {string}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getMinInitialDepositAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setMinInitialDepositAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string max_price_limit_ratio = 9;
 * @return {string}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getMaxPriceLimitRatio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setMaxPriceLimitRatio = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional google.protobuf.Duration max_order_lifespan = 10;
 * @return {?proto.google.protobuf.Duration}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getMaxOrderLifespan = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 10));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
*/
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setMaxOrderLifespan = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.clearMaxOrderLifespan = function() {
  return this.setMaxOrderLifespan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.hasMaxOrderLifespan = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string swap_fee_rate = 11;
 * @return {string}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getSwapFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setSwapFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string withdraw_fee_rate = 12;
 * @return {string}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getWithdrawFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setWithdrawFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional uint64 deposit_extra_gas = 13;
 * @return {number}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getDepositExtraGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setDepositExtraGas = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional uint64 withdraw_extra_gas = 14;
 * @return {number}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getWithdrawExtraGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setWithdrawExtraGas = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional uint64 order_extra_gas = 15;
 * @return {number}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getOrderExtraGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setOrderExtraGas = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string swap_fee_distr_denom = 16;
 * @return {string}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getSwapFeeDistrDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setSwapFeeDistrDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string swap_fee_burn_rate = 17;
 * @return {string}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getSwapFeeBurnRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setSwapFeeBurnRate = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional uint64 app_id = 18;
 * @return {number}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getAppId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setAppId = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional uint64 max_num_market_making_order_ticks = 19;
 * @return {number}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getMaxNumMarketMakingOrderTicks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setMaxNumMarketMakingOrderTicks = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional uint64 max_num_active_pools_per_pair = 20;
 * @return {number}
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.getMaxNumActivePoolsPerPair = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.comdex.liquidity.v1beta1.GenericParams} returns this
 */
proto.comdex.liquidity.v1beta1.GenericParams.prototype.setMaxNumActivePoolsPerPair = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};



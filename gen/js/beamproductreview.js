// source: lum-network/beam/beam.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.lum.network.beam.BeamProductReview');
goog.provide('proto.lum.network.beam.BeamProductReview.BeamProduct');
goog.provide('proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds');
goog.provide('proto.lum.network.beam.BeamProductReview.BeamProductReviewContent');
goog.provide('proto.lum.network.beam.BeamProductReview.BeamProductReviewRating');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.lum.network.beam.BeamMedia');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lum.network.beam.BeamProductReview = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lum.network.beam.BeamProductReview.repeatedFields_, null);
};
goog.inherits(proto.lum.network.beam.BeamProductReview, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lum.network.beam.BeamProductReview.displayName = 'proto.lum.network.beam.BeamProductReview';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewRating = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lum.network.beam.BeamProductReview.BeamProductReviewRating, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.displayName = 'proto.lum.network.beam.BeamProductReview.BeamProductReviewRating';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lum.network.beam.BeamProductReview.BeamProductReviewContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.displayName = 'proto.lum.network.beam.BeamProductReview.BeamProductReviewContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lum.network.beam.BeamProductReview.BeamProduct = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lum.network.beam.BeamProductReview.BeamProduct.repeatedFields_, null);
};
goog.inherits(proto.lum.network.beam.BeamProductReview.BeamProduct, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lum.network.beam.BeamProductReview.BeamProduct.displayName = 'proto.lum.network.beam.BeamProductReview.BeamProduct';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.repeatedFields_, null);
};
goog.inherits(proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.displayName = 'proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lum.network.beam.BeamProductReview.repeatedFields_ = [10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lum.network.beam.BeamProductReview.prototype.toObject = function(opt_includeInstance) {
  return proto.lum.network.beam.BeamProductReview.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lum.network.beam.BeamProductReview} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.BeamProductReview.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reviewId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ratingUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    reviewUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    collectionMethod: jspb.Message.getFieldWithDefault(msg, 5, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 6, ""),
    ratings: (f = msg.getRatings()) && proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 8, ""),
    content: (f = msg.getContent()) && proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.toObject(includeInstance, f),
    mediasList: jspb.Message.toObjectList(msg.getMediasList(),
    proto.lum.network.beam.BeamMedia.toObject, includeInstance),
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.lum.network.beam.BeamProductReview.BeamProduct.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lum.network.beam.BeamProductReview}
 */
proto.lum.network.beam.BeamProductReview.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lum.network.beam.BeamProductReview;
  return proto.lum.network.beam.BeamProductReview.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lum.network.beam.BeamProductReview} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lum.network.beam.BeamProductReview}
 */
proto.lum.network.beam.BeamProductReview.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReviewId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRatingUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReviewUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionMethod(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 7:
      var value = new proto.lum.network.beam.BeamProductReview.BeamProductReviewRating;
      reader.readMessage(value,proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.deserializeBinaryFromReader);
      msg.setRatings(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 9:
      var value = new proto.lum.network.beam.BeamProductReview.BeamProductReviewContent;
      reader.readMessage(value,proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    case 10:
      var value = new proto.lum.network.beam.BeamMedia;
      reader.readMessage(value,proto.lum.network.beam.BeamMedia.deserializeBinaryFromReader);
      msg.addMedias(value);
      break;
    case 11:
      var value = new proto.lum.network.beam.BeamProductReview.BeamProduct;
      reader.readMessage(value,proto.lum.network.beam.BeamProductReview.BeamProduct.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lum.network.beam.BeamProductReview.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lum.network.beam.BeamProductReview.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lum.network.beam.BeamProductReview} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.BeamProductReview.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReviewId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRatingUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReviewUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCollectionMethod();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRatings();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.serializeBinaryToWriter
    );
  }
  f = message.getMediasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.lum.network.beam.BeamMedia.serializeBinaryToWriter
    );
  }
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.lum.network.beam.BeamProductReview.BeamProduct.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.prototype.toObject = function(opt_includeInstance) {
  return proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProductReviewRating} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.toObject = function(includeInstance, msg) {
  var f, obj = {
    overall: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    quality: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProductReviewRating}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lum.network.beam.BeamProductReview.BeamProductReviewRating;
  return proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProductReviewRating} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProductReviewRating}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOverall(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setQuality(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProductReviewRating} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOverall();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getQuality();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float overall = 1;
 * @return {number}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.prototype.getOverall = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProductReviewRating} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.prototype.setOverall = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float quality = 2;
 * @return {number}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.prototype.getQuality = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProductReviewRating} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewRating.prototype.setQuality = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.prototype.toObject = function(opt_includeInstance) {
  return proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProductReviewContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    overall: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pros: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cons: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProductReviewContent}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lum.network.beam.BeamProductReview.BeamProductReviewContent;
  return proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProductReviewContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProductReviewContent}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOverall(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPros(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCons(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProductReviewContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOverall();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPros();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCons();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string overall = 1;
 * @return {string}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.prototype.getOverall = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProductReviewContent} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.prototype.setOverall = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pros = 2;
 * @return {string}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.prototype.getPros = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProductReviewContent} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.prototype.setPros = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string cons = 3;
 * @return {string}
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.prototype.getCons = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProductReviewContent} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProductReviewContent.prototype.setCons = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.toObject = function(opt_includeInstance) {
  return proto.lum.network.beam.BeamProductReview.BeamProduct.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProduct} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    urlsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    ids: (f = msg.getIds()) && proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lum.network.beam.BeamProductReview.BeamProduct;
  return proto.lum.network.beam.BeamProductReview.BeamProduct.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProduct} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addUrls(value);
      break;
    case 4:
      var value = new proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds;
      reader.readMessage(value,proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.deserializeBinaryFromReader);
      msg.setIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lum.network.beam.BeamProductReview.BeamProduct.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProduct} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getIds();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.toObject = function(opt_includeInstance) {
  return proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.toObject = function(includeInstance, msg) {
  var f, obj = {
    gtinsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    mpnsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    skusList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    asinsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds;
  return proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addGtins(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addMpns(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addSkus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addAsins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGtinsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getMpnsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getSkusList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getAsinsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * repeated string gtins = 1;
 * @return {!Array<string>}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.getGtinsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.setGtinsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.addGtins = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.clearGtinsList = function() {
  return this.setGtinsList([]);
};


/**
 * repeated string mpns = 2;
 * @return {!Array<string>}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.getMpnsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.setMpnsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.addMpns = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.clearMpnsList = function() {
  return this.setMpnsList([]);
};


/**
 * repeated string skus = 3;
 * @return {!Array<string>}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.getSkusList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.setSkusList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.addSkus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.clearSkusList = function() {
  return this.setSkusList([]);
};


/**
 * repeated string asins = 4;
 * @return {!Array<string>}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.getAsinsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.setAsinsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.addAsins = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds.prototype.clearAsinsList = function() {
  return this.setAsinsList([]);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string urls = 3;
 * @return {!Array<string>}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.getUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.setUrlsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.addUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.clearUrlsList = function() {
  return this.setUrlsList([]);
};


/**
 * optional BeamProductIds ids = 4;
 * @return {?proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.getIds = function() {
  return /** @type{?proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds} */ (
    jspb.Message.getWrapperField(this, proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds, 4));
};


/**
 * @param {?proto.lum.network.beam.BeamProductReview.BeamProduct.BeamProductIds|undefined} value
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct} returns this
*/
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.setIds = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct} returns this
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.clearIds = function() {
  return this.setIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.beam.BeamProductReview.BeamProduct.prototype.hasIds = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.lum.network.beam.BeamProductReview.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
 */
proto.lum.network.beam.BeamProductReview.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string review_id = 2;
 * @return {string}
 */
proto.lum.network.beam.BeamProductReview.prototype.getReviewId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
 */
proto.lum.network.beam.BeamProductReview.prototype.setReviewId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string rating_url = 3;
 * @return {string}
 */
proto.lum.network.beam.BeamProductReview.prototype.getRatingUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
 */
proto.lum.network.beam.BeamProductReview.prototype.setRatingUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string review_url = 4;
 * @return {string}
 */
proto.lum.network.beam.BeamProductReview.prototype.getReviewUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
 */
proto.lum.network.beam.BeamProductReview.prototype.setReviewUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string collection_method = 5;
 * @return {string}
 */
proto.lum.network.beam.BeamProductReview.prototype.getCollectionMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
 */
proto.lum.network.beam.BeamProductReview.prototype.setCollectionMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string timestamp = 6;
 * @return {string}
 */
proto.lum.network.beam.BeamProductReview.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
 */
proto.lum.network.beam.BeamProductReview.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional BeamProductReviewRating ratings = 7;
 * @return {?proto.lum.network.beam.BeamProductReview.BeamProductReviewRating}
 */
proto.lum.network.beam.BeamProductReview.prototype.getRatings = function() {
  return /** @type{?proto.lum.network.beam.BeamProductReview.BeamProductReviewRating} */ (
    jspb.Message.getWrapperField(this, proto.lum.network.beam.BeamProductReview.BeamProductReviewRating, 7));
};


/**
 * @param {?proto.lum.network.beam.BeamProductReview.BeamProductReviewRating|undefined} value
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
*/
proto.lum.network.beam.BeamProductReview.prototype.setRatings = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
 */
proto.lum.network.beam.BeamProductReview.prototype.clearRatings = function() {
  return this.setRatings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.beam.BeamProductReview.prototype.hasRatings = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string title = 8;
 * @return {string}
 */
proto.lum.network.beam.BeamProductReview.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
 */
proto.lum.network.beam.BeamProductReview.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional BeamProductReviewContent content = 9;
 * @return {?proto.lum.network.beam.BeamProductReview.BeamProductReviewContent}
 */
proto.lum.network.beam.BeamProductReview.prototype.getContent = function() {
  return /** @type{?proto.lum.network.beam.BeamProductReview.BeamProductReviewContent} */ (
    jspb.Message.getWrapperField(this, proto.lum.network.beam.BeamProductReview.BeamProductReviewContent, 9));
};


/**
 * @param {?proto.lum.network.beam.BeamProductReview.BeamProductReviewContent|undefined} value
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
*/
proto.lum.network.beam.BeamProductReview.prototype.setContent = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
 */
proto.lum.network.beam.BeamProductReview.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.beam.BeamProductReview.prototype.hasContent = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated BeamMedia medias = 10;
 * @return {!Array<!proto.lum.network.beam.BeamMedia>}
 */
proto.lum.network.beam.BeamProductReview.prototype.getMediasList = function() {
  return /** @type{!Array<!proto.lum.network.beam.BeamMedia>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.lum.network.beam.BeamMedia, 10));
};


/**
 * @param {!Array<!proto.lum.network.beam.BeamMedia>} value
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
*/
proto.lum.network.beam.BeamProductReview.prototype.setMediasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.lum.network.beam.BeamMedia=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lum.network.beam.BeamMedia}
 */
proto.lum.network.beam.BeamProductReview.prototype.addMedias = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.lum.network.beam.BeamMedia, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
 */
proto.lum.network.beam.BeamProductReview.prototype.clearMediasList = function() {
  return this.setMediasList([]);
};


/**
 * repeated BeamProduct products = 11;
 * @return {!Array<!proto.lum.network.beam.BeamProductReview.BeamProduct>}
 */
proto.lum.network.beam.BeamProductReview.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.lum.network.beam.BeamProductReview.BeamProduct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.lum.network.beam.BeamProductReview.BeamProduct, 11));
};


/**
 * @param {!Array<!proto.lum.network.beam.BeamProductReview.BeamProduct>} value
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
*/
proto.lum.network.beam.BeamProductReview.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.lum.network.beam.BeamProductReview.BeamProduct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lum.network.beam.BeamProductReview.BeamProduct}
 */
proto.lum.network.beam.BeamProductReview.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.lum.network.beam.BeamProductReview.BeamProduct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lum.network.beam.BeamProductReview} returns this
 */
proto.lum.network.beam.BeamProductReview.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};



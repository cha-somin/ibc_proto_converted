// source: osmosis/incentives/gauge.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.osmosis.incentives.Gauge');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.cosmos.base.v1beta1.Coin');
goog.require('proto.google.protobuf.Timestamp');
goog.require('proto.osmosis.lockup.QueryCondition');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.osmosis.incentives.Gauge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.osmosis.incentives.Gauge.repeatedFields_, null);
};
goog.inherits(proto.osmosis.incentives.Gauge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.osmosis.incentives.Gauge.displayName = 'proto.osmosis.incentives.Gauge';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.osmosis.incentives.Gauge.repeatedFields_ = [4,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.osmosis.incentives.Gauge.prototype.toObject = function(opt_includeInstance) {
  return proto.osmosis.incentives.Gauge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.osmosis.incentives.Gauge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.osmosis.incentives.Gauge.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isPerpetual: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    distributeTo: (f = msg.getDistributeTo()) && proto.osmosis.lockup.QueryCondition.toObject(includeInstance, f),
    coinsList: jspb.Message.toObjectList(msg.getCoinsList(),
    proto.cosmos.base.v1beta1.Coin.toObject, includeInstance),
    startTime: (f = msg.getStartTime()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    numEpochsPaidOver: jspb.Message.getFieldWithDefault(msg, 6, 0),
    filledEpochs: jspb.Message.getFieldWithDefault(msg, 7, 0),
    distributedCoinsList: jspb.Message.toObjectList(msg.getDistributedCoinsList(),
    proto.cosmos.base.v1beta1.Coin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.osmosis.incentives.Gauge}
 */
proto.osmosis.incentives.Gauge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.osmosis.incentives.Gauge;
  return proto.osmosis.incentives.Gauge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.osmosis.incentives.Gauge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.osmosis.incentives.Gauge}
 */
proto.osmosis.incentives.Gauge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPerpetual(value);
      break;
    case 3:
      var value = new proto.osmosis.lockup.QueryCondition;
      reader.readMessage(value,proto.osmosis.lockup.QueryCondition.deserializeBinaryFromReader);
      msg.setDistributeTo(value);
      break;
    case 4:
      var value = new proto.cosmos.base.v1beta1.Coin;
      reader.readMessage(value,proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader);
      msg.addCoins(value);
      break;
    case 5:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumEpochsPaidOver(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFilledEpochs(value);
      break;
    case 8:
      var value = new proto.cosmos.base.v1beta1.Coin;
      reader.readMessage(value,proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader);
      msg.addDistributedCoins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.osmosis.incentives.Gauge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.osmosis.incentives.Gauge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.osmosis.incentives.Gauge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.osmosis.incentives.Gauge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getIsPerpetual();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDistributeTo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.osmosis.lockup.QueryCondition.serializeBinaryToWriter
    );
  }
  f = message.getCoinsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNumEpochsPaidOver();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getFilledEpochs();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getDistributedCoinsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.osmosis.incentives.Gauge.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.osmosis.incentives.Gauge} returns this
 */
proto.osmosis.incentives.Gauge.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool is_perpetual = 2;
 * @return {boolean}
 */
proto.osmosis.incentives.Gauge.prototype.getIsPerpetual = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.osmosis.incentives.Gauge} returns this
 */
proto.osmosis.incentives.Gauge.prototype.setIsPerpetual = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional osmosis.lockup.QueryCondition distribute_to = 3;
 * @return {?proto.osmosis.lockup.QueryCondition}
 */
proto.osmosis.incentives.Gauge.prototype.getDistributeTo = function() {
  return /** @type{?proto.osmosis.lockup.QueryCondition} */ (
    jspb.Message.getWrapperField(this, proto.osmosis.lockup.QueryCondition, 3));
};


/**
 * @param {?proto.osmosis.lockup.QueryCondition|undefined} value
 * @return {!proto.osmosis.incentives.Gauge} returns this
*/
proto.osmosis.incentives.Gauge.prototype.setDistributeTo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.osmosis.incentives.Gauge} returns this
 */
proto.osmosis.incentives.Gauge.prototype.clearDistributeTo = function() {
  return this.setDistributeTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.osmosis.incentives.Gauge.prototype.hasDistributeTo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated cosmos.base.v1beta1.Coin coins = 4;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.osmosis.incentives.Gauge.prototype.getCoinsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cosmos.base.v1beta1.Coin, 4));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.osmosis.incentives.Gauge} returns this
*/
proto.osmosis.incentives.Gauge.prototype.setCoinsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.osmosis.incentives.Gauge.prototype.addCoins = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.osmosis.incentives.Gauge} returns this
 */
proto.osmosis.incentives.Gauge.prototype.clearCoinsList = function() {
  return this.setCoinsList([]);
};


/**
 * optional google.protobuf.Timestamp start_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.osmosis.incentives.Gauge.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.osmosis.incentives.Gauge} returns this
*/
proto.osmosis.incentives.Gauge.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.osmosis.incentives.Gauge} returns this
 */
proto.osmosis.incentives.Gauge.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.osmosis.incentives.Gauge.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 num_epochs_paid_over = 6;
 * @return {number}
 */
proto.osmosis.incentives.Gauge.prototype.getNumEpochsPaidOver = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.osmosis.incentives.Gauge} returns this
 */
proto.osmosis.incentives.Gauge.prototype.setNumEpochsPaidOver = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 filled_epochs = 7;
 * @return {number}
 */
proto.osmosis.incentives.Gauge.prototype.getFilledEpochs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.osmosis.incentives.Gauge} returns this
 */
proto.osmosis.incentives.Gauge.prototype.setFilledEpochs = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin distributed_coins = 8;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.osmosis.incentives.Gauge.prototype.getDistributedCoinsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cosmos.base.v1beta1.Coin, 8));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.osmosis.incentives.Gauge} returns this
*/
proto.osmosis.incentives.Gauge.prototype.setDistributedCoinsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.osmosis.incentives.Gauge.prototype.addDistributedCoins = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.osmosis.incentives.Gauge} returns this
 */
proto.osmosis.incentives.Gauge.prototype.clearDistributedCoinsList = function() {
  return this.setDistributedCoinsList([]);
};



// source: panacea/did/v2/did.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.panacea.did.v2.DIDDocument');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.panacea.did.v2.Service');
goog.require('proto.panacea.did.v2.Strings');
goog.require('proto.panacea.did.v2.VerificationMethod');
goog.require('proto.panacea.did.v2.VerificationRelationship');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.panacea.did.v2.DIDDocument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.panacea.did.v2.DIDDocument.repeatedFields_, null);
};
goog.inherits(proto.panacea.did.v2.DIDDocument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.panacea.did.v2.DIDDocument.displayName = 'proto.panacea.did.v2.DIDDocument';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.panacea.did.v2.DIDDocument.repeatedFields_ = [4,5,6,7,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.panacea.did.v2.DIDDocument.prototype.toObject = function(opt_includeInstance) {
  return proto.panacea.did.v2.DIDDocument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.panacea.did.v2.DIDDocument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panacea.did.v2.DIDDocument.toObject = function(includeInstance, msg) {
  var f, obj = {
    contexts: (f = msg.getContexts()) && proto.panacea.did.v2.Strings.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    controller: (f = msg.getController()) && proto.panacea.did.v2.Strings.toObject(includeInstance, f),
    verificationMethodsList: jspb.Message.toObjectList(msg.getVerificationMethodsList(),
    proto.panacea.did.v2.VerificationMethod.toObject, includeInstance),
    authenticationsList: jspb.Message.toObjectList(msg.getAuthenticationsList(),
    proto.panacea.did.v2.VerificationRelationship.toObject, includeInstance),
    assertionMethodsList: jspb.Message.toObjectList(msg.getAssertionMethodsList(),
    proto.panacea.did.v2.VerificationRelationship.toObject, includeInstance),
    keyAgreementsList: jspb.Message.toObjectList(msg.getKeyAgreementsList(),
    proto.panacea.did.v2.VerificationRelationship.toObject, includeInstance),
    capabilityInvocationsList: jspb.Message.toObjectList(msg.getCapabilityInvocationsList(),
    proto.panacea.did.v2.VerificationRelationship.toObject, includeInstance),
    capabilityDelegationsList: jspb.Message.toObjectList(msg.getCapabilityDelegationsList(),
    proto.panacea.did.v2.VerificationRelationship.toObject, includeInstance),
    servicesList: jspb.Message.toObjectList(msg.getServicesList(),
    proto.panacea.did.v2.Service.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.panacea.did.v2.DIDDocument}
 */
proto.panacea.did.v2.DIDDocument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.panacea.did.v2.DIDDocument;
  return proto.panacea.did.v2.DIDDocument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.panacea.did.v2.DIDDocument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.panacea.did.v2.DIDDocument}
 */
proto.panacea.did.v2.DIDDocument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.panacea.did.v2.Strings;
      reader.readMessage(value,proto.panacea.did.v2.Strings.deserializeBinaryFromReader);
      msg.setContexts(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = new proto.panacea.did.v2.Strings;
      reader.readMessage(value,proto.panacea.did.v2.Strings.deserializeBinaryFromReader);
      msg.setController(value);
      break;
    case 4:
      var value = new proto.panacea.did.v2.VerificationMethod;
      reader.readMessage(value,proto.panacea.did.v2.VerificationMethod.deserializeBinaryFromReader);
      msg.addVerificationMethods(value);
      break;
    case 5:
      var value = new proto.panacea.did.v2.VerificationRelationship;
      reader.readMessage(value,proto.panacea.did.v2.VerificationRelationship.deserializeBinaryFromReader);
      msg.addAuthentications(value);
      break;
    case 6:
      var value = new proto.panacea.did.v2.VerificationRelationship;
      reader.readMessage(value,proto.panacea.did.v2.VerificationRelationship.deserializeBinaryFromReader);
      msg.addAssertionMethods(value);
      break;
    case 7:
      var value = new proto.panacea.did.v2.VerificationRelationship;
      reader.readMessage(value,proto.panacea.did.v2.VerificationRelationship.deserializeBinaryFromReader);
      msg.addKeyAgreements(value);
      break;
    case 8:
      var value = new proto.panacea.did.v2.VerificationRelationship;
      reader.readMessage(value,proto.panacea.did.v2.VerificationRelationship.deserializeBinaryFromReader);
      msg.addCapabilityInvocations(value);
      break;
    case 9:
      var value = new proto.panacea.did.v2.VerificationRelationship;
      reader.readMessage(value,proto.panacea.did.v2.VerificationRelationship.deserializeBinaryFromReader);
      msg.addCapabilityDelegations(value);
      break;
    case 10:
      var value = new proto.panacea.did.v2.Service;
      reader.readMessage(value,proto.panacea.did.v2.Service.deserializeBinaryFromReader);
      msg.addServices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.panacea.did.v2.DIDDocument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.panacea.did.v2.DIDDocument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.panacea.did.v2.DIDDocument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.panacea.did.v2.DIDDocument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContexts();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.panacea.did.v2.Strings.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getController();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.panacea.did.v2.Strings.serializeBinaryToWriter
    );
  }
  f = message.getVerificationMethodsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.panacea.did.v2.VerificationMethod.serializeBinaryToWriter
    );
  }
  f = message.getAuthenticationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.panacea.did.v2.VerificationRelationship.serializeBinaryToWriter
    );
  }
  f = message.getAssertionMethodsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.panacea.did.v2.VerificationRelationship.serializeBinaryToWriter
    );
  }
  f = message.getKeyAgreementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.panacea.did.v2.VerificationRelationship.serializeBinaryToWriter
    );
  }
  f = message.getCapabilityInvocationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.panacea.did.v2.VerificationRelationship.serializeBinaryToWriter
    );
  }
  f = message.getCapabilityDelegationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.panacea.did.v2.VerificationRelationship.serializeBinaryToWriter
    );
  }
  f = message.getServicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.panacea.did.v2.Service.serializeBinaryToWriter
    );
  }
};


/**
 * optional Strings contexts = 1;
 * @return {?proto.panacea.did.v2.Strings}
 */
proto.panacea.did.v2.DIDDocument.prototype.getContexts = function() {
  return /** @type{?proto.panacea.did.v2.Strings} */ (
    jspb.Message.getWrapperField(this, proto.panacea.did.v2.Strings, 1));
};


/**
 * @param {?proto.panacea.did.v2.Strings|undefined} value
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
*/
proto.panacea.did.v2.DIDDocument.prototype.setContexts = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
 */
proto.panacea.did.v2.DIDDocument.prototype.clearContexts = function() {
  return this.setContexts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.panacea.did.v2.DIDDocument.prototype.hasContexts = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.panacea.did.v2.DIDDocument.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
 */
proto.panacea.did.v2.DIDDocument.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Strings controller = 3;
 * @return {?proto.panacea.did.v2.Strings}
 */
proto.panacea.did.v2.DIDDocument.prototype.getController = function() {
  return /** @type{?proto.panacea.did.v2.Strings} */ (
    jspb.Message.getWrapperField(this, proto.panacea.did.v2.Strings, 3));
};


/**
 * @param {?proto.panacea.did.v2.Strings|undefined} value
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
*/
proto.panacea.did.v2.DIDDocument.prototype.setController = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
 */
proto.panacea.did.v2.DIDDocument.prototype.clearController = function() {
  return this.setController(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.panacea.did.v2.DIDDocument.prototype.hasController = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated VerificationMethod verification_methods = 4;
 * @return {!Array<!proto.panacea.did.v2.VerificationMethod>}
 */
proto.panacea.did.v2.DIDDocument.prototype.getVerificationMethodsList = function() {
  return /** @type{!Array<!proto.panacea.did.v2.VerificationMethod>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.panacea.did.v2.VerificationMethod, 4));
};


/**
 * @param {!Array<!proto.panacea.did.v2.VerificationMethod>} value
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
*/
proto.panacea.did.v2.DIDDocument.prototype.setVerificationMethodsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.panacea.did.v2.VerificationMethod=} opt_value
 * @param {number=} opt_index
 * @return {!proto.panacea.did.v2.VerificationMethod}
 */
proto.panacea.did.v2.DIDDocument.prototype.addVerificationMethods = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.panacea.did.v2.VerificationMethod, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
 */
proto.panacea.did.v2.DIDDocument.prototype.clearVerificationMethodsList = function() {
  return this.setVerificationMethodsList([]);
};


/**
 * repeated VerificationRelationship authentications = 5;
 * @return {!Array<!proto.panacea.did.v2.VerificationRelationship>}
 */
proto.panacea.did.v2.DIDDocument.prototype.getAuthenticationsList = function() {
  return /** @type{!Array<!proto.panacea.did.v2.VerificationRelationship>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.panacea.did.v2.VerificationRelationship, 5));
};


/**
 * @param {!Array<!proto.panacea.did.v2.VerificationRelationship>} value
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
*/
proto.panacea.did.v2.DIDDocument.prototype.setAuthenticationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.panacea.did.v2.VerificationRelationship=} opt_value
 * @param {number=} opt_index
 * @return {!proto.panacea.did.v2.VerificationRelationship}
 */
proto.panacea.did.v2.DIDDocument.prototype.addAuthentications = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.panacea.did.v2.VerificationRelationship, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
 */
proto.panacea.did.v2.DIDDocument.prototype.clearAuthenticationsList = function() {
  return this.setAuthenticationsList([]);
};


/**
 * repeated VerificationRelationship assertion_methods = 6;
 * @return {!Array<!proto.panacea.did.v2.VerificationRelationship>}
 */
proto.panacea.did.v2.DIDDocument.prototype.getAssertionMethodsList = function() {
  return /** @type{!Array<!proto.panacea.did.v2.VerificationRelationship>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.panacea.did.v2.VerificationRelationship, 6));
};


/**
 * @param {!Array<!proto.panacea.did.v2.VerificationRelationship>} value
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
*/
proto.panacea.did.v2.DIDDocument.prototype.setAssertionMethodsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.panacea.did.v2.VerificationRelationship=} opt_value
 * @param {number=} opt_index
 * @return {!proto.panacea.did.v2.VerificationRelationship}
 */
proto.panacea.did.v2.DIDDocument.prototype.addAssertionMethods = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.panacea.did.v2.VerificationRelationship, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
 */
proto.panacea.did.v2.DIDDocument.prototype.clearAssertionMethodsList = function() {
  return this.setAssertionMethodsList([]);
};


/**
 * repeated VerificationRelationship key_agreements = 7;
 * @return {!Array<!proto.panacea.did.v2.VerificationRelationship>}
 */
proto.panacea.did.v2.DIDDocument.prototype.getKeyAgreementsList = function() {
  return /** @type{!Array<!proto.panacea.did.v2.VerificationRelationship>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.panacea.did.v2.VerificationRelationship, 7));
};


/**
 * @param {!Array<!proto.panacea.did.v2.VerificationRelationship>} value
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
*/
proto.panacea.did.v2.DIDDocument.prototype.setKeyAgreementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.panacea.did.v2.VerificationRelationship=} opt_value
 * @param {number=} opt_index
 * @return {!proto.panacea.did.v2.VerificationRelationship}
 */
proto.panacea.did.v2.DIDDocument.prototype.addKeyAgreements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.panacea.did.v2.VerificationRelationship, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
 */
proto.panacea.did.v2.DIDDocument.prototype.clearKeyAgreementsList = function() {
  return this.setKeyAgreementsList([]);
};


/**
 * repeated VerificationRelationship capability_invocations = 8;
 * @return {!Array<!proto.panacea.did.v2.VerificationRelationship>}
 */
proto.panacea.did.v2.DIDDocument.prototype.getCapabilityInvocationsList = function() {
  return /** @type{!Array<!proto.panacea.did.v2.VerificationRelationship>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.panacea.did.v2.VerificationRelationship, 8));
};


/**
 * @param {!Array<!proto.panacea.did.v2.VerificationRelationship>} value
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
*/
proto.panacea.did.v2.DIDDocument.prototype.setCapabilityInvocationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.panacea.did.v2.VerificationRelationship=} opt_value
 * @param {number=} opt_index
 * @return {!proto.panacea.did.v2.VerificationRelationship}
 */
proto.panacea.did.v2.DIDDocument.prototype.addCapabilityInvocations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.panacea.did.v2.VerificationRelationship, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
 */
proto.panacea.did.v2.DIDDocument.prototype.clearCapabilityInvocationsList = function() {
  return this.setCapabilityInvocationsList([]);
};


/**
 * repeated VerificationRelationship capability_delegations = 9;
 * @return {!Array<!proto.panacea.did.v2.VerificationRelationship>}
 */
proto.panacea.did.v2.DIDDocument.prototype.getCapabilityDelegationsList = function() {
  return /** @type{!Array<!proto.panacea.did.v2.VerificationRelationship>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.panacea.did.v2.VerificationRelationship, 9));
};


/**
 * @param {!Array<!proto.panacea.did.v2.VerificationRelationship>} value
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
*/
proto.panacea.did.v2.DIDDocument.prototype.setCapabilityDelegationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.panacea.did.v2.VerificationRelationship=} opt_value
 * @param {number=} opt_index
 * @return {!proto.panacea.did.v2.VerificationRelationship}
 */
proto.panacea.did.v2.DIDDocument.prototype.addCapabilityDelegations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.panacea.did.v2.VerificationRelationship, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
 */
proto.panacea.did.v2.DIDDocument.prototype.clearCapabilityDelegationsList = function() {
  return this.setCapabilityDelegationsList([]);
};


/**
 * repeated Service services = 10;
 * @return {!Array<!proto.panacea.did.v2.Service>}
 */
proto.panacea.did.v2.DIDDocument.prototype.getServicesList = function() {
  return /** @type{!Array<!proto.panacea.did.v2.Service>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.panacea.did.v2.Service, 10));
};


/**
 * @param {!Array<!proto.panacea.did.v2.Service>} value
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
*/
proto.panacea.did.v2.DIDDocument.prototype.setServicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.panacea.did.v2.Service=} opt_value
 * @param {number=} opt_index
 * @return {!proto.panacea.did.v2.Service}
 */
proto.panacea.did.v2.DIDDocument.prototype.addServices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.panacea.did.v2.Service, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.panacea.did.v2.DIDDocument} returns this
 */
proto.panacea.did.v2.DIDDocument.prototype.clearServicesList = function() {
  return this.setServicesList([]);
};



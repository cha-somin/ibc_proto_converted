// source: desmos/posts/v2/models.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.desmos.posts.v2.Poll');
goog.provide('proto.desmos.posts.v2.Poll.ProvidedAnswer');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.desmos.posts.v2.Attachment');
goog.require('proto.desmos.posts.v2.PollTallyResults');
goog.require('proto.google.protobuf.Timestamp');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.desmos.posts.v2.Poll = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.desmos.posts.v2.Poll.repeatedFields_, null);
};
goog.inherits(proto.desmos.posts.v2.Poll, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.desmos.posts.v2.Poll.displayName = 'proto.desmos.posts.v2.Poll';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.desmos.posts.v2.Poll.ProvidedAnswer.repeatedFields_, null);
};
goog.inherits(proto.desmos.posts.v2.Poll.ProvidedAnswer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.desmos.posts.v2.Poll.ProvidedAnswer.displayName = 'proto.desmos.posts.v2.Poll.ProvidedAnswer';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.desmos.posts.v2.Poll.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.desmos.posts.v2.Poll.prototype.toObject = function(opt_includeInstance) {
  return proto.desmos.posts.v2.Poll.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.desmos.posts.v2.Poll} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.desmos.posts.v2.Poll.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, ""),
    providedAnswersList: jspb.Message.toObjectList(msg.getProvidedAnswersList(),
    proto.desmos.posts.v2.Poll.ProvidedAnswer.toObject, includeInstance),
    endDate: (f = msg.getEndDate()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    allowsMultipleAnswers: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    allowsAnswerEdits: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    finalTallyResults: (f = msg.getFinalTallyResults()) && proto.desmos.posts.v2.PollTallyResults.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.desmos.posts.v2.Poll}
 */
proto.desmos.posts.v2.Poll.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.desmos.posts.v2.Poll;
  return proto.desmos.posts.v2.Poll.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.desmos.posts.v2.Poll} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.desmos.posts.v2.Poll}
 */
proto.desmos.posts.v2.Poll.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = new proto.desmos.posts.v2.Poll.ProvidedAnswer;
      reader.readMessage(value,proto.desmos.posts.v2.Poll.ProvidedAnswer.deserializeBinaryFromReader);
      msg.addProvidedAnswers(value);
      break;
    case 3:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setEndDate(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowsMultipleAnswers(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowsAnswerEdits(value);
      break;
    case 6:
      var value = new proto.desmos.posts.v2.PollTallyResults;
      reader.readMessage(value,proto.desmos.posts.v2.PollTallyResults.deserializeBinaryFromReader);
      msg.setFinalTallyResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.desmos.posts.v2.Poll.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.desmos.posts.v2.Poll.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.desmos.posts.v2.Poll} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.desmos.posts.v2.Poll.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProvidedAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.desmos.posts.v2.Poll.ProvidedAnswer.serializeBinaryToWriter
    );
  }
  f = message.getEndDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAllowsMultipleAnswers();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getAllowsAnswerEdits();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getFinalTallyResults();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.desmos.posts.v2.PollTallyResults.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer.prototype.toObject = function(opt_includeInstance) {
  return proto.desmos.posts.v2.Poll.ProvidedAnswer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.desmos.posts.v2.Poll.ProvidedAnswer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attachmentsList: jspb.Message.toObjectList(msg.getAttachmentsList(),
    proto.desmos.posts.v2.Attachment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.desmos.posts.v2.Poll.ProvidedAnswer}
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.desmos.posts.v2.Poll.ProvidedAnswer;
  return proto.desmos.posts.v2.Poll.ProvidedAnswer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.desmos.posts.v2.Poll.ProvidedAnswer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.desmos.posts.v2.Poll.ProvidedAnswer}
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = new proto.desmos.posts.v2.Attachment;
      reader.readMessage(value,proto.desmos.posts.v2.Attachment.deserializeBinaryFromReader);
      msg.addAttachments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.desmos.posts.v2.Poll.ProvidedAnswer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.desmos.posts.v2.Poll.ProvidedAnswer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttachmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.desmos.posts.v2.Attachment.serializeBinaryToWriter
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.desmos.posts.v2.Poll.ProvidedAnswer} returns this
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Attachment attachments = 2;
 * @return {!Array<!proto.desmos.posts.v2.Attachment>}
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer.prototype.getAttachmentsList = function() {
  return /** @type{!Array<!proto.desmos.posts.v2.Attachment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.desmos.posts.v2.Attachment, 2));
};


/**
 * @param {!Array<!proto.desmos.posts.v2.Attachment>} value
 * @return {!proto.desmos.posts.v2.Poll.ProvidedAnswer} returns this
*/
proto.desmos.posts.v2.Poll.ProvidedAnswer.prototype.setAttachmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.desmos.posts.v2.Attachment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.desmos.posts.v2.Attachment}
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer.prototype.addAttachments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.desmos.posts.v2.Attachment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.desmos.posts.v2.Poll.ProvidedAnswer} returns this
 */
proto.desmos.posts.v2.Poll.ProvidedAnswer.prototype.clearAttachmentsList = function() {
  return this.setAttachmentsList([]);
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.desmos.posts.v2.Poll.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.desmos.posts.v2.Poll} returns this
 */
proto.desmos.posts.v2.Poll.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ProvidedAnswer provided_answers = 2;
 * @return {!Array<!proto.desmos.posts.v2.Poll.ProvidedAnswer>}
 */
proto.desmos.posts.v2.Poll.prototype.getProvidedAnswersList = function() {
  return /** @type{!Array<!proto.desmos.posts.v2.Poll.ProvidedAnswer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.desmos.posts.v2.Poll.ProvidedAnswer, 2));
};


/**
 * @param {!Array<!proto.desmos.posts.v2.Poll.ProvidedAnswer>} value
 * @return {!proto.desmos.posts.v2.Poll} returns this
*/
proto.desmos.posts.v2.Poll.prototype.setProvidedAnswersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.desmos.posts.v2.Poll.ProvidedAnswer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.desmos.posts.v2.Poll.ProvidedAnswer}
 */
proto.desmos.posts.v2.Poll.prototype.addProvidedAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.desmos.posts.v2.Poll.ProvidedAnswer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.desmos.posts.v2.Poll} returns this
 */
proto.desmos.posts.v2.Poll.prototype.clearProvidedAnswersList = function() {
  return this.setProvidedAnswersList([]);
};


/**
 * optional google.protobuf.Timestamp end_date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.desmos.posts.v2.Poll.prototype.getEndDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.desmos.posts.v2.Poll} returns this
*/
proto.desmos.posts.v2.Poll.prototype.setEndDate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.desmos.posts.v2.Poll} returns this
 */
proto.desmos.posts.v2.Poll.prototype.clearEndDate = function() {
  return this.setEndDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.desmos.posts.v2.Poll.prototype.hasEndDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool allows_multiple_answers = 4;
 * @return {boolean}
 */
proto.desmos.posts.v2.Poll.prototype.getAllowsMultipleAnswers = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.desmos.posts.v2.Poll} returns this
 */
proto.desmos.posts.v2.Poll.prototype.setAllowsMultipleAnswers = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool allows_answer_edits = 5;
 * @return {boolean}
 */
proto.desmos.posts.v2.Poll.prototype.getAllowsAnswerEdits = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.desmos.posts.v2.Poll} returns this
 */
proto.desmos.posts.v2.Poll.prototype.setAllowsAnswerEdits = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional PollTallyResults final_tally_results = 6;
 * @return {?proto.desmos.posts.v2.PollTallyResults}
 */
proto.desmos.posts.v2.Poll.prototype.getFinalTallyResults = function() {
  return /** @type{?proto.desmos.posts.v2.PollTallyResults} */ (
    jspb.Message.getWrapperField(this, proto.desmos.posts.v2.PollTallyResults, 6));
};


/**
 * @param {?proto.desmos.posts.v2.PollTallyResults|undefined} value
 * @return {!proto.desmos.posts.v2.Poll} returns this
*/
proto.desmos.posts.v2.Poll.prototype.setFinalTallyResults = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.desmos.posts.v2.Poll} returns this
 */
proto.desmos.posts.v2.Poll.prototype.clearFinalTallyResults = function() {
  return this.setFinalTallyResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.desmos.posts.v2.Poll.prototype.hasFinalTallyResults = function() {
  return jspb.Message.getField(this, 6) != null;
};



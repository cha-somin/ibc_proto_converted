// source: OmniFlix/itc/v1/tx.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.OmniFlix.itc.v1.MsgCreateCampaign');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.OmniFlix.itc.v1.Distribution');
goog.require('proto.OmniFlix.itc.v1.NFTDetails');
goog.require('proto.cosmos.base.v1beta1.Coin');
goog.require('proto.google.protobuf.Duration');
goog.require('proto.google.protobuf.Timestamp');

goog.forwardDeclare('proto.OmniFlix.itc.v1.ClaimType');
goog.forwardDeclare('proto.OmniFlix.itc.v1.InteractionType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.OmniFlix.itc.v1.MsgCreateCampaign, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OmniFlix.itc.v1.MsgCreateCampaign.displayName = 'proto.OmniFlix.itc.v1.MsgCreateCampaign';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.toObject = function(opt_includeInstance) {
  return proto.OmniFlix.itc.v1.MsgCreateCampaign.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OmniFlix.itc.v1.MsgCreateCampaign} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    interaction: jspb.Message.getFieldWithDefault(msg, 3, 0),
    claimType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    nftDenomId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tokensPerClaim: (f = msg.getTokensPerClaim()) && proto.cosmos.base.v1beta1.Coin.toObject(includeInstance, f),
    maxAllowedClaims: jspb.Message.getFieldWithDefault(msg, 7, 0),
    deposit: (f = msg.getDeposit()) && proto.cosmos.base.v1beta1.Coin.toObject(includeInstance, f),
    nftMintDetails: (f = msg.getNftMintDetails()) && proto.OmniFlix.itc.v1.NFTDetails.toObject(includeInstance, f),
    startTime: (f = msg.getStartTime()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    duration: (f = msg.getDuration()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    distribution: (f = msg.getDistribution()) && proto.OmniFlix.itc.v1.Distribution.toObject(includeInstance, f),
    creator: jspb.Message.getFieldWithDefault(msg, 13, ""),
    creationFee: (f = msg.getCreationFee()) && proto.cosmos.base.v1beta1.Coin.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OmniFlix.itc.v1.MsgCreateCampaign;
  return proto.OmniFlix.itc.v1.MsgCreateCampaign.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OmniFlix.itc.v1.MsgCreateCampaign} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!proto.OmniFlix.itc.v1.InteractionType} */ (reader.readEnum());
      msg.setInteraction(value);
      break;
    case 4:
      var value = /** @type {!proto.OmniFlix.itc.v1.ClaimType} */ (reader.readEnum());
      msg.setClaimType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNftDenomId(value);
      break;
    case 6:
      var value = new proto.cosmos.base.v1beta1.Coin;
      reader.readMessage(value,proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader);
      msg.setTokensPerClaim(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxAllowedClaims(value);
      break;
    case 8:
      var value = new proto.cosmos.base.v1beta1.Coin;
      reader.readMessage(value,proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader);
      msg.setDeposit(value);
      break;
    case 9:
      var value = new proto.OmniFlix.itc.v1.NFTDetails;
      reader.readMessage(value,proto.OmniFlix.itc.v1.NFTDetails.deserializeBinaryFromReader);
      msg.setNftMintDetails(value);
      break;
    case 10:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 11:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    case 12:
      var value = new proto.OmniFlix.itc.v1.Distribution;
      reader.readMessage(value,proto.OmniFlix.itc.v1.Distribution.deserializeBinaryFromReader);
      msg.setDistribution(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    case 14:
      var value = new proto.cosmos.base.v1beta1.Coin;
      reader.readMessage(value,proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader);
      msg.setCreationFee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OmniFlix.itc.v1.MsgCreateCampaign.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OmniFlix.itc.v1.MsgCreateCampaign} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInteraction();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getClaimType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getNftDenomId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTokensPerClaim();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter
    );
  }
  f = message.getMaxAllowedClaims();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getDeposit();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter
    );
  }
  f = message.getNftMintDetails();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.OmniFlix.itc.v1.NFTDetails.serializeBinaryToWriter
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getDistribution();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.OmniFlix.itc.v1.Distribution.serializeBinaryToWriter
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCreationFee();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional InteractionType interaction = 3;
 * @return {!proto.OmniFlix.itc.v1.InteractionType}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getInteraction = function() {
  return /** @type {!proto.OmniFlix.itc.v1.InteractionType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.OmniFlix.itc.v1.InteractionType} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setInteraction = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional ClaimType claim_type = 4;
 * @return {!proto.OmniFlix.itc.v1.ClaimType}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getClaimType = function() {
  return /** @type {!proto.OmniFlix.itc.v1.ClaimType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.OmniFlix.itc.v1.ClaimType} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setClaimType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string nft_denom_id = 5;
 * @return {string}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getNftDenomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setNftDenomId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional cosmos.base.v1beta1.Coin tokens_per_claim = 6;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getTokensPerClaim = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, proto.cosmos.base.v1beta1.Coin, 6));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
*/
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setTokensPerClaim = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.clearTokensPerClaim = function() {
  return this.setTokensPerClaim(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.hasTokensPerClaim = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 max_allowed_claims = 7;
 * @return {number}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getMaxAllowedClaims = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setMaxAllowedClaims = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional cosmos.base.v1beta1.Coin deposit = 8;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getDeposit = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, proto.cosmos.base.v1beta1.Coin, 8));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
*/
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setDeposit = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.clearDeposit = function() {
  return this.setDeposit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.hasDeposit = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional NFTDetails nft_mint_details = 9;
 * @return {?proto.OmniFlix.itc.v1.NFTDetails}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getNftMintDetails = function() {
  return /** @type{?proto.OmniFlix.itc.v1.NFTDetails} */ (
    jspb.Message.getWrapperField(this, proto.OmniFlix.itc.v1.NFTDetails, 9));
};


/**
 * @param {?proto.OmniFlix.itc.v1.NFTDetails|undefined} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
*/
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setNftMintDetails = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.clearNftMintDetails = function() {
  return this.setNftMintDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.hasNftMintDetails = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp start_time = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
*/
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Duration duration = 11;
 * @return {?proto.google.protobuf.Duration}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 11));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
*/
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Distribution distribution = 12;
 * @return {?proto.OmniFlix.itc.v1.Distribution}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getDistribution = function() {
  return /** @type{?proto.OmniFlix.itc.v1.Distribution} */ (
    jspb.Message.getWrapperField(this, proto.OmniFlix.itc.v1.Distribution, 12));
};


/**
 * @param {?proto.OmniFlix.itc.v1.Distribution|undefined} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
*/
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setDistribution = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.clearDistribution = function() {
  return this.setDistribution(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.hasDistribution = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string creator = 13;
 * @return {string}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional cosmos.base.v1beta1.Coin creation_fee = 14;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.getCreationFee = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, proto.cosmos.base.v1beta1.Coin, 14));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
*/
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.setCreationFee = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OmniFlix.itc.v1.MsgCreateCampaign} returns this
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.clearCreationFee = function() {
  return this.setCreationFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OmniFlix.itc.v1.MsgCreateCampaign.prototype.hasCreationFee = function() {
  return jspb.Message.getField(this, 14) != null;
};



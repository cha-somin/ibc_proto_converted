// source: lum-network/millions/pool.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.lum.network.millions.Pool');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.cosmos.base.v1beta1.Coin');
goog.require('proto.google.protobuf.Timestamp');
goog.require('proto.lum.network.millions.DrawSchedule');
goog.require('proto.lum.network.millions.PoolValidator');
goog.require('proto.lum.network.millions.PrizeStrategy');

goog.forwardDeclare('proto.lum.network.millions.DrawState');
goog.forwardDeclare('proto.lum.network.millions.PoolState');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lum.network.millions.Pool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lum.network.millions.Pool.repeatedFields_, null);
};
goog.inherits(proto.lum.network.millions.Pool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lum.network.millions.Pool.displayName = 'proto.lum.network.millions.Pool';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lum.network.millions.Pool.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lum.network.millions.Pool.prototype.toObject = function(opt_includeInstance) {
  return proto.lum.network.millions.Pool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lum.network.millions.Pool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.millions.Pool.toObject = function(includeInstance, msg) {
  var f, obj = {
    poolId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    denom: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nativeDenom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    chainId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    connectionId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    transferChannelId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    icaDepositPortId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    icaPrizepoolPortId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    proto.lum.network.millions.PoolValidator.toObject, includeInstance),
    bech32PrefixAccAddr: jspb.Message.getFieldWithDefault(msg, 11, ""),
    bech32PrefixValAddr: jspb.Message.getFieldWithDefault(msg, 12, ""),
    minDepositAmount: jspb.Message.getFieldWithDefault(msg, 13, ""),
    drawSchedule: (f = msg.getDrawSchedule()) && proto.lum.network.millions.DrawSchedule.toObject(includeInstance, f),
    prizeStrategy: (f = msg.getPrizeStrategy()) && proto.lum.network.millions.PrizeStrategy.toObject(includeInstance, f),
    localAddress: jspb.Message.getFieldWithDefault(msg, 18, ""),
    icaDepositAddress: jspb.Message.getFieldWithDefault(msg, 19, ""),
    icaPrizepoolAddress: jspb.Message.getFieldWithDefault(msg, 20, ""),
    nextDrawId: jspb.Message.getFieldWithDefault(msg, 22, 0),
    tvlAmount: jspb.Message.getFieldWithDefault(msg, 23, ""),
    depositorsCount: jspb.Message.getFieldWithDefault(msg, 24, 0),
    sponsorshipAmount: jspb.Message.getFieldWithDefault(msg, 25, ""),
    lastDrawCreatedAt: (f = msg.getLastDrawCreatedAt()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    lastDrawState: jspb.Message.getFieldWithDefault(msg, 28, 0),
    availablePrizePool: (f = msg.getAvailablePrizePool()) && proto.cosmos.base.v1beta1.Coin.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 32, 0),
    createdAtHeight: jspb.Message.getFieldWithDefault(msg, 33, 0),
    updatedAtHeight: jspb.Message.getFieldWithDefault(msg, 34, 0),
    createdAt: (f = msg.getCreatedAt()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lum.network.millions.Pool}
 */
proto.lum.network.millions.Pool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lum.network.millions.Pool;
  return proto.lum.network.millions.Pool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lum.network.millions.Pool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lum.network.millions.Pool}
 */
proto.lum.network.millions.Pool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPoolId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNativeDenom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransferChannelId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcaDepositPortId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcaPrizepoolPortId(value);
      break;
    case 10:
      var value = new proto.lum.network.millions.PoolValidator;
      reader.readMessage(value,proto.lum.network.millions.PoolValidator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBech32PrefixAccAddr(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBech32PrefixValAddr(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinDepositAmount(value);
      break;
    case 14:
      var value = new proto.lum.network.millions.DrawSchedule;
      reader.readMessage(value,proto.lum.network.millions.DrawSchedule.deserializeBinaryFromReader);
      msg.setDrawSchedule(value);
      break;
    case 15:
      var value = new proto.lum.network.millions.PrizeStrategy;
      reader.readMessage(value,proto.lum.network.millions.PrizeStrategy.deserializeBinaryFromReader);
      msg.setPrizeStrategy(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalAddress(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcaDepositAddress(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcaPrizepoolAddress(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNextDrawId(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setTvlAmount(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDepositorsCount(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setSponsorshipAmount(value);
      break;
    case 27:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setLastDrawCreatedAt(value);
      break;
    case 28:
      var value = /** @type {!proto.lum.network.millions.DrawState} */ (reader.readEnum());
      msg.setLastDrawState(value);
      break;
    case 29:
      var value = new proto.cosmos.base.v1beta1.Coin;
      reader.readMessage(value,proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader);
      msg.setAvailablePrizePool(value);
      break;
    case 32:
      var value = /** @type {!proto.lum.network.millions.PoolState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAtHeight(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAtHeight(value);
      break;
    case 35:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 36:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lum.network.millions.Pool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lum.network.millions.Pool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lum.network.millions.Pool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lum.network.millions.Pool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoolId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNativeDenom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConnectionId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTransferChannelId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIcaDepositPortId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIcaPrizepoolPortId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.lum.network.millions.PoolValidator.serializeBinaryToWriter
    );
  }
  f = message.getBech32PrefixAccAddr();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getBech32PrefixValAddr();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMinDepositAmount();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getDrawSchedule();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.lum.network.millions.DrawSchedule.serializeBinaryToWriter
    );
  }
  f = message.getPrizeStrategy();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.lum.network.millions.PrizeStrategy.serializeBinaryToWriter
    );
  }
  f = message.getLocalAddress();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getIcaDepositAddress();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getIcaPrizepoolAddress();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getNextDrawId();
  if (f !== 0) {
    writer.writeUint64(
      22,
      f
    );
  }
  f = message.getTvlAmount();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getDepositorsCount();
  if (f !== 0) {
    writer.writeUint64(
      24,
      f
    );
  }
  f = message.getSponsorshipAmount();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getLastDrawCreatedAt();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastDrawState();
  if (f !== 0.0) {
    writer.writeEnum(
      28,
      f
    );
  }
  f = message.getAvailablePrizePool();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      32,
      f
    );
  }
  f = message.getCreatedAtHeight();
  if (f !== 0) {
    writer.writeInt64(
      33,
      f
    );
  }
  f = message.getUpdatedAtHeight();
  if (f !== 0) {
    writer.writeInt64(
      34,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 pool_id = 1;
 * @return {number}
 */
proto.lum.network.millions.Pool.prototype.getPoolId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setPoolId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string denom = 2;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string native_denom = 3;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getNativeDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setNativeDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string chain_id = 4;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string connection_id = 5;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getConnectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setConnectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string transfer_channel_id = 6;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getTransferChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setTransferChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string ica_deposit_port_id = 7;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getIcaDepositPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setIcaDepositPortId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string ica_prizepool_port_id = 8;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getIcaPrizepoolPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setIcaPrizepoolPortId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated PoolValidator validators = 10;
 * @return {!Array<!proto.lum.network.millions.PoolValidator>}
 */
proto.lum.network.millions.Pool.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.lum.network.millions.PoolValidator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.lum.network.millions.PoolValidator, 10));
};


/**
 * @param {!Array<!proto.lum.network.millions.PoolValidator>} value
 * @return {!proto.lum.network.millions.Pool} returns this
*/
proto.lum.network.millions.Pool.prototype.setValidatorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.lum.network.millions.PoolValidator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lum.network.millions.PoolValidator}
 */
proto.lum.network.millions.Pool.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.lum.network.millions.PoolValidator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.clearValidatorsList = function() {
  return this.setValidatorsList([]);
};


/**
 * optional string bech32_prefix_acc_addr = 11;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getBech32PrefixAccAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setBech32PrefixAccAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string bech32_prefix_val_addr = 12;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getBech32PrefixValAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setBech32PrefixValAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string min_deposit_amount = 13;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getMinDepositAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setMinDepositAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional DrawSchedule draw_schedule = 14;
 * @return {?proto.lum.network.millions.DrawSchedule}
 */
proto.lum.network.millions.Pool.prototype.getDrawSchedule = function() {
  return /** @type{?proto.lum.network.millions.DrawSchedule} */ (
    jspb.Message.getWrapperField(this, proto.lum.network.millions.DrawSchedule, 14));
};


/**
 * @param {?proto.lum.network.millions.DrawSchedule|undefined} value
 * @return {!proto.lum.network.millions.Pool} returns this
*/
proto.lum.network.millions.Pool.prototype.setDrawSchedule = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.clearDrawSchedule = function() {
  return this.setDrawSchedule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.millions.Pool.prototype.hasDrawSchedule = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional PrizeStrategy prize_strategy = 15;
 * @return {?proto.lum.network.millions.PrizeStrategy}
 */
proto.lum.network.millions.Pool.prototype.getPrizeStrategy = function() {
  return /** @type{?proto.lum.network.millions.PrizeStrategy} */ (
    jspb.Message.getWrapperField(this, proto.lum.network.millions.PrizeStrategy, 15));
};


/**
 * @param {?proto.lum.network.millions.PrizeStrategy|undefined} value
 * @return {!proto.lum.network.millions.Pool} returns this
*/
proto.lum.network.millions.Pool.prototype.setPrizeStrategy = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.clearPrizeStrategy = function() {
  return this.setPrizeStrategy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.millions.Pool.prototype.hasPrizeStrategy = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string local_address = 18;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getLocalAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setLocalAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string ica_deposit_address = 19;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getIcaDepositAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setIcaDepositAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string ica_prizepool_address = 20;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getIcaPrizepoolAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setIcaPrizepoolAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional uint64 next_draw_id = 22;
 * @return {number}
 */
proto.lum.network.millions.Pool.prototype.getNextDrawId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setNextDrawId = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional string tvl_amount = 23;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getTvlAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setTvlAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional uint64 depositors_count = 24;
 * @return {number}
 */
proto.lum.network.millions.Pool.prototype.getDepositorsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setDepositorsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional string sponsorship_amount = 25;
 * @return {string}
 */
proto.lum.network.millions.Pool.prototype.getSponsorshipAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setSponsorshipAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional google.protobuf.Timestamp last_draw_created_at = 27;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.lum.network.millions.Pool.prototype.getLastDrawCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 27));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.lum.network.millions.Pool} returns this
*/
proto.lum.network.millions.Pool.prototype.setLastDrawCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.clearLastDrawCreatedAt = function() {
  return this.setLastDrawCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.millions.Pool.prototype.hasLastDrawCreatedAt = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional DrawState last_draw_state = 28;
 * @return {!proto.lum.network.millions.DrawState}
 */
proto.lum.network.millions.Pool.prototype.getLastDrawState = function() {
  return /** @type {!proto.lum.network.millions.DrawState} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {!proto.lum.network.millions.DrawState} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setLastDrawState = function(value) {
  return jspb.Message.setProto3EnumField(this, 28, value);
};


/**
 * optional cosmos.base.v1beta1.Coin available_prize_pool = 29;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.lum.network.millions.Pool.prototype.getAvailablePrizePool = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, proto.cosmos.base.v1beta1.Coin, 29));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.lum.network.millions.Pool} returns this
*/
proto.lum.network.millions.Pool.prototype.setAvailablePrizePool = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.clearAvailablePrizePool = function() {
  return this.setAvailablePrizePool(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.millions.Pool.prototype.hasAvailablePrizePool = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional PoolState state = 32;
 * @return {!proto.lum.network.millions.PoolState}
 */
proto.lum.network.millions.Pool.prototype.getState = function() {
  return /** @type {!proto.lum.network.millions.PoolState} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {!proto.lum.network.millions.PoolState} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 32, value);
};


/**
 * optional int64 created_at_height = 33;
 * @return {number}
 */
proto.lum.network.millions.Pool.prototype.getCreatedAtHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setCreatedAtHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional int64 updated_at_height = 34;
 * @return {number}
 */
proto.lum.network.millions.Pool.prototype.getUpdatedAtHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.setUpdatedAtHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 35;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.lum.network.millions.Pool.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 35));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.lum.network.millions.Pool} returns this
*/
proto.lum.network.millions.Pool.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.millions.Pool.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 36;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.lum.network.millions.Pool.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 36));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.lum.network.millions.Pool} returns this
*/
proto.lum.network.millions.Pool.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lum.network.millions.Pool} returns this
 */
proto.lum.network.millions.Pool.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lum.network.millions.Pool.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 36) != null;
};



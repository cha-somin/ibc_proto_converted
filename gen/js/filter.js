// source: regen/ecocredit/v1alpha2/types.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.regen.ecocredit.v1alpha2.Filter');
goog.provide('proto.regen.ecocredit.v1alpha2.Filter.And');
goog.provide('proto.regen.ecocredit.v1alpha2.Filter.DateRange');
goog.provide('proto.regen.ecocredit.v1alpha2.Filter.Or');
goog.provide('proto.regen.ecocredit.v1alpha2.Filter.SumCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.google.protobuf.Timestamp');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.regen.ecocredit.v1alpha2.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_);
};
goog.inherits(proto.regen.ecocredit.v1alpha2.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.regen.ecocredit.v1alpha2.Filter.displayName = 'proto.regen.ecocredit.v1alpha2.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.regen.ecocredit.v1alpha2.Filter.And = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.regen.ecocredit.v1alpha2.Filter.And.repeatedFields_, null);
};
goog.inherits(proto.regen.ecocredit.v1alpha2.Filter.And, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.regen.ecocredit.v1alpha2.Filter.And.displayName = 'proto.regen.ecocredit.v1alpha2.Filter.And';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.regen.ecocredit.v1alpha2.Filter.Or = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.regen.ecocredit.v1alpha2.Filter.Or.repeatedFields_, null);
};
goog.inherits(proto.regen.ecocredit.v1alpha2.Filter.Or, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.regen.ecocredit.v1alpha2.Filter.Or.displayName = 'proto.regen.ecocredit.v1alpha2.Filter.Or';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.regen.ecocredit.v1alpha2.Filter.DateRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.regen.ecocredit.v1alpha2.Filter.DateRange.displayName = 'proto.regen.ecocredit.v1alpha2.Filter.DateRange';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.regen.ecocredit.v1alpha2.Filter.SumCase = {
  SUM_NOT_SET: 0,
  AND: 1,
  OR: 2,
  CREDIT_TYPE_NAME: 3,
  CLASS_ID: 4,
  PROJECT_ID: 5,
  BATCH_DENOM: 6,
  CLASS_ADMIN: 7,
  ISSUER: 8,
  OWNER: 9,
  PROJECT_LOCATION: 10,
  DATE_RANGE: 11,
  TAG: 12
};

/**
 * @return {proto.regen.ecocredit.v1alpha2.Filter.SumCase}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getSumCase = function() {
  return /** @type {proto.regen.ecocredit.v1alpha2.Filter.SumCase} */(jspb.Message.computeOneofCase(this, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.regen.ecocredit.v1alpha2.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.regen.ecocredit.v1alpha2.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.regen.ecocredit.v1alpha2.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
    and: (f = msg.getAnd()) && proto.regen.ecocredit.v1alpha2.Filter.And.toObject(includeInstance, f),
    or: (f = msg.getOr()) && proto.regen.ecocredit.v1alpha2.Filter.Or.toObject(includeInstance, f),
    creditTypeName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    classId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    batchDenom: jspb.Message.getFieldWithDefault(msg, 6, ""),
    classAdmin: jspb.Message.getFieldWithDefault(msg, 7, ""),
    issuer: jspb.Message.getFieldWithDefault(msg, 8, ""),
    owner: jspb.Message.getFieldWithDefault(msg, 9, ""),
    projectLocation: jspb.Message.getFieldWithDefault(msg, 10, ""),
    dateRange: (f = msg.getDateRange()) && proto.regen.ecocredit.v1alpha2.Filter.DateRange.toObject(includeInstance, f),
    tag: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter}
 */
proto.regen.ecocredit.v1alpha2.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.regen.ecocredit.v1alpha2.Filter;
  return proto.regen.ecocredit.v1alpha2.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.regen.ecocredit.v1alpha2.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter}
 */
proto.regen.ecocredit.v1alpha2.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.regen.ecocredit.v1alpha2.Filter.And;
      reader.readMessage(value,proto.regen.ecocredit.v1alpha2.Filter.And.deserializeBinaryFromReader);
      msg.setAnd(value);
      break;
    case 2:
      var value = new proto.regen.ecocredit.v1alpha2.Filter.Or;
      reader.readMessage(value,proto.regen.ecocredit.v1alpha2.Filter.Or.deserializeBinaryFromReader);
      msg.setOr(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreditTypeName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatchDenom(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassAdmin(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectLocation(value);
      break;
    case 11:
      var value = new proto.regen.ecocredit.v1alpha2.Filter.DateRange;
      reader.readMessage(value,proto.regen.ecocredit.v1alpha2.Filter.DateRange.deserializeBinaryFromReader);
      msg.setDateRange(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.regen.ecocredit.v1alpha2.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.regen.ecocredit.v1alpha2.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.regen.ecocredit.v1alpha2.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnd();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.regen.ecocredit.v1alpha2.Filter.And.serializeBinaryToWriter
    );
  }
  f = message.getOr();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.regen.ecocredit.v1alpha2.Filter.Or.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDateRange();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.regen.ecocredit.v1alpha2.Filter.DateRange.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.regen.ecocredit.v1alpha2.Filter.And.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.regen.ecocredit.v1alpha2.Filter.And.prototype.toObject = function(opt_includeInstance) {
  return proto.regen.ecocredit.v1alpha2.Filter.And.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.regen.ecocredit.v1alpha2.Filter.And} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.regen.ecocredit.v1alpha2.Filter.And.toObject = function(includeInstance, msg) {
  var f, obj = {
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.regen.ecocredit.v1alpha2.Filter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.And}
 */
proto.regen.ecocredit.v1alpha2.Filter.And.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.regen.ecocredit.v1alpha2.Filter.And;
  return proto.regen.ecocredit.v1alpha2.Filter.And.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.regen.ecocredit.v1alpha2.Filter.And} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.And}
 */
proto.regen.ecocredit.v1alpha2.Filter.And.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.regen.ecocredit.v1alpha2.Filter;
      reader.readMessage(value,proto.regen.ecocredit.v1alpha2.Filter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.regen.ecocredit.v1alpha2.Filter.And.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.regen.ecocredit.v1alpha2.Filter.And.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.regen.ecocredit.v1alpha2.Filter.And} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.regen.ecocredit.v1alpha2.Filter.And.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.regen.ecocredit.v1alpha2.Filter.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Filter filters = 1;
 * @return {!Array<!proto.regen.ecocredit.v1alpha2.Filter>}
 */
proto.regen.ecocredit.v1alpha2.Filter.And.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.regen.ecocredit.v1alpha2.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.regen.ecocredit.v1alpha2.Filter, 1));
};


/**
 * @param {!Array<!proto.regen.ecocredit.v1alpha2.Filter>} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.And} returns this
*/
proto.regen.ecocredit.v1alpha2.Filter.And.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.regen.ecocredit.v1alpha2.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.regen.ecocredit.v1alpha2.Filter}
 */
proto.regen.ecocredit.v1alpha2.Filter.And.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.regen.ecocredit.v1alpha2.Filter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.And} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.And.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.regen.ecocredit.v1alpha2.Filter.Or.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.regen.ecocredit.v1alpha2.Filter.Or.prototype.toObject = function(opt_includeInstance) {
  return proto.regen.ecocredit.v1alpha2.Filter.Or.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.regen.ecocredit.v1alpha2.Filter.Or} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.regen.ecocredit.v1alpha2.Filter.Or.toObject = function(includeInstance, msg) {
  var f, obj = {
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.regen.ecocredit.v1alpha2.Filter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.Or}
 */
proto.regen.ecocredit.v1alpha2.Filter.Or.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.regen.ecocredit.v1alpha2.Filter.Or;
  return proto.regen.ecocredit.v1alpha2.Filter.Or.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.regen.ecocredit.v1alpha2.Filter.Or} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.Or}
 */
proto.regen.ecocredit.v1alpha2.Filter.Or.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.regen.ecocredit.v1alpha2.Filter;
      reader.readMessage(value,proto.regen.ecocredit.v1alpha2.Filter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.regen.ecocredit.v1alpha2.Filter.Or.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.regen.ecocredit.v1alpha2.Filter.Or.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.regen.ecocredit.v1alpha2.Filter.Or} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.regen.ecocredit.v1alpha2.Filter.Or.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.regen.ecocredit.v1alpha2.Filter.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Filter filters = 1;
 * @return {!Array<!proto.regen.ecocredit.v1alpha2.Filter>}
 */
proto.regen.ecocredit.v1alpha2.Filter.Or.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.regen.ecocredit.v1alpha2.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.regen.ecocredit.v1alpha2.Filter, 1));
};


/**
 * @param {!Array<!proto.regen.ecocredit.v1alpha2.Filter>} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.Or} returns this
*/
proto.regen.ecocredit.v1alpha2.Filter.Or.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.regen.ecocredit.v1alpha2.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.regen.ecocredit.v1alpha2.Filter}
 */
proto.regen.ecocredit.v1alpha2.Filter.Or.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.regen.ecocredit.v1alpha2.Filter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.Or} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.Or.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange.prototype.toObject = function(opt_includeInstance) {
  return proto.regen.ecocredit.v1alpha2.Filter.DateRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.regen.ecocredit.v1alpha2.Filter.DateRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    startDate: (f = msg.getStartDate()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    endDate: (f = msg.getEndDate()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.DateRange}
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.regen.ecocredit.v1alpha2.Filter.DateRange;
  return proto.regen.ecocredit.v1alpha2.Filter.DateRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.regen.ecocredit.v1alpha2.Filter.DateRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.DateRange}
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setStartDate(value);
      break;
    case 8:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setEndDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.regen.ecocredit.v1alpha2.Filter.DateRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.regen.ecocredit.v1alpha2.Filter.DateRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartDate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndDate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_date = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange.prototype.getStartDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.DateRange} returns this
*/
proto.regen.ecocredit.v1alpha2.Filter.DateRange.prototype.setStartDate = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.DateRange} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange.prototype.clearStartDate = function() {
  return this.setStartDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange.prototype.hasStartDate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp end_date = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange.prototype.getEndDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.DateRange} returns this
*/
proto.regen.ecocredit.v1alpha2.Filter.DateRange.prototype.setEndDate = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter.DateRange} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange.prototype.clearEndDate = function() {
  return this.setEndDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.DateRange.prototype.hasEndDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional And and = 1;
 * @return {?proto.regen.ecocredit.v1alpha2.Filter.And}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getAnd = function() {
  return /** @type{?proto.regen.ecocredit.v1alpha2.Filter.And} */ (
    jspb.Message.getWrapperField(this, proto.regen.ecocredit.v1alpha2.Filter.And, 1));
};


/**
 * @param {?proto.regen.ecocredit.v1alpha2.Filter.And|undefined} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
*/
proto.regen.ecocredit.v1alpha2.Filter.prototype.setAnd = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.clearAnd = function() {
  return this.setAnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.hasAnd = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Or or = 2;
 * @return {?proto.regen.ecocredit.v1alpha2.Filter.Or}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getOr = function() {
  return /** @type{?proto.regen.ecocredit.v1alpha2.Filter.Or} */ (
    jspb.Message.getWrapperField(this, proto.regen.ecocredit.v1alpha2.Filter.Or, 2));
};


/**
 * @param {?proto.regen.ecocredit.v1alpha2.Filter.Or|undefined} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
*/
proto.regen.ecocredit.v1alpha2.Filter.prototype.setOr = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.clearOr = function() {
  return this.setOr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.hasOr = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string credit_type_name = 3;
 * @return {string}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getCreditTypeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.setCreditTypeName = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.clearCreditTypeName = function() {
  return jspb.Message.setOneofField(this, 3, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.hasCreditTypeName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string class_id = 4;
 * @return {string}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getClassId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.setClassId = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.clearClassId = function() {
  return jspb.Message.setOneofField(this, 4, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.hasClassId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string project_id = 5;
 * @return {string}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.setProjectId = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.clearProjectId = function() {
  return jspb.Message.setOneofField(this, 5, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.hasProjectId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string batch_denom = 6;
 * @return {string}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getBatchDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.setBatchDenom = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.clearBatchDenom = function() {
  return jspb.Message.setOneofField(this, 6, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.hasBatchDenom = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string class_admin = 7;
 * @return {string}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getClassAdmin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.setClassAdmin = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.clearClassAdmin = function() {
  return jspb.Message.setOneofField(this, 7, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.hasClassAdmin = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string issuer = 8;
 * @return {string}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.setIssuer = function(value) {
  return jspb.Message.setOneofField(this, 8, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.clearIssuer = function() {
  return jspb.Message.setOneofField(this, 8, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.hasIssuer = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string owner = 9;
 * @return {string}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.setOwner = function(value) {
  return jspb.Message.setOneofField(this, 9, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.clearOwner = function() {
  return jspb.Message.setOneofField(this, 9, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string project_location = 10;
 * @return {string}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getProjectLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.setProjectLocation = function(value) {
  return jspb.Message.setOneofField(this, 10, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.clearProjectLocation = function() {
  return jspb.Message.setOneofField(this, 10, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.hasProjectLocation = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional DateRange date_range = 11;
 * @return {?proto.regen.ecocredit.v1alpha2.Filter.DateRange}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getDateRange = function() {
  return /** @type{?proto.regen.ecocredit.v1alpha2.Filter.DateRange} */ (
    jspb.Message.getWrapperField(this, proto.regen.ecocredit.v1alpha2.Filter.DateRange, 11));
};


/**
 * @param {?proto.regen.ecocredit.v1alpha2.Filter.DateRange|undefined} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
*/
proto.regen.ecocredit.v1alpha2.Filter.prototype.setDateRange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.clearDateRange = function() {
  return this.setDateRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.hasDateRange = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string tag = 12;
 * @return {string}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.setTag = function(value) {
  return jspb.Message.setOneofField(this, 12, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.regen.ecocredit.v1alpha2.Filter} returns this
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.clearTag = function() {
  return jspb.Message.setOneofField(this, 12, proto.regen.ecocredit.v1alpha2.Filter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.regen.ecocredit.v1alpha2.Filter.prototype.hasTag = function() {
  return jspb.Message.getField(this, 12) != null;
};



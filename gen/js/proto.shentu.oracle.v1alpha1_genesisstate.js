// source: shentu/oracle/v1alpha1/genesis.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.shentu.oracle.v1alpha1.GenesisState');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.cosmos.base.v1beta1.Coin');
goog.require('proto.shentu.oracle.v1alpha1.LockedPoolParams');
goog.require('proto.shentu.oracle.v1alpha1.Operator');
goog.require('proto.shentu.oracle.v1alpha1.Task');
goog.require('proto.shentu.oracle.v1alpha1.TaskParams');
goog.require('proto.shentu.oracle.v1alpha1.TxTask');
goog.require('proto.shentu.oracle.v1alpha1.Withdraw');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shentu.oracle.v1alpha1.GenesisState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.shentu.oracle.v1alpha1.GenesisState.repeatedFields_, null);
};
goog.inherits(proto.shentu.oracle.v1alpha1.GenesisState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shentu.oracle.v1alpha1.GenesisState.displayName = 'proto.shentu.oracle.v1alpha1.GenesisState';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.shentu.oracle.v1alpha1.GenesisState.repeatedFields_ = [1,2,5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.toObject = function(opt_includeInstance) {
  return proto.shentu.oracle.v1alpha1.GenesisState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shentu.oracle.v1alpha1.GenesisState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shentu.oracle.v1alpha1.GenesisState.toObject = function(includeInstance, msg) {
  var f, obj = {
    operatorsList: jspb.Message.toObjectList(msg.getOperatorsList(),
    proto.shentu.oracle.v1alpha1.Operator.toObject, includeInstance),
    totalCollateralList: jspb.Message.toObjectList(msg.getTotalCollateralList(),
    proto.cosmos.base.v1beta1.Coin.toObject, includeInstance),
    poolParams: (f = msg.getPoolParams()) && proto.shentu.oracle.v1alpha1.LockedPoolParams.toObject(includeInstance, f),
    taskParams: (f = msg.getTaskParams()) && proto.shentu.oracle.v1alpha1.TaskParams.toObject(includeInstance, f),
    withdrawsList: jspb.Message.toObjectList(msg.getWithdrawsList(),
    proto.shentu.oracle.v1alpha1.Withdraw.toObject, includeInstance),
    tasksList: jspb.Message.toObjectList(msg.getTasksList(),
    proto.shentu.oracle.v1alpha1.Task.toObject, includeInstance),
    txTasksList: jspb.Message.toObjectList(msg.getTxTasksList(),
    proto.shentu.oracle.v1alpha1.TxTask.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState}
 */
proto.shentu.oracle.v1alpha1.GenesisState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shentu.oracle.v1alpha1.GenesisState;
  return proto.shentu.oracle.v1alpha1.GenesisState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shentu.oracle.v1alpha1.GenesisState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState}
 */
proto.shentu.oracle.v1alpha1.GenesisState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.shentu.oracle.v1alpha1.Operator;
      reader.readMessage(value,proto.shentu.oracle.v1alpha1.Operator.deserializeBinaryFromReader);
      msg.addOperators(value);
      break;
    case 2:
      var value = new proto.cosmos.base.v1beta1.Coin;
      reader.readMessage(value,proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader);
      msg.addTotalCollateral(value);
      break;
    case 3:
      var value = new proto.shentu.oracle.v1alpha1.LockedPoolParams;
      reader.readMessage(value,proto.shentu.oracle.v1alpha1.LockedPoolParams.deserializeBinaryFromReader);
      msg.setPoolParams(value);
      break;
    case 4:
      var value = new proto.shentu.oracle.v1alpha1.TaskParams;
      reader.readMessage(value,proto.shentu.oracle.v1alpha1.TaskParams.deserializeBinaryFromReader);
      msg.setTaskParams(value);
      break;
    case 5:
      var value = new proto.shentu.oracle.v1alpha1.Withdraw;
      reader.readMessage(value,proto.shentu.oracle.v1alpha1.Withdraw.deserializeBinaryFromReader);
      msg.addWithdraws(value);
      break;
    case 6:
      var value = new proto.shentu.oracle.v1alpha1.Task;
      reader.readMessage(value,proto.shentu.oracle.v1alpha1.Task.deserializeBinaryFromReader);
      msg.addTasks(value);
      break;
    case 7:
      var value = new proto.shentu.oracle.v1alpha1.TxTask;
      reader.readMessage(value,proto.shentu.oracle.v1alpha1.TxTask.deserializeBinaryFromReader);
      msg.addTxTasks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shentu.oracle.v1alpha1.GenesisState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shentu.oracle.v1alpha1.GenesisState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shentu.oracle.v1alpha1.GenesisState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.shentu.oracle.v1alpha1.Operator.serializeBinaryToWriter
    );
  }
  f = message.getTotalCollateralList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter
    );
  }
  f = message.getPoolParams();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.shentu.oracle.v1alpha1.LockedPoolParams.serializeBinaryToWriter
    );
  }
  f = message.getTaskParams();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.shentu.oracle.v1alpha1.TaskParams.serializeBinaryToWriter
    );
  }
  f = message.getWithdrawsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.shentu.oracle.v1alpha1.Withdraw.serializeBinaryToWriter
    );
  }
  f = message.getTasksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.shentu.oracle.v1alpha1.Task.serializeBinaryToWriter
    );
  }
  f = message.getTxTasksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.shentu.oracle.v1alpha1.TxTask.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Operator operators = 1;
 * @return {!Array<!proto.shentu.oracle.v1alpha1.Operator>}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.getOperatorsList = function() {
  return /** @type{!Array<!proto.shentu.oracle.v1alpha1.Operator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.shentu.oracle.v1alpha1.Operator, 1));
};


/**
 * @param {!Array<!proto.shentu.oracle.v1alpha1.Operator>} value
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
*/
proto.shentu.oracle.v1alpha1.GenesisState.prototype.setOperatorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.shentu.oracle.v1alpha1.Operator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.shentu.oracle.v1alpha1.Operator}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.addOperators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.shentu.oracle.v1alpha1.Operator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.clearOperatorsList = function() {
  return this.setOperatorsList([]);
};


/**
 * repeated cosmos.base.v1beta1.Coin total_collateral = 2;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.getTotalCollateralList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cosmos.base.v1beta1.Coin, 2));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
*/
proto.shentu.oracle.v1alpha1.GenesisState.prototype.setTotalCollateralList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.addTotalCollateral = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.clearTotalCollateralList = function() {
  return this.setTotalCollateralList([]);
};


/**
 * optional LockedPoolParams pool_params = 3;
 * @return {?proto.shentu.oracle.v1alpha1.LockedPoolParams}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.getPoolParams = function() {
  return /** @type{?proto.shentu.oracle.v1alpha1.LockedPoolParams} */ (
    jspb.Message.getWrapperField(this, proto.shentu.oracle.v1alpha1.LockedPoolParams, 3));
};


/**
 * @param {?proto.shentu.oracle.v1alpha1.LockedPoolParams|undefined} value
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
*/
proto.shentu.oracle.v1alpha1.GenesisState.prototype.setPoolParams = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.clearPoolParams = function() {
  return this.setPoolParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.hasPoolParams = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TaskParams task_params = 4;
 * @return {?proto.shentu.oracle.v1alpha1.TaskParams}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.getTaskParams = function() {
  return /** @type{?proto.shentu.oracle.v1alpha1.TaskParams} */ (
    jspb.Message.getWrapperField(this, proto.shentu.oracle.v1alpha1.TaskParams, 4));
};


/**
 * @param {?proto.shentu.oracle.v1alpha1.TaskParams|undefined} value
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
*/
proto.shentu.oracle.v1alpha1.GenesisState.prototype.setTaskParams = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.clearTaskParams = function() {
  return this.setTaskParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.hasTaskParams = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Withdraw withdraws = 5;
 * @return {!Array<!proto.shentu.oracle.v1alpha1.Withdraw>}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.getWithdrawsList = function() {
  return /** @type{!Array<!proto.shentu.oracle.v1alpha1.Withdraw>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.shentu.oracle.v1alpha1.Withdraw, 5));
};


/**
 * @param {!Array<!proto.shentu.oracle.v1alpha1.Withdraw>} value
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
*/
proto.shentu.oracle.v1alpha1.GenesisState.prototype.setWithdrawsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.shentu.oracle.v1alpha1.Withdraw=} opt_value
 * @param {number=} opt_index
 * @return {!proto.shentu.oracle.v1alpha1.Withdraw}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.addWithdraws = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.shentu.oracle.v1alpha1.Withdraw, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.clearWithdrawsList = function() {
  return this.setWithdrawsList([]);
};


/**
 * repeated Task tasks = 6;
 * @return {!Array<!proto.shentu.oracle.v1alpha1.Task>}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.getTasksList = function() {
  return /** @type{!Array<!proto.shentu.oracle.v1alpha1.Task>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.shentu.oracle.v1alpha1.Task, 6));
};


/**
 * @param {!Array<!proto.shentu.oracle.v1alpha1.Task>} value
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
*/
proto.shentu.oracle.v1alpha1.GenesisState.prototype.setTasksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.shentu.oracle.v1alpha1.Task=} opt_value
 * @param {number=} opt_index
 * @return {!proto.shentu.oracle.v1alpha1.Task}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.addTasks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.shentu.oracle.v1alpha1.Task, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.clearTasksList = function() {
  return this.setTasksList([]);
};


/**
 * repeated TxTask tx_tasks = 7;
 * @return {!Array<!proto.shentu.oracle.v1alpha1.TxTask>}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.getTxTasksList = function() {
  return /** @type{!Array<!proto.shentu.oracle.v1alpha1.TxTask>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.shentu.oracle.v1alpha1.TxTask, 7));
};


/**
 * @param {!Array<!proto.shentu.oracle.v1alpha1.TxTask>} value
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
*/
proto.shentu.oracle.v1alpha1.GenesisState.prototype.setTxTasksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.shentu.oracle.v1alpha1.TxTask=} opt_value
 * @param {number=} opt_index
 * @return {!proto.shentu.oracle.v1alpha1.TxTask}
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.addTxTasks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.shentu.oracle.v1alpha1.TxTask, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.shentu.oracle.v1alpha1.GenesisState} returns this
 */
proto.shentu.oracle.v1alpha1.GenesisState.prototype.clearTxTasksList = function() {
  return this.setTxTasksList([]);
};



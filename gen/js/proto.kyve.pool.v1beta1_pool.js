// source: kyve/pool/v1beta1/pool.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.kyve.pool.v1beta1.Pool');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.kyve.pool.v1beta1.Funder');
goog.require('proto.kyve.pool.v1beta1.Protocol');
goog.require('proto.kyve.pool.v1beta1.UpgradePlan');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kyve.pool.v1beta1.Pool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kyve.pool.v1beta1.Pool.repeatedFields_, null);
};
goog.inherits(proto.kyve.pool.v1beta1.Pool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kyve.pool.v1beta1.Pool.displayName = 'proto.kyve.pool.v1beta1.Pool';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kyve.pool.v1beta1.Pool.repeatedFields_ = [16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kyve.pool.v1beta1.Pool.prototype.toObject = function(opt_includeInstance) {
  return proto.kyve.pool.v1beta1.Pool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kyve.pool.v1beta1.Pool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kyve.pool.v1beta1.Pool.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    runtime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    logo: jspb.Message.getFieldWithDefault(msg, 4, ""),
    config: jspb.Message.getFieldWithDefault(msg, 5, ""),
    startKey: jspb.Message.getFieldWithDefault(msg, 6, ""),
    currentKey: jspb.Message.getFieldWithDefault(msg, 7, ""),
    currentSummary: jspb.Message.getFieldWithDefault(msg, 8, ""),
    currentIndex: jspb.Message.getFieldWithDefault(msg, 9, 0),
    totalBundles: jspb.Message.getFieldWithDefault(msg, 10, 0),
    uploadInterval: jspb.Message.getFieldWithDefault(msg, 11, 0),
    operatingCost: jspb.Message.getFieldWithDefault(msg, 12, 0),
    minDelegation: jspb.Message.getFieldWithDefault(msg, 13, 0),
    maxBundleSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    disabled: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    fundersList: jspb.Message.toObjectList(msg.getFundersList(),
    proto.kyve.pool.v1beta1.Funder.toObject, includeInstance),
    totalFunds: jspb.Message.getFieldWithDefault(msg, 17, 0),
    protocol: (f = msg.getProtocol()) && proto.kyve.pool.v1beta1.Protocol.toObject(includeInstance, f),
    upgradePlan: (f = msg.getUpgradePlan()) && proto.kyve.pool.v1beta1.UpgradePlan.toObject(includeInstance, f),
    currentStorageProviderId: jspb.Message.getFieldWithDefault(msg, 20, 0),
    currentCompressionId: jspb.Message.getFieldWithDefault(msg, 21, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kyve.pool.v1beta1.Pool}
 */
proto.kyve.pool.v1beta1.Pool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kyve.pool.v1beta1.Pool;
  return proto.kyve.pool.v1beta1.Pool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kyve.pool.v1beta1.Pool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kyve.pool.v1beta1.Pool}
 */
proto.kyve.pool.v1beta1.Pool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuntime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogo(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartKey(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentKey(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentSummary(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCurrentIndex(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalBundles(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUploadInterval(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOperatingCost(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMinDelegation(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxBundleSize(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisabled(value);
      break;
    case 16:
      var value = new proto.kyve.pool.v1beta1.Funder;
      reader.readMessage(value,proto.kyve.pool.v1beta1.Funder.deserializeBinaryFromReader);
      msg.addFunders(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalFunds(value);
      break;
    case 18:
      var value = new proto.kyve.pool.v1beta1.Protocol;
      reader.readMessage(value,proto.kyve.pool.v1beta1.Protocol.deserializeBinaryFromReader);
      msg.setProtocol(value);
      break;
    case 19:
      var value = new proto.kyve.pool.v1beta1.UpgradePlan;
      reader.readMessage(value,proto.kyve.pool.v1beta1.UpgradePlan.deserializeBinaryFromReader);
      msg.setUpgradePlan(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentStorageProviderId(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentCompressionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kyve.pool.v1beta1.Pool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kyve.pool.v1beta1.Pool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kyve.pool.v1beta1.Pool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kyve.pool.v1beta1.Pool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRuntime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLogo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStartKey();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCurrentKey();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCurrentSummary();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCurrentIndex();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getTotalBundles();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getUploadInterval();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getOperatingCost();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getMinDelegation();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getMaxBundleSize();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getDisabled();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getFundersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.kyve.pool.v1beta1.Funder.serializeBinaryToWriter
    );
  }
  f = message.getTotalFunds();
  if (f !== 0) {
    writer.writeUint64(
      17,
      f
    );
  }
  f = message.getProtocol();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.kyve.pool.v1beta1.Protocol.serializeBinaryToWriter
    );
  }
  f = message.getUpgradePlan();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.kyve.pool.v1beta1.UpgradePlan.serializeBinaryToWriter
    );
  }
  f = message.getCurrentStorageProviderId();
  if (f !== 0) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = message.getCurrentCompressionId();
  if (f !== 0) {
    writer.writeUint32(
      21,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string runtime = 3;
 * @return {string}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getRuntime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setRuntime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string logo = 4;
 * @return {string}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setLogo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string config = 5;
 * @return {string}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string start_key = 6;
 * @return {string}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getStartKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setStartKey = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string current_key = 7;
 * @return {string}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getCurrentKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setCurrentKey = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string current_summary = 8;
 * @return {string}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getCurrentSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setCurrentSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint64 current_index = 9;
 * @return {number}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getCurrentIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setCurrentIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 total_bundles = 10;
 * @return {number}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getTotalBundles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setTotalBundles = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 upload_interval = 11;
 * @return {number}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getUploadInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setUploadInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 operating_cost = 12;
 * @return {number}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getOperatingCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setOperatingCost = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint64 min_delegation = 13;
 * @return {number}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getMinDelegation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setMinDelegation = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional uint64 max_bundle_size = 14;
 * @return {number}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getMaxBundleSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setMaxBundleSize = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional bool disabled = 15;
 * @return {boolean}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setDisabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * repeated Funder funders = 16;
 * @return {!Array<!proto.kyve.pool.v1beta1.Funder>}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getFundersList = function() {
  return /** @type{!Array<!proto.kyve.pool.v1beta1.Funder>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kyve.pool.v1beta1.Funder, 16));
};


/**
 * @param {!Array<!proto.kyve.pool.v1beta1.Funder>} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
*/
proto.kyve.pool.v1beta1.Pool.prototype.setFundersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.kyve.pool.v1beta1.Funder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kyve.pool.v1beta1.Funder}
 */
proto.kyve.pool.v1beta1.Pool.prototype.addFunders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.kyve.pool.v1beta1.Funder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.clearFundersList = function() {
  return this.setFundersList([]);
};


/**
 * optional uint64 total_funds = 17;
 * @return {number}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getTotalFunds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setTotalFunds = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional Protocol protocol = 18;
 * @return {?proto.kyve.pool.v1beta1.Protocol}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getProtocol = function() {
  return /** @type{?proto.kyve.pool.v1beta1.Protocol} */ (
    jspb.Message.getWrapperField(this, proto.kyve.pool.v1beta1.Protocol, 18));
};


/**
 * @param {?proto.kyve.pool.v1beta1.Protocol|undefined} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
*/
proto.kyve.pool.v1beta1.Pool.prototype.setProtocol = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.clearProtocol = function() {
  return this.setProtocol(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kyve.pool.v1beta1.Pool.prototype.hasProtocol = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional UpgradePlan upgrade_plan = 19;
 * @return {?proto.kyve.pool.v1beta1.UpgradePlan}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getUpgradePlan = function() {
  return /** @type{?proto.kyve.pool.v1beta1.UpgradePlan} */ (
    jspb.Message.getWrapperField(this, proto.kyve.pool.v1beta1.UpgradePlan, 19));
};


/**
 * @param {?proto.kyve.pool.v1beta1.UpgradePlan|undefined} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
*/
proto.kyve.pool.v1beta1.Pool.prototype.setUpgradePlan = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.clearUpgradePlan = function() {
  return this.setUpgradePlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kyve.pool.v1beta1.Pool.prototype.hasUpgradePlan = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint32 current_storage_provider_id = 20;
 * @return {number}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getCurrentStorageProviderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setCurrentStorageProviderId = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional uint32 current_compression_id = 21;
 * @return {number}
 */
proto.kyve.pool.v1beta1.Pool.prototype.getCurrentCompressionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.kyve.pool.v1beta1.Pool} returns this
 */
proto.kyve.pool.v1beta1.Pool.prototype.setCurrentCompressionId = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};



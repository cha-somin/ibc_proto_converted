// source: axelar/nexus/v1beta1/genesis.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.axelar.nexus.v1beta1.GenesisState');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.axelar.nexus.exported.v1beta1.Chain');
goog.require('proto.axelar.nexus.exported.v1beta1.CrossChainTransfer');
goog.require('proto.axelar.nexus.exported.v1beta1.FeeInfo');
goog.require('proto.axelar.nexus.exported.v1beta1.GeneralMessage');
goog.require('proto.axelar.nexus.exported.v1beta1.TransferFee');
goog.require('proto.axelar.nexus.v1beta1.ChainState');
goog.require('proto.axelar.nexus.v1beta1.LinkedAddresses');
goog.require('proto.axelar.nexus.v1beta1.Params');
goog.require('proto.axelar.nexus.v1beta1.RateLimit');
goog.require('proto.axelar.nexus.v1beta1.TransferEpoch');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.axelar.nexus.v1beta1.GenesisState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.axelar.nexus.v1beta1.GenesisState.repeatedFields_, null);
};
goog.inherits(proto.axelar.nexus.v1beta1.GenesisState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.axelar.nexus.v1beta1.GenesisState.displayName = 'proto.axelar.nexus.v1beta1.GenesisState';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.axelar.nexus.v1beta1.GenesisState.repeatedFields_ = [3,4,5,6,8,9,10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.toObject = function(opt_includeInstance) {
  return proto.axelar.nexus.v1beta1.GenesisState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.axelar.nexus.v1beta1.GenesisState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.axelar.nexus.v1beta1.GenesisState.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && proto.axelar.nexus.v1beta1.Params.toObject(includeInstance, f),
    nonce: jspb.Message.getFieldWithDefault(msg, 2, 0),
    chainsList: jspb.Message.toObjectList(msg.getChainsList(),
    proto.axelar.nexus.exported.v1beta1.Chain.toObject, includeInstance),
    chainStatesList: jspb.Message.toObjectList(msg.getChainStatesList(),
    proto.axelar.nexus.v1beta1.ChainState.toObject, includeInstance),
    linkedAddressesList: jspb.Message.toObjectList(msg.getLinkedAddressesList(),
    proto.axelar.nexus.v1beta1.LinkedAddresses.toObject, includeInstance),
    transfersList: jspb.Message.toObjectList(msg.getTransfersList(),
    proto.axelar.nexus.exported.v1beta1.CrossChainTransfer.toObject, includeInstance),
    fee: (f = msg.getFee()) && proto.axelar.nexus.exported.v1beta1.TransferFee.toObject(includeInstance, f),
    feeInfosList: jspb.Message.toObjectList(msg.getFeeInfosList(),
    proto.axelar.nexus.exported.v1beta1.FeeInfo.toObject, includeInstance),
    rateLimitsList: jspb.Message.toObjectList(msg.getRateLimitsList(),
    proto.axelar.nexus.v1beta1.RateLimit.toObject, includeInstance),
    transferEpochsList: jspb.Message.toObjectList(msg.getTransferEpochsList(),
    proto.axelar.nexus.v1beta1.TransferEpoch.toObject, includeInstance),
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.axelar.nexus.exported.v1beta1.GeneralMessage.toObject, includeInstance),
    messageNonce: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.axelar.nexus.v1beta1.GenesisState}
 */
proto.axelar.nexus.v1beta1.GenesisState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.axelar.nexus.v1beta1.GenesisState;
  return proto.axelar.nexus.v1beta1.GenesisState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.axelar.nexus.v1beta1.GenesisState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.axelar.nexus.v1beta1.GenesisState}
 */
proto.axelar.nexus.v1beta1.GenesisState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.axelar.nexus.v1beta1.Params;
      reader.readMessage(value,proto.axelar.nexus.v1beta1.Params.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNonce(value);
      break;
    case 3:
      var value = new proto.axelar.nexus.exported.v1beta1.Chain;
      reader.readMessage(value,proto.axelar.nexus.exported.v1beta1.Chain.deserializeBinaryFromReader);
      msg.addChains(value);
      break;
    case 4:
      var value = new proto.axelar.nexus.v1beta1.ChainState;
      reader.readMessage(value,proto.axelar.nexus.v1beta1.ChainState.deserializeBinaryFromReader);
      msg.addChainStates(value);
      break;
    case 5:
      var value = new proto.axelar.nexus.v1beta1.LinkedAddresses;
      reader.readMessage(value,proto.axelar.nexus.v1beta1.LinkedAddresses.deserializeBinaryFromReader);
      msg.addLinkedAddresses(value);
      break;
    case 6:
      var value = new proto.axelar.nexus.exported.v1beta1.CrossChainTransfer;
      reader.readMessage(value,proto.axelar.nexus.exported.v1beta1.CrossChainTransfer.deserializeBinaryFromReader);
      msg.addTransfers(value);
      break;
    case 7:
      var value = new proto.axelar.nexus.exported.v1beta1.TransferFee;
      reader.readMessage(value,proto.axelar.nexus.exported.v1beta1.TransferFee.deserializeBinaryFromReader);
      msg.setFee(value);
      break;
    case 8:
      var value = new proto.axelar.nexus.exported.v1beta1.FeeInfo;
      reader.readMessage(value,proto.axelar.nexus.exported.v1beta1.FeeInfo.deserializeBinaryFromReader);
      msg.addFeeInfos(value);
      break;
    case 9:
      var value = new proto.axelar.nexus.v1beta1.RateLimit;
      reader.readMessage(value,proto.axelar.nexus.v1beta1.RateLimit.deserializeBinaryFromReader);
      msg.addRateLimits(value);
      break;
    case 10:
      var value = new proto.axelar.nexus.v1beta1.TransferEpoch;
      reader.readMessage(value,proto.axelar.nexus.v1beta1.TransferEpoch.deserializeBinaryFromReader);
      msg.addTransferEpochs(value);
      break;
    case 11:
      var value = new proto.axelar.nexus.exported.v1beta1.GeneralMessage;
      reader.readMessage(value,proto.axelar.nexus.exported.v1beta1.GeneralMessage.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMessageNonce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.axelar.nexus.v1beta1.GenesisState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.axelar.nexus.v1beta1.GenesisState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.axelar.nexus.v1beta1.GenesisState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.axelar.nexus.v1beta1.Params.serializeBinaryToWriter
    );
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getChainsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.axelar.nexus.exported.v1beta1.Chain.serializeBinaryToWriter
    );
  }
  f = message.getChainStatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.axelar.nexus.v1beta1.ChainState.serializeBinaryToWriter
    );
  }
  f = message.getLinkedAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.axelar.nexus.v1beta1.LinkedAddresses.serializeBinaryToWriter
    );
  }
  f = message.getTransfersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.axelar.nexus.exported.v1beta1.CrossChainTransfer.serializeBinaryToWriter
    );
  }
  f = message.getFee();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.axelar.nexus.exported.v1beta1.TransferFee.serializeBinaryToWriter
    );
  }
  f = message.getFeeInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.axelar.nexus.exported.v1beta1.FeeInfo.serializeBinaryToWriter
    );
  }
  f = message.getRateLimitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.axelar.nexus.v1beta1.RateLimit.serializeBinaryToWriter
    );
  }
  f = message.getTransferEpochsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.axelar.nexus.v1beta1.TransferEpoch.serializeBinaryToWriter
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.axelar.nexus.exported.v1beta1.GeneralMessage.serializeBinaryToWriter
    );
  }
  f = message.getMessageNonce();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
};


/**
 * optional Params params = 1;
 * @return {?proto.axelar.nexus.v1beta1.Params}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.getParams = function() {
  return /** @type{?proto.axelar.nexus.v1beta1.Params} */ (
    jspb.Message.getWrapperField(this, proto.axelar.nexus.v1beta1.Params, 1));
};


/**
 * @param {?proto.axelar.nexus.v1beta1.Params|undefined} value
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
*/
proto.axelar.nexus.v1beta1.GenesisState.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.hasParams = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 nonce = 2;
 * @return {number}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.setNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated axelar.nexus.exported.v1beta1.Chain chains = 3;
 * @return {!Array<!proto.axelar.nexus.exported.v1beta1.Chain>}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.getChainsList = function() {
  return /** @type{!Array<!proto.axelar.nexus.exported.v1beta1.Chain>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.axelar.nexus.exported.v1beta1.Chain, 3));
};


/**
 * @param {!Array<!proto.axelar.nexus.exported.v1beta1.Chain>} value
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
*/
proto.axelar.nexus.v1beta1.GenesisState.prototype.setChainsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.axelar.nexus.exported.v1beta1.Chain=} opt_value
 * @param {number=} opt_index
 * @return {!proto.axelar.nexus.exported.v1beta1.Chain}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.addChains = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.axelar.nexus.exported.v1beta1.Chain, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.clearChainsList = function() {
  return this.setChainsList([]);
};


/**
 * repeated ChainState chain_states = 4;
 * @return {!Array<!proto.axelar.nexus.v1beta1.ChainState>}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.getChainStatesList = function() {
  return /** @type{!Array<!proto.axelar.nexus.v1beta1.ChainState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.axelar.nexus.v1beta1.ChainState, 4));
};


/**
 * @param {!Array<!proto.axelar.nexus.v1beta1.ChainState>} value
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
*/
proto.axelar.nexus.v1beta1.GenesisState.prototype.setChainStatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.axelar.nexus.v1beta1.ChainState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.axelar.nexus.v1beta1.ChainState}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.addChainStates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.axelar.nexus.v1beta1.ChainState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.clearChainStatesList = function() {
  return this.setChainStatesList([]);
};


/**
 * repeated LinkedAddresses linked_addresses = 5;
 * @return {!Array<!proto.axelar.nexus.v1beta1.LinkedAddresses>}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.getLinkedAddressesList = function() {
  return /** @type{!Array<!proto.axelar.nexus.v1beta1.LinkedAddresses>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.axelar.nexus.v1beta1.LinkedAddresses, 5));
};


/**
 * @param {!Array<!proto.axelar.nexus.v1beta1.LinkedAddresses>} value
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
*/
proto.axelar.nexus.v1beta1.GenesisState.prototype.setLinkedAddressesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.axelar.nexus.v1beta1.LinkedAddresses=} opt_value
 * @param {number=} opt_index
 * @return {!proto.axelar.nexus.v1beta1.LinkedAddresses}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.addLinkedAddresses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.axelar.nexus.v1beta1.LinkedAddresses, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.clearLinkedAddressesList = function() {
  return this.setLinkedAddressesList([]);
};


/**
 * repeated axelar.nexus.exported.v1beta1.CrossChainTransfer transfers = 6;
 * @return {!Array<!proto.axelar.nexus.exported.v1beta1.CrossChainTransfer>}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.getTransfersList = function() {
  return /** @type{!Array<!proto.axelar.nexus.exported.v1beta1.CrossChainTransfer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.axelar.nexus.exported.v1beta1.CrossChainTransfer, 6));
};


/**
 * @param {!Array<!proto.axelar.nexus.exported.v1beta1.CrossChainTransfer>} value
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
*/
proto.axelar.nexus.v1beta1.GenesisState.prototype.setTransfersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.axelar.nexus.exported.v1beta1.CrossChainTransfer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.axelar.nexus.exported.v1beta1.CrossChainTransfer}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.addTransfers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.axelar.nexus.exported.v1beta1.CrossChainTransfer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.clearTransfersList = function() {
  return this.setTransfersList([]);
};


/**
 * optional axelar.nexus.exported.v1beta1.TransferFee fee = 7;
 * @return {?proto.axelar.nexus.exported.v1beta1.TransferFee}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.getFee = function() {
  return /** @type{?proto.axelar.nexus.exported.v1beta1.TransferFee} */ (
    jspb.Message.getWrapperField(this, proto.axelar.nexus.exported.v1beta1.TransferFee, 7));
};


/**
 * @param {?proto.axelar.nexus.exported.v1beta1.TransferFee|undefined} value
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
*/
proto.axelar.nexus.v1beta1.GenesisState.prototype.setFee = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.clearFee = function() {
  return this.setFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.hasFee = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated axelar.nexus.exported.v1beta1.FeeInfo fee_infos = 8;
 * @return {!Array<!proto.axelar.nexus.exported.v1beta1.FeeInfo>}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.getFeeInfosList = function() {
  return /** @type{!Array<!proto.axelar.nexus.exported.v1beta1.FeeInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.axelar.nexus.exported.v1beta1.FeeInfo, 8));
};


/**
 * @param {!Array<!proto.axelar.nexus.exported.v1beta1.FeeInfo>} value
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
*/
proto.axelar.nexus.v1beta1.GenesisState.prototype.setFeeInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.axelar.nexus.exported.v1beta1.FeeInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.axelar.nexus.exported.v1beta1.FeeInfo}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.addFeeInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.axelar.nexus.exported.v1beta1.FeeInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.clearFeeInfosList = function() {
  return this.setFeeInfosList([]);
};


/**
 * repeated RateLimit rate_limits = 9;
 * @return {!Array<!proto.axelar.nexus.v1beta1.RateLimit>}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.getRateLimitsList = function() {
  return /** @type{!Array<!proto.axelar.nexus.v1beta1.RateLimit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.axelar.nexus.v1beta1.RateLimit, 9));
};


/**
 * @param {!Array<!proto.axelar.nexus.v1beta1.RateLimit>} value
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
*/
proto.axelar.nexus.v1beta1.GenesisState.prototype.setRateLimitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.axelar.nexus.v1beta1.RateLimit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.axelar.nexus.v1beta1.RateLimit}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.addRateLimits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.axelar.nexus.v1beta1.RateLimit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.clearRateLimitsList = function() {
  return this.setRateLimitsList([]);
};


/**
 * repeated TransferEpoch transfer_epochs = 10;
 * @return {!Array<!proto.axelar.nexus.v1beta1.TransferEpoch>}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.getTransferEpochsList = function() {
  return /** @type{!Array<!proto.axelar.nexus.v1beta1.TransferEpoch>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.axelar.nexus.v1beta1.TransferEpoch, 10));
};


/**
 * @param {!Array<!proto.axelar.nexus.v1beta1.TransferEpoch>} value
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
*/
proto.axelar.nexus.v1beta1.GenesisState.prototype.setTransferEpochsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.axelar.nexus.v1beta1.TransferEpoch=} opt_value
 * @param {number=} opt_index
 * @return {!proto.axelar.nexus.v1beta1.TransferEpoch}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.addTransferEpochs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.axelar.nexus.v1beta1.TransferEpoch, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.clearTransferEpochsList = function() {
  return this.setTransferEpochsList([]);
};


/**
 * repeated axelar.nexus.exported.v1beta1.GeneralMessage messages = 11;
 * @return {!Array<!proto.axelar.nexus.exported.v1beta1.GeneralMessage>}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.axelar.nexus.exported.v1beta1.GeneralMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.axelar.nexus.exported.v1beta1.GeneralMessage, 11));
};


/**
 * @param {!Array<!proto.axelar.nexus.exported.v1beta1.GeneralMessage>} value
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
*/
proto.axelar.nexus.v1beta1.GenesisState.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.axelar.nexus.exported.v1beta1.GeneralMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.axelar.nexus.exported.v1beta1.GeneralMessage}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.axelar.nexus.exported.v1beta1.GeneralMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};


/**
 * optional uint64 message_nonce = 12;
 * @return {number}
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.getMessageNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.axelar.nexus.v1beta1.GenesisState} returns this
 */
proto.axelar.nexus.v1beta1.GenesisState.prototype.setMessageNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};



# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from stride.records import query_pb2 as stride_dot_records_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/stride.records.Query/Params',
                request_serializer=stride_dot_records_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=stride_dot_records_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.UserRedemptionRecord = channel.unary_unary(
                '/stride.records.Query/UserRedemptionRecord',
                request_serializer=stride_dot_records_dot_query__pb2.QueryGetUserRedemptionRecordRequest.SerializeToString,
                response_deserializer=stride_dot_records_dot_query__pb2.QueryGetUserRedemptionRecordResponse.FromString,
                )
        self.UserRedemptionRecordAll = channel.unary_unary(
                '/stride.records.Query/UserRedemptionRecordAll',
                request_serializer=stride_dot_records_dot_query__pb2.QueryAllUserRedemptionRecordRequest.SerializeToString,
                response_deserializer=stride_dot_records_dot_query__pb2.QueryAllUserRedemptionRecordResponse.FromString,
                )
        self.UserRedemptionRecordForUser = channel.unary_unary(
                '/stride.records.Query/UserRedemptionRecordForUser',
                request_serializer=stride_dot_records_dot_query__pb2.QueryAllUserRedemptionRecordForUserRequest.SerializeToString,
                response_deserializer=stride_dot_records_dot_query__pb2.QueryAllUserRedemptionRecordForUserResponse.FromString,
                )
        self.EpochUnbondingRecord = channel.unary_unary(
                '/stride.records.Query/EpochUnbondingRecord',
                request_serializer=stride_dot_records_dot_query__pb2.QueryGetEpochUnbondingRecordRequest.SerializeToString,
                response_deserializer=stride_dot_records_dot_query__pb2.QueryGetEpochUnbondingRecordResponse.FromString,
                )
        self.EpochUnbondingRecordAll = channel.unary_unary(
                '/stride.records.Query/EpochUnbondingRecordAll',
                request_serializer=stride_dot_records_dot_query__pb2.QueryAllEpochUnbondingRecordRequest.SerializeToString,
                response_deserializer=stride_dot_records_dot_query__pb2.QueryAllEpochUnbondingRecordResponse.FromString,
                )
        self.DepositRecord = channel.unary_unary(
                '/stride.records.Query/DepositRecord',
                request_serializer=stride_dot_records_dot_query__pb2.QueryGetDepositRecordRequest.SerializeToString,
                response_deserializer=stride_dot_records_dot_query__pb2.QueryGetDepositRecordResponse.FromString,
                )
        self.DepositRecordAll = channel.unary_unary(
                '/stride.records.Query/DepositRecordAll',
                request_serializer=stride_dot_records_dot_query__pb2.QueryAllDepositRecordRequest.SerializeToString,
                response_deserializer=stride_dot_records_dot_query__pb2.QueryAllDepositRecordResponse.FromString,
                )
        self.DepositRecordByHost = channel.unary_unary(
                '/stride.records.Query/DepositRecordByHost',
                request_serializer=stride_dot_records_dot_query__pb2.QueryDepositRecordByHostRequest.SerializeToString,
                response_deserializer=stride_dot_records_dot_query__pb2.QueryDepositRecordByHostResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Params(self, request, context):
        """Parameters queries the parameters of the module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserRedemptionRecord(self, request, context):
        """Queries a UserRedemptionRecord by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserRedemptionRecordAll(self, request, context):
        """Queries a list of UserRedemptionRecord items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserRedemptionRecordForUser(self, request, context):
        """Queries a list of UserRedemptionRecord items by chainId / userId pair.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EpochUnbondingRecord(self, request, context):
        """Queries a EpochUnbondingRecord by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EpochUnbondingRecordAll(self, request, context):
        """Queries a list of EpochUnbondingRecord items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DepositRecord(self, request, context):
        """this line is used by starport scaffolding # 2

        Queries a DepositRecord by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DepositRecordAll(self, request, context):
        """Queries a list of DepositRecord items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DepositRecordByHost(self, request, context):
        """Queries a list of DepositRecord items for a given host zone
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=stride_dot_records_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=stride_dot_records_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'UserRedemptionRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.UserRedemptionRecord,
                    request_deserializer=stride_dot_records_dot_query__pb2.QueryGetUserRedemptionRecordRequest.FromString,
                    response_serializer=stride_dot_records_dot_query__pb2.QueryGetUserRedemptionRecordResponse.SerializeToString,
            ),
            'UserRedemptionRecordAll': grpc.unary_unary_rpc_method_handler(
                    servicer.UserRedemptionRecordAll,
                    request_deserializer=stride_dot_records_dot_query__pb2.QueryAllUserRedemptionRecordRequest.FromString,
                    response_serializer=stride_dot_records_dot_query__pb2.QueryAllUserRedemptionRecordResponse.SerializeToString,
            ),
            'UserRedemptionRecordForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UserRedemptionRecordForUser,
                    request_deserializer=stride_dot_records_dot_query__pb2.QueryAllUserRedemptionRecordForUserRequest.FromString,
                    response_serializer=stride_dot_records_dot_query__pb2.QueryAllUserRedemptionRecordForUserResponse.SerializeToString,
            ),
            'EpochUnbondingRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.EpochUnbondingRecord,
                    request_deserializer=stride_dot_records_dot_query__pb2.QueryGetEpochUnbondingRecordRequest.FromString,
                    response_serializer=stride_dot_records_dot_query__pb2.QueryGetEpochUnbondingRecordResponse.SerializeToString,
            ),
            'EpochUnbondingRecordAll': grpc.unary_unary_rpc_method_handler(
                    servicer.EpochUnbondingRecordAll,
                    request_deserializer=stride_dot_records_dot_query__pb2.QueryAllEpochUnbondingRecordRequest.FromString,
                    response_serializer=stride_dot_records_dot_query__pb2.QueryAllEpochUnbondingRecordResponse.SerializeToString,
            ),
            'DepositRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.DepositRecord,
                    request_deserializer=stride_dot_records_dot_query__pb2.QueryGetDepositRecordRequest.FromString,
                    response_serializer=stride_dot_records_dot_query__pb2.QueryGetDepositRecordResponse.SerializeToString,
            ),
            'DepositRecordAll': grpc.unary_unary_rpc_method_handler(
                    servicer.DepositRecordAll,
                    request_deserializer=stride_dot_records_dot_query__pb2.QueryAllDepositRecordRequest.FromString,
                    response_serializer=stride_dot_records_dot_query__pb2.QueryAllDepositRecordResponse.SerializeToString,
            ),
            'DepositRecordByHost': grpc.unary_unary_rpc_method_handler(
                    servicer.DepositRecordByHost,
                    request_deserializer=stride_dot_records_dot_query__pb2.QueryDepositRecordByHostRequest.FromString,
                    response_serializer=stride_dot_records_dot_query__pb2.QueryDepositRecordByHostResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stride.records.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stride.records.Query/Params',
            stride_dot_records_dot_query__pb2.QueryParamsRequest.SerializeToString,
            stride_dot_records_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserRedemptionRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stride.records.Query/UserRedemptionRecord',
            stride_dot_records_dot_query__pb2.QueryGetUserRedemptionRecordRequest.SerializeToString,
            stride_dot_records_dot_query__pb2.QueryGetUserRedemptionRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserRedemptionRecordAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stride.records.Query/UserRedemptionRecordAll',
            stride_dot_records_dot_query__pb2.QueryAllUserRedemptionRecordRequest.SerializeToString,
            stride_dot_records_dot_query__pb2.QueryAllUserRedemptionRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserRedemptionRecordForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stride.records.Query/UserRedemptionRecordForUser',
            stride_dot_records_dot_query__pb2.QueryAllUserRedemptionRecordForUserRequest.SerializeToString,
            stride_dot_records_dot_query__pb2.QueryAllUserRedemptionRecordForUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EpochUnbondingRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stride.records.Query/EpochUnbondingRecord',
            stride_dot_records_dot_query__pb2.QueryGetEpochUnbondingRecordRequest.SerializeToString,
            stride_dot_records_dot_query__pb2.QueryGetEpochUnbondingRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EpochUnbondingRecordAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stride.records.Query/EpochUnbondingRecordAll',
            stride_dot_records_dot_query__pb2.QueryAllEpochUnbondingRecordRequest.SerializeToString,
            stride_dot_records_dot_query__pb2.QueryAllEpochUnbondingRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DepositRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stride.records.Query/DepositRecord',
            stride_dot_records_dot_query__pb2.QueryGetDepositRecordRequest.SerializeToString,
            stride_dot_records_dot_query__pb2.QueryGetDepositRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DepositRecordAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stride.records.Query/DepositRecordAll',
            stride_dot_records_dot_query__pb2.QueryAllDepositRecordRequest.SerializeToString,
            stride_dot_records_dot_query__pb2.QueryAllDepositRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DepositRecordByHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stride.records.Query/DepositRecordByHost',
            stride_dot_records_dot_query__pb2.QueryDepositRecordByHostRequest.SerializeToString,
            stride_dot_records_dot_query__pb2.QueryDepositRecordByHostResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

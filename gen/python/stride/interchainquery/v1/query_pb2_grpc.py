# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from stride.interchainquery.v1 import query_pb2 as stride_dot_interchainquery_dot_v1_dot_query__pb2


class QueryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PendingQueries = channel.unary_unary(
                '/stride.interchainquery.v1.QueryService/PendingQueries',
                request_serializer=stride_dot_interchainquery_dot_v1_dot_query__pb2.QueryPendingQueriesRequest.SerializeToString,
                response_deserializer=stride_dot_interchainquery_dot_v1_dot_query__pb2.QueryPendingQueriesResponse.FromString,
                )


class QueryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PendingQueries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PendingQueries': grpc.unary_unary_rpc_method_handler(
                    servicer.PendingQueries,
                    request_deserializer=stride_dot_interchainquery_dot_v1_dot_query__pb2.QueryPendingQueriesRequest.FromString,
                    response_serializer=stride_dot_interchainquery_dot_v1_dot_query__pb2.QueryPendingQueriesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stride.interchainquery.v1.QueryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QueryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PendingQueries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stride.interchainquery.v1.QueryService/PendingQueries',
            stride_dot_interchainquery_dot_v1_dot_query__pb2.QueryPendingQueriesRequest.SerializeToString,
            stride_dot_interchainquery_dot_v1_dot_query__pb2.QueryPendingQueriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from likechain.iscn import query_pb2 as likechain_dot_iscn_dot_query__pb2


class QueryStub(object):
    """Usage:
    /iscn/api/endpoint?param1=blablabla&param2=blablabla...
    Example:
    /iscn/records/id?iscn_id=iscn://likecoin-chain/btC7CJvMm4WLj9Tau9LAPTfGK7sfymTJW7ORcFdruCU&from_version=2
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RecordsById = channel.unary_unary(
                '/likechain.iscn.Query/RecordsById',
                request_serializer=likechain_dot_iscn_dot_query__pb2.QueryRecordsByIdRequest.SerializeToString,
                response_deserializer=likechain_dot_iscn_dot_query__pb2.QueryRecordsByIdResponse.FromString,
                )
        self.RecordsByFingerprint = channel.unary_unary(
                '/likechain.iscn.Query/RecordsByFingerprint',
                request_serializer=likechain_dot_iscn_dot_query__pb2.QueryRecordsByFingerprintRequest.SerializeToString,
                response_deserializer=likechain_dot_iscn_dot_query__pb2.QueryRecordsByFingerprintResponse.FromString,
                )
        self.RecordsByOwner = channel.unary_unary(
                '/likechain.iscn.Query/RecordsByOwner',
                request_serializer=likechain_dot_iscn_dot_query__pb2.QueryRecordsByOwnerRequest.SerializeToString,
                response_deserializer=likechain_dot_iscn_dot_query__pb2.QueryRecordsByOwnerResponse.FromString,
                )
        self.Params = channel.unary_unary(
                '/likechain.iscn.Query/Params',
                request_serializer=likechain_dot_iscn_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=likechain_dot_iscn_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.GetCid = channel.unary_unary(
                '/likechain.iscn.Query/GetCid',
                request_serializer=likechain_dot_iscn_dot_query__pb2.QueryGetCidRequest.SerializeToString,
                response_deserializer=likechain_dot_iscn_dot_query__pb2.QueryGetCidResponse.FromString,
                )
        self.HasCid = channel.unary_unary(
                '/likechain.iscn.Query/HasCid',
                request_serializer=likechain_dot_iscn_dot_query__pb2.QueryHasCidRequest.SerializeToString,
                response_deserializer=likechain_dot_iscn_dot_query__pb2.QueryHasCidResponse.FromString,
                )
        self.GetCidSize = channel.unary_unary(
                '/likechain.iscn.Query/GetCidSize',
                request_serializer=likechain_dot_iscn_dot_query__pb2.QueryGetCidSizeRequest.SerializeToString,
                response_deserializer=likechain_dot_iscn_dot_query__pb2.QueryGetCidSizeResponse.FromString,
                )


class QueryServicer(object):
    """Usage:
    /iscn/api/endpoint?param1=blablabla&param2=blablabla...
    Example:
    /iscn/records/id?iscn_id=iscn://likecoin-chain/btC7CJvMm4WLj9Tau9LAPTfGK7sfymTJW7ORcFdruCU&from_version=2
    """

    def RecordsById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordsByFingerprint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordsByOwner(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Params(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCid(self, request, context):
        """Below are endpoints reserved for IPFS plugin

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasCid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCidSize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RecordsById': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordsById,
                    request_deserializer=likechain_dot_iscn_dot_query__pb2.QueryRecordsByIdRequest.FromString,
                    response_serializer=likechain_dot_iscn_dot_query__pb2.QueryRecordsByIdResponse.SerializeToString,
            ),
            'RecordsByFingerprint': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordsByFingerprint,
                    request_deserializer=likechain_dot_iscn_dot_query__pb2.QueryRecordsByFingerprintRequest.FromString,
                    response_serializer=likechain_dot_iscn_dot_query__pb2.QueryRecordsByFingerprintResponse.SerializeToString,
            ),
            'RecordsByOwner': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordsByOwner,
                    request_deserializer=likechain_dot_iscn_dot_query__pb2.QueryRecordsByOwnerRequest.FromString,
                    response_serializer=likechain_dot_iscn_dot_query__pb2.QueryRecordsByOwnerResponse.SerializeToString,
            ),
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=likechain_dot_iscn_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=likechain_dot_iscn_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'GetCid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCid,
                    request_deserializer=likechain_dot_iscn_dot_query__pb2.QueryGetCidRequest.FromString,
                    response_serializer=likechain_dot_iscn_dot_query__pb2.QueryGetCidResponse.SerializeToString,
            ),
            'HasCid': grpc.unary_unary_rpc_method_handler(
                    servicer.HasCid,
                    request_deserializer=likechain_dot_iscn_dot_query__pb2.QueryHasCidRequest.FromString,
                    response_serializer=likechain_dot_iscn_dot_query__pb2.QueryHasCidResponse.SerializeToString,
            ),
            'GetCidSize': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCidSize,
                    request_deserializer=likechain_dot_iscn_dot_query__pb2.QueryGetCidSizeRequest.FromString,
                    response_serializer=likechain_dot_iscn_dot_query__pb2.QueryGetCidSizeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'likechain.iscn.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Usage:
    /iscn/api/endpoint?param1=blablabla&param2=blablabla...
    Example:
    /iscn/records/id?iscn_id=iscn://likecoin-chain/btC7CJvMm4WLj9Tau9LAPTfGK7sfymTJW7ORcFdruCU&from_version=2
    """

    @staticmethod
    def RecordsById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.iscn.Query/RecordsById',
            likechain_dot_iscn_dot_query__pb2.QueryRecordsByIdRequest.SerializeToString,
            likechain_dot_iscn_dot_query__pb2.QueryRecordsByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecordsByFingerprint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.iscn.Query/RecordsByFingerprint',
            likechain_dot_iscn_dot_query__pb2.QueryRecordsByFingerprintRequest.SerializeToString,
            likechain_dot_iscn_dot_query__pb2.QueryRecordsByFingerprintResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecordsByOwner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.iscn.Query/RecordsByOwner',
            likechain_dot_iscn_dot_query__pb2.QueryRecordsByOwnerRequest.SerializeToString,
            likechain_dot_iscn_dot_query__pb2.QueryRecordsByOwnerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.iscn.Query/Params',
            likechain_dot_iscn_dot_query__pb2.QueryParamsRequest.SerializeToString,
            likechain_dot_iscn_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.iscn.Query/GetCid',
            likechain_dot_iscn_dot_query__pb2.QueryGetCidRequest.SerializeToString,
            likechain_dot_iscn_dot_query__pb2.QueryGetCidResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasCid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.iscn.Query/HasCid',
            likechain_dot_iscn_dot_query__pb2.QueryHasCidRequest.SerializeToString,
            likechain_dot_iscn_dot_query__pb2.QueryHasCidResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCidSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.iscn.Query/GetCidSize',
            likechain_dot_iscn_dot_query__pb2.QueryGetCidSizeRequest.SerializeToString,
            likechain_dot_iscn_dot_query__pb2.QueryGetCidSizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from likechain.likenft.v1 import query_pb2 as likechain_dot_likenft_dot_v1_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/likechain.likenft.v1.Query/Params',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.ClassesByISCN = channel.unary_unary(
                '/likechain.likenft.v1.Query/ClassesByISCN',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByISCNRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByISCNResponse.FromString,
                )
        self.ClassesByISCNIndex = channel.unary_unary(
                '/likechain.likenft.v1.Query/ClassesByISCNIndex',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByISCNIndexRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByISCNIndexResponse.FromString,
                )
        self.ISCNByClass = channel.unary_unary(
                '/likechain.likenft.v1.Query/ISCNByClass',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryISCNByClassRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryISCNByClassResponse.FromString,
                )
        self.ClassesByAccount = channel.unary_unary(
                '/likechain.likenft.v1.Query/ClassesByAccount',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByAccountRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByAccountResponse.FromString,
                )
        self.ClassesByAccountIndex = channel.unary_unary(
                '/likechain.likenft.v1.Query/ClassesByAccountIndex',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByAccountIndexRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByAccountIndexResponse.FromString,
                )
        self.AccountByClass = channel.unary_unary(
                '/likechain.likenft.v1.Query/AccountByClass',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryAccountByClassRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryAccountByClassResponse.FromString,
                )
        self.BlindBoxContent = channel.unary_unary(
                '/likechain.likenft.v1.Query/BlindBoxContent',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentResponse.FromString,
                )
        self.BlindBoxContentIndex = channel.unary_unary(
                '/likechain.likenft.v1.Query/BlindBoxContentIndex',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentIndexRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentIndexResponse.FromString,
                )
        self.BlindBoxContents = channel.unary_unary(
                '/likechain.likenft.v1.Query/BlindBoxContents',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentsRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentsResponse.FromString,
                )
        self.Offer = channel.unary_unary(
                '/likechain.likenft.v1.Query/Offer',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOfferRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOfferResponse.FromString,
                )
        self.OfferIndex = channel.unary_unary(
                '/likechain.likenft.v1.Query/OfferIndex',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOfferIndexRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOfferIndexResponse.FromString,
                )
        self.OffersByClass = channel.unary_unary(
                '/likechain.likenft.v1.Query/OffersByClass',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOffersByClassRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOffersByClassResponse.FromString,
                )
        self.OffersByNFT = channel.unary_unary(
                '/likechain.likenft.v1.Query/OffersByNFT',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOffersByNFTRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOffersByNFTResponse.FromString,
                )
        self.Listing = channel.unary_unary(
                '/likechain.likenft.v1.Query/Listing',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingResponse.FromString,
                )
        self.ListingIndex = channel.unary_unary(
                '/likechain.likenft.v1.Query/ListingIndex',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingIndexRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingIndexResponse.FromString,
                )
        self.ListingsByClass = channel.unary_unary(
                '/likechain.likenft.v1.Query/ListingsByClass',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingsByClassRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingsByClassResponse.FromString,
                )
        self.ListingsByNFT = channel.unary_unary(
                '/likechain.likenft.v1.Query/ListingsByNFT',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingsByNFTRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingsByNFTResponse.FromString,
                )
        self.RoyaltyConfig = channel.unary_unary(
                '/likechain.likenft.v1.Query/RoyaltyConfig',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryRoyaltyConfigRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryRoyaltyConfigResponse.FromString,
                )
        self.RoyaltyConfigIndex = channel.unary_unary(
                '/likechain.likenft.v1.Query/RoyaltyConfigIndex',
                request_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryRoyaltyConfigIndexRequest.SerializeToString,
                response_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryRoyaltyConfigIndexResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Params(self, request, context):
        """Parameters queries the parameters of the module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClassesByISCN(self, request, context):
        """Queries a ClassesByISCN by index.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClassesByISCNIndex(self, request, context):
        """Queries a list of ClassesByISCN items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ISCNByClass(self, request, context):
        """Queries a list of ISCNByClass items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClassesByAccount(self, request, context):
        """Queries a ClassesByAccount by index.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClassesByAccountIndex(self, request, context):
        """Queries a list of ClassesByAccount items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccountByClass(self, request, context):
        """Queries a list of AccountByClass items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BlindBoxContent(self, request, context):
        """Queries a BlindBoxContent by index.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BlindBoxContentIndex(self, request, context):
        """Queries a list of BlindBoxContent items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BlindBoxContents(self, request, context):
        """Queries a list of BlindBoxContents by class_id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Offer(self, request, context):
        """Queries a Offer by index.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OfferIndex(self, request, context):
        """Queries a list of Offer items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OffersByClass(self, request, context):
        """Queries a list of OffersByClass items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OffersByNFT(self, request, context):
        """Queries a list of OffersByNFT items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Listing(self, request, context):
        """Queries a Listing by index.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListingIndex(self, request, context):
        """Queries a list of Listing items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListingsByClass(self, request, context):
        """Queries a list of Listing items by class
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListingsByNFT(self, request, context):
        """Queries a list of Listing items by nft
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RoyaltyConfig(self, request, context):
        """Queries a RoyaltyConfig by class
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RoyaltyConfigIndex(self, request, context):
        """Queries index of RoyaltyConfig of all classes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'ClassesByISCN': grpc.unary_unary_rpc_method_handler(
                    servicer.ClassesByISCN,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByISCNRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByISCNResponse.SerializeToString,
            ),
            'ClassesByISCNIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.ClassesByISCNIndex,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByISCNIndexRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByISCNIndexResponse.SerializeToString,
            ),
            'ISCNByClass': grpc.unary_unary_rpc_method_handler(
                    servicer.ISCNByClass,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryISCNByClassRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryISCNByClassResponse.SerializeToString,
            ),
            'ClassesByAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.ClassesByAccount,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByAccountRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByAccountResponse.SerializeToString,
            ),
            'ClassesByAccountIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.ClassesByAccountIndex,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByAccountIndexRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByAccountIndexResponse.SerializeToString,
            ),
            'AccountByClass': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountByClass,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryAccountByClassRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryAccountByClassResponse.SerializeToString,
            ),
            'BlindBoxContent': grpc.unary_unary_rpc_method_handler(
                    servicer.BlindBoxContent,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentResponse.SerializeToString,
            ),
            'BlindBoxContentIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.BlindBoxContentIndex,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentIndexRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentIndexResponse.SerializeToString,
            ),
            'BlindBoxContents': grpc.unary_unary_rpc_method_handler(
                    servicer.BlindBoxContents,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentsRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentsResponse.SerializeToString,
            ),
            'Offer': grpc.unary_unary_rpc_method_handler(
                    servicer.Offer,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOfferRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOfferResponse.SerializeToString,
            ),
            'OfferIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.OfferIndex,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOfferIndexRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOfferIndexResponse.SerializeToString,
            ),
            'OffersByClass': grpc.unary_unary_rpc_method_handler(
                    servicer.OffersByClass,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOffersByClassRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOffersByClassResponse.SerializeToString,
            ),
            'OffersByNFT': grpc.unary_unary_rpc_method_handler(
                    servicer.OffersByNFT,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOffersByNFTRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOffersByNFTResponse.SerializeToString,
            ),
            'Listing': grpc.unary_unary_rpc_method_handler(
                    servicer.Listing,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingResponse.SerializeToString,
            ),
            'ListingIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.ListingIndex,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingIndexRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingIndexResponse.SerializeToString,
            ),
            'ListingsByClass': grpc.unary_unary_rpc_method_handler(
                    servicer.ListingsByClass,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingsByClassRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingsByClassResponse.SerializeToString,
            ),
            'ListingsByNFT': grpc.unary_unary_rpc_method_handler(
                    servicer.ListingsByNFT,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingsByNFTRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingsByNFTResponse.SerializeToString,
            ),
            'RoyaltyConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.RoyaltyConfig,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryRoyaltyConfigRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryRoyaltyConfigResponse.SerializeToString,
            ),
            'RoyaltyConfigIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.RoyaltyConfigIndex,
                    request_deserializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryRoyaltyConfigIndexRequest.FromString,
                    response_serializer=likechain_dot_likenft_dot_v1_dot_query__pb2.QueryRoyaltyConfigIndexResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'likechain.likenft.v1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/Params',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryParamsRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClassesByISCN(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/ClassesByISCN',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByISCNRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByISCNResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClassesByISCNIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/ClassesByISCNIndex',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByISCNIndexRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByISCNIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ISCNByClass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/ISCNByClass',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryISCNByClassRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryISCNByClassResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClassesByAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/ClassesByAccount',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByAccountRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClassesByAccountIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/ClassesByAccountIndex',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByAccountIndexRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryClassesByAccountIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AccountByClass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/AccountByClass',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryAccountByClassRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryAccountByClassResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BlindBoxContent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/BlindBoxContent',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BlindBoxContentIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/BlindBoxContentIndex',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentIndexRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BlindBoxContents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/BlindBoxContents',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentsRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryBlindBoxContentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Offer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/Offer',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOfferRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOfferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OfferIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/OfferIndex',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOfferIndexRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOfferIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OffersByClass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/OffersByClass',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOffersByClassRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOffersByClassResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OffersByNFT(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/OffersByNFT',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOffersByNFTRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryOffersByNFTResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Listing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/Listing',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListingIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/ListingIndex',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingIndexRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListingsByClass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/ListingsByClass',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingsByClassRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingsByClassResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListingsByNFT(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/ListingsByNFT',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingsByNFTRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryListingsByNFTResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RoyaltyConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/RoyaltyConfig',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryRoyaltyConfigRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryRoyaltyConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RoyaltyConfigIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/likechain.likenft.v1.Query/RoyaltyConfigIndex',
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryRoyaltyConfigIndexRequest.SerializeToString,
            likechain_dot_likenft_dot_v1_dot_query__pb2.QueryRoyaltyConfigIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

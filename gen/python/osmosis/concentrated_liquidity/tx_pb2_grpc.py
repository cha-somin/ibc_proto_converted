# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from osmosis.concentrated_liquidity import tx_pb2 as osmosis_dot_concentrated__liquidity_dot_tx__pb2


class MsgStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePosition = channel.unary_unary(
                '/osmosis.concentratedliquidity.v1beta1.Msg/CreatePosition',
                request_serializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCreatePosition.SerializeToString,
                response_deserializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCreatePositionResponse.FromString,
                )
        self.WithdrawPosition = channel.unary_unary(
                '/osmosis.concentratedliquidity.v1beta1.Msg/WithdrawPosition',
                request_serializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgWithdrawPosition.SerializeToString,
                response_deserializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgWithdrawPositionResponse.FromString,
                )
        self.AddToPosition = channel.unary_unary(
                '/osmosis.concentratedliquidity.v1beta1.Msg/AddToPosition',
                request_serializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgAddToPosition.SerializeToString,
                response_deserializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgAddToPositionResponse.FromString,
                )
        self.CollectSpreadRewards = channel.unary_unary(
                '/osmosis.concentratedliquidity.v1beta1.Msg/CollectSpreadRewards',
                request_serializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCollectSpreadRewards.SerializeToString,
                response_deserializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCollectSpreadRewardsResponse.FromString,
                )
        self.CollectIncentives = channel.unary_unary(
                '/osmosis.concentratedliquidity.v1beta1.Msg/CollectIncentives',
                request_serializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCollectIncentives.SerializeToString,
                response_deserializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCollectIncentivesResponse.FromString,
                )
        self.FungifyChargedPositions = channel.unary_unary(
                '/osmosis.concentratedliquidity.v1beta1.Msg/FungifyChargedPositions',
                request_serializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgFungifyChargedPositions.SerializeToString,
                response_deserializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgFungifyChargedPositionsResponse.FromString,
                )


class MsgServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WithdrawPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddToPosition(self, request, context):
        """AddToPosition attempts to add amount0 and amount1 to a position
        with the given position id.
        To maintain backwards-compatibility with future implementations of
        charging, this function deletes the old position and creates a new one with
        the resulting amount after addition.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CollectSpreadRewards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CollectIncentives(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FungifyChargedPositions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePosition': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePosition,
                    request_deserializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCreatePosition.FromString,
                    response_serializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCreatePositionResponse.SerializeToString,
            ),
            'WithdrawPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.WithdrawPosition,
                    request_deserializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgWithdrawPosition.FromString,
                    response_serializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgWithdrawPositionResponse.SerializeToString,
            ),
            'AddToPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.AddToPosition,
                    request_deserializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgAddToPosition.FromString,
                    response_serializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgAddToPositionResponse.SerializeToString,
            ),
            'CollectSpreadRewards': grpc.unary_unary_rpc_method_handler(
                    servicer.CollectSpreadRewards,
                    request_deserializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCollectSpreadRewards.FromString,
                    response_serializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCollectSpreadRewardsResponse.SerializeToString,
            ),
            'CollectIncentives': grpc.unary_unary_rpc_method_handler(
                    servicer.CollectIncentives,
                    request_deserializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCollectIncentives.FromString,
                    response_serializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCollectIncentivesResponse.SerializeToString,
            ),
            'FungifyChargedPositions': grpc.unary_unary_rpc_method_handler(
                    servicer.FungifyChargedPositions,
                    request_deserializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgFungifyChargedPositions.FromString,
                    response_serializer=osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgFungifyChargedPositionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'osmosis.concentratedliquidity.v1beta1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/osmosis.concentratedliquidity.v1beta1.Msg/CreatePosition',
            osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCreatePosition.SerializeToString,
            osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCreatePositionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WithdrawPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/osmosis.concentratedliquidity.v1beta1.Msg/WithdrawPosition',
            osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgWithdrawPosition.SerializeToString,
            osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgWithdrawPositionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddToPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/osmosis.concentratedliquidity.v1beta1.Msg/AddToPosition',
            osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgAddToPosition.SerializeToString,
            osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgAddToPositionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CollectSpreadRewards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/osmosis.concentratedliquidity.v1beta1.Msg/CollectSpreadRewards',
            osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCollectSpreadRewards.SerializeToString,
            osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCollectSpreadRewardsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CollectIncentives(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/osmosis.concentratedliquidity.v1beta1.Msg/CollectIncentives',
            osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCollectIncentives.SerializeToString,
            osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgCollectIncentivesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FungifyChargedPositions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/osmosis.concentratedliquidity.v1beta1.Msg/FungifyChargedPositions',
            osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgFungifyChargedPositions.SerializeToString,
            osmosis_dot_concentrated__liquidity_dot_tx__pb2.MsgFungifyChargedPositionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from lum_network.millions import tx_pb2 as lum__network_dot_millions_dot_tx__pb2


class MsgStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Deposit = channel.unary_unary(
                '/lum.network.millions.Msg/Deposit',
                request_serializer=lum__network_dot_millions_dot_tx__pb2.MsgDeposit.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgDepositResponse.FromString,
                )
        self.DepositRetry = channel.unary_unary(
                '/lum.network.millions.Msg/DepositRetry',
                request_serializer=lum__network_dot_millions_dot_tx__pb2.MsgDepositRetry.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgDepositRetryResponse.FromString,
                )
        self.ClaimPrize = channel.unary_unary(
                '/lum.network.millions.Msg/ClaimPrize',
                request_serializer=lum__network_dot_millions_dot_tx__pb2.MsgClaimPrize.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgClaimPrizeResponse.FromString,
                )
        self.WithdrawDeposit = channel.unary_unary(
                '/lum.network.millions.Msg/WithdrawDeposit',
                request_serializer=lum__network_dot_millions_dot_tx__pb2.MsgWithdrawDeposit.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgWithdrawDepositResponse.FromString,
                )
        self.WithdrawDepositRetry = channel.unary_unary(
                '/lum.network.millions.Msg/WithdrawDepositRetry',
                request_serializer=lum__network_dot_millions_dot_tx__pb2.MsgWithdrawDepositRetry.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgWithdrawDepositRetryResponse.FromString,
                )
        self.DrawRetry = channel.unary_unary(
                '/lum.network.millions.Msg/DrawRetry',
                request_serializer=lum__network_dot_millions_dot_tx__pb2.MsgDrawRetry.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgDrawRetryResponse.FromString,
                )
        self.RestoreInterchainAccounts = channel.unary_unary(
                '/lum.network.millions.Msg/RestoreInterchainAccounts',
                request_serializer=lum__network_dot_millions_dot_tx__pb2.MsgRestoreInterchainAccounts.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgRestoreInterchainAccountsResponse.FromString,
                )


class MsgServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Deposit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DepositRetry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimPrize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WithdrawDeposit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WithdrawDepositRetry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DrawRetry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreInterchainAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Deposit': grpc.unary_unary_rpc_method_handler(
                    servicer.Deposit,
                    request_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgDeposit.FromString,
                    response_serializer=lum__network_dot_millions_dot_tx__pb2.MsgDepositResponse.SerializeToString,
            ),
            'DepositRetry': grpc.unary_unary_rpc_method_handler(
                    servicer.DepositRetry,
                    request_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgDepositRetry.FromString,
                    response_serializer=lum__network_dot_millions_dot_tx__pb2.MsgDepositRetryResponse.SerializeToString,
            ),
            'ClaimPrize': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimPrize,
                    request_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgClaimPrize.FromString,
                    response_serializer=lum__network_dot_millions_dot_tx__pb2.MsgClaimPrizeResponse.SerializeToString,
            ),
            'WithdrawDeposit': grpc.unary_unary_rpc_method_handler(
                    servicer.WithdrawDeposit,
                    request_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgWithdrawDeposit.FromString,
                    response_serializer=lum__network_dot_millions_dot_tx__pb2.MsgWithdrawDepositResponse.SerializeToString,
            ),
            'WithdrawDepositRetry': grpc.unary_unary_rpc_method_handler(
                    servicer.WithdrawDepositRetry,
                    request_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgWithdrawDepositRetry.FromString,
                    response_serializer=lum__network_dot_millions_dot_tx__pb2.MsgWithdrawDepositRetryResponse.SerializeToString,
            ),
            'DrawRetry': grpc.unary_unary_rpc_method_handler(
                    servicer.DrawRetry,
                    request_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgDrawRetry.FromString,
                    response_serializer=lum__network_dot_millions_dot_tx__pb2.MsgDrawRetryResponse.SerializeToString,
            ),
            'RestoreInterchainAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreInterchainAccounts,
                    request_deserializer=lum__network_dot_millions_dot_tx__pb2.MsgRestoreInterchainAccounts.FromString,
                    response_serializer=lum__network_dot_millions_dot_tx__pb2.MsgRestoreInterchainAccountsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lum.network.millions.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Deposit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Msg/Deposit',
            lum__network_dot_millions_dot_tx__pb2.MsgDeposit.SerializeToString,
            lum__network_dot_millions_dot_tx__pb2.MsgDepositResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DepositRetry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Msg/DepositRetry',
            lum__network_dot_millions_dot_tx__pb2.MsgDepositRetry.SerializeToString,
            lum__network_dot_millions_dot_tx__pb2.MsgDepositRetryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimPrize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Msg/ClaimPrize',
            lum__network_dot_millions_dot_tx__pb2.MsgClaimPrize.SerializeToString,
            lum__network_dot_millions_dot_tx__pb2.MsgClaimPrizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WithdrawDeposit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Msg/WithdrawDeposit',
            lum__network_dot_millions_dot_tx__pb2.MsgWithdrawDeposit.SerializeToString,
            lum__network_dot_millions_dot_tx__pb2.MsgWithdrawDepositResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WithdrawDepositRetry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Msg/WithdrawDepositRetry',
            lum__network_dot_millions_dot_tx__pb2.MsgWithdrawDepositRetry.SerializeToString,
            lum__network_dot_millions_dot_tx__pb2.MsgWithdrawDepositRetryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DrawRetry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Msg/DrawRetry',
            lum__network_dot_millions_dot_tx__pb2.MsgDrawRetry.SerializeToString,
            lum__network_dot_millions_dot_tx__pb2.MsgDrawRetryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestoreInterchainAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Msg/RestoreInterchainAccounts',
            lum__network_dot_millions_dot_tx__pb2.MsgRestoreInterchainAccounts.SerializeToString,
            lum__network_dot_millions_dot_tx__pb2.MsgRestoreInterchainAccountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from lum_network.millions import query_pb2 as lum__network_dot_millions_dot_query__pb2


class QueryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/lum.network.millions.Query/Params',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.Pools = channel.unary_unary(
                '/lum.network.millions.Query/Pools',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolsRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolsResponse.FromString,
                )
        self.Pool = channel.unary_unary(
                '/lum.network.millions.Query/Pool',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolResponse.FromString,
                )
        self.Deposits = channel.unary_unary(
                '/lum.network.millions.Query/Deposits',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryDepositsRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryDepositsResponse.FromString,
                )
        self.PoolDeposits = channel.unary_unary(
                '/lum.network.millions.Query/PoolDeposits',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolDepositsRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryDepositsResponse.FromString,
                )
        self.PoolDeposit = channel.unary_unary(
                '/lum.network.millions.Query/PoolDeposit',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolDepositRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryDepositResponse.FromString,
                )
        self.AccountDeposits = channel.unary_unary(
                '/lum.network.millions.Query/AccountDeposits',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryAccountDepositsRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryDepositsResponse.FromString,
                )
        self.AccountPoolDeposits = channel.unary_unary(
                '/lum.network.millions.Query/AccountPoolDeposits',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryAccountPoolDepositsRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryDepositsResponse.FromString,
                )
        self.Draws = channel.unary_unary(
                '/lum.network.millions.Query/Draws',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryDrawsRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryDrawsResponse.FromString,
                )
        self.PoolDraws = channel.unary_unary(
                '/lum.network.millions.Query/PoolDraws',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolDrawsRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryDrawsResponse.FromString,
                )
        self.PoolDraw = channel.unary_unary(
                '/lum.network.millions.Query/PoolDraw',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolDrawRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryDrawResponse.FromString,
                )
        self.Prizes = channel.unary_unary(
                '/lum.network.millions.Query/Prizes',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.FromString,
                )
        self.PoolPrizes = channel.unary_unary(
                '/lum.network.millions.Query/PoolPrizes',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolPrizesRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.FromString,
                )
        self.PoolDrawPrizes = channel.unary_unary(
                '/lum.network.millions.Query/PoolDrawPrizes',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolDrawPrizesRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.FromString,
                )
        self.PoolDrawPrize = channel.unary_unary(
                '/lum.network.millions.Query/PoolDrawPrize',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolDrawPrizeRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPrizeResponse.FromString,
                )
        self.AccountPrizes = channel.unary_unary(
                '/lum.network.millions.Query/AccountPrizes',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryAccountPrizesRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.FromString,
                )
        self.AccountPoolPrizes = channel.unary_unary(
                '/lum.network.millions.Query/AccountPoolPrizes',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryAccountPoolPrizesRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.FromString,
                )
        self.AccountPoolDrawPrizes = channel.unary_unary(
                '/lum.network.millions.Query/AccountPoolDrawPrizes',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryAccountPoolDrawPrizesRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.FromString,
                )
        self.Withdrawals = channel.unary_unary(
                '/lum.network.millions.Query/Withdrawals',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsResponse.FromString,
                )
        self.PoolWithdrawals = channel.unary_unary(
                '/lum.network.millions.Query/PoolWithdrawals',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolWithdrawalsRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsResponse.FromString,
                )
        self.PoolWithdrawal = channel.unary_unary(
                '/lum.network.millions.Query/PoolWithdrawal',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolWithdrawalRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryWithdrawalResponse.FromString,
                )
        self.AccountWithdrawals = channel.unary_unary(
                '/lum.network.millions.Query/AccountWithdrawals',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryAccountWithdrawalsRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsResponse.FromString,
                )
        self.AccountPoolWithdrawals = channel.unary_unary(
                '/lum.network.millions.Query/AccountPoolWithdrawals',
                request_serializer=lum__network_dot_millions_dot_query__pb2.QueryAccountPoolWithdrawalsRequest.SerializeToString,
                response_deserializer=lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsResponse.FromString,
                )


class QueryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Params(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Pools(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Pool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Deposits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PoolDeposits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PoolDeposit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccountDeposits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccountPoolDeposits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Draws(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PoolDraws(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PoolDraw(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Prizes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PoolPrizes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PoolDrawPrizes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PoolDrawPrize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccountPrizes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccountPoolPrizes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccountPoolDrawPrizes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Withdrawals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PoolWithdrawals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PoolWithdrawal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccountWithdrawals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccountPoolWithdrawals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'Pools': grpc.unary_unary_rpc_method_handler(
                    servicer.Pools,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolsRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolsResponse.SerializeToString,
            ),
            'Pool': grpc.unary_unary_rpc_method_handler(
                    servicer.Pool,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryPoolResponse.SerializeToString,
            ),
            'Deposits': grpc.unary_unary_rpc_method_handler(
                    servicer.Deposits,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryDepositsRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryDepositsResponse.SerializeToString,
            ),
            'PoolDeposits': grpc.unary_unary_rpc_method_handler(
                    servicer.PoolDeposits,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolDepositsRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryDepositsResponse.SerializeToString,
            ),
            'PoolDeposit': grpc.unary_unary_rpc_method_handler(
                    servicer.PoolDeposit,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolDepositRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryDepositResponse.SerializeToString,
            ),
            'AccountDeposits': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountDeposits,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryAccountDepositsRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryDepositsResponse.SerializeToString,
            ),
            'AccountPoolDeposits': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountPoolDeposits,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryAccountPoolDepositsRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryDepositsResponse.SerializeToString,
            ),
            'Draws': grpc.unary_unary_rpc_method_handler(
                    servicer.Draws,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryDrawsRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryDrawsResponse.SerializeToString,
            ),
            'PoolDraws': grpc.unary_unary_rpc_method_handler(
                    servicer.PoolDraws,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolDrawsRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryDrawsResponse.SerializeToString,
            ),
            'PoolDraw': grpc.unary_unary_rpc_method_handler(
                    servicer.PoolDraw,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolDrawRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryDrawResponse.SerializeToString,
            ),
            'Prizes': grpc.unary_unary_rpc_method_handler(
                    servicer.Prizes,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.SerializeToString,
            ),
            'PoolPrizes': grpc.unary_unary_rpc_method_handler(
                    servicer.PoolPrizes,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolPrizesRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.SerializeToString,
            ),
            'PoolDrawPrizes': grpc.unary_unary_rpc_method_handler(
                    servicer.PoolDrawPrizes,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolDrawPrizesRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.SerializeToString,
            ),
            'PoolDrawPrize': grpc.unary_unary_rpc_method_handler(
                    servicer.PoolDrawPrize,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolDrawPrizeRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryPrizeResponse.SerializeToString,
            ),
            'AccountPrizes': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountPrizes,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryAccountPrizesRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.SerializeToString,
            ),
            'AccountPoolPrizes': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountPoolPrizes,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryAccountPoolPrizesRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.SerializeToString,
            ),
            'AccountPoolDrawPrizes': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountPoolDrawPrizes,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryAccountPoolDrawPrizesRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.SerializeToString,
            ),
            'Withdrawals': grpc.unary_unary_rpc_method_handler(
                    servicer.Withdrawals,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsResponse.SerializeToString,
            ),
            'PoolWithdrawals': grpc.unary_unary_rpc_method_handler(
                    servicer.PoolWithdrawals,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolWithdrawalsRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsResponse.SerializeToString,
            ),
            'PoolWithdrawal': grpc.unary_unary_rpc_method_handler(
                    servicer.PoolWithdrawal,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryPoolWithdrawalRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryWithdrawalResponse.SerializeToString,
            ),
            'AccountWithdrawals': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountWithdrawals,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryAccountWithdrawalsRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsResponse.SerializeToString,
            ),
            'AccountPoolWithdrawals': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountPoolWithdrawals,
                    request_deserializer=lum__network_dot_millions_dot_query__pb2.QueryAccountPoolWithdrawalsRequest.FromString,
                    response_serializer=lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lum.network.millions.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/Params',
            lum__network_dot_millions_dot_query__pb2.QueryParamsRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Pools(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/Pools',
            lum__network_dot_millions_dot_query__pb2.QueryPoolsRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryPoolsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Pool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/Pool',
            lum__network_dot_millions_dot_query__pb2.QueryPoolRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryPoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Deposits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/Deposits',
            lum__network_dot_millions_dot_query__pb2.QueryDepositsRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryDepositsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PoolDeposits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/PoolDeposits',
            lum__network_dot_millions_dot_query__pb2.QueryPoolDepositsRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryDepositsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PoolDeposit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/PoolDeposit',
            lum__network_dot_millions_dot_query__pb2.QueryPoolDepositRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryDepositResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AccountDeposits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/AccountDeposits',
            lum__network_dot_millions_dot_query__pb2.QueryAccountDepositsRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryDepositsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AccountPoolDeposits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/AccountPoolDeposits',
            lum__network_dot_millions_dot_query__pb2.QueryAccountPoolDepositsRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryDepositsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Draws(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/Draws',
            lum__network_dot_millions_dot_query__pb2.QueryDrawsRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryDrawsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PoolDraws(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/PoolDraws',
            lum__network_dot_millions_dot_query__pb2.QueryPoolDrawsRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryDrawsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PoolDraw(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/PoolDraw',
            lum__network_dot_millions_dot_query__pb2.QueryPoolDrawRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryDrawResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Prizes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/Prizes',
            lum__network_dot_millions_dot_query__pb2.QueryPrizesRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PoolPrizes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/PoolPrizes',
            lum__network_dot_millions_dot_query__pb2.QueryPoolPrizesRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PoolDrawPrizes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/PoolDrawPrizes',
            lum__network_dot_millions_dot_query__pb2.QueryPoolDrawPrizesRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PoolDrawPrize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/PoolDrawPrize',
            lum__network_dot_millions_dot_query__pb2.QueryPoolDrawPrizeRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryPrizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AccountPrizes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/AccountPrizes',
            lum__network_dot_millions_dot_query__pb2.QueryAccountPrizesRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AccountPoolPrizes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/AccountPoolPrizes',
            lum__network_dot_millions_dot_query__pb2.QueryAccountPoolPrizesRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AccountPoolDrawPrizes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/AccountPoolDrawPrizes',
            lum__network_dot_millions_dot_query__pb2.QueryAccountPoolDrawPrizesRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryPrizesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Withdrawals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/Withdrawals',
            lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PoolWithdrawals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/PoolWithdrawals',
            lum__network_dot_millions_dot_query__pb2.QueryPoolWithdrawalsRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PoolWithdrawal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/PoolWithdrawal',
            lum__network_dot_millions_dot_query__pb2.QueryPoolWithdrawalRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryWithdrawalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AccountWithdrawals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/AccountWithdrawals',
            lum__network_dot_millions_dot_query__pb2.QueryAccountWithdrawalsRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AccountPoolWithdrawals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lum.network.millions.Query/AccountPoolWithdrawals',
            lum__network_dot_millions_dot_query__pb2.QueryAccountPoolWithdrawalsRequest.SerializeToString,
            lum__network_dot_millions_dot_query__pb2.QueryWithdrawalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

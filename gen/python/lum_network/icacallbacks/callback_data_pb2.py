# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lum-network/icacallbacks/callback_data.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n,lum-network/icacallbacks/callback_data.proto\x12\x18lum.network.icacallbacks\"\xcb\x01\n\x0c\x43\x61llbackData\x12!\n\x0c\x63\x61llback_key\x18\x01 \x01(\tR\x0b\x63\x61llbackKey\x12\x17\n\x07port_id\x18\x02 \x01(\tR\x06portId\x12\x1d\n\nchannel_id\x18\x03 \x01(\tR\tchannelId\x12\x1a\n\x08sequence\x18\x04 \x01(\x04R\x08sequence\x12\x1f\n\x0b\x63\x61llback_id\x18\x05 \x01(\tR\ncallbackId\x12#\n\rcallback_args\x18\x06 \x01(\x0cR\x0c\x63\x61llbackArgsB\xe6\x01\n\x1c\x63om.lum.network.icacallbacksB\x11\x43\x61llbackDataProtoP\x01Z1github.com/lum-network/chain/x/icacallbacks/types\xa2\x02\x03LNI\xaa\x02\x18Lum.Network.Icacallbacks\xca\x02\x18Lum\\Network\\Icacallbacks\xe2\x02$Lum\\Network\\Icacallbacks\\GPBMetadata\xea\x02\x1aLum::Network::Icacallbacksb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'lum_network.icacallbacks.callback_data_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\034com.lum.network.icacallbacksB\021CallbackDataProtoP\001Z1github.com/lum-network/chain/x/icacallbacks/types\242\002\003LNI\252\002\030Lum.Network.Icacallbacks\312\002\030Lum\\Network\\Icacallbacks\342\002$Lum\\Network\\Icacallbacks\\GPBMetadata\352\002\032Lum::Network::Icacallbacks'
  _globals['_CALLBACKDATA']._serialized_start=75
  _globals['_CALLBACKDATA']._serialized_end=278
# @@protoc_insertion_point(module_scope)

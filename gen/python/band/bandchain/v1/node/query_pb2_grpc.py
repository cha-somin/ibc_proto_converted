# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from band.bandchain.v1.node import query_pb2 as band_dot_bandchain_dot_v1_dot_node_dot_query__pb2


class ServiceStub(object):
    """Service defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ChainID = channel.unary_unary(
                '/bandchain.v1.node.Service/ChainID',
                request_serializer=band_dot_bandchain_dot_v1_dot_node_dot_query__pb2.QueryChainIDRequest.SerializeToString,
                response_deserializer=band_dot_bandchain_dot_v1_dot_node_dot_query__pb2.QueryChainIDResponse.FromString,
                )
        self.EVMValidators = channel.unary_unary(
                '/bandchain.v1.node.Service/EVMValidators',
                request_serializer=band_dot_bandchain_dot_v1_dot_node_dot_query__pb2.QueryEVMValidatorsRequest.SerializeToString,
                response_deserializer=band_dot_bandchain_dot_v1_dot_node_dot_query__pb2.QueryEVMValidatorsResponse.FromString,
                )


class ServiceServicer(object):
    """Service defines the gRPC querier service.
    """

    def ChainID(self, request, context):
        """ChainID queries the chain ID of this node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EVMValidators(self, request, context):
        """EVMValidators queries current list of validator's address and power
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ChainID': grpc.unary_unary_rpc_method_handler(
                    servicer.ChainID,
                    request_deserializer=band_dot_bandchain_dot_v1_dot_node_dot_query__pb2.QueryChainIDRequest.FromString,
                    response_serializer=band_dot_bandchain_dot_v1_dot_node_dot_query__pb2.QueryChainIDResponse.SerializeToString,
            ),
            'EVMValidators': grpc.unary_unary_rpc_method_handler(
                    servicer.EVMValidators,
                    request_deserializer=band_dot_bandchain_dot_v1_dot_node_dot_query__pb2.QueryEVMValidatorsRequest.FromString,
                    response_serializer=band_dot_bandchain_dot_v1_dot_node_dot_query__pb2.QueryEVMValidatorsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bandchain.v1.node.Service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Service(object):
    """Service defines the gRPC querier service.
    """

    @staticmethod
    def ChainID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bandchain.v1.node.Service/ChainID',
            band_dot_bandchain_dot_v1_dot_node_dot_query__pb2.QueryChainIDRequest.SerializeToString,
            band_dot_bandchain_dot_v1_dot_node_dot_query__pb2.QueryChainIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EVMValidators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bandchain.v1.node.Service/EVMValidators',
            band_dot_bandchain_dot_v1_dot_node_dot_query__pb2.QueryEVMValidatorsRequest.SerializeToString,
            band_dot_bandchain_dot_v1_dot_node_dot_query__pb2.QueryEVMValidatorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

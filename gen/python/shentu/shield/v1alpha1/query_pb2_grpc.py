# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from shentu.shield.v1alpha1 import query_pb2 as shentu_dot_shield_dot_v1alpha1_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service for shield module
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Pool = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/Pool',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolResponse.FromString,
                )
        self.Sponsor = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/Sponsor',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QuerySponsorRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QuerySponsorResponse.FromString,
                )
        self.Pools = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/Pools',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolsRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolsResponse.FromString,
                )
        self.PoolPurchaseLists = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/PoolPurchaseLists',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolPurchaseListsRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListsResponse.FromString,
                )
        self.PurchaseLists = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/PurchaseLists',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListsRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListsResponse.FromString,
                )
        self.PurchaseList = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/PurchaseList',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListResponse.FromString,
                )
        self.Purchases = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/Purchases',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchasesRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchasesResponse.FromString,
                )
        self.Provider = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/Provider',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryProviderRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryProviderResponse.FromString,
                )
        self.Providers = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/Providers',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryProvidersRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryProvidersResponse.FromString,
                )
        self.PoolParams = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/PoolParams',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolParamsRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolParamsResponse.FromString,
                )
        self.ClaimParams = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/ClaimParams',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryClaimParamsRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryClaimParamsResponse.FromString,
                )
        self.DistrParams = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/DistrParams',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryDistrParamsRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryDistrParamsResponse.FromString,
                )
        self.ShieldStatus = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/ShieldStatus',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStatusRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStatusResponse.FromString,
                )
        self.ShieldStaking = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/ShieldStaking',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStakingRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStakingResponse.FromString,
                )
        self.ShieldStakingRate = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/ShieldStakingRate',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStakingRateRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStakingRateResponse.FromString,
                )
        self.Reimbursement = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/Reimbursement',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryReimbursementRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryReimbursementResponse.FromString,
                )
        self.Reimbursements = channel.unary_unary(
                '/shentu.shield.v1alpha1.Query/Reimbursements',
                request_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryReimbursementsRequest.SerializeToString,
                response_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryReimbursementsResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service for shield module
    """

    def Pool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Sponsor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Pools(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PoolPurchaseLists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PurchaseLists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PurchaseList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Purchases(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Provider(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Providers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PoolParams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimParams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DistrParams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShieldStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShieldStaking(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShieldStakingRate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reimbursement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reimbursements(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Pool': grpc.unary_unary_rpc_method_handler(
                    servicer.Pool,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolResponse.SerializeToString,
            ),
            'Sponsor': grpc.unary_unary_rpc_method_handler(
                    servicer.Sponsor,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QuerySponsorRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QuerySponsorResponse.SerializeToString,
            ),
            'Pools': grpc.unary_unary_rpc_method_handler(
                    servicer.Pools,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolsRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolsResponse.SerializeToString,
            ),
            'PoolPurchaseLists': grpc.unary_unary_rpc_method_handler(
                    servicer.PoolPurchaseLists,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolPurchaseListsRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListsResponse.SerializeToString,
            ),
            'PurchaseLists': grpc.unary_unary_rpc_method_handler(
                    servicer.PurchaseLists,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListsRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListsResponse.SerializeToString,
            ),
            'PurchaseList': grpc.unary_unary_rpc_method_handler(
                    servicer.PurchaseList,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListResponse.SerializeToString,
            ),
            'Purchases': grpc.unary_unary_rpc_method_handler(
                    servicer.Purchases,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchasesRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchasesResponse.SerializeToString,
            ),
            'Provider': grpc.unary_unary_rpc_method_handler(
                    servicer.Provider,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryProviderRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryProviderResponse.SerializeToString,
            ),
            'Providers': grpc.unary_unary_rpc_method_handler(
                    servicer.Providers,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryProvidersRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryProvidersResponse.SerializeToString,
            ),
            'PoolParams': grpc.unary_unary_rpc_method_handler(
                    servicer.PoolParams,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolParamsRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolParamsResponse.SerializeToString,
            ),
            'ClaimParams': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimParams,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryClaimParamsRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryClaimParamsResponse.SerializeToString,
            ),
            'DistrParams': grpc.unary_unary_rpc_method_handler(
                    servicer.DistrParams,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryDistrParamsRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryDistrParamsResponse.SerializeToString,
            ),
            'ShieldStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.ShieldStatus,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStatusRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStatusResponse.SerializeToString,
            ),
            'ShieldStaking': grpc.unary_unary_rpc_method_handler(
                    servicer.ShieldStaking,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStakingRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStakingResponse.SerializeToString,
            ),
            'ShieldStakingRate': grpc.unary_unary_rpc_method_handler(
                    servicer.ShieldStakingRate,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStakingRateRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStakingRateResponse.SerializeToString,
            ),
            'Reimbursement': grpc.unary_unary_rpc_method_handler(
                    servicer.Reimbursement,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryReimbursementRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryReimbursementResponse.SerializeToString,
            ),
            'Reimbursements': grpc.unary_unary_rpc_method_handler(
                    servicer.Reimbursements,
                    request_deserializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryReimbursementsRequest.FromString,
                    response_serializer=shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryReimbursementsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'shentu.shield.v1alpha1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service for shield module
    """

    @staticmethod
    def Pool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/Pool',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Sponsor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/Sponsor',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QuerySponsorRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QuerySponsorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Pools(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/Pools',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolsRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PoolPurchaseLists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/PoolPurchaseLists',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolPurchaseListsRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PurchaseLists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/PurchaseLists',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListsRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PurchaseList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/PurchaseList',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchaseListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Purchases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/Purchases',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchasesRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPurchasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Provider(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/Provider',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryProviderRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryProviderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Providers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/Providers',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryProvidersRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryProvidersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PoolParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/PoolParams',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolParamsRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryPoolParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/ClaimParams',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryClaimParamsRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryClaimParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DistrParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/DistrParams',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryDistrParamsRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryDistrParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShieldStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/ShieldStatus',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStatusRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShieldStaking(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/ShieldStaking',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStakingRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStakingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShieldStakingRate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/ShieldStakingRate',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStakingRateRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryShieldStakingRateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reimbursement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/Reimbursement',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryReimbursementRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryReimbursementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reimbursements(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.shield.v1alpha1.Query/Reimbursements',
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryReimbursementsRequest.SerializeToString,
            shentu_dot_shield_dot_v1alpha1_dot_query__pb2.QueryReimbursementsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

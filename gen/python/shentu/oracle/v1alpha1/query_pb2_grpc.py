# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from shentu.oracle.v1alpha1 import query_pb2 as shentu_dot_oracle_dot_v1alpha1_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service for oracle module.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Operator = channel.unary_unary(
                '/shentu.oracle.v1alpha1.Query/Operator',
                request_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryOperatorRequest.SerializeToString,
                response_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryOperatorResponse.FromString,
                )
        self.Operators = channel.unary_unary(
                '/shentu.oracle.v1alpha1.Query/Operators',
                request_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryOperatorsRequest.SerializeToString,
                response_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryOperatorsResponse.FromString,
                )
        self.Withdraws = channel.unary_unary(
                '/shentu.oracle.v1alpha1.Query/Withdraws',
                request_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryWithdrawsRequest.SerializeToString,
                response_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryWithdrawsResponse.FromString,
                )
        self.Task = channel.unary_unary(
                '/shentu.oracle.v1alpha1.Query/Task',
                request_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTaskRequest.SerializeToString,
                response_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTaskResponse.FromString,
                )
        self.TxTask = channel.unary_unary(
                '/shentu.oracle.v1alpha1.Query/TxTask',
                request_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTxTaskRequest.SerializeToString,
                response_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTxTaskResponse.FromString,
                )
        self.Response = channel.unary_unary(
                '/shentu.oracle.v1alpha1.Query/Response',
                request_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryResponseRequest.SerializeToString,
                response_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryResponseResponse.FromString,
                )
        self.TxResponse = channel.unary_unary(
                '/shentu.oracle.v1alpha1.Query/TxResponse',
                request_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTxResponseRequest.SerializeToString,
                response_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTxResponseResponse.FromString,
                )
        self.Params = channel.unary_unary(
                '/shentu.oracle.v1alpha1.Query/Params',
                request_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryParamsResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service for oracle module.
    """

    def Operator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Operators(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Withdraws(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Task(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TxTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Response(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TxResponse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Params(self, request, context):
        """Params queries all parameters of the oracle module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Operator': grpc.unary_unary_rpc_method_handler(
                    servicer.Operator,
                    request_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryOperatorRequest.FromString,
                    response_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryOperatorResponse.SerializeToString,
            ),
            'Operators': grpc.unary_unary_rpc_method_handler(
                    servicer.Operators,
                    request_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryOperatorsRequest.FromString,
                    response_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryOperatorsResponse.SerializeToString,
            ),
            'Withdraws': grpc.unary_unary_rpc_method_handler(
                    servicer.Withdraws,
                    request_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryWithdrawsRequest.FromString,
                    response_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryWithdrawsResponse.SerializeToString,
            ),
            'Task': grpc.unary_unary_rpc_method_handler(
                    servicer.Task,
                    request_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTaskRequest.FromString,
                    response_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTaskResponse.SerializeToString,
            ),
            'TxTask': grpc.unary_unary_rpc_method_handler(
                    servicer.TxTask,
                    request_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTxTaskRequest.FromString,
                    response_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTxTaskResponse.SerializeToString,
            ),
            'Response': grpc.unary_unary_rpc_method_handler(
                    servicer.Response,
                    request_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryResponseRequest.FromString,
                    response_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryResponseResponse.SerializeToString,
            ),
            'TxResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.TxResponse,
                    request_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTxResponseRequest.FromString,
                    response_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTxResponseResponse.SerializeToString,
            ),
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'shentu.oracle.v1alpha1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service for oracle module.
    """

    @staticmethod
    def Operator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.oracle.v1alpha1.Query/Operator',
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryOperatorRequest.SerializeToString,
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryOperatorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Operators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.oracle.v1alpha1.Query/Operators',
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryOperatorsRequest.SerializeToString,
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryOperatorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Withdraws(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.oracle.v1alpha1.Query/Withdraws',
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryWithdrawsRequest.SerializeToString,
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryWithdrawsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Task(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.oracle.v1alpha1.Query/Task',
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTaskRequest.SerializeToString,
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TxTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.oracle.v1alpha1.Query/TxTask',
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTxTaskRequest.SerializeToString,
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTxTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Response(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.oracle.v1alpha1.Query/Response',
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryResponseRequest.SerializeToString,
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryResponseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TxResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.oracle.v1alpha1.Query/TxResponse',
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTxResponseRequest.SerializeToString,
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryTxResponseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shentu.oracle.v1alpha1.Query/Params',
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryParamsRequest.SerializeToString,
            shentu_dot_oracle_dot_v1alpha1_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

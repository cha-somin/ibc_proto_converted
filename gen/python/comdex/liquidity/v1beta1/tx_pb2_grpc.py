# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from comdex.liquidity.v1beta1 import tx_pb2 as comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2


class MsgStub(object):
    """Msg defines the Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePair = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/CreatePair',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreatePair.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreatePairResponse.FromString,
                )
        self.CreatePool = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/CreatePool',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreatePool.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreatePoolResponse.FromString,
                )
        self.CreateRangedPool = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/CreateRangedPool',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreateRangedPool.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreateRangedPoolResponse.FromString,
                )
        self.Deposit = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/Deposit',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgDeposit.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgDepositResponse.FromString,
                )
        self.Withdraw = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/Withdraw',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgWithdraw.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgWithdrawResponse.FromString,
                )
        self.LimitOrder = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/LimitOrder',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgLimitOrder.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgLimitOrderResponse.FromString,
                )
        self.MarketOrder = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/MarketOrder',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgMarketOrder.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgMarketOrderResponse.FromString,
                )
        self.MMOrder = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/MMOrder',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgMMOrder.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgMMOrderResponse.FromString,
                )
        self.CancelOrder = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/CancelOrder',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelOrder.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelOrderResponse.FromString,
                )
        self.CancelAllOrders = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/CancelAllOrders',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelAllOrders.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelAllOrdersResponse.FromString,
                )
        self.CancelMMOrder = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/CancelMMOrder',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelMMOrder.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelMMOrderResponse.FromString,
                )
        self.Farm = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/Farm',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgFarm.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgFarmResponse.FromString,
                )
        self.Unfarm = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/Unfarm',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgUnfarm.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgUnfarmResponse.FromString,
                )
        self.DepositAndFarm = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/DepositAndFarm',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgDepositAndFarm.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgDepositAndFarmResponse.FromString,
                )
        self.UnfarmAndWithdraw = channel.unary_unary(
                '/comdex.liquidity.v1beta1.Msg/UnfarmAndWithdraw',
                request_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgUnfarmAndWithdraw.SerializeToString,
                response_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgUnfarmAndWithdrawResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the Msg service.
    """

    def CreatePair(self, request, context):
        """CreatePair defines a method for creating a pair
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePool(self, request, context):
        """CreatePool defines a method for creating a pool
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRangedPool(self, request, context):
        """CreateRangePool defines a method for creating a ranged pool
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Deposit(self, request, context):
        """Deposit defines a method for depositing coins to the pool
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Withdraw(self, request, context):
        """Withdraw defines a method for withdrawing pool coin from the pool
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LimitOrder(self, request, context):
        """LimitOrder defines a method for making a limit order
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarketOrder(self, request, context):
        """MarketOrder defines a method for making a market order
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MMOrder(self, request, context):
        """MsgMMOrder defines a method for making a MM(market making) order
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelOrder(self, request, context):
        """CancelOrder defines a method for cancelling an order
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelAllOrders(self, request, context):
        """CancelAllOrders defines a method for cancelling all orders
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelMMOrder(self, request, context):
        """CancelMMOrder defines a method for cancelling previously placed market making orders
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Farm(self, request, context):
        """MsgFarm defines a method to farm the pool token, for incentivization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unfarm(self, request, context):
        """Unfarm defines a method to unfarm the farmed pool token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DepositAndFarm(self, request, context):
        """DepositAndFarm defines an SDK message for depositing coins to the pool and farming the pool coin
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnfarmAndWithdraw(self, request, context):
        """UnfarmAndWithdraw defines a SDK message for performing unfarm of the farmed coins and withdrawing liquidity from pool
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePair': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePair,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreatePair.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreatePairResponse.SerializeToString,
            ),
            'CreatePool': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePool,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreatePool.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreatePoolResponse.SerializeToString,
            ),
            'CreateRangedPool': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRangedPool,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreateRangedPool.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreateRangedPoolResponse.SerializeToString,
            ),
            'Deposit': grpc.unary_unary_rpc_method_handler(
                    servicer.Deposit,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgDeposit.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgDepositResponse.SerializeToString,
            ),
            'Withdraw': grpc.unary_unary_rpc_method_handler(
                    servicer.Withdraw,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgWithdraw.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgWithdrawResponse.SerializeToString,
            ),
            'LimitOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.LimitOrder,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgLimitOrder.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgLimitOrderResponse.SerializeToString,
            ),
            'MarketOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.MarketOrder,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgMarketOrder.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgMarketOrderResponse.SerializeToString,
            ),
            'MMOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.MMOrder,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgMMOrder.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgMMOrderResponse.SerializeToString,
            ),
            'CancelOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelOrder,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelOrder.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelOrderResponse.SerializeToString,
            ),
            'CancelAllOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelAllOrders,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelAllOrders.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelAllOrdersResponse.SerializeToString,
            ),
            'CancelMMOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelMMOrder,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelMMOrder.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelMMOrderResponse.SerializeToString,
            ),
            'Farm': grpc.unary_unary_rpc_method_handler(
                    servicer.Farm,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgFarm.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgFarmResponse.SerializeToString,
            ),
            'Unfarm': grpc.unary_unary_rpc_method_handler(
                    servicer.Unfarm,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgUnfarm.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgUnfarmResponse.SerializeToString,
            ),
            'DepositAndFarm': grpc.unary_unary_rpc_method_handler(
                    servicer.DepositAndFarm,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgDepositAndFarm.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgDepositAndFarmResponse.SerializeToString,
            ),
            'UnfarmAndWithdraw': grpc.unary_unary_rpc_method_handler(
                    servicer.UnfarmAndWithdraw,
                    request_deserializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgUnfarmAndWithdraw.FromString,
                    response_serializer=comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgUnfarmAndWithdrawResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'comdex.liquidity.v1beta1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the Msg service.
    """

    @staticmethod
    def CreatePair(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/CreatePair',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreatePair.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreatePairResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/CreatePool',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreatePool.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreatePoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRangedPool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/CreateRangedPool',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreateRangedPool.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCreateRangedPoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Deposit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/Deposit',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgDeposit.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgDepositResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Withdraw(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/Withdraw',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgWithdraw.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgWithdrawResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LimitOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/LimitOrder',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgLimitOrder.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgLimitOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarketOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/MarketOrder',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgMarketOrder.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgMarketOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MMOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/MMOrder',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgMMOrder.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgMMOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/CancelOrder',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelOrder.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelAllOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/CancelAllOrders',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelAllOrders.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelAllOrdersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelMMOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/CancelMMOrder',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelMMOrder.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgCancelMMOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Farm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/Farm',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgFarm.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgFarmResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unfarm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/Unfarm',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgUnfarm.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgUnfarmResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DepositAndFarm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/DepositAndFarm',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgDepositAndFarm.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgDepositAndFarmResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnfarmAndWithdraw(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/comdex.liquidity.v1beta1.Msg/UnfarmAndWithdraw',
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgUnfarmAndWithdraw.SerializeToString,
            comdex_dot_liquidity_dot_v1beta1_dot_tx__pb2.MsgUnfarmAndWithdrawResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

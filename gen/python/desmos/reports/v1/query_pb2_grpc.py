# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from desmos.reports.v1 import query_pb2 as desmos_dot_reports_dot_v1_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Reports = channel.unary_unary(
                '/desmos.reports.v1.Query/Reports',
                request_serializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReportsRequest.SerializeToString,
                response_deserializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReportsResponse.FromString,
                )
        self.Report = channel.unary_unary(
                '/desmos.reports.v1.Query/Report',
                request_serializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReportRequest.SerializeToString,
                response_deserializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReportResponse.FromString,
                )
        self.Reasons = channel.unary_unary(
                '/desmos.reports.v1.Query/Reasons',
                request_serializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReasonsRequest.SerializeToString,
                response_deserializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReasonsResponse.FromString,
                )
        self.Reason = channel.unary_unary(
                '/desmos.reports.v1.Query/Reason',
                request_serializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReasonRequest.SerializeToString,
                response_deserializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReasonResponse.FromString,
                )
        self.Params = channel.unary_unary(
                '/desmos.reports.v1.Query/Params',
                request_serializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Reports(self, request, context):
        """Reports allows to query the reports for a specific target
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Report(self, request, context):
        """Report allows to query the report having the given id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reasons(self, request, context):
        """Reasons allows to query the supported reporting reasons for a subspace
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reason(self, request, context):
        """Reason allows to query the reason having the given id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Params(self, request, context):
        """Params allows to query the module parameters
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Reports': grpc.unary_unary_rpc_method_handler(
                    servicer.Reports,
                    request_deserializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReportsRequest.FromString,
                    response_serializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReportsResponse.SerializeToString,
            ),
            'Report': grpc.unary_unary_rpc_method_handler(
                    servicer.Report,
                    request_deserializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReportRequest.FromString,
                    response_serializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReportResponse.SerializeToString,
            ),
            'Reasons': grpc.unary_unary_rpc_method_handler(
                    servicer.Reasons,
                    request_deserializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReasonsRequest.FromString,
                    response_serializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReasonsResponse.SerializeToString,
            ),
            'Reason': grpc.unary_unary_rpc_method_handler(
                    servicer.Reason,
                    request_deserializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReasonRequest.FromString,
                    response_serializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryReasonResponse.SerializeToString,
            ),
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=desmos_dot_reports_dot_v1_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'desmos.reports.v1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Reports(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/desmos.reports.v1.Query/Reports',
            desmos_dot_reports_dot_v1_dot_query__pb2.QueryReportsRequest.SerializeToString,
            desmos_dot_reports_dot_v1_dot_query__pb2.QueryReportsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Report(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/desmos.reports.v1.Query/Report',
            desmos_dot_reports_dot_v1_dot_query__pb2.QueryReportRequest.SerializeToString,
            desmos_dot_reports_dot_v1_dot_query__pb2.QueryReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reasons(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/desmos.reports.v1.Query/Reasons',
            desmos_dot_reports_dot_v1_dot_query__pb2.QueryReasonsRequest.SerializeToString,
            desmos_dot_reports_dot_v1_dot_query__pb2.QueryReasonsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reason(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/desmos.reports.v1.Query/Reason',
            desmos_dot_reports_dot_v1_dot_query__pb2.QueryReasonRequest.SerializeToString,
            desmos_dot_reports_dot_v1_dot_query__pb2.QueryReasonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/desmos.reports.v1.Query/Params',
            desmos_dot_reports_dot_v1_dot_query__pb2.QueryParamsRequest.SerializeToString,
            desmos_dot_reports_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

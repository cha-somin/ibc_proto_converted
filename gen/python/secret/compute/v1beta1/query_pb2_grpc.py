# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from secret.compute.v1beta1 import query_pb2 as secret_dot_compute_dot_v1beta1_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ContractInfo = channel.unary_unary(
                '/secret.compute.v1beta1.Query/ContractInfo',
                request_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByContractAddressRequest.SerializeToString,
                response_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryContractInfoResponse.FromString,
                )
        self.ContractsByCodeId = channel.unary_unary(
                '/secret.compute.v1beta1.Query/ContractsByCodeId',
                request_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByCodeIdRequest.SerializeToString,
                response_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryContractsByCodeIdResponse.FromString,
                )
        self.QuerySecretContract = channel.unary_unary(
                '/secret.compute.v1beta1.Query/QuerySecretContract',
                request_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QuerySecretContractRequest.SerializeToString,
                response_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QuerySecretContractResponse.FromString,
                )
        self.Code = channel.unary_unary(
                '/secret.compute.v1beta1.Query/Code',
                request_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByCodeIdRequest.SerializeToString,
                response_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryCodeResponse.FromString,
                )
        self.Codes = channel.unary_unary(
                '/secret.compute.v1beta1.Query/Codes',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryCodesResponse.FromString,
                )
        self.CodeHashByContractAddress = channel.unary_unary(
                '/secret.compute.v1beta1.Query/CodeHashByContractAddress',
                request_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByContractAddressRequest.SerializeToString,
                response_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryCodeHashResponse.FromString,
                )
        self.CodeHashByCodeId = channel.unary_unary(
                '/secret.compute.v1beta1.Query/CodeHashByCodeId',
                request_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByCodeIdRequest.SerializeToString,
                response_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryCodeHashResponse.FromString,
                )
        self.LabelByAddress = channel.unary_unary(
                '/secret.compute.v1beta1.Query/LabelByAddress',
                request_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByContractAddressRequest.SerializeToString,
                response_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryContractLabelResponse.FromString,
                )
        self.AddressByLabel = channel.unary_unary(
                '/secret.compute.v1beta1.Query/AddressByLabel',
                request_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByLabelRequest.SerializeToString,
                response_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryContractAddressResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service
    """

    def ContractInfo(self, request, context):
        """Query contract info by address
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ContractsByCodeId(self, request, context):
        """Query code info by id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuerySecretContract(self, request, context):
        """Query secret contract
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Code(self, request, context):
        """Query a specific contract code by id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Codes(self, request, context):
        """Query all contract codes on-chain
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CodeHashByContractAddress(self, request, context):
        """Query code hash by contract address
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CodeHashByCodeId(self, request, context):
        """Query code hash by code id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LabelByAddress(self, request, context):
        """Query contract label by address
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddressByLabel(self, request, context):
        """Query contract address by label
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ContractInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ContractInfo,
                    request_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByContractAddressRequest.FromString,
                    response_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryContractInfoResponse.SerializeToString,
            ),
            'ContractsByCodeId': grpc.unary_unary_rpc_method_handler(
                    servicer.ContractsByCodeId,
                    request_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByCodeIdRequest.FromString,
                    response_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryContractsByCodeIdResponse.SerializeToString,
            ),
            'QuerySecretContract': grpc.unary_unary_rpc_method_handler(
                    servicer.QuerySecretContract,
                    request_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QuerySecretContractRequest.FromString,
                    response_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QuerySecretContractResponse.SerializeToString,
            ),
            'Code': grpc.unary_unary_rpc_method_handler(
                    servicer.Code,
                    request_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByCodeIdRequest.FromString,
                    response_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryCodeResponse.SerializeToString,
            ),
            'Codes': grpc.unary_unary_rpc_method_handler(
                    servicer.Codes,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryCodesResponse.SerializeToString,
            ),
            'CodeHashByContractAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.CodeHashByContractAddress,
                    request_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByContractAddressRequest.FromString,
                    response_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryCodeHashResponse.SerializeToString,
            ),
            'CodeHashByCodeId': grpc.unary_unary_rpc_method_handler(
                    servicer.CodeHashByCodeId,
                    request_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByCodeIdRequest.FromString,
                    response_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryCodeHashResponse.SerializeToString,
            ),
            'LabelByAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.LabelByAddress,
                    request_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByContractAddressRequest.FromString,
                    response_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryContractLabelResponse.SerializeToString,
            ),
            'AddressByLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.AddressByLabel,
                    request_deserializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByLabelRequest.FromString,
                    response_serializer=secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryContractAddressResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'secret.compute.v1beta1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service
    """

    @staticmethod
    def ContractInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secret.compute.v1beta1.Query/ContractInfo',
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByContractAddressRequest.SerializeToString,
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryContractInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ContractsByCodeId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secret.compute.v1beta1.Query/ContractsByCodeId',
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByCodeIdRequest.SerializeToString,
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryContractsByCodeIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QuerySecretContract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secret.compute.v1beta1.Query/QuerySecretContract',
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QuerySecretContractRequest.SerializeToString,
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QuerySecretContractResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Code(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secret.compute.v1beta1.Query/Code',
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByCodeIdRequest.SerializeToString,
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Codes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secret.compute.v1beta1.Query/Codes',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryCodesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CodeHashByContractAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secret.compute.v1beta1.Query/CodeHashByContractAddress',
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByContractAddressRequest.SerializeToString,
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryCodeHashResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CodeHashByCodeId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secret.compute.v1beta1.Query/CodeHashByCodeId',
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByCodeIdRequest.SerializeToString,
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryCodeHashResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LabelByAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secret.compute.v1beta1.Query/LabelByAddress',
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByContractAddressRequest.SerializeToString,
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryContractLabelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddressByLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secret.compute.v1beta1.Query/AddressByLabel',
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryByLabelRequest.SerializeToString,
            secret_dot_compute_dot_v1beta1_dot_query__pb2.QueryContractAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

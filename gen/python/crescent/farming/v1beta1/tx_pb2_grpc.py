# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from crescent.farming.v1beta1 import tx_pb2 as crescent_dot_farming_dot_v1beta1_dot_tx__pb2


class MsgStub(object):
    """Msg defines the farming Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateFixedAmountPlan = channel.unary_unary(
                '/crescent.farming.v1beta1.Msg/CreateFixedAmountPlan',
                request_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgCreateFixedAmountPlan.SerializeToString,
                response_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgCreateFixedAmountPlanResponse.FromString,
                )
        self.CreateRatioPlan = channel.unary_unary(
                '/crescent.farming.v1beta1.Msg/CreateRatioPlan',
                request_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgCreateRatioPlan.SerializeToString,
                response_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgCreateRatioPlanResponse.FromString,
                )
        self.Stake = channel.unary_unary(
                '/crescent.farming.v1beta1.Msg/Stake',
                request_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgStake.SerializeToString,
                response_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgStakeResponse.FromString,
                )
        self.Unstake = channel.unary_unary(
                '/crescent.farming.v1beta1.Msg/Unstake',
                request_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgUnstake.SerializeToString,
                response_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgUnstakeResponse.FromString,
                )
        self.Harvest = channel.unary_unary(
                '/crescent.farming.v1beta1.Msg/Harvest',
                request_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgHarvest.SerializeToString,
                response_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgHarvestResponse.FromString,
                )
        self.RemovePlan = channel.unary_unary(
                '/crescent.farming.v1beta1.Msg/RemovePlan',
                request_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgRemovePlan.SerializeToString,
                response_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgRemovePlanResponse.FromString,
                )
        self.AdvanceEpoch = channel.unary_unary(
                '/crescent.farming.v1beta1.Msg/AdvanceEpoch',
                request_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgAdvanceEpoch.SerializeToString,
                response_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgAdvanceEpochResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the farming Msg service.
    """

    def CreateFixedAmountPlan(self, request, context):
        """CreateFixedAmountPlan defines a method for creating a new fixed amount
        farming plan
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRatioPlan(self, request, context):
        """CreateRatioPlan defines a method for creating a new ratio farming plan
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stake(self, request, context):
        """Stake defines a method for staking coins into the farming plan
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unstake(self, request, context):
        """Unstake defines a method for unstaking coins from the farming plan
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Harvest(self, request, context):
        """Harvest defines a method for claiming farming rewards
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemovePlan(self, request, context):
        """RemovePlan defines a method for removing a terminated plan.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdvanceEpoch(self, request, context):
        """AdvanceEpoch defines a method for advancing epoch by one, just for testing purpose
        and shouldn't be used in real world
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateFixedAmountPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFixedAmountPlan,
                    request_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgCreateFixedAmountPlan.FromString,
                    response_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgCreateFixedAmountPlanResponse.SerializeToString,
            ),
            'CreateRatioPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRatioPlan,
                    request_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgCreateRatioPlan.FromString,
                    response_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgCreateRatioPlanResponse.SerializeToString,
            ),
            'Stake': grpc.unary_unary_rpc_method_handler(
                    servicer.Stake,
                    request_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgStake.FromString,
                    response_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgStakeResponse.SerializeToString,
            ),
            'Unstake': grpc.unary_unary_rpc_method_handler(
                    servicer.Unstake,
                    request_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgUnstake.FromString,
                    response_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgUnstakeResponse.SerializeToString,
            ),
            'Harvest': grpc.unary_unary_rpc_method_handler(
                    servicer.Harvest,
                    request_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgHarvest.FromString,
                    response_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgHarvestResponse.SerializeToString,
            ),
            'RemovePlan': grpc.unary_unary_rpc_method_handler(
                    servicer.RemovePlan,
                    request_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgRemovePlan.FromString,
                    response_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgRemovePlanResponse.SerializeToString,
            ),
            'AdvanceEpoch': grpc.unary_unary_rpc_method_handler(
                    servicer.AdvanceEpoch,
                    request_deserializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgAdvanceEpoch.FromString,
                    response_serializer=crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgAdvanceEpochResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'crescent.farming.v1beta1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the farming Msg service.
    """

    @staticmethod
    def CreateFixedAmountPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/crescent.farming.v1beta1.Msg/CreateFixedAmountPlan',
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgCreateFixedAmountPlan.SerializeToString,
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgCreateFixedAmountPlanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRatioPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/crescent.farming.v1beta1.Msg/CreateRatioPlan',
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgCreateRatioPlan.SerializeToString,
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgCreateRatioPlanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stake(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/crescent.farming.v1beta1.Msg/Stake',
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgStake.SerializeToString,
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgStakeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unstake(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/crescent.farming.v1beta1.Msg/Unstake',
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgUnstake.SerializeToString,
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgUnstakeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Harvest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/crescent.farming.v1beta1.Msg/Harvest',
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgHarvest.SerializeToString,
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgHarvestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemovePlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/crescent.farming.v1beta1.Msg/RemovePlan',
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgRemovePlan.SerializeToString,
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgRemovePlanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdvanceEpoch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/crescent.farming.v1beta1.Msg/AdvanceEpoch',
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgAdvanceEpoch.SerializeToString,
            crescent_dot_farming_dot_v1beta1_dot_tx__pb2.MsgAdvanceEpochResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

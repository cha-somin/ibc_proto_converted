# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from stafihub.rdex import tx_pb2 as stafihub_dot_rdex_dot_tx__pb2


class MsgStub(object):
    """Msg defines the Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePool = channel.unary_unary(
                '/stafihub.stafihub.rdex.Msg/CreatePool',
                request_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgCreatePool.SerializeToString,
                response_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgCreatePoolResponse.FromString,
                )
        self.AddLiquidity = channel.unary_unary(
                '/stafihub.stafihub.rdex.Msg/AddLiquidity',
                request_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgAddLiquidity.SerializeToString,
                response_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgAddLiquidityResponse.FromString,
                )
        self.Swap = channel.unary_unary(
                '/stafihub.stafihub.rdex.Msg/Swap',
                request_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgSwap.SerializeToString,
                response_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgSwapResponse.FromString,
                )
        self.RemoveLiquidity = channel.unary_unary(
                '/stafihub.stafihub.rdex.Msg/RemoveLiquidity',
                request_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgRemoveLiquidity.SerializeToString,
                response_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgRemoveLiquidityResponse.FromString,
                )
        self.ToggleProviderSwitch = channel.unary_unary(
                '/stafihub.stafihub.rdex.Msg/ToggleProviderSwitch',
                request_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgToggleProviderSwitch.SerializeToString,
                response_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgToggleProviderSwitchResponse.FromString,
                )
        self.AddProvider = channel.unary_unary(
                '/stafihub.stafihub.rdex.Msg/AddProvider',
                request_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgAddProvider.SerializeToString,
                response_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgAddProviderResponse.FromString,
                )
        self.RmProvider = channel.unary_unary(
                '/stafihub.stafihub.rdex.Msg/RmProvider',
                request_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgRmProvider.SerializeToString,
                response_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgRmProviderResponse.FromString,
                )
        self.AddPoolCreator = channel.unary_unary(
                '/stafihub.stafihub.rdex.Msg/AddPoolCreator',
                request_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgAddPoolCreator.SerializeToString,
                response_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgAddPoolCreatorResponse.FromString,
                )
        self.RmPoolCreator = channel.unary_unary(
                '/stafihub.stafihub.rdex.Msg/RmPoolCreator',
                request_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgRmPoolCreator.SerializeToString,
                response_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgRmPoolCreatorResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the Msg service.
    """

    def CreatePool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddLiquidity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Swap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveLiquidity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ToggleProviderSwitch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddProvider(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RmProvider(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPoolCreator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RmPoolCreator(self, request, context):
        """this line is used by starport scaffolding # proto/tx/rpc
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePool': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePool,
                    request_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgCreatePool.FromString,
                    response_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgCreatePoolResponse.SerializeToString,
            ),
            'AddLiquidity': grpc.unary_unary_rpc_method_handler(
                    servicer.AddLiquidity,
                    request_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgAddLiquidity.FromString,
                    response_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgAddLiquidityResponse.SerializeToString,
            ),
            'Swap': grpc.unary_unary_rpc_method_handler(
                    servicer.Swap,
                    request_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgSwap.FromString,
                    response_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgSwapResponse.SerializeToString,
            ),
            'RemoveLiquidity': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveLiquidity,
                    request_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgRemoveLiquidity.FromString,
                    response_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgRemoveLiquidityResponse.SerializeToString,
            ),
            'ToggleProviderSwitch': grpc.unary_unary_rpc_method_handler(
                    servicer.ToggleProviderSwitch,
                    request_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgToggleProviderSwitch.FromString,
                    response_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgToggleProviderSwitchResponse.SerializeToString,
            ),
            'AddProvider': grpc.unary_unary_rpc_method_handler(
                    servicer.AddProvider,
                    request_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgAddProvider.FromString,
                    response_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgAddProviderResponse.SerializeToString,
            ),
            'RmProvider': grpc.unary_unary_rpc_method_handler(
                    servicer.RmProvider,
                    request_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgRmProvider.FromString,
                    response_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgRmProviderResponse.SerializeToString,
            ),
            'AddPoolCreator': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPoolCreator,
                    request_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgAddPoolCreator.FromString,
                    response_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgAddPoolCreatorResponse.SerializeToString,
            ),
            'RmPoolCreator': grpc.unary_unary_rpc_method_handler(
                    servicer.RmPoolCreator,
                    request_deserializer=stafihub_dot_rdex_dot_tx__pb2.MsgRmPoolCreator.FromString,
                    response_serializer=stafihub_dot_rdex_dot_tx__pb2.MsgRmPoolCreatorResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stafihub.stafihub.rdex.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the Msg service.
    """

    @staticmethod
    def CreatePool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.rdex.Msg/CreatePool',
            stafihub_dot_rdex_dot_tx__pb2.MsgCreatePool.SerializeToString,
            stafihub_dot_rdex_dot_tx__pb2.MsgCreatePoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddLiquidity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.rdex.Msg/AddLiquidity',
            stafihub_dot_rdex_dot_tx__pb2.MsgAddLiquidity.SerializeToString,
            stafihub_dot_rdex_dot_tx__pb2.MsgAddLiquidityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Swap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.rdex.Msg/Swap',
            stafihub_dot_rdex_dot_tx__pb2.MsgSwap.SerializeToString,
            stafihub_dot_rdex_dot_tx__pb2.MsgSwapResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveLiquidity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.rdex.Msg/RemoveLiquidity',
            stafihub_dot_rdex_dot_tx__pb2.MsgRemoveLiquidity.SerializeToString,
            stafihub_dot_rdex_dot_tx__pb2.MsgRemoveLiquidityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ToggleProviderSwitch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.rdex.Msg/ToggleProviderSwitch',
            stafihub_dot_rdex_dot_tx__pb2.MsgToggleProviderSwitch.SerializeToString,
            stafihub_dot_rdex_dot_tx__pb2.MsgToggleProviderSwitchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddProvider(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.rdex.Msg/AddProvider',
            stafihub_dot_rdex_dot_tx__pb2.MsgAddProvider.SerializeToString,
            stafihub_dot_rdex_dot_tx__pb2.MsgAddProviderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RmProvider(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.rdex.Msg/RmProvider',
            stafihub_dot_rdex_dot_tx__pb2.MsgRmProvider.SerializeToString,
            stafihub_dot_rdex_dot_tx__pb2.MsgRmProviderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPoolCreator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.rdex.Msg/AddPoolCreator',
            stafihub_dot_rdex_dot_tx__pb2.MsgAddPoolCreator.SerializeToString,
            stafihub_dot_rdex_dot_tx__pb2.MsgAddPoolCreatorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RmPoolCreator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.rdex.Msg/RmPoolCreator',
            stafihub_dot_rdex_dot_tx__pb2.MsgRmPoolCreator.SerializeToString,
            stafihub_dot_rdex_dot_tx__pb2.MsgRmPoolCreatorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

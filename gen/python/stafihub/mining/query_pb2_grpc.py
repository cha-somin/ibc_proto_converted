# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from stafihub.mining import query_pb2 as stafihub_dot_mining_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/Params',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.StakePoolInfo = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/StakePoolInfo',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakePoolInfoRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakePoolInfoResponse.FromString,
                )
        self.StakeItemList = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/StakeItemList',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakeItemListRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakeItemListResponse.FromString,
                )
        self.StakeReward = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/StakeReward',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRewardRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRewardResponse.FromString,
                )
        self.StakeRecordCount = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/StakeRecordCount',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRecordCountRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRecordCountResponse.FromString,
                )
        self.StakeRecord = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/StakeRecord',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRecordRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRecordResponse.FromString,
                )
        self.StakeRecordList = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/StakeRecordList',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRecordListRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRecordListResponse.FromString,
                )
        self.StakePoolList = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/StakePoolList',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakePoolListRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakePoolListResponse.FromString,
                )
        self.MiningProviderList = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/MiningProviderList',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryMiningProviderListRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryMiningProviderListResponse.FromString,
                )
        self.RewardTokenList = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/RewardTokenList',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryRewardTokenListRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryRewardTokenListResponse.FromString,
                )
        self.MaxRewardPoolNumber = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/MaxRewardPoolNumber',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryMaxRewardPoolNumberRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryMaxRewardPoolNumberResponse.FromString,
                )
        self.MaxStakeItemNumber = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/MaxStakeItemNumber',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryMaxStakeItemNumberRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryMaxStakeItemNumberResponse.FromString,
                )
        self.ProviderSwitch = channel.unary_unary(
                '/stafihub.stafihub.mining.Query/ProviderSwitch',
                request_serializer=stafihub_dot_mining_dot_query__pb2.QueryProviderSwitchRequest.SerializeToString,
                response_deserializer=stafihub_dot_mining_dot_query__pb2.QueryProviderSwitchResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Params(self, request, context):
        """Parameters queries the parameters of the module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StakePoolInfo(self, request, context):
        """Queries a list of StakePoolInfo items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StakeItemList(self, request, context):
        """Queries a list of StakeItemList items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StakeReward(self, request, context):
        """Queries a list of StakeReward items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StakeRecordCount(self, request, context):
        """Queries a list of StakeRecordCount items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StakeRecord(self, request, context):
        """Queries a list of StakeRecord items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StakeRecordList(self, request, context):
        """Queries a list of StakeRecordList items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StakePoolList(self, request, context):
        """Queries a list of StakePoolList items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MiningProviderList(self, request, context):
        """Queries a list of MiningProviderList items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RewardTokenList(self, request, context):
        """Queries a list of RewardTokenList items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MaxRewardPoolNumber(self, request, context):
        """Queries a list of MaxRewardPoolNumber items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MaxStakeItemNumber(self, request, context):
        """Queries a list of MaxStakeItemNumber items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProviderSwitch(self, request, context):
        """Queries a list of ProviderSwitch items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'StakePoolInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.StakePoolInfo,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakePoolInfoRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakePoolInfoResponse.SerializeToString,
            ),
            'StakeItemList': grpc.unary_unary_rpc_method_handler(
                    servicer.StakeItemList,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakeItemListRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakeItemListResponse.SerializeToString,
            ),
            'StakeReward': grpc.unary_unary_rpc_method_handler(
                    servicer.StakeReward,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRewardRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRewardResponse.SerializeToString,
            ),
            'StakeRecordCount': grpc.unary_unary_rpc_method_handler(
                    servicer.StakeRecordCount,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRecordCountRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRecordCountResponse.SerializeToString,
            ),
            'StakeRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.StakeRecord,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRecordRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRecordResponse.SerializeToString,
            ),
            'StakeRecordList': grpc.unary_unary_rpc_method_handler(
                    servicer.StakeRecordList,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRecordListRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakeRecordListResponse.SerializeToString,
            ),
            'StakePoolList': grpc.unary_unary_rpc_method_handler(
                    servicer.StakePoolList,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryStakePoolListRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryStakePoolListResponse.SerializeToString,
            ),
            'MiningProviderList': grpc.unary_unary_rpc_method_handler(
                    servicer.MiningProviderList,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryMiningProviderListRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryMiningProviderListResponse.SerializeToString,
            ),
            'RewardTokenList': grpc.unary_unary_rpc_method_handler(
                    servicer.RewardTokenList,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryRewardTokenListRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryRewardTokenListResponse.SerializeToString,
            ),
            'MaxRewardPoolNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.MaxRewardPoolNumber,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryMaxRewardPoolNumberRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryMaxRewardPoolNumberResponse.SerializeToString,
            ),
            'MaxStakeItemNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.MaxStakeItemNumber,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryMaxStakeItemNumberRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryMaxStakeItemNumberResponse.SerializeToString,
            ),
            'ProviderSwitch': grpc.unary_unary_rpc_method_handler(
                    servicer.ProviderSwitch,
                    request_deserializer=stafihub_dot_mining_dot_query__pb2.QueryProviderSwitchRequest.FromString,
                    response_serializer=stafihub_dot_mining_dot_query__pb2.QueryProviderSwitchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stafihub.stafihub.mining.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/Params',
            stafihub_dot_mining_dot_query__pb2.QueryParamsRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StakePoolInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/StakePoolInfo',
            stafihub_dot_mining_dot_query__pb2.QueryStakePoolInfoRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryStakePoolInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StakeItemList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/StakeItemList',
            stafihub_dot_mining_dot_query__pb2.QueryStakeItemListRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryStakeItemListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StakeReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/StakeReward',
            stafihub_dot_mining_dot_query__pb2.QueryStakeRewardRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryStakeRewardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StakeRecordCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/StakeRecordCount',
            stafihub_dot_mining_dot_query__pb2.QueryStakeRecordCountRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryStakeRecordCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StakeRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/StakeRecord',
            stafihub_dot_mining_dot_query__pb2.QueryStakeRecordRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryStakeRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StakeRecordList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/StakeRecordList',
            stafihub_dot_mining_dot_query__pb2.QueryStakeRecordListRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryStakeRecordListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StakePoolList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/StakePoolList',
            stafihub_dot_mining_dot_query__pb2.QueryStakePoolListRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryStakePoolListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MiningProviderList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/MiningProviderList',
            stafihub_dot_mining_dot_query__pb2.QueryMiningProviderListRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryMiningProviderListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RewardTokenList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/RewardTokenList',
            stafihub_dot_mining_dot_query__pb2.QueryRewardTokenListRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryRewardTokenListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MaxRewardPoolNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/MaxRewardPoolNumber',
            stafihub_dot_mining_dot_query__pb2.QueryMaxRewardPoolNumberRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryMaxRewardPoolNumberResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MaxStakeItemNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/MaxStakeItemNumber',
            stafihub_dot_mining_dot_query__pb2.QueryMaxStakeItemNumberRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryMaxStakeItemNumberResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProviderSwitch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.mining.Query/ProviderSwitch',
            stafihub_dot_mining_dot_query__pb2.QueryProviderSwitchRequest.SerializeToString,
            stafihub_dot_mining_dot_query__pb2.QueryProviderSwitchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

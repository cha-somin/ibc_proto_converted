# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from stafihub.bridge import tx_pb2 as stafihub_dot_bridge_dot_tx__pb2


class MsgStub(object):
    """Msg defines the Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetResourceidToDenom = channel.unary_unary(
                '/stafihub.stafihub.bridge.Msg/SetResourceidToDenom',
                request_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgSetResourceidToDenom.SerializeToString,
                response_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgSetResourceidToDenomResponse.FromString,
                )
        self.Deposit = channel.unary_unary(
                '/stafihub.stafihub.bridge.Msg/Deposit',
                request_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgDeposit.SerializeToString,
                response_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgDepositResponse.FromString,
                )
        self.AddChainId = channel.unary_unary(
                '/stafihub.stafihub.bridge.Msg/AddChainId',
                request_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgAddChainId.SerializeToString,
                response_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgAddChainIdResponse.FromString,
                )
        self.VoteProposal = channel.unary_unary(
                '/stafihub.stafihub.bridge.Msg/VoteProposal',
                request_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgVoteProposal.SerializeToString,
                response_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgVoteProposalResponse.FromString,
                )
        self.RmChainId = channel.unary_unary(
                '/stafihub.stafihub.bridge.Msg/RmChainId',
                request_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgRmChainId.SerializeToString,
                response_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgRmChainIdResponse.FromString,
                )
        self.SetRelayFeeReceiver = channel.unary_unary(
                '/stafihub.stafihub.bridge.Msg/SetRelayFeeReceiver',
                request_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgSetRelayFeeReceiver.SerializeToString,
                response_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgSetRelayFeeReceiverResponse.FromString,
                )
        self.SetRelayFee = channel.unary_unary(
                '/stafihub.stafihub.bridge.Msg/SetRelayFee',
                request_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgSetRelayFee.SerializeToString,
                response_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgSetRelayFeeResponse.FromString,
                )
        self.AddBannedDenom = channel.unary_unary(
                '/stafihub.stafihub.bridge.Msg/AddBannedDenom',
                request_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgAddBannedDenom.SerializeToString,
                response_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgAddBannedDenomResponse.FromString,
                )
        self.RmBannedDenom = channel.unary_unary(
                '/stafihub.stafihub.bridge.Msg/RmBannedDenom',
                request_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgRmBannedDenom.SerializeToString,
                response_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgRmBannedDenomResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the Msg service.
    """

    def SetResourceidToDenom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Deposit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddChainId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoteProposal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RmChainId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRelayFeeReceiver(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRelayFee(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddBannedDenom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RmBannedDenom(self, request, context):
        """this line is used by starport scaffolding # proto/tx/rpc
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetResourceidToDenom': grpc.unary_unary_rpc_method_handler(
                    servicer.SetResourceidToDenom,
                    request_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgSetResourceidToDenom.FromString,
                    response_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgSetResourceidToDenomResponse.SerializeToString,
            ),
            'Deposit': grpc.unary_unary_rpc_method_handler(
                    servicer.Deposit,
                    request_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgDeposit.FromString,
                    response_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgDepositResponse.SerializeToString,
            ),
            'AddChainId': grpc.unary_unary_rpc_method_handler(
                    servicer.AddChainId,
                    request_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgAddChainId.FromString,
                    response_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgAddChainIdResponse.SerializeToString,
            ),
            'VoteProposal': grpc.unary_unary_rpc_method_handler(
                    servicer.VoteProposal,
                    request_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgVoteProposal.FromString,
                    response_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgVoteProposalResponse.SerializeToString,
            ),
            'RmChainId': grpc.unary_unary_rpc_method_handler(
                    servicer.RmChainId,
                    request_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgRmChainId.FromString,
                    response_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgRmChainIdResponse.SerializeToString,
            ),
            'SetRelayFeeReceiver': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRelayFeeReceiver,
                    request_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgSetRelayFeeReceiver.FromString,
                    response_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgSetRelayFeeReceiverResponse.SerializeToString,
            ),
            'SetRelayFee': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRelayFee,
                    request_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgSetRelayFee.FromString,
                    response_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgSetRelayFeeResponse.SerializeToString,
            ),
            'AddBannedDenom': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBannedDenom,
                    request_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgAddBannedDenom.FromString,
                    response_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgAddBannedDenomResponse.SerializeToString,
            ),
            'RmBannedDenom': grpc.unary_unary_rpc_method_handler(
                    servicer.RmBannedDenom,
                    request_deserializer=stafihub_dot_bridge_dot_tx__pb2.MsgRmBannedDenom.FromString,
                    response_serializer=stafihub_dot_bridge_dot_tx__pb2.MsgRmBannedDenomResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stafihub.stafihub.bridge.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the Msg service.
    """

    @staticmethod
    def SetResourceidToDenom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.bridge.Msg/SetResourceidToDenom',
            stafihub_dot_bridge_dot_tx__pb2.MsgSetResourceidToDenom.SerializeToString,
            stafihub_dot_bridge_dot_tx__pb2.MsgSetResourceidToDenomResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Deposit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.bridge.Msg/Deposit',
            stafihub_dot_bridge_dot_tx__pb2.MsgDeposit.SerializeToString,
            stafihub_dot_bridge_dot_tx__pb2.MsgDepositResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddChainId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.bridge.Msg/AddChainId',
            stafihub_dot_bridge_dot_tx__pb2.MsgAddChainId.SerializeToString,
            stafihub_dot_bridge_dot_tx__pb2.MsgAddChainIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VoteProposal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.bridge.Msg/VoteProposal',
            stafihub_dot_bridge_dot_tx__pb2.MsgVoteProposal.SerializeToString,
            stafihub_dot_bridge_dot_tx__pb2.MsgVoteProposalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RmChainId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.bridge.Msg/RmChainId',
            stafihub_dot_bridge_dot_tx__pb2.MsgRmChainId.SerializeToString,
            stafihub_dot_bridge_dot_tx__pb2.MsgRmChainIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRelayFeeReceiver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.bridge.Msg/SetRelayFeeReceiver',
            stafihub_dot_bridge_dot_tx__pb2.MsgSetRelayFeeReceiver.SerializeToString,
            stafihub_dot_bridge_dot_tx__pb2.MsgSetRelayFeeReceiverResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRelayFee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.bridge.Msg/SetRelayFee',
            stafihub_dot_bridge_dot_tx__pb2.MsgSetRelayFee.SerializeToString,
            stafihub_dot_bridge_dot_tx__pb2.MsgSetRelayFeeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddBannedDenom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.bridge.Msg/AddBannedDenom',
            stafihub_dot_bridge_dot_tx__pb2.MsgAddBannedDenom.SerializeToString,
            stafihub_dot_bridge_dot_tx__pb2.MsgAddBannedDenomResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RmBannedDenom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.bridge.Msg/RmBannedDenom',
            stafihub_dot_bridge_dot_tx__pb2.MsgRmBannedDenom.SerializeToString,
            stafihub_dot_bridge_dot_tx__pb2.MsgRmBannedDenomResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

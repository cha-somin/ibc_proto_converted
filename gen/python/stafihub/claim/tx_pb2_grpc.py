# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from stafihub.claim import tx_pb2 as stafihub_dot_claim_dot_tx__pb2


class MsgStub(object):
    """Msg defines the Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetMerkleRoot = channel.unary_unary(
                '/stafihub.stafihub.claim.Msg/SetMerkleRoot',
                request_serializer=stafihub_dot_claim_dot_tx__pb2.MsgSetMerkleRoot.SerializeToString,
                response_deserializer=stafihub_dot_claim_dot_tx__pb2.MsgSetMerkleRootResponse.FromString,
                )
        self.Claim = channel.unary_unary(
                '/stafihub.stafihub.claim.Msg/Claim',
                request_serializer=stafihub_dot_claim_dot_tx__pb2.MsgClaim.SerializeToString,
                response_deserializer=stafihub_dot_claim_dot_tx__pb2.MsgClaimResponse.FromString,
                )
        self.ToggleClaimSwitch = channel.unary_unary(
                '/stafihub.stafihub.claim.Msg/ToggleClaimSwitch',
                request_serializer=stafihub_dot_claim_dot_tx__pb2.MsgToggleClaimSwitch.SerializeToString,
                response_deserializer=stafihub_dot_claim_dot_tx__pb2.MsgToggleClaimSwitchResponse.FromString,
                )
        self.ProvideToken = channel.unary_unary(
                '/stafihub.stafihub.claim.Msg/ProvideToken',
                request_serializer=stafihub_dot_claim_dot_tx__pb2.MsgProvideToken.SerializeToString,
                response_deserializer=stafihub_dot_claim_dot_tx__pb2.MsgProvideTokenResponse.FromString,
                )
        self.WithdrawToken = channel.unary_unary(
                '/stafihub.stafihub.claim.Msg/WithdrawToken',
                request_serializer=stafihub_dot_claim_dot_tx__pb2.MsgWithdrawToken.SerializeToString,
                response_deserializer=stafihub_dot_claim_dot_tx__pb2.MsgWithdrawTokenResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the Msg service.
    """

    def SetMerkleRoot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Claim(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ToggleClaimSwitch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProvideToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WithdrawToken(self, request, context):
        """this line is used by starport scaffolding # proto/tx/rpc
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetMerkleRoot': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMerkleRoot,
                    request_deserializer=stafihub_dot_claim_dot_tx__pb2.MsgSetMerkleRoot.FromString,
                    response_serializer=stafihub_dot_claim_dot_tx__pb2.MsgSetMerkleRootResponse.SerializeToString,
            ),
            'Claim': grpc.unary_unary_rpc_method_handler(
                    servicer.Claim,
                    request_deserializer=stafihub_dot_claim_dot_tx__pb2.MsgClaim.FromString,
                    response_serializer=stafihub_dot_claim_dot_tx__pb2.MsgClaimResponse.SerializeToString,
            ),
            'ToggleClaimSwitch': grpc.unary_unary_rpc_method_handler(
                    servicer.ToggleClaimSwitch,
                    request_deserializer=stafihub_dot_claim_dot_tx__pb2.MsgToggleClaimSwitch.FromString,
                    response_serializer=stafihub_dot_claim_dot_tx__pb2.MsgToggleClaimSwitchResponse.SerializeToString,
            ),
            'ProvideToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ProvideToken,
                    request_deserializer=stafihub_dot_claim_dot_tx__pb2.MsgProvideToken.FromString,
                    response_serializer=stafihub_dot_claim_dot_tx__pb2.MsgProvideTokenResponse.SerializeToString,
            ),
            'WithdrawToken': grpc.unary_unary_rpc_method_handler(
                    servicer.WithdrawToken,
                    request_deserializer=stafihub_dot_claim_dot_tx__pb2.MsgWithdrawToken.FromString,
                    response_serializer=stafihub_dot_claim_dot_tx__pb2.MsgWithdrawTokenResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stafihub.stafihub.claim.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the Msg service.
    """

    @staticmethod
    def SetMerkleRoot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.claim.Msg/SetMerkleRoot',
            stafihub_dot_claim_dot_tx__pb2.MsgSetMerkleRoot.SerializeToString,
            stafihub_dot_claim_dot_tx__pb2.MsgSetMerkleRootResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Claim(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.claim.Msg/Claim',
            stafihub_dot_claim_dot_tx__pb2.MsgClaim.SerializeToString,
            stafihub_dot_claim_dot_tx__pb2.MsgClaimResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ToggleClaimSwitch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.claim.Msg/ToggleClaimSwitch',
            stafihub_dot_claim_dot_tx__pb2.MsgToggleClaimSwitch.SerializeToString,
            stafihub_dot_claim_dot_tx__pb2.MsgToggleClaimSwitchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProvideToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.claim.Msg/ProvideToken',
            stafihub_dot_claim_dot_tx__pb2.MsgProvideToken.SerializeToString,
            stafihub_dot_claim_dot_tx__pb2.MsgProvideTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WithdrawToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stafihub.stafihub.claim.Msg/WithdrawToken',
            stafihub_dot_claim_dot_tx__pb2.MsgWithdrawToken.SerializeToString,
            stafihub_dot_claim_dot_tx__pb2.MsgWithdrawTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: axelar/multisig/v1beta1/types.proto
# Protobuf Python Version: 4.25.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2
from cosmos_proto import cosmos_pb2 as cosmos__proto_dot_cosmos__pb2
from axelar.utils.v1beta1 import threshold_pb2 as axelar_dot_utils_dot_v1beta1_dot_threshold__pb2
from axelar.snapshot.exported.v1beta1 import types_pb2 as axelar_dot_snapshot_dot_exported_dot_v1beta1_dot_types__pb2
from axelar.multisig.exported.v1beta1 import types_pb2 as axelar_dot_multisig_dot_exported_dot_v1beta1_dot_types__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n#axelar/multisig/v1beta1/types.proto\x12\x17\x61xelar.multisig.v1beta1\x1a\x19google/protobuf/any.proto\x1a\x14gogoproto/gogo.proto\x1a\x19\x63osmos_proto/cosmos.proto\x1a$axelar/utils/v1beta1/threshold.proto\x1a,axelar/snapshot/exported/v1beta1/types.proto\x1a,axelar/multisig/exported/v1beta1/types.proto\"\x94\x04\n\x03Key\x12X\n\x02id\x18\x01 \x01(\tBH\xe2\xde\x1f\x02ID\xfa\xde\x1f>github.com/axelarnetwork/axelar-core/x/multisig/exported.KeyIDR\x02id\x12L\n\x08snapshot\x18\x02 \x01(\x0b\x32*.axelar.snapshot.exported.v1beta1.SnapshotB\x04\xc8\xde\x1f\x00R\x08snapshot\x12\x8c\x01\n\x08pub_keys\x18\x03 \x03(\x0b\x32).axelar.multisig.v1beta1.Key.PubKeysEntryBF\x8a\xdf\x1f\x42github.com/axelarnetwork/axelar-core/x/multisig/exported.PublicKeyR\x07pubKeys\x12R\n\x11signing_threshold\x18\x04 \x01(\x0b\x32\x1f.axelar.utils.v1beta1.ThresholdB\x04\xc8\xde\x1f\x00R\x10signingThreshold\x12@\n\x05state\x18\x05 \x01(\x0e\x32*.axelar.multisig.exported.v1beta1.KeyStateR\x05state\x1a:\n\x0cPubKeysEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\x0cR\x05value:\x02\x38\x01:\x04\x98\xa1\x1f\x01\"\xfb\x03\n\rKeygenSession\x12\x34\n\x03key\x18\x01 \x01(\x0b\x32\x1c.axelar.multisig.v1beta1.KeyB\x04\xc8\xde\x1f\x00R\x03key\x12\x45\n\x05state\x18\x02 \x01(\x0e\x32/.axelar.multisig.exported.v1beta1.MultisigStateR\x05state\x12P\n\x10keygen_threshold\x18\x03 \x01(\x0b\x32\x1f.axelar.utils.v1beta1.ThresholdB\x04\xc8\xde\x1f\x00R\x0fkeygenThreshold\x12\x1d\n\nexpires_at\x18\x04 \x01(\x03R\texpiresAt\x12!\n\x0c\x63ompleted_at\x18\x05 \x01(\x03R\x0b\x63ompletedAt\x12k\n\x13is_pub_key_received\x18\x06 \x03(\x0b\x32<.axelar.multisig.v1beta1.KeygenSession.IsPubKeyReceivedEntryR\x10isPubKeyReceived\x12!\n\x0cgrace_period\x18\x07 \x01(\x03R\x0bgracePeriod\x1a\x43\n\x15IsPubKeyReceivedEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\x08R\x05value:\x02\x38\x01:\x04\x98\xa1\x1f\x01\"\xe3\x02\n\x08MultiSig\x12\x62\n\x06key_id\x18\x01 \x01(\tBK\xe2\xde\x1f\x05KeyID\xfa\xde\x1f>github.com/axelarnetwork/axelar-core/x/multisig/exported.KeyIDR\x05keyId\x12\x64\n\x0cpayload_hash\x18\x02 \x01(\x0c\x42\x41\xfa\xde\x1f=github.com/axelarnetwork/axelar-core/x/multisig/exported.HashR\x0bpayloadHash\x12N\n\x04sigs\x18\x03 \x03(\x0b\x32+.axelar.multisig.v1beta1.MultiSig.SigsEntryB\r\x8a\xdf\x1f\tSignatureR\x04sigs\x1a\x37\n\tSigsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\x0cR\x05value:\x02\x38\x01:\x04\x98\xa1\x1f\x01\"\xd9\x03\n\x0eSigningSession\x12\x16\n\x02id\x18\x01 \x01(\x04\x42\x06\xe2\xde\x1f\x02IDR\x02id\x12\x44\n\tmulti_sig\x18\x02 \x01(\x0b\x32!.axelar.multisig.v1beta1.MultiSigB\x04\xc8\xde\x1f\x00R\x08multiSig\x12\x45\n\x05state\x18\x03 \x01(\x0e\x32/.axelar.multisig.exported.v1beta1.MultisigStateR\x05state\x12\x34\n\x03key\x18\x04 \x01(\x0b\x32\x1c.axelar.multisig.v1beta1.KeyB\x04\xc8\xde\x1f\x00R\x03key\x12\x1d\n\nexpires_at\x18\x05 \x01(\x03R\texpiresAt\x12!\n\x0c\x63ompleted_at\x18\x06 \x01(\x03R\x0b\x63ompletedAt\x12!\n\x0cgrace_period\x18\x07 \x01(\x03R\x0bgracePeriod\x12\x16\n\x06module\x18\x08 \x01(\tR\x06module\x12i\n\x0fmodule_metadata\x18\t \x01(\x0b\x32\x14.google.protobuf.AnyB*\xca\xb4-&github.com/cosmos/codec/ProtoMarshalerR\x0emoduleMetadata:\x04\x98\xa1\x1f\x01\"\xdf\x01\n\x08KeyEpoch\x12\x14\n\x05\x65poch\x18\x01 \x01(\x04R\x05\x65poch\x12Y\n\x05\x63hain\x18\x02 \x01(\tBC\xfa\xde\x1f?github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainNameR\x05\x63hain\x12\x62\n\x06key_id\x18\x03 \x01(\tBK\xe2\xde\x1f\x05KeyID\xfa\xde\x1f>github.com/axelarnetwork/axelar-core/x/multisig/exported.KeyIDR\x05keyIdB\xdc\x01\n\x1b\x63om.axelar.multisig.v1beta1B\nTypesProtoZ5github.com/axelarnetwork/axelar-core/x/multisig/types\xa2\x02\x03\x41MX\xaa\x02\x17\x41xelar.Multisig.V1beta1\xca\x02\x17\x41xelar\\Multisig\\V1beta1\xe2\x02#Axelar\\Multisig\\V1beta1\\GPBMetadata\xea\x02\x19\x41xelar::Multisig::V1beta1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'axelar.multisig.v1beta1.types_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\033com.axelar.multisig.v1beta1B\nTypesProtoZ5github.com/axelarnetwork/axelar-core/x/multisig/types\242\002\003AMX\252\002\027Axelar.Multisig.V1beta1\312\002\027Axelar\\Multisig\\V1beta1\342\002#Axelar\\Multisig\\V1beta1\\GPBMetadata\352\002\031Axelar::Multisig::V1beta1'
  _globals['_KEY_PUBKEYSENTRY']._options = None
  _globals['_KEY_PUBKEYSENTRY']._serialized_options = b'8\001'
  _globals['_KEY'].fields_by_name['id']._options = None
  _globals['_KEY'].fields_by_name['id']._serialized_options = b'\342\336\037\002ID\372\336\037>github.com/axelarnetwork/axelar-core/x/multisig/exported.KeyID'
  _globals['_KEY'].fields_by_name['snapshot']._options = None
  _globals['_KEY'].fields_by_name['snapshot']._serialized_options = b'\310\336\037\000'
  _globals['_KEY'].fields_by_name['pub_keys']._options = None
  _globals['_KEY'].fields_by_name['pub_keys']._serialized_options = b'\212\337\037Bgithub.com/axelarnetwork/axelar-core/x/multisig/exported.PublicKey'
  _globals['_KEY'].fields_by_name['signing_threshold']._options = None
  _globals['_KEY'].fields_by_name['signing_threshold']._serialized_options = b'\310\336\037\000'
  _globals['_KEY']._options = None
  _globals['_KEY']._serialized_options = b'\230\241\037\001'
  _globals['_KEYGENSESSION_ISPUBKEYRECEIVEDENTRY']._options = None
  _globals['_KEYGENSESSION_ISPUBKEYRECEIVEDENTRY']._serialized_options = b'8\001'
  _globals['_KEYGENSESSION'].fields_by_name['key']._options = None
  _globals['_KEYGENSESSION'].fields_by_name['key']._serialized_options = b'\310\336\037\000'
  _globals['_KEYGENSESSION'].fields_by_name['keygen_threshold']._options = None
  _globals['_KEYGENSESSION'].fields_by_name['keygen_threshold']._serialized_options = b'\310\336\037\000'
  _globals['_KEYGENSESSION']._options = None
  _globals['_KEYGENSESSION']._serialized_options = b'\230\241\037\001'
  _globals['_MULTISIG_SIGSENTRY']._options = None
  _globals['_MULTISIG_SIGSENTRY']._serialized_options = b'8\001'
  _globals['_MULTISIG'].fields_by_name['key_id']._options = None
  _globals['_MULTISIG'].fields_by_name['key_id']._serialized_options = b'\342\336\037\005KeyID\372\336\037>github.com/axelarnetwork/axelar-core/x/multisig/exported.KeyID'
  _globals['_MULTISIG'].fields_by_name['payload_hash']._options = None
  _globals['_MULTISIG'].fields_by_name['payload_hash']._serialized_options = b'\372\336\037=github.com/axelarnetwork/axelar-core/x/multisig/exported.Hash'
  _globals['_MULTISIG'].fields_by_name['sigs']._options = None
  _globals['_MULTISIG'].fields_by_name['sigs']._serialized_options = b'\212\337\037\tSignature'
  _globals['_MULTISIG']._options = None
  _globals['_MULTISIG']._serialized_options = b'\230\241\037\001'
  _globals['_SIGNINGSESSION'].fields_by_name['id']._options = None
  _globals['_SIGNINGSESSION'].fields_by_name['id']._serialized_options = b'\342\336\037\002ID'
  _globals['_SIGNINGSESSION'].fields_by_name['multi_sig']._options = None
  _globals['_SIGNINGSESSION'].fields_by_name['multi_sig']._serialized_options = b'\310\336\037\000'
  _globals['_SIGNINGSESSION'].fields_by_name['key']._options = None
  _globals['_SIGNINGSESSION'].fields_by_name['key']._serialized_options = b'\310\336\037\000'
  _globals['_SIGNINGSESSION'].fields_by_name['module_metadata']._options = None
  _globals['_SIGNINGSESSION'].fields_by_name['module_metadata']._serialized_options = b'\312\264-&github.com/cosmos/codec/ProtoMarshaler'
  _globals['_SIGNINGSESSION']._options = None
  _globals['_SIGNINGSESSION']._serialized_options = b'\230\241\037\001'
  _globals['_KEYEPOCH'].fields_by_name['chain']._options = None
  _globals['_KEYEPOCH'].fields_by_name['chain']._serialized_options = b'\372\336\037?github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName'
  _globals['_KEYEPOCH'].fields_by_name['key_id']._options = None
  _globals['_KEYEPOCH'].fields_by_name['key_id']._serialized_options = b'\342\336\037\005KeyID\372\336\037>github.com/axelarnetwork/axelar-core/x/multisig/exported.KeyID'
  _globals['_KEY']._serialized_start=271
  _globals['_KEY']._serialized_end=803
  _globals['_KEY_PUBKEYSENTRY']._serialized_start=739
  _globals['_KEY_PUBKEYSENTRY']._serialized_end=797
  _globals['_KEYGENSESSION']._serialized_start=806
  _globals['_KEYGENSESSION']._serialized_end=1313
  _globals['_KEYGENSESSION_ISPUBKEYRECEIVEDENTRY']._serialized_start=1240
  _globals['_KEYGENSESSION_ISPUBKEYRECEIVEDENTRY']._serialized_end=1307
  _globals['_MULTISIG']._serialized_start=1316
  _globals['_MULTISIG']._serialized_end=1671
  _globals['_MULTISIG_SIGSENTRY']._serialized_start=1610
  _globals['_MULTISIG_SIGSENTRY']._serialized_end=1665
  _globals['_SIGNINGSESSION']._serialized_start=1674
  _globals['_SIGNINGSESSION']._serialized_end=2147
  _globals['_KEYEPOCH']._serialized_start=2150
  _globals['_KEYEPOCH']._serialized_end=2373
# @@protoc_insertion_point(module_scope)

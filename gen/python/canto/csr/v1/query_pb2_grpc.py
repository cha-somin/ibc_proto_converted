# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from canto.csr.v1 import query_pb2 as canto_dot_csr_dot_v1_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/canto.csr.v1.Query/Params',
                request_serializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.CSRs = channel.unary_unary(
                '/canto.csr.v1.Query/CSRs',
                request_serializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRsRequest.SerializeToString,
                response_deserializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRsResponse.FromString,
                )
        self.CSRByNFT = channel.unary_unary(
                '/canto.csr.v1.Query/CSRByNFT',
                request_serializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRByNFTRequest.SerializeToString,
                response_deserializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRByNFTResponse.FromString,
                )
        self.CSRByContract = channel.unary_unary(
                '/canto.csr.v1.Query/CSRByContract',
                request_serializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRByContractRequest.SerializeToString,
                response_deserializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRByContractResponse.FromString,
                )
        self.Turnstile = channel.unary_unary(
                '/canto.csr.v1.Query/Turnstile',
                request_serializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryTurnstileRequest.SerializeToString,
                response_deserializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryTurnstileResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Params(self, request, context):
        """Parameters queries the parameters of the module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CSRs(self, request, context):
        """query all registered CSRs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CSRByNFT(self, request, context):
        """query a specific CSR by the nftId 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CSRByContract(self, request, context):
        """query a CSR by smart contract address
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Turnstile(self, request, context):
        """query the turnstile address
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'CSRs': grpc.unary_unary_rpc_method_handler(
                    servicer.CSRs,
                    request_deserializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRsRequest.FromString,
                    response_serializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRsResponse.SerializeToString,
            ),
            'CSRByNFT': grpc.unary_unary_rpc_method_handler(
                    servicer.CSRByNFT,
                    request_deserializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRByNFTRequest.FromString,
                    response_serializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRByNFTResponse.SerializeToString,
            ),
            'CSRByContract': grpc.unary_unary_rpc_method_handler(
                    servicer.CSRByContract,
                    request_deserializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRByContractRequest.FromString,
                    response_serializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRByContractResponse.SerializeToString,
            ),
            'Turnstile': grpc.unary_unary_rpc_method_handler(
                    servicer.Turnstile,
                    request_deserializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryTurnstileRequest.FromString,
                    response_serializer=canto_dot_csr_dot_v1_dot_query__pb2.QueryTurnstileResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'canto.csr.v1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/canto.csr.v1.Query/Params',
            canto_dot_csr_dot_v1_dot_query__pb2.QueryParamsRequest.SerializeToString,
            canto_dot_csr_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CSRs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/canto.csr.v1.Query/CSRs',
            canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRsRequest.SerializeToString,
            canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CSRByNFT(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/canto.csr.v1.Query/CSRByNFT',
            canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRByNFTRequest.SerializeToString,
            canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRByNFTResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CSRByContract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/canto.csr.v1.Query/CSRByContract',
            canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRByContractRequest.SerializeToString,
            canto_dot_csr_dot_v1_dot_query__pb2.QueryCSRByContractResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Turnstile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/canto.csr.v1.Query/Turnstile',
            canto_dot_csr_dot_v1_dot_query__pb2.QueryTurnstileRequest.SerializeToString,
            canto_dot_csr_dot_v1_dot_query__pb2.QueryTurnstileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from umee.uibc.v1 import query_pb2 as umee_dot_uibc_dot_v1_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/umee.uibc.v1.Query/Params',
                request_serializer=umee_dot_uibc_dot_v1_dot_query__pb2.QueryParams.SerializeToString,
                response_deserializer=umee_dot_uibc_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.Outflows = channel.unary_unary(
                '/umee.uibc.v1.Query/Outflows',
                request_serializer=umee_dot_uibc_dot_v1_dot_query__pb2.QueryOutflows.SerializeToString,
                response_deserializer=umee_dot_uibc_dot_v1_dot_query__pb2.QueryOutflowsResponse.FromString,
                )
        self.AllOutflows = channel.unary_unary(
                '/umee.uibc.v1.Query/AllOutflows',
                request_serializer=umee_dot_uibc_dot_v1_dot_query__pb2.QueryAllOutflows.SerializeToString,
                response_deserializer=umee_dot_uibc_dot_v1_dot_query__pb2.QueryAllOutflowsResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Params(self, request, context):
        """Params queries the parameters of the x/uibc module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Outflows(self, request, context):
        """Outflow returns IBC denom outflows in the current quota period.
        If denom is not specified, returns sum of all registered outflows.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllOutflows(self, request, context):
        """AllOutflow returns outflows for each denom in the current quota period.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=umee_dot_uibc_dot_v1_dot_query__pb2.QueryParams.FromString,
                    response_serializer=umee_dot_uibc_dot_v1_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'Outflows': grpc.unary_unary_rpc_method_handler(
                    servicer.Outflows,
                    request_deserializer=umee_dot_uibc_dot_v1_dot_query__pb2.QueryOutflows.FromString,
                    response_serializer=umee_dot_uibc_dot_v1_dot_query__pb2.QueryOutflowsResponse.SerializeToString,
            ),
            'AllOutflows': grpc.unary_unary_rpc_method_handler(
                    servicer.AllOutflows,
                    request_deserializer=umee_dot_uibc_dot_v1_dot_query__pb2.QueryAllOutflows.FromString,
                    response_serializer=umee_dot_uibc_dot_v1_dot_query__pb2.QueryAllOutflowsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'umee.uibc.v1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/umee.uibc.v1.Query/Params',
            umee_dot_uibc_dot_v1_dot_query__pb2.QueryParams.SerializeToString,
            umee_dot_uibc_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Outflows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/umee.uibc.v1.Query/Outflows',
            umee_dot_uibc_dot_v1_dot_query__pb2.QueryOutflows.SerializeToString,
            umee_dot_uibc_dot_v1_dot_query__pb2.QueryOutflowsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AllOutflows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/umee.uibc.v1.Query/AllOutflows',
            umee_dot_uibc_dot_v1_dot_query__pb2.QueryAllOutflows.SerializeToString,
            umee_dot_uibc_dot_v1_dot_query__pb2.QueryAllOutflowsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

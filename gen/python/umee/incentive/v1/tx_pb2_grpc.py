# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from umee.incentive.v1 import tx_pb2 as umee_dot_incentive_dot_v1_dot_tx__pb2


class MsgStub(object):
    """Msg defines the x/incentive module's Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Claim = channel.unary_unary(
                '/umee.incentive.v1.Msg/Claim',
                request_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgClaim.SerializeToString,
                response_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgClaimResponse.FromString,
                )
        self.Bond = channel.unary_unary(
                '/umee.incentive.v1.Msg/Bond',
                request_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgBond.SerializeToString,
                response_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgBondResponse.FromString,
                )
        self.BeginUnbonding = channel.unary_unary(
                '/umee.incentive.v1.Msg/BeginUnbonding',
                request_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgBeginUnbonding.SerializeToString,
                response_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgBeginUnbondingResponse.FromString,
                )
        self.EmergencyUnbond = channel.unary_unary(
                '/umee.incentive.v1.Msg/EmergencyUnbond',
                request_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgEmergencyUnbond.SerializeToString,
                response_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgEmergencyUnbondResponse.FromString,
                )
        self.Sponsor = channel.unary_unary(
                '/umee.incentive.v1.Msg/Sponsor',
                request_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgSponsor.SerializeToString,
                response_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgSponsorResponse.FromString,
                )
        self.GovSetParams = channel.unary_unary(
                '/umee.incentive.v1.Msg/GovSetParams',
                request_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgGovSetParams.SerializeToString,
                response_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgGovSetParamsResponse.FromString,
                )
        self.GovCreatePrograms = channel.unary_unary(
                '/umee.incentive.v1.Msg/GovCreatePrograms',
                request_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgGovCreatePrograms.SerializeToString,
                response_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgGovCreateProgramsResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the x/incentive module's Msg service.
    """

    def Claim(self, request, context):
        """Claim defines a method for claiming any pending incentive rewards.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Bond(self, request, context):
        """Bond defines a method for bonding uToken collateral.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BeginUnbonding(self, request, context):
        """BeginUnbonding defines a method for starting to unbond uToken collateral.
        Only max_unbondings unbondings can be active at per user, per denom, at once.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EmergencyUnbond(self, request, context):
        """EmergencyUnbond defines a method for instantly unbonding uToken collateral in exchange for a fee.
        This can finish existing unbondings or unbond bonded tokens, and is not restricted by max_unbondings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Sponsor(self, request, context):
        """Sponsor defines a permissionless method for sponsoring an upcoming, not yet funded incentive program.
        The sponsor must be a single account and the MsgSponsor must fully cover the expected program rewards.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GovSetParams(self, request, context):
        """GovSetParams is used by governance proposals to update parameters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GovCreatePrograms(self, request, context):
        """GovCreatePrograms is used by governance proposals to create and optionally fund incentive programs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Claim': grpc.unary_unary_rpc_method_handler(
                    servicer.Claim,
                    request_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgClaim.FromString,
                    response_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgClaimResponse.SerializeToString,
            ),
            'Bond': grpc.unary_unary_rpc_method_handler(
                    servicer.Bond,
                    request_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgBond.FromString,
                    response_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgBondResponse.SerializeToString,
            ),
            'BeginUnbonding': grpc.unary_unary_rpc_method_handler(
                    servicer.BeginUnbonding,
                    request_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgBeginUnbonding.FromString,
                    response_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgBeginUnbondingResponse.SerializeToString,
            ),
            'EmergencyUnbond': grpc.unary_unary_rpc_method_handler(
                    servicer.EmergencyUnbond,
                    request_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgEmergencyUnbond.FromString,
                    response_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgEmergencyUnbondResponse.SerializeToString,
            ),
            'Sponsor': grpc.unary_unary_rpc_method_handler(
                    servicer.Sponsor,
                    request_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgSponsor.FromString,
                    response_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgSponsorResponse.SerializeToString,
            ),
            'GovSetParams': grpc.unary_unary_rpc_method_handler(
                    servicer.GovSetParams,
                    request_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgGovSetParams.FromString,
                    response_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgGovSetParamsResponse.SerializeToString,
            ),
            'GovCreatePrograms': grpc.unary_unary_rpc_method_handler(
                    servicer.GovCreatePrograms,
                    request_deserializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgGovCreatePrograms.FromString,
                    response_serializer=umee_dot_incentive_dot_v1_dot_tx__pb2.MsgGovCreateProgramsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'umee.incentive.v1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the x/incentive module's Msg service.
    """

    @staticmethod
    def Claim(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/umee.incentive.v1.Msg/Claim',
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgClaim.SerializeToString,
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgClaimResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Bond(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/umee.incentive.v1.Msg/Bond',
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgBond.SerializeToString,
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgBondResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BeginUnbonding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/umee.incentive.v1.Msg/BeginUnbonding',
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgBeginUnbonding.SerializeToString,
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgBeginUnbondingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EmergencyUnbond(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/umee.incentive.v1.Msg/EmergencyUnbond',
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgEmergencyUnbond.SerializeToString,
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgEmergencyUnbondResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Sponsor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/umee.incentive.v1.Msg/Sponsor',
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgSponsor.SerializeToString,
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgSponsorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GovSetParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/umee.incentive.v1.Msg/GovSetParams',
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgGovSetParams.SerializeToString,
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgGovSetParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GovCreatePrograms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/umee.incentive.v1.Msg/GovCreatePrograms',
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgGovCreatePrograms.SerializeToString,
            umee_dot_incentive_dot_v1_dot_tx__pb2.MsgGovCreateProgramsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

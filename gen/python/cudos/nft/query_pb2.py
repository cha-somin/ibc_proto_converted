# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cudos/nft/query.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from cudos.nft import nft_pb2 as cudos_dot_nft_dot_nft__pb2
from cosmos.base.query.v1beta1 import pagination_pb2 as cosmos_dot_base_dot_query_dot_v1beta1_dot_pagination__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15\x63udos/nft/query.proto\x12\x17\x63udosnode.cudosnode.nft\x1a\x14gogoproto/gogo.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x13\x63udos/nft/nft.proto\x1a*cosmos/base/query/v1beta1/pagination.proto\"Z\n\x12QuerySupplyRequest\x12.\n\x08\x64\x65nom_id\x18\x01 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"denom_id\"R\x07\x64\x65nomId\x12\x14\n\x05owner\x18\x02 \x01(\tR\x05owner\"9\n\x13QuerySupplyResponse\x12\"\n\x06\x61mount\x18\x01 \x01(\x04\x42\n\xea\xde\x1f\x06\x61mountR\x06\x61mount\"\xb3\x01\n\x11QueryOwnerRequest\x12.\n\x08\x64\x65nom_id\x18\x01 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"denom_id\"R\x07\x64\x65nomId\x12&\n\x05owner\x18\x02 \x01(\tB\x10\xf2\xde\x1f\x0cyaml:\"owner\"R\x05owner\x12\x46\n\npagination\x18\x03 \x01(\x0b\x32&.cosmos.base.query.v1beta1.PageRequestR\npagination\"\x93\x01\n\x12QueryOwnerResponse\x12\x34\n\x05owner\x18\x01 \x01(\x0b\x32\x1e.cudosnode.cudosnode.nft.OwnerR\x05owner\x12G\n\npagination\x18\x02 \x01(\x0b\x32\'.cosmos.base.query.v1beta1.PageResponseR\npagination\"\x90\x01\n\x16QueryCollectionRequest\x12.\n\x08\x64\x65nom_id\x18\x01 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"denom_id\"R\x07\x64\x65nomId\x12\x46\n\npagination\x18\x02 \x01(\x0b\x32&.cosmos.base.query.v1beta1.PageRequestR\npagination\"\xa7\x01\n\x17QueryCollectionResponse\x12\x43\n\ncollection\x18\x01 \x01(\x0b\x32#.cudosnode.cudosnode.nft.CollectionR\ncollection\x12G\n\npagination\x18\x02 \x01(\x0b\x32\'.cosmos.base.query.v1beta1.PageResponseR\npagination\"Q\n\x1cQueryCollectionsByIdsRequest\x12\x31\n\tdenom_ids\x18\x01 \x03(\tB\x14\xf2\xde\x1f\x10yaml:\"denom_ids\"R\x08\x64\x65nomIds\"e\n\x1cQueryCollectionByIdsResponse\x12\x45\n\x0b\x63ollections\x18\x01 \x03(\x0b\x32#.cudosnode.cudosnode.nft.CollectionR\x0b\x63ollections\"C\n\x11QueryDenomRequest\x12.\n\x08\x64\x65nom_id\x18\x01 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"denom_id\"R\x07\x64\x65nomId\"J\n\x12QueryDenomResponse\x12\x34\n\x05\x64\x65nom\x18\x01 \x01(\x0b\x32\x1e.cudosnode.cudosnode.nft.DenomR\x05\x64\x65nom\"O\n\x17QueryDenomByNameRequest\x12\x34\n\ndenom_name\x18\x01 \x01(\tB\x15\xf2\xde\x1f\x11yaml:\"denom_name\"R\tdenomName\"F\n\x19QueryDenomBySymbolRequest\x12)\n\x06symbol\x18\x01 \x01(\tB\x11\xf2\xde\x1f\ryaml:\"symbol\"R\x06symbol\"P\n\x18QueryDenomByNameResponse\x12\x34\n\x05\x64\x65nom\x18\x01 \x01(\x0b\x32\x1e.cudosnode.cudosnode.nft.DenomR\x05\x64\x65nom\"R\n\x1aQueryDenomBySymbolResponse\x12\x34\n\x05\x64\x65nom\x18\x01 \x01(\x0b\x32\x1e.cudosnode.cudosnode.nft.DenomR\x05\x64\x65nom\"\\\n\x12QueryDenomsRequest\x12\x46\n\npagination\x18\x01 \x01(\x0b\x32&.cosmos.base.query.v1beta1.PageRequestR\npagination\"\x9c\x01\n\x13QueryDenomsResponse\x12<\n\x06\x64\x65noms\x18\x01 \x03(\x0b\x32\x1e.cudosnode.cudosnode.nft.DenomB\x04\xc8\xde\x1f\x00R\x06\x64\x65noms\x12G\n\npagination\x18\x02 \x01(\x0b\x32\'.cosmos.base.query.v1beta1.PageResponseR\npagination\"q\n\x0fQueryNFTRequest\x12.\n\x08\x64\x65nom_id\x18\x01 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"denom_id\"R\x07\x64\x65nomId\x12.\n\x08token_id\x18\x02 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"token_id\"R\x07tokenId\"O\n\x10QueryNFTResponse\x12;\n\x03nft\x18\x01 \x01(\x0b\x32 .cudosnode.cudosnode.nft.BaseNFTB\x07\xe2\xde\x1f\x03NFTR\x03nft\"z\n\x18QueryApprovalsNFTRequest\x12.\n\x08\x64\x65nom_id\x18\x01 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"denom_id\"R\x07\x64\x65nomId\x12.\n\x08token_id\x18\x02 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"token_id\"R\x07tokenId\"v\n\x19QueryApprovalsNFTResponse\x12Y\n\x11\x41pprovedAddresses\x18\x01 \x03(\tB+\xe2\xde\x1f\x11\x41pprovedAddresses\xea\xde\x1f\x12\x61pproved_addressesR\x11\x41pprovedAddresses\"Y\n%QueryApprovalsIsApprovedForAllRequest\x12\x14\n\x05owner\x18\x01 \x01(\tR\x05owner\x12\x1a\n\x08operator\x18\x02 \x01(\tR\x08operator\"Y\n&QueryApprovalsIsApprovedForAllResponse\x12/\n\nisApproved\x18\x01 \x01(\x08\x42\x0f\xea\xde\x1f\x0bis_approvedR\nisApproved2\xf5\r\n\x05Query\x12\x99\x01\n\x06Supply\x12+.cudosnode.cudosnode.nft.QuerySupplyRequest\x1a,.cudosnode.cudosnode.nft.QuerySupplyResponse\"4\x82\xd3\xe4\x93\x02.\x12,/cudosnode/nft/collections/{denom_id}/supply\x12}\n\x05Owner\x12*.cudosnode.cudosnode.nft.QueryOwnerRequest\x1a+.cudosnode.cudosnode.nft.QueryOwnerResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/cudosnode/nft/nfts\x12\x9e\x01\n\nCollection\x12/.cudosnode.cudosnode.nft.QueryCollectionRequest\x1a\x30.cudosnode.cudosnode.nft.QueryCollectionResponse\"-\x82\xd3\xe4\x93\x02\'\x12%/cudosnode/nft/collections/{denom_id}\x12\xb3\x01\n\x15\x43ollectionsByDenomIds\x12\x35.cudosnode.cudosnode.nft.QueryCollectionsByIdsRequest\x1a\x35.cudosnode.cudosnode.nft.QueryCollectionByIdsResponse\",\x82\xd3\xe4\x93\x02&\x12$/cudosnode/nft/collectionsByDenomIds\x12\x8a\x01\n\x05\x44\x65nom\x12*.cudosnode.cudosnode.nft.QueryDenomRequest\x1a+.cudosnode.cudosnode.nft.QueryDenomResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /cudosnode/nft/denoms/{denom_id}\x12\xa3\x01\n\x0b\x44\x65nomByName\x12\x30.cudosnode.cudosnode.nft.QueryDenomByNameRequest\x1a\x31.cudosnode.cudosnode.nft.QueryDenomByNameResponse\"/\x82\xd3\xe4\x93\x02)\x12\'/cudosnode/nft/denoms/name/{denom_name}\x12\xa5\x01\n\rDenomBySymbol\x12\x32.cudosnode.cudosnode.nft.QueryDenomBySymbolRequest\x1a\x33.cudosnode.cudosnode.nft.QueryDenomBySymbolResponse\"+\x82\xd3\xe4\x93\x02%\x12#/cudosnode/nft/denoms/name/{symbol}\x12\x82\x01\n\x06\x44\x65noms\x12+.cudosnode.cudosnode.nft.QueryDenomsRequest\x1a,.cudosnode.cudosnode.nft.QueryDenomsResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/cudosnode/nft/denoms\x12\x8d\x01\n\x03NFT\x12(.cudosnode.cudosnode.nft.QueryNFTRequest\x1a).cudosnode.cudosnode.nft.QueryNFTResponse\"1\x82\xd3\xe4\x93\x02+\x12)/cudosnode/nft/nfts/{denom_id}/{token_id}\x12\xb0\x01\n\x0fGetApprovalsNFT\x12\x31.cudosnode.cudosnode.nft.QueryApprovalsNFTRequest\x1a\x32.cudosnode.cudosnode.nft.QueryApprovalsNFTResponse\"6\x82\xd3\xe4\x93\x02\x30\x12./cudosnode/nft/approvals/{denom_id}/{token_id}\x12\xd6\x01\n\x1eQueryApprovalsIsApprovedForAll\x12>.cudosnode.cudosnode.nft.QueryApprovalsIsApprovedForAllRequest\x1a?.cudosnode.cudosnode.nft.QueryApprovalsIsApprovedForAllResponse\"3\x82\xd3\xe4\x93\x02-\x12+/cudosnode/nft/approvals/{owner}/{operator}B\xd7\x01\n\x1b\x63om.cudosnode.cudosnode.nftB\nQueryProtoP\x01Z.github.com/CudoVentures/cudos-node/x/nft/types\xa2\x02\x03\x43\x43N\xaa\x02\x17\x43udosnode.Cudosnode.Nft\xca\x02\x17\x43udosnode\\Cudosnode\\Nft\xe2\x02#Cudosnode\\Cudosnode\\Nft\\GPBMetadata\xea\x02\x19\x43udosnode::Cudosnode::Nftb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'cudos.nft.query_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\033com.cudosnode.cudosnode.nftB\nQueryProtoP\001Z.github.com/CudoVentures/cudos-node/x/nft/types\242\002\003CCN\252\002\027Cudosnode.Cudosnode.Nft\312\002\027Cudosnode\\Cudosnode\\Nft\342\002#Cudosnode\\Cudosnode\\Nft\\GPBMetadata\352\002\031Cudosnode::Cudosnode::Nft'
  _QUERYSUPPLYREQUEST.fields_by_name['denom_id']._options = None
  _QUERYSUPPLYREQUEST.fields_by_name['denom_id']._serialized_options = b'\362\336\037\017yaml:\"denom_id\"'
  _QUERYSUPPLYRESPONSE.fields_by_name['amount']._options = None
  _QUERYSUPPLYRESPONSE.fields_by_name['amount']._serialized_options = b'\352\336\037\006amount'
  _QUERYOWNERREQUEST.fields_by_name['denom_id']._options = None
  _QUERYOWNERREQUEST.fields_by_name['denom_id']._serialized_options = b'\362\336\037\017yaml:\"denom_id\"'
  _QUERYOWNERREQUEST.fields_by_name['owner']._options = None
  _QUERYOWNERREQUEST.fields_by_name['owner']._serialized_options = b'\362\336\037\014yaml:\"owner\"'
  _QUERYCOLLECTIONREQUEST.fields_by_name['denom_id']._options = None
  _QUERYCOLLECTIONREQUEST.fields_by_name['denom_id']._serialized_options = b'\362\336\037\017yaml:\"denom_id\"'
  _QUERYCOLLECTIONSBYIDSREQUEST.fields_by_name['denom_ids']._options = None
  _QUERYCOLLECTIONSBYIDSREQUEST.fields_by_name['denom_ids']._serialized_options = b'\362\336\037\020yaml:\"denom_ids\"'
  _QUERYDENOMREQUEST.fields_by_name['denom_id']._options = None
  _QUERYDENOMREQUEST.fields_by_name['denom_id']._serialized_options = b'\362\336\037\017yaml:\"denom_id\"'
  _QUERYDENOMBYNAMEREQUEST.fields_by_name['denom_name']._options = None
  _QUERYDENOMBYNAMEREQUEST.fields_by_name['denom_name']._serialized_options = b'\362\336\037\021yaml:\"denom_name\"'
  _QUERYDENOMBYSYMBOLREQUEST.fields_by_name['symbol']._options = None
  _QUERYDENOMBYSYMBOLREQUEST.fields_by_name['symbol']._serialized_options = b'\362\336\037\ryaml:\"symbol\"'
  _QUERYDENOMSRESPONSE.fields_by_name['denoms']._options = None
  _QUERYDENOMSRESPONSE.fields_by_name['denoms']._serialized_options = b'\310\336\037\000'
  _QUERYNFTREQUEST.fields_by_name['denom_id']._options = None
  _QUERYNFTREQUEST.fields_by_name['denom_id']._serialized_options = b'\362\336\037\017yaml:\"denom_id\"'
  _QUERYNFTREQUEST.fields_by_name['token_id']._options = None
  _QUERYNFTREQUEST.fields_by_name['token_id']._serialized_options = b'\362\336\037\017yaml:\"token_id\"'
  _QUERYNFTRESPONSE.fields_by_name['nft']._options = None
  _QUERYNFTRESPONSE.fields_by_name['nft']._serialized_options = b'\342\336\037\003NFT'
  _QUERYAPPROVALSNFTREQUEST.fields_by_name['denom_id']._options = None
  _QUERYAPPROVALSNFTREQUEST.fields_by_name['denom_id']._serialized_options = b'\362\336\037\017yaml:\"denom_id\"'
  _QUERYAPPROVALSNFTREQUEST.fields_by_name['token_id']._options = None
  _QUERYAPPROVALSNFTREQUEST.fields_by_name['token_id']._serialized_options = b'\362\336\037\017yaml:\"token_id\"'
  _QUERYAPPROVALSNFTRESPONSE.fields_by_name['ApprovedAddresses']._options = None
  _QUERYAPPROVALSNFTRESPONSE.fields_by_name['ApprovedAddresses']._serialized_options = b'\342\336\037\021ApprovedAddresses\352\336\037\022approved_addresses'
  _QUERYAPPROVALSISAPPROVEDFORALLRESPONSE.fields_by_name['isApproved']._options = None
  _QUERYAPPROVALSISAPPROVEDFORALLRESPONSE.fields_by_name['isApproved']._serialized_options = b'\352\336\037\013is_approved'
  _QUERY.methods_by_name['Supply']._options = None
  _QUERY.methods_by_name['Supply']._serialized_options = b'\202\323\344\223\002.\022,/cudosnode/nft/collections/{denom_id}/supply'
  _QUERY.methods_by_name['Owner']._options = None
  _QUERY.methods_by_name['Owner']._serialized_options = b'\202\323\344\223\002\025\022\023/cudosnode/nft/nfts'
  _QUERY.methods_by_name['Collection']._options = None
  _QUERY.methods_by_name['Collection']._serialized_options = b'\202\323\344\223\002\'\022%/cudosnode/nft/collections/{denom_id}'
  _QUERY.methods_by_name['CollectionsByDenomIds']._options = None
  _QUERY.methods_by_name['CollectionsByDenomIds']._serialized_options = b'\202\323\344\223\002&\022$/cudosnode/nft/collectionsByDenomIds'
  _QUERY.methods_by_name['Denom']._options = None
  _QUERY.methods_by_name['Denom']._serialized_options = b'\202\323\344\223\002\"\022 /cudosnode/nft/denoms/{denom_id}'
  _QUERY.methods_by_name['DenomByName']._options = None
  _QUERY.methods_by_name['DenomByName']._serialized_options = b'\202\323\344\223\002)\022\'/cudosnode/nft/denoms/name/{denom_name}'
  _QUERY.methods_by_name['DenomBySymbol']._options = None
  _QUERY.methods_by_name['DenomBySymbol']._serialized_options = b'\202\323\344\223\002%\022#/cudosnode/nft/denoms/name/{symbol}'
  _QUERY.methods_by_name['Denoms']._options = None
  _QUERY.methods_by_name['Denoms']._serialized_options = b'\202\323\344\223\002\027\022\025/cudosnode/nft/denoms'
  _QUERY.methods_by_name['NFT']._options = None
  _QUERY.methods_by_name['NFT']._serialized_options = b'\202\323\344\223\002+\022)/cudosnode/nft/nfts/{denom_id}/{token_id}'
  _QUERY.methods_by_name['GetApprovalsNFT']._options = None
  _QUERY.methods_by_name['GetApprovalsNFT']._serialized_options = b'\202\323\344\223\0020\022./cudosnode/nft/approvals/{denom_id}/{token_id}'
  _QUERY.methods_by_name['QueryApprovalsIsApprovedForAll']._options = None
  _QUERY.methods_by_name['QueryApprovalsIsApprovedForAll']._serialized_options = b'\202\323\344\223\002-\022+/cudosnode/nft/approvals/{owner}/{operator}'
  _globals['_QUERYSUPPLYREQUEST']._serialized_start=167
  _globals['_QUERYSUPPLYREQUEST']._serialized_end=257
  _globals['_QUERYSUPPLYRESPONSE']._serialized_start=259
  _globals['_QUERYSUPPLYRESPONSE']._serialized_end=316
  _globals['_QUERYOWNERREQUEST']._serialized_start=319
  _globals['_QUERYOWNERREQUEST']._serialized_end=498
  _globals['_QUERYOWNERRESPONSE']._serialized_start=501
  _globals['_QUERYOWNERRESPONSE']._serialized_end=648
  _globals['_QUERYCOLLECTIONREQUEST']._serialized_start=651
  _globals['_QUERYCOLLECTIONREQUEST']._serialized_end=795
  _globals['_QUERYCOLLECTIONRESPONSE']._serialized_start=798
  _globals['_QUERYCOLLECTIONRESPONSE']._serialized_end=965
  _globals['_QUERYCOLLECTIONSBYIDSREQUEST']._serialized_start=967
  _globals['_QUERYCOLLECTIONSBYIDSREQUEST']._serialized_end=1048
  _globals['_QUERYCOLLECTIONBYIDSRESPONSE']._serialized_start=1050
  _globals['_QUERYCOLLECTIONBYIDSRESPONSE']._serialized_end=1151
  _globals['_QUERYDENOMREQUEST']._serialized_start=1153
  _globals['_QUERYDENOMREQUEST']._serialized_end=1220
  _globals['_QUERYDENOMRESPONSE']._serialized_start=1222
  _globals['_QUERYDENOMRESPONSE']._serialized_end=1296
  _globals['_QUERYDENOMBYNAMEREQUEST']._serialized_start=1298
  _globals['_QUERYDENOMBYNAMEREQUEST']._serialized_end=1377
  _globals['_QUERYDENOMBYSYMBOLREQUEST']._serialized_start=1379
  _globals['_QUERYDENOMBYSYMBOLREQUEST']._serialized_end=1449
  _globals['_QUERYDENOMBYNAMERESPONSE']._serialized_start=1451
  _globals['_QUERYDENOMBYNAMERESPONSE']._serialized_end=1531
  _globals['_QUERYDENOMBYSYMBOLRESPONSE']._serialized_start=1533
  _globals['_QUERYDENOMBYSYMBOLRESPONSE']._serialized_end=1615
  _globals['_QUERYDENOMSREQUEST']._serialized_start=1617
  _globals['_QUERYDENOMSREQUEST']._serialized_end=1709
  _globals['_QUERYDENOMSRESPONSE']._serialized_start=1712
  _globals['_QUERYDENOMSRESPONSE']._serialized_end=1868
  _globals['_QUERYNFTREQUEST']._serialized_start=1870
  _globals['_QUERYNFTREQUEST']._serialized_end=1983
  _globals['_QUERYNFTRESPONSE']._serialized_start=1985
  _globals['_QUERYNFTRESPONSE']._serialized_end=2064
  _globals['_QUERYAPPROVALSNFTREQUEST']._serialized_start=2066
  _globals['_QUERYAPPROVALSNFTREQUEST']._serialized_end=2188
  _globals['_QUERYAPPROVALSNFTRESPONSE']._serialized_start=2190
  _globals['_QUERYAPPROVALSNFTRESPONSE']._serialized_end=2308
  _globals['_QUERYAPPROVALSISAPPROVEDFORALLREQUEST']._serialized_start=2310
  _globals['_QUERYAPPROVALSISAPPROVEDFORALLREQUEST']._serialized_end=2399
  _globals['_QUERYAPPROVALSISAPPROVEDFORALLRESPONSE']._serialized_start=2401
  _globals['_QUERYAPPROVALSISAPPROVEDFORALLRESPONSE']._serialized_end=2490
  _globals['_QUERY']._serialized_start=2493
  _globals['_QUERY']._serialized_end=4274
# @@protoc_insertion_point(module_scope)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from OmniFlix.marketplace.v1beta1 import tx_pb2 as OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2


class MsgStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListNFT = channel.unary_unary(
                '/OmniFlix.marketplace.v1beta1.Msg/ListNFT',
                request_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgListNFT.SerializeToString,
                response_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgListNFTResponse.FromString,
                )
        self.EditListing = channel.unary_unary(
                '/OmniFlix.marketplace.v1beta1.Msg/EditListing',
                request_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgEditListing.SerializeToString,
                response_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgEditListingResponse.FromString,
                )
        self.DeListNFT = channel.unary_unary(
                '/OmniFlix.marketplace.v1beta1.Msg/DeListNFT',
                request_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgDeListNFT.SerializeToString,
                response_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgDeListNFTResponse.FromString,
                )
        self.BuyNFT = channel.unary_unary(
                '/OmniFlix.marketplace.v1beta1.Msg/BuyNFT',
                request_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgBuyNFT.SerializeToString,
                response_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgBuyNFTResponse.FromString,
                )
        self.CreateAuction = channel.unary_unary(
                '/OmniFlix.marketplace.v1beta1.Msg/CreateAuction',
                request_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgCreateAuction.SerializeToString,
                response_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgCreateAuctionResponse.FromString,
                )
        self.CancelAuction = channel.unary_unary(
                '/OmniFlix.marketplace.v1beta1.Msg/CancelAuction',
                request_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgCancelAuction.SerializeToString,
                response_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgCancelAuctionResponse.FromString,
                )
        self.PlaceBid = channel.unary_unary(
                '/OmniFlix.marketplace.v1beta1.Msg/PlaceBid',
                request_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgPlaceBid.SerializeToString,
                response_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgPlaceBidResponse.FromString,
                )
        self.UpdateParams = channel.unary_unary(
                '/OmniFlix.marketplace.v1beta1.Msg/UpdateParams',
                request_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgUpdateParams.SerializeToString,
                response_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgUpdateParamsResponse.FromString,
                )


class MsgServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListNFT(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditListing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeListNFT(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyNFT(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAuction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelAuction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlaceBid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateParams(self, request, context):
        """UpdateParams defines a governance operation for updating the x/marketplace module
        parameters. The authority is hard-coded to the x/marketplace module account.

        Since: cosmos-sdk 0.47
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListNFT': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNFT,
                    request_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgListNFT.FromString,
                    response_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgListNFTResponse.SerializeToString,
            ),
            'EditListing': grpc.unary_unary_rpc_method_handler(
                    servicer.EditListing,
                    request_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgEditListing.FromString,
                    response_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgEditListingResponse.SerializeToString,
            ),
            'DeListNFT': grpc.unary_unary_rpc_method_handler(
                    servicer.DeListNFT,
                    request_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgDeListNFT.FromString,
                    response_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgDeListNFTResponse.SerializeToString,
            ),
            'BuyNFT': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyNFT,
                    request_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgBuyNFT.FromString,
                    response_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgBuyNFTResponse.SerializeToString,
            ),
            'CreateAuction': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAuction,
                    request_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgCreateAuction.FromString,
                    response_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgCreateAuctionResponse.SerializeToString,
            ),
            'CancelAuction': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelAuction,
                    request_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgCancelAuction.FromString,
                    response_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgCancelAuctionResponse.SerializeToString,
            ),
            'PlaceBid': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaceBid,
                    request_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgPlaceBid.FromString,
                    response_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgPlaceBidResponse.SerializeToString,
            ),
            'UpdateParams': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateParams,
                    request_deserializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgUpdateParams.FromString,
                    response_serializer=OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgUpdateParamsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'OmniFlix.marketplace.v1beta1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListNFT(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OmniFlix.marketplace.v1beta1.Msg/ListNFT',
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgListNFT.SerializeToString,
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgListNFTResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditListing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OmniFlix.marketplace.v1beta1.Msg/EditListing',
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgEditListing.SerializeToString,
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgEditListingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeListNFT(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OmniFlix.marketplace.v1beta1.Msg/DeListNFT',
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgDeListNFT.SerializeToString,
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgDeListNFTResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuyNFT(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OmniFlix.marketplace.v1beta1.Msg/BuyNFT',
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgBuyNFT.SerializeToString,
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgBuyNFTResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAuction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OmniFlix.marketplace.v1beta1.Msg/CreateAuction',
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgCreateAuction.SerializeToString,
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgCreateAuctionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelAuction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OmniFlix.marketplace.v1beta1.Msg/CancelAuction',
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgCancelAuction.SerializeToString,
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgCancelAuctionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlaceBid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OmniFlix.marketplace.v1beta1.Msg/PlaceBid',
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgPlaceBid.SerializeToString,
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgPlaceBidResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OmniFlix.marketplace.v1beta1.Msg/UpdateParams',
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgUpdateParams.SerializeToString,
            OmniFlix_dot_marketplace_dot_v1beta1_dot_tx__pb2.MsgUpdateParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from mars.envoy.v1beta1 import tx_pb2 as mars_dot_envoy_dot_v1beta1_dot_tx__pb2


class MsgStub(object):
    """Msg defines the module's gRPC message service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterAccount = channel.unary_unary(
                '/mars.envoy.v1beta1.Msg/RegisterAccount',
                request_serializer=mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgRegisterAccount.SerializeToString,
                response_deserializer=mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgRegisterAccountResponse.FromString,
                )
        self.SendFunds = channel.unary_unary(
                '/mars.envoy.v1beta1.Msg/SendFunds',
                request_serializer=mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgSendFunds.SerializeToString,
                response_deserializer=mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgSendFundsResponse.FromString,
                )
        self.SendMessages = channel.unary_unary(
                '/mars.envoy.v1beta1.Msg/SendMessages',
                request_serializer=mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgSendMessages.SerializeToString,
                response_deserializer=mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgSendMessagesResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the module's gRPC message service.
    """

    def RegisterAccount(self, request, context):
        """RegisterAccount creates a new interchain account on the given connection,
        or if an interchain account already exists but its channel is closed (due
        to a packet having timed out), open a new channel for this account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendFunds(self, request, context):
        """SendFunds is a governance operation for sending funds to an interchain
        account via ICS-20.

        The envoy module will first attempt to use the balance held in its own
        module account. If the balance is not sufficient, it will attempt to draw
        the difference from the community pool.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessages(self, request, context):
        """SendMessages is a governance operation for sending one or more messages to
        the host chain to be executed by the interchain account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterAccount,
                    request_deserializer=mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgRegisterAccount.FromString,
                    response_serializer=mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgRegisterAccountResponse.SerializeToString,
            ),
            'SendFunds': grpc.unary_unary_rpc_method_handler(
                    servicer.SendFunds,
                    request_deserializer=mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgSendFunds.FromString,
                    response_serializer=mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgSendFundsResponse.SerializeToString,
            ),
            'SendMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessages,
                    request_deserializer=mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgSendMessages.FromString,
                    response_serializer=mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgSendMessagesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mars.envoy.v1beta1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the module's gRPC message service.
    """

    @staticmethod
    def RegisterAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mars.envoy.v1beta1.Msg/RegisterAccount',
            mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgRegisterAccount.SerializeToString,
            mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgRegisterAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendFunds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mars.envoy.v1beta1.Msg/SendFunds',
            mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgSendFunds.SerializeToString,
            mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgSendFundsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mars.envoy.v1beta1.Msg/SendMessages',
            mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgSendMessages.SerializeToString,
            mars_dot_envoy_dot_v1beta1_dot_tx__pb2.MsgSendMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sommelier.cellarfees.v1 import query_pb2 as sommelier_dot_cellarfees_dot_v1_dot_query__pb2


class QueryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QueryParams = channel.unary_unary(
                '/cellarfees.v1.Query/QueryParams',
                request_serializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.QueryModuleAccounts = channel.unary_unary(
                '/cellarfees.v1.Query/QueryModuleAccounts',
                request_serializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryModuleAccountsRequest.SerializeToString,
                response_deserializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryModuleAccountsResponse.FromString,
                )
        self.QueryLastRewardSupplyPeak = channel.unary_unary(
                '/cellarfees.v1.Query/QueryLastRewardSupplyPeak',
                request_serializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryLastRewardSupplyPeakRequest.SerializeToString,
                response_deserializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryLastRewardSupplyPeakResponse.FromString,
                )
        self.QueryFeeAccrualCounters = channel.unary_unary(
                '/cellarfees.v1.Query/QueryFeeAccrualCounters',
                request_serializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryFeeAccrualCountersRequest.SerializeToString,
                response_deserializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryFeeAccrualCountersResponse.FromString,
                )
        self.QueryAPY = channel.unary_unary(
                '/cellarfees.v1.Query/QueryAPY',
                request_serializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryAPYRequest.SerializeToString,
                response_deserializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryAPYResponse.FromString,
                )


class QueryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def QueryParams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryModuleAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryLastRewardSupplyPeak(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryFeeAccrualCounters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryAPY(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'QueryParams': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryParams,
                    request_deserializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'QueryModuleAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryModuleAccounts,
                    request_deserializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryModuleAccountsRequest.FromString,
                    response_serializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryModuleAccountsResponse.SerializeToString,
            ),
            'QueryLastRewardSupplyPeak': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryLastRewardSupplyPeak,
                    request_deserializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryLastRewardSupplyPeakRequest.FromString,
                    response_serializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryLastRewardSupplyPeakResponse.SerializeToString,
            ),
            'QueryFeeAccrualCounters': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryFeeAccrualCounters,
                    request_deserializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryFeeAccrualCountersRequest.FromString,
                    response_serializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryFeeAccrualCountersResponse.SerializeToString,
            ),
            'QueryAPY': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryAPY,
                    request_deserializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryAPYRequest.FromString,
                    response_serializer=sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryAPYResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cellarfees.v1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def QueryParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cellarfees.v1.Query/QueryParams',
            sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryParamsRequest.SerializeToString,
            sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryModuleAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cellarfees.v1.Query/QueryModuleAccounts',
            sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryModuleAccountsRequest.SerializeToString,
            sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryModuleAccountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryLastRewardSupplyPeak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cellarfees.v1.Query/QueryLastRewardSupplyPeak',
            sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryLastRewardSupplyPeakRequest.SerializeToString,
            sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryLastRewardSupplyPeakResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryFeeAccrualCounters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cellarfees.v1.Query/QueryFeeAccrualCounters',
            sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryFeeAccrualCountersRequest.SerializeToString,
            sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryFeeAccrualCountersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryAPY(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cellarfees.v1.Query/QueryAPY',
            sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryAPYRequest.SerializeToString,
            sommelier_dot_cellarfees_dot_v1_dot_query__pb2.QueryAPYResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sommelier.pubsub.v1 import query_pb2 as sommelier_dot_pubsub_dot_v1_dot_query__pb2


class QueryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/pubsub.v1.Query/Params',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.QueryPublisher = channel.unary_unary(
                '/pubsub.v1.Query/QueryPublisher',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherResponse.FromString,
                )
        self.QueryPublishers = channel.unary_unary(
                '/pubsub.v1.Query/QueryPublishers',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublishersRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublishersResponse.FromString,
                )
        self.QuerySubscriber = channel.unary_unary(
                '/pubsub.v1.Query/QuerySubscriber',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberResponse.FromString,
                )
        self.QuerySubscribers = channel.unary_unary(
                '/pubsub.v1.Query/QuerySubscribers',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscribersRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscribersResponse.FromString,
                )
        self.QueryPublisherIntent = channel.unary_unary(
                '/pubsub.v1.Query/QueryPublisherIntent',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentResponse.FromString,
                )
        self.QueryPublisherIntents = channel.unary_unary(
                '/pubsub.v1.Query/QueryPublisherIntents',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsResponse.FromString,
                )
        self.QueryPublisherIntentsByPublisherDomain = channel.unary_unary(
                '/pubsub.v1.Query/QueryPublisherIntentsByPublisherDomain',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsByPublisherDomainRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsByPublisherDomainResponse.FromString,
                )
        self.QueryPublisherIntentsBySubscriptionID = channel.unary_unary(
                '/pubsub.v1.Query/QueryPublisherIntentsBySubscriptionID',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsBySubscriptionIDRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsBySubscriptionIDResponse.FromString,
                )
        self.QuerySubscriberIntent = channel.unary_unary(
                '/pubsub.v1.Query/QuerySubscriberIntent',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentResponse.FromString,
                )
        self.QuerySubscriberIntents = channel.unary_unary(
                '/pubsub.v1.Query/QuerySubscriberIntents',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsResponse.FromString,
                )
        self.QuerySubscriberIntentsBySubscriberAddress = channel.unary_unary(
                '/pubsub.v1.Query/QuerySubscriberIntentsBySubscriberAddress',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsBySubscriberAddressRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsBySubscriberAddressResponse.FromString,
                )
        self.QuerySubscriberIntentsBySubscriptionID = channel.unary_unary(
                '/pubsub.v1.Query/QuerySubscriberIntentsBySubscriptionID',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsBySubscriptionIDRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsBySubscriptionIDResponse.FromString,
                )
        self.QuerySubscriberIntentsByPublisherDomain = channel.unary_unary(
                '/pubsub.v1.Query/QuerySubscriberIntentsByPublisherDomain',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsByPublisherDomainRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsByPublisherDomainResponse.FromString,
                )
        self.QueryDefaultSubscription = channel.unary_unary(
                '/pubsub.v1.Query/QueryDefaultSubscription',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryDefaultSubscriptionRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryDefaultSubscriptionResponse.FromString,
                )
        self.QueryDefaultSubscriptions = channel.unary_unary(
                '/pubsub.v1.Query/QueryDefaultSubscriptions',
                request_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryDefaultSubscriptionsRequest.SerializeToString,
                response_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryDefaultSubscriptionsResponse.FromString,
                )


class QueryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Params(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryPublisher(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryPublishers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuerySubscriber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuerySubscribers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryPublisherIntent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryPublisherIntents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryPublisherIntentsByPublisherDomain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryPublisherIntentsBySubscriptionID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuerySubscriberIntent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuerySubscriberIntents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuerySubscriberIntentsBySubscriberAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuerySubscriberIntentsBySubscriptionID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuerySubscriberIntentsByPublisherDomain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryDefaultSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryDefaultSubscriptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'QueryPublisher': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryPublisher,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherResponse.SerializeToString,
            ),
            'QueryPublishers': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryPublishers,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublishersRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublishersResponse.SerializeToString,
            ),
            'QuerySubscriber': grpc.unary_unary_rpc_method_handler(
                    servicer.QuerySubscriber,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberResponse.SerializeToString,
            ),
            'QuerySubscribers': grpc.unary_unary_rpc_method_handler(
                    servicer.QuerySubscribers,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscribersRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscribersResponse.SerializeToString,
            ),
            'QueryPublisherIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryPublisherIntent,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentResponse.SerializeToString,
            ),
            'QueryPublisherIntents': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryPublisherIntents,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsResponse.SerializeToString,
            ),
            'QueryPublisherIntentsByPublisherDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryPublisherIntentsByPublisherDomain,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsByPublisherDomainRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsByPublisherDomainResponse.SerializeToString,
            ),
            'QueryPublisherIntentsBySubscriptionID': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryPublisherIntentsBySubscriptionID,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsBySubscriptionIDRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsBySubscriptionIDResponse.SerializeToString,
            ),
            'QuerySubscriberIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.QuerySubscriberIntent,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentResponse.SerializeToString,
            ),
            'QuerySubscriberIntents': grpc.unary_unary_rpc_method_handler(
                    servicer.QuerySubscriberIntents,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsResponse.SerializeToString,
            ),
            'QuerySubscriberIntentsBySubscriberAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.QuerySubscriberIntentsBySubscriberAddress,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsBySubscriberAddressRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsBySubscriberAddressResponse.SerializeToString,
            ),
            'QuerySubscriberIntentsBySubscriptionID': grpc.unary_unary_rpc_method_handler(
                    servicer.QuerySubscriberIntentsBySubscriptionID,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsBySubscriptionIDRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsBySubscriptionIDResponse.SerializeToString,
            ),
            'QuerySubscriberIntentsByPublisherDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.QuerySubscriberIntentsByPublisherDomain,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsByPublisherDomainRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsByPublisherDomainResponse.SerializeToString,
            ),
            'QueryDefaultSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryDefaultSubscription,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryDefaultSubscriptionRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryDefaultSubscriptionResponse.SerializeToString,
            ),
            'QueryDefaultSubscriptions': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryDefaultSubscriptions,
                    request_deserializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryDefaultSubscriptionsRequest.FromString,
                    response_serializer=sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryDefaultSubscriptionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pubsub.v1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/Params',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryParamsRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryPublisher(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QueryPublisher',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryPublishers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QueryPublishers',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublishersRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublishersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QuerySubscriber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QuerySubscriber',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QuerySubscribers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QuerySubscribers',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscribersRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscribersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryPublisherIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QueryPublisherIntent',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryPublisherIntents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QueryPublisherIntents',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryPublisherIntentsByPublisherDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QueryPublisherIntentsByPublisherDomain',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsByPublisherDomainRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsByPublisherDomainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryPublisherIntentsBySubscriptionID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QueryPublisherIntentsBySubscriptionID',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsBySubscriptionIDRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryPublisherIntentsBySubscriptionIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QuerySubscriberIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QuerySubscriberIntent',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QuerySubscriberIntents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QuerySubscriberIntents',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QuerySubscriberIntentsBySubscriberAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QuerySubscriberIntentsBySubscriberAddress',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsBySubscriberAddressRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsBySubscriberAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QuerySubscriberIntentsBySubscriptionID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QuerySubscriberIntentsBySubscriptionID',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsBySubscriptionIDRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsBySubscriptionIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QuerySubscriberIntentsByPublisherDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QuerySubscriberIntentsByPublisherDomain',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsByPublisherDomainRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QuerySubscriberIntentsByPublisherDomainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryDefaultSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QueryDefaultSubscription',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryDefaultSubscriptionRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryDefaultSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryDefaultSubscriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pubsub.v1.Query/QueryDefaultSubscriptions',
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryDefaultSubscriptionsRequest.SerializeToString,
            sommelier_dot_pubsub_dot_v1_dot_query__pb2.QueryDefaultSubscriptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

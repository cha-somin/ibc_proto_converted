# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sommelier.cork.v2 import query_pb2 as sommelier_dot_cork_dot_v2_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC query service for the cork module.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QueryParams = channel.unary_unary(
                '/cork.v2.Query/QueryParams',
                request_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.QueryCellarIDs = channel.unary_unary(
                '/cork.v2.Query/QueryCellarIDs',
                request_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCellarIDsRequest.SerializeToString,
                response_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCellarIDsResponse.FromString,
                )
        self.QueryScheduledCorks = channel.unary_unary(
                '/cork.v2.Query/QueryScheduledCorks',
                request_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksRequest.SerializeToString,
                response_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksResponse.FromString,
                )
        self.QueryScheduledBlockHeights = channel.unary_unary(
                '/cork.v2.Query/QueryScheduledBlockHeights',
                request_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledBlockHeightsRequest.SerializeToString,
                response_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledBlockHeightsResponse.FromString,
                )
        self.QueryScheduledCorksByBlockHeight = channel.unary_unary(
                '/cork.v2.Query/QueryScheduledCorksByBlockHeight',
                request_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksByBlockHeightRequest.SerializeToString,
                response_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksByBlockHeightResponse.FromString,
                )
        self.QueryScheduledCorksByID = channel.unary_unary(
                '/cork.v2.Query/QueryScheduledCorksByID',
                request_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksByIDRequest.SerializeToString,
                response_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksByIDResponse.FromString,
                )
        self.QueryCorkResult = channel.unary_unary(
                '/cork.v2.Query/QueryCorkResult',
                request_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCorkResultRequest.SerializeToString,
                response_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCorkResultResponse.FromString,
                )
        self.QueryCorkResults = channel.unary_unary(
                '/cork.v2.Query/QueryCorkResults',
                request_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCorkResultsRequest.SerializeToString,
                response_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCorkResultsResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC query service for the cork module.
    """

    def QueryParams(self, request, context):
        """QueryParams queries the allocation module parameters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryCellarIDs(self, request, context):
        """QueryCellarIDs returns all cellars and current tick ranges
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryScheduledCorks(self, request, context):
        """QueryScheduledCorks returns all scheduled corks
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryScheduledBlockHeights(self, request, context):
        """QueryScheduledBlockHeights returns all scheduled block heights
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryScheduledCorksByBlockHeight(self, request, context):
        """QueryScheduledCorks returns all scheduled corks at a block height
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryScheduledCorksByID(self, request, context):
        """QueryScheduledCorks returns all scheduled corks with the specified ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryCorkResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryCorkResults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'QueryParams': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryParams,
                    request_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'QueryCellarIDs': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryCellarIDs,
                    request_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCellarIDsRequest.FromString,
                    response_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCellarIDsResponse.SerializeToString,
            ),
            'QueryScheduledCorks': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryScheduledCorks,
                    request_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksRequest.FromString,
                    response_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksResponse.SerializeToString,
            ),
            'QueryScheduledBlockHeights': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryScheduledBlockHeights,
                    request_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledBlockHeightsRequest.FromString,
                    response_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledBlockHeightsResponse.SerializeToString,
            ),
            'QueryScheduledCorksByBlockHeight': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryScheduledCorksByBlockHeight,
                    request_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksByBlockHeightRequest.FromString,
                    response_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksByBlockHeightResponse.SerializeToString,
            ),
            'QueryScheduledCorksByID': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryScheduledCorksByID,
                    request_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksByIDRequest.FromString,
                    response_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksByIDResponse.SerializeToString,
            ),
            'QueryCorkResult': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryCorkResult,
                    request_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCorkResultRequest.FromString,
                    response_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCorkResultResponse.SerializeToString,
            ),
            'QueryCorkResults': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryCorkResults,
                    request_deserializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCorkResultsRequest.FromString,
                    response_serializer=sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCorkResultsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cork.v2.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC query service for the cork module.
    """

    @staticmethod
    def QueryParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cork.v2.Query/QueryParams',
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryParamsRequest.SerializeToString,
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryCellarIDs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cork.v2.Query/QueryCellarIDs',
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCellarIDsRequest.SerializeToString,
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCellarIDsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryScheduledCorks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cork.v2.Query/QueryScheduledCorks',
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksRequest.SerializeToString,
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryScheduledBlockHeights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cork.v2.Query/QueryScheduledBlockHeights',
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledBlockHeightsRequest.SerializeToString,
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledBlockHeightsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryScheduledCorksByBlockHeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cork.v2.Query/QueryScheduledCorksByBlockHeight',
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksByBlockHeightRequest.SerializeToString,
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksByBlockHeightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryScheduledCorksByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cork.v2.Query/QueryScheduledCorksByID',
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksByIDRequest.SerializeToString,
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryScheduledCorksByIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryCorkResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cork.v2.Query/QueryCorkResult',
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCorkResultRequest.SerializeToString,
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCorkResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryCorkResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cork.v2.Query/QueryCorkResults',
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCorkResultsRequest.SerializeToString,
            sommelier_dot_cork_dot_v2_dot_query__pb2.QueryCorkResultsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

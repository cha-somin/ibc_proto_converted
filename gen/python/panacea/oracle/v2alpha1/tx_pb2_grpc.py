# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from panacea.oracle.v2alpha1 import tx_pb2 as panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2


class MsgStub(object):
    """Msg defines the Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterOracle = channel.unary_unary(
                '/panacea.oracle.v2alpha1.Msg/RegisterOracle',
                request_serializer=panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2.MsgRegisterOracle.SerializeToString,
                response_deserializer=panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2.MsgRegisterOracleResponse.FromString,
                )
        self.UpdateOracle = channel.unary_unary(
                '/panacea.oracle.v2alpha1.Msg/UpdateOracle',
                request_serializer=panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2.MsgUpdateOracle.SerializeToString,
                response_deserializer=panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2.MsgUpdateOracleResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the Msg service.
    """

    def RegisterOracle(self, request, context):
        """RegisterOracle defines a method for registration of oracle.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOracle(self, request, context):
        """UpdateOracle defines a method for updating of oracle.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterOracle': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterOracle,
                    request_deserializer=panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2.MsgRegisterOracle.FromString,
                    response_serializer=panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2.MsgRegisterOracleResponse.SerializeToString,
            ),
            'UpdateOracle': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOracle,
                    request_deserializer=panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2.MsgUpdateOracle.FromString,
                    response_serializer=panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2.MsgUpdateOracleResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'panacea.oracle.v2alpha1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the Msg service.
    """

    @staticmethod
    def RegisterOracle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/panacea.oracle.v2alpha1.Msg/RegisterOracle',
            panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2.MsgRegisterOracle.SerializeToString,
            panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2.MsgRegisterOracleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOracle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/panacea.oracle.v2alpha1.Msg/UpdateOracle',
            panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2.MsgUpdateOracle.SerializeToString,
            panacea_dot_oracle_dot_v2alpha1_dot_tx__pb2.MsgUpdateOracleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from panacea.aol.v2 import query_pb2 as panacea_dot_aol_dot_v2_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Topic = channel.unary_unary(
                '/panacea.aol.v2.Query/Topic',
                request_serializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryTopicRequest.SerializeToString,
                response_deserializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryTopicResponse.FromString,
                )
        self.Topics = channel.unary_unary(
                '/panacea.aol.v2.Query/Topics',
                request_serializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryTopicsRequest.SerializeToString,
                response_deserializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryTopicsResponse.FromString,
                )
        self.Writer = channel.unary_unary(
                '/panacea.aol.v2.Query/Writer',
                request_serializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryWriterRequest.SerializeToString,
                response_deserializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryWriterResponse.FromString,
                )
        self.Writers = channel.unary_unary(
                '/panacea.aol.v2.Query/Writers',
                request_serializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryWritersRequest.SerializeToString,
                response_deserializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryWritersResponse.FromString,
                )
        self.Record = channel.unary_unary(
                '/panacea.aol.v2.Query/Record',
                request_serializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryRecordRequest.SerializeToString,
                response_deserializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryRecordResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Topic(self, request, context):
        """Topic returns topic details.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Topics(self, request, context):
        """Topics returns topic names.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Writer(self, request, context):
        """Writer returns writer details.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Writers(self, request, context):
        """Writers returns writer addresses.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Record(self, request, context):
        """Record returns record details.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Topic': grpc.unary_unary_rpc_method_handler(
                    servicer.Topic,
                    request_deserializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryTopicRequest.FromString,
                    response_serializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryTopicResponse.SerializeToString,
            ),
            'Topics': grpc.unary_unary_rpc_method_handler(
                    servicer.Topics,
                    request_deserializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryTopicsRequest.FromString,
                    response_serializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryTopicsResponse.SerializeToString,
            ),
            'Writer': grpc.unary_unary_rpc_method_handler(
                    servicer.Writer,
                    request_deserializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryWriterRequest.FromString,
                    response_serializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryWriterResponse.SerializeToString,
            ),
            'Writers': grpc.unary_unary_rpc_method_handler(
                    servicer.Writers,
                    request_deserializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryWritersRequest.FromString,
                    response_serializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryWritersResponse.SerializeToString,
            ),
            'Record': grpc.unary_unary_rpc_method_handler(
                    servicer.Record,
                    request_deserializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryRecordRequest.FromString,
                    response_serializer=panacea_dot_aol_dot_v2_dot_query__pb2.QueryRecordResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'panacea.aol.v2.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Topic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/panacea.aol.v2.Query/Topic',
            panacea_dot_aol_dot_v2_dot_query__pb2.QueryTopicRequest.SerializeToString,
            panacea_dot_aol_dot_v2_dot_query__pb2.QueryTopicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Topics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/panacea.aol.v2.Query/Topics',
            panacea_dot_aol_dot_v2_dot_query__pb2.QueryTopicsRequest.SerializeToString,
            panacea_dot_aol_dot_v2_dot_query__pb2.QueryTopicsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Writer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/panacea.aol.v2.Query/Writer',
            panacea_dot_aol_dot_v2_dot_query__pb2.QueryWriterRequest.SerializeToString,
            panacea_dot_aol_dot_v2_dot_query__pb2.QueryWriterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Writers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/panacea.aol.v2.Query/Writers',
            panacea_dot_aol_dot_v2_dot_query__pb2.QueryWritersRequest.SerializeToString,
            panacea_dot_aol_dot_v2_dot_query__pb2.QueryWritersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Record(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/panacea.aol.v2.Query/Record',
            panacea_dot_aol_dot_v2_dot_query__pb2.QueryRecordRequest.SerializeToString,
            panacea_dot_aol_dot_v2_dot_query__pb2.QueryRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

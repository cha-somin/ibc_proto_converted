# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from panacea.did.v2 import tx_pb2 as panacea_dot_did_dot_v2_dot_tx__pb2


class MsgStub(object):
    """Msg defines the Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateDID = channel.unary_unary(
                '/panacea.did.v2.Msg/CreateDID',
                request_serializer=panacea_dot_did_dot_v2_dot_tx__pb2.MsgCreateDID.SerializeToString,
                response_deserializer=panacea_dot_did_dot_v2_dot_tx__pb2.MsgCreateDIDResponse.FromString,
                )
        self.UpdateDID = channel.unary_unary(
                '/panacea.did.v2.Msg/UpdateDID',
                request_serializer=panacea_dot_did_dot_v2_dot_tx__pb2.MsgUpdateDID.SerializeToString,
                response_deserializer=panacea_dot_did_dot_v2_dot_tx__pb2.MsgUpdateDIDResponse.FromString,
                )
        self.DeactivateDID = channel.unary_unary(
                '/panacea.did.v2.Msg/DeactivateDID',
                request_serializer=panacea_dot_did_dot_v2_dot_tx__pb2.MsgDeactivateDID.SerializeToString,
                response_deserializer=panacea_dot_did_dot_v2_dot_tx__pb2.MsgDeactivateDIDResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the Msg service.
    """

    def CreateDID(self, request, context):
        """CreateDID defines a method for creating a DID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDID(self, request, context):
        """UpdateDID defines a method for updating a DID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivateDID(self, request, context):
        """DeactivateDID defines a method for deactivating a DID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateDID': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDID,
                    request_deserializer=panacea_dot_did_dot_v2_dot_tx__pb2.MsgCreateDID.FromString,
                    response_serializer=panacea_dot_did_dot_v2_dot_tx__pb2.MsgCreateDIDResponse.SerializeToString,
            ),
            'UpdateDID': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDID,
                    request_deserializer=panacea_dot_did_dot_v2_dot_tx__pb2.MsgUpdateDID.FromString,
                    response_serializer=panacea_dot_did_dot_v2_dot_tx__pb2.MsgUpdateDIDResponse.SerializeToString,
            ),
            'DeactivateDID': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivateDID,
                    request_deserializer=panacea_dot_did_dot_v2_dot_tx__pb2.MsgDeactivateDID.FromString,
                    response_serializer=panacea_dot_did_dot_v2_dot_tx__pb2.MsgDeactivateDIDResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'panacea.did.v2.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the Msg service.
    """

    @staticmethod
    def CreateDID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/panacea.did.v2.Msg/CreateDID',
            panacea_dot_did_dot_v2_dot_tx__pb2.MsgCreateDID.SerializeToString,
            panacea_dot_did_dot_v2_dot_tx__pb2.MsgCreateDIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/panacea.did.v2.Msg/UpdateDID',
            panacea_dot_did_dot_v2_dot_tx__pb2.MsgUpdateDID.SerializeToString,
            panacea_dot_did_dot_v2_dot_tx__pb2.MsgUpdateDIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeactivateDID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/panacea.did.v2.Msg/DeactivateDID',
            panacea_dot_did_dot_v2_dot_tx__pb2.MsgDeactivateDID.SerializeToString,
            panacea_dot_did_dot_v2_dot_tx__pb2.MsgDeactivateDIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

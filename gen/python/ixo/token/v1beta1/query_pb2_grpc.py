# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ixo.token.v1beta1 import query_pb2 as ixo_dot_token_dot_v1beta1_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/ixo.token.v1beta1.Query/Params',
                request_serializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.TokenList = channel.unary_unary(
                '/ixo.token.v1beta1.Query/TokenList',
                request_serializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenListRequest.SerializeToString,
                response_deserializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenListResponse.FromString,
                )
        self.TokenDoc = channel.unary_unary(
                '/ixo.token.v1beta1.Query/TokenDoc',
                request_serializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenDocRequest.SerializeToString,
                response_deserializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenDocResponse.FromString,
                )
        self.TokenMetadata = channel.unary_unary(
                '/ixo.token.v1beta1.Query/TokenMetadata',
                request_serializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenMetadataRequest.SerializeToString,
                response_deserializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenMetadataResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Params(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TokenList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TokenDoc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TokenMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'TokenList': grpc.unary_unary_rpc_method_handler(
                    servicer.TokenList,
                    request_deserializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenListRequest.FromString,
                    response_serializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenListResponse.SerializeToString,
            ),
            'TokenDoc': grpc.unary_unary_rpc_method_handler(
                    servicer.TokenDoc,
                    request_deserializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenDocRequest.FromString,
                    response_serializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenDocResponse.SerializeToString,
            ),
            'TokenMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.TokenMetadata,
                    request_deserializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenMetadataRequest.FromString,
                    response_serializer=ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenMetadataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ixo.token.v1beta1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ixo.token.v1beta1.Query/Params',
            ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryParamsRequest.SerializeToString,
            ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TokenList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ixo.token.v1beta1.Query/TokenList',
            ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenListRequest.SerializeToString,
            ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TokenDoc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ixo.token.v1beta1.Query/TokenDoc',
            ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenDocRequest.SerializeToString,
            ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenDocResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TokenMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ixo.token.v1beta1.Query/TokenMetadata',
            ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenMetadataRequest.SerializeToString,
            ixo_dot_token_dot_v1beta1_dot_query__pb2.QueryTokenMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

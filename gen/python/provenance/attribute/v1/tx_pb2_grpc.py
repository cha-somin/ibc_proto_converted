# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from provenance.attribute.v1 import tx_pb2 as provenance_dot_attribute_dot_v1_dot_tx__pb2


class MsgStub(object):
    """Msg defines the attribute module Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddAttribute = channel.unary_unary(
                '/provenance.attribute.v1.Msg/AddAttribute',
                request_serializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgAddAttributeRequest.SerializeToString,
                response_deserializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgAddAttributeResponse.FromString,
                )
        self.UpdateAttribute = channel.unary_unary(
                '/provenance.attribute.v1.Msg/UpdateAttribute',
                request_serializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgUpdateAttributeRequest.SerializeToString,
                response_deserializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgUpdateAttributeResponse.FromString,
                )
        self.UpdateAttributeExpiration = channel.unary_unary(
                '/provenance.attribute.v1.Msg/UpdateAttributeExpiration',
                request_serializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgUpdateAttributeExpirationRequest.SerializeToString,
                response_deserializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgUpdateAttributeExpirationResponse.FromString,
                )
        self.DeleteAttribute = channel.unary_unary(
                '/provenance.attribute.v1.Msg/DeleteAttribute',
                request_serializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgDeleteAttributeRequest.SerializeToString,
                response_deserializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgDeleteAttributeResponse.FromString,
                )
        self.DeleteDistinctAttribute = channel.unary_unary(
                '/provenance.attribute.v1.Msg/DeleteDistinctAttribute',
                request_serializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgDeleteDistinctAttributeRequest.SerializeToString,
                response_deserializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgDeleteDistinctAttributeResponse.FromString,
                )
        self.SetAccountData = channel.unary_unary(
                '/provenance.attribute.v1.Msg/SetAccountData',
                request_serializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgSetAccountDataRequest.SerializeToString,
                response_deserializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgSetAccountDataResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the attribute module Msg service.
    """

    def AddAttribute(self, request, context):
        """AddAttribute defines a method to verify a particular invariance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAttribute(self, request, context):
        """UpdateAttribute defines a method to verify a particular invariance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAttributeExpiration(self, request, context):
        """UpdateAttributeExpiration defines a method to verify a particular invariance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAttribute(self, request, context):
        """DeleteAttribute defines a method to verify a particular invariance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDistinctAttribute(self, request, context):
        """DeleteDistinctAttribute defines a method to verify a particular invariance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAccountData(self, request, context):
        """SetAccountData defines a method for setting/updating an account's accountdata attribute.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddAttribute': grpc.unary_unary_rpc_method_handler(
                    servicer.AddAttribute,
                    request_deserializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgAddAttributeRequest.FromString,
                    response_serializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgAddAttributeResponse.SerializeToString,
            ),
            'UpdateAttribute': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAttribute,
                    request_deserializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgUpdateAttributeRequest.FromString,
                    response_serializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgUpdateAttributeResponse.SerializeToString,
            ),
            'UpdateAttributeExpiration': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAttributeExpiration,
                    request_deserializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgUpdateAttributeExpirationRequest.FromString,
                    response_serializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgUpdateAttributeExpirationResponse.SerializeToString,
            ),
            'DeleteAttribute': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAttribute,
                    request_deserializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgDeleteAttributeRequest.FromString,
                    response_serializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgDeleteAttributeResponse.SerializeToString,
            ),
            'DeleteDistinctAttribute': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDistinctAttribute,
                    request_deserializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgDeleteDistinctAttributeRequest.FromString,
                    response_serializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgDeleteDistinctAttributeResponse.SerializeToString,
            ),
            'SetAccountData': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAccountData,
                    request_deserializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgSetAccountDataRequest.FromString,
                    response_serializer=provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgSetAccountDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'provenance.attribute.v1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the attribute module Msg service.
    """

    @staticmethod
    def AddAttribute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.attribute.v1.Msg/AddAttribute',
            provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgAddAttributeRequest.SerializeToString,
            provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgAddAttributeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAttribute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.attribute.v1.Msg/UpdateAttribute',
            provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgUpdateAttributeRequest.SerializeToString,
            provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgUpdateAttributeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAttributeExpiration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.attribute.v1.Msg/UpdateAttributeExpiration',
            provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgUpdateAttributeExpirationRequest.SerializeToString,
            provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgUpdateAttributeExpirationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAttribute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.attribute.v1.Msg/DeleteAttribute',
            provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgDeleteAttributeRequest.SerializeToString,
            provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgDeleteAttributeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDistinctAttribute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.attribute.v1.Msg/DeleteDistinctAttribute',
            provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgDeleteDistinctAttributeRequest.SerializeToString,
            provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgDeleteDistinctAttributeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAccountData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.attribute.v1.Msg/SetAccountData',
            provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgSetAccountDataRequest.SerializeToString,
            provenance_dot_attribute_dot_v1_dot_tx__pb2.MsgSetAccountDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

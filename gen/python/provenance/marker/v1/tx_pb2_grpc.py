# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from provenance.marker.v1 import tx_pb2 as provenance_dot_marker_dot_v1_dot_tx__pb2


class MsgStub(object):
    """Msg defines the Marker Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Finalize = channel.unary_unary(
                '/provenance.marker.v1.Msg/Finalize',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgFinalizeRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgFinalizeResponse.FromString,
                )
        self.Activate = channel.unary_unary(
                '/provenance.marker.v1.Msg/Activate',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgActivateRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgActivateResponse.FromString,
                )
        self.Cancel = channel.unary_unary(
                '/provenance.marker.v1.Msg/Cancel',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgCancelRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgCancelResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/provenance.marker.v1.Msg/Delete',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgDeleteRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgDeleteResponse.FromString,
                )
        self.Mint = channel.unary_unary(
                '/provenance.marker.v1.Msg/Mint',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgMintRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgMintResponse.FromString,
                )
        self.Burn = channel.unary_unary(
                '/provenance.marker.v1.Msg/Burn',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgBurnRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgBurnResponse.FromString,
                )
        self.AddAccess = channel.unary_unary(
                '/provenance.marker.v1.Msg/AddAccess',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddAccessRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddAccessResponse.FromString,
                )
        self.DeleteAccess = channel.unary_unary(
                '/provenance.marker.v1.Msg/DeleteAccess',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgDeleteAccessRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgDeleteAccessResponse.FromString,
                )
        self.Withdraw = channel.unary_unary(
                '/provenance.marker.v1.Msg/Withdraw',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgWithdrawRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgWithdrawResponse.FromString,
                )
        self.AddMarker = channel.unary_unary(
                '/provenance.marker.v1.Msg/AddMarker',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddMarkerRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddMarkerResponse.FromString,
                )
        self.Transfer = channel.unary_unary(
                '/provenance.marker.v1.Msg/Transfer',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgTransferRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgTransferResponse.FromString,
                )
        self.IbcTransfer = channel.unary_unary(
                '/provenance.marker.v1.Msg/IbcTransfer',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgIbcTransferRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgIbcTransferResponse.FromString,
                )
        self.SetDenomMetadata = channel.unary_unary(
                '/provenance.marker.v1.Msg/SetDenomMetadata',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSetDenomMetadataRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSetDenomMetadataResponse.FromString,
                )
        self.GrantAllowance = channel.unary_unary(
                '/provenance.marker.v1.Msg/GrantAllowance',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgGrantAllowanceRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgGrantAllowanceResponse.FromString,
                )
        self.AddFinalizeActivateMarker = channel.unary_unary(
                '/provenance.marker.v1.Msg/AddFinalizeActivateMarker',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddFinalizeActivateMarkerRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddFinalizeActivateMarkerResponse.FromString,
                )
        self.SupplyIncreaseProposal = channel.unary_unary(
                '/provenance.marker.v1.Msg/SupplyIncreaseProposal',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSupplyIncreaseProposalRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSupplyIncreaseProposalResponse.FromString,
                )
        self.UpdateRequiredAttributes = channel.unary_unary(
                '/provenance.marker.v1.Msg/UpdateRequiredAttributes',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgUpdateRequiredAttributesRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgUpdateRequiredAttributesResponse.FromString,
                )
        self.UpdateForcedTransfer = channel.unary_unary(
                '/provenance.marker.v1.Msg/UpdateForcedTransfer',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgUpdateForcedTransferRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgUpdateForcedTransferResponse.FromString,
                )
        self.SetAccountData = channel.unary_unary(
                '/provenance.marker.v1.Msg/SetAccountData',
                request_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSetAccountDataRequest.SerializeToString,
                response_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSetAccountDataResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the Marker Msg service.
    """

    def Finalize(self, request, context):
        """Finalize
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Activate(self, request, context):
        """Activate
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Cancel(self, request, context):
        """Cancel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Mint(self, request, context):
        """Mint
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Burn(self, request, context):
        """Burn
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddAccess(self, request, context):
        """AddAccess
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccess(self, request, context):
        """DeleteAccess
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Withdraw(self, request, context):
        """Withdraw
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMarker(self, request, context):
        """AddMarker
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Transfer(self, request, context):
        """Transfer marker denominated coin between accounts
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IbcTransfer(self, request, context):
        """Transfer over ibc any marker(including restricted markers) between ibc accounts.
        The relayer is still needed to accomplish ibc middleware relays.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDenomMetadata(self, request, context):
        """Allows Denom Metadata (see bank module) to be set for the Marker's Denom
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GrantAllowance(self, request, context):
        """GrantAllowance grants fee allowance to the grantee on the granter's
        account with the provided expiration time.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddFinalizeActivateMarker(self, request, context):
        """AddFinalizeActivateMarker
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SupplyIncreaseProposal(self, request, context):
        """SupplyIncreaseProposal can only be called via gov proposal
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRequiredAttributes(self, request, context):
        """UpdateRequiredAttributes will only succeed if signer has transfer authority
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateForcedTransfer(self, request, context):
        """UpdateForcedTransfer updates the allow_forced_transfer field of a marker via governance proposal.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAccountData(self, request, context):
        """SetAccountData sets the accountdata for a denom. Signer must have deposit authority.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Finalize': grpc.unary_unary_rpc_method_handler(
                    servicer.Finalize,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgFinalizeRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgFinalizeResponse.SerializeToString,
            ),
            'Activate': grpc.unary_unary_rpc_method_handler(
                    servicer.Activate,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgActivateRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgActivateResponse.SerializeToString,
            ),
            'Cancel': grpc.unary_unary_rpc_method_handler(
                    servicer.Cancel,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgCancelRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgCancelResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgDeleteRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgDeleteResponse.SerializeToString,
            ),
            'Mint': grpc.unary_unary_rpc_method_handler(
                    servicer.Mint,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgMintRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgMintResponse.SerializeToString,
            ),
            'Burn': grpc.unary_unary_rpc_method_handler(
                    servicer.Burn,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgBurnRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgBurnResponse.SerializeToString,
            ),
            'AddAccess': grpc.unary_unary_rpc_method_handler(
                    servicer.AddAccess,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddAccessRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddAccessResponse.SerializeToString,
            ),
            'DeleteAccess': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccess,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgDeleteAccessRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgDeleteAccessResponse.SerializeToString,
            ),
            'Withdraw': grpc.unary_unary_rpc_method_handler(
                    servicer.Withdraw,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgWithdrawRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgWithdrawResponse.SerializeToString,
            ),
            'AddMarker': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMarker,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddMarkerRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddMarkerResponse.SerializeToString,
            ),
            'Transfer': grpc.unary_unary_rpc_method_handler(
                    servicer.Transfer,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgTransferRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgTransferResponse.SerializeToString,
            ),
            'IbcTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.IbcTransfer,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgIbcTransferRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgIbcTransferResponse.SerializeToString,
            ),
            'SetDenomMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDenomMetadata,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSetDenomMetadataRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSetDenomMetadataResponse.SerializeToString,
            ),
            'GrantAllowance': grpc.unary_unary_rpc_method_handler(
                    servicer.GrantAllowance,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgGrantAllowanceRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgGrantAllowanceResponse.SerializeToString,
            ),
            'AddFinalizeActivateMarker': grpc.unary_unary_rpc_method_handler(
                    servicer.AddFinalizeActivateMarker,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddFinalizeActivateMarkerRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddFinalizeActivateMarkerResponse.SerializeToString,
            ),
            'SupplyIncreaseProposal': grpc.unary_unary_rpc_method_handler(
                    servicer.SupplyIncreaseProposal,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSupplyIncreaseProposalRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSupplyIncreaseProposalResponse.SerializeToString,
            ),
            'UpdateRequiredAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRequiredAttributes,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgUpdateRequiredAttributesRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgUpdateRequiredAttributesResponse.SerializeToString,
            ),
            'UpdateForcedTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateForcedTransfer,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgUpdateForcedTransferRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgUpdateForcedTransferResponse.SerializeToString,
            ),
            'SetAccountData': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAccountData,
                    request_deserializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSetAccountDataRequest.FromString,
                    response_serializer=provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSetAccountDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'provenance.marker.v1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the Marker Msg service.
    """

    @staticmethod
    def Finalize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/Finalize',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgFinalizeRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgFinalizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Activate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/Activate',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgActivateRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgActivateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Cancel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/Cancel',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgCancelRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgCancelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/Delete',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgDeleteRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Mint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/Mint',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgMintRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgMintResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Burn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/Burn',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgBurnRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgBurnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddAccess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/AddAccess',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddAccessRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddAccessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAccess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/DeleteAccess',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgDeleteAccessRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgDeleteAccessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Withdraw(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/Withdraw',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgWithdrawRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgWithdrawResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddMarker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/AddMarker',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddMarkerRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddMarkerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Transfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/Transfer',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgTransferRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IbcTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/IbcTransfer',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgIbcTransferRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgIbcTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDenomMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/SetDenomMetadata',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSetDenomMetadataRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSetDenomMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GrantAllowance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/GrantAllowance',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgGrantAllowanceRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgGrantAllowanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddFinalizeActivateMarker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/AddFinalizeActivateMarker',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddFinalizeActivateMarkerRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgAddFinalizeActivateMarkerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SupplyIncreaseProposal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/SupplyIncreaseProposal',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSupplyIncreaseProposalRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSupplyIncreaseProposalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRequiredAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/UpdateRequiredAttributes',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgUpdateRequiredAttributesRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgUpdateRequiredAttributesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateForcedTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/UpdateForcedTransfer',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgUpdateForcedTransferRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgUpdateForcedTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAccountData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/provenance.marker.v1.Msg/SetAccountData',
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSetAccountDataRequest.SerializeToString,
            provenance_dot_marker_dot_v1_dot_tx__pb2.MsgSetAccountDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

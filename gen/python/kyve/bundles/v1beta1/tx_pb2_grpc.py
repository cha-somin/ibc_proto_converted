# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from kyve.bundles.v1beta1 import tx_pb2 as kyve_dot_bundles_dot_v1beta1_dot_tx__pb2


class MsgStub(object):
    """Msg defines the Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubmitBundleProposal = channel.unary_unary(
                '/kyve.bundles.v1beta1.Msg/SubmitBundleProposal',
                request_serializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgSubmitBundleProposal.SerializeToString,
                response_deserializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgSubmitBundleProposalResponse.FromString,
                )
        self.VoteBundleProposal = channel.unary_unary(
                '/kyve.bundles.v1beta1.Msg/VoteBundleProposal',
                request_serializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgVoteBundleProposal.SerializeToString,
                response_deserializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgVoteBundleProposalResponse.FromString,
                )
        self.ClaimUploaderRole = channel.unary_unary(
                '/kyve.bundles.v1beta1.Msg/ClaimUploaderRole',
                request_serializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgClaimUploaderRole.SerializeToString,
                response_deserializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgClaimUploaderRoleResponse.FromString,
                )
        self.SkipUploaderRole = channel.unary_unary(
                '/kyve.bundles.v1beta1.Msg/SkipUploaderRole',
                request_serializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgSkipUploaderRole.SerializeToString,
                response_deserializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgSkipUploaderRoleResponse.FromString,
                )
        self.UpdateParams = channel.unary_unary(
                '/kyve.bundles.v1beta1.Msg/UpdateParams',
                request_serializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgUpdateParams.SerializeToString,
                response_deserializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgUpdateParamsResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the Msg service.
    """

    def SubmitBundleProposal(self, request, context):
        """SubmitBundleProposal ...
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoteBundleProposal(self, request, context):
        """VoteBundleProposal ...
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimUploaderRole(self, request, context):
        """ClaimUploaderRole ...
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SkipUploaderRole(self, request, context):
        """SkipUploaderRole ...
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateParams(self, request, context):
        """UpdateParams defines a governance operation for updating the x/bundles module
        parameters. The authority is hard-coded to the x/gov module account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubmitBundleProposal': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitBundleProposal,
                    request_deserializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgSubmitBundleProposal.FromString,
                    response_serializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgSubmitBundleProposalResponse.SerializeToString,
            ),
            'VoteBundleProposal': grpc.unary_unary_rpc_method_handler(
                    servicer.VoteBundleProposal,
                    request_deserializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgVoteBundleProposal.FromString,
                    response_serializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgVoteBundleProposalResponse.SerializeToString,
            ),
            'ClaimUploaderRole': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimUploaderRole,
                    request_deserializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgClaimUploaderRole.FromString,
                    response_serializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgClaimUploaderRoleResponse.SerializeToString,
            ),
            'SkipUploaderRole': grpc.unary_unary_rpc_method_handler(
                    servicer.SkipUploaderRole,
                    request_deserializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgSkipUploaderRole.FromString,
                    response_serializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgSkipUploaderRoleResponse.SerializeToString,
            ),
            'UpdateParams': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateParams,
                    request_deserializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgUpdateParams.FromString,
                    response_serializer=kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgUpdateParamsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kyve.bundles.v1beta1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the Msg service.
    """

    @staticmethod
    def SubmitBundleProposal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kyve.bundles.v1beta1.Msg/SubmitBundleProposal',
            kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgSubmitBundleProposal.SerializeToString,
            kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgSubmitBundleProposalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VoteBundleProposal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kyve.bundles.v1beta1.Msg/VoteBundleProposal',
            kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgVoteBundleProposal.SerializeToString,
            kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgVoteBundleProposalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimUploaderRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kyve.bundles.v1beta1.Msg/ClaimUploaderRole',
            kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgClaimUploaderRole.SerializeToString,
            kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgClaimUploaderRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SkipUploaderRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kyve.bundles.v1beta1.Msg/SkipUploaderRole',
            kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgSkipUploaderRole.SerializeToString,
            kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgSkipUploaderRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kyve.bundles.v1beta1.Msg/UpdateParams',
            kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgUpdateParams.SerializeToString,
            kyve_dot_bundles_dot_v1beta1_dot_tx__pb2.MsgUpdateParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

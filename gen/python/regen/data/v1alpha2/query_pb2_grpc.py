# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from regen.data.v1alpha2 import query_pb2 as regen_dot_data_dot_v1alpha2_dot_query__pb2


class QueryStub(object):
    """Query is the regen.data.v1alpha2 Query service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ByIRI = channel.unary_unary(
                '/regen.data.v1alpha2.Query/ByIRI',
                request_serializer=regen_dot_data_dot_v1alpha2_dot_query__pb2.QueryByIRIRequest.SerializeToString,
                response_deserializer=regen_dot_data_dot_v1alpha2_dot_query__pb2.QueryByIRIResponse.FromString,
                )
        self.BySigner = channel.unary_unary(
                '/regen.data.v1alpha2.Query/BySigner',
                request_serializer=regen_dot_data_dot_v1alpha2_dot_query__pb2.QueryBySignerRequest.SerializeToString,
                response_deserializer=regen_dot_data_dot_v1alpha2_dot_query__pb2.QueryBySignerResponse.FromString,
                )
        self.Signers = channel.unary_unary(
                '/regen.data.v1alpha2.Query/Signers',
                request_serializer=regen_dot_data_dot_v1alpha2_dot_query__pb2.QuerySignersRequest.SerializeToString,
                response_deserializer=regen_dot_data_dot_v1alpha2_dot_query__pb2.QuerySignersResponse.FromString,
                )


class QueryServicer(object):
    """Query is the regen.data.v1alpha2 Query service
    """

    def ByIRI(self, request, context):
        """ByHash queries data based on its ContentHash.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BySigner(self, request, context):
        """BySigner queries data based on signers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Signers(self, request, context):
        """Signers queries signers based on IRI.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ByIRI': grpc.unary_unary_rpc_method_handler(
                    servicer.ByIRI,
                    request_deserializer=regen_dot_data_dot_v1alpha2_dot_query__pb2.QueryByIRIRequest.FromString,
                    response_serializer=regen_dot_data_dot_v1alpha2_dot_query__pb2.QueryByIRIResponse.SerializeToString,
            ),
            'BySigner': grpc.unary_unary_rpc_method_handler(
                    servicer.BySigner,
                    request_deserializer=regen_dot_data_dot_v1alpha2_dot_query__pb2.QueryBySignerRequest.FromString,
                    response_serializer=regen_dot_data_dot_v1alpha2_dot_query__pb2.QueryBySignerResponse.SerializeToString,
            ),
            'Signers': grpc.unary_unary_rpc_method_handler(
                    servicer.Signers,
                    request_deserializer=regen_dot_data_dot_v1alpha2_dot_query__pb2.QuerySignersRequest.FromString,
                    response_serializer=regen_dot_data_dot_v1alpha2_dot_query__pb2.QuerySignersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'regen.data.v1alpha2.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query is the regen.data.v1alpha2 Query service
    """

    @staticmethod
    def ByIRI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/regen.data.v1alpha2.Query/ByIRI',
            regen_dot_data_dot_v1alpha2_dot_query__pb2.QueryByIRIRequest.SerializeToString,
            regen_dot_data_dot_v1alpha2_dot_query__pb2.QueryByIRIResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BySigner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/regen.data.v1alpha2.Query/BySigner',
            regen_dot_data_dot_v1alpha2_dot_query__pb2.QueryBySignerRequest.SerializeToString,
            regen_dot_data_dot_v1alpha2_dot_query__pb2.QueryBySignerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Signers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/regen.data.v1alpha2.Query/Signers',
            regen_dot_data_dot_v1alpha2_dot_query__pb2.QuerySignersRequest.SerializeToString,
            regen_dot_data_dot_v1alpha2_dot_query__pb2.QuerySignersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

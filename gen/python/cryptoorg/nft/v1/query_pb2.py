# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cryptoorg/nft/v1/query.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from cryptoorg.nft.v1 import nft_pb2 as cryptoorg_dot_nft_dot_v1_dot_nft__pb2
from cosmos.base.query.v1beta1 import pagination_pb2 as cosmos_dot_base_dot_query_dot_v1beta1_dot_pagination__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1c\x63ryptoorg/nft/v1/query.proto\x12\x10\x63hainmain.nft.v1\x1a\x14gogoproto/gogo.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1a\x63ryptoorg/nft/v1/nft.proto\x1a*cosmos/base/query/v1beta1/pagination.proto\"Z\n\x12QuerySupplyRequest\x12.\n\x08\x64\x65nom_id\x18\x01 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"denom_id\"R\x07\x64\x65nomId\x12\x14\n\x05owner\x18\x02 \x01(\tR\x05owner\"-\n\x13QuerySupplyResponse\x12\x16\n\x06\x61mount\x18\x01 \x01(\x04R\x06\x61mount\"\xb3\x01\n\x11QueryOwnerRequest\x12.\n\x08\x64\x65nom_id\x18\x01 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"denom_id\"R\x07\x64\x65nomId\x12&\n\x05owner\x18\x02 \x01(\tB\x10\xf2\xde\x1f\x0cyaml:\"owner\"R\x05owner\x12\x46\n\npagination\x18\x03 \x01(\x0b\x32&.cosmos.base.query.v1beta1.PageRequestR\npagination\"\x8c\x01\n\x12QueryOwnerResponse\x12-\n\x05owner\x18\x01 \x01(\x0b\x32\x17.chainmain.nft.v1.OwnerR\x05owner\x12G\n\npagination\x18\x02 \x01(\x0b\x32\'.cosmos.base.query.v1beta1.PageResponseR\npagination\"\x90\x01\n\x16QueryCollectionRequest\x12.\n\x08\x64\x65nom_id\x18\x01 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"denom_id\"R\x07\x64\x65nomId\x12\x46\n\npagination\x18\x02 \x01(\x0b\x32&.cosmos.base.query.v1beta1.PageRequestR\npagination\"\xa0\x01\n\x17QueryCollectionResponse\x12<\n\ncollection\x18\x01 \x01(\x0b\x32\x1c.chainmain.nft.v1.CollectionR\ncollection\x12G\n\npagination\x18\x02 \x01(\x0b\x32\'.cosmos.base.query.v1beta1.PageResponseR\npagination\"C\n\x11QueryDenomRequest\x12.\n\x08\x64\x65nom_id\x18\x01 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"denom_id\"R\x07\x64\x65nomId\"C\n\x12QueryDenomResponse\x12-\n\x05\x64\x65nom\x18\x01 \x01(\x0b\x32\x17.chainmain.nft.v1.DenomR\x05\x64\x65nom\"O\n\x17QueryDenomByNameRequest\x12\x34\n\ndenom_name\x18\x01 \x01(\tB\x15\xf2\xde\x1f\x11yaml:\"denom_name\"R\tdenomName\"I\n\x18QueryDenomByNameResponse\x12-\n\x05\x64\x65nom\x18\x01 \x01(\x0b\x32\x17.chainmain.nft.v1.DenomR\x05\x64\x65nom\"\\\n\x12QueryDenomsRequest\x12\x46\n\npagination\x18\x01 \x01(\x0b\x32&.cosmos.base.query.v1beta1.PageRequestR\npagination\"\x95\x01\n\x13QueryDenomsResponse\x12\x35\n\x06\x64\x65noms\x18\x01 \x03(\x0b\x32\x17.chainmain.nft.v1.DenomB\x04\xc8\xde\x1f\x00R\x06\x64\x65noms\x12G\n\npagination\x18\x02 \x01(\x0b\x32\'.cosmos.base.query.v1beta1.PageResponseR\npagination\"q\n\x0fQueryNFTRequest\x12.\n\x08\x64\x65nom_id\x18\x01 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"denom_id\"R\x07\x64\x65nomId\x12.\n\x08token_id\x18\x02 \x01(\tB\x13\xf2\xde\x1f\x0fyaml:\"token_id\"R\x07tokenId\"H\n\x10QueryNFTResponse\x12\x34\n\x03nft\x18\x01 \x01(\x0b\x32\x19.chainmain.nft.v1.BaseNFTB\x07\xe2\xde\x1f\x03NFTR\x03nft2\xa6\x07\n\x05Query\x12\x8b\x01\n\x06Supply\x12$.chainmain.nft.v1.QuerySupplyRequest\x1a%.chainmain.nft.v1.QuerySupplyResponse\"4\x82\xd3\xe4\x93\x02.\x12,/chainmain/nft/collections/{denom_id}/supply\x12o\n\x05Owner\x12#.chainmain.nft.v1.QueryOwnerRequest\x1a$.chainmain.nft.v1.QueryOwnerResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/chainmain/nft/nfts\x12\x90\x01\n\nCollection\x12(.chainmain.nft.v1.QueryCollectionRequest\x1a).chainmain.nft.v1.QueryCollectionResponse\"-\x82\xd3\xe4\x93\x02\'\x12%/chainmain/nft/collections/{denom_id}\x12|\n\x05\x44\x65nom\x12#.chainmain.nft.v1.QueryDenomRequest\x1a$.chainmain.nft.v1.QueryDenomResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /chainmain/nft/denoms/{denom_id}\x12\x95\x01\n\x0b\x44\x65nomByName\x12).chainmain.nft.v1.QueryDenomByNameRequest\x1a*.chainmain.nft.v1.QueryDenomByNameResponse\"/\x82\xd3\xe4\x93\x02)\x12\'/chainmain/nft/denoms/name/{denom_name}\x12t\n\x06\x44\x65noms\x12$.chainmain.nft.v1.QueryDenomsRequest\x1a%.chainmain.nft.v1.QueryDenomsResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/chainmain/nft/denoms\x12\x7f\n\x03NFT\x12!.chainmain.nft.v1.QueryNFTRequest\x1a\".chainmain.nft.v1.QueryNFTResponse\"1\x82\xd3\xe4\x93\x02+\x12)/chainmain/nft/nfts/{denom_id}/{token_id}B\xb8\x01\n\x14\x63om.chainmain.nft.v1B\nQueryProtoP\x01Z2github.com/crypto-org-chain/chain-main/x/nft/types\xa2\x02\x03\x43NX\xaa\x02\x10\x43hainmain.Nft.V1\xca\x02\x10\x43hainmain\\Nft\\V1\xe2\x02\x1c\x43hainmain\\Nft\\V1\\GPBMetadata\xea\x02\x12\x43hainmain::Nft::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'cryptoorg.nft.v1.query_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\024com.chainmain.nft.v1B\nQueryProtoP\001Z2github.com/crypto-org-chain/chain-main/x/nft/types\242\002\003CNX\252\002\020Chainmain.Nft.V1\312\002\020Chainmain\\Nft\\V1\342\002\034Chainmain\\Nft\\V1\\GPBMetadata\352\002\022Chainmain::Nft::V1'
  _QUERYSUPPLYREQUEST.fields_by_name['denom_id']._options = None
  _QUERYSUPPLYREQUEST.fields_by_name['denom_id']._serialized_options = b'\362\336\037\017yaml:\"denom_id\"'
  _QUERYOWNERREQUEST.fields_by_name['denom_id']._options = None
  _QUERYOWNERREQUEST.fields_by_name['denom_id']._serialized_options = b'\362\336\037\017yaml:\"denom_id\"'
  _QUERYOWNERREQUEST.fields_by_name['owner']._options = None
  _QUERYOWNERREQUEST.fields_by_name['owner']._serialized_options = b'\362\336\037\014yaml:\"owner\"'
  _QUERYCOLLECTIONREQUEST.fields_by_name['denom_id']._options = None
  _QUERYCOLLECTIONREQUEST.fields_by_name['denom_id']._serialized_options = b'\362\336\037\017yaml:\"denom_id\"'
  _QUERYDENOMREQUEST.fields_by_name['denom_id']._options = None
  _QUERYDENOMREQUEST.fields_by_name['denom_id']._serialized_options = b'\362\336\037\017yaml:\"denom_id\"'
  _QUERYDENOMBYNAMEREQUEST.fields_by_name['denom_name']._options = None
  _QUERYDENOMBYNAMEREQUEST.fields_by_name['denom_name']._serialized_options = b'\362\336\037\021yaml:\"denom_name\"'
  _QUERYDENOMSRESPONSE.fields_by_name['denoms']._options = None
  _QUERYDENOMSRESPONSE.fields_by_name['denoms']._serialized_options = b'\310\336\037\000'
  _QUERYNFTREQUEST.fields_by_name['denom_id']._options = None
  _QUERYNFTREQUEST.fields_by_name['denom_id']._serialized_options = b'\362\336\037\017yaml:\"denom_id\"'
  _QUERYNFTREQUEST.fields_by_name['token_id']._options = None
  _QUERYNFTREQUEST.fields_by_name['token_id']._serialized_options = b'\362\336\037\017yaml:\"token_id\"'
  _QUERYNFTRESPONSE.fields_by_name['nft']._options = None
  _QUERYNFTRESPONSE.fields_by_name['nft']._serialized_options = b'\342\336\037\003NFT'
  _QUERY.methods_by_name['Supply']._options = None
  _QUERY.methods_by_name['Supply']._serialized_options = b'\202\323\344\223\002.\022,/chainmain/nft/collections/{denom_id}/supply'
  _QUERY.methods_by_name['Owner']._options = None
  _QUERY.methods_by_name['Owner']._serialized_options = b'\202\323\344\223\002\025\022\023/chainmain/nft/nfts'
  _QUERY.methods_by_name['Collection']._options = None
  _QUERY.methods_by_name['Collection']._serialized_options = b'\202\323\344\223\002\'\022%/chainmain/nft/collections/{denom_id}'
  _QUERY.methods_by_name['Denom']._options = None
  _QUERY.methods_by_name['Denom']._serialized_options = b'\202\323\344\223\002\"\022 /chainmain/nft/denoms/{denom_id}'
  _QUERY.methods_by_name['DenomByName']._options = None
  _QUERY.methods_by_name['DenomByName']._serialized_options = b'\202\323\344\223\002)\022\'/chainmain/nft/denoms/name/{denom_name}'
  _QUERY.methods_by_name['Denoms']._options = None
  _QUERY.methods_by_name['Denoms']._serialized_options = b'\202\323\344\223\002\027\022\025/chainmain/nft/denoms'
  _QUERY.methods_by_name['NFT']._options = None
  _QUERY.methods_by_name['NFT']._serialized_options = b'\202\323\344\223\002+\022)/chainmain/nft/nfts/{denom_id}/{token_id}'
  _globals['_QUERYSUPPLYREQUEST']._serialized_start=174
  _globals['_QUERYSUPPLYREQUEST']._serialized_end=264
  _globals['_QUERYSUPPLYRESPONSE']._serialized_start=266
  _globals['_QUERYSUPPLYRESPONSE']._serialized_end=311
  _globals['_QUERYOWNERREQUEST']._serialized_start=314
  _globals['_QUERYOWNERREQUEST']._serialized_end=493
  _globals['_QUERYOWNERRESPONSE']._serialized_start=496
  _globals['_QUERYOWNERRESPONSE']._serialized_end=636
  _globals['_QUERYCOLLECTIONREQUEST']._serialized_start=639
  _globals['_QUERYCOLLECTIONREQUEST']._serialized_end=783
  _globals['_QUERYCOLLECTIONRESPONSE']._serialized_start=786
  _globals['_QUERYCOLLECTIONRESPONSE']._serialized_end=946
  _globals['_QUERYDENOMREQUEST']._serialized_start=948
  _globals['_QUERYDENOMREQUEST']._serialized_end=1015
  _globals['_QUERYDENOMRESPONSE']._serialized_start=1017
  _globals['_QUERYDENOMRESPONSE']._serialized_end=1084
  _globals['_QUERYDENOMBYNAMEREQUEST']._serialized_start=1086
  _globals['_QUERYDENOMBYNAMEREQUEST']._serialized_end=1165
  _globals['_QUERYDENOMBYNAMERESPONSE']._serialized_start=1167
  _globals['_QUERYDENOMBYNAMERESPONSE']._serialized_end=1240
  _globals['_QUERYDENOMSREQUEST']._serialized_start=1242
  _globals['_QUERYDENOMSREQUEST']._serialized_end=1334
  _globals['_QUERYDENOMSRESPONSE']._serialized_start=1337
  _globals['_QUERYDENOMSRESPONSE']._serialized_end=1486
  _globals['_QUERYNFTREQUEST']._serialized_start=1488
  _globals['_QUERYNFTREQUEST']._serialized_end=1601
  _globals['_QUERYNFTRESPONSE']._serialized_start=1603
  _globals['_QUERYNFTRESPONSE']._serialized_end=1675
  _globals['_QUERY']._serialized_start=1678
  _globals['_QUERY']._serialized_end=2612
# @@protoc_insertion_point(module_scope)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from quicksilver.participationrewards.v1 import messages_pb2 as quicksilver_dot_participationrewards_dot_v1_dot_messages__pb2


class MsgStub(object):
    """Msg defines the participationrewards Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubmitClaim = channel.unary_unary(
                '/quicksilver.participationrewards.v1.Msg/SubmitClaim',
                request_serializer=quicksilver_dot_participationrewards_dot_v1_dot_messages__pb2.MsgSubmitClaim.SerializeToString,
                response_deserializer=quicksilver_dot_participationrewards_dot_v1_dot_messages__pb2.MsgSubmitClaimResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the participationrewards Msg service.
    """

    def SubmitClaim(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubmitClaim': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitClaim,
                    request_deserializer=quicksilver_dot_participationrewards_dot_v1_dot_messages__pb2.MsgSubmitClaim.FromString,
                    response_serializer=quicksilver_dot_participationrewards_dot_v1_dot_messages__pb2.MsgSubmitClaimResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'quicksilver.participationrewards.v1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the participationrewards Msg service.
    """

    @staticmethod
    def SubmitClaim(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/quicksilver.participationrewards.v1.Msg/SubmitClaim',
            quicksilver_dot_participationrewards_dot_v1_dot_messages__pb2.MsgSubmitClaim.SerializeToString,
            quicksilver_dot_participationrewards_dot_v1_dot_messages__pb2.MsgSubmitClaimResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

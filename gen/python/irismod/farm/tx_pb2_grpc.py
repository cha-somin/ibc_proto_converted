# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from irismod.farm import tx_pb2 as irismod_dot_farm_dot_tx__pb2


class MsgStub(object):
    """Msg defines the farm Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePool = channel.unary_unary(
                '/irismod.farm.Msg/CreatePool',
                request_serializer=irismod_dot_farm_dot_tx__pb2.MsgCreatePool.SerializeToString,
                response_deserializer=irismod_dot_farm_dot_tx__pb2.MsgCreatePoolResponse.FromString,
                )
        self.DestroyPool = channel.unary_unary(
                '/irismod.farm.Msg/DestroyPool',
                request_serializer=irismod_dot_farm_dot_tx__pb2.MsgDestroyPool.SerializeToString,
                response_deserializer=irismod_dot_farm_dot_tx__pb2.MsgDestroyPoolResponse.FromString,
                )
        self.AdjustPool = channel.unary_unary(
                '/irismod.farm.Msg/AdjustPool',
                request_serializer=irismod_dot_farm_dot_tx__pb2.MsgAdjustPool.SerializeToString,
                response_deserializer=irismod_dot_farm_dot_tx__pb2.MsgAdjustPoolResponse.FromString,
                )
        self.Stake = channel.unary_unary(
                '/irismod.farm.Msg/Stake',
                request_serializer=irismod_dot_farm_dot_tx__pb2.MsgStake.SerializeToString,
                response_deserializer=irismod_dot_farm_dot_tx__pb2.MsgStakeResponse.FromString,
                )
        self.Unstake = channel.unary_unary(
                '/irismod.farm.Msg/Unstake',
                request_serializer=irismod_dot_farm_dot_tx__pb2.MsgUnstake.SerializeToString,
                response_deserializer=irismod_dot_farm_dot_tx__pb2.MsgUnstakeResponse.FromString,
                )
        self.Harvest = channel.unary_unary(
                '/irismod.farm.Msg/Harvest',
                request_serializer=irismod_dot_farm_dot_tx__pb2.MsgHarvest.SerializeToString,
                response_deserializer=irismod_dot_farm_dot_tx__pb2.MsgHarvestResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the farm Msg service.
    """

    def CreatePool(self, request, context):
        """CreatePool defines a method for creating a new farm pool
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroyPool(self, request, context):
        """DestroyPool defines a method for destroying a existed farm pool
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdjustPool(self, request, context):
        """AdjustPool defines a method for adjusting the farm pool params
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stake(self, request, context):
        """Stake defines a method for staking some lp token to a farm pool
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unstake(self, request, context):
        """Unstake defines a method for unstaking some lp token from a farm pool and
        withdraw some reward
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Harvest(self, request, context):
        """Harvest defines a method withdraw some reward from a farm pool
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePool': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePool,
                    request_deserializer=irismod_dot_farm_dot_tx__pb2.MsgCreatePool.FromString,
                    response_serializer=irismod_dot_farm_dot_tx__pb2.MsgCreatePoolResponse.SerializeToString,
            ),
            'DestroyPool': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroyPool,
                    request_deserializer=irismod_dot_farm_dot_tx__pb2.MsgDestroyPool.FromString,
                    response_serializer=irismod_dot_farm_dot_tx__pb2.MsgDestroyPoolResponse.SerializeToString,
            ),
            'AdjustPool': grpc.unary_unary_rpc_method_handler(
                    servicer.AdjustPool,
                    request_deserializer=irismod_dot_farm_dot_tx__pb2.MsgAdjustPool.FromString,
                    response_serializer=irismod_dot_farm_dot_tx__pb2.MsgAdjustPoolResponse.SerializeToString,
            ),
            'Stake': grpc.unary_unary_rpc_method_handler(
                    servicer.Stake,
                    request_deserializer=irismod_dot_farm_dot_tx__pb2.MsgStake.FromString,
                    response_serializer=irismod_dot_farm_dot_tx__pb2.MsgStakeResponse.SerializeToString,
            ),
            'Unstake': grpc.unary_unary_rpc_method_handler(
                    servicer.Unstake,
                    request_deserializer=irismod_dot_farm_dot_tx__pb2.MsgUnstake.FromString,
                    response_serializer=irismod_dot_farm_dot_tx__pb2.MsgUnstakeResponse.SerializeToString,
            ),
            'Harvest': grpc.unary_unary_rpc_method_handler(
                    servicer.Harvest,
                    request_deserializer=irismod_dot_farm_dot_tx__pb2.MsgHarvest.FromString,
                    response_serializer=irismod_dot_farm_dot_tx__pb2.MsgHarvestResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'irismod.farm.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the farm Msg service.
    """

    @staticmethod
    def CreatePool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.farm.Msg/CreatePool',
            irismod_dot_farm_dot_tx__pb2.MsgCreatePool.SerializeToString,
            irismod_dot_farm_dot_tx__pb2.MsgCreatePoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DestroyPool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.farm.Msg/DestroyPool',
            irismod_dot_farm_dot_tx__pb2.MsgDestroyPool.SerializeToString,
            irismod_dot_farm_dot_tx__pb2.MsgDestroyPoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdjustPool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.farm.Msg/AdjustPool',
            irismod_dot_farm_dot_tx__pb2.MsgAdjustPool.SerializeToString,
            irismod_dot_farm_dot_tx__pb2.MsgAdjustPoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stake(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.farm.Msg/Stake',
            irismod_dot_farm_dot_tx__pb2.MsgStake.SerializeToString,
            irismod_dot_farm_dot_tx__pb2.MsgStakeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unstake(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.farm.Msg/Unstake',
            irismod_dot_farm_dot_tx__pb2.MsgUnstake.SerializeToString,
            irismod_dot_farm_dot_tx__pb2.MsgUnstakeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Harvest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.farm.Msg/Harvest',
            irismod_dot_farm_dot_tx__pb2.MsgHarvest.SerializeToString,
            irismod_dot_farm_dot_tx__pb2.MsgHarvestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from irismod.farm import query_pb2 as irismod_dot_farm_dot_query__pb2


class QueryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FarmPools = channel.unary_unary(
                '/irismod.farm.Query/FarmPools',
                request_serializer=irismod_dot_farm_dot_query__pb2.QueryFarmPoolsRequest.SerializeToString,
                response_deserializer=irismod_dot_farm_dot_query__pb2.QueryFarmPoolsResponse.FromString,
                )
        self.FarmPool = channel.unary_unary(
                '/irismod.farm.Query/FarmPool',
                request_serializer=irismod_dot_farm_dot_query__pb2.QueryFarmPoolRequest.SerializeToString,
                response_deserializer=irismod_dot_farm_dot_query__pb2.QueryFarmPoolResponse.FromString,
                )
        self.Farmer = channel.unary_unary(
                '/irismod.farm.Query/Farmer',
                request_serializer=irismod_dot_farm_dot_query__pb2.QueryFarmerRequest.SerializeToString,
                response_deserializer=irismod_dot_farm_dot_query__pb2.QueryFarmerResponse.FromString,
                )
        self.Params = channel.unary_unary(
                '/irismod.farm.Query/Params',
                request_serializer=irismod_dot_farm_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=irismod_dot_farm_dot_query__pb2.QueryParamsResponse.FromString,
                )


class QueryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FarmPools(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FarmPool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Farmer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Params(self, request, context):
        """Params queries the htlc parameters
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FarmPools': grpc.unary_unary_rpc_method_handler(
                    servicer.FarmPools,
                    request_deserializer=irismod_dot_farm_dot_query__pb2.QueryFarmPoolsRequest.FromString,
                    response_serializer=irismod_dot_farm_dot_query__pb2.QueryFarmPoolsResponse.SerializeToString,
            ),
            'FarmPool': grpc.unary_unary_rpc_method_handler(
                    servicer.FarmPool,
                    request_deserializer=irismod_dot_farm_dot_query__pb2.QueryFarmPoolRequest.FromString,
                    response_serializer=irismod_dot_farm_dot_query__pb2.QueryFarmPoolResponse.SerializeToString,
            ),
            'Farmer': grpc.unary_unary_rpc_method_handler(
                    servicer.Farmer,
                    request_deserializer=irismod_dot_farm_dot_query__pb2.QueryFarmerRequest.FromString,
                    response_serializer=irismod_dot_farm_dot_query__pb2.QueryFarmerResponse.SerializeToString,
            ),
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=irismod_dot_farm_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=irismod_dot_farm_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'irismod.farm.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FarmPools(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.farm.Query/FarmPools',
            irismod_dot_farm_dot_query__pb2.QueryFarmPoolsRequest.SerializeToString,
            irismod_dot_farm_dot_query__pb2.QueryFarmPoolsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FarmPool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.farm.Query/FarmPool',
            irismod_dot_farm_dot_query__pb2.QueryFarmPoolRequest.SerializeToString,
            irismod_dot_farm_dot_query__pb2.QueryFarmPoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Farmer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.farm.Query/Farmer',
            irismod_dot_farm_dot_query__pb2.QueryFarmerRequest.SerializeToString,
            irismod_dot_farm_dot_query__pb2.QueryFarmerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.farm.Query/Params',
            irismod_dot_farm_dot_query__pb2.QueryParamsRequest.SerializeToString,
            irismod_dot_farm_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

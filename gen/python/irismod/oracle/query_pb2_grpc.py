# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from irismod.oracle import query_pb2 as irismod_dot_oracle_dot_query__pb2


class QueryStub(object):
    """Query creates service with guardian as rpc
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Feed = channel.unary_unary(
                '/irismod.oracle.Query/Feed',
                request_serializer=irismod_dot_oracle_dot_query__pb2.QueryFeedRequest.SerializeToString,
                response_deserializer=irismod_dot_oracle_dot_query__pb2.QueryFeedResponse.FromString,
                )
        self.Feeds = channel.unary_unary(
                '/irismod.oracle.Query/Feeds',
                request_serializer=irismod_dot_oracle_dot_query__pb2.QueryFeedsRequest.SerializeToString,
                response_deserializer=irismod_dot_oracle_dot_query__pb2.QueryFeedsResponse.FromString,
                )
        self.FeedValue = channel.unary_unary(
                '/irismod.oracle.Query/FeedValue',
                request_serializer=irismod_dot_oracle_dot_query__pb2.QueryFeedValueRequest.SerializeToString,
                response_deserializer=irismod_dot_oracle_dot_query__pb2.QueryFeedValueResponse.FromString,
                )


class QueryServicer(object):
    """Query creates service with guardian as rpc
    """

    def Feed(self, request, context):
        """Feed queries the feed
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Feeds(self, request, context):
        """Feeds queries the feed list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FeedValue(self, request, context):
        """FeedValue queries the feed value
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Feed': grpc.unary_unary_rpc_method_handler(
                    servicer.Feed,
                    request_deserializer=irismod_dot_oracle_dot_query__pb2.QueryFeedRequest.FromString,
                    response_serializer=irismod_dot_oracle_dot_query__pb2.QueryFeedResponse.SerializeToString,
            ),
            'Feeds': grpc.unary_unary_rpc_method_handler(
                    servicer.Feeds,
                    request_deserializer=irismod_dot_oracle_dot_query__pb2.QueryFeedsRequest.FromString,
                    response_serializer=irismod_dot_oracle_dot_query__pb2.QueryFeedsResponse.SerializeToString,
            ),
            'FeedValue': grpc.unary_unary_rpc_method_handler(
                    servicer.FeedValue,
                    request_deserializer=irismod_dot_oracle_dot_query__pb2.QueryFeedValueRequest.FromString,
                    response_serializer=irismod_dot_oracle_dot_query__pb2.QueryFeedValueResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'irismod.oracle.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query creates service with guardian as rpc
    """

    @staticmethod
    def Feed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.oracle.Query/Feed',
            irismod_dot_oracle_dot_query__pb2.QueryFeedRequest.SerializeToString,
            irismod_dot_oracle_dot_query__pb2.QueryFeedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Feeds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.oracle.Query/Feeds',
            irismod_dot_oracle_dot_query__pb2.QueryFeedsRequest.SerializeToString,
            irismod_dot_oracle_dot_query__pb2.QueryFeedsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FeedValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/irismod.oracle.Query/FeedValue',
            irismod_dot_oracle_dot_query__pb2.QueryFeedValueRequest.SerializeToString,
            irismod_dot_oracle_dot_query__pb2.QueryFeedValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from teritori.airdrop.v1beta1 import tx_pb2 as teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2


class MsgStub(object):
    """Msg defines the staking Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ClaimAllocation = channel.unary_unary(
                '/teritori.airdrop.v1beta1.Msg/ClaimAllocation',
                request_serializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgClaimAllocation.SerializeToString,
                response_deserializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgClaimAllocationResponse.FromString,
                )
        self.SetAllocation = channel.unary_unary(
                '/teritori.airdrop.v1beta1.Msg/SetAllocation',
                request_serializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgSetAllocation.SerializeToString,
                response_deserializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgSetAllocationResponse.FromString,
                )
        self.TransferModuleOwnership = channel.unary_unary(
                '/teritori.airdrop.v1beta1.Msg/TransferModuleOwnership',
                request_serializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgTransferModuleOwnership.SerializeToString,
                response_deserializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgTransferModuleOwnershipResponse.FromString,
                )
        self.DepositTokens = channel.unary_unary(
                '/teritori.airdrop.v1beta1.Msg/DepositTokens',
                request_serializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgDepositTokens.SerializeToString,
                response_deserializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgDepositTokensResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the staking Msg service.
    """

    def ClaimAllocation(self, request, context):
        """ClaimAllocation defines a method to claim allocation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAllocation(self, request, context):
        """SetAllocation defines a method to set allocation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferModuleOwnership(self, request, context):
        """TransferModuleOwnership defines a method to transfer module ownership to other address
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DepositTokens(self, request, context):
        """DepositTokens defines a method to deposit tokens to the module
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ClaimAllocation': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimAllocation,
                    request_deserializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgClaimAllocation.FromString,
                    response_serializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgClaimAllocationResponse.SerializeToString,
            ),
            'SetAllocation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAllocation,
                    request_deserializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgSetAllocation.FromString,
                    response_serializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgSetAllocationResponse.SerializeToString,
            ),
            'TransferModuleOwnership': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferModuleOwnership,
                    request_deserializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgTransferModuleOwnership.FromString,
                    response_serializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgTransferModuleOwnershipResponse.SerializeToString,
            ),
            'DepositTokens': grpc.unary_unary_rpc_method_handler(
                    servicer.DepositTokens,
                    request_deserializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgDepositTokens.FromString,
                    response_serializer=teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgDepositTokensResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'teritori.airdrop.v1beta1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the staking Msg service.
    """

    @staticmethod
    def ClaimAllocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teritori.airdrop.v1beta1.Msg/ClaimAllocation',
            teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgClaimAllocation.SerializeToString,
            teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgClaimAllocationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAllocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teritori.airdrop.v1beta1.Msg/SetAllocation',
            teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgSetAllocation.SerializeToString,
            teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgSetAllocationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferModuleOwnership(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teritori.airdrop.v1beta1.Msg/TransferModuleOwnership',
            teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgTransferModuleOwnership.SerializeToString,
            teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgTransferModuleOwnershipResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DepositTokens(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teritori.airdrop.v1beta1.Msg/DepositTokens',
            teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgDepositTokens.SerializeToString,
            teritori_dot_airdrop_dot_v1beta1_dot_tx__pb2.MsgDepositTokensResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

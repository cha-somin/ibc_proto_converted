# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from kava.auction.v1beta1 import query_pb2 as kava_dot_auction_dot_v1beta1_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service for auction module
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/kava.auction.v1beta1.Query/Params',
                request_serializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.Auction = channel.unary_unary(
                '/kava.auction.v1beta1.Query/Auction',
                request_serializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryAuctionRequest.SerializeToString,
                response_deserializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryAuctionResponse.FromString,
                )
        self.Auctions = channel.unary_unary(
                '/kava.auction.v1beta1.Query/Auctions',
                request_serializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryAuctionsRequest.SerializeToString,
                response_deserializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryAuctionsResponse.FromString,
                )
        self.NextAuctionID = channel.unary_unary(
                '/kava.auction.v1beta1.Query/NextAuctionID',
                request_serializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryNextAuctionIDRequest.SerializeToString,
                response_deserializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryNextAuctionIDResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service for auction module
    """

    def Params(self, request, context):
        """Params queries all parameters of the auction module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Auction(self, request, context):
        """Auction queries an individual Auction by auction ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Auctions(self, request, context):
        """Auctions queries auctions filtered by asset denom, owner address, phase, and auction type
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NextAuctionID(self, request, context):
        """NextAuctionID queries the next auction ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'Auction': grpc.unary_unary_rpc_method_handler(
                    servicer.Auction,
                    request_deserializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryAuctionRequest.FromString,
                    response_serializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryAuctionResponse.SerializeToString,
            ),
            'Auctions': grpc.unary_unary_rpc_method_handler(
                    servicer.Auctions,
                    request_deserializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryAuctionsRequest.FromString,
                    response_serializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryAuctionsResponse.SerializeToString,
            ),
            'NextAuctionID': grpc.unary_unary_rpc_method_handler(
                    servicer.NextAuctionID,
                    request_deserializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryNextAuctionIDRequest.FromString,
                    response_serializer=kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryNextAuctionIDResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kava.auction.v1beta1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service for auction module
    """

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.auction.v1beta1.Query/Params',
            kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryParamsRequest.SerializeToString,
            kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Auction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.auction.v1beta1.Query/Auction',
            kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryAuctionRequest.SerializeToString,
            kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryAuctionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Auctions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.auction.v1beta1.Query/Auctions',
            kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryAuctionsRequest.SerializeToString,
            kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryAuctionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NextAuctionID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.auction.v1beta1.Query/NextAuctionID',
            kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryNextAuctionIDRequest.SerializeToString,
            kava_dot_auction_dot_v1beta1_dot_query__pb2.QueryNextAuctionIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

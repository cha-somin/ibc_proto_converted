# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from kava.committee.v1beta1 import query_pb2 as kava_dot_committee_dot_v1beta1_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service for committee module
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Committees = channel.unary_unary(
                '/kava.committee.v1beta1.Query/Committees',
                request_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryCommitteesRequest.SerializeToString,
                response_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryCommitteesResponse.FromString,
                )
        self.Committee = channel.unary_unary(
                '/kava.committee.v1beta1.Query/Committee',
                request_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryCommitteeRequest.SerializeToString,
                response_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryCommitteeResponse.FromString,
                )
        self.Proposals = channel.unary_unary(
                '/kava.committee.v1beta1.Query/Proposals',
                request_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryProposalsRequest.SerializeToString,
                response_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryProposalsResponse.FromString,
                )
        self.Proposal = channel.unary_unary(
                '/kava.committee.v1beta1.Query/Proposal',
                request_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryProposalRequest.SerializeToString,
                response_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryProposalResponse.FromString,
                )
        self.NextProposalID = channel.unary_unary(
                '/kava.committee.v1beta1.Query/NextProposalID',
                request_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryNextProposalIDRequest.SerializeToString,
                response_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryNextProposalIDResponse.FromString,
                )
        self.Votes = channel.unary_unary(
                '/kava.committee.v1beta1.Query/Votes',
                request_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryVotesRequest.SerializeToString,
                response_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryVotesResponse.FromString,
                )
        self.Vote = channel.unary_unary(
                '/kava.committee.v1beta1.Query/Vote',
                request_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryVoteRequest.SerializeToString,
                response_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryVoteResponse.FromString,
                )
        self.Tally = channel.unary_unary(
                '/kava.committee.v1beta1.Query/Tally',
                request_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryTallyRequest.SerializeToString,
                response_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryTallyResponse.FromString,
                )
        self.RawParams = channel.unary_unary(
                '/kava.committee.v1beta1.Query/RawParams',
                request_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryRawParamsRequest.SerializeToString,
                response_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryRawParamsResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service for committee module
    """

    def Committees(self, request, context):
        """Committees queries all committess of the committee module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Committee(self, request, context):
        """Committee queries a committee based on committee ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Proposals(self, request, context):
        """Proposals queries proposals based on committee ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Proposal(self, request, context):
        """Deposits queries a proposal based on proposal ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NextProposalID(self, request, context):
        """NextProposalID queries the next proposal ID of the committee module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Votes(self, request, context):
        """Votes queries all votes for a single proposal ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Vote(self, request, context):
        """Vote queries the vote of a single voter for a single proposal ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Tally(self, request, context):
        """Tally queries the tally of a single proposal ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RawParams(self, request, context):
        """RawParams queries the raw params data of any subspace and key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Committees': grpc.unary_unary_rpc_method_handler(
                    servicer.Committees,
                    request_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryCommitteesRequest.FromString,
                    response_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryCommitteesResponse.SerializeToString,
            ),
            'Committee': grpc.unary_unary_rpc_method_handler(
                    servicer.Committee,
                    request_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryCommitteeRequest.FromString,
                    response_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryCommitteeResponse.SerializeToString,
            ),
            'Proposals': grpc.unary_unary_rpc_method_handler(
                    servicer.Proposals,
                    request_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryProposalsRequest.FromString,
                    response_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryProposalsResponse.SerializeToString,
            ),
            'Proposal': grpc.unary_unary_rpc_method_handler(
                    servicer.Proposal,
                    request_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryProposalRequest.FromString,
                    response_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryProposalResponse.SerializeToString,
            ),
            'NextProposalID': grpc.unary_unary_rpc_method_handler(
                    servicer.NextProposalID,
                    request_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryNextProposalIDRequest.FromString,
                    response_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryNextProposalIDResponse.SerializeToString,
            ),
            'Votes': grpc.unary_unary_rpc_method_handler(
                    servicer.Votes,
                    request_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryVotesRequest.FromString,
                    response_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryVotesResponse.SerializeToString,
            ),
            'Vote': grpc.unary_unary_rpc_method_handler(
                    servicer.Vote,
                    request_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryVoteRequest.FromString,
                    response_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryVoteResponse.SerializeToString,
            ),
            'Tally': grpc.unary_unary_rpc_method_handler(
                    servicer.Tally,
                    request_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryTallyRequest.FromString,
                    response_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryTallyResponse.SerializeToString,
            ),
            'RawParams': grpc.unary_unary_rpc_method_handler(
                    servicer.RawParams,
                    request_deserializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryRawParamsRequest.FromString,
                    response_serializer=kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryRawParamsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kava.committee.v1beta1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service for committee module
    """

    @staticmethod
    def Committees(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.committee.v1beta1.Query/Committees',
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryCommitteesRequest.SerializeToString,
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryCommitteesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Committee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.committee.v1beta1.Query/Committee',
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryCommitteeRequest.SerializeToString,
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryCommitteeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Proposals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.committee.v1beta1.Query/Proposals',
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryProposalsRequest.SerializeToString,
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryProposalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Proposal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.committee.v1beta1.Query/Proposal',
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryProposalRequest.SerializeToString,
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryProposalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NextProposalID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.committee.v1beta1.Query/NextProposalID',
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryNextProposalIDRequest.SerializeToString,
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryNextProposalIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Votes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.committee.v1beta1.Query/Votes',
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryVotesRequest.SerializeToString,
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryVotesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Vote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.committee.v1beta1.Query/Vote',
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryVoteRequest.SerializeToString,
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryVoteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Tally(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.committee.v1beta1.Query/Tally',
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryTallyRequest.SerializeToString,
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryTallyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RawParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.committee.v1beta1.Query/RawParams',
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryRawParamsRequest.SerializeToString,
            kava_dot_committee_dot_v1beta1_dot_query__pb2.QueryRawParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

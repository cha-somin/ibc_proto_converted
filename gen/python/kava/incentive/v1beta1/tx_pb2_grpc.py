# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from kava.incentive.v1beta1 import tx_pb2 as kava_dot_incentive_dot_v1beta1_dot_tx__pb2


class MsgStub(object):
    """Msg defines the incentive Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ClaimUSDXMintingReward = channel.unary_unary(
                '/kava.incentive.v1beta1.Msg/ClaimUSDXMintingReward',
                request_serializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimUSDXMintingReward.SerializeToString,
                response_deserializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimUSDXMintingRewardResponse.FromString,
                )
        self.ClaimHardReward = channel.unary_unary(
                '/kava.incentive.v1beta1.Msg/ClaimHardReward',
                request_serializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimHardReward.SerializeToString,
                response_deserializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimHardRewardResponse.FromString,
                )
        self.ClaimDelegatorReward = channel.unary_unary(
                '/kava.incentive.v1beta1.Msg/ClaimDelegatorReward',
                request_serializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimDelegatorReward.SerializeToString,
                response_deserializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimDelegatorRewardResponse.FromString,
                )
        self.ClaimSwapReward = channel.unary_unary(
                '/kava.incentive.v1beta1.Msg/ClaimSwapReward',
                request_serializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimSwapReward.SerializeToString,
                response_deserializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimSwapRewardResponse.FromString,
                )
        self.ClaimSavingsReward = channel.unary_unary(
                '/kava.incentive.v1beta1.Msg/ClaimSavingsReward',
                request_serializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimSavingsReward.SerializeToString,
                response_deserializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimSavingsRewardResponse.FromString,
                )
        self.ClaimEarnReward = channel.unary_unary(
                '/kava.incentive.v1beta1.Msg/ClaimEarnReward',
                request_serializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimEarnReward.SerializeToString,
                response_deserializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimEarnRewardResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the incentive Msg service.
    """

    def ClaimUSDXMintingReward(self, request, context):
        """ClaimUSDXMintingReward is a message type used to claim USDX minting rewards
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimHardReward(self, request, context):
        """ClaimHardReward is a message type used to claim Hard liquidity provider rewards
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimDelegatorReward(self, request, context):
        """ClaimDelegatorReward is a message type used to claim delegator rewards
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimSwapReward(self, request, context):
        """ClaimSwapReward is a message type used to claim swap rewards
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimSavingsReward(self, request, context):
        """ClaimSavingsReward is a message type used to claim savings rewards
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimEarnReward(self, request, context):
        """ClaimEarnReward is a message type used to claim earn rewards
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ClaimUSDXMintingReward': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimUSDXMintingReward,
                    request_deserializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimUSDXMintingReward.FromString,
                    response_serializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimUSDXMintingRewardResponse.SerializeToString,
            ),
            'ClaimHardReward': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimHardReward,
                    request_deserializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimHardReward.FromString,
                    response_serializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimHardRewardResponse.SerializeToString,
            ),
            'ClaimDelegatorReward': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimDelegatorReward,
                    request_deserializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimDelegatorReward.FromString,
                    response_serializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimDelegatorRewardResponse.SerializeToString,
            ),
            'ClaimSwapReward': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimSwapReward,
                    request_deserializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimSwapReward.FromString,
                    response_serializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimSwapRewardResponse.SerializeToString,
            ),
            'ClaimSavingsReward': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimSavingsReward,
                    request_deserializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimSavingsReward.FromString,
                    response_serializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimSavingsRewardResponse.SerializeToString,
            ),
            'ClaimEarnReward': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimEarnReward,
                    request_deserializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimEarnReward.FromString,
                    response_serializer=kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimEarnRewardResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kava.incentive.v1beta1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the incentive Msg service.
    """

    @staticmethod
    def ClaimUSDXMintingReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.incentive.v1beta1.Msg/ClaimUSDXMintingReward',
            kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimUSDXMintingReward.SerializeToString,
            kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimUSDXMintingRewardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimHardReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.incentive.v1beta1.Msg/ClaimHardReward',
            kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimHardReward.SerializeToString,
            kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimHardRewardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimDelegatorReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.incentive.v1beta1.Msg/ClaimDelegatorReward',
            kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimDelegatorReward.SerializeToString,
            kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimDelegatorRewardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimSwapReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.incentive.v1beta1.Msg/ClaimSwapReward',
            kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimSwapReward.SerializeToString,
            kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimSwapRewardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimSavingsReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.incentive.v1beta1.Msg/ClaimSavingsReward',
            kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimSavingsReward.SerializeToString,
            kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimSavingsRewardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimEarnReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kava.incentive.v1beta1.Msg/ClaimEarnReward',
            kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimEarnReward.SerializeToString,
            kava_dot_incentive_dot_v1beta1_dot_tx__pb2.MsgClaimEarnRewardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

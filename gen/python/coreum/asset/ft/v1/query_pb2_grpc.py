# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from coreum.asset.ft.v1 import query_pb2 as coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/coreum.asset.ft.v1.Query/Params',
                request_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.Tokens = channel.unary_unary(
                '/coreum.asset.ft.v1.Query/Tokens',
                request_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryTokensRequest.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryTokensResponse.FromString,
                )
        self.Token = channel.unary_unary(
                '/coreum.asset.ft.v1.Query/Token',
                request_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryTokenRequest.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryTokenResponse.FromString,
                )
        self.Balance = channel.unary_unary(
                '/coreum.asset.ft.v1.Query/Balance',
                request_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryBalanceRequest.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryBalanceResponse.FromString,
                )
        self.FrozenBalances = channel.unary_unary(
                '/coreum.asset.ft.v1.Query/FrozenBalances',
                request_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryFrozenBalancesRequest.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryFrozenBalancesResponse.FromString,
                )
        self.FrozenBalance = channel.unary_unary(
                '/coreum.asset.ft.v1.Query/FrozenBalance',
                request_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryFrozenBalanceRequest.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryFrozenBalanceResponse.FromString,
                )
        self.WhitelistedBalances = channel.unary_unary(
                '/coreum.asset.ft.v1.Query/WhitelistedBalances',
                request_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryWhitelistedBalancesRequest.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryWhitelistedBalancesResponse.FromString,
                )
        self.WhitelistedBalance = channel.unary_unary(
                '/coreum.asset.ft.v1.Query/WhitelistedBalance',
                request_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryWhitelistedBalanceRequest.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryWhitelistedBalanceResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Params(self, request, context):
        """Params queries the parameters of x/asset/ft module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Tokens(self, request, context):
        """Tokens queries the fungible tokens of the module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Token(self, request, context):
        """Token queries the fungible token of the module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Balance(self, request, context):
        """Balance returns balance of the denom for the account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FrozenBalances(self, request, context):
        """FrozenBalances returns all the frozen balances for the account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FrozenBalance(self, request, context):
        """FrozenBalance returns frozen balance of the denom for the account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WhitelistedBalances(self, request, context):
        """WhitelistedBalances returns all the whitelisted balances for the account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WhitelistedBalance(self, request, context):
        """WhitelistedBalance returns whitelisted balance of the denom for the account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'Tokens': grpc.unary_unary_rpc_method_handler(
                    servicer.Tokens,
                    request_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryTokensRequest.FromString,
                    response_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryTokensResponse.SerializeToString,
            ),
            'Token': grpc.unary_unary_rpc_method_handler(
                    servicer.Token,
                    request_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryTokenRequest.FromString,
                    response_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryTokenResponse.SerializeToString,
            ),
            'Balance': grpc.unary_unary_rpc_method_handler(
                    servicer.Balance,
                    request_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryBalanceRequest.FromString,
                    response_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryBalanceResponse.SerializeToString,
            ),
            'FrozenBalances': grpc.unary_unary_rpc_method_handler(
                    servicer.FrozenBalances,
                    request_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryFrozenBalancesRequest.FromString,
                    response_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryFrozenBalancesResponse.SerializeToString,
            ),
            'FrozenBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.FrozenBalance,
                    request_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryFrozenBalanceRequest.FromString,
                    response_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryFrozenBalanceResponse.SerializeToString,
            ),
            'WhitelistedBalances': grpc.unary_unary_rpc_method_handler(
                    servicer.WhitelistedBalances,
                    request_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryWhitelistedBalancesRequest.FromString,
                    response_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryWhitelistedBalancesResponse.SerializeToString,
            ),
            'WhitelistedBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.WhitelistedBalance,
                    request_deserializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryWhitelistedBalanceRequest.FromString,
                    response_serializer=coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryWhitelistedBalanceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'coreum.asset.ft.v1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.ft.v1.Query/Params',
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryParamsRequest.SerializeToString,
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Tokens(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.ft.v1.Query/Tokens',
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryTokensRequest.SerializeToString,
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryTokensResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Token(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.ft.v1.Query/Token',
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryTokenRequest.SerializeToString,
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Balance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.ft.v1.Query/Balance',
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryBalanceRequest.SerializeToString,
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FrozenBalances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.ft.v1.Query/FrozenBalances',
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryFrozenBalancesRequest.SerializeToString,
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryFrozenBalancesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FrozenBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.ft.v1.Query/FrozenBalance',
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryFrozenBalanceRequest.SerializeToString,
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryFrozenBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WhitelistedBalances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.ft.v1.Query/WhitelistedBalances',
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryWhitelistedBalancesRequest.SerializeToString,
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryWhitelistedBalancesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WhitelistedBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.ft.v1.Query/WhitelistedBalance',
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryWhitelistedBalanceRequest.SerializeToString,
            coreum_dot_asset_dot_ft_dot_v1_dot_query__pb2.QueryWhitelistedBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from coreum.asset.nft.v1 import tx_pb2 as coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2


class MsgStub(object):
    """Msg defines the Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IssueClass = channel.unary_unary(
                '/coreum.asset.nft.v1.Msg/IssueClass',
                request_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgIssueClass.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
                )
        self.Mint = channel.unary_unary(
                '/coreum.asset.nft.v1.Msg/Mint',
                request_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgMint.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
                )
        self.Burn = channel.unary_unary(
                '/coreum.asset.nft.v1.Msg/Burn',
                request_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgBurn.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
                )
        self.Freeze = channel.unary_unary(
                '/coreum.asset.nft.v1.Msg/Freeze',
                request_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgFreeze.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
                )
        self.Unfreeze = channel.unary_unary(
                '/coreum.asset.nft.v1.Msg/Unfreeze',
                request_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgUnfreeze.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
                )
        self.AddToWhitelist = channel.unary_unary(
                '/coreum.asset.nft.v1.Msg/AddToWhitelist',
                request_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgAddToWhitelist.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
                )
        self.RemoveFromWhitelist = channel.unary_unary(
                '/coreum.asset.nft.v1.Msg/RemoveFromWhitelist',
                request_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgRemoveFromWhitelist.SerializeToString,
                response_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the Msg service.
    """

    def IssueClass(self, request, context):
        """IssueClass creates new non-fungible token class.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Mint(self, request, context):
        """Mint mints new non-fungible token in the class.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Burn(self, request, context):
        """Burn burns the existing non-fungible token in the class.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Freeze(self, request, context):
        """Freeze freezes an NFT
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unfreeze(self, request, context):
        """Unfreeze removes the freeze effect already put on an NFT
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddToWhitelist(self, request, context):
        """AddToWhitelist sets the account as whitelisted to hold the NFT
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveFromWhitelist(self, request, context):
        """RemoveFromWhitelist removes an account from whitelisted list of the NFT
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IssueClass': grpc.unary_unary_rpc_method_handler(
                    servicer.IssueClass,
                    request_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgIssueClass.FromString,
                    response_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.SerializeToString,
            ),
            'Mint': grpc.unary_unary_rpc_method_handler(
                    servicer.Mint,
                    request_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgMint.FromString,
                    response_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.SerializeToString,
            ),
            'Burn': grpc.unary_unary_rpc_method_handler(
                    servicer.Burn,
                    request_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgBurn.FromString,
                    response_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.SerializeToString,
            ),
            'Freeze': grpc.unary_unary_rpc_method_handler(
                    servicer.Freeze,
                    request_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgFreeze.FromString,
                    response_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.SerializeToString,
            ),
            'Unfreeze': grpc.unary_unary_rpc_method_handler(
                    servicer.Unfreeze,
                    request_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgUnfreeze.FromString,
                    response_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.SerializeToString,
            ),
            'AddToWhitelist': grpc.unary_unary_rpc_method_handler(
                    servicer.AddToWhitelist,
                    request_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgAddToWhitelist.FromString,
                    response_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.SerializeToString,
            ),
            'RemoveFromWhitelist': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveFromWhitelist,
                    request_deserializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgRemoveFromWhitelist.FromString,
                    response_serializer=coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'coreum.asset.nft.v1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the Msg service.
    """

    @staticmethod
    def IssueClass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.nft.v1.Msg/IssueClass',
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgIssueClass.SerializeToString,
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Mint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.nft.v1.Msg/Mint',
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgMint.SerializeToString,
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Burn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.nft.v1.Msg/Burn',
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgBurn.SerializeToString,
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Freeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.nft.v1.Msg/Freeze',
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgFreeze.SerializeToString,
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unfreeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.nft.v1.Msg/Unfreeze',
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgUnfreeze.SerializeToString,
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddToWhitelist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.nft.v1.Msg/AddToWhitelist',
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgAddToWhitelist.SerializeToString,
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveFromWhitelist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coreum.asset.nft.v1.Msg/RemoveFromWhitelist',
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.MsgRemoveFromWhitelist.SerializeToString,
            coreum_dot_asset_dot_nft_dot_v1_dot_tx__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

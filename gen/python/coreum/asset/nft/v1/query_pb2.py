# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: coreum/asset/nft/v1/query.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from coreum.asset.nft.v1 import nft_pb2 as coreum_dot_asset_dot_nft_dot_v1_dot_nft__pb2
from coreum.asset.nft.v1 import params_pb2 as coreum_dot_asset_dot_nft_dot_v1_dot_params__pb2
from cosmos.base.query.v1beta1 import pagination_pb2 as cosmos_dot_base_dot_query_dot_v1beta1_dot_pagination__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1f\x63oreum/asset/nft/v1/query.proto\x12\x13\x63oreum.asset.nft.v1\x1a\x14gogoproto/gogo.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1d\x63oreum/asset/nft/v1/nft.proto\x1a coreum/asset/nft/v1/params.proto\x1a*cosmos/base/query/v1beta1/pagination.proto\"\x14\n\x12QueryParamsRequest\"P\n\x13QueryParamsResponse\x12\x39\n\x06params\x18\x01 \x01(\x0b\x32\x1b.coreum.asset.nft.v1.ParamsB\x04\xc8\xde\x1f\x00R\x06params\"#\n\x11QueryClassRequest\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\"L\n\x12QueryClassResponse\x12\x36\n\x05\x63lass\x18\x01 \x01(\x0b\x32\x1a.coreum.asset.nft.v1.ClassB\x04\xc8\xde\x1f\x00R\x05\x63lass\"u\n\x13QueryClassesRequest\x12\x46\n\npagination\x18\x01 \x01(\x0b\x32&.cosmos.base.query.v1beta1.PageRequestR\npagination\x12\x16\n\x06issuer\x18\x02 \x01(\tR\x06issuer\"\x9b\x01\n\x14QueryClassesResponse\x12G\n\npagination\x18\x01 \x01(\x0b\x32\'.cosmos.base.query.v1beta1.PageResponseR\npagination\x12:\n\x07\x63lasses\x18\x02 \x03(\x0b\x32\x1a.coreum.asset.nft.v1.ClassB\x04\xc8\xde\x1f\x00R\x07\x63lasses\"?\n\x12QueryFrozenRequest\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n\x08\x63lass_id\x18\x02 \x01(\tR\x07\x63lassId\"-\n\x13QueryFrozenResponse\x12\x16\n\x06\x66rozen\x18\x01 \x01(\x08R\x06\x66rozen\"^\n\x17QueryWhitelistedRequest\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n\x08\x63lass_id\x18\x02 \x01(\tR\x07\x63lassId\x12\x18\n\x07\x61\x63\x63ount\x18\x03 \x01(\tR\x07\x61\x63\x63ount\"<\n\x18QueryWhitelistedResponse\x12 \n\x0bwhitelisted\x18\x01 \x01(\x08R\x0bwhitelisted\"\x9a\x01\n%QueryWhitelistedAccountsForNFTRequest\x12\x46\n\npagination\x18\x01 \x01(\x0b\x32&.cosmos.base.query.v1beta1.PageRequestR\npagination\x12\x0e\n\x02id\x18\x02 \x01(\tR\x02id\x12\x19\n\x08\x63lass_id\x18\x03 \x01(\tR\x07\x63lassId\"\x8d\x01\n&QueryWhitelistedAccountsForNFTResponse\x12G\n\npagination\x18\x01 \x01(\x0b\x32\'.cosmos.base.query.v1beta1.PageResponseR\npagination\x12\x1a\n\x08\x61\x63\x63ounts\x18\x02 \x03(\tR\x08\x61\x63\x63ounts2\xd3\x07\n\x05Query\x12\x80\x01\n\x06Params\x12\'.coreum.asset.nft.v1.QueryParamsRequest\x1a(.coreum.asset.nft.v1.QueryParamsResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/coreum/asset/nft/v1/params\x12\x83\x01\n\x05\x43lass\x12&.coreum.asset.nft.v1.QueryClassRequest\x1a\'.coreum.asset.nft.v1.QueryClassResponse\")\x82\xd3\xe4\x93\x02#\x12!/coreum/asset/nft/v1/classes/{id}\x12\x84\x01\n\x07\x43lasses\x12(.coreum.asset.nft.v1.QueryClassesRequest\x1a).coreum.asset.nft.v1.QueryClassesResponse\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/coreum/asset/nft/v1/classes\x12\x9d\x01\n\x06\x46rozen\x12\'.coreum.asset.nft.v1.QueryFrozenRequest\x1a(.coreum.asset.nft.v1.QueryFrozenResponse\"@\x82\xd3\xe4\x93\x02:\x12\x38/coreum/asset/nft/v1/classes/{class_id}/nfts/{id}/frozen\x12\xbb\x01\n\x0bWhitelisted\x12,.coreum.asset.nft.v1.QueryWhitelistedRequest\x1a-.coreum.asset.nft.v1.QueryWhitelistedResponse\"O\x82\xd3\xe4\x93\x02I\x12G/coreum/asset/nft/v1/classes/{class_id}/nfts/{id}/whitelisted/{account}\x12\xdb\x01\n\x19WhitelistedAccountsForNFT\x12:.coreum.asset.nft.v1.QueryWhitelistedAccountsForNFTRequest\x1a;.coreum.asset.nft.v1.QueryWhitelistedAccountsForNFTResponse\"E\x82\xd3\xe4\x93\x02?\x12=/coreum/asset/nft/v1/classes/{class_id}/nfts/{id}/whitelistedB\xc8\x01\n\x17\x63om.coreum.asset.nft.v1B\nQueryProtoZ4github.com/CoreumFoundation/coreum/x/asset/nft/types\xa2\x02\x03\x43\x41N\xaa\x02\x13\x43oreum.Asset.Nft.V1\xca\x02\x13\x43oreum\\Asset\\Nft\\V1\xe2\x02\x1f\x43oreum\\Asset\\Nft\\V1\\GPBMetadata\xea\x02\x16\x43oreum::Asset::Nft::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'coreum.asset.nft.v1.query_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\027com.coreum.asset.nft.v1B\nQueryProtoZ4github.com/CoreumFoundation/coreum/x/asset/nft/types\242\002\003CAN\252\002\023Coreum.Asset.Nft.V1\312\002\023Coreum\\Asset\\Nft\\V1\342\002\037Coreum\\Asset\\Nft\\V1\\GPBMetadata\352\002\026Coreum::Asset::Nft::V1'
  _QUERYPARAMSRESPONSE.fields_by_name['params']._options = None
  _QUERYPARAMSRESPONSE.fields_by_name['params']._serialized_options = b'\310\336\037\000'
  _QUERYCLASSRESPONSE.fields_by_name['class']._options = None
  _QUERYCLASSRESPONSE.fields_by_name['class']._serialized_options = b'\310\336\037\000'
  _QUERYCLASSESRESPONSE.fields_by_name['classes']._options = None
  _QUERYCLASSESRESPONSE.fields_by_name['classes']._serialized_options = b'\310\336\037\000'
  _QUERY.methods_by_name['Params']._options = None
  _QUERY.methods_by_name['Params']._serialized_options = b'\202\323\344\223\002\035\022\033/coreum/asset/nft/v1/params'
  _QUERY.methods_by_name['Class']._options = None
  _QUERY.methods_by_name['Class']._serialized_options = b'\202\323\344\223\002#\022!/coreum/asset/nft/v1/classes/{id}'
  _QUERY.methods_by_name['Classes']._options = None
  _QUERY.methods_by_name['Classes']._serialized_options = b'\202\323\344\223\002\036\022\034/coreum/asset/nft/v1/classes'
  _QUERY.methods_by_name['Frozen']._options = None
  _QUERY.methods_by_name['Frozen']._serialized_options = b'\202\323\344\223\002:\0228/coreum/asset/nft/v1/classes/{class_id}/nfts/{id}/frozen'
  _QUERY.methods_by_name['Whitelisted']._options = None
  _QUERY.methods_by_name['Whitelisted']._serialized_options = b'\202\323\344\223\002I\022G/coreum/asset/nft/v1/classes/{class_id}/nfts/{id}/whitelisted/{account}'
  _QUERY.methods_by_name['WhitelistedAccountsForNFT']._options = None
  _QUERY.methods_by_name['WhitelistedAccountsForNFT']._serialized_options = b'\202\323\344\223\002?\022=/coreum/asset/nft/v1/classes/{class_id}/nfts/{id}/whitelisted'
  _globals['_QUERYPARAMSREQUEST']._serialized_start=217
  _globals['_QUERYPARAMSREQUEST']._serialized_end=237
  _globals['_QUERYPARAMSRESPONSE']._serialized_start=239
  _globals['_QUERYPARAMSRESPONSE']._serialized_end=319
  _globals['_QUERYCLASSREQUEST']._serialized_start=321
  _globals['_QUERYCLASSREQUEST']._serialized_end=356
  _globals['_QUERYCLASSRESPONSE']._serialized_start=358
  _globals['_QUERYCLASSRESPONSE']._serialized_end=434
  _globals['_QUERYCLASSESREQUEST']._serialized_start=436
  _globals['_QUERYCLASSESREQUEST']._serialized_end=553
  _globals['_QUERYCLASSESRESPONSE']._serialized_start=556
  _globals['_QUERYCLASSESRESPONSE']._serialized_end=711
  _globals['_QUERYFROZENREQUEST']._serialized_start=713
  _globals['_QUERYFROZENREQUEST']._serialized_end=776
  _globals['_QUERYFROZENRESPONSE']._serialized_start=778
  _globals['_QUERYFROZENRESPONSE']._serialized_end=823
  _globals['_QUERYWHITELISTEDREQUEST']._serialized_start=825
  _globals['_QUERYWHITELISTEDREQUEST']._serialized_end=919
  _globals['_QUERYWHITELISTEDRESPONSE']._serialized_start=921
  _globals['_QUERYWHITELISTEDRESPONSE']._serialized_end=981
  _globals['_QUERYWHITELISTEDACCOUNTSFORNFTREQUEST']._serialized_start=984
  _globals['_QUERYWHITELISTEDACCOUNTSFORNFTREQUEST']._serialized_end=1138
  _globals['_QUERYWHITELISTEDACCOUNTSFORNFTRESPONSE']._serialized_start=1141
  _globals['_QUERYWHITELISTEDACCOUNTSFORNFTRESPONSE']._serialized_end=1282
  _globals['_QUERY']._serialized_start=1285
  _globals['_QUERY']._serialized_end=2264
# @@protoc_insertion_point(module_scope)

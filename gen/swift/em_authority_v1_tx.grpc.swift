//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: em/authority/v1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Em_Authority_V1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Em_Authority_V1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Em_Authority_V1_MsgClientInterceptorFactoryProtocol? { get }

  func createIssuer(
    _ request: Em_Authority_V1_MsgCreateIssuer,
    callOptions: CallOptions?
  ) -> UnaryCall<Em_Authority_V1_MsgCreateIssuer, Em_Authority_V1_MsgCreateIssuerResponse>

  func destroyIssuer(
    _ request: Em_Authority_V1_MsgDestroyIssuer,
    callOptions: CallOptions?
  ) -> UnaryCall<Em_Authority_V1_MsgDestroyIssuer, Em_Authority_V1_MsgDestroyIssuerResponse>

  func setGasPrices(
    _ request: Em_Authority_V1_MsgSetGasPrices,
    callOptions: CallOptions?
  ) -> UnaryCall<Em_Authority_V1_MsgSetGasPrices, Em_Authority_V1_MsgSetGasPricesResponse>

  func replaceAuthority(
    _ request: Em_Authority_V1_MsgReplaceAuthority,
    callOptions: CallOptions?
  ) -> UnaryCall<Em_Authority_V1_MsgReplaceAuthority, Em_Authority_V1_MsgReplaceAuthorityResponse>

  func scheduleUpgrade(
    _ request: Em_Authority_V1_MsgScheduleUpgrade,
    callOptions: CallOptions?
  ) -> UnaryCall<Em_Authority_V1_MsgScheduleUpgrade, Em_Authority_V1_MsgScheduleUpgradeResponse>

  func setParameters(
    _ request: Em_Authority_V1_MsgSetParameters,
    callOptions: CallOptions?
  ) -> UnaryCall<Em_Authority_V1_MsgSetParameters, Em_Authority_V1_MsgSetParametersResponse>
}

extension Em_Authority_V1_MsgClientProtocol {
  internal var serviceName: String {
    return "em.authority.v1.Msg"
  }

  /// Unary call to CreateIssuer
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateIssuer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createIssuer(
    _ request: Em_Authority_V1_MsgCreateIssuer,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Em_Authority_V1_MsgCreateIssuer, Em_Authority_V1_MsgCreateIssuerResponse> {
    return self.makeUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.createIssuer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateIssuerInterceptors() ?? []
    )
  }

  /// Unary call to DestroyIssuer
  ///
  /// - Parameters:
  ///   - request: Request to send to DestroyIssuer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func destroyIssuer(
    _ request: Em_Authority_V1_MsgDestroyIssuer,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Em_Authority_V1_MsgDestroyIssuer, Em_Authority_V1_MsgDestroyIssuerResponse> {
    return self.makeUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.destroyIssuer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDestroyIssuerInterceptors() ?? []
    )
  }

  /// Unary call to SetGasPrices
  ///
  /// - Parameters:
  ///   - request: Request to send to SetGasPrices.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setGasPrices(
    _ request: Em_Authority_V1_MsgSetGasPrices,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Em_Authority_V1_MsgSetGasPrices, Em_Authority_V1_MsgSetGasPricesResponse> {
    return self.makeUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.setGasPrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetGasPricesInterceptors() ?? []
    )
  }

  /// Unary call to ReplaceAuthority
  ///
  /// - Parameters:
  ///   - request: Request to send to ReplaceAuthority.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func replaceAuthority(
    _ request: Em_Authority_V1_MsgReplaceAuthority,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Em_Authority_V1_MsgReplaceAuthority, Em_Authority_V1_MsgReplaceAuthorityResponse> {
    return self.makeUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.replaceAuthority.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReplaceAuthorityInterceptors() ?? []
    )
  }

  /// Unary call to ScheduleUpgrade
  ///
  /// - Parameters:
  ///   - request: Request to send to ScheduleUpgrade.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func scheduleUpgrade(
    _ request: Em_Authority_V1_MsgScheduleUpgrade,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Em_Authority_V1_MsgScheduleUpgrade, Em_Authority_V1_MsgScheduleUpgradeResponse> {
    return self.makeUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.scheduleUpgrade.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeScheduleUpgradeInterceptors() ?? []
    )
  }

  /// Unary call to SetParameters
  ///
  /// - Parameters:
  ///   - request: Request to send to SetParameters.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setParameters(
    _ request: Em_Authority_V1_MsgSetParameters,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Em_Authority_V1_MsgSetParameters, Em_Authority_V1_MsgSetParametersResponse> {
    return self.makeUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.setParameters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetParametersInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Em_Authority_V1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Em_Authority_V1_MsgNIOClient")
internal final class Em_Authority_V1_MsgClient: Em_Authority_V1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Em_Authority_V1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Em_Authority_V1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the em.authority.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Em_Authority_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Em_Authority_V1_MsgNIOClient: Em_Authority_V1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Em_Authority_V1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the em.authority.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Em_Authority_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Em_Authority_V1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Em_Authority_V1_MsgClientInterceptorFactoryProtocol? { get }

  func makeCreateIssuerCall(
    _ request: Em_Authority_V1_MsgCreateIssuer,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Em_Authority_V1_MsgCreateIssuer, Em_Authority_V1_MsgCreateIssuerResponse>

  func makeDestroyIssuerCall(
    _ request: Em_Authority_V1_MsgDestroyIssuer,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Em_Authority_V1_MsgDestroyIssuer, Em_Authority_V1_MsgDestroyIssuerResponse>

  func makeSetGasPricesCall(
    _ request: Em_Authority_V1_MsgSetGasPrices,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Em_Authority_V1_MsgSetGasPrices, Em_Authority_V1_MsgSetGasPricesResponse>

  func makeReplaceAuthorityCall(
    _ request: Em_Authority_V1_MsgReplaceAuthority,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Em_Authority_V1_MsgReplaceAuthority, Em_Authority_V1_MsgReplaceAuthorityResponse>

  func makeScheduleUpgradeCall(
    _ request: Em_Authority_V1_MsgScheduleUpgrade,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Em_Authority_V1_MsgScheduleUpgrade, Em_Authority_V1_MsgScheduleUpgradeResponse>

  func makeSetParametersCall(
    _ request: Em_Authority_V1_MsgSetParameters,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Em_Authority_V1_MsgSetParameters, Em_Authority_V1_MsgSetParametersResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Em_Authority_V1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Em_Authority_V1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Em_Authority_V1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeCreateIssuerCall(
    _ request: Em_Authority_V1_MsgCreateIssuer,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Em_Authority_V1_MsgCreateIssuer, Em_Authority_V1_MsgCreateIssuerResponse> {
    return self.makeAsyncUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.createIssuer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateIssuerInterceptors() ?? []
    )
  }

  internal func makeDestroyIssuerCall(
    _ request: Em_Authority_V1_MsgDestroyIssuer,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Em_Authority_V1_MsgDestroyIssuer, Em_Authority_V1_MsgDestroyIssuerResponse> {
    return self.makeAsyncUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.destroyIssuer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDestroyIssuerInterceptors() ?? []
    )
  }

  internal func makeSetGasPricesCall(
    _ request: Em_Authority_V1_MsgSetGasPrices,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Em_Authority_V1_MsgSetGasPrices, Em_Authority_V1_MsgSetGasPricesResponse> {
    return self.makeAsyncUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.setGasPrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetGasPricesInterceptors() ?? []
    )
  }

  internal func makeReplaceAuthorityCall(
    _ request: Em_Authority_V1_MsgReplaceAuthority,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Em_Authority_V1_MsgReplaceAuthority, Em_Authority_V1_MsgReplaceAuthorityResponse> {
    return self.makeAsyncUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.replaceAuthority.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReplaceAuthorityInterceptors() ?? []
    )
  }

  internal func makeScheduleUpgradeCall(
    _ request: Em_Authority_V1_MsgScheduleUpgrade,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Em_Authority_V1_MsgScheduleUpgrade, Em_Authority_V1_MsgScheduleUpgradeResponse> {
    return self.makeAsyncUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.scheduleUpgrade.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeScheduleUpgradeInterceptors() ?? []
    )
  }

  internal func makeSetParametersCall(
    _ request: Em_Authority_V1_MsgSetParameters,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Em_Authority_V1_MsgSetParameters, Em_Authority_V1_MsgSetParametersResponse> {
    return self.makeAsyncUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.setParameters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetParametersInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Em_Authority_V1_MsgAsyncClientProtocol {
  internal func createIssuer(
    _ request: Em_Authority_V1_MsgCreateIssuer,
    callOptions: CallOptions? = nil
  ) async throws -> Em_Authority_V1_MsgCreateIssuerResponse {
    return try await self.performAsyncUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.createIssuer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateIssuerInterceptors() ?? []
    )
  }

  internal func destroyIssuer(
    _ request: Em_Authority_V1_MsgDestroyIssuer,
    callOptions: CallOptions? = nil
  ) async throws -> Em_Authority_V1_MsgDestroyIssuerResponse {
    return try await self.performAsyncUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.destroyIssuer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDestroyIssuerInterceptors() ?? []
    )
  }

  internal func setGasPrices(
    _ request: Em_Authority_V1_MsgSetGasPrices,
    callOptions: CallOptions? = nil
  ) async throws -> Em_Authority_V1_MsgSetGasPricesResponse {
    return try await self.performAsyncUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.setGasPrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetGasPricesInterceptors() ?? []
    )
  }

  internal func replaceAuthority(
    _ request: Em_Authority_V1_MsgReplaceAuthority,
    callOptions: CallOptions? = nil
  ) async throws -> Em_Authority_V1_MsgReplaceAuthorityResponse {
    return try await self.performAsyncUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.replaceAuthority.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReplaceAuthorityInterceptors() ?? []
    )
  }

  internal func scheduleUpgrade(
    _ request: Em_Authority_V1_MsgScheduleUpgrade,
    callOptions: CallOptions? = nil
  ) async throws -> Em_Authority_V1_MsgScheduleUpgradeResponse {
    return try await self.performAsyncUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.scheduleUpgrade.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeScheduleUpgradeInterceptors() ?? []
    )
  }

  internal func setParameters(
    _ request: Em_Authority_V1_MsgSetParameters,
    callOptions: CallOptions? = nil
  ) async throws -> Em_Authority_V1_MsgSetParametersResponse {
    return try await self.performAsyncUnaryCall(
      path: Em_Authority_V1_MsgClientMetadata.Methods.setParameters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetParametersInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Em_Authority_V1_MsgAsyncClient: Em_Authority_V1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Em_Authority_V1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Em_Authority_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Em_Authority_V1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'createIssuer'.
  func makeCreateIssuerInterceptors() -> [ClientInterceptor<Em_Authority_V1_MsgCreateIssuer, Em_Authority_V1_MsgCreateIssuerResponse>]

  /// - Returns: Interceptors to use when invoking 'destroyIssuer'.
  func makeDestroyIssuerInterceptors() -> [ClientInterceptor<Em_Authority_V1_MsgDestroyIssuer, Em_Authority_V1_MsgDestroyIssuerResponse>]

  /// - Returns: Interceptors to use when invoking 'setGasPrices'.
  func makeSetGasPricesInterceptors() -> [ClientInterceptor<Em_Authority_V1_MsgSetGasPrices, Em_Authority_V1_MsgSetGasPricesResponse>]

  /// - Returns: Interceptors to use when invoking 'replaceAuthority'.
  func makeReplaceAuthorityInterceptors() -> [ClientInterceptor<Em_Authority_V1_MsgReplaceAuthority, Em_Authority_V1_MsgReplaceAuthorityResponse>]

  /// - Returns: Interceptors to use when invoking 'scheduleUpgrade'.
  func makeScheduleUpgradeInterceptors() -> [ClientInterceptor<Em_Authority_V1_MsgScheduleUpgrade, Em_Authority_V1_MsgScheduleUpgradeResponse>]

  /// - Returns: Interceptors to use when invoking 'setParameters'.
  func makeSetParametersInterceptors() -> [ClientInterceptor<Em_Authority_V1_MsgSetParameters, Em_Authority_V1_MsgSetParametersResponse>]
}

internal enum Em_Authority_V1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "em.authority.v1.Msg",
    methods: [
      Em_Authority_V1_MsgClientMetadata.Methods.createIssuer,
      Em_Authority_V1_MsgClientMetadata.Methods.destroyIssuer,
      Em_Authority_V1_MsgClientMetadata.Methods.setGasPrices,
      Em_Authority_V1_MsgClientMetadata.Methods.replaceAuthority,
      Em_Authority_V1_MsgClientMetadata.Methods.scheduleUpgrade,
      Em_Authority_V1_MsgClientMetadata.Methods.setParameters,
    ]
  )

  internal enum Methods {
    internal static let createIssuer = GRPCMethodDescriptor(
      name: "CreateIssuer",
      path: "/em.authority.v1.Msg/CreateIssuer",
      type: GRPCCallType.unary
    )

    internal static let destroyIssuer = GRPCMethodDescriptor(
      name: "DestroyIssuer",
      path: "/em.authority.v1.Msg/DestroyIssuer",
      type: GRPCCallType.unary
    )

    internal static let setGasPrices = GRPCMethodDescriptor(
      name: "SetGasPrices",
      path: "/em.authority.v1.Msg/SetGasPrices",
      type: GRPCCallType.unary
    )

    internal static let replaceAuthority = GRPCMethodDescriptor(
      name: "ReplaceAuthority",
      path: "/em.authority.v1.Msg/ReplaceAuthority",
      type: GRPCCallType.unary
    )

    internal static let scheduleUpgrade = GRPCMethodDescriptor(
      name: "ScheduleUpgrade",
      path: "/em.authority.v1.Msg/ScheduleUpgrade",
      type: GRPCCallType.unary
    )

    internal static let setParameters = GRPCMethodDescriptor(
      name: "SetParameters",
      path: "/em.authority.v1.Msg/SetParameters",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Em_Authority_V1_MsgProvider: CallHandlerProvider {
  var interceptors: Em_Authority_V1_MsgServerInterceptorFactoryProtocol? { get }

  func createIssuer(request: Em_Authority_V1_MsgCreateIssuer, context: StatusOnlyCallContext) -> EventLoopFuture<Em_Authority_V1_MsgCreateIssuerResponse>

  func destroyIssuer(request: Em_Authority_V1_MsgDestroyIssuer, context: StatusOnlyCallContext) -> EventLoopFuture<Em_Authority_V1_MsgDestroyIssuerResponse>

  func setGasPrices(request: Em_Authority_V1_MsgSetGasPrices, context: StatusOnlyCallContext) -> EventLoopFuture<Em_Authority_V1_MsgSetGasPricesResponse>

  func replaceAuthority(request: Em_Authority_V1_MsgReplaceAuthority, context: StatusOnlyCallContext) -> EventLoopFuture<Em_Authority_V1_MsgReplaceAuthorityResponse>

  func scheduleUpgrade(request: Em_Authority_V1_MsgScheduleUpgrade, context: StatusOnlyCallContext) -> EventLoopFuture<Em_Authority_V1_MsgScheduleUpgradeResponse>

  func setParameters(request: Em_Authority_V1_MsgSetParameters, context: StatusOnlyCallContext) -> EventLoopFuture<Em_Authority_V1_MsgSetParametersResponse>
}

extension Em_Authority_V1_MsgProvider {
  internal var serviceName: Substring {
    return Em_Authority_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateIssuer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Authority_V1_MsgCreateIssuer>(),
        responseSerializer: ProtobufSerializer<Em_Authority_V1_MsgCreateIssuerResponse>(),
        interceptors: self.interceptors?.makeCreateIssuerInterceptors() ?? [],
        userFunction: self.createIssuer(request:context:)
      )

    case "DestroyIssuer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Authority_V1_MsgDestroyIssuer>(),
        responseSerializer: ProtobufSerializer<Em_Authority_V1_MsgDestroyIssuerResponse>(),
        interceptors: self.interceptors?.makeDestroyIssuerInterceptors() ?? [],
        userFunction: self.destroyIssuer(request:context:)
      )

    case "SetGasPrices":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Authority_V1_MsgSetGasPrices>(),
        responseSerializer: ProtobufSerializer<Em_Authority_V1_MsgSetGasPricesResponse>(),
        interceptors: self.interceptors?.makeSetGasPricesInterceptors() ?? [],
        userFunction: self.setGasPrices(request:context:)
      )

    case "ReplaceAuthority":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Authority_V1_MsgReplaceAuthority>(),
        responseSerializer: ProtobufSerializer<Em_Authority_V1_MsgReplaceAuthorityResponse>(),
        interceptors: self.interceptors?.makeReplaceAuthorityInterceptors() ?? [],
        userFunction: self.replaceAuthority(request:context:)
      )

    case "ScheduleUpgrade":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Authority_V1_MsgScheduleUpgrade>(),
        responseSerializer: ProtobufSerializer<Em_Authority_V1_MsgScheduleUpgradeResponse>(),
        interceptors: self.interceptors?.makeScheduleUpgradeInterceptors() ?? [],
        userFunction: self.scheduleUpgrade(request:context:)
      )

    case "SetParameters":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Authority_V1_MsgSetParameters>(),
        responseSerializer: ProtobufSerializer<Em_Authority_V1_MsgSetParametersResponse>(),
        interceptors: self.interceptors?.makeSetParametersInterceptors() ?? [],
        userFunction: self.setParameters(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Em_Authority_V1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Em_Authority_V1_MsgServerInterceptorFactoryProtocol? { get }

  @Sendable func createIssuer(
    request: Em_Authority_V1_MsgCreateIssuer,
    context: GRPCAsyncServerCallContext
  ) async throws -> Em_Authority_V1_MsgCreateIssuerResponse

  @Sendable func destroyIssuer(
    request: Em_Authority_V1_MsgDestroyIssuer,
    context: GRPCAsyncServerCallContext
  ) async throws -> Em_Authority_V1_MsgDestroyIssuerResponse

  @Sendable func setGasPrices(
    request: Em_Authority_V1_MsgSetGasPrices,
    context: GRPCAsyncServerCallContext
  ) async throws -> Em_Authority_V1_MsgSetGasPricesResponse

  @Sendable func replaceAuthority(
    request: Em_Authority_V1_MsgReplaceAuthority,
    context: GRPCAsyncServerCallContext
  ) async throws -> Em_Authority_V1_MsgReplaceAuthorityResponse

  @Sendable func scheduleUpgrade(
    request: Em_Authority_V1_MsgScheduleUpgrade,
    context: GRPCAsyncServerCallContext
  ) async throws -> Em_Authority_V1_MsgScheduleUpgradeResponse

  @Sendable func setParameters(
    request: Em_Authority_V1_MsgSetParameters,
    context: GRPCAsyncServerCallContext
  ) async throws -> Em_Authority_V1_MsgSetParametersResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Em_Authority_V1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Em_Authority_V1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Em_Authority_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Em_Authority_V1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateIssuer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Authority_V1_MsgCreateIssuer>(),
        responseSerializer: ProtobufSerializer<Em_Authority_V1_MsgCreateIssuerResponse>(),
        interceptors: self.interceptors?.makeCreateIssuerInterceptors() ?? [],
        wrapping: self.createIssuer(request:context:)
      )

    case "DestroyIssuer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Authority_V1_MsgDestroyIssuer>(),
        responseSerializer: ProtobufSerializer<Em_Authority_V1_MsgDestroyIssuerResponse>(),
        interceptors: self.interceptors?.makeDestroyIssuerInterceptors() ?? [],
        wrapping: self.destroyIssuer(request:context:)
      )

    case "SetGasPrices":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Authority_V1_MsgSetGasPrices>(),
        responseSerializer: ProtobufSerializer<Em_Authority_V1_MsgSetGasPricesResponse>(),
        interceptors: self.interceptors?.makeSetGasPricesInterceptors() ?? [],
        wrapping: self.setGasPrices(request:context:)
      )

    case "ReplaceAuthority":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Authority_V1_MsgReplaceAuthority>(),
        responseSerializer: ProtobufSerializer<Em_Authority_V1_MsgReplaceAuthorityResponse>(),
        interceptors: self.interceptors?.makeReplaceAuthorityInterceptors() ?? [],
        wrapping: self.replaceAuthority(request:context:)
      )

    case "ScheduleUpgrade":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Authority_V1_MsgScheduleUpgrade>(),
        responseSerializer: ProtobufSerializer<Em_Authority_V1_MsgScheduleUpgradeResponse>(),
        interceptors: self.interceptors?.makeScheduleUpgradeInterceptors() ?? [],
        wrapping: self.scheduleUpgrade(request:context:)
      )

    case "SetParameters":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Authority_V1_MsgSetParameters>(),
        responseSerializer: ProtobufSerializer<Em_Authority_V1_MsgSetParametersResponse>(),
        interceptors: self.interceptors?.makeSetParametersInterceptors() ?? [],
        wrapping: self.setParameters(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Em_Authority_V1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'createIssuer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateIssuerInterceptors() -> [ServerInterceptor<Em_Authority_V1_MsgCreateIssuer, Em_Authority_V1_MsgCreateIssuerResponse>]

  /// - Returns: Interceptors to use when handling 'destroyIssuer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDestroyIssuerInterceptors() -> [ServerInterceptor<Em_Authority_V1_MsgDestroyIssuer, Em_Authority_V1_MsgDestroyIssuerResponse>]

  /// - Returns: Interceptors to use when handling 'setGasPrices'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetGasPricesInterceptors() -> [ServerInterceptor<Em_Authority_V1_MsgSetGasPrices, Em_Authority_V1_MsgSetGasPricesResponse>]

  /// - Returns: Interceptors to use when handling 'replaceAuthority'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeReplaceAuthorityInterceptors() -> [ServerInterceptor<Em_Authority_V1_MsgReplaceAuthority, Em_Authority_V1_MsgReplaceAuthorityResponse>]

  /// - Returns: Interceptors to use when handling 'scheduleUpgrade'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeScheduleUpgradeInterceptors() -> [ServerInterceptor<Em_Authority_V1_MsgScheduleUpgrade, Em_Authority_V1_MsgScheduleUpgradeResponse>]

  /// - Returns: Interceptors to use when handling 'setParameters'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetParametersInterceptors() -> [ServerInterceptor<Em_Authority_V1_MsgSetParameters, Em_Authority_V1_MsgSetParametersResponse>]
}

internal enum Em_Authority_V1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "em.authority.v1.Msg",
    methods: [
      Em_Authority_V1_MsgServerMetadata.Methods.createIssuer,
      Em_Authority_V1_MsgServerMetadata.Methods.destroyIssuer,
      Em_Authority_V1_MsgServerMetadata.Methods.setGasPrices,
      Em_Authority_V1_MsgServerMetadata.Methods.replaceAuthority,
      Em_Authority_V1_MsgServerMetadata.Methods.scheduleUpgrade,
      Em_Authority_V1_MsgServerMetadata.Methods.setParameters,
    ]
  )

  internal enum Methods {
    internal static let createIssuer = GRPCMethodDescriptor(
      name: "CreateIssuer",
      path: "/em.authority.v1.Msg/CreateIssuer",
      type: GRPCCallType.unary
    )

    internal static let destroyIssuer = GRPCMethodDescriptor(
      name: "DestroyIssuer",
      path: "/em.authority.v1.Msg/DestroyIssuer",
      type: GRPCCallType.unary
    )

    internal static let setGasPrices = GRPCMethodDescriptor(
      name: "SetGasPrices",
      path: "/em.authority.v1.Msg/SetGasPrices",
      type: GRPCCallType.unary
    )

    internal static let replaceAuthority = GRPCMethodDescriptor(
      name: "ReplaceAuthority",
      path: "/em.authority.v1.Msg/ReplaceAuthority",
      type: GRPCCallType.unary
    )

    internal static let scheduleUpgrade = GRPCMethodDescriptor(
      name: "ScheduleUpgrade",
      path: "/em.authority.v1.Msg/ScheduleUpgrade",
      type: GRPCCallType.unary
    )

    internal static let setParameters = GRPCMethodDescriptor(
      name: "SetParameters",
      path: "/em.authority.v1.Msg/SetParameters",
      type: GRPCCallType.unary
    )
  }
}

//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: govgen/gov/v1beta1/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Query defines the gRPC querier service for gov module
///
/// Usage: instantiate `Govgen_Gov_V1beta1_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Govgen_Gov_V1beta1_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Govgen_Gov_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func proposal(
    _ request: Govgen_Gov_V1beta1_QueryProposalRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryProposalRequest, Govgen_Gov_V1beta1_QueryProposalResponse>

  func proposals(
    _ request: Govgen_Gov_V1beta1_QueryProposalsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryProposalsRequest, Govgen_Gov_V1beta1_QueryProposalsResponse>

  func vote(
    _ request: Govgen_Gov_V1beta1_QueryVoteRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryVoteRequest, Govgen_Gov_V1beta1_QueryVoteResponse>

  func votes(
    _ request: Govgen_Gov_V1beta1_QueryVotesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryVotesRequest, Govgen_Gov_V1beta1_QueryVotesResponse>

  func params(
    _ request: Govgen_Gov_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryParamsRequest, Govgen_Gov_V1beta1_QueryParamsResponse>

  func deposit(
    _ request: Govgen_Gov_V1beta1_QueryDepositRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryDepositRequest, Govgen_Gov_V1beta1_QueryDepositResponse>

  func deposits(
    _ request: Govgen_Gov_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryDepositsRequest, Govgen_Gov_V1beta1_QueryDepositsResponse>

  func tallyResult(
    _ request: Govgen_Gov_V1beta1_QueryTallyResultRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryTallyResultRequest, Govgen_Gov_V1beta1_QueryTallyResultResponse>
}

extension Govgen_Gov_V1beta1_QueryClientProtocol {
  internal var serviceName: String {
    return "govgen.gov.v1beta1.Query"
  }

  /// Proposal queries proposal details based on ProposalID.
  ///
  /// - Parameters:
  ///   - request: Request to send to Proposal.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func proposal(
    _ request: Govgen_Gov_V1beta1_QueryProposalRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryProposalRequest, Govgen_Gov_V1beta1_QueryProposalResponse> {
    return self.makeUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.proposal.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProposalInterceptors() ?? []
    )
  }

  /// Proposals queries all proposals based on given status.
  ///
  /// - Parameters:
  ///   - request: Request to send to Proposals.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func proposals(
    _ request: Govgen_Gov_V1beta1_QueryProposalsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryProposalsRequest, Govgen_Gov_V1beta1_QueryProposalsResponse> {
    return self.makeUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.proposals.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProposalsInterceptors() ?? []
    )
  }

  /// Vote queries voted information based on proposalID, voterAddr.
  ///
  /// - Parameters:
  ///   - request: Request to send to Vote.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func vote(
    _ request: Govgen_Gov_V1beta1_QueryVoteRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryVoteRequest, Govgen_Gov_V1beta1_QueryVoteResponse> {
    return self.makeUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.vote.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVoteInterceptors() ?? []
    )
  }

  /// Votes queries votes of a given proposal.
  ///
  /// - Parameters:
  ///   - request: Request to send to Votes.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func votes(
    _ request: Govgen_Gov_V1beta1_QueryVotesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryVotesRequest, Govgen_Gov_V1beta1_QueryVotesResponse> {
    return self.makeUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.votes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVotesInterceptors() ?? []
    )
  }

  /// Params queries all parameters of the gov module.
  ///
  /// - Parameters:
  ///   - request: Request to send to Params.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func params(
    _ request: Govgen_Gov_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryParamsRequest, Govgen_Gov_V1beta1_QueryParamsResponse> {
    return self.makeUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  /// Deposit queries single deposit information based proposalID, depositAddr.
  ///
  /// - Parameters:
  ///   - request: Request to send to Deposit.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deposit(
    _ request: Govgen_Gov_V1beta1_QueryDepositRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryDepositRequest, Govgen_Gov_V1beta1_QueryDepositResponse> {
    return self.makeUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.deposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  /// Deposits queries all deposits of a single proposal.
  ///
  /// - Parameters:
  ///   - request: Request to send to Deposits.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deposits(
    _ request: Govgen_Gov_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryDepositsRequest, Govgen_Gov_V1beta1_QueryDepositsResponse> {
    return self.makeUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.deposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositsInterceptors() ?? []
    )
  }

  /// TallyResult queries the tally of a proposal vote.
  ///
  /// - Parameters:
  ///   - request: Request to send to TallyResult.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func tallyResult(
    _ request: Govgen_Gov_V1beta1_QueryTallyResultRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Govgen_Gov_V1beta1_QueryTallyResultRequest, Govgen_Gov_V1beta1_QueryTallyResultResponse> {
    return self.makeUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.tallyResult.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTallyResultInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Govgen_Gov_V1beta1_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Govgen_Gov_V1beta1_QueryNIOClient")
internal final class Govgen_Gov_V1beta1_QueryClient: Govgen_Gov_V1beta1_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Govgen_Gov_V1beta1_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Govgen_Gov_V1beta1_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the govgen.gov.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Govgen_Gov_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Govgen_Gov_V1beta1_QueryNIOClient: Govgen_Gov_V1beta1_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Govgen_Gov_V1beta1_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the govgen.gov.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Govgen_Gov_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Query defines the gRPC querier service for gov module
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Govgen_Gov_V1beta1_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Govgen_Gov_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func makeProposalCall(
    _ request: Govgen_Gov_V1beta1_QueryProposalRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryProposalRequest, Govgen_Gov_V1beta1_QueryProposalResponse>

  func makeProposalsCall(
    _ request: Govgen_Gov_V1beta1_QueryProposalsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryProposalsRequest, Govgen_Gov_V1beta1_QueryProposalsResponse>

  func makeVoteCall(
    _ request: Govgen_Gov_V1beta1_QueryVoteRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryVoteRequest, Govgen_Gov_V1beta1_QueryVoteResponse>

  func makeVotesCall(
    _ request: Govgen_Gov_V1beta1_QueryVotesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryVotesRequest, Govgen_Gov_V1beta1_QueryVotesResponse>

  func makeParamsCall(
    _ request: Govgen_Gov_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryParamsRequest, Govgen_Gov_V1beta1_QueryParamsResponse>

  func makeDepositCall(
    _ request: Govgen_Gov_V1beta1_QueryDepositRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryDepositRequest, Govgen_Gov_V1beta1_QueryDepositResponse>

  func makeDepositsCall(
    _ request: Govgen_Gov_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryDepositsRequest, Govgen_Gov_V1beta1_QueryDepositsResponse>

  func makeTallyResultCall(
    _ request: Govgen_Gov_V1beta1_QueryTallyResultRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryTallyResultRequest, Govgen_Gov_V1beta1_QueryTallyResultResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Govgen_Gov_V1beta1_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Govgen_Gov_V1beta1_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Govgen_Gov_V1beta1_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeProposalCall(
    _ request: Govgen_Gov_V1beta1_QueryProposalRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryProposalRequest, Govgen_Gov_V1beta1_QueryProposalResponse> {
    return self.makeAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.proposal.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProposalInterceptors() ?? []
    )
  }

  internal func makeProposalsCall(
    _ request: Govgen_Gov_V1beta1_QueryProposalsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryProposalsRequest, Govgen_Gov_V1beta1_QueryProposalsResponse> {
    return self.makeAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.proposals.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProposalsInterceptors() ?? []
    )
  }

  internal func makeVoteCall(
    _ request: Govgen_Gov_V1beta1_QueryVoteRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryVoteRequest, Govgen_Gov_V1beta1_QueryVoteResponse> {
    return self.makeAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.vote.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVoteInterceptors() ?? []
    )
  }

  internal func makeVotesCall(
    _ request: Govgen_Gov_V1beta1_QueryVotesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryVotesRequest, Govgen_Gov_V1beta1_QueryVotesResponse> {
    return self.makeAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.votes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVotesInterceptors() ?? []
    )
  }

  internal func makeParamsCall(
    _ request: Govgen_Gov_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryParamsRequest, Govgen_Gov_V1beta1_QueryParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func makeDepositCall(
    _ request: Govgen_Gov_V1beta1_QueryDepositRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryDepositRequest, Govgen_Gov_V1beta1_QueryDepositResponse> {
    return self.makeAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.deposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  internal func makeDepositsCall(
    _ request: Govgen_Gov_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryDepositsRequest, Govgen_Gov_V1beta1_QueryDepositsResponse> {
    return self.makeAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.deposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositsInterceptors() ?? []
    )
  }

  internal func makeTallyResultCall(
    _ request: Govgen_Gov_V1beta1_QueryTallyResultRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Govgen_Gov_V1beta1_QueryTallyResultRequest, Govgen_Gov_V1beta1_QueryTallyResultResponse> {
    return self.makeAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.tallyResult.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTallyResultInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Govgen_Gov_V1beta1_QueryAsyncClientProtocol {
  internal func proposal(
    _ request: Govgen_Gov_V1beta1_QueryProposalRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Govgen_Gov_V1beta1_QueryProposalResponse {
    return try await self.performAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.proposal.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProposalInterceptors() ?? []
    )
  }

  internal func proposals(
    _ request: Govgen_Gov_V1beta1_QueryProposalsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Govgen_Gov_V1beta1_QueryProposalsResponse {
    return try await self.performAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.proposals.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProposalsInterceptors() ?? []
    )
  }

  internal func vote(
    _ request: Govgen_Gov_V1beta1_QueryVoteRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Govgen_Gov_V1beta1_QueryVoteResponse {
    return try await self.performAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.vote.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVoteInterceptors() ?? []
    )
  }

  internal func votes(
    _ request: Govgen_Gov_V1beta1_QueryVotesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Govgen_Gov_V1beta1_QueryVotesResponse {
    return try await self.performAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.votes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVotesInterceptors() ?? []
    )
  }

  internal func params(
    _ request: Govgen_Gov_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Govgen_Gov_V1beta1_QueryParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func deposit(
    _ request: Govgen_Gov_V1beta1_QueryDepositRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Govgen_Gov_V1beta1_QueryDepositResponse {
    return try await self.performAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.deposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  internal func deposits(
    _ request: Govgen_Gov_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Govgen_Gov_V1beta1_QueryDepositsResponse {
    return try await self.performAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.deposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositsInterceptors() ?? []
    )
  }

  internal func tallyResult(
    _ request: Govgen_Gov_V1beta1_QueryTallyResultRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Govgen_Gov_V1beta1_QueryTallyResultResponse {
    return try await self.performAsyncUnaryCall(
      path: Govgen_Gov_V1beta1_QueryClientMetadata.Methods.tallyResult.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTallyResultInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Govgen_Gov_V1beta1_QueryAsyncClient: Govgen_Gov_V1beta1_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Govgen_Gov_V1beta1_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Govgen_Gov_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Govgen_Gov_V1beta1_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'proposal'.
  func makeProposalInterceptors() -> [ClientInterceptor<Govgen_Gov_V1beta1_QueryProposalRequest, Govgen_Gov_V1beta1_QueryProposalResponse>]

  /// - Returns: Interceptors to use when invoking 'proposals'.
  func makeProposalsInterceptors() -> [ClientInterceptor<Govgen_Gov_V1beta1_QueryProposalsRequest, Govgen_Gov_V1beta1_QueryProposalsResponse>]

  /// - Returns: Interceptors to use when invoking 'vote'.
  func makeVoteInterceptors() -> [ClientInterceptor<Govgen_Gov_V1beta1_QueryVoteRequest, Govgen_Gov_V1beta1_QueryVoteResponse>]

  /// - Returns: Interceptors to use when invoking 'votes'.
  func makeVotesInterceptors() -> [ClientInterceptor<Govgen_Gov_V1beta1_QueryVotesRequest, Govgen_Gov_V1beta1_QueryVotesResponse>]

  /// - Returns: Interceptors to use when invoking 'params'.
  func makeParamsInterceptors() -> [ClientInterceptor<Govgen_Gov_V1beta1_QueryParamsRequest, Govgen_Gov_V1beta1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when invoking 'deposit'.
  func makeDepositInterceptors() -> [ClientInterceptor<Govgen_Gov_V1beta1_QueryDepositRequest, Govgen_Gov_V1beta1_QueryDepositResponse>]

  /// - Returns: Interceptors to use when invoking 'deposits'.
  func makeDepositsInterceptors() -> [ClientInterceptor<Govgen_Gov_V1beta1_QueryDepositsRequest, Govgen_Gov_V1beta1_QueryDepositsResponse>]

  /// - Returns: Interceptors to use when invoking 'tallyResult'.
  func makeTallyResultInterceptors() -> [ClientInterceptor<Govgen_Gov_V1beta1_QueryTallyResultRequest, Govgen_Gov_V1beta1_QueryTallyResultResponse>]
}

internal enum Govgen_Gov_V1beta1_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "govgen.gov.v1beta1.Query",
    methods: [
      Govgen_Gov_V1beta1_QueryClientMetadata.Methods.proposal,
      Govgen_Gov_V1beta1_QueryClientMetadata.Methods.proposals,
      Govgen_Gov_V1beta1_QueryClientMetadata.Methods.vote,
      Govgen_Gov_V1beta1_QueryClientMetadata.Methods.votes,
      Govgen_Gov_V1beta1_QueryClientMetadata.Methods.params,
      Govgen_Gov_V1beta1_QueryClientMetadata.Methods.deposit,
      Govgen_Gov_V1beta1_QueryClientMetadata.Methods.deposits,
      Govgen_Gov_V1beta1_QueryClientMetadata.Methods.tallyResult,
    ]
  )

  internal enum Methods {
    internal static let proposal = GRPCMethodDescriptor(
      name: "Proposal",
      path: "/govgen.gov.v1beta1.Query/Proposal",
      type: GRPCCallType.unary
    )

    internal static let proposals = GRPCMethodDescriptor(
      name: "Proposals",
      path: "/govgen.gov.v1beta1.Query/Proposals",
      type: GRPCCallType.unary
    )

    internal static let vote = GRPCMethodDescriptor(
      name: "Vote",
      path: "/govgen.gov.v1beta1.Query/Vote",
      type: GRPCCallType.unary
    )

    internal static let votes = GRPCMethodDescriptor(
      name: "Votes",
      path: "/govgen.gov.v1beta1.Query/Votes",
      type: GRPCCallType.unary
    )

    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/govgen.gov.v1beta1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let deposit = GRPCMethodDescriptor(
      name: "Deposit",
      path: "/govgen.gov.v1beta1.Query/Deposit",
      type: GRPCCallType.unary
    )

    internal static let deposits = GRPCMethodDescriptor(
      name: "Deposits",
      path: "/govgen.gov.v1beta1.Query/Deposits",
      type: GRPCCallType.unary
    )

    internal static let tallyResult = GRPCMethodDescriptor(
      name: "TallyResult",
      path: "/govgen.gov.v1beta1.Query/TallyResult",
      type: GRPCCallType.unary
    )
  }
}

/// Query defines the gRPC querier service for gov module
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Govgen_Gov_V1beta1_QueryProvider: CallHandlerProvider {
  var interceptors: Govgen_Gov_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  /// Proposal queries proposal details based on ProposalID.
  func proposal(request: Govgen_Gov_V1beta1_QueryProposalRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Govgen_Gov_V1beta1_QueryProposalResponse>

  /// Proposals queries all proposals based on given status.
  func proposals(request: Govgen_Gov_V1beta1_QueryProposalsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Govgen_Gov_V1beta1_QueryProposalsResponse>

  /// Vote queries voted information based on proposalID, voterAddr.
  func vote(request: Govgen_Gov_V1beta1_QueryVoteRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Govgen_Gov_V1beta1_QueryVoteResponse>

  /// Votes queries votes of a given proposal.
  func votes(request: Govgen_Gov_V1beta1_QueryVotesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Govgen_Gov_V1beta1_QueryVotesResponse>

  /// Params queries all parameters of the gov module.
  func params(request: Govgen_Gov_V1beta1_QueryParamsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Govgen_Gov_V1beta1_QueryParamsResponse>

  /// Deposit queries single deposit information based proposalID, depositAddr.
  func deposit(request: Govgen_Gov_V1beta1_QueryDepositRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Govgen_Gov_V1beta1_QueryDepositResponse>

  /// Deposits queries all deposits of a single proposal.
  func deposits(request: Govgen_Gov_V1beta1_QueryDepositsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Govgen_Gov_V1beta1_QueryDepositsResponse>

  /// TallyResult queries the tally of a proposal vote.
  func tallyResult(request: Govgen_Gov_V1beta1_QueryTallyResultRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Govgen_Gov_V1beta1_QueryTallyResultResponse>
}

extension Govgen_Gov_V1beta1_QueryProvider {
  internal var serviceName: Substring {
    return Govgen_Gov_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Proposal":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryProposalRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryProposalResponse>(),
        interceptors: self.interceptors?.makeProposalInterceptors() ?? [],
        userFunction: self.proposal(request:context:)
      )

    case "Proposals":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryProposalsRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryProposalsResponse>(),
        interceptors: self.interceptors?.makeProposalsInterceptors() ?? [],
        userFunction: self.proposals(request:context:)
      )

    case "Vote":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryVoteRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryVoteResponse>(),
        interceptors: self.interceptors?.makeVoteInterceptors() ?? [],
        userFunction: self.vote(request:context:)
      )

    case "Votes":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryVotesRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryVotesResponse>(),
        interceptors: self.interceptors?.makeVotesInterceptors() ?? [],
        userFunction: self.votes(request:context:)
      )

    case "Params":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        userFunction: self.params(request:context:)
      )

    case "Deposit":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryDepositRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryDepositResponse>(),
        interceptors: self.interceptors?.makeDepositInterceptors() ?? [],
        userFunction: self.deposit(request:context:)
      )

    case "Deposits":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryDepositsRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryDepositsResponse>(),
        interceptors: self.interceptors?.makeDepositsInterceptors() ?? [],
        userFunction: self.deposits(request:context:)
      )

    case "TallyResult":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryTallyResultRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryTallyResultResponse>(),
        interceptors: self.interceptors?.makeTallyResultInterceptors() ?? [],
        userFunction: self.tallyResult(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Query defines the gRPC querier service for gov module
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Govgen_Gov_V1beta1_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Govgen_Gov_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  /// Proposal queries proposal details based on ProposalID.
  @Sendable func proposal(
    request: Govgen_Gov_V1beta1_QueryProposalRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Govgen_Gov_V1beta1_QueryProposalResponse

  /// Proposals queries all proposals based on given status.
  @Sendable func proposals(
    request: Govgen_Gov_V1beta1_QueryProposalsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Govgen_Gov_V1beta1_QueryProposalsResponse

  /// Vote queries voted information based on proposalID, voterAddr.
  @Sendable func vote(
    request: Govgen_Gov_V1beta1_QueryVoteRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Govgen_Gov_V1beta1_QueryVoteResponse

  /// Votes queries votes of a given proposal.
  @Sendable func votes(
    request: Govgen_Gov_V1beta1_QueryVotesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Govgen_Gov_V1beta1_QueryVotesResponse

  /// Params queries all parameters of the gov module.
  @Sendable func params(
    request: Govgen_Gov_V1beta1_QueryParamsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Govgen_Gov_V1beta1_QueryParamsResponse

  /// Deposit queries single deposit information based proposalID, depositAddr.
  @Sendable func deposit(
    request: Govgen_Gov_V1beta1_QueryDepositRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Govgen_Gov_V1beta1_QueryDepositResponse

  /// Deposits queries all deposits of a single proposal.
  @Sendable func deposits(
    request: Govgen_Gov_V1beta1_QueryDepositsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Govgen_Gov_V1beta1_QueryDepositsResponse

  /// TallyResult queries the tally of a proposal vote.
  @Sendable func tallyResult(
    request: Govgen_Gov_V1beta1_QueryTallyResultRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Govgen_Gov_V1beta1_QueryTallyResultResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Govgen_Gov_V1beta1_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Govgen_Gov_V1beta1_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Govgen_Gov_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Govgen_Gov_V1beta1_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Proposal":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryProposalRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryProposalResponse>(),
        interceptors: self.interceptors?.makeProposalInterceptors() ?? [],
        wrapping: self.proposal(request:context:)
      )

    case "Proposals":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryProposalsRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryProposalsResponse>(),
        interceptors: self.interceptors?.makeProposalsInterceptors() ?? [],
        wrapping: self.proposals(request:context:)
      )

    case "Vote":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryVoteRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryVoteResponse>(),
        interceptors: self.interceptors?.makeVoteInterceptors() ?? [],
        wrapping: self.vote(request:context:)
      )

    case "Votes":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryVotesRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryVotesResponse>(),
        interceptors: self.interceptors?.makeVotesInterceptors() ?? [],
        wrapping: self.votes(request:context:)
      )

    case "Params":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        wrapping: self.params(request:context:)
      )

    case "Deposit":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryDepositRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryDepositResponse>(),
        interceptors: self.interceptors?.makeDepositInterceptors() ?? [],
        wrapping: self.deposit(request:context:)
      )

    case "Deposits":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryDepositsRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryDepositsResponse>(),
        interceptors: self.interceptors?.makeDepositsInterceptors() ?? [],
        wrapping: self.deposits(request:context:)
      )

    case "TallyResult":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Govgen_Gov_V1beta1_QueryTallyResultRequest>(),
        responseSerializer: ProtobufSerializer<Govgen_Gov_V1beta1_QueryTallyResultResponse>(),
        interceptors: self.interceptors?.makeTallyResultInterceptors() ?? [],
        wrapping: self.tallyResult(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Govgen_Gov_V1beta1_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'proposal'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeProposalInterceptors() -> [ServerInterceptor<Govgen_Gov_V1beta1_QueryProposalRequest, Govgen_Gov_V1beta1_QueryProposalResponse>]

  /// - Returns: Interceptors to use when handling 'proposals'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeProposalsInterceptors() -> [ServerInterceptor<Govgen_Gov_V1beta1_QueryProposalsRequest, Govgen_Gov_V1beta1_QueryProposalsResponse>]

  /// - Returns: Interceptors to use when handling 'vote'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeVoteInterceptors() -> [ServerInterceptor<Govgen_Gov_V1beta1_QueryVoteRequest, Govgen_Gov_V1beta1_QueryVoteResponse>]

  /// - Returns: Interceptors to use when handling 'votes'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeVotesInterceptors() -> [ServerInterceptor<Govgen_Gov_V1beta1_QueryVotesRequest, Govgen_Gov_V1beta1_QueryVotesResponse>]

  /// - Returns: Interceptors to use when handling 'params'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeParamsInterceptors() -> [ServerInterceptor<Govgen_Gov_V1beta1_QueryParamsRequest, Govgen_Gov_V1beta1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when handling 'deposit'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDepositInterceptors() -> [ServerInterceptor<Govgen_Gov_V1beta1_QueryDepositRequest, Govgen_Gov_V1beta1_QueryDepositResponse>]

  /// - Returns: Interceptors to use when handling 'deposits'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDepositsInterceptors() -> [ServerInterceptor<Govgen_Gov_V1beta1_QueryDepositsRequest, Govgen_Gov_V1beta1_QueryDepositsResponse>]

  /// - Returns: Interceptors to use when handling 'tallyResult'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeTallyResultInterceptors() -> [ServerInterceptor<Govgen_Gov_V1beta1_QueryTallyResultRequest, Govgen_Gov_V1beta1_QueryTallyResultResponse>]
}

internal enum Govgen_Gov_V1beta1_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "govgen.gov.v1beta1.Query",
    methods: [
      Govgen_Gov_V1beta1_QueryServerMetadata.Methods.proposal,
      Govgen_Gov_V1beta1_QueryServerMetadata.Methods.proposals,
      Govgen_Gov_V1beta1_QueryServerMetadata.Methods.vote,
      Govgen_Gov_V1beta1_QueryServerMetadata.Methods.votes,
      Govgen_Gov_V1beta1_QueryServerMetadata.Methods.params,
      Govgen_Gov_V1beta1_QueryServerMetadata.Methods.deposit,
      Govgen_Gov_V1beta1_QueryServerMetadata.Methods.deposits,
      Govgen_Gov_V1beta1_QueryServerMetadata.Methods.tallyResult,
    ]
  )

  internal enum Methods {
    internal static let proposal = GRPCMethodDescriptor(
      name: "Proposal",
      path: "/govgen.gov.v1beta1.Query/Proposal",
      type: GRPCCallType.unary
    )

    internal static let proposals = GRPCMethodDescriptor(
      name: "Proposals",
      path: "/govgen.gov.v1beta1.Query/Proposals",
      type: GRPCCallType.unary
    )

    internal static let vote = GRPCMethodDescriptor(
      name: "Vote",
      path: "/govgen.gov.v1beta1.Query/Vote",
      type: GRPCCallType.unary
    )

    internal static let votes = GRPCMethodDescriptor(
      name: "Votes",
      path: "/govgen.gov.v1beta1.Query/Votes",
      type: GRPCCallType.unary
    )

    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/govgen.gov.v1beta1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let deposit = GRPCMethodDescriptor(
      name: "Deposit",
      path: "/govgen.gov.v1beta1.Query/Deposit",
      type: GRPCCallType.unary
    )

    internal static let deposits = GRPCMethodDescriptor(
      name: "Deposits",
      path: "/govgen.gov.v1beta1.Query/Deposits",
      type: GRPCCallType.unary
    )

    internal static let tallyResult = GRPCMethodDescriptor(
      name: "TallyResult",
      path: "/govgen.gov.v1beta1.Query/TallyResult",
      type: GRPCCallType.unary
    )
  }
}

//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: teritori/airdrop/v1beta1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the staking Msg service.
///
/// Usage: instantiate `Teritori_Airdrop_V1beta1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Teritori_Airdrop_V1beta1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Teritori_Airdrop_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func claimAllocation(
    _ request: Teritori_Airdrop_V1beta1_MsgClaimAllocation,
    callOptions: CallOptions?
  ) -> UnaryCall<Teritori_Airdrop_V1beta1_MsgClaimAllocation, Teritori_Airdrop_V1beta1_MsgClaimAllocationResponse>

  func setAllocation(
    _ request: Teritori_Airdrop_V1beta1_MsgSetAllocation,
    callOptions: CallOptions?
  ) -> UnaryCall<Teritori_Airdrop_V1beta1_MsgSetAllocation, Teritori_Airdrop_V1beta1_MsgSetAllocationResponse>

  func transferModuleOwnership(
    _ request: Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership,
    callOptions: CallOptions?
  ) -> UnaryCall<Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership, Teritori_Airdrop_V1beta1_MsgTransferModuleOwnershipResponse>

  func depositTokens(
    _ request: Teritori_Airdrop_V1beta1_MsgDepositTokens,
    callOptions: CallOptions?
  ) -> UnaryCall<Teritori_Airdrop_V1beta1_MsgDepositTokens, Teritori_Airdrop_V1beta1_MsgDepositTokensResponse>
}

extension Teritori_Airdrop_V1beta1_MsgClientProtocol {
  internal var serviceName: String {
    return "teritori.airdrop.v1beta1.Msg"
  }

  /// ClaimAllocation defines a method to claim allocation
  ///
  /// - Parameters:
  ///   - request: Request to send to ClaimAllocation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func claimAllocation(
    _ request: Teritori_Airdrop_V1beta1_MsgClaimAllocation,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Teritori_Airdrop_V1beta1_MsgClaimAllocation, Teritori_Airdrop_V1beta1_MsgClaimAllocationResponse> {
    return self.makeUnaryCall(
      path: Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.claimAllocation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClaimAllocationInterceptors() ?? []
    )
  }

  /// SetAllocation defines a method to set allocation
  ///
  /// - Parameters:
  ///   - request: Request to send to SetAllocation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setAllocation(
    _ request: Teritori_Airdrop_V1beta1_MsgSetAllocation,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Teritori_Airdrop_V1beta1_MsgSetAllocation, Teritori_Airdrop_V1beta1_MsgSetAllocationResponse> {
    return self.makeUnaryCall(
      path: Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.setAllocation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetAllocationInterceptors() ?? []
    )
  }

  /// TransferModuleOwnership defines a method to transfer module ownership to other address
  ///
  /// - Parameters:
  ///   - request: Request to send to TransferModuleOwnership.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func transferModuleOwnership(
    _ request: Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership, Teritori_Airdrop_V1beta1_MsgTransferModuleOwnershipResponse> {
    return self.makeUnaryCall(
      path: Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.transferModuleOwnership.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTransferModuleOwnershipInterceptors() ?? []
    )
  }

  /// DepositTokens defines a method to deposit tokens to the module
  ///
  /// - Parameters:
  ///   - request: Request to send to DepositTokens.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func depositTokens(
    _ request: Teritori_Airdrop_V1beta1_MsgDepositTokens,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Teritori_Airdrop_V1beta1_MsgDepositTokens, Teritori_Airdrop_V1beta1_MsgDepositTokensResponse> {
    return self.makeUnaryCall(
      path: Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.depositTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositTokensInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Teritori_Airdrop_V1beta1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Teritori_Airdrop_V1beta1_MsgNIOClient")
internal final class Teritori_Airdrop_V1beta1_MsgClient: Teritori_Airdrop_V1beta1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Teritori_Airdrop_V1beta1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Teritori_Airdrop_V1beta1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the teritori.airdrop.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Teritori_Airdrop_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Teritori_Airdrop_V1beta1_MsgNIOClient: Teritori_Airdrop_V1beta1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Teritori_Airdrop_V1beta1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the teritori.airdrop.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Teritori_Airdrop_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the staking Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Teritori_Airdrop_V1beta1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Teritori_Airdrop_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func makeClaimAllocationCall(
    _ request: Teritori_Airdrop_V1beta1_MsgClaimAllocation,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Teritori_Airdrop_V1beta1_MsgClaimAllocation, Teritori_Airdrop_V1beta1_MsgClaimAllocationResponse>

  func makeSetAllocationCall(
    _ request: Teritori_Airdrop_V1beta1_MsgSetAllocation,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Teritori_Airdrop_V1beta1_MsgSetAllocation, Teritori_Airdrop_V1beta1_MsgSetAllocationResponse>

  func makeTransferModuleOwnershipCall(
    _ request: Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership, Teritori_Airdrop_V1beta1_MsgTransferModuleOwnershipResponse>

  func makeDepositTokensCall(
    _ request: Teritori_Airdrop_V1beta1_MsgDepositTokens,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Teritori_Airdrop_V1beta1_MsgDepositTokens, Teritori_Airdrop_V1beta1_MsgDepositTokensResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Teritori_Airdrop_V1beta1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Teritori_Airdrop_V1beta1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Teritori_Airdrop_V1beta1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeClaimAllocationCall(
    _ request: Teritori_Airdrop_V1beta1_MsgClaimAllocation,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Teritori_Airdrop_V1beta1_MsgClaimAllocation, Teritori_Airdrop_V1beta1_MsgClaimAllocationResponse> {
    return self.makeAsyncUnaryCall(
      path: Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.claimAllocation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClaimAllocationInterceptors() ?? []
    )
  }

  internal func makeSetAllocationCall(
    _ request: Teritori_Airdrop_V1beta1_MsgSetAllocation,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Teritori_Airdrop_V1beta1_MsgSetAllocation, Teritori_Airdrop_V1beta1_MsgSetAllocationResponse> {
    return self.makeAsyncUnaryCall(
      path: Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.setAllocation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetAllocationInterceptors() ?? []
    )
  }

  internal func makeTransferModuleOwnershipCall(
    _ request: Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership, Teritori_Airdrop_V1beta1_MsgTransferModuleOwnershipResponse> {
    return self.makeAsyncUnaryCall(
      path: Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.transferModuleOwnership.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTransferModuleOwnershipInterceptors() ?? []
    )
  }

  internal func makeDepositTokensCall(
    _ request: Teritori_Airdrop_V1beta1_MsgDepositTokens,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Teritori_Airdrop_V1beta1_MsgDepositTokens, Teritori_Airdrop_V1beta1_MsgDepositTokensResponse> {
    return self.makeAsyncUnaryCall(
      path: Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.depositTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositTokensInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Teritori_Airdrop_V1beta1_MsgAsyncClientProtocol {
  internal func claimAllocation(
    _ request: Teritori_Airdrop_V1beta1_MsgClaimAllocation,
    callOptions: CallOptions? = nil
  ) async throws -> Teritori_Airdrop_V1beta1_MsgClaimAllocationResponse {
    return try await self.performAsyncUnaryCall(
      path: Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.claimAllocation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClaimAllocationInterceptors() ?? []
    )
  }

  internal func setAllocation(
    _ request: Teritori_Airdrop_V1beta1_MsgSetAllocation,
    callOptions: CallOptions? = nil
  ) async throws -> Teritori_Airdrop_V1beta1_MsgSetAllocationResponse {
    return try await self.performAsyncUnaryCall(
      path: Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.setAllocation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetAllocationInterceptors() ?? []
    )
  }

  internal func transferModuleOwnership(
    _ request: Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership,
    callOptions: CallOptions? = nil
  ) async throws -> Teritori_Airdrop_V1beta1_MsgTransferModuleOwnershipResponse {
    return try await self.performAsyncUnaryCall(
      path: Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.transferModuleOwnership.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTransferModuleOwnershipInterceptors() ?? []
    )
  }

  internal func depositTokens(
    _ request: Teritori_Airdrop_V1beta1_MsgDepositTokens,
    callOptions: CallOptions? = nil
  ) async throws -> Teritori_Airdrop_V1beta1_MsgDepositTokensResponse {
    return try await self.performAsyncUnaryCall(
      path: Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.depositTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositTokensInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Teritori_Airdrop_V1beta1_MsgAsyncClient: Teritori_Airdrop_V1beta1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Teritori_Airdrop_V1beta1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Teritori_Airdrop_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Teritori_Airdrop_V1beta1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'claimAllocation'.
  func makeClaimAllocationInterceptors() -> [ClientInterceptor<Teritori_Airdrop_V1beta1_MsgClaimAllocation, Teritori_Airdrop_V1beta1_MsgClaimAllocationResponse>]

  /// - Returns: Interceptors to use when invoking 'setAllocation'.
  func makeSetAllocationInterceptors() -> [ClientInterceptor<Teritori_Airdrop_V1beta1_MsgSetAllocation, Teritori_Airdrop_V1beta1_MsgSetAllocationResponse>]

  /// - Returns: Interceptors to use when invoking 'transferModuleOwnership'.
  func makeTransferModuleOwnershipInterceptors() -> [ClientInterceptor<Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership, Teritori_Airdrop_V1beta1_MsgTransferModuleOwnershipResponse>]

  /// - Returns: Interceptors to use when invoking 'depositTokens'.
  func makeDepositTokensInterceptors() -> [ClientInterceptor<Teritori_Airdrop_V1beta1_MsgDepositTokens, Teritori_Airdrop_V1beta1_MsgDepositTokensResponse>]
}

internal enum Teritori_Airdrop_V1beta1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "teritori.airdrop.v1beta1.Msg",
    methods: [
      Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.claimAllocation,
      Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.setAllocation,
      Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.transferModuleOwnership,
      Teritori_Airdrop_V1beta1_MsgClientMetadata.Methods.depositTokens,
    ]
  )

  internal enum Methods {
    internal static let claimAllocation = GRPCMethodDescriptor(
      name: "ClaimAllocation",
      path: "/teritori.airdrop.v1beta1.Msg/ClaimAllocation",
      type: GRPCCallType.unary
    )

    internal static let setAllocation = GRPCMethodDescriptor(
      name: "SetAllocation",
      path: "/teritori.airdrop.v1beta1.Msg/SetAllocation",
      type: GRPCCallType.unary
    )

    internal static let transferModuleOwnership = GRPCMethodDescriptor(
      name: "TransferModuleOwnership",
      path: "/teritori.airdrop.v1beta1.Msg/TransferModuleOwnership",
      type: GRPCCallType.unary
    )

    internal static let depositTokens = GRPCMethodDescriptor(
      name: "DepositTokens",
      path: "/teritori.airdrop.v1beta1.Msg/DepositTokens",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the staking Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Teritori_Airdrop_V1beta1_MsgProvider: CallHandlerProvider {
  var interceptors: Teritori_Airdrop_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// ClaimAllocation defines a method to claim allocation
  func claimAllocation(request: Teritori_Airdrop_V1beta1_MsgClaimAllocation, context: StatusOnlyCallContext) -> EventLoopFuture<Teritori_Airdrop_V1beta1_MsgClaimAllocationResponse>

  /// SetAllocation defines a method to set allocation
  func setAllocation(request: Teritori_Airdrop_V1beta1_MsgSetAllocation, context: StatusOnlyCallContext) -> EventLoopFuture<Teritori_Airdrop_V1beta1_MsgSetAllocationResponse>

  /// TransferModuleOwnership defines a method to transfer module ownership to other address
  func transferModuleOwnership(request: Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership, context: StatusOnlyCallContext) -> EventLoopFuture<Teritori_Airdrop_V1beta1_MsgTransferModuleOwnershipResponse>

  /// DepositTokens defines a method to deposit tokens to the module
  func depositTokens(request: Teritori_Airdrop_V1beta1_MsgDepositTokens, context: StatusOnlyCallContext) -> EventLoopFuture<Teritori_Airdrop_V1beta1_MsgDepositTokensResponse>
}

extension Teritori_Airdrop_V1beta1_MsgProvider {
  internal var serviceName: Substring {
    return Teritori_Airdrop_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "ClaimAllocation":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Teritori_Airdrop_V1beta1_MsgClaimAllocation>(),
        responseSerializer: ProtobufSerializer<Teritori_Airdrop_V1beta1_MsgClaimAllocationResponse>(),
        interceptors: self.interceptors?.makeClaimAllocationInterceptors() ?? [],
        userFunction: self.claimAllocation(request:context:)
      )

    case "SetAllocation":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Teritori_Airdrop_V1beta1_MsgSetAllocation>(),
        responseSerializer: ProtobufSerializer<Teritori_Airdrop_V1beta1_MsgSetAllocationResponse>(),
        interceptors: self.interceptors?.makeSetAllocationInterceptors() ?? [],
        userFunction: self.setAllocation(request:context:)
      )

    case "TransferModuleOwnership":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership>(),
        responseSerializer: ProtobufSerializer<Teritori_Airdrop_V1beta1_MsgTransferModuleOwnershipResponse>(),
        interceptors: self.interceptors?.makeTransferModuleOwnershipInterceptors() ?? [],
        userFunction: self.transferModuleOwnership(request:context:)
      )

    case "DepositTokens":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Teritori_Airdrop_V1beta1_MsgDepositTokens>(),
        responseSerializer: ProtobufSerializer<Teritori_Airdrop_V1beta1_MsgDepositTokensResponse>(),
        interceptors: self.interceptors?.makeDepositTokensInterceptors() ?? [],
        userFunction: self.depositTokens(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the staking Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Teritori_Airdrop_V1beta1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Teritori_Airdrop_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// ClaimAllocation defines a method to claim allocation
  @Sendable func claimAllocation(
    request: Teritori_Airdrop_V1beta1_MsgClaimAllocation,
    context: GRPCAsyncServerCallContext
  ) async throws -> Teritori_Airdrop_V1beta1_MsgClaimAllocationResponse

  /// SetAllocation defines a method to set allocation
  @Sendable func setAllocation(
    request: Teritori_Airdrop_V1beta1_MsgSetAllocation,
    context: GRPCAsyncServerCallContext
  ) async throws -> Teritori_Airdrop_V1beta1_MsgSetAllocationResponse

  /// TransferModuleOwnership defines a method to transfer module ownership to other address
  @Sendable func transferModuleOwnership(
    request: Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership,
    context: GRPCAsyncServerCallContext
  ) async throws -> Teritori_Airdrop_V1beta1_MsgTransferModuleOwnershipResponse

  /// DepositTokens defines a method to deposit tokens to the module
  @Sendable func depositTokens(
    request: Teritori_Airdrop_V1beta1_MsgDepositTokens,
    context: GRPCAsyncServerCallContext
  ) async throws -> Teritori_Airdrop_V1beta1_MsgDepositTokensResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Teritori_Airdrop_V1beta1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Teritori_Airdrop_V1beta1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Teritori_Airdrop_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Teritori_Airdrop_V1beta1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "ClaimAllocation":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Teritori_Airdrop_V1beta1_MsgClaimAllocation>(),
        responseSerializer: ProtobufSerializer<Teritori_Airdrop_V1beta1_MsgClaimAllocationResponse>(),
        interceptors: self.interceptors?.makeClaimAllocationInterceptors() ?? [],
        wrapping: self.claimAllocation(request:context:)
      )

    case "SetAllocation":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Teritori_Airdrop_V1beta1_MsgSetAllocation>(),
        responseSerializer: ProtobufSerializer<Teritori_Airdrop_V1beta1_MsgSetAllocationResponse>(),
        interceptors: self.interceptors?.makeSetAllocationInterceptors() ?? [],
        wrapping: self.setAllocation(request:context:)
      )

    case "TransferModuleOwnership":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership>(),
        responseSerializer: ProtobufSerializer<Teritori_Airdrop_V1beta1_MsgTransferModuleOwnershipResponse>(),
        interceptors: self.interceptors?.makeTransferModuleOwnershipInterceptors() ?? [],
        wrapping: self.transferModuleOwnership(request:context:)
      )

    case "DepositTokens":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Teritori_Airdrop_V1beta1_MsgDepositTokens>(),
        responseSerializer: ProtobufSerializer<Teritori_Airdrop_V1beta1_MsgDepositTokensResponse>(),
        interceptors: self.interceptors?.makeDepositTokensInterceptors() ?? [],
        wrapping: self.depositTokens(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Teritori_Airdrop_V1beta1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'claimAllocation'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeClaimAllocationInterceptors() -> [ServerInterceptor<Teritori_Airdrop_V1beta1_MsgClaimAllocation, Teritori_Airdrop_V1beta1_MsgClaimAllocationResponse>]

  /// - Returns: Interceptors to use when handling 'setAllocation'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetAllocationInterceptors() -> [ServerInterceptor<Teritori_Airdrop_V1beta1_MsgSetAllocation, Teritori_Airdrop_V1beta1_MsgSetAllocationResponse>]

  /// - Returns: Interceptors to use when handling 'transferModuleOwnership'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeTransferModuleOwnershipInterceptors() -> [ServerInterceptor<Teritori_Airdrop_V1beta1_MsgTransferModuleOwnership, Teritori_Airdrop_V1beta1_MsgTransferModuleOwnershipResponse>]

  /// - Returns: Interceptors to use when handling 'depositTokens'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDepositTokensInterceptors() -> [ServerInterceptor<Teritori_Airdrop_V1beta1_MsgDepositTokens, Teritori_Airdrop_V1beta1_MsgDepositTokensResponse>]
}

internal enum Teritori_Airdrop_V1beta1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "teritori.airdrop.v1beta1.Msg",
    methods: [
      Teritori_Airdrop_V1beta1_MsgServerMetadata.Methods.claimAllocation,
      Teritori_Airdrop_V1beta1_MsgServerMetadata.Methods.setAllocation,
      Teritori_Airdrop_V1beta1_MsgServerMetadata.Methods.transferModuleOwnership,
      Teritori_Airdrop_V1beta1_MsgServerMetadata.Methods.depositTokens,
    ]
  )

  internal enum Methods {
    internal static let claimAllocation = GRPCMethodDescriptor(
      name: "ClaimAllocation",
      path: "/teritori.airdrop.v1beta1.Msg/ClaimAllocation",
      type: GRPCCallType.unary
    )

    internal static let setAllocation = GRPCMethodDescriptor(
      name: "SetAllocation",
      path: "/teritori.airdrop.v1beta1.Msg/SetAllocation",
      type: GRPCCallType.unary
    )

    internal static let transferModuleOwnership = GRPCMethodDescriptor(
      name: "TransferModuleOwnership",
      path: "/teritori.airdrop.v1beta1.Msg/TransferModuleOwnership",
      type: GRPCCallType.unary
    )

    internal static let depositTokens = GRPCMethodDescriptor(
      name: "DepositTokens",
      path: "/teritori.airdrop.v1beta1.Msg/DepositTokens",
      type: GRPCCallType.unary
    )
  }
}

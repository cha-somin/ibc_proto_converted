//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: cosmwasm/wasm/v1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the wasm Msg service.
///
/// Usage: instantiate `Cosmwasm_Wasm_V1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Cosmwasm_Wasm_V1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Cosmwasm_Wasm_V1_MsgClientInterceptorFactoryProtocol? { get }

  func storeCode(
    _ request: Cosmwasm_Wasm_V1_MsgStoreCode,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgStoreCode, Cosmwasm_Wasm_V1_MsgStoreCodeResponse>

  func instantiateContract(
    _ request: Cosmwasm_Wasm_V1_MsgInstantiateContract,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgInstantiateContract, Cosmwasm_Wasm_V1_MsgInstantiateContractResponse>

  func instantiateContract2(
    _ request: Cosmwasm_Wasm_V1_MsgInstantiateContract2,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgInstantiateContract2, Cosmwasm_Wasm_V1_MsgInstantiateContract2Response>

  func executeContract(
    _ request: Cosmwasm_Wasm_V1_MsgExecuteContract,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgExecuteContract, Cosmwasm_Wasm_V1_MsgExecuteContractResponse>

  func migrateContract(
    _ request: Cosmwasm_Wasm_V1_MsgMigrateContract,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgMigrateContract, Cosmwasm_Wasm_V1_MsgMigrateContractResponse>

  func updateAdmin(
    _ request: Cosmwasm_Wasm_V1_MsgUpdateAdmin,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgUpdateAdmin, Cosmwasm_Wasm_V1_MsgUpdateAdminResponse>

  func clearAdmin(
    _ request: Cosmwasm_Wasm_V1_MsgClearAdmin,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgClearAdmin, Cosmwasm_Wasm_V1_MsgClearAdminResponse>
}

extension Cosmwasm_Wasm_V1_MsgClientProtocol {
  internal var serviceName: String {
    return "cosmwasm.wasm.v1.Msg"
  }

  /// StoreCode to submit Wasm code to the system
  ///
  /// - Parameters:
  ///   - request: Request to send to StoreCode.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func storeCode(
    _ request: Cosmwasm_Wasm_V1_MsgStoreCode,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgStoreCode, Cosmwasm_Wasm_V1_MsgStoreCodeResponse> {
    return self.makeUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.storeCode.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStoreCodeInterceptors() ?? []
    )
  }

  ///  InstantiateContract creates a new smart contract instance for the given
  ///  code id.
  ///
  /// - Parameters:
  ///   - request: Request to send to InstantiateContract.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func instantiateContract(
    _ request: Cosmwasm_Wasm_V1_MsgInstantiateContract,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgInstantiateContract, Cosmwasm_Wasm_V1_MsgInstantiateContractResponse> {
    return self.makeUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.instantiateContract.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantiateContractInterceptors() ?? []
    )
  }

  ///  InstantiateContract2 creates a new smart contract instance for the given
  ///  code id with a predictable address
  ///
  /// - Parameters:
  ///   - request: Request to send to InstantiateContract2.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func instantiateContract2(
    _ request: Cosmwasm_Wasm_V1_MsgInstantiateContract2,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgInstantiateContract2, Cosmwasm_Wasm_V1_MsgInstantiateContract2Response> {
    return self.makeUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.instantiateContract2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantiateContract2Interceptors() ?? []
    )
  }

  /// Execute submits the given message data to a smart contract
  ///
  /// - Parameters:
  ///   - request: Request to send to ExecuteContract.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func executeContract(
    _ request: Cosmwasm_Wasm_V1_MsgExecuteContract,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgExecuteContract, Cosmwasm_Wasm_V1_MsgExecuteContractResponse> {
    return self.makeUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.executeContract.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteContractInterceptors() ?? []
    )
  }

  /// Migrate runs a code upgrade/ downgrade for a smart contract
  ///
  /// - Parameters:
  ///   - request: Request to send to MigrateContract.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func migrateContract(
    _ request: Cosmwasm_Wasm_V1_MsgMigrateContract,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgMigrateContract, Cosmwasm_Wasm_V1_MsgMigrateContractResponse> {
    return self.makeUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.migrateContract.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMigrateContractInterceptors() ?? []
    )
  }

  /// UpdateAdmin sets a new   admin for a smart contract
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateAdmin.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateAdmin(
    _ request: Cosmwasm_Wasm_V1_MsgUpdateAdmin,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgUpdateAdmin, Cosmwasm_Wasm_V1_MsgUpdateAdminResponse> {
    return self.makeUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.updateAdmin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateAdminInterceptors() ?? []
    )
  }

  /// ClearAdmin removes any admin stored for a smart contract
  ///
  /// - Parameters:
  ///   - request: Request to send to ClearAdmin.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func clearAdmin(
    _ request: Cosmwasm_Wasm_V1_MsgClearAdmin,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmwasm_Wasm_V1_MsgClearAdmin, Cosmwasm_Wasm_V1_MsgClearAdminResponse> {
    return self.makeUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.clearAdmin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClearAdminInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Cosmwasm_Wasm_V1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Cosmwasm_Wasm_V1_MsgNIOClient")
internal final class Cosmwasm_Wasm_V1_MsgClient: Cosmwasm_Wasm_V1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Cosmwasm_Wasm_V1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Cosmwasm_Wasm_V1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the cosmwasm.wasm.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Cosmwasm_Wasm_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Cosmwasm_Wasm_V1_MsgNIOClient: Cosmwasm_Wasm_V1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Cosmwasm_Wasm_V1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the cosmwasm.wasm.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Cosmwasm_Wasm_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the wasm Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Cosmwasm_Wasm_V1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Cosmwasm_Wasm_V1_MsgClientInterceptorFactoryProtocol? { get }

  func makeStoreCodeCall(
    _ request: Cosmwasm_Wasm_V1_MsgStoreCode,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgStoreCode, Cosmwasm_Wasm_V1_MsgStoreCodeResponse>

  func makeInstantiateContractCall(
    _ request: Cosmwasm_Wasm_V1_MsgInstantiateContract,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgInstantiateContract, Cosmwasm_Wasm_V1_MsgInstantiateContractResponse>

  func makeInstantiateContract2Call(
    _ request: Cosmwasm_Wasm_V1_MsgInstantiateContract2,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgInstantiateContract2, Cosmwasm_Wasm_V1_MsgInstantiateContract2Response>

  func makeExecuteContractCall(
    _ request: Cosmwasm_Wasm_V1_MsgExecuteContract,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgExecuteContract, Cosmwasm_Wasm_V1_MsgExecuteContractResponse>

  func makeMigrateContractCall(
    _ request: Cosmwasm_Wasm_V1_MsgMigrateContract,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgMigrateContract, Cosmwasm_Wasm_V1_MsgMigrateContractResponse>

  func makeUpdateAdminCall(
    _ request: Cosmwasm_Wasm_V1_MsgUpdateAdmin,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgUpdateAdmin, Cosmwasm_Wasm_V1_MsgUpdateAdminResponse>

  func makeClearAdminCall(
    _ request: Cosmwasm_Wasm_V1_MsgClearAdmin,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgClearAdmin, Cosmwasm_Wasm_V1_MsgClearAdminResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Cosmwasm_Wasm_V1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Cosmwasm_Wasm_V1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Cosmwasm_Wasm_V1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeStoreCodeCall(
    _ request: Cosmwasm_Wasm_V1_MsgStoreCode,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgStoreCode, Cosmwasm_Wasm_V1_MsgStoreCodeResponse> {
    return self.makeAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.storeCode.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStoreCodeInterceptors() ?? []
    )
  }

  internal func makeInstantiateContractCall(
    _ request: Cosmwasm_Wasm_V1_MsgInstantiateContract,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgInstantiateContract, Cosmwasm_Wasm_V1_MsgInstantiateContractResponse> {
    return self.makeAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.instantiateContract.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantiateContractInterceptors() ?? []
    )
  }

  internal func makeInstantiateContract2Call(
    _ request: Cosmwasm_Wasm_V1_MsgInstantiateContract2,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgInstantiateContract2, Cosmwasm_Wasm_V1_MsgInstantiateContract2Response> {
    return self.makeAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.instantiateContract2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantiateContract2Interceptors() ?? []
    )
  }

  internal func makeExecuteContractCall(
    _ request: Cosmwasm_Wasm_V1_MsgExecuteContract,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgExecuteContract, Cosmwasm_Wasm_V1_MsgExecuteContractResponse> {
    return self.makeAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.executeContract.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteContractInterceptors() ?? []
    )
  }

  internal func makeMigrateContractCall(
    _ request: Cosmwasm_Wasm_V1_MsgMigrateContract,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgMigrateContract, Cosmwasm_Wasm_V1_MsgMigrateContractResponse> {
    return self.makeAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.migrateContract.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMigrateContractInterceptors() ?? []
    )
  }

  internal func makeUpdateAdminCall(
    _ request: Cosmwasm_Wasm_V1_MsgUpdateAdmin,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgUpdateAdmin, Cosmwasm_Wasm_V1_MsgUpdateAdminResponse> {
    return self.makeAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.updateAdmin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateAdminInterceptors() ?? []
    )
  }

  internal func makeClearAdminCall(
    _ request: Cosmwasm_Wasm_V1_MsgClearAdmin,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cosmwasm_Wasm_V1_MsgClearAdmin, Cosmwasm_Wasm_V1_MsgClearAdminResponse> {
    return self.makeAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.clearAdmin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClearAdminInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Cosmwasm_Wasm_V1_MsgAsyncClientProtocol {
  internal func storeCode(
    _ request: Cosmwasm_Wasm_V1_MsgStoreCode,
    callOptions: CallOptions? = nil
  ) async throws -> Cosmwasm_Wasm_V1_MsgStoreCodeResponse {
    return try await self.performAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.storeCode.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStoreCodeInterceptors() ?? []
    )
  }

  internal func instantiateContract(
    _ request: Cosmwasm_Wasm_V1_MsgInstantiateContract,
    callOptions: CallOptions? = nil
  ) async throws -> Cosmwasm_Wasm_V1_MsgInstantiateContractResponse {
    return try await self.performAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.instantiateContract.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantiateContractInterceptors() ?? []
    )
  }

  internal func instantiateContract2(
    _ request: Cosmwasm_Wasm_V1_MsgInstantiateContract2,
    callOptions: CallOptions? = nil
  ) async throws -> Cosmwasm_Wasm_V1_MsgInstantiateContract2Response {
    return try await self.performAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.instantiateContract2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantiateContract2Interceptors() ?? []
    )
  }

  internal func executeContract(
    _ request: Cosmwasm_Wasm_V1_MsgExecuteContract,
    callOptions: CallOptions? = nil
  ) async throws -> Cosmwasm_Wasm_V1_MsgExecuteContractResponse {
    return try await self.performAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.executeContract.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteContractInterceptors() ?? []
    )
  }

  internal func migrateContract(
    _ request: Cosmwasm_Wasm_V1_MsgMigrateContract,
    callOptions: CallOptions? = nil
  ) async throws -> Cosmwasm_Wasm_V1_MsgMigrateContractResponse {
    return try await self.performAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.migrateContract.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMigrateContractInterceptors() ?? []
    )
  }

  internal func updateAdmin(
    _ request: Cosmwasm_Wasm_V1_MsgUpdateAdmin,
    callOptions: CallOptions? = nil
  ) async throws -> Cosmwasm_Wasm_V1_MsgUpdateAdminResponse {
    return try await self.performAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.updateAdmin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateAdminInterceptors() ?? []
    )
  }

  internal func clearAdmin(
    _ request: Cosmwasm_Wasm_V1_MsgClearAdmin,
    callOptions: CallOptions? = nil
  ) async throws -> Cosmwasm_Wasm_V1_MsgClearAdminResponse {
    return try await self.performAsyncUnaryCall(
      path: Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.clearAdmin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClearAdminInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Cosmwasm_Wasm_V1_MsgAsyncClient: Cosmwasm_Wasm_V1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Cosmwasm_Wasm_V1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Cosmwasm_Wasm_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Cosmwasm_Wasm_V1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'storeCode'.
  func makeStoreCodeInterceptors() -> [ClientInterceptor<Cosmwasm_Wasm_V1_MsgStoreCode, Cosmwasm_Wasm_V1_MsgStoreCodeResponse>]

  /// - Returns: Interceptors to use when invoking 'instantiateContract'.
  func makeInstantiateContractInterceptors() -> [ClientInterceptor<Cosmwasm_Wasm_V1_MsgInstantiateContract, Cosmwasm_Wasm_V1_MsgInstantiateContractResponse>]

  /// - Returns: Interceptors to use when invoking 'instantiateContract2'.
  func makeInstantiateContract2Interceptors() -> [ClientInterceptor<Cosmwasm_Wasm_V1_MsgInstantiateContract2, Cosmwasm_Wasm_V1_MsgInstantiateContract2Response>]

  /// - Returns: Interceptors to use when invoking 'executeContract'.
  func makeExecuteContractInterceptors() -> [ClientInterceptor<Cosmwasm_Wasm_V1_MsgExecuteContract, Cosmwasm_Wasm_V1_MsgExecuteContractResponse>]

  /// - Returns: Interceptors to use when invoking 'migrateContract'.
  func makeMigrateContractInterceptors() -> [ClientInterceptor<Cosmwasm_Wasm_V1_MsgMigrateContract, Cosmwasm_Wasm_V1_MsgMigrateContractResponse>]

  /// - Returns: Interceptors to use when invoking 'updateAdmin'.
  func makeUpdateAdminInterceptors() -> [ClientInterceptor<Cosmwasm_Wasm_V1_MsgUpdateAdmin, Cosmwasm_Wasm_V1_MsgUpdateAdminResponse>]

  /// - Returns: Interceptors to use when invoking 'clearAdmin'.
  func makeClearAdminInterceptors() -> [ClientInterceptor<Cosmwasm_Wasm_V1_MsgClearAdmin, Cosmwasm_Wasm_V1_MsgClearAdminResponse>]
}

internal enum Cosmwasm_Wasm_V1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "cosmwasm.wasm.v1.Msg",
    methods: [
      Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.storeCode,
      Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.instantiateContract,
      Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.instantiateContract2,
      Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.executeContract,
      Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.migrateContract,
      Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.updateAdmin,
      Cosmwasm_Wasm_V1_MsgClientMetadata.Methods.clearAdmin,
    ]
  )

  internal enum Methods {
    internal static let storeCode = GRPCMethodDescriptor(
      name: "StoreCode",
      path: "/cosmwasm.wasm.v1.Msg/StoreCode",
      type: GRPCCallType.unary
    )

    internal static let instantiateContract = GRPCMethodDescriptor(
      name: "InstantiateContract",
      path: "/cosmwasm.wasm.v1.Msg/InstantiateContract",
      type: GRPCCallType.unary
    )

    internal static let instantiateContract2 = GRPCMethodDescriptor(
      name: "InstantiateContract2",
      path: "/cosmwasm.wasm.v1.Msg/InstantiateContract2",
      type: GRPCCallType.unary
    )

    internal static let executeContract = GRPCMethodDescriptor(
      name: "ExecuteContract",
      path: "/cosmwasm.wasm.v1.Msg/ExecuteContract",
      type: GRPCCallType.unary
    )

    internal static let migrateContract = GRPCMethodDescriptor(
      name: "MigrateContract",
      path: "/cosmwasm.wasm.v1.Msg/MigrateContract",
      type: GRPCCallType.unary
    )

    internal static let updateAdmin = GRPCMethodDescriptor(
      name: "UpdateAdmin",
      path: "/cosmwasm.wasm.v1.Msg/UpdateAdmin",
      type: GRPCCallType.unary
    )

    internal static let clearAdmin = GRPCMethodDescriptor(
      name: "ClearAdmin",
      path: "/cosmwasm.wasm.v1.Msg/ClearAdmin",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the wasm Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Cosmwasm_Wasm_V1_MsgProvider: CallHandlerProvider {
  var interceptors: Cosmwasm_Wasm_V1_MsgServerInterceptorFactoryProtocol? { get }

  /// StoreCode to submit Wasm code to the system
  func storeCode(request: Cosmwasm_Wasm_V1_MsgStoreCode, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmwasm_Wasm_V1_MsgStoreCodeResponse>

  ///  InstantiateContract creates a new smart contract instance for the given
  ///  code id.
  func instantiateContract(request: Cosmwasm_Wasm_V1_MsgInstantiateContract, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmwasm_Wasm_V1_MsgInstantiateContractResponse>

  ///  InstantiateContract2 creates a new smart contract instance for the given
  ///  code id with a predictable address
  func instantiateContract2(request: Cosmwasm_Wasm_V1_MsgInstantiateContract2, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmwasm_Wasm_V1_MsgInstantiateContract2Response>

  /// Execute submits the given message data to a smart contract
  func executeContract(request: Cosmwasm_Wasm_V1_MsgExecuteContract, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmwasm_Wasm_V1_MsgExecuteContractResponse>

  /// Migrate runs a code upgrade/ downgrade for a smart contract
  func migrateContract(request: Cosmwasm_Wasm_V1_MsgMigrateContract, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmwasm_Wasm_V1_MsgMigrateContractResponse>

  /// UpdateAdmin sets a new   admin for a smart contract
  func updateAdmin(request: Cosmwasm_Wasm_V1_MsgUpdateAdmin, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmwasm_Wasm_V1_MsgUpdateAdminResponse>

  /// ClearAdmin removes any admin stored for a smart contract
  func clearAdmin(request: Cosmwasm_Wasm_V1_MsgClearAdmin, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmwasm_Wasm_V1_MsgClearAdminResponse>
}

extension Cosmwasm_Wasm_V1_MsgProvider {
  internal var serviceName: Substring {
    return Cosmwasm_Wasm_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "StoreCode":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgStoreCode>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgStoreCodeResponse>(),
        interceptors: self.interceptors?.makeStoreCodeInterceptors() ?? [],
        userFunction: self.storeCode(request:context:)
      )

    case "InstantiateContract":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgInstantiateContract>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgInstantiateContractResponse>(),
        interceptors: self.interceptors?.makeInstantiateContractInterceptors() ?? [],
        userFunction: self.instantiateContract(request:context:)
      )

    case "InstantiateContract2":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgInstantiateContract2>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgInstantiateContract2Response>(),
        interceptors: self.interceptors?.makeInstantiateContract2Interceptors() ?? [],
        userFunction: self.instantiateContract2(request:context:)
      )

    case "ExecuteContract":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgExecuteContract>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgExecuteContractResponse>(),
        interceptors: self.interceptors?.makeExecuteContractInterceptors() ?? [],
        userFunction: self.executeContract(request:context:)
      )

    case "MigrateContract":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgMigrateContract>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgMigrateContractResponse>(),
        interceptors: self.interceptors?.makeMigrateContractInterceptors() ?? [],
        userFunction: self.migrateContract(request:context:)
      )

    case "UpdateAdmin":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgUpdateAdmin>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgUpdateAdminResponse>(),
        interceptors: self.interceptors?.makeUpdateAdminInterceptors() ?? [],
        userFunction: self.updateAdmin(request:context:)
      )

    case "ClearAdmin":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgClearAdmin>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgClearAdminResponse>(),
        interceptors: self.interceptors?.makeClearAdminInterceptors() ?? [],
        userFunction: self.clearAdmin(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the wasm Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Cosmwasm_Wasm_V1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Cosmwasm_Wasm_V1_MsgServerInterceptorFactoryProtocol? { get }

  /// StoreCode to submit Wasm code to the system
  @Sendable func storeCode(
    request: Cosmwasm_Wasm_V1_MsgStoreCode,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cosmwasm_Wasm_V1_MsgStoreCodeResponse

  ///  InstantiateContract creates a new smart contract instance for the given
  ///  code id.
  @Sendable func instantiateContract(
    request: Cosmwasm_Wasm_V1_MsgInstantiateContract,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cosmwasm_Wasm_V1_MsgInstantiateContractResponse

  ///  InstantiateContract2 creates a new smart contract instance for the given
  ///  code id with a predictable address
  @Sendable func instantiateContract2(
    request: Cosmwasm_Wasm_V1_MsgInstantiateContract2,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cosmwasm_Wasm_V1_MsgInstantiateContract2Response

  /// Execute submits the given message data to a smart contract
  @Sendable func executeContract(
    request: Cosmwasm_Wasm_V1_MsgExecuteContract,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cosmwasm_Wasm_V1_MsgExecuteContractResponse

  /// Migrate runs a code upgrade/ downgrade for a smart contract
  @Sendable func migrateContract(
    request: Cosmwasm_Wasm_V1_MsgMigrateContract,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cosmwasm_Wasm_V1_MsgMigrateContractResponse

  /// UpdateAdmin sets a new   admin for a smart contract
  @Sendable func updateAdmin(
    request: Cosmwasm_Wasm_V1_MsgUpdateAdmin,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cosmwasm_Wasm_V1_MsgUpdateAdminResponse

  /// ClearAdmin removes any admin stored for a smart contract
  @Sendable func clearAdmin(
    request: Cosmwasm_Wasm_V1_MsgClearAdmin,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cosmwasm_Wasm_V1_MsgClearAdminResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Cosmwasm_Wasm_V1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Cosmwasm_Wasm_V1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Cosmwasm_Wasm_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Cosmwasm_Wasm_V1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "StoreCode":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgStoreCode>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgStoreCodeResponse>(),
        interceptors: self.interceptors?.makeStoreCodeInterceptors() ?? [],
        wrapping: self.storeCode(request:context:)
      )

    case "InstantiateContract":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgInstantiateContract>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgInstantiateContractResponse>(),
        interceptors: self.interceptors?.makeInstantiateContractInterceptors() ?? [],
        wrapping: self.instantiateContract(request:context:)
      )

    case "InstantiateContract2":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgInstantiateContract2>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgInstantiateContract2Response>(),
        interceptors: self.interceptors?.makeInstantiateContract2Interceptors() ?? [],
        wrapping: self.instantiateContract2(request:context:)
      )

    case "ExecuteContract":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgExecuteContract>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgExecuteContractResponse>(),
        interceptors: self.interceptors?.makeExecuteContractInterceptors() ?? [],
        wrapping: self.executeContract(request:context:)
      )

    case "MigrateContract":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgMigrateContract>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgMigrateContractResponse>(),
        interceptors: self.interceptors?.makeMigrateContractInterceptors() ?? [],
        wrapping: self.migrateContract(request:context:)
      )

    case "UpdateAdmin":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgUpdateAdmin>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgUpdateAdminResponse>(),
        interceptors: self.interceptors?.makeUpdateAdminInterceptors() ?? [],
        wrapping: self.updateAdmin(request:context:)
      )

    case "ClearAdmin":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmwasm_Wasm_V1_MsgClearAdmin>(),
        responseSerializer: ProtobufSerializer<Cosmwasm_Wasm_V1_MsgClearAdminResponse>(),
        interceptors: self.interceptors?.makeClearAdminInterceptors() ?? [],
        wrapping: self.clearAdmin(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Cosmwasm_Wasm_V1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'storeCode'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeStoreCodeInterceptors() -> [ServerInterceptor<Cosmwasm_Wasm_V1_MsgStoreCode, Cosmwasm_Wasm_V1_MsgStoreCodeResponse>]

  /// - Returns: Interceptors to use when handling 'instantiateContract'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInstantiateContractInterceptors() -> [ServerInterceptor<Cosmwasm_Wasm_V1_MsgInstantiateContract, Cosmwasm_Wasm_V1_MsgInstantiateContractResponse>]

  /// - Returns: Interceptors to use when handling 'instantiateContract2'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInstantiateContract2Interceptors() -> [ServerInterceptor<Cosmwasm_Wasm_V1_MsgInstantiateContract2, Cosmwasm_Wasm_V1_MsgInstantiateContract2Response>]

  /// - Returns: Interceptors to use when handling 'executeContract'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeExecuteContractInterceptors() -> [ServerInterceptor<Cosmwasm_Wasm_V1_MsgExecuteContract, Cosmwasm_Wasm_V1_MsgExecuteContractResponse>]

  /// - Returns: Interceptors to use when handling 'migrateContract'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMigrateContractInterceptors() -> [ServerInterceptor<Cosmwasm_Wasm_V1_MsgMigrateContract, Cosmwasm_Wasm_V1_MsgMigrateContractResponse>]

  /// - Returns: Interceptors to use when handling 'updateAdmin'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateAdminInterceptors() -> [ServerInterceptor<Cosmwasm_Wasm_V1_MsgUpdateAdmin, Cosmwasm_Wasm_V1_MsgUpdateAdminResponse>]

  /// - Returns: Interceptors to use when handling 'clearAdmin'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeClearAdminInterceptors() -> [ServerInterceptor<Cosmwasm_Wasm_V1_MsgClearAdmin, Cosmwasm_Wasm_V1_MsgClearAdminResponse>]
}

internal enum Cosmwasm_Wasm_V1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "cosmwasm.wasm.v1.Msg",
    methods: [
      Cosmwasm_Wasm_V1_MsgServerMetadata.Methods.storeCode,
      Cosmwasm_Wasm_V1_MsgServerMetadata.Methods.instantiateContract,
      Cosmwasm_Wasm_V1_MsgServerMetadata.Methods.instantiateContract2,
      Cosmwasm_Wasm_V1_MsgServerMetadata.Methods.executeContract,
      Cosmwasm_Wasm_V1_MsgServerMetadata.Methods.migrateContract,
      Cosmwasm_Wasm_V1_MsgServerMetadata.Methods.updateAdmin,
      Cosmwasm_Wasm_V1_MsgServerMetadata.Methods.clearAdmin,
    ]
  )

  internal enum Methods {
    internal static let storeCode = GRPCMethodDescriptor(
      name: "StoreCode",
      path: "/cosmwasm.wasm.v1.Msg/StoreCode",
      type: GRPCCallType.unary
    )

    internal static let instantiateContract = GRPCMethodDescriptor(
      name: "InstantiateContract",
      path: "/cosmwasm.wasm.v1.Msg/InstantiateContract",
      type: GRPCCallType.unary
    )

    internal static let instantiateContract2 = GRPCMethodDescriptor(
      name: "InstantiateContract2",
      path: "/cosmwasm.wasm.v1.Msg/InstantiateContract2",
      type: GRPCCallType.unary
    )

    internal static let executeContract = GRPCMethodDescriptor(
      name: "ExecuteContract",
      path: "/cosmwasm.wasm.v1.Msg/ExecuteContract",
      type: GRPCCallType.unary
    )

    internal static let migrateContract = GRPCMethodDescriptor(
      name: "MigrateContract",
      path: "/cosmwasm.wasm.v1.Msg/MigrateContract",
      type: GRPCCallType.unary
    )

    internal static let updateAdmin = GRPCMethodDescriptor(
      name: "UpdateAdmin",
      path: "/cosmwasm.wasm.v1.Msg/UpdateAdmin",
      type: GRPCCallType.unary
    )

    internal static let clearAdmin = GRPCMethodDescriptor(
      name: "ClearAdmin",
      path: "/cosmwasm.wasm.v1.Msg/ClearAdmin",
      type: GRPCCallType.unary
    )
  }
}

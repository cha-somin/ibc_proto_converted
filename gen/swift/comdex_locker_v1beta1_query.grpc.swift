//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: comdex/locker/v1beta1/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Comdex_Locker_V1beta1_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Comdex_Locker_V1beta1_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Comdex_Locker_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func queryLockerInfo(
    _ request: Comdex_Locker_V1beta1_QueryLockerInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerInfoRequest, Comdex_Locker_V1beta1_QueryLockerInfoResponse>

  func queryLockersByAppToAssetID(
    _ request: Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest, Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDResponse>

  func queryLockerInfoByAppID(
    _ request: Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest, Comdex_Locker_V1beta1_QueryLockerInfoByAppIDResponse>

  func queryTotalDepositByAppAndAssetID(
    _ request: Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest, Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDResponse>

  func queryOwnerLockerByAppIDbyOwner(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerResponse>

  func queryOwnerLockerOfAllAppsByOwner(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerResponse>

  func queryOwnerTxDetailsLockerOfAppByOwnerByAsset(
    _ request: Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest, Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetResponse>

  func queryOwnerLockerByAppToAssetIDbyOwner(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerResponse>

  func queryLockerByAppByOwner(
    _ request: Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest, Comdex_Locker_V1beta1_QueryLockerByAppByOwnerResponse>

  func queryLockerCountByAppID(
    _ request: Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest, Comdex_Locker_V1beta1_QueryLockerCountByAppIDResponse>

  func queryLockerCountByAppToAssetID(
    _ request: Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest, Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDResponse>

  func queryWhiteListedAssetIDsByAppID(
    _ request: Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest, Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDResponse>

  func queryWhiteListedAssetByAllApps(
    _ request: Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest, Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsResponse>

  func queryLockerLookupTableByApp(
    _ request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest, Comdex_Locker_V1beta1_QueryLockerLookupTableByAppResponse>

  func queryLockerLookupTableByAppAndAssetID(
    _ request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest, Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDResponse>

  func queryLockerTotalRewardsByAssetAppWise(
    _ request: Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest, Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseResponse>

  func queryLockerTotalDepositedByApp(
    _ request: Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest, Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppResponse>
}

extension Comdex_Locker_V1beta1_QueryClientProtocol {
  internal var serviceName: String {
    return "comdex.locker.v1beta1.Query"
  }

  /// Unary call to QueryLockerInfo
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockerInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockerInfo(
    _ request: Comdex_Locker_V1beta1_QueryLockerInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerInfoRequest, Comdex_Locker_V1beta1_QueryLockerInfoResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerInfoInterceptors() ?? []
    )
  }

  /// Unary call to QueryLockersByAppToAssetID
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockersByAppToAssetID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockersByAppToAssetID(
    _ request: Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest, Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockersByAppToAssetID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockersByAppToAssetIDInterceptors() ?? []
    )
  }

  /// Unary call to QueryLockerInfoByAppID
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockerInfoByAppID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockerInfoByAppID(
    _ request: Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest, Comdex_Locker_V1beta1_QueryLockerInfoByAppIDResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerInfoByAppID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerInfoByAppIDInterceptors() ?? []
    )
  }

  /// Unary call to QueryTotalDepositByAppAndAssetID
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryTotalDepositByAppAndAssetID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryTotalDepositByAppAndAssetID(
    _ request: Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest, Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryTotalDepositByAppAndAssetID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTotalDepositByAppAndAssetIDInterceptors() ?? []
    )
  }

  /// Unary call to QueryOwnerLockerByAppIDbyOwner
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryOwnerLockerByAppIDbyOwner.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryOwnerLockerByAppIDbyOwner(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerLockerByAppIDbyOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryOwnerLockerByAppIDbyOwnerInterceptors() ?? []
    )
  }

  /// Unary call to QueryOwnerLockerOfAllAppsByOwner
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryOwnerLockerOfAllAppsByOwner.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryOwnerLockerOfAllAppsByOwner(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerLockerOfAllAppsByOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryOwnerLockerOfAllAppsByOwnerInterceptors() ?? []
    )
  }

  /// Unary call to QueryOwnerTxDetailsLockerOfAppByOwnerByAsset
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryOwnerTxDetailsLockerOfAppByOwnerByAsset.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryOwnerTxDetailsLockerOfAppByOwnerByAsset(
    _ request: Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest, Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerTxDetailsLockerOfAppByOwnerByAsset.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryOwnerTxDetailsLockerOfAppByOwnerByAssetInterceptors() ?? []
    )
  }

  /// Unary call to QueryOwnerLockerByAppToAssetIDbyOwner
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryOwnerLockerByAppToAssetIDbyOwner.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryOwnerLockerByAppToAssetIDbyOwner(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerLockerByAppToAssetIDbyOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryOwnerLockerByAppToAssetIDbyOwnerInterceptors() ?? []
    )
  }

  /// Unary call to QueryLockerByAppByOwner
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockerByAppByOwner.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockerByAppByOwner(
    _ request: Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest, Comdex_Locker_V1beta1_QueryLockerByAppByOwnerResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerByAppByOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerByAppByOwnerInterceptors() ?? []
    )
  }

  /// Unary call to QueryLockerCountByAppID
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockerCountByAppID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockerCountByAppID(
    _ request: Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest, Comdex_Locker_V1beta1_QueryLockerCountByAppIDResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerCountByAppID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerCountByAppIDInterceptors() ?? []
    )
  }

  /// Unary call to QueryLockerCountByAppToAssetID
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockerCountByAppToAssetID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockerCountByAppToAssetID(
    _ request: Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest, Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerCountByAppToAssetID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerCountByAppToAssetIDInterceptors() ?? []
    )
  }

  /// Unary call to QueryWhiteListedAssetIDsByAppID
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryWhiteListedAssetIDsByAppID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryWhiteListedAssetIDsByAppID(
    _ request: Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest, Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryWhiteListedAssetIDsByAppID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryWhiteListedAssetIDsByAppIDInterceptors() ?? []
    )
  }

  /// Unary call to QueryWhiteListedAssetByAllApps
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryWhiteListedAssetByAllApps.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryWhiteListedAssetByAllApps(
    _ request: Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest, Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryWhiteListedAssetByAllApps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryWhiteListedAssetByAllAppsInterceptors() ?? []
    )
  }

  /// Unary call to QueryLockerLookupTableByApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockerLookupTableByApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockerLookupTableByApp(
    _ request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest, Comdex_Locker_V1beta1_QueryLockerLookupTableByAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerLookupTableByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerLookupTableByAppInterceptors() ?? []
    )
  }

  /// Unary call to QueryLockerLookupTableByAppAndAssetID
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockerLookupTableByAppAndAssetID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockerLookupTableByAppAndAssetID(
    _ request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest, Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerLookupTableByAppAndAssetID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerLookupTableByAppAndAssetIDInterceptors() ?? []
    )
  }

  /// Unary call to QueryLockerTotalRewardsByAssetAppWise
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockerTotalRewardsByAssetAppWise.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockerTotalRewardsByAssetAppWise(
    _ request: Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest, Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerTotalRewardsByAssetAppWise.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerTotalRewardsByAssetAppWiseInterceptors() ?? []
    )
  }

  /// Unary call to QueryLockerTotalDepositedByApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockerTotalDepositedByApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockerTotalDepositedByApp(
    _ request: Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest, Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerTotalDepositedByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerTotalDepositedByAppInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Comdex_Locker_V1beta1_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Comdex_Locker_V1beta1_QueryNIOClient")
internal final class Comdex_Locker_V1beta1_QueryClient: Comdex_Locker_V1beta1_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Comdex_Locker_V1beta1_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Comdex_Locker_V1beta1_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the comdex.locker.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Locker_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Comdex_Locker_V1beta1_QueryNIOClient: Comdex_Locker_V1beta1_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Comdex_Locker_V1beta1_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the comdex.locker.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Locker_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Comdex_Locker_V1beta1_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Comdex_Locker_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func makeQueryLockerInfoCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerInfoRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerInfoRequest, Comdex_Locker_V1beta1_QueryLockerInfoResponse>

  func makeQueryLockersByAppToAssetIDCall(
    _ request: Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest, Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDResponse>

  func makeQueryLockerInfoByAppIDCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest, Comdex_Locker_V1beta1_QueryLockerInfoByAppIDResponse>

  func makeQueryTotalDepositByAppAndAssetIDCall(
    _ request: Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest, Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDResponse>

  func makeQueryOwnerLockerByAppIdbyOwnerCall(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerResponse>

  func makeQueryOwnerLockerOfAllAppsByOwnerCall(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerResponse>

  func makeQueryOwnerTxDetailsLockerOfAppByOwnerByAssetCall(
    _ request: Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest, Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetResponse>

  func makeQueryOwnerLockerByAppToAssetIdbyOwnerCall(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerResponse>

  func makeQueryLockerByAppByOwnerCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest, Comdex_Locker_V1beta1_QueryLockerByAppByOwnerResponse>

  func makeQueryLockerCountByAppIDCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest, Comdex_Locker_V1beta1_QueryLockerCountByAppIDResponse>

  func makeQueryLockerCountByAppToAssetIDCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest, Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDResponse>

  func makeQueryWhiteListedAssetIdsByAppIDCall(
    _ request: Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest, Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDResponse>

  func makeQueryWhiteListedAssetByAllAppsCall(
    _ request: Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest, Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsResponse>

  func makeQueryLockerLookupTableByAppCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest, Comdex_Locker_V1beta1_QueryLockerLookupTableByAppResponse>

  func makeQueryLockerLookupTableByAppAndAssetIDCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest, Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDResponse>

  func makeQueryLockerTotalRewardsByAssetAppWiseCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest, Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseResponse>

  func makeQueryLockerTotalDepositedByAppCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest, Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Locker_V1beta1_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Comdex_Locker_V1beta1_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Comdex_Locker_V1beta1_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeQueryLockerInfoCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerInfoRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerInfoRequest, Comdex_Locker_V1beta1_QueryLockerInfoResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerInfoInterceptors() ?? []
    )
  }

  internal func makeQueryLockersByAppToAssetIDCall(
    _ request: Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest, Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockersByAppToAssetID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockersByAppToAssetIDInterceptors() ?? []
    )
  }

  internal func makeQueryLockerInfoByAppIDCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest, Comdex_Locker_V1beta1_QueryLockerInfoByAppIDResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerInfoByAppID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerInfoByAppIDInterceptors() ?? []
    )
  }

  internal func makeQueryTotalDepositByAppAndAssetIDCall(
    _ request: Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest, Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryTotalDepositByAppAndAssetID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTotalDepositByAppAndAssetIDInterceptors() ?? []
    )
  }

  internal func makeQueryOwnerLockerByAppIdbyOwnerCall(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerLockerByAppIDbyOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryOwnerLockerByAppIDbyOwnerInterceptors() ?? []
    )
  }

  internal func makeQueryOwnerLockerOfAllAppsByOwnerCall(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerLockerOfAllAppsByOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryOwnerLockerOfAllAppsByOwnerInterceptors() ?? []
    )
  }

  internal func makeQueryOwnerTxDetailsLockerOfAppByOwnerByAssetCall(
    _ request: Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest, Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerTxDetailsLockerOfAppByOwnerByAsset.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryOwnerTxDetailsLockerOfAppByOwnerByAssetInterceptors() ?? []
    )
  }

  internal func makeQueryOwnerLockerByAppToAssetIdbyOwnerCall(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerLockerByAppToAssetIDbyOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryOwnerLockerByAppToAssetIDbyOwnerInterceptors() ?? []
    )
  }

  internal func makeQueryLockerByAppByOwnerCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest, Comdex_Locker_V1beta1_QueryLockerByAppByOwnerResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerByAppByOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerByAppByOwnerInterceptors() ?? []
    )
  }

  internal func makeQueryLockerCountByAppIDCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest, Comdex_Locker_V1beta1_QueryLockerCountByAppIDResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerCountByAppID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerCountByAppIDInterceptors() ?? []
    )
  }

  internal func makeQueryLockerCountByAppToAssetIDCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest, Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerCountByAppToAssetID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerCountByAppToAssetIDInterceptors() ?? []
    )
  }

  internal func makeQueryWhiteListedAssetIdsByAppIDCall(
    _ request: Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest, Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryWhiteListedAssetIDsByAppID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryWhiteListedAssetIDsByAppIDInterceptors() ?? []
    )
  }

  internal func makeQueryWhiteListedAssetByAllAppsCall(
    _ request: Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest, Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryWhiteListedAssetByAllApps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryWhiteListedAssetByAllAppsInterceptors() ?? []
    )
  }

  internal func makeQueryLockerLookupTableByAppCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest, Comdex_Locker_V1beta1_QueryLockerLookupTableByAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerLookupTableByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerLookupTableByAppInterceptors() ?? []
    )
  }

  internal func makeQueryLockerLookupTableByAppAndAssetIDCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest, Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerLookupTableByAppAndAssetID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerLookupTableByAppAndAssetIDInterceptors() ?? []
    )
  }

  internal func makeQueryLockerTotalRewardsByAssetAppWiseCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest, Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerTotalRewardsByAssetAppWise.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerTotalRewardsByAssetAppWiseInterceptors() ?? []
    )
  }

  internal func makeQueryLockerTotalDepositedByAppCall(
    _ request: Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest, Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerTotalDepositedByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerTotalDepositedByAppInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Locker_V1beta1_QueryAsyncClientProtocol {
  internal func queryLockerInfo(
    _ request: Comdex_Locker_V1beta1_QueryLockerInfoRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerInfoResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerInfoInterceptors() ?? []
    )
  }

  internal func queryLockersByAppToAssetID(
    _ request: Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockersByAppToAssetID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockersByAppToAssetIDInterceptors() ?? []
    )
  }

  internal func queryLockerInfoByAppID(
    _ request: Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerInfoByAppIDResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerInfoByAppID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerInfoByAppIDInterceptors() ?? []
    )
  }

  internal func queryTotalDepositByAppAndAssetID(
    _ request: Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryTotalDepositByAppAndAssetID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTotalDepositByAppAndAssetIDInterceptors() ?? []
    )
  }

  internal func queryOwnerLockerByAppIDbyOwner(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerLockerByAppIDbyOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryOwnerLockerByAppIDbyOwnerInterceptors() ?? []
    )
  }

  internal func queryOwnerLockerOfAllAppsByOwner(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerLockerOfAllAppsByOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryOwnerLockerOfAllAppsByOwnerInterceptors() ?? []
    )
  }

  internal func queryOwnerTxDetailsLockerOfAppByOwnerByAsset(
    _ request: Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerTxDetailsLockerOfAppByOwnerByAsset.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryOwnerTxDetailsLockerOfAppByOwnerByAssetInterceptors() ?? []
    )
  }

  internal func queryOwnerLockerByAppToAssetIDbyOwner(
    _ request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerLockerByAppToAssetIDbyOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryOwnerLockerByAppToAssetIDbyOwnerInterceptors() ?? []
    )
  }

  internal func queryLockerByAppByOwner(
    _ request: Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerByAppByOwnerResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerByAppByOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerByAppByOwnerInterceptors() ?? []
    )
  }

  internal func queryLockerCountByAppID(
    _ request: Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerCountByAppIDResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerCountByAppID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerCountByAppIDInterceptors() ?? []
    )
  }

  internal func queryLockerCountByAppToAssetID(
    _ request: Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerCountByAppToAssetID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerCountByAppToAssetIDInterceptors() ?? []
    )
  }

  internal func queryWhiteListedAssetIDsByAppID(
    _ request: Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryWhiteListedAssetIDsByAppID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryWhiteListedAssetIDsByAppIDInterceptors() ?? []
    )
  }

  internal func queryWhiteListedAssetByAllApps(
    _ request: Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryWhiteListedAssetByAllApps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryWhiteListedAssetByAllAppsInterceptors() ?? []
    )
  }

  internal func queryLockerLookupTableByApp(
    _ request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerLookupTableByAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerLookupTableByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerLookupTableByAppInterceptors() ?? []
    )
  }

  internal func queryLockerLookupTableByAppAndAssetID(
    _ request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerLookupTableByAppAndAssetID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerLookupTableByAppAndAssetIDInterceptors() ?? []
    )
  }

  internal func queryLockerTotalRewardsByAssetAppWise(
    _ request: Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerTotalRewardsByAssetAppWise.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerTotalRewardsByAssetAppWiseInterceptors() ?? []
    )
  }

  internal func queryLockerTotalDepositedByApp(
    _ request: Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerTotalDepositedByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockerTotalDepositedByAppInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Comdex_Locker_V1beta1_QueryAsyncClient: Comdex_Locker_V1beta1_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Comdex_Locker_V1beta1_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Locker_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Comdex_Locker_V1beta1_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'queryLockerInfo'.
  func makeQueryLockerInfoInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryLockerInfoRequest, Comdex_Locker_V1beta1_QueryLockerInfoResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLockersByAppToAssetID'.
  func makeQueryLockersByAppToAssetIDInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest, Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLockerInfoByAppID'.
  func makeQueryLockerInfoByAppIDInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest, Comdex_Locker_V1beta1_QueryLockerInfoByAppIDResponse>]

  /// - Returns: Interceptors to use when invoking 'queryTotalDepositByAppAndAssetID'.
  func makeQueryTotalDepositByAppAndAssetIDInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest, Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDResponse>]

  /// - Returns: Interceptors to use when invoking 'queryOwnerLockerByAppIDbyOwner'.
  func makeQueryOwnerLockerByAppIDbyOwnerInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerResponse>]

  /// - Returns: Interceptors to use when invoking 'queryOwnerLockerOfAllAppsByOwner'.
  func makeQueryOwnerLockerOfAllAppsByOwnerInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerResponse>]

  /// - Returns: Interceptors to use when invoking 'queryOwnerTxDetailsLockerOfAppByOwnerByAsset'.
  func makeQueryOwnerTxDetailsLockerOfAppByOwnerByAssetInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest, Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetResponse>]

  /// - Returns: Interceptors to use when invoking 'queryOwnerLockerByAppToAssetIDbyOwner'.
  func makeQueryOwnerLockerByAppToAssetIDbyOwnerInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLockerByAppByOwner'.
  func makeQueryLockerByAppByOwnerInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest, Comdex_Locker_V1beta1_QueryLockerByAppByOwnerResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLockerCountByAppID'.
  func makeQueryLockerCountByAppIDInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest, Comdex_Locker_V1beta1_QueryLockerCountByAppIDResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLockerCountByAppToAssetID'.
  func makeQueryLockerCountByAppToAssetIDInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest, Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDResponse>]

  /// - Returns: Interceptors to use when invoking 'queryWhiteListedAssetIDsByAppID'.
  func makeQueryWhiteListedAssetIDsByAppIDInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest, Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDResponse>]

  /// - Returns: Interceptors to use when invoking 'queryWhiteListedAssetByAllApps'.
  func makeQueryWhiteListedAssetByAllAppsInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest, Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLockerLookupTableByApp'.
  func makeQueryLockerLookupTableByAppInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest, Comdex_Locker_V1beta1_QueryLockerLookupTableByAppResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLockerLookupTableByAppAndAssetID'.
  func makeQueryLockerLookupTableByAppAndAssetIDInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest, Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLockerTotalRewardsByAssetAppWise'.
  func makeQueryLockerTotalRewardsByAssetAppWiseInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest, Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLockerTotalDepositedByApp'.
  func makeQueryLockerTotalDepositedByAppInterceptors() -> [ClientInterceptor<Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest, Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppResponse>]
}

internal enum Comdex_Locker_V1beta1_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "comdex.locker.v1beta1.Query",
    methods: [
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerInfo,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockersByAppToAssetID,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerInfoByAppID,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryTotalDepositByAppAndAssetID,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerLockerByAppIDbyOwner,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerLockerOfAllAppsByOwner,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerTxDetailsLockerOfAppByOwnerByAsset,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryOwnerLockerByAppToAssetIDbyOwner,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerByAppByOwner,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerCountByAppID,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerCountByAppToAssetID,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryWhiteListedAssetIDsByAppID,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryWhiteListedAssetByAllApps,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerLookupTableByApp,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerLookupTableByAppAndAssetID,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerTotalRewardsByAssetAppWise,
      Comdex_Locker_V1beta1_QueryClientMetadata.Methods.queryLockerTotalDepositedByApp,
    ]
  )

  internal enum Methods {
    internal static let queryLockerInfo = GRPCMethodDescriptor(
      name: "QueryLockerInfo",
      path: "/comdex.locker.v1beta1.Query/QueryLockerInfo",
      type: GRPCCallType.unary
    )

    internal static let queryLockersByAppToAssetID = GRPCMethodDescriptor(
      name: "QueryLockersByAppToAssetID",
      path: "/comdex.locker.v1beta1.Query/QueryLockersByAppToAssetID",
      type: GRPCCallType.unary
    )

    internal static let queryLockerInfoByAppID = GRPCMethodDescriptor(
      name: "QueryLockerInfoByAppID",
      path: "/comdex.locker.v1beta1.Query/QueryLockerInfoByAppID",
      type: GRPCCallType.unary
    )

    internal static let queryTotalDepositByAppAndAssetID = GRPCMethodDescriptor(
      name: "QueryTotalDepositByAppAndAssetID",
      path: "/comdex.locker.v1beta1.Query/QueryTotalDepositByAppAndAssetID",
      type: GRPCCallType.unary
    )

    internal static let queryOwnerLockerByAppIDbyOwner = GRPCMethodDescriptor(
      name: "QueryOwnerLockerByAppIDbyOwner",
      path: "/comdex.locker.v1beta1.Query/QueryOwnerLockerByAppIDbyOwner",
      type: GRPCCallType.unary
    )

    internal static let queryOwnerLockerOfAllAppsByOwner = GRPCMethodDescriptor(
      name: "QueryOwnerLockerOfAllAppsByOwner",
      path: "/comdex.locker.v1beta1.Query/QueryOwnerLockerOfAllAppsByOwner",
      type: GRPCCallType.unary
    )

    internal static let queryOwnerTxDetailsLockerOfAppByOwnerByAsset = GRPCMethodDescriptor(
      name: "QueryOwnerTxDetailsLockerOfAppByOwnerByAsset",
      path: "/comdex.locker.v1beta1.Query/QueryOwnerTxDetailsLockerOfAppByOwnerByAsset",
      type: GRPCCallType.unary
    )

    internal static let queryOwnerLockerByAppToAssetIDbyOwner = GRPCMethodDescriptor(
      name: "QueryOwnerLockerByAppToAssetIDbyOwner",
      path: "/comdex.locker.v1beta1.Query/QueryOwnerLockerByAppToAssetIDbyOwner",
      type: GRPCCallType.unary
    )

    internal static let queryLockerByAppByOwner = GRPCMethodDescriptor(
      name: "QueryLockerByAppByOwner",
      path: "/comdex.locker.v1beta1.Query/QueryLockerByAppByOwner",
      type: GRPCCallType.unary
    )

    internal static let queryLockerCountByAppID = GRPCMethodDescriptor(
      name: "QueryLockerCountByAppID",
      path: "/comdex.locker.v1beta1.Query/QueryLockerCountByAppID",
      type: GRPCCallType.unary
    )

    internal static let queryLockerCountByAppToAssetID = GRPCMethodDescriptor(
      name: "QueryLockerCountByAppToAssetID",
      path: "/comdex.locker.v1beta1.Query/QueryLockerCountByAppToAssetID",
      type: GRPCCallType.unary
    )

    internal static let queryWhiteListedAssetIDsByAppID = GRPCMethodDescriptor(
      name: "QueryWhiteListedAssetIDsByAppID",
      path: "/comdex.locker.v1beta1.Query/QueryWhiteListedAssetIDsByAppID",
      type: GRPCCallType.unary
    )

    internal static let queryWhiteListedAssetByAllApps = GRPCMethodDescriptor(
      name: "QueryWhiteListedAssetByAllApps",
      path: "/comdex.locker.v1beta1.Query/QueryWhiteListedAssetByAllApps",
      type: GRPCCallType.unary
    )

    internal static let queryLockerLookupTableByApp = GRPCMethodDescriptor(
      name: "QueryLockerLookupTableByApp",
      path: "/comdex.locker.v1beta1.Query/QueryLockerLookupTableByApp",
      type: GRPCCallType.unary
    )

    internal static let queryLockerLookupTableByAppAndAssetID = GRPCMethodDescriptor(
      name: "QueryLockerLookupTableByAppAndAssetID",
      path: "/comdex.locker.v1beta1.Query/QueryLockerLookupTableByAppAndAssetID",
      type: GRPCCallType.unary
    )

    internal static let queryLockerTotalRewardsByAssetAppWise = GRPCMethodDescriptor(
      name: "QueryLockerTotalRewardsByAssetAppWise",
      path: "/comdex.locker.v1beta1.Query/QueryLockerTotalRewardsByAssetAppWise",
      type: GRPCCallType.unary
    )

    internal static let queryLockerTotalDepositedByApp = GRPCMethodDescriptor(
      name: "QueryLockerTotalDepositedByApp",
      path: "/comdex.locker.v1beta1.Query/QueryLockerTotalDepositedByApp",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Comdex_Locker_V1beta1_QueryProvider: CallHandlerProvider {
  var interceptors: Comdex_Locker_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  func queryLockerInfo(request: Comdex_Locker_V1beta1_QueryLockerInfoRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryLockerInfoResponse>

  func queryLockersByAppToAssetID(request: Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDResponse>

  func queryLockerInfoByAppID(request: Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryLockerInfoByAppIDResponse>

  func queryTotalDepositByAppAndAssetID(request: Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDResponse>

  func queryOwnerLockerByAppIDbyOwner(request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerResponse>

  func queryOwnerLockerOfAllAppsByOwner(request: Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerResponse>

  func queryOwnerTxDetailsLockerOfAppByOwnerByAsset(request: Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetResponse>

  func queryOwnerLockerByAppToAssetIDbyOwner(request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerResponse>

  func queryLockerByAppByOwner(request: Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryLockerByAppByOwnerResponse>

  func queryLockerCountByAppID(request: Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryLockerCountByAppIDResponse>

  func queryLockerCountByAppToAssetID(request: Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDResponse>

  func queryWhiteListedAssetIDsByAppID(request: Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDResponse>

  func queryWhiteListedAssetByAllApps(request: Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsResponse>

  func queryLockerLookupTableByApp(request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppResponse>

  func queryLockerLookupTableByAppAndAssetID(request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDResponse>

  func queryLockerTotalRewardsByAssetAppWise(request: Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseResponse>

  func queryLockerTotalDepositedByApp(request: Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppResponse>
}

extension Comdex_Locker_V1beta1_QueryProvider {
  internal var serviceName: Substring {
    return Comdex_Locker_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "QueryLockerInfo":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerInfoRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerInfoResponse>(),
        interceptors: self.interceptors?.makeQueryLockerInfoInterceptors() ?? [],
        userFunction: self.queryLockerInfo(request:context:)
      )

    case "QueryLockersByAppToAssetID":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDResponse>(),
        interceptors: self.interceptors?.makeQueryLockersByAppToAssetIDInterceptors() ?? [],
        userFunction: self.queryLockersByAppToAssetID(request:context:)
      )

    case "QueryLockerInfoByAppID":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerInfoByAppIDResponse>(),
        interceptors: self.interceptors?.makeQueryLockerInfoByAppIDInterceptors() ?? [],
        userFunction: self.queryLockerInfoByAppID(request:context:)
      )

    case "QueryTotalDepositByAppAndAssetID":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDResponse>(),
        interceptors: self.interceptors?.makeQueryTotalDepositByAppAndAssetIDInterceptors() ?? [],
        userFunction: self.queryTotalDepositByAppAndAssetID(request:context:)
      )

    case "QueryOwnerLockerByAppIDbyOwner":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerResponse>(),
        interceptors: self.interceptors?.makeQueryOwnerLockerByAppIDbyOwnerInterceptors() ?? [],
        userFunction: self.queryOwnerLockerByAppIDbyOwner(request:context:)
      )

    case "QueryOwnerLockerOfAllAppsByOwner":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerResponse>(),
        interceptors: self.interceptors?.makeQueryOwnerLockerOfAllAppsByOwnerInterceptors() ?? [],
        userFunction: self.queryOwnerLockerOfAllAppsByOwner(request:context:)
      )

    case "QueryOwnerTxDetailsLockerOfAppByOwnerByAsset":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetResponse>(),
        interceptors: self.interceptors?.makeQueryOwnerTxDetailsLockerOfAppByOwnerByAssetInterceptors() ?? [],
        userFunction: self.queryOwnerTxDetailsLockerOfAppByOwnerByAsset(request:context:)
      )

    case "QueryOwnerLockerByAppToAssetIDbyOwner":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerResponse>(),
        interceptors: self.interceptors?.makeQueryOwnerLockerByAppToAssetIDbyOwnerInterceptors() ?? [],
        userFunction: self.queryOwnerLockerByAppToAssetIDbyOwner(request:context:)
      )

    case "QueryLockerByAppByOwner":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerByAppByOwnerResponse>(),
        interceptors: self.interceptors?.makeQueryLockerByAppByOwnerInterceptors() ?? [],
        userFunction: self.queryLockerByAppByOwner(request:context:)
      )

    case "QueryLockerCountByAppID":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerCountByAppIDResponse>(),
        interceptors: self.interceptors?.makeQueryLockerCountByAppIDInterceptors() ?? [],
        userFunction: self.queryLockerCountByAppID(request:context:)
      )

    case "QueryLockerCountByAppToAssetID":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDResponse>(),
        interceptors: self.interceptors?.makeQueryLockerCountByAppToAssetIDInterceptors() ?? [],
        userFunction: self.queryLockerCountByAppToAssetID(request:context:)
      )

    case "QueryWhiteListedAssetIDsByAppID":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDResponse>(),
        interceptors: self.interceptors?.makeQueryWhiteListedAssetIDsByAppIDInterceptors() ?? [],
        userFunction: self.queryWhiteListedAssetIDsByAppID(request:context:)
      )

    case "QueryWhiteListedAssetByAllApps":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsResponse>(),
        interceptors: self.interceptors?.makeQueryWhiteListedAssetByAllAppsInterceptors() ?? [],
        userFunction: self.queryWhiteListedAssetByAllApps(request:context:)
      )

    case "QueryLockerLookupTableByApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppResponse>(),
        interceptors: self.interceptors?.makeQueryLockerLookupTableByAppInterceptors() ?? [],
        userFunction: self.queryLockerLookupTableByApp(request:context:)
      )

    case "QueryLockerLookupTableByAppAndAssetID":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDResponse>(),
        interceptors: self.interceptors?.makeQueryLockerLookupTableByAppAndAssetIDInterceptors() ?? [],
        userFunction: self.queryLockerLookupTableByAppAndAssetID(request:context:)
      )

    case "QueryLockerTotalRewardsByAssetAppWise":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseResponse>(),
        interceptors: self.interceptors?.makeQueryLockerTotalRewardsByAssetAppWiseInterceptors() ?? [],
        userFunction: self.queryLockerTotalRewardsByAssetAppWise(request:context:)
      )

    case "QueryLockerTotalDepositedByApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppResponse>(),
        interceptors: self.interceptors?.makeQueryLockerTotalDepositedByAppInterceptors() ?? [],
        userFunction: self.queryLockerTotalDepositedByApp(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Comdex_Locker_V1beta1_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Comdex_Locker_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  @Sendable func queryLockerInfo(
    request: Comdex_Locker_V1beta1_QueryLockerInfoRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerInfoResponse

  @Sendable func queryLockersByAppToAssetID(
    request: Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDResponse

  @Sendable func queryLockerInfoByAppID(
    request: Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerInfoByAppIDResponse

  @Sendable func queryTotalDepositByAppAndAssetID(
    request: Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDResponse

  @Sendable func queryOwnerLockerByAppIDbyOwner(
    request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerResponse

  @Sendable func queryOwnerLockerOfAllAppsByOwner(
    request: Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerResponse

  @Sendable func queryOwnerTxDetailsLockerOfAppByOwnerByAsset(
    request: Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetResponse

  @Sendable func queryOwnerLockerByAppToAssetIDbyOwner(
    request: Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerResponse

  @Sendable func queryLockerByAppByOwner(
    request: Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerByAppByOwnerResponse

  @Sendable func queryLockerCountByAppID(
    request: Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerCountByAppIDResponse

  @Sendable func queryLockerCountByAppToAssetID(
    request: Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDResponse

  @Sendable func queryWhiteListedAssetIDsByAppID(
    request: Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDResponse

  @Sendable func queryWhiteListedAssetByAllApps(
    request: Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsResponse

  @Sendable func queryLockerLookupTableByApp(
    request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerLookupTableByAppResponse

  @Sendable func queryLockerLookupTableByAppAndAssetID(
    request: Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDResponse

  @Sendable func queryLockerTotalRewardsByAssetAppWise(
    request: Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseResponse

  @Sendable func queryLockerTotalDepositedByApp(
    request: Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Locker_V1beta1_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Comdex_Locker_V1beta1_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Comdex_Locker_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Comdex_Locker_V1beta1_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "QueryLockerInfo":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerInfoRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerInfoResponse>(),
        interceptors: self.interceptors?.makeQueryLockerInfoInterceptors() ?? [],
        wrapping: self.queryLockerInfo(request:context:)
      )

    case "QueryLockersByAppToAssetID":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDResponse>(),
        interceptors: self.interceptors?.makeQueryLockersByAppToAssetIDInterceptors() ?? [],
        wrapping: self.queryLockersByAppToAssetID(request:context:)
      )

    case "QueryLockerInfoByAppID":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerInfoByAppIDResponse>(),
        interceptors: self.interceptors?.makeQueryLockerInfoByAppIDInterceptors() ?? [],
        wrapping: self.queryLockerInfoByAppID(request:context:)
      )

    case "QueryTotalDepositByAppAndAssetID":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDResponse>(),
        interceptors: self.interceptors?.makeQueryTotalDepositByAppAndAssetIDInterceptors() ?? [],
        wrapping: self.queryTotalDepositByAppAndAssetID(request:context:)
      )

    case "QueryOwnerLockerByAppIDbyOwner":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerResponse>(),
        interceptors: self.interceptors?.makeQueryOwnerLockerByAppIDbyOwnerInterceptors() ?? [],
        wrapping: self.queryOwnerLockerByAppIDbyOwner(request:context:)
      )

    case "QueryOwnerLockerOfAllAppsByOwner":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerResponse>(),
        interceptors: self.interceptors?.makeQueryOwnerLockerOfAllAppsByOwnerInterceptors() ?? [],
        wrapping: self.queryOwnerLockerOfAllAppsByOwner(request:context:)
      )

    case "QueryOwnerTxDetailsLockerOfAppByOwnerByAsset":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetResponse>(),
        interceptors: self.interceptors?.makeQueryOwnerTxDetailsLockerOfAppByOwnerByAssetInterceptors() ?? [],
        wrapping: self.queryOwnerTxDetailsLockerOfAppByOwnerByAsset(request:context:)
      )

    case "QueryOwnerLockerByAppToAssetIDbyOwner":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerResponse>(),
        interceptors: self.interceptors?.makeQueryOwnerLockerByAppToAssetIDbyOwnerInterceptors() ?? [],
        wrapping: self.queryOwnerLockerByAppToAssetIDbyOwner(request:context:)
      )

    case "QueryLockerByAppByOwner":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerByAppByOwnerResponse>(),
        interceptors: self.interceptors?.makeQueryLockerByAppByOwnerInterceptors() ?? [],
        wrapping: self.queryLockerByAppByOwner(request:context:)
      )

    case "QueryLockerCountByAppID":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerCountByAppIDResponse>(),
        interceptors: self.interceptors?.makeQueryLockerCountByAppIDInterceptors() ?? [],
        wrapping: self.queryLockerCountByAppID(request:context:)
      )

    case "QueryLockerCountByAppToAssetID":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDResponse>(),
        interceptors: self.interceptors?.makeQueryLockerCountByAppToAssetIDInterceptors() ?? [],
        wrapping: self.queryLockerCountByAppToAssetID(request:context:)
      )

    case "QueryWhiteListedAssetIDsByAppID":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDResponse>(),
        interceptors: self.interceptors?.makeQueryWhiteListedAssetIDsByAppIDInterceptors() ?? [],
        wrapping: self.queryWhiteListedAssetIDsByAppID(request:context:)
      )

    case "QueryWhiteListedAssetByAllApps":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsResponse>(),
        interceptors: self.interceptors?.makeQueryWhiteListedAssetByAllAppsInterceptors() ?? [],
        wrapping: self.queryWhiteListedAssetByAllApps(request:context:)
      )

    case "QueryLockerLookupTableByApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppResponse>(),
        interceptors: self.interceptors?.makeQueryLockerLookupTableByAppInterceptors() ?? [],
        wrapping: self.queryLockerLookupTableByApp(request:context:)
      )

    case "QueryLockerLookupTableByAppAndAssetID":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDResponse>(),
        interceptors: self.interceptors?.makeQueryLockerLookupTableByAppAndAssetIDInterceptors() ?? [],
        wrapping: self.queryLockerLookupTableByAppAndAssetID(request:context:)
      )

    case "QueryLockerTotalRewardsByAssetAppWise":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseResponse>(),
        interceptors: self.interceptors?.makeQueryLockerTotalRewardsByAssetAppWiseInterceptors() ?? [],
        wrapping: self.queryLockerTotalRewardsByAssetAppWise(request:context:)
      )

    case "QueryLockerTotalDepositedByApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppResponse>(),
        interceptors: self.interceptors?.makeQueryLockerTotalDepositedByAppInterceptors() ?? [],
        wrapping: self.queryLockerTotalDepositedByApp(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Comdex_Locker_V1beta1_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'queryLockerInfo'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockerInfoInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryLockerInfoRequest, Comdex_Locker_V1beta1_QueryLockerInfoResponse>]

  /// - Returns: Interceptors to use when handling 'queryLockersByAppToAssetID'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockersByAppToAssetIDInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDRequest, Comdex_Locker_V1beta1_QueryLockersByAppToAssetIDResponse>]

  /// - Returns: Interceptors to use when handling 'queryLockerInfoByAppID'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockerInfoByAppIDInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryLockerInfoByAppIDRequest, Comdex_Locker_V1beta1_QueryLockerInfoByAppIDResponse>]

  /// - Returns: Interceptors to use when handling 'queryTotalDepositByAppAndAssetID'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryTotalDepositByAppAndAssetIDInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDRequest, Comdex_Locker_V1beta1_QueryTotalDepositByAppAndAssetIDResponse>]

  /// - Returns: Interceptors to use when handling 'queryOwnerLockerByAppIDbyOwner'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryOwnerLockerByAppIDbyOwnerInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerByAppIDbyOwnerResponse>]

  /// - Returns: Interceptors to use when handling 'queryOwnerLockerOfAllAppsByOwner'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryOwnerLockerOfAllAppsByOwnerInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerOfAllAppsByOwnerResponse>]

  /// - Returns: Interceptors to use when handling 'queryOwnerTxDetailsLockerOfAppByOwnerByAsset'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryOwnerTxDetailsLockerOfAppByOwnerByAssetInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetRequest, Comdex_Locker_V1beta1_QueryOwnerTxDetailsLockerOfAppByOwnerByAssetResponse>]

  /// - Returns: Interceptors to use when handling 'queryOwnerLockerByAppToAssetIDbyOwner'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryOwnerLockerByAppToAssetIDbyOwnerInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerRequest, Comdex_Locker_V1beta1_QueryOwnerLockerByAppToAssetIDbyOwnerResponse>]

  /// - Returns: Interceptors to use when handling 'queryLockerByAppByOwner'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockerByAppByOwnerInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryLockerByAppByOwnerRequest, Comdex_Locker_V1beta1_QueryLockerByAppByOwnerResponse>]

  /// - Returns: Interceptors to use when handling 'queryLockerCountByAppID'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockerCountByAppIDInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryLockerCountByAppIDRequest, Comdex_Locker_V1beta1_QueryLockerCountByAppIDResponse>]

  /// - Returns: Interceptors to use when handling 'queryLockerCountByAppToAssetID'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockerCountByAppToAssetIDInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDRequest, Comdex_Locker_V1beta1_QueryLockerCountByAppToAssetIDResponse>]

  /// - Returns: Interceptors to use when handling 'queryWhiteListedAssetIDsByAppID'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryWhiteListedAssetIDsByAppIDInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDRequest, Comdex_Locker_V1beta1_QueryWhiteListedAssetIDsByAppIDResponse>]

  /// - Returns: Interceptors to use when handling 'queryWhiteListedAssetByAllApps'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryWhiteListedAssetByAllAppsInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsRequest, Comdex_Locker_V1beta1_QueryWhiteListedAssetByAllAppsResponse>]

  /// - Returns: Interceptors to use when handling 'queryLockerLookupTableByApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockerLookupTableByAppInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppRequest, Comdex_Locker_V1beta1_QueryLockerLookupTableByAppResponse>]

  /// - Returns: Interceptors to use when handling 'queryLockerLookupTableByAppAndAssetID'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockerLookupTableByAppAndAssetIDInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDRequest, Comdex_Locker_V1beta1_QueryLockerLookupTableByAppAndAssetIDResponse>]

  /// - Returns: Interceptors to use when handling 'queryLockerTotalRewardsByAssetAppWise'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockerTotalRewardsByAssetAppWiseInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseRequest, Comdex_Locker_V1beta1_QueryLockerTotalRewardsByAssetAppWiseResponse>]

  /// - Returns: Interceptors to use when handling 'queryLockerTotalDepositedByApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockerTotalDepositedByAppInterceptors() -> [ServerInterceptor<Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppRequest, Comdex_Locker_V1beta1_QueryLockerTotalDepositedByAppResponse>]
}

internal enum Comdex_Locker_V1beta1_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "comdex.locker.v1beta1.Query",
    methods: [
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryLockerInfo,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryLockersByAppToAssetID,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryLockerInfoByAppID,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryTotalDepositByAppAndAssetID,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryOwnerLockerByAppIDbyOwner,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryOwnerLockerOfAllAppsByOwner,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryOwnerTxDetailsLockerOfAppByOwnerByAsset,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryOwnerLockerByAppToAssetIDbyOwner,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryLockerByAppByOwner,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryLockerCountByAppID,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryLockerCountByAppToAssetID,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryWhiteListedAssetIDsByAppID,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryWhiteListedAssetByAllApps,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryLockerLookupTableByApp,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryLockerLookupTableByAppAndAssetID,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryLockerTotalRewardsByAssetAppWise,
      Comdex_Locker_V1beta1_QueryServerMetadata.Methods.queryLockerTotalDepositedByApp,
    ]
  )

  internal enum Methods {
    internal static let queryLockerInfo = GRPCMethodDescriptor(
      name: "QueryLockerInfo",
      path: "/comdex.locker.v1beta1.Query/QueryLockerInfo",
      type: GRPCCallType.unary
    )

    internal static let queryLockersByAppToAssetID = GRPCMethodDescriptor(
      name: "QueryLockersByAppToAssetID",
      path: "/comdex.locker.v1beta1.Query/QueryLockersByAppToAssetID",
      type: GRPCCallType.unary
    )

    internal static let queryLockerInfoByAppID = GRPCMethodDescriptor(
      name: "QueryLockerInfoByAppID",
      path: "/comdex.locker.v1beta1.Query/QueryLockerInfoByAppID",
      type: GRPCCallType.unary
    )

    internal static let queryTotalDepositByAppAndAssetID = GRPCMethodDescriptor(
      name: "QueryTotalDepositByAppAndAssetID",
      path: "/comdex.locker.v1beta1.Query/QueryTotalDepositByAppAndAssetID",
      type: GRPCCallType.unary
    )

    internal static let queryOwnerLockerByAppIDbyOwner = GRPCMethodDescriptor(
      name: "QueryOwnerLockerByAppIDbyOwner",
      path: "/comdex.locker.v1beta1.Query/QueryOwnerLockerByAppIDbyOwner",
      type: GRPCCallType.unary
    )

    internal static let queryOwnerLockerOfAllAppsByOwner = GRPCMethodDescriptor(
      name: "QueryOwnerLockerOfAllAppsByOwner",
      path: "/comdex.locker.v1beta1.Query/QueryOwnerLockerOfAllAppsByOwner",
      type: GRPCCallType.unary
    )

    internal static let queryOwnerTxDetailsLockerOfAppByOwnerByAsset = GRPCMethodDescriptor(
      name: "QueryOwnerTxDetailsLockerOfAppByOwnerByAsset",
      path: "/comdex.locker.v1beta1.Query/QueryOwnerTxDetailsLockerOfAppByOwnerByAsset",
      type: GRPCCallType.unary
    )

    internal static let queryOwnerLockerByAppToAssetIDbyOwner = GRPCMethodDescriptor(
      name: "QueryOwnerLockerByAppToAssetIDbyOwner",
      path: "/comdex.locker.v1beta1.Query/QueryOwnerLockerByAppToAssetIDbyOwner",
      type: GRPCCallType.unary
    )

    internal static let queryLockerByAppByOwner = GRPCMethodDescriptor(
      name: "QueryLockerByAppByOwner",
      path: "/comdex.locker.v1beta1.Query/QueryLockerByAppByOwner",
      type: GRPCCallType.unary
    )

    internal static let queryLockerCountByAppID = GRPCMethodDescriptor(
      name: "QueryLockerCountByAppID",
      path: "/comdex.locker.v1beta1.Query/QueryLockerCountByAppID",
      type: GRPCCallType.unary
    )

    internal static let queryLockerCountByAppToAssetID = GRPCMethodDescriptor(
      name: "QueryLockerCountByAppToAssetID",
      path: "/comdex.locker.v1beta1.Query/QueryLockerCountByAppToAssetID",
      type: GRPCCallType.unary
    )

    internal static let queryWhiteListedAssetIDsByAppID = GRPCMethodDescriptor(
      name: "QueryWhiteListedAssetIDsByAppID",
      path: "/comdex.locker.v1beta1.Query/QueryWhiteListedAssetIDsByAppID",
      type: GRPCCallType.unary
    )

    internal static let queryWhiteListedAssetByAllApps = GRPCMethodDescriptor(
      name: "QueryWhiteListedAssetByAllApps",
      path: "/comdex.locker.v1beta1.Query/QueryWhiteListedAssetByAllApps",
      type: GRPCCallType.unary
    )

    internal static let queryLockerLookupTableByApp = GRPCMethodDescriptor(
      name: "QueryLockerLookupTableByApp",
      path: "/comdex.locker.v1beta1.Query/QueryLockerLookupTableByApp",
      type: GRPCCallType.unary
    )

    internal static let queryLockerLookupTableByAppAndAssetID = GRPCMethodDescriptor(
      name: "QueryLockerLookupTableByAppAndAssetID",
      path: "/comdex.locker.v1beta1.Query/QueryLockerLookupTableByAppAndAssetID",
      type: GRPCCallType.unary
    )

    internal static let queryLockerTotalRewardsByAssetAppWise = GRPCMethodDescriptor(
      name: "QueryLockerTotalRewardsByAssetAppWise",
      path: "/comdex.locker.v1beta1.Query/QueryLockerTotalRewardsByAssetAppWise",
      type: GRPCCallType.unary
    )

    internal static let queryLockerTotalDepositedByApp = GRPCMethodDescriptor(
      name: "QueryLockerTotalDepositedByApp",
      path: "/comdex.locker.v1beta1.Query/QueryLockerTotalDepositedByApp",
      type: GRPCCallType.unary
    )
  }
}

//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: ixo/bonds/v1beta1/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Query defines the gRPC querier service.
///
/// Usage: instantiate `Ixo_Bonds_V1beta1_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Ixo_Bonds_V1beta1_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Ixo_Bonds_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func bonds(
    _ request: Ixo_Bonds_V1beta1_QueryBondsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryBondsRequest, Ixo_Bonds_V1beta1_QueryBondsResponse>

  func bondsDetailed(
    _ request: Ixo_Bonds_V1beta1_QueryBondsDetailedRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryBondsDetailedRequest, Ixo_Bonds_V1beta1_QueryBondsDetailedResponse>

  func params(
    _ request: Ixo_Bonds_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryParamsRequest, Ixo_Bonds_V1beta1_QueryParamsResponse>

  func bond(
    _ request: Ixo_Bonds_V1beta1_QueryBondRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryBondRequest, Ixo_Bonds_V1beta1_QueryBondResponse>

  func batch(
    _ request: Ixo_Bonds_V1beta1_QueryBatchRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryBatchRequest, Ixo_Bonds_V1beta1_QueryBatchResponse>

  func lastBatch(
    _ request: Ixo_Bonds_V1beta1_QueryLastBatchRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryLastBatchRequest, Ixo_Bonds_V1beta1_QueryLastBatchResponse>

  func currentPrice(
    _ request: Ixo_Bonds_V1beta1_QueryCurrentPriceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryCurrentPriceRequest, Ixo_Bonds_V1beta1_QueryCurrentPriceResponse>

  func currentReserve(
    _ request: Ixo_Bonds_V1beta1_QueryCurrentReserveRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryCurrentReserveRequest, Ixo_Bonds_V1beta1_QueryCurrentReserveResponse>

  func availableReserve(
    _ request: Ixo_Bonds_V1beta1_QueryAvailableReserveRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryAvailableReserveRequest, Ixo_Bonds_V1beta1_QueryAvailableReserveResponse>

  func customPrice(
    _ request: Ixo_Bonds_V1beta1_QueryCustomPriceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryCustomPriceRequest, Ixo_Bonds_V1beta1_QueryCustomPriceResponse>

  func buyPrice(
    _ request: Ixo_Bonds_V1beta1_QueryBuyPriceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryBuyPriceRequest, Ixo_Bonds_V1beta1_QueryBuyPriceResponse>

  func sellReturn(
    _ request: Ixo_Bonds_V1beta1_QuerySellReturnRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QuerySellReturnRequest, Ixo_Bonds_V1beta1_QuerySellReturnResponse>

  func swapReturn(
    _ request: Ixo_Bonds_V1beta1_QuerySwapReturnRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QuerySwapReturnRequest, Ixo_Bonds_V1beta1_QuerySwapReturnResponse>

  func alphaMaximums(
    _ request: Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest, Ixo_Bonds_V1beta1_QueryAlphaMaximumsResponse>
}

extension Ixo_Bonds_V1beta1_QueryClientProtocol {
  internal var serviceName: String {
    return "ixo.bonds.v1beta1.Query"
  }

  /// Bonds returns all existing bonds.
  ///
  /// - Parameters:
  ///   - request: Request to send to Bonds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func bonds(
    _ request: Ixo_Bonds_V1beta1_QueryBondsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryBondsRequest, Ixo_Bonds_V1beta1_QueryBondsResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.bonds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBondsInterceptors() ?? []
    )
  }

  /// BondsDetailed returns a list of all existing bonds with some details about
  /// their current state.
  ///
  /// - Parameters:
  ///   - request: Request to send to BondsDetailed.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func bondsDetailed(
    _ request: Ixo_Bonds_V1beta1_QueryBondsDetailedRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryBondsDetailedRequest, Ixo_Bonds_V1beta1_QueryBondsDetailedResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.bondsDetailed.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBondsDetailedInterceptors() ?? []
    )
  }

  /// Params queries the paramaters of x/bonds module.
  ///
  /// - Parameters:
  ///   - request: Request to send to Params.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func params(
    _ request: Ixo_Bonds_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryParamsRequest, Ixo_Bonds_V1beta1_QueryParamsResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  /// Bond queries info of a specific bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to Bond.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func bond(
    _ request: Ixo_Bonds_V1beta1_QueryBondRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryBondRequest, Ixo_Bonds_V1beta1_QueryBondResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.bond.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBondInterceptors() ?? []
    )
  }

  /// Batch queries info of a specific bond's current batch.
  ///
  /// - Parameters:
  ///   - request: Request to send to Batch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func batch(
    _ request: Ixo_Bonds_V1beta1_QueryBatchRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryBatchRequest, Ixo_Bonds_V1beta1_QueryBatchResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.batch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchInterceptors() ?? []
    )
  }

  /// LastBatch queries info of a specific bond's last batch.
  ///
  /// - Parameters:
  ///   - request: Request to send to LastBatch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func lastBatch(
    _ request: Ixo_Bonds_V1beta1_QueryLastBatchRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryLastBatchRequest, Ixo_Bonds_V1beta1_QueryLastBatchResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.lastBatch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLastBatchInterceptors() ?? []
    )
  }

  /// CurrentPrice queries the current price/s of a specific bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to CurrentPrice.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func currentPrice(
    _ request: Ixo_Bonds_V1beta1_QueryCurrentPriceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryCurrentPriceRequest, Ixo_Bonds_V1beta1_QueryCurrentPriceResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.currentPrice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCurrentPriceInterceptors() ?? []
    )
  }

  /// CurrentReserve queries the current balance/s of the reserve pool for a
  /// specific bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to CurrentReserve.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func currentReserve(
    _ request: Ixo_Bonds_V1beta1_QueryCurrentReserveRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryCurrentReserveRequest, Ixo_Bonds_V1beta1_QueryCurrentReserveResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.currentReserve.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCurrentReserveInterceptors() ?? []
    )
  }

  /// AvailableReserve queries current available balance/s of the reserve pool
  /// for a specific bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to AvailableReserve.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func availableReserve(
    _ request: Ixo_Bonds_V1beta1_QueryAvailableReserveRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryAvailableReserveRequest, Ixo_Bonds_V1beta1_QueryAvailableReserveResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.availableReserve.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAvailableReserveInterceptors() ?? []
    )
  }

  /// CustomPrice queries price/s of a specific bond at a specific supply.
  ///
  /// - Parameters:
  ///   - request: Request to send to CustomPrice.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func customPrice(
    _ request: Ixo_Bonds_V1beta1_QueryCustomPriceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryCustomPriceRequest, Ixo_Bonds_V1beta1_QueryCustomPriceResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.customPrice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCustomPriceInterceptors() ?? []
    )
  }

  /// BuyPrice queries price/s of buying an amount of tokens from a specific
  /// bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to BuyPrice.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func buyPrice(
    _ request: Ixo_Bonds_V1beta1_QueryBuyPriceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryBuyPriceRequest, Ixo_Bonds_V1beta1_QueryBuyPriceResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.buyPrice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBuyPriceInterceptors() ?? []
    )
  }

  /// SellReturn queries return/s on selling an amount of tokens of a specific
  /// bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to SellReturn.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func sellReturn(
    _ request: Ixo_Bonds_V1beta1_QuerySellReturnRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QuerySellReturnRequest, Ixo_Bonds_V1beta1_QuerySellReturnResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.sellReturn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSellReturnInterceptors() ?? []
    )
  }

  /// SwapReturn queries return/s on swapping an amount of tokens to another
  /// token of a specific bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to SwapReturn.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func swapReturn(
    _ request: Ixo_Bonds_V1beta1_QuerySwapReturnRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QuerySwapReturnRequest, Ixo_Bonds_V1beta1_QuerySwapReturnResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.swapReturn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapReturnInterceptors() ?? []
    )
  }

  /// AlphaMaximums queries alpha maximums for a specific augmented bonding
  /// curve.
  ///
  /// - Parameters:
  ///   - request: Request to send to AlphaMaximums.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func alphaMaximums(
    _ request: Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest, Ixo_Bonds_V1beta1_QueryAlphaMaximumsResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.alphaMaximums.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAlphaMaximumsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Ixo_Bonds_V1beta1_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Ixo_Bonds_V1beta1_QueryNIOClient")
internal final class Ixo_Bonds_V1beta1_QueryClient: Ixo_Bonds_V1beta1_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Ixo_Bonds_V1beta1_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Ixo_Bonds_V1beta1_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the ixo.bonds.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ixo_Bonds_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Ixo_Bonds_V1beta1_QueryNIOClient: Ixo_Bonds_V1beta1_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Ixo_Bonds_V1beta1_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the ixo.bonds.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ixo_Bonds_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Query defines the gRPC querier service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Ixo_Bonds_V1beta1_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Ixo_Bonds_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func makeBondsCall(
    _ request: Ixo_Bonds_V1beta1_QueryBondsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryBondsRequest, Ixo_Bonds_V1beta1_QueryBondsResponse>

  func makeBondsDetailedCall(
    _ request: Ixo_Bonds_V1beta1_QueryBondsDetailedRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryBondsDetailedRequest, Ixo_Bonds_V1beta1_QueryBondsDetailedResponse>

  func makeParamsCall(
    _ request: Ixo_Bonds_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryParamsRequest, Ixo_Bonds_V1beta1_QueryParamsResponse>

  func makeBondCall(
    _ request: Ixo_Bonds_V1beta1_QueryBondRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryBondRequest, Ixo_Bonds_V1beta1_QueryBondResponse>

  func makeBatchCall(
    _ request: Ixo_Bonds_V1beta1_QueryBatchRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryBatchRequest, Ixo_Bonds_V1beta1_QueryBatchResponse>

  func makeLastBatchCall(
    _ request: Ixo_Bonds_V1beta1_QueryLastBatchRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryLastBatchRequest, Ixo_Bonds_V1beta1_QueryLastBatchResponse>

  func makeCurrentPriceCall(
    _ request: Ixo_Bonds_V1beta1_QueryCurrentPriceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryCurrentPriceRequest, Ixo_Bonds_V1beta1_QueryCurrentPriceResponse>

  func makeCurrentReserveCall(
    _ request: Ixo_Bonds_V1beta1_QueryCurrentReserveRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryCurrentReserveRequest, Ixo_Bonds_V1beta1_QueryCurrentReserveResponse>

  func makeAvailableReserveCall(
    _ request: Ixo_Bonds_V1beta1_QueryAvailableReserveRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryAvailableReserveRequest, Ixo_Bonds_V1beta1_QueryAvailableReserveResponse>

  func makeCustomPriceCall(
    _ request: Ixo_Bonds_V1beta1_QueryCustomPriceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryCustomPriceRequest, Ixo_Bonds_V1beta1_QueryCustomPriceResponse>

  func makeBuyPriceCall(
    _ request: Ixo_Bonds_V1beta1_QueryBuyPriceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryBuyPriceRequest, Ixo_Bonds_V1beta1_QueryBuyPriceResponse>

  func makeSellReturnCall(
    _ request: Ixo_Bonds_V1beta1_QuerySellReturnRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QuerySellReturnRequest, Ixo_Bonds_V1beta1_QuerySellReturnResponse>

  func makeSwapReturnCall(
    _ request: Ixo_Bonds_V1beta1_QuerySwapReturnRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QuerySwapReturnRequest, Ixo_Bonds_V1beta1_QuerySwapReturnResponse>

  func makeAlphaMaximumsCall(
    _ request: Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest, Ixo_Bonds_V1beta1_QueryAlphaMaximumsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ixo_Bonds_V1beta1_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Ixo_Bonds_V1beta1_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Ixo_Bonds_V1beta1_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeBondsCall(
    _ request: Ixo_Bonds_V1beta1_QueryBondsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryBondsRequest, Ixo_Bonds_V1beta1_QueryBondsResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.bonds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBondsInterceptors() ?? []
    )
  }

  internal func makeBondsDetailedCall(
    _ request: Ixo_Bonds_V1beta1_QueryBondsDetailedRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryBondsDetailedRequest, Ixo_Bonds_V1beta1_QueryBondsDetailedResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.bondsDetailed.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBondsDetailedInterceptors() ?? []
    )
  }

  internal func makeParamsCall(
    _ request: Ixo_Bonds_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryParamsRequest, Ixo_Bonds_V1beta1_QueryParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func makeBondCall(
    _ request: Ixo_Bonds_V1beta1_QueryBondRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryBondRequest, Ixo_Bonds_V1beta1_QueryBondResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.bond.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBondInterceptors() ?? []
    )
  }

  internal func makeBatchCall(
    _ request: Ixo_Bonds_V1beta1_QueryBatchRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryBatchRequest, Ixo_Bonds_V1beta1_QueryBatchResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.batch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchInterceptors() ?? []
    )
  }

  internal func makeLastBatchCall(
    _ request: Ixo_Bonds_V1beta1_QueryLastBatchRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryLastBatchRequest, Ixo_Bonds_V1beta1_QueryLastBatchResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.lastBatch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLastBatchInterceptors() ?? []
    )
  }

  internal func makeCurrentPriceCall(
    _ request: Ixo_Bonds_V1beta1_QueryCurrentPriceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryCurrentPriceRequest, Ixo_Bonds_V1beta1_QueryCurrentPriceResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.currentPrice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCurrentPriceInterceptors() ?? []
    )
  }

  internal func makeCurrentReserveCall(
    _ request: Ixo_Bonds_V1beta1_QueryCurrentReserveRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryCurrentReserveRequest, Ixo_Bonds_V1beta1_QueryCurrentReserveResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.currentReserve.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCurrentReserveInterceptors() ?? []
    )
  }

  internal func makeAvailableReserveCall(
    _ request: Ixo_Bonds_V1beta1_QueryAvailableReserveRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryAvailableReserveRequest, Ixo_Bonds_V1beta1_QueryAvailableReserveResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.availableReserve.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAvailableReserveInterceptors() ?? []
    )
  }

  internal func makeCustomPriceCall(
    _ request: Ixo_Bonds_V1beta1_QueryCustomPriceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryCustomPriceRequest, Ixo_Bonds_V1beta1_QueryCustomPriceResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.customPrice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCustomPriceInterceptors() ?? []
    )
  }

  internal func makeBuyPriceCall(
    _ request: Ixo_Bonds_V1beta1_QueryBuyPriceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryBuyPriceRequest, Ixo_Bonds_V1beta1_QueryBuyPriceResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.buyPrice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBuyPriceInterceptors() ?? []
    )
  }

  internal func makeSellReturnCall(
    _ request: Ixo_Bonds_V1beta1_QuerySellReturnRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QuerySellReturnRequest, Ixo_Bonds_V1beta1_QuerySellReturnResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.sellReturn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSellReturnInterceptors() ?? []
    )
  }

  internal func makeSwapReturnCall(
    _ request: Ixo_Bonds_V1beta1_QuerySwapReturnRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QuerySwapReturnRequest, Ixo_Bonds_V1beta1_QuerySwapReturnResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.swapReturn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapReturnInterceptors() ?? []
    )
  }

  internal func makeAlphaMaximumsCall(
    _ request: Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest, Ixo_Bonds_V1beta1_QueryAlphaMaximumsResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.alphaMaximums.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAlphaMaximumsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ixo_Bonds_V1beta1_QueryAsyncClientProtocol {
  internal func bonds(
    _ request: Ixo_Bonds_V1beta1_QueryBondsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QueryBondsResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.bonds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBondsInterceptors() ?? []
    )
  }

  internal func bondsDetailed(
    _ request: Ixo_Bonds_V1beta1_QueryBondsDetailedRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QueryBondsDetailedResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.bondsDetailed.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBondsDetailedInterceptors() ?? []
    )
  }

  internal func params(
    _ request: Ixo_Bonds_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QueryParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func bond(
    _ request: Ixo_Bonds_V1beta1_QueryBondRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QueryBondResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.bond.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBondInterceptors() ?? []
    )
  }

  internal func batch(
    _ request: Ixo_Bonds_V1beta1_QueryBatchRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QueryBatchResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.batch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchInterceptors() ?? []
    )
  }

  internal func lastBatch(
    _ request: Ixo_Bonds_V1beta1_QueryLastBatchRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QueryLastBatchResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.lastBatch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLastBatchInterceptors() ?? []
    )
  }

  internal func currentPrice(
    _ request: Ixo_Bonds_V1beta1_QueryCurrentPriceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QueryCurrentPriceResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.currentPrice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCurrentPriceInterceptors() ?? []
    )
  }

  internal func currentReserve(
    _ request: Ixo_Bonds_V1beta1_QueryCurrentReserveRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QueryCurrentReserveResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.currentReserve.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCurrentReserveInterceptors() ?? []
    )
  }

  internal func availableReserve(
    _ request: Ixo_Bonds_V1beta1_QueryAvailableReserveRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QueryAvailableReserveResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.availableReserve.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAvailableReserveInterceptors() ?? []
    )
  }

  internal func customPrice(
    _ request: Ixo_Bonds_V1beta1_QueryCustomPriceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QueryCustomPriceResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.customPrice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCustomPriceInterceptors() ?? []
    )
  }

  internal func buyPrice(
    _ request: Ixo_Bonds_V1beta1_QueryBuyPriceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QueryBuyPriceResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.buyPrice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBuyPriceInterceptors() ?? []
    )
  }

  internal func sellReturn(
    _ request: Ixo_Bonds_V1beta1_QuerySellReturnRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QuerySellReturnResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.sellReturn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSellReturnInterceptors() ?? []
    )
  }

  internal func swapReturn(
    _ request: Ixo_Bonds_V1beta1_QuerySwapReturnRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QuerySwapReturnResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.swapReturn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapReturnInterceptors() ?? []
    )
  }

  internal func alphaMaximums(
    _ request: Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_QueryAlphaMaximumsResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.alphaMaximums.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAlphaMaximumsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Ixo_Bonds_V1beta1_QueryAsyncClient: Ixo_Bonds_V1beta1_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Ixo_Bonds_V1beta1_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ixo_Bonds_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Ixo_Bonds_V1beta1_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'bonds'.
  func makeBondsInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QueryBondsRequest, Ixo_Bonds_V1beta1_QueryBondsResponse>]

  /// - Returns: Interceptors to use when invoking 'bondsDetailed'.
  func makeBondsDetailedInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QueryBondsDetailedRequest, Ixo_Bonds_V1beta1_QueryBondsDetailedResponse>]

  /// - Returns: Interceptors to use when invoking 'params'.
  func makeParamsInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QueryParamsRequest, Ixo_Bonds_V1beta1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when invoking 'bond'.
  func makeBondInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QueryBondRequest, Ixo_Bonds_V1beta1_QueryBondResponse>]

  /// - Returns: Interceptors to use when invoking 'batch'.
  func makeBatchInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QueryBatchRequest, Ixo_Bonds_V1beta1_QueryBatchResponse>]

  /// - Returns: Interceptors to use when invoking 'lastBatch'.
  func makeLastBatchInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QueryLastBatchRequest, Ixo_Bonds_V1beta1_QueryLastBatchResponse>]

  /// - Returns: Interceptors to use when invoking 'currentPrice'.
  func makeCurrentPriceInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QueryCurrentPriceRequest, Ixo_Bonds_V1beta1_QueryCurrentPriceResponse>]

  /// - Returns: Interceptors to use when invoking 'currentReserve'.
  func makeCurrentReserveInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QueryCurrentReserveRequest, Ixo_Bonds_V1beta1_QueryCurrentReserveResponse>]

  /// - Returns: Interceptors to use when invoking 'availableReserve'.
  func makeAvailableReserveInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QueryAvailableReserveRequest, Ixo_Bonds_V1beta1_QueryAvailableReserveResponse>]

  /// - Returns: Interceptors to use when invoking 'customPrice'.
  func makeCustomPriceInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QueryCustomPriceRequest, Ixo_Bonds_V1beta1_QueryCustomPriceResponse>]

  /// - Returns: Interceptors to use when invoking 'buyPrice'.
  func makeBuyPriceInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QueryBuyPriceRequest, Ixo_Bonds_V1beta1_QueryBuyPriceResponse>]

  /// - Returns: Interceptors to use when invoking 'sellReturn'.
  func makeSellReturnInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QuerySellReturnRequest, Ixo_Bonds_V1beta1_QuerySellReturnResponse>]

  /// - Returns: Interceptors to use when invoking 'swapReturn'.
  func makeSwapReturnInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QuerySwapReturnRequest, Ixo_Bonds_V1beta1_QuerySwapReturnResponse>]

  /// - Returns: Interceptors to use when invoking 'alphaMaximums'.
  func makeAlphaMaximumsInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest, Ixo_Bonds_V1beta1_QueryAlphaMaximumsResponse>]
}

internal enum Ixo_Bonds_V1beta1_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "ixo.bonds.v1beta1.Query",
    methods: [
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.bonds,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.bondsDetailed,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.params,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.bond,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.batch,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.lastBatch,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.currentPrice,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.currentReserve,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.availableReserve,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.customPrice,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.buyPrice,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.sellReturn,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.swapReturn,
      Ixo_Bonds_V1beta1_QueryClientMetadata.Methods.alphaMaximums,
    ]
  )

  internal enum Methods {
    internal static let bonds = GRPCMethodDescriptor(
      name: "Bonds",
      path: "/ixo.bonds.v1beta1.Query/Bonds",
      type: GRPCCallType.unary
    )

    internal static let bondsDetailed = GRPCMethodDescriptor(
      name: "BondsDetailed",
      path: "/ixo.bonds.v1beta1.Query/BondsDetailed",
      type: GRPCCallType.unary
    )

    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/ixo.bonds.v1beta1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let bond = GRPCMethodDescriptor(
      name: "Bond",
      path: "/ixo.bonds.v1beta1.Query/Bond",
      type: GRPCCallType.unary
    )

    internal static let batch = GRPCMethodDescriptor(
      name: "Batch",
      path: "/ixo.bonds.v1beta1.Query/Batch",
      type: GRPCCallType.unary
    )

    internal static let lastBatch = GRPCMethodDescriptor(
      name: "LastBatch",
      path: "/ixo.bonds.v1beta1.Query/LastBatch",
      type: GRPCCallType.unary
    )

    internal static let currentPrice = GRPCMethodDescriptor(
      name: "CurrentPrice",
      path: "/ixo.bonds.v1beta1.Query/CurrentPrice",
      type: GRPCCallType.unary
    )

    internal static let currentReserve = GRPCMethodDescriptor(
      name: "CurrentReserve",
      path: "/ixo.bonds.v1beta1.Query/CurrentReserve",
      type: GRPCCallType.unary
    )

    internal static let availableReserve = GRPCMethodDescriptor(
      name: "AvailableReserve",
      path: "/ixo.bonds.v1beta1.Query/AvailableReserve",
      type: GRPCCallType.unary
    )

    internal static let customPrice = GRPCMethodDescriptor(
      name: "CustomPrice",
      path: "/ixo.bonds.v1beta1.Query/CustomPrice",
      type: GRPCCallType.unary
    )

    internal static let buyPrice = GRPCMethodDescriptor(
      name: "BuyPrice",
      path: "/ixo.bonds.v1beta1.Query/BuyPrice",
      type: GRPCCallType.unary
    )

    internal static let sellReturn = GRPCMethodDescriptor(
      name: "SellReturn",
      path: "/ixo.bonds.v1beta1.Query/SellReturn",
      type: GRPCCallType.unary
    )

    internal static let swapReturn = GRPCMethodDescriptor(
      name: "SwapReturn",
      path: "/ixo.bonds.v1beta1.Query/SwapReturn",
      type: GRPCCallType.unary
    )

    internal static let alphaMaximums = GRPCMethodDescriptor(
      name: "AlphaMaximums",
      path: "/ixo.bonds.v1beta1.Query/AlphaMaximums",
      type: GRPCCallType.unary
    )
  }
}

/// Query defines the gRPC querier service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Ixo_Bonds_V1beta1_QueryProvider: CallHandlerProvider {
  var interceptors: Ixo_Bonds_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  /// Bonds returns all existing bonds.
  func bonds(request: Ixo_Bonds_V1beta1_QueryBondsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QueryBondsResponse>

  /// BondsDetailed returns a list of all existing bonds with some details about
  /// their current state.
  func bondsDetailed(request: Ixo_Bonds_V1beta1_QueryBondsDetailedRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QueryBondsDetailedResponse>

  /// Params queries the paramaters of x/bonds module.
  func params(request: Ixo_Bonds_V1beta1_QueryParamsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QueryParamsResponse>

  /// Bond queries info of a specific bond.
  func bond(request: Ixo_Bonds_V1beta1_QueryBondRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QueryBondResponse>

  /// Batch queries info of a specific bond's current batch.
  func batch(request: Ixo_Bonds_V1beta1_QueryBatchRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QueryBatchResponse>

  /// LastBatch queries info of a specific bond's last batch.
  func lastBatch(request: Ixo_Bonds_V1beta1_QueryLastBatchRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QueryLastBatchResponse>

  /// CurrentPrice queries the current price/s of a specific bond.
  func currentPrice(request: Ixo_Bonds_V1beta1_QueryCurrentPriceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QueryCurrentPriceResponse>

  /// CurrentReserve queries the current balance/s of the reserve pool for a
  /// specific bond.
  func currentReserve(request: Ixo_Bonds_V1beta1_QueryCurrentReserveRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QueryCurrentReserveResponse>

  /// AvailableReserve queries current available balance/s of the reserve pool
  /// for a specific bond.
  func availableReserve(request: Ixo_Bonds_V1beta1_QueryAvailableReserveRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QueryAvailableReserveResponse>

  /// CustomPrice queries price/s of a specific bond at a specific supply.
  func customPrice(request: Ixo_Bonds_V1beta1_QueryCustomPriceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QueryCustomPriceResponse>

  /// BuyPrice queries price/s of buying an amount of tokens from a specific
  /// bond.
  func buyPrice(request: Ixo_Bonds_V1beta1_QueryBuyPriceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QueryBuyPriceResponse>

  /// SellReturn queries return/s on selling an amount of tokens of a specific
  /// bond.
  func sellReturn(request: Ixo_Bonds_V1beta1_QuerySellReturnRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QuerySellReturnResponse>

  /// SwapReturn queries return/s on swapping an amount of tokens to another
  /// token of a specific bond.
  func swapReturn(request: Ixo_Bonds_V1beta1_QuerySwapReturnRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QuerySwapReturnResponse>

  /// AlphaMaximums queries alpha maximums for a specific augmented bonding
  /// curve.
  func alphaMaximums(request: Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_QueryAlphaMaximumsResponse>
}

extension Ixo_Bonds_V1beta1_QueryProvider {
  internal var serviceName: Substring {
    return Ixo_Bonds_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Bonds":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryBondsRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryBondsResponse>(),
        interceptors: self.interceptors?.makeBondsInterceptors() ?? [],
        userFunction: self.bonds(request:context:)
      )

    case "BondsDetailed":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryBondsDetailedRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryBondsDetailedResponse>(),
        interceptors: self.interceptors?.makeBondsDetailedInterceptors() ?? [],
        userFunction: self.bondsDetailed(request:context:)
      )

    case "Params":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        userFunction: self.params(request:context:)
      )

    case "Bond":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryBondRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryBondResponse>(),
        interceptors: self.interceptors?.makeBondInterceptors() ?? [],
        userFunction: self.bond(request:context:)
      )

    case "Batch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryBatchRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryBatchResponse>(),
        interceptors: self.interceptors?.makeBatchInterceptors() ?? [],
        userFunction: self.batch(request:context:)
      )

    case "LastBatch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryLastBatchRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryLastBatchResponse>(),
        interceptors: self.interceptors?.makeLastBatchInterceptors() ?? [],
        userFunction: self.lastBatch(request:context:)
      )

    case "CurrentPrice":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryCurrentPriceRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryCurrentPriceResponse>(),
        interceptors: self.interceptors?.makeCurrentPriceInterceptors() ?? [],
        userFunction: self.currentPrice(request:context:)
      )

    case "CurrentReserve":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryCurrentReserveRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryCurrentReserveResponse>(),
        interceptors: self.interceptors?.makeCurrentReserveInterceptors() ?? [],
        userFunction: self.currentReserve(request:context:)
      )

    case "AvailableReserve":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryAvailableReserveRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryAvailableReserveResponse>(),
        interceptors: self.interceptors?.makeAvailableReserveInterceptors() ?? [],
        userFunction: self.availableReserve(request:context:)
      )

    case "CustomPrice":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryCustomPriceRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryCustomPriceResponse>(),
        interceptors: self.interceptors?.makeCustomPriceInterceptors() ?? [],
        userFunction: self.customPrice(request:context:)
      )

    case "BuyPrice":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryBuyPriceRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryBuyPriceResponse>(),
        interceptors: self.interceptors?.makeBuyPriceInterceptors() ?? [],
        userFunction: self.buyPrice(request:context:)
      )

    case "SellReturn":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QuerySellReturnRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QuerySellReturnResponse>(),
        interceptors: self.interceptors?.makeSellReturnInterceptors() ?? [],
        userFunction: self.sellReturn(request:context:)
      )

    case "SwapReturn":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QuerySwapReturnRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QuerySwapReturnResponse>(),
        interceptors: self.interceptors?.makeSwapReturnInterceptors() ?? [],
        userFunction: self.swapReturn(request:context:)
      )

    case "AlphaMaximums":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryAlphaMaximumsResponse>(),
        interceptors: self.interceptors?.makeAlphaMaximumsInterceptors() ?? [],
        userFunction: self.alphaMaximums(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Query defines the gRPC querier service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Ixo_Bonds_V1beta1_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Ixo_Bonds_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  /// Bonds returns all existing bonds.
  @Sendable func bonds(
    request: Ixo_Bonds_V1beta1_QueryBondsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QueryBondsResponse

  /// BondsDetailed returns a list of all existing bonds with some details about
  /// their current state.
  @Sendable func bondsDetailed(
    request: Ixo_Bonds_V1beta1_QueryBondsDetailedRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QueryBondsDetailedResponse

  /// Params queries the paramaters of x/bonds module.
  @Sendable func params(
    request: Ixo_Bonds_V1beta1_QueryParamsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QueryParamsResponse

  /// Bond queries info of a specific bond.
  @Sendable func bond(
    request: Ixo_Bonds_V1beta1_QueryBondRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QueryBondResponse

  /// Batch queries info of a specific bond's current batch.
  @Sendable func batch(
    request: Ixo_Bonds_V1beta1_QueryBatchRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QueryBatchResponse

  /// LastBatch queries info of a specific bond's last batch.
  @Sendable func lastBatch(
    request: Ixo_Bonds_V1beta1_QueryLastBatchRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QueryLastBatchResponse

  /// CurrentPrice queries the current price/s of a specific bond.
  @Sendable func currentPrice(
    request: Ixo_Bonds_V1beta1_QueryCurrentPriceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QueryCurrentPriceResponse

  /// CurrentReserve queries the current balance/s of the reserve pool for a
  /// specific bond.
  @Sendable func currentReserve(
    request: Ixo_Bonds_V1beta1_QueryCurrentReserveRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QueryCurrentReserveResponse

  /// AvailableReserve queries current available balance/s of the reserve pool
  /// for a specific bond.
  @Sendable func availableReserve(
    request: Ixo_Bonds_V1beta1_QueryAvailableReserveRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QueryAvailableReserveResponse

  /// CustomPrice queries price/s of a specific bond at a specific supply.
  @Sendable func customPrice(
    request: Ixo_Bonds_V1beta1_QueryCustomPriceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QueryCustomPriceResponse

  /// BuyPrice queries price/s of buying an amount of tokens from a specific
  /// bond.
  @Sendable func buyPrice(
    request: Ixo_Bonds_V1beta1_QueryBuyPriceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QueryBuyPriceResponse

  /// SellReturn queries return/s on selling an amount of tokens of a specific
  /// bond.
  @Sendable func sellReturn(
    request: Ixo_Bonds_V1beta1_QuerySellReturnRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QuerySellReturnResponse

  /// SwapReturn queries return/s on swapping an amount of tokens to another
  /// token of a specific bond.
  @Sendable func swapReturn(
    request: Ixo_Bonds_V1beta1_QuerySwapReturnRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QuerySwapReturnResponse

  /// AlphaMaximums queries alpha maximums for a specific augmented bonding
  /// curve.
  @Sendable func alphaMaximums(
    request: Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_QueryAlphaMaximumsResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ixo_Bonds_V1beta1_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Ixo_Bonds_V1beta1_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Ixo_Bonds_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Ixo_Bonds_V1beta1_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Bonds":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryBondsRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryBondsResponse>(),
        interceptors: self.interceptors?.makeBondsInterceptors() ?? [],
        wrapping: self.bonds(request:context:)
      )

    case "BondsDetailed":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryBondsDetailedRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryBondsDetailedResponse>(),
        interceptors: self.interceptors?.makeBondsDetailedInterceptors() ?? [],
        wrapping: self.bondsDetailed(request:context:)
      )

    case "Params":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        wrapping: self.params(request:context:)
      )

    case "Bond":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryBondRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryBondResponse>(),
        interceptors: self.interceptors?.makeBondInterceptors() ?? [],
        wrapping: self.bond(request:context:)
      )

    case "Batch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryBatchRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryBatchResponse>(),
        interceptors: self.interceptors?.makeBatchInterceptors() ?? [],
        wrapping: self.batch(request:context:)
      )

    case "LastBatch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryLastBatchRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryLastBatchResponse>(),
        interceptors: self.interceptors?.makeLastBatchInterceptors() ?? [],
        wrapping: self.lastBatch(request:context:)
      )

    case "CurrentPrice":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryCurrentPriceRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryCurrentPriceResponse>(),
        interceptors: self.interceptors?.makeCurrentPriceInterceptors() ?? [],
        wrapping: self.currentPrice(request:context:)
      )

    case "CurrentReserve":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryCurrentReserveRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryCurrentReserveResponse>(),
        interceptors: self.interceptors?.makeCurrentReserveInterceptors() ?? [],
        wrapping: self.currentReserve(request:context:)
      )

    case "AvailableReserve":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryAvailableReserveRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryAvailableReserveResponse>(),
        interceptors: self.interceptors?.makeAvailableReserveInterceptors() ?? [],
        wrapping: self.availableReserve(request:context:)
      )

    case "CustomPrice":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryCustomPriceRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryCustomPriceResponse>(),
        interceptors: self.interceptors?.makeCustomPriceInterceptors() ?? [],
        wrapping: self.customPrice(request:context:)
      )

    case "BuyPrice":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryBuyPriceRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryBuyPriceResponse>(),
        interceptors: self.interceptors?.makeBuyPriceInterceptors() ?? [],
        wrapping: self.buyPrice(request:context:)
      )

    case "SellReturn":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QuerySellReturnRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QuerySellReturnResponse>(),
        interceptors: self.interceptors?.makeSellReturnInterceptors() ?? [],
        wrapping: self.sellReturn(request:context:)
      )

    case "SwapReturn":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QuerySwapReturnRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QuerySwapReturnResponse>(),
        interceptors: self.interceptors?.makeSwapReturnInterceptors() ?? [],
        wrapping: self.swapReturn(request:context:)
      )

    case "AlphaMaximums":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_QueryAlphaMaximumsResponse>(),
        interceptors: self.interceptors?.makeAlphaMaximumsInterceptors() ?? [],
        wrapping: self.alphaMaximums(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Ixo_Bonds_V1beta1_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'bonds'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBondsInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QueryBondsRequest, Ixo_Bonds_V1beta1_QueryBondsResponse>]

  /// - Returns: Interceptors to use when handling 'bondsDetailed'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBondsDetailedInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QueryBondsDetailedRequest, Ixo_Bonds_V1beta1_QueryBondsDetailedResponse>]

  /// - Returns: Interceptors to use when handling 'params'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeParamsInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QueryParamsRequest, Ixo_Bonds_V1beta1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when handling 'bond'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBondInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QueryBondRequest, Ixo_Bonds_V1beta1_QueryBondResponse>]

  /// - Returns: Interceptors to use when handling 'batch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBatchInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QueryBatchRequest, Ixo_Bonds_V1beta1_QueryBatchResponse>]

  /// - Returns: Interceptors to use when handling 'lastBatch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeLastBatchInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QueryLastBatchRequest, Ixo_Bonds_V1beta1_QueryLastBatchResponse>]

  /// - Returns: Interceptors to use when handling 'currentPrice'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCurrentPriceInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QueryCurrentPriceRequest, Ixo_Bonds_V1beta1_QueryCurrentPriceResponse>]

  /// - Returns: Interceptors to use when handling 'currentReserve'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCurrentReserveInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QueryCurrentReserveRequest, Ixo_Bonds_V1beta1_QueryCurrentReserveResponse>]

  /// - Returns: Interceptors to use when handling 'availableReserve'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAvailableReserveInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QueryAvailableReserveRequest, Ixo_Bonds_V1beta1_QueryAvailableReserveResponse>]

  /// - Returns: Interceptors to use when handling 'customPrice'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCustomPriceInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QueryCustomPriceRequest, Ixo_Bonds_V1beta1_QueryCustomPriceResponse>]

  /// - Returns: Interceptors to use when handling 'buyPrice'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBuyPriceInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QueryBuyPriceRequest, Ixo_Bonds_V1beta1_QueryBuyPriceResponse>]

  /// - Returns: Interceptors to use when handling 'sellReturn'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSellReturnInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QuerySellReturnRequest, Ixo_Bonds_V1beta1_QuerySellReturnResponse>]

  /// - Returns: Interceptors to use when handling 'swapReturn'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSwapReturnInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QuerySwapReturnRequest, Ixo_Bonds_V1beta1_QuerySwapReturnResponse>]

  /// - Returns: Interceptors to use when handling 'alphaMaximums'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAlphaMaximumsInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_QueryAlphaMaximumsRequest, Ixo_Bonds_V1beta1_QueryAlphaMaximumsResponse>]
}

internal enum Ixo_Bonds_V1beta1_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "ixo.bonds.v1beta1.Query",
    methods: [
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.bonds,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.bondsDetailed,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.params,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.bond,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.batch,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.lastBatch,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.currentPrice,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.currentReserve,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.availableReserve,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.customPrice,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.buyPrice,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.sellReturn,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.swapReturn,
      Ixo_Bonds_V1beta1_QueryServerMetadata.Methods.alphaMaximums,
    ]
  )

  internal enum Methods {
    internal static let bonds = GRPCMethodDescriptor(
      name: "Bonds",
      path: "/ixo.bonds.v1beta1.Query/Bonds",
      type: GRPCCallType.unary
    )

    internal static let bondsDetailed = GRPCMethodDescriptor(
      name: "BondsDetailed",
      path: "/ixo.bonds.v1beta1.Query/BondsDetailed",
      type: GRPCCallType.unary
    )

    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/ixo.bonds.v1beta1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let bond = GRPCMethodDescriptor(
      name: "Bond",
      path: "/ixo.bonds.v1beta1.Query/Bond",
      type: GRPCCallType.unary
    )

    internal static let batch = GRPCMethodDescriptor(
      name: "Batch",
      path: "/ixo.bonds.v1beta1.Query/Batch",
      type: GRPCCallType.unary
    )

    internal static let lastBatch = GRPCMethodDescriptor(
      name: "LastBatch",
      path: "/ixo.bonds.v1beta1.Query/LastBatch",
      type: GRPCCallType.unary
    )

    internal static let currentPrice = GRPCMethodDescriptor(
      name: "CurrentPrice",
      path: "/ixo.bonds.v1beta1.Query/CurrentPrice",
      type: GRPCCallType.unary
    )

    internal static let currentReserve = GRPCMethodDescriptor(
      name: "CurrentReserve",
      path: "/ixo.bonds.v1beta1.Query/CurrentReserve",
      type: GRPCCallType.unary
    )

    internal static let availableReserve = GRPCMethodDescriptor(
      name: "AvailableReserve",
      path: "/ixo.bonds.v1beta1.Query/AvailableReserve",
      type: GRPCCallType.unary
    )

    internal static let customPrice = GRPCMethodDescriptor(
      name: "CustomPrice",
      path: "/ixo.bonds.v1beta1.Query/CustomPrice",
      type: GRPCCallType.unary
    )

    internal static let buyPrice = GRPCMethodDescriptor(
      name: "BuyPrice",
      path: "/ixo.bonds.v1beta1.Query/BuyPrice",
      type: GRPCCallType.unary
    )

    internal static let sellReturn = GRPCMethodDescriptor(
      name: "SellReturn",
      path: "/ixo.bonds.v1beta1.Query/SellReturn",
      type: GRPCCallType.unary
    )

    internal static let swapReturn = GRPCMethodDescriptor(
      name: "SwapReturn",
      path: "/ixo.bonds.v1beta1.Query/SwapReturn",
      type: GRPCCallType.unary
    )

    internal static let alphaMaximums = GRPCMethodDescriptor(
      name: "AlphaMaximums",
      path: "/ixo.bonds.v1beta1.Query/AlphaMaximums",
      type: GRPCCallType.unary
    )
  }
}

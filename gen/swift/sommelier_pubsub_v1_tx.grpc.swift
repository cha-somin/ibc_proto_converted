//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: sommelier/pubsub/v1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Pubsub_V1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Pubsub_V1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Pubsub_V1_MsgClientInterceptorFactoryProtocol? { get }

  func removePublisher(
    _ request: Pubsub_V1_MsgRemovePublisherRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pubsub_V1_MsgRemovePublisherRequest, Pubsub_V1_MsgRemovePublisherResponse>

  func addSubscriber(
    _ request: Pubsub_V1_MsgAddSubscriberRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pubsub_V1_MsgAddSubscriberRequest, Pubsub_V1_MsgAddSubscriberResponse>

  func removeSubscriber(
    _ request: Pubsub_V1_MsgRemoveSubscriberRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pubsub_V1_MsgRemoveSubscriberRequest, Pubsub_V1_MsgRemoveSubscriberResponse>

  func addPublisherIntent(
    _ request: Pubsub_V1_MsgAddPublisherIntentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pubsub_V1_MsgAddPublisherIntentRequest, Pubsub_V1_MsgAddPublisherIntentResponse>

  func removePublisherIntent(
    _ request: Pubsub_V1_MsgRemovePublisherIntentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pubsub_V1_MsgRemovePublisherIntentRequest, Pubsub_V1_MsgRemovePublisherIntentResponse>

  func addSubscriberIntent(
    _ request: Pubsub_V1_MsgAddSubscriberIntentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pubsub_V1_MsgAddSubscriberIntentRequest, Pubsub_V1_MsgAddSubscriberIntentResponse>

  func removeSubscriberIntent(
    _ request: Pubsub_V1_MsgRemoveSubscriberIntentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pubsub_V1_MsgRemoveSubscriberIntentRequest, Pubsub_V1_MsgRemoveSubscriberIntentResponse>
}

extension Pubsub_V1_MsgClientProtocol {
  internal var serviceName: String {
    return "pubsub.v1.Msg"
  }

  /// Unary call to RemovePublisher
  ///
  /// - Parameters:
  ///   - request: Request to send to RemovePublisher.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func removePublisher(
    _ request: Pubsub_V1_MsgRemovePublisherRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pubsub_V1_MsgRemovePublisherRequest, Pubsub_V1_MsgRemovePublisherResponse> {
    return self.makeUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.removePublisher.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemovePublisherInterceptors() ?? []
    )
  }

  /// Unary call to AddSubscriber
  ///
  /// - Parameters:
  ///   - request: Request to send to AddSubscriber.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addSubscriber(
    _ request: Pubsub_V1_MsgAddSubscriberRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pubsub_V1_MsgAddSubscriberRequest, Pubsub_V1_MsgAddSubscriberResponse> {
    return self.makeUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.addSubscriber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddSubscriberInterceptors() ?? []
    )
  }

  /// Unary call to RemoveSubscriber
  ///
  /// - Parameters:
  ///   - request: Request to send to RemoveSubscriber.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func removeSubscriber(
    _ request: Pubsub_V1_MsgRemoveSubscriberRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pubsub_V1_MsgRemoveSubscriberRequest, Pubsub_V1_MsgRemoveSubscriberResponse> {
    return self.makeUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.removeSubscriber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveSubscriberInterceptors() ?? []
    )
  }

  /// Unary call to AddPublisherIntent
  ///
  /// - Parameters:
  ///   - request: Request to send to AddPublisherIntent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addPublisherIntent(
    _ request: Pubsub_V1_MsgAddPublisherIntentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pubsub_V1_MsgAddPublisherIntentRequest, Pubsub_V1_MsgAddPublisherIntentResponse> {
    return self.makeUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.addPublisherIntent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddPublisherIntentInterceptors() ?? []
    )
  }

  /// Unary call to RemovePublisherIntent
  ///
  /// - Parameters:
  ///   - request: Request to send to RemovePublisherIntent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func removePublisherIntent(
    _ request: Pubsub_V1_MsgRemovePublisherIntentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pubsub_V1_MsgRemovePublisherIntentRequest, Pubsub_V1_MsgRemovePublisherIntentResponse> {
    return self.makeUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.removePublisherIntent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemovePublisherIntentInterceptors() ?? []
    )
  }

  /// Unary call to AddSubscriberIntent
  ///
  /// - Parameters:
  ///   - request: Request to send to AddSubscriberIntent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addSubscriberIntent(
    _ request: Pubsub_V1_MsgAddSubscriberIntentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pubsub_V1_MsgAddSubscriberIntentRequest, Pubsub_V1_MsgAddSubscriberIntentResponse> {
    return self.makeUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.addSubscriberIntent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddSubscriberIntentInterceptors() ?? []
    )
  }

  /// Unary call to RemoveSubscriberIntent
  ///
  /// - Parameters:
  ///   - request: Request to send to RemoveSubscriberIntent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func removeSubscriberIntent(
    _ request: Pubsub_V1_MsgRemoveSubscriberIntentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pubsub_V1_MsgRemoveSubscriberIntentRequest, Pubsub_V1_MsgRemoveSubscriberIntentResponse> {
    return self.makeUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.removeSubscriberIntent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveSubscriberIntentInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Pubsub_V1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Pubsub_V1_MsgNIOClient")
internal final class Pubsub_V1_MsgClient: Pubsub_V1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Pubsub_V1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Pubsub_V1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the pubsub.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Pubsub_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Pubsub_V1_MsgNIOClient: Pubsub_V1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Pubsub_V1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the pubsub.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Pubsub_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Pubsub_V1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Pubsub_V1_MsgClientInterceptorFactoryProtocol? { get }

  func makeRemovePublisherCall(
    _ request: Pubsub_V1_MsgRemovePublisherRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgRemovePublisherRequest, Pubsub_V1_MsgRemovePublisherResponse>

  func makeAddSubscriberCall(
    _ request: Pubsub_V1_MsgAddSubscriberRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgAddSubscriberRequest, Pubsub_V1_MsgAddSubscriberResponse>

  func makeRemoveSubscriberCall(
    _ request: Pubsub_V1_MsgRemoveSubscriberRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgRemoveSubscriberRequest, Pubsub_V1_MsgRemoveSubscriberResponse>

  func makeAddPublisherIntentCall(
    _ request: Pubsub_V1_MsgAddPublisherIntentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgAddPublisherIntentRequest, Pubsub_V1_MsgAddPublisherIntentResponse>

  func makeRemovePublisherIntentCall(
    _ request: Pubsub_V1_MsgRemovePublisherIntentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgRemovePublisherIntentRequest, Pubsub_V1_MsgRemovePublisherIntentResponse>

  func makeAddSubscriberIntentCall(
    _ request: Pubsub_V1_MsgAddSubscriberIntentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgAddSubscriberIntentRequest, Pubsub_V1_MsgAddSubscriberIntentResponse>

  func makeRemoveSubscriberIntentCall(
    _ request: Pubsub_V1_MsgRemoveSubscriberIntentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgRemoveSubscriberIntentRequest, Pubsub_V1_MsgRemoveSubscriberIntentResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Pubsub_V1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Pubsub_V1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Pubsub_V1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeRemovePublisherCall(
    _ request: Pubsub_V1_MsgRemovePublisherRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgRemovePublisherRequest, Pubsub_V1_MsgRemovePublisherResponse> {
    return self.makeAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.removePublisher.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemovePublisherInterceptors() ?? []
    )
  }

  internal func makeAddSubscriberCall(
    _ request: Pubsub_V1_MsgAddSubscriberRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgAddSubscriberRequest, Pubsub_V1_MsgAddSubscriberResponse> {
    return self.makeAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.addSubscriber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddSubscriberInterceptors() ?? []
    )
  }

  internal func makeRemoveSubscriberCall(
    _ request: Pubsub_V1_MsgRemoveSubscriberRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgRemoveSubscriberRequest, Pubsub_V1_MsgRemoveSubscriberResponse> {
    return self.makeAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.removeSubscriber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveSubscriberInterceptors() ?? []
    )
  }

  internal func makeAddPublisherIntentCall(
    _ request: Pubsub_V1_MsgAddPublisherIntentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgAddPublisherIntentRequest, Pubsub_V1_MsgAddPublisherIntentResponse> {
    return self.makeAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.addPublisherIntent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddPublisherIntentInterceptors() ?? []
    )
  }

  internal func makeRemovePublisherIntentCall(
    _ request: Pubsub_V1_MsgRemovePublisherIntentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgRemovePublisherIntentRequest, Pubsub_V1_MsgRemovePublisherIntentResponse> {
    return self.makeAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.removePublisherIntent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemovePublisherIntentInterceptors() ?? []
    )
  }

  internal func makeAddSubscriberIntentCall(
    _ request: Pubsub_V1_MsgAddSubscriberIntentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgAddSubscriberIntentRequest, Pubsub_V1_MsgAddSubscriberIntentResponse> {
    return self.makeAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.addSubscriberIntent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddSubscriberIntentInterceptors() ?? []
    )
  }

  internal func makeRemoveSubscriberIntentCall(
    _ request: Pubsub_V1_MsgRemoveSubscriberIntentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pubsub_V1_MsgRemoveSubscriberIntentRequest, Pubsub_V1_MsgRemoveSubscriberIntentResponse> {
    return self.makeAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.removeSubscriberIntent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveSubscriberIntentInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Pubsub_V1_MsgAsyncClientProtocol {
  internal func removePublisher(
    _ request: Pubsub_V1_MsgRemovePublisherRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pubsub_V1_MsgRemovePublisherResponse {
    return try await self.performAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.removePublisher.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemovePublisherInterceptors() ?? []
    )
  }

  internal func addSubscriber(
    _ request: Pubsub_V1_MsgAddSubscriberRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pubsub_V1_MsgAddSubscriberResponse {
    return try await self.performAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.addSubscriber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddSubscriberInterceptors() ?? []
    )
  }

  internal func removeSubscriber(
    _ request: Pubsub_V1_MsgRemoveSubscriberRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pubsub_V1_MsgRemoveSubscriberResponse {
    return try await self.performAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.removeSubscriber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveSubscriberInterceptors() ?? []
    )
  }

  internal func addPublisherIntent(
    _ request: Pubsub_V1_MsgAddPublisherIntentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pubsub_V1_MsgAddPublisherIntentResponse {
    return try await self.performAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.addPublisherIntent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddPublisherIntentInterceptors() ?? []
    )
  }

  internal func removePublisherIntent(
    _ request: Pubsub_V1_MsgRemovePublisherIntentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pubsub_V1_MsgRemovePublisherIntentResponse {
    return try await self.performAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.removePublisherIntent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemovePublisherIntentInterceptors() ?? []
    )
  }

  internal func addSubscriberIntent(
    _ request: Pubsub_V1_MsgAddSubscriberIntentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pubsub_V1_MsgAddSubscriberIntentResponse {
    return try await self.performAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.addSubscriberIntent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddSubscriberIntentInterceptors() ?? []
    )
  }

  internal func removeSubscriberIntent(
    _ request: Pubsub_V1_MsgRemoveSubscriberIntentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pubsub_V1_MsgRemoveSubscriberIntentResponse {
    return try await self.performAsyncUnaryCall(
      path: Pubsub_V1_MsgClientMetadata.Methods.removeSubscriberIntent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveSubscriberIntentInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Pubsub_V1_MsgAsyncClient: Pubsub_V1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Pubsub_V1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Pubsub_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Pubsub_V1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'removePublisher'.
  func makeRemovePublisherInterceptors() -> [ClientInterceptor<Pubsub_V1_MsgRemovePublisherRequest, Pubsub_V1_MsgRemovePublisherResponse>]

  /// - Returns: Interceptors to use when invoking 'addSubscriber'.
  func makeAddSubscriberInterceptors() -> [ClientInterceptor<Pubsub_V1_MsgAddSubscriberRequest, Pubsub_V1_MsgAddSubscriberResponse>]

  /// - Returns: Interceptors to use when invoking 'removeSubscriber'.
  func makeRemoveSubscriberInterceptors() -> [ClientInterceptor<Pubsub_V1_MsgRemoveSubscriberRequest, Pubsub_V1_MsgRemoveSubscriberResponse>]

  /// - Returns: Interceptors to use when invoking 'addPublisherIntent'.
  func makeAddPublisherIntentInterceptors() -> [ClientInterceptor<Pubsub_V1_MsgAddPublisherIntentRequest, Pubsub_V1_MsgAddPublisherIntentResponse>]

  /// - Returns: Interceptors to use when invoking 'removePublisherIntent'.
  func makeRemovePublisherIntentInterceptors() -> [ClientInterceptor<Pubsub_V1_MsgRemovePublisherIntentRequest, Pubsub_V1_MsgRemovePublisherIntentResponse>]

  /// - Returns: Interceptors to use when invoking 'addSubscriberIntent'.
  func makeAddSubscriberIntentInterceptors() -> [ClientInterceptor<Pubsub_V1_MsgAddSubscriberIntentRequest, Pubsub_V1_MsgAddSubscriberIntentResponse>]

  /// - Returns: Interceptors to use when invoking 'removeSubscriberIntent'.
  func makeRemoveSubscriberIntentInterceptors() -> [ClientInterceptor<Pubsub_V1_MsgRemoveSubscriberIntentRequest, Pubsub_V1_MsgRemoveSubscriberIntentResponse>]
}

internal enum Pubsub_V1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "pubsub.v1.Msg",
    methods: [
      Pubsub_V1_MsgClientMetadata.Methods.removePublisher,
      Pubsub_V1_MsgClientMetadata.Methods.addSubscriber,
      Pubsub_V1_MsgClientMetadata.Methods.removeSubscriber,
      Pubsub_V1_MsgClientMetadata.Methods.addPublisherIntent,
      Pubsub_V1_MsgClientMetadata.Methods.removePublisherIntent,
      Pubsub_V1_MsgClientMetadata.Methods.addSubscriberIntent,
      Pubsub_V1_MsgClientMetadata.Methods.removeSubscriberIntent,
    ]
  )

  internal enum Methods {
    internal static let removePublisher = GRPCMethodDescriptor(
      name: "RemovePublisher",
      path: "/pubsub.v1.Msg/RemovePublisher",
      type: GRPCCallType.unary
    )

    internal static let addSubscriber = GRPCMethodDescriptor(
      name: "AddSubscriber",
      path: "/pubsub.v1.Msg/AddSubscriber",
      type: GRPCCallType.unary
    )

    internal static let removeSubscriber = GRPCMethodDescriptor(
      name: "RemoveSubscriber",
      path: "/pubsub.v1.Msg/RemoveSubscriber",
      type: GRPCCallType.unary
    )

    internal static let addPublisherIntent = GRPCMethodDescriptor(
      name: "AddPublisherIntent",
      path: "/pubsub.v1.Msg/AddPublisherIntent",
      type: GRPCCallType.unary
    )

    internal static let removePublisherIntent = GRPCMethodDescriptor(
      name: "RemovePublisherIntent",
      path: "/pubsub.v1.Msg/RemovePublisherIntent",
      type: GRPCCallType.unary
    )

    internal static let addSubscriberIntent = GRPCMethodDescriptor(
      name: "AddSubscriberIntent",
      path: "/pubsub.v1.Msg/AddSubscriberIntent",
      type: GRPCCallType.unary
    )

    internal static let removeSubscriberIntent = GRPCMethodDescriptor(
      name: "RemoveSubscriberIntent",
      path: "/pubsub.v1.Msg/RemoveSubscriberIntent",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Pubsub_V1_MsgProvider: CallHandlerProvider {
  var interceptors: Pubsub_V1_MsgServerInterceptorFactoryProtocol? { get }

  func removePublisher(request: Pubsub_V1_MsgRemovePublisherRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pubsub_V1_MsgRemovePublisherResponse>

  func addSubscriber(request: Pubsub_V1_MsgAddSubscriberRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pubsub_V1_MsgAddSubscriberResponse>

  func removeSubscriber(request: Pubsub_V1_MsgRemoveSubscriberRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pubsub_V1_MsgRemoveSubscriberResponse>

  func addPublisherIntent(request: Pubsub_V1_MsgAddPublisherIntentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pubsub_V1_MsgAddPublisherIntentResponse>

  func removePublisherIntent(request: Pubsub_V1_MsgRemovePublisherIntentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pubsub_V1_MsgRemovePublisherIntentResponse>

  func addSubscriberIntent(request: Pubsub_V1_MsgAddSubscriberIntentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pubsub_V1_MsgAddSubscriberIntentResponse>

  func removeSubscriberIntent(request: Pubsub_V1_MsgRemoveSubscriberIntentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pubsub_V1_MsgRemoveSubscriberIntentResponse>
}

extension Pubsub_V1_MsgProvider {
  internal var serviceName: Substring {
    return Pubsub_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "RemovePublisher":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgRemovePublisherRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgRemovePublisherResponse>(),
        interceptors: self.interceptors?.makeRemovePublisherInterceptors() ?? [],
        userFunction: self.removePublisher(request:context:)
      )

    case "AddSubscriber":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgAddSubscriberRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgAddSubscriberResponse>(),
        interceptors: self.interceptors?.makeAddSubscriberInterceptors() ?? [],
        userFunction: self.addSubscriber(request:context:)
      )

    case "RemoveSubscriber":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgRemoveSubscriberRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgRemoveSubscriberResponse>(),
        interceptors: self.interceptors?.makeRemoveSubscriberInterceptors() ?? [],
        userFunction: self.removeSubscriber(request:context:)
      )

    case "AddPublisherIntent":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgAddPublisherIntentRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgAddPublisherIntentResponse>(),
        interceptors: self.interceptors?.makeAddPublisherIntentInterceptors() ?? [],
        userFunction: self.addPublisherIntent(request:context:)
      )

    case "RemovePublisherIntent":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgRemovePublisherIntentRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgRemovePublisherIntentResponse>(),
        interceptors: self.interceptors?.makeRemovePublisherIntentInterceptors() ?? [],
        userFunction: self.removePublisherIntent(request:context:)
      )

    case "AddSubscriberIntent":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgAddSubscriberIntentRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgAddSubscriberIntentResponse>(),
        interceptors: self.interceptors?.makeAddSubscriberIntentInterceptors() ?? [],
        userFunction: self.addSubscriberIntent(request:context:)
      )

    case "RemoveSubscriberIntent":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgRemoveSubscriberIntentRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgRemoveSubscriberIntentResponse>(),
        interceptors: self.interceptors?.makeRemoveSubscriberIntentInterceptors() ?? [],
        userFunction: self.removeSubscriberIntent(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Pubsub_V1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Pubsub_V1_MsgServerInterceptorFactoryProtocol? { get }

  @Sendable func removePublisher(
    request: Pubsub_V1_MsgRemovePublisherRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pubsub_V1_MsgRemovePublisherResponse

  @Sendable func addSubscriber(
    request: Pubsub_V1_MsgAddSubscriberRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pubsub_V1_MsgAddSubscriberResponse

  @Sendable func removeSubscriber(
    request: Pubsub_V1_MsgRemoveSubscriberRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pubsub_V1_MsgRemoveSubscriberResponse

  @Sendable func addPublisherIntent(
    request: Pubsub_V1_MsgAddPublisherIntentRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pubsub_V1_MsgAddPublisherIntentResponse

  @Sendable func removePublisherIntent(
    request: Pubsub_V1_MsgRemovePublisherIntentRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pubsub_V1_MsgRemovePublisherIntentResponse

  @Sendable func addSubscriberIntent(
    request: Pubsub_V1_MsgAddSubscriberIntentRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pubsub_V1_MsgAddSubscriberIntentResponse

  @Sendable func removeSubscriberIntent(
    request: Pubsub_V1_MsgRemoveSubscriberIntentRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pubsub_V1_MsgRemoveSubscriberIntentResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Pubsub_V1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Pubsub_V1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Pubsub_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Pubsub_V1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "RemovePublisher":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgRemovePublisherRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgRemovePublisherResponse>(),
        interceptors: self.interceptors?.makeRemovePublisherInterceptors() ?? [],
        wrapping: self.removePublisher(request:context:)
      )

    case "AddSubscriber":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgAddSubscriberRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgAddSubscriberResponse>(),
        interceptors: self.interceptors?.makeAddSubscriberInterceptors() ?? [],
        wrapping: self.addSubscriber(request:context:)
      )

    case "RemoveSubscriber":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgRemoveSubscriberRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgRemoveSubscriberResponse>(),
        interceptors: self.interceptors?.makeRemoveSubscriberInterceptors() ?? [],
        wrapping: self.removeSubscriber(request:context:)
      )

    case "AddPublisherIntent":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgAddPublisherIntentRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgAddPublisherIntentResponse>(),
        interceptors: self.interceptors?.makeAddPublisherIntentInterceptors() ?? [],
        wrapping: self.addPublisherIntent(request:context:)
      )

    case "RemovePublisherIntent":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgRemovePublisherIntentRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgRemovePublisherIntentResponse>(),
        interceptors: self.interceptors?.makeRemovePublisherIntentInterceptors() ?? [],
        wrapping: self.removePublisherIntent(request:context:)
      )

    case "AddSubscriberIntent":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgAddSubscriberIntentRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgAddSubscriberIntentResponse>(),
        interceptors: self.interceptors?.makeAddSubscriberIntentInterceptors() ?? [],
        wrapping: self.addSubscriberIntent(request:context:)
      )

    case "RemoveSubscriberIntent":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pubsub_V1_MsgRemoveSubscriberIntentRequest>(),
        responseSerializer: ProtobufSerializer<Pubsub_V1_MsgRemoveSubscriberIntentResponse>(),
        interceptors: self.interceptors?.makeRemoveSubscriberIntentInterceptors() ?? [],
        wrapping: self.removeSubscriberIntent(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Pubsub_V1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'removePublisher'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRemovePublisherInterceptors() -> [ServerInterceptor<Pubsub_V1_MsgRemovePublisherRequest, Pubsub_V1_MsgRemovePublisherResponse>]

  /// - Returns: Interceptors to use when handling 'addSubscriber'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddSubscriberInterceptors() -> [ServerInterceptor<Pubsub_V1_MsgAddSubscriberRequest, Pubsub_V1_MsgAddSubscriberResponse>]

  /// - Returns: Interceptors to use when handling 'removeSubscriber'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRemoveSubscriberInterceptors() -> [ServerInterceptor<Pubsub_V1_MsgRemoveSubscriberRequest, Pubsub_V1_MsgRemoveSubscriberResponse>]

  /// - Returns: Interceptors to use when handling 'addPublisherIntent'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddPublisherIntentInterceptors() -> [ServerInterceptor<Pubsub_V1_MsgAddPublisherIntentRequest, Pubsub_V1_MsgAddPublisherIntentResponse>]

  /// - Returns: Interceptors to use when handling 'removePublisherIntent'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRemovePublisherIntentInterceptors() -> [ServerInterceptor<Pubsub_V1_MsgRemovePublisherIntentRequest, Pubsub_V1_MsgRemovePublisherIntentResponse>]

  /// - Returns: Interceptors to use when handling 'addSubscriberIntent'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddSubscriberIntentInterceptors() -> [ServerInterceptor<Pubsub_V1_MsgAddSubscriberIntentRequest, Pubsub_V1_MsgAddSubscriberIntentResponse>]

  /// - Returns: Interceptors to use when handling 'removeSubscriberIntent'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRemoveSubscriberIntentInterceptors() -> [ServerInterceptor<Pubsub_V1_MsgRemoveSubscriberIntentRequest, Pubsub_V1_MsgRemoveSubscriberIntentResponse>]
}

internal enum Pubsub_V1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "pubsub.v1.Msg",
    methods: [
      Pubsub_V1_MsgServerMetadata.Methods.removePublisher,
      Pubsub_V1_MsgServerMetadata.Methods.addSubscriber,
      Pubsub_V1_MsgServerMetadata.Methods.removeSubscriber,
      Pubsub_V1_MsgServerMetadata.Methods.addPublisherIntent,
      Pubsub_V1_MsgServerMetadata.Methods.removePublisherIntent,
      Pubsub_V1_MsgServerMetadata.Methods.addSubscriberIntent,
      Pubsub_V1_MsgServerMetadata.Methods.removeSubscriberIntent,
    ]
  )

  internal enum Methods {
    internal static let removePublisher = GRPCMethodDescriptor(
      name: "RemovePublisher",
      path: "/pubsub.v1.Msg/RemovePublisher",
      type: GRPCCallType.unary
    )

    internal static let addSubscriber = GRPCMethodDescriptor(
      name: "AddSubscriber",
      path: "/pubsub.v1.Msg/AddSubscriber",
      type: GRPCCallType.unary
    )

    internal static let removeSubscriber = GRPCMethodDescriptor(
      name: "RemoveSubscriber",
      path: "/pubsub.v1.Msg/RemoveSubscriber",
      type: GRPCCallType.unary
    )

    internal static let addPublisherIntent = GRPCMethodDescriptor(
      name: "AddPublisherIntent",
      path: "/pubsub.v1.Msg/AddPublisherIntent",
      type: GRPCCallType.unary
    )

    internal static let removePublisherIntent = GRPCMethodDescriptor(
      name: "RemovePublisherIntent",
      path: "/pubsub.v1.Msg/RemovePublisherIntent",
      type: GRPCCallType.unary
    )

    internal static let addSubscriberIntent = GRPCMethodDescriptor(
      name: "AddSubscriberIntent",
      path: "/pubsub.v1.Msg/AddSubscriberIntent",
      type: GRPCCallType.unary
    )

    internal static let removeSubscriberIntent = GRPCMethodDescriptor(
      name: "RemoveSubscriberIntent",
      path: "/pubsub.v1.Msg/RemoveSubscriberIntent",
      type: GRPCCallType.unary
    )
  }
}

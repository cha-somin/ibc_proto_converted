//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: stafihub/rvalidator/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the Msg service.
///
/// Usage: instantiate `Stafihub_Stafihub_Rvalidator_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Stafihub_Stafihub_Rvalidator_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Stafihub_Stafihub_Rvalidator_MsgClientInterceptorFactoryProtocol? { get }

  func initRValidator(
    _ request: Stafihub_Stafihub_Rvalidator_MsgInitRValidator,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rvalidator_MsgInitRValidator, Stafihub_Stafihub_Rvalidator_MsgInitRValidatorResponse>

  func setCycleSeconds(
    _ request: Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds, Stafihub_Stafihub_Rvalidator_MsgSetCycleSecondsResponse>

  func setShuffleSeconds(
    _ request: Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds, Stafihub_Stafihub_Rvalidator_MsgSetShuffleSecondsResponse>

  func addRValidator(
    _ request: Stafihub_Stafihub_Rvalidator_MsgAddRValidator,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rvalidator_MsgAddRValidator, Stafihub_Stafihub_Rvalidator_MsgAddRValidatorResponse>

  func rmRValidator(
    _ request: Stafihub_Stafihub_Rvalidator_MsgRmRValidator,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rvalidator_MsgRmRValidator, Stafihub_Stafihub_Rvalidator_MsgRmRValidatorResponse>
}

extension Stafihub_Stafihub_Rvalidator_MsgClientProtocol {
  internal var serviceName: String {
    return "stafihub.stafihub.rvalidator.Msg"
  }

  /// Unary call to InitRValidator
  ///
  /// - Parameters:
  ///   - request: Request to send to InitRValidator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func initRValidator(
    _ request: Stafihub_Stafihub_Rvalidator_MsgInitRValidator,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rvalidator_MsgInitRValidator, Stafihub_Stafihub_Rvalidator_MsgInitRValidatorResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.initRValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInitRValidatorInterceptors() ?? []
    )
  }

  /// Unary call to SetCycleSeconds
  ///
  /// - Parameters:
  ///   - request: Request to send to SetCycleSeconds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setCycleSeconds(
    _ request: Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds, Stafihub_Stafihub_Rvalidator_MsgSetCycleSecondsResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.setCycleSeconds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetCycleSecondsInterceptors() ?? []
    )
  }

  /// Unary call to SetShuffleSeconds
  ///
  /// - Parameters:
  ///   - request: Request to send to SetShuffleSeconds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setShuffleSeconds(
    _ request: Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds, Stafihub_Stafihub_Rvalidator_MsgSetShuffleSecondsResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.setShuffleSeconds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetShuffleSecondsInterceptors() ?? []
    )
  }

  /// Unary call to AddRValidator
  ///
  /// - Parameters:
  ///   - request: Request to send to AddRValidator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addRValidator(
    _ request: Stafihub_Stafihub_Rvalidator_MsgAddRValidator,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rvalidator_MsgAddRValidator, Stafihub_Stafihub_Rvalidator_MsgAddRValidatorResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.addRValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRValidatorInterceptors() ?? []
    )
  }

  /// this line is used by starport scaffolding # proto/tx/rpc
  ///
  /// - Parameters:
  ///   - request: Request to send to RmRValidator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func rmRValidator(
    _ request: Stafihub_Stafihub_Rvalidator_MsgRmRValidator,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rvalidator_MsgRmRValidator, Stafihub_Stafihub_Rvalidator_MsgRmRValidatorResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.rmRValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmRValidatorInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Stafihub_Stafihub_Rvalidator_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Stafihub_Stafihub_Rvalidator_MsgNIOClient")
internal final class Stafihub_Stafihub_Rvalidator_MsgClient: Stafihub_Stafihub_Rvalidator_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Stafihub_Stafihub_Rvalidator_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Stafihub_Stafihub_Rvalidator_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the stafihub.stafihub.rvalidator.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Rvalidator_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Stafihub_Stafihub_Rvalidator_MsgNIOClient: Stafihub_Stafihub_Rvalidator_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stafihub_Stafihub_Rvalidator_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the stafihub.stafihub.rvalidator.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Rvalidator_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stafihub_Stafihub_Rvalidator_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stafihub_Stafihub_Rvalidator_MsgClientInterceptorFactoryProtocol? { get }

  func makeInitRvalidatorCall(
    _ request: Stafihub_Stafihub_Rvalidator_MsgInitRValidator,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rvalidator_MsgInitRValidator, Stafihub_Stafihub_Rvalidator_MsgInitRValidatorResponse>

  func makeSetCycleSecondsCall(
    _ request: Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds, Stafihub_Stafihub_Rvalidator_MsgSetCycleSecondsResponse>

  func makeSetShuffleSecondsCall(
    _ request: Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds, Stafihub_Stafihub_Rvalidator_MsgSetShuffleSecondsResponse>

  func makeAddRvalidatorCall(
    _ request: Stafihub_Stafihub_Rvalidator_MsgAddRValidator,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rvalidator_MsgAddRValidator, Stafihub_Stafihub_Rvalidator_MsgAddRValidatorResponse>

  func makeRmRvalidatorCall(
    _ request: Stafihub_Stafihub_Rvalidator_MsgRmRValidator,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rvalidator_MsgRmRValidator, Stafihub_Stafihub_Rvalidator_MsgRmRValidatorResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Rvalidator_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stafihub_Stafihub_Rvalidator_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Stafihub_Stafihub_Rvalidator_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeInitRvalidatorCall(
    _ request: Stafihub_Stafihub_Rvalidator_MsgInitRValidator,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rvalidator_MsgInitRValidator, Stafihub_Stafihub_Rvalidator_MsgInitRValidatorResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.initRValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInitRValidatorInterceptors() ?? []
    )
  }

  internal func makeSetCycleSecondsCall(
    _ request: Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds, Stafihub_Stafihub_Rvalidator_MsgSetCycleSecondsResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.setCycleSeconds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetCycleSecondsInterceptors() ?? []
    )
  }

  internal func makeSetShuffleSecondsCall(
    _ request: Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds, Stafihub_Stafihub_Rvalidator_MsgSetShuffleSecondsResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.setShuffleSeconds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetShuffleSecondsInterceptors() ?? []
    )
  }

  internal func makeAddRvalidatorCall(
    _ request: Stafihub_Stafihub_Rvalidator_MsgAddRValidator,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rvalidator_MsgAddRValidator, Stafihub_Stafihub_Rvalidator_MsgAddRValidatorResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.addRValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRValidatorInterceptors() ?? []
    )
  }

  internal func makeRmRvalidatorCall(
    _ request: Stafihub_Stafihub_Rvalidator_MsgRmRValidator,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rvalidator_MsgRmRValidator, Stafihub_Stafihub_Rvalidator_MsgRmRValidatorResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.rmRValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmRValidatorInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Rvalidator_MsgAsyncClientProtocol {
  internal func initRValidator(
    _ request: Stafihub_Stafihub_Rvalidator_MsgInitRValidator,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rvalidator_MsgInitRValidatorResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.initRValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInitRValidatorInterceptors() ?? []
    )
  }

  internal func setCycleSeconds(
    _ request: Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rvalidator_MsgSetCycleSecondsResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.setCycleSeconds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetCycleSecondsInterceptors() ?? []
    )
  }

  internal func setShuffleSeconds(
    _ request: Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rvalidator_MsgSetShuffleSecondsResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.setShuffleSeconds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetShuffleSecondsInterceptors() ?? []
    )
  }

  internal func addRValidator(
    _ request: Stafihub_Stafihub_Rvalidator_MsgAddRValidator,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rvalidator_MsgAddRValidatorResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.addRValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRValidatorInterceptors() ?? []
    )
  }

  internal func rmRValidator(
    _ request: Stafihub_Stafihub_Rvalidator_MsgRmRValidator,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rvalidator_MsgRmRValidatorResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.rmRValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmRValidatorInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Stafihub_Stafihub_Rvalidator_MsgAsyncClient: Stafihub_Stafihub_Rvalidator_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stafihub_Stafihub_Rvalidator_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Rvalidator_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Stafihub_Stafihub_Rvalidator_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'initRValidator'.
  func makeInitRValidatorInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rvalidator_MsgInitRValidator, Stafihub_Stafihub_Rvalidator_MsgInitRValidatorResponse>]

  /// - Returns: Interceptors to use when invoking 'setCycleSeconds'.
  func makeSetCycleSecondsInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds, Stafihub_Stafihub_Rvalidator_MsgSetCycleSecondsResponse>]

  /// - Returns: Interceptors to use when invoking 'setShuffleSeconds'.
  func makeSetShuffleSecondsInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds, Stafihub_Stafihub_Rvalidator_MsgSetShuffleSecondsResponse>]

  /// - Returns: Interceptors to use when invoking 'addRValidator'.
  func makeAddRValidatorInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rvalidator_MsgAddRValidator, Stafihub_Stafihub_Rvalidator_MsgAddRValidatorResponse>]

  /// - Returns: Interceptors to use when invoking 'rmRValidator'.
  func makeRmRValidatorInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rvalidator_MsgRmRValidator, Stafihub_Stafihub_Rvalidator_MsgRmRValidatorResponse>]
}

internal enum Stafihub_Stafihub_Rvalidator_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "stafihub.stafihub.rvalidator.Msg",
    methods: [
      Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.initRValidator,
      Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.setCycleSeconds,
      Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.setShuffleSeconds,
      Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.addRValidator,
      Stafihub_Stafihub_Rvalidator_MsgClientMetadata.Methods.rmRValidator,
    ]
  )

  internal enum Methods {
    internal static let initRValidator = GRPCMethodDescriptor(
      name: "InitRValidator",
      path: "/stafihub.stafihub.rvalidator.Msg/InitRValidator",
      type: GRPCCallType.unary
    )

    internal static let setCycleSeconds = GRPCMethodDescriptor(
      name: "SetCycleSeconds",
      path: "/stafihub.stafihub.rvalidator.Msg/SetCycleSeconds",
      type: GRPCCallType.unary
    )

    internal static let setShuffleSeconds = GRPCMethodDescriptor(
      name: "SetShuffleSeconds",
      path: "/stafihub.stafihub.rvalidator.Msg/SetShuffleSeconds",
      type: GRPCCallType.unary
    )

    internal static let addRValidator = GRPCMethodDescriptor(
      name: "AddRValidator",
      path: "/stafihub.stafihub.rvalidator.Msg/AddRValidator",
      type: GRPCCallType.unary
    )

    internal static let rmRValidator = GRPCMethodDescriptor(
      name: "RmRValidator",
      path: "/stafihub.stafihub.rvalidator.Msg/RmRValidator",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Stafihub_Stafihub_Rvalidator_MsgProvider: CallHandlerProvider {
  var interceptors: Stafihub_Stafihub_Rvalidator_MsgServerInterceptorFactoryProtocol? { get }

  func initRValidator(request: Stafihub_Stafihub_Rvalidator_MsgInitRValidator, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rvalidator_MsgInitRValidatorResponse>

  func setCycleSeconds(request: Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rvalidator_MsgSetCycleSecondsResponse>

  func setShuffleSeconds(request: Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rvalidator_MsgSetShuffleSecondsResponse>

  func addRValidator(request: Stafihub_Stafihub_Rvalidator_MsgAddRValidator, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rvalidator_MsgAddRValidatorResponse>

  /// this line is used by starport scaffolding # proto/tx/rpc
  func rmRValidator(request: Stafihub_Stafihub_Rvalidator_MsgRmRValidator, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rvalidator_MsgRmRValidatorResponse>
}

extension Stafihub_Stafihub_Rvalidator_MsgProvider {
  internal var serviceName: Substring {
    return Stafihub_Stafihub_Rvalidator_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "InitRValidator":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rvalidator_MsgInitRValidator>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rvalidator_MsgInitRValidatorResponse>(),
        interceptors: self.interceptors?.makeInitRValidatorInterceptors() ?? [],
        userFunction: self.initRValidator(request:context:)
      )

    case "SetCycleSeconds":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rvalidator_MsgSetCycleSecondsResponse>(),
        interceptors: self.interceptors?.makeSetCycleSecondsInterceptors() ?? [],
        userFunction: self.setCycleSeconds(request:context:)
      )

    case "SetShuffleSeconds":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rvalidator_MsgSetShuffleSecondsResponse>(),
        interceptors: self.interceptors?.makeSetShuffleSecondsInterceptors() ?? [],
        userFunction: self.setShuffleSeconds(request:context:)
      )

    case "AddRValidator":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rvalidator_MsgAddRValidator>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rvalidator_MsgAddRValidatorResponse>(),
        interceptors: self.interceptors?.makeAddRValidatorInterceptors() ?? [],
        userFunction: self.addRValidator(request:context:)
      )

    case "RmRValidator":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rvalidator_MsgRmRValidator>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rvalidator_MsgRmRValidatorResponse>(),
        interceptors: self.interceptors?.makeRmRValidatorInterceptors() ?? [],
        userFunction: self.rmRValidator(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stafihub_Stafihub_Rvalidator_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stafihub_Stafihub_Rvalidator_MsgServerInterceptorFactoryProtocol? { get }

  @Sendable func initRValidator(
    request: Stafihub_Stafihub_Rvalidator_MsgInitRValidator,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rvalidator_MsgInitRValidatorResponse

  @Sendable func setCycleSeconds(
    request: Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rvalidator_MsgSetCycleSecondsResponse

  @Sendable func setShuffleSeconds(
    request: Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rvalidator_MsgSetShuffleSecondsResponse

  @Sendable func addRValidator(
    request: Stafihub_Stafihub_Rvalidator_MsgAddRValidator,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rvalidator_MsgAddRValidatorResponse

  /// this line is used by starport scaffolding # proto/tx/rpc
  @Sendable func rmRValidator(
    request: Stafihub_Stafihub_Rvalidator_MsgRmRValidator,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rvalidator_MsgRmRValidatorResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Rvalidator_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stafihub_Stafihub_Rvalidator_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Stafihub_Stafihub_Rvalidator_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Stafihub_Stafihub_Rvalidator_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "InitRValidator":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rvalidator_MsgInitRValidator>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rvalidator_MsgInitRValidatorResponse>(),
        interceptors: self.interceptors?.makeInitRValidatorInterceptors() ?? [],
        wrapping: self.initRValidator(request:context:)
      )

    case "SetCycleSeconds":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rvalidator_MsgSetCycleSecondsResponse>(),
        interceptors: self.interceptors?.makeSetCycleSecondsInterceptors() ?? [],
        wrapping: self.setCycleSeconds(request:context:)
      )

    case "SetShuffleSeconds":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rvalidator_MsgSetShuffleSecondsResponse>(),
        interceptors: self.interceptors?.makeSetShuffleSecondsInterceptors() ?? [],
        wrapping: self.setShuffleSeconds(request:context:)
      )

    case "AddRValidator":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rvalidator_MsgAddRValidator>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rvalidator_MsgAddRValidatorResponse>(),
        interceptors: self.interceptors?.makeAddRValidatorInterceptors() ?? [],
        wrapping: self.addRValidator(request:context:)
      )

    case "RmRValidator":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rvalidator_MsgRmRValidator>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rvalidator_MsgRmRValidatorResponse>(),
        interceptors: self.interceptors?.makeRmRValidatorInterceptors() ?? [],
        wrapping: self.rmRValidator(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Stafihub_Stafihub_Rvalidator_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'initRValidator'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInitRValidatorInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rvalidator_MsgInitRValidator, Stafihub_Stafihub_Rvalidator_MsgInitRValidatorResponse>]

  /// - Returns: Interceptors to use when handling 'setCycleSeconds'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetCycleSecondsInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rvalidator_MsgSetCycleSeconds, Stafihub_Stafihub_Rvalidator_MsgSetCycleSecondsResponse>]

  /// - Returns: Interceptors to use when handling 'setShuffleSeconds'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetShuffleSecondsInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rvalidator_MsgSetShuffleSeconds, Stafihub_Stafihub_Rvalidator_MsgSetShuffleSecondsResponse>]

  /// - Returns: Interceptors to use when handling 'addRValidator'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddRValidatorInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rvalidator_MsgAddRValidator, Stafihub_Stafihub_Rvalidator_MsgAddRValidatorResponse>]

  /// - Returns: Interceptors to use when handling 'rmRValidator'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRmRValidatorInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rvalidator_MsgRmRValidator, Stafihub_Stafihub_Rvalidator_MsgRmRValidatorResponse>]
}

internal enum Stafihub_Stafihub_Rvalidator_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "stafihub.stafihub.rvalidator.Msg",
    methods: [
      Stafihub_Stafihub_Rvalidator_MsgServerMetadata.Methods.initRValidator,
      Stafihub_Stafihub_Rvalidator_MsgServerMetadata.Methods.setCycleSeconds,
      Stafihub_Stafihub_Rvalidator_MsgServerMetadata.Methods.setShuffleSeconds,
      Stafihub_Stafihub_Rvalidator_MsgServerMetadata.Methods.addRValidator,
      Stafihub_Stafihub_Rvalidator_MsgServerMetadata.Methods.rmRValidator,
    ]
  )

  internal enum Methods {
    internal static let initRValidator = GRPCMethodDescriptor(
      name: "InitRValidator",
      path: "/stafihub.stafihub.rvalidator.Msg/InitRValidator",
      type: GRPCCallType.unary
    )

    internal static let setCycleSeconds = GRPCMethodDescriptor(
      name: "SetCycleSeconds",
      path: "/stafihub.stafihub.rvalidator.Msg/SetCycleSeconds",
      type: GRPCCallType.unary
    )

    internal static let setShuffleSeconds = GRPCMethodDescriptor(
      name: "SetShuffleSeconds",
      path: "/stafihub.stafihub.rvalidator.Msg/SetShuffleSeconds",
      type: GRPCCallType.unary
    )

    internal static let addRValidator = GRPCMethodDescriptor(
      name: "AddRValidator",
      path: "/stafihub.stafihub.rvalidator.Msg/AddRValidator",
      type: GRPCCallType.unary
    )

    internal static let rmRValidator = GRPCMethodDescriptor(
      name: "RmRValidator",
      path: "/stafihub.stafihub.rvalidator.Msg/RmRValidator",
      type: GRPCCallType.unary
    )
  }
}

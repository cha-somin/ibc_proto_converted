//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: stafihub/bridge/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Query defines the gRPC querier service.
///
/// Usage: instantiate `Stafihub_Stafihub_Bridge_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Stafihub_Stafihub_Bridge_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Stafihub_Stafihub_Bridge_QueryClientInterceptorFactoryProtocol? { get }

  func params(
    _ request: Stafihub_Stafihub_Bridge_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryParamsRequest, Stafihub_Stafihub_Bridge_QueryParamsResponse>

  func chaindIds(
    _ request: Stafihub_Stafihub_Bridge_QueryChaindIdsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryChaindIdsRequest, Stafihub_Stafihub_Bridge_QueryChaindIdsResponse>

  func proposalDetail(
    _ request: Stafihub_Stafihub_Bridge_QueryProposalDetailRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryProposalDetailRequest, Stafihub_Stafihub_Bridge_QueryProposalDetailResponse>

  func resourceidToDenoms(
    _ request: Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest, Stafihub_Stafihub_Bridge_QueryResourceidToDenomsResponse>

  func relayFeeReceiver(
    _ request: Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest, Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverResponse>

  func relayFee(
    _ request: Stafihub_Stafihub_Bridge_QueryRelayFeeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryRelayFeeRequest, Stafihub_Stafihub_Bridge_QueryRelayFeeResponse>

  func bannedDenomList(
    _ request: Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest, Stafihub_Stafihub_Bridge_QueryBannedDenomListResponse>

  func getDepositCount(
    _ request: Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest, Stafihub_Stafihub_Bridge_QueryGetDepositCountResponse>
}

extension Stafihub_Stafihub_Bridge_QueryClientProtocol {
  internal var serviceName: String {
    return "stafihub.stafihub.bridge.Query"
  }

  /// Parameters queries the parameters of the module.
  ///
  /// - Parameters:
  ///   - request: Request to send to Params.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func params(
    _ request: Stafihub_Stafihub_Bridge_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryParamsRequest, Stafihub_Stafihub_Bridge_QueryParamsResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  /// Queries a list of ChaindIds items.
  ///
  /// - Parameters:
  ///   - request: Request to send to ChaindIds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func chaindIds(
    _ request: Stafihub_Stafihub_Bridge_QueryChaindIdsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryChaindIdsRequest, Stafihub_Stafihub_Bridge_QueryChaindIdsResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.chaindIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChaindIdsInterceptors() ?? []
    )
  }

  /// Queries a list of ProposalDetail items.
  ///
  /// - Parameters:
  ///   - request: Request to send to ProposalDetail.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func proposalDetail(
    _ request: Stafihub_Stafihub_Bridge_QueryProposalDetailRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryProposalDetailRequest, Stafihub_Stafihub_Bridge_QueryProposalDetailResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.proposalDetail.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProposalDetailInterceptors() ?? []
    )
  }

  /// Queries a list of ResourceidToDenoms items.
  ///
  /// - Parameters:
  ///   - request: Request to send to ResourceidToDenoms.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func resourceidToDenoms(
    _ request: Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest, Stafihub_Stafihub_Bridge_QueryResourceidToDenomsResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.resourceidToDenoms.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResourceidToDenomsInterceptors() ?? []
    )
  }

  /// Queries a list of RelayFeeReceiver items.
  ///
  /// - Parameters:
  ///   - request: Request to send to RelayFeeReceiver.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func relayFeeReceiver(
    _ request: Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest, Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.relayFeeReceiver.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRelayFeeReceiverInterceptors() ?? []
    )
  }

  /// Queries a list of RelayFee items.
  ///
  /// - Parameters:
  ///   - request: Request to send to RelayFee.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func relayFee(
    _ request: Stafihub_Stafihub_Bridge_QueryRelayFeeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryRelayFeeRequest, Stafihub_Stafihub_Bridge_QueryRelayFeeResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.relayFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRelayFeeInterceptors() ?? []
    )
  }

  /// Queries a list of BannedDenomList items.
  ///
  /// - Parameters:
  ///   - request: Request to send to BannedDenomList.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func bannedDenomList(
    _ request: Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest, Stafihub_Stafihub_Bridge_QueryBannedDenomListResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.bannedDenomList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBannedDenomListInterceptors() ?? []
    )
  }

  /// Queries a list of GetDepositCount items.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDepositCount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getDepositCount(
    _ request: Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest, Stafihub_Stafihub_Bridge_QueryGetDepositCountResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.getDepositCount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDepositCountInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Stafihub_Stafihub_Bridge_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Stafihub_Stafihub_Bridge_QueryNIOClient")
internal final class Stafihub_Stafihub_Bridge_QueryClient: Stafihub_Stafihub_Bridge_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Stafihub_Stafihub_Bridge_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Stafihub_Stafihub_Bridge_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the stafihub.stafihub.bridge.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Bridge_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Stafihub_Stafihub_Bridge_QueryNIOClient: Stafihub_Stafihub_Bridge_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stafihub_Stafihub_Bridge_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the stafihub.stafihub.bridge.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Bridge_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Query defines the gRPC querier service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stafihub_Stafihub_Bridge_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stafihub_Stafihub_Bridge_QueryClientInterceptorFactoryProtocol? { get }

  func makeParamsCall(
    _ request: Stafihub_Stafihub_Bridge_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryParamsRequest, Stafihub_Stafihub_Bridge_QueryParamsResponse>

  func makeChaindIdsCall(
    _ request: Stafihub_Stafihub_Bridge_QueryChaindIdsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryChaindIdsRequest, Stafihub_Stafihub_Bridge_QueryChaindIdsResponse>

  func makeProposalDetailCall(
    _ request: Stafihub_Stafihub_Bridge_QueryProposalDetailRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryProposalDetailRequest, Stafihub_Stafihub_Bridge_QueryProposalDetailResponse>

  func makeResourceidToDenomsCall(
    _ request: Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest, Stafihub_Stafihub_Bridge_QueryResourceidToDenomsResponse>

  func makeRelayFeeReceiverCall(
    _ request: Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest, Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverResponse>

  func makeRelayFeeCall(
    _ request: Stafihub_Stafihub_Bridge_QueryRelayFeeRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryRelayFeeRequest, Stafihub_Stafihub_Bridge_QueryRelayFeeResponse>

  func makeBannedDenomListCall(
    _ request: Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest, Stafihub_Stafihub_Bridge_QueryBannedDenomListResponse>

  func makeGetDepositCountCall(
    _ request: Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest, Stafihub_Stafihub_Bridge_QueryGetDepositCountResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Bridge_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stafihub_Stafihub_Bridge_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Stafihub_Stafihub_Bridge_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeParamsCall(
    _ request: Stafihub_Stafihub_Bridge_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryParamsRequest, Stafihub_Stafihub_Bridge_QueryParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func makeChaindIdsCall(
    _ request: Stafihub_Stafihub_Bridge_QueryChaindIdsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryChaindIdsRequest, Stafihub_Stafihub_Bridge_QueryChaindIdsResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.chaindIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChaindIdsInterceptors() ?? []
    )
  }

  internal func makeProposalDetailCall(
    _ request: Stafihub_Stafihub_Bridge_QueryProposalDetailRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryProposalDetailRequest, Stafihub_Stafihub_Bridge_QueryProposalDetailResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.proposalDetail.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProposalDetailInterceptors() ?? []
    )
  }

  internal func makeResourceidToDenomsCall(
    _ request: Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest, Stafihub_Stafihub_Bridge_QueryResourceidToDenomsResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.resourceidToDenoms.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResourceidToDenomsInterceptors() ?? []
    )
  }

  internal func makeRelayFeeReceiverCall(
    _ request: Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest, Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.relayFeeReceiver.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRelayFeeReceiverInterceptors() ?? []
    )
  }

  internal func makeRelayFeeCall(
    _ request: Stafihub_Stafihub_Bridge_QueryRelayFeeRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryRelayFeeRequest, Stafihub_Stafihub_Bridge_QueryRelayFeeResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.relayFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRelayFeeInterceptors() ?? []
    )
  }

  internal func makeBannedDenomListCall(
    _ request: Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest, Stafihub_Stafihub_Bridge_QueryBannedDenomListResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.bannedDenomList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBannedDenomListInterceptors() ?? []
    )
  }

  internal func makeGetDepositCountCall(
    _ request: Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest, Stafihub_Stafihub_Bridge_QueryGetDepositCountResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.getDepositCount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDepositCountInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Bridge_QueryAsyncClientProtocol {
  internal func params(
    _ request: Stafihub_Stafihub_Bridge_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_QueryParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func chaindIds(
    _ request: Stafihub_Stafihub_Bridge_QueryChaindIdsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_QueryChaindIdsResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.chaindIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChaindIdsInterceptors() ?? []
    )
  }

  internal func proposalDetail(
    _ request: Stafihub_Stafihub_Bridge_QueryProposalDetailRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_QueryProposalDetailResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.proposalDetail.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProposalDetailInterceptors() ?? []
    )
  }

  internal func resourceidToDenoms(
    _ request: Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_QueryResourceidToDenomsResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.resourceidToDenoms.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResourceidToDenomsInterceptors() ?? []
    )
  }

  internal func relayFeeReceiver(
    _ request: Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.relayFeeReceiver.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRelayFeeReceiverInterceptors() ?? []
    )
  }

  internal func relayFee(
    _ request: Stafihub_Stafihub_Bridge_QueryRelayFeeRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_QueryRelayFeeResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.relayFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRelayFeeInterceptors() ?? []
    )
  }

  internal func bannedDenomList(
    _ request: Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_QueryBannedDenomListResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.bannedDenomList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBannedDenomListInterceptors() ?? []
    )
  }

  internal func getDepositCount(
    _ request: Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_QueryGetDepositCountResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.getDepositCount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDepositCountInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Stafihub_Stafihub_Bridge_QueryAsyncClient: Stafihub_Stafihub_Bridge_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stafihub_Stafihub_Bridge_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Bridge_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Stafihub_Stafihub_Bridge_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'params'.
  func makeParamsInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_QueryParamsRequest, Stafihub_Stafihub_Bridge_QueryParamsResponse>]

  /// - Returns: Interceptors to use when invoking 'chaindIds'.
  func makeChaindIdsInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_QueryChaindIdsRequest, Stafihub_Stafihub_Bridge_QueryChaindIdsResponse>]

  /// - Returns: Interceptors to use when invoking 'proposalDetail'.
  func makeProposalDetailInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_QueryProposalDetailRequest, Stafihub_Stafihub_Bridge_QueryProposalDetailResponse>]

  /// - Returns: Interceptors to use when invoking 'resourceidToDenoms'.
  func makeResourceidToDenomsInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest, Stafihub_Stafihub_Bridge_QueryResourceidToDenomsResponse>]

  /// - Returns: Interceptors to use when invoking 'relayFeeReceiver'.
  func makeRelayFeeReceiverInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest, Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverResponse>]

  /// - Returns: Interceptors to use when invoking 'relayFee'.
  func makeRelayFeeInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_QueryRelayFeeRequest, Stafihub_Stafihub_Bridge_QueryRelayFeeResponse>]

  /// - Returns: Interceptors to use when invoking 'bannedDenomList'.
  func makeBannedDenomListInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest, Stafihub_Stafihub_Bridge_QueryBannedDenomListResponse>]

  /// - Returns: Interceptors to use when invoking 'getDepositCount'.
  func makeGetDepositCountInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest, Stafihub_Stafihub_Bridge_QueryGetDepositCountResponse>]
}

internal enum Stafihub_Stafihub_Bridge_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "stafihub.stafihub.bridge.Query",
    methods: [
      Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.params,
      Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.chaindIds,
      Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.proposalDetail,
      Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.resourceidToDenoms,
      Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.relayFeeReceiver,
      Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.relayFee,
      Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.bannedDenomList,
      Stafihub_Stafihub_Bridge_QueryClientMetadata.Methods.getDepositCount,
    ]
  )

  internal enum Methods {
    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/stafihub.stafihub.bridge.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let chaindIds = GRPCMethodDescriptor(
      name: "ChaindIds",
      path: "/stafihub.stafihub.bridge.Query/ChaindIds",
      type: GRPCCallType.unary
    )

    internal static let proposalDetail = GRPCMethodDescriptor(
      name: "ProposalDetail",
      path: "/stafihub.stafihub.bridge.Query/ProposalDetail",
      type: GRPCCallType.unary
    )

    internal static let resourceidToDenoms = GRPCMethodDescriptor(
      name: "ResourceidToDenoms",
      path: "/stafihub.stafihub.bridge.Query/ResourceidToDenoms",
      type: GRPCCallType.unary
    )

    internal static let relayFeeReceiver = GRPCMethodDescriptor(
      name: "RelayFeeReceiver",
      path: "/stafihub.stafihub.bridge.Query/RelayFeeReceiver",
      type: GRPCCallType.unary
    )

    internal static let relayFee = GRPCMethodDescriptor(
      name: "RelayFee",
      path: "/stafihub.stafihub.bridge.Query/RelayFee",
      type: GRPCCallType.unary
    )

    internal static let bannedDenomList = GRPCMethodDescriptor(
      name: "BannedDenomList",
      path: "/stafihub.stafihub.bridge.Query/BannedDenomList",
      type: GRPCCallType.unary
    )

    internal static let getDepositCount = GRPCMethodDescriptor(
      name: "GetDepositCount",
      path: "/stafihub.stafihub.bridge.Query/GetDepositCount",
      type: GRPCCallType.unary
    )
  }
}

/// Query defines the gRPC querier service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Stafihub_Stafihub_Bridge_QueryProvider: CallHandlerProvider {
  var interceptors: Stafihub_Stafihub_Bridge_QueryServerInterceptorFactoryProtocol? { get }

  /// Parameters queries the parameters of the module.
  func params(request: Stafihub_Stafihub_Bridge_QueryParamsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_QueryParamsResponse>

  /// Queries a list of ChaindIds items.
  func chaindIds(request: Stafihub_Stafihub_Bridge_QueryChaindIdsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_QueryChaindIdsResponse>

  /// Queries a list of ProposalDetail items.
  func proposalDetail(request: Stafihub_Stafihub_Bridge_QueryProposalDetailRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_QueryProposalDetailResponse>

  /// Queries a list of ResourceidToDenoms items.
  func resourceidToDenoms(request: Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_QueryResourceidToDenomsResponse>

  /// Queries a list of RelayFeeReceiver items.
  func relayFeeReceiver(request: Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverResponse>

  /// Queries a list of RelayFee items.
  func relayFee(request: Stafihub_Stafihub_Bridge_QueryRelayFeeRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_QueryRelayFeeResponse>

  /// Queries a list of BannedDenomList items.
  func bannedDenomList(request: Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_QueryBannedDenomListResponse>

  /// Queries a list of GetDepositCount items.
  func getDepositCount(request: Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_QueryGetDepositCountResponse>
}

extension Stafihub_Stafihub_Bridge_QueryProvider {
  internal var serviceName: Substring {
    return Stafihub_Stafihub_Bridge_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Params":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        userFunction: self.params(request:context:)
      )

    case "ChaindIds":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryChaindIdsRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryChaindIdsResponse>(),
        interceptors: self.interceptors?.makeChaindIdsInterceptors() ?? [],
        userFunction: self.chaindIds(request:context:)
      )

    case "ProposalDetail":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryProposalDetailRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryProposalDetailResponse>(),
        interceptors: self.interceptors?.makeProposalDetailInterceptors() ?? [],
        userFunction: self.proposalDetail(request:context:)
      )

    case "ResourceidToDenoms":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryResourceidToDenomsResponse>(),
        interceptors: self.interceptors?.makeResourceidToDenomsInterceptors() ?? [],
        userFunction: self.resourceidToDenoms(request:context:)
      )

    case "RelayFeeReceiver":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverResponse>(),
        interceptors: self.interceptors?.makeRelayFeeReceiverInterceptors() ?? [],
        userFunction: self.relayFeeReceiver(request:context:)
      )

    case "RelayFee":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryRelayFeeRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryRelayFeeResponse>(),
        interceptors: self.interceptors?.makeRelayFeeInterceptors() ?? [],
        userFunction: self.relayFee(request:context:)
      )

    case "BannedDenomList":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryBannedDenomListResponse>(),
        interceptors: self.interceptors?.makeBannedDenomListInterceptors() ?? [],
        userFunction: self.bannedDenomList(request:context:)
      )

    case "GetDepositCount":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryGetDepositCountResponse>(),
        interceptors: self.interceptors?.makeGetDepositCountInterceptors() ?? [],
        userFunction: self.getDepositCount(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Query defines the gRPC querier service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stafihub_Stafihub_Bridge_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stafihub_Stafihub_Bridge_QueryServerInterceptorFactoryProtocol? { get }

  /// Parameters queries the parameters of the module.
  @Sendable func params(
    request: Stafihub_Stafihub_Bridge_QueryParamsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_QueryParamsResponse

  /// Queries a list of ChaindIds items.
  @Sendable func chaindIds(
    request: Stafihub_Stafihub_Bridge_QueryChaindIdsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_QueryChaindIdsResponse

  /// Queries a list of ProposalDetail items.
  @Sendable func proposalDetail(
    request: Stafihub_Stafihub_Bridge_QueryProposalDetailRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_QueryProposalDetailResponse

  /// Queries a list of ResourceidToDenoms items.
  @Sendable func resourceidToDenoms(
    request: Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_QueryResourceidToDenomsResponse

  /// Queries a list of RelayFeeReceiver items.
  @Sendable func relayFeeReceiver(
    request: Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverResponse

  /// Queries a list of RelayFee items.
  @Sendable func relayFee(
    request: Stafihub_Stafihub_Bridge_QueryRelayFeeRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_QueryRelayFeeResponse

  /// Queries a list of BannedDenomList items.
  @Sendable func bannedDenomList(
    request: Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_QueryBannedDenomListResponse

  /// Queries a list of GetDepositCount items.
  @Sendable func getDepositCount(
    request: Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_QueryGetDepositCountResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Bridge_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stafihub_Stafihub_Bridge_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Stafihub_Stafihub_Bridge_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Stafihub_Stafihub_Bridge_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Params":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        wrapping: self.params(request:context:)
      )

    case "ChaindIds":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryChaindIdsRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryChaindIdsResponse>(),
        interceptors: self.interceptors?.makeChaindIdsInterceptors() ?? [],
        wrapping: self.chaindIds(request:context:)
      )

    case "ProposalDetail":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryProposalDetailRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryProposalDetailResponse>(),
        interceptors: self.interceptors?.makeProposalDetailInterceptors() ?? [],
        wrapping: self.proposalDetail(request:context:)
      )

    case "ResourceidToDenoms":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryResourceidToDenomsResponse>(),
        interceptors: self.interceptors?.makeResourceidToDenomsInterceptors() ?? [],
        wrapping: self.resourceidToDenoms(request:context:)
      )

    case "RelayFeeReceiver":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverResponse>(),
        interceptors: self.interceptors?.makeRelayFeeReceiverInterceptors() ?? [],
        wrapping: self.relayFeeReceiver(request:context:)
      )

    case "RelayFee":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryRelayFeeRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryRelayFeeResponse>(),
        interceptors: self.interceptors?.makeRelayFeeInterceptors() ?? [],
        wrapping: self.relayFee(request:context:)
      )

    case "BannedDenomList":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryBannedDenomListResponse>(),
        interceptors: self.interceptors?.makeBannedDenomListInterceptors() ?? [],
        wrapping: self.bannedDenomList(request:context:)
      )

    case "GetDepositCount":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_QueryGetDepositCountResponse>(),
        interceptors: self.interceptors?.makeGetDepositCountInterceptors() ?? [],
        wrapping: self.getDepositCount(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Stafihub_Stafihub_Bridge_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'params'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeParamsInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_QueryParamsRequest, Stafihub_Stafihub_Bridge_QueryParamsResponse>]

  /// - Returns: Interceptors to use when handling 'chaindIds'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeChaindIdsInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_QueryChaindIdsRequest, Stafihub_Stafihub_Bridge_QueryChaindIdsResponse>]

  /// - Returns: Interceptors to use when handling 'proposalDetail'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeProposalDetailInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_QueryProposalDetailRequest, Stafihub_Stafihub_Bridge_QueryProposalDetailResponse>]

  /// - Returns: Interceptors to use when handling 'resourceidToDenoms'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeResourceidToDenomsInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_QueryResourceidToDenomsRequest, Stafihub_Stafihub_Bridge_QueryResourceidToDenomsResponse>]

  /// - Returns: Interceptors to use when handling 'relayFeeReceiver'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRelayFeeReceiverInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverRequest, Stafihub_Stafihub_Bridge_QueryRelayFeeReceiverResponse>]

  /// - Returns: Interceptors to use when handling 'relayFee'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRelayFeeInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_QueryRelayFeeRequest, Stafihub_Stafihub_Bridge_QueryRelayFeeResponse>]

  /// - Returns: Interceptors to use when handling 'bannedDenomList'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBannedDenomListInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_QueryBannedDenomListRequest, Stafihub_Stafihub_Bridge_QueryBannedDenomListResponse>]

  /// - Returns: Interceptors to use when handling 'getDepositCount'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetDepositCountInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_QueryGetDepositCountRequest, Stafihub_Stafihub_Bridge_QueryGetDepositCountResponse>]
}

internal enum Stafihub_Stafihub_Bridge_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "stafihub.stafihub.bridge.Query",
    methods: [
      Stafihub_Stafihub_Bridge_QueryServerMetadata.Methods.params,
      Stafihub_Stafihub_Bridge_QueryServerMetadata.Methods.chaindIds,
      Stafihub_Stafihub_Bridge_QueryServerMetadata.Methods.proposalDetail,
      Stafihub_Stafihub_Bridge_QueryServerMetadata.Methods.resourceidToDenoms,
      Stafihub_Stafihub_Bridge_QueryServerMetadata.Methods.relayFeeReceiver,
      Stafihub_Stafihub_Bridge_QueryServerMetadata.Methods.relayFee,
      Stafihub_Stafihub_Bridge_QueryServerMetadata.Methods.bannedDenomList,
      Stafihub_Stafihub_Bridge_QueryServerMetadata.Methods.getDepositCount,
    ]
  )

  internal enum Methods {
    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/stafihub.stafihub.bridge.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let chaindIds = GRPCMethodDescriptor(
      name: "ChaindIds",
      path: "/stafihub.stafihub.bridge.Query/ChaindIds",
      type: GRPCCallType.unary
    )

    internal static let proposalDetail = GRPCMethodDescriptor(
      name: "ProposalDetail",
      path: "/stafihub.stafihub.bridge.Query/ProposalDetail",
      type: GRPCCallType.unary
    )

    internal static let resourceidToDenoms = GRPCMethodDescriptor(
      name: "ResourceidToDenoms",
      path: "/stafihub.stafihub.bridge.Query/ResourceidToDenoms",
      type: GRPCCallType.unary
    )

    internal static let relayFeeReceiver = GRPCMethodDescriptor(
      name: "RelayFeeReceiver",
      path: "/stafihub.stafihub.bridge.Query/RelayFeeReceiver",
      type: GRPCCallType.unary
    )

    internal static let relayFee = GRPCMethodDescriptor(
      name: "RelayFee",
      path: "/stafihub.stafihub.bridge.Query/RelayFee",
      type: GRPCCallType.unary
    )

    internal static let bannedDenomList = GRPCMethodDescriptor(
      name: "BannedDenomList",
      path: "/stafihub.stafihub.bridge.Query/BannedDenomList",
      type: GRPCCallType.unary
    )

    internal static let getDepositCount = GRPCMethodDescriptor(
      name: "GetDepositCount",
      path: "/stafihub.stafihub.bridge.Query/GetDepositCount",
      type: GRPCCallType.unary
    )
  }
}

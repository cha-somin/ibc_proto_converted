//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: teritori/mint/v1beta1/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Query provides defines the gRPC querier service.
///
/// Usage: instantiate `Teritori_Mint_V1beta1_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Teritori_Mint_V1beta1_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Teritori_Mint_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func params(
    _ request: Teritori_Mint_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Teritori_Mint_V1beta1_QueryParamsRequest, Teritori_Mint_V1beta1_QueryParamsResponse>

  func blockProvisions(
    _ request: Teritori_Mint_V1beta1_QueryBlockProvisionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Teritori_Mint_V1beta1_QueryBlockProvisionsRequest, Teritori_Mint_V1beta1_QueryBlockProvisionsResponse>
}

extension Teritori_Mint_V1beta1_QueryClientProtocol {
  internal var serviceName: String {
    return "teritori.mint.v1beta1.Query"
  }

  /// Params returns the total set of minting parameters.
  ///
  /// - Parameters:
  ///   - request: Request to send to Params.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func params(
    _ request: Teritori_Mint_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Teritori_Mint_V1beta1_QueryParamsRequest, Teritori_Mint_V1beta1_QueryParamsResponse> {
    return self.makeUnaryCall(
      path: Teritori_Mint_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  /// BlockProvisions current minting epoch provisions value.
  ///
  /// - Parameters:
  ///   - request: Request to send to BlockProvisions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func blockProvisions(
    _ request: Teritori_Mint_V1beta1_QueryBlockProvisionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Teritori_Mint_V1beta1_QueryBlockProvisionsRequest, Teritori_Mint_V1beta1_QueryBlockProvisionsResponse> {
    return self.makeUnaryCall(
      path: Teritori_Mint_V1beta1_QueryClientMetadata.Methods.blockProvisions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBlockProvisionsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Teritori_Mint_V1beta1_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Teritori_Mint_V1beta1_QueryNIOClient")
internal final class Teritori_Mint_V1beta1_QueryClient: Teritori_Mint_V1beta1_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Teritori_Mint_V1beta1_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Teritori_Mint_V1beta1_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the teritori.mint.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Teritori_Mint_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Teritori_Mint_V1beta1_QueryNIOClient: Teritori_Mint_V1beta1_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Teritori_Mint_V1beta1_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the teritori.mint.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Teritori_Mint_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Query provides defines the gRPC querier service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Teritori_Mint_V1beta1_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Teritori_Mint_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func makeParamsCall(
    _ request: Teritori_Mint_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Teritori_Mint_V1beta1_QueryParamsRequest, Teritori_Mint_V1beta1_QueryParamsResponse>

  func makeBlockProvisionsCall(
    _ request: Teritori_Mint_V1beta1_QueryBlockProvisionsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Teritori_Mint_V1beta1_QueryBlockProvisionsRequest, Teritori_Mint_V1beta1_QueryBlockProvisionsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Teritori_Mint_V1beta1_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Teritori_Mint_V1beta1_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Teritori_Mint_V1beta1_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeParamsCall(
    _ request: Teritori_Mint_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Teritori_Mint_V1beta1_QueryParamsRequest, Teritori_Mint_V1beta1_QueryParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Teritori_Mint_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func makeBlockProvisionsCall(
    _ request: Teritori_Mint_V1beta1_QueryBlockProvisionsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Teritori_Mint_V1beta1_QueryBlockProvisionsRequest, Teritori_Mint_V1beta1_QueryBlockProvisionsResponse> {
    return self.makeAsyncUnaryCall(
      path: Teritori_Mint_V1beta1_QueryClientMetadata.Methods.blockProvisions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBlockProvisionsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Teritori_Mint_V1beta1_QueryAsyncClientProtocol {
  internal func params(
    _ request: Teritori_Mint_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Teritori_Mint_V1beta1_QueryParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Teritori_Mint_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func blockProvisions(
    _ request: Teritori_Mint_V1beta1_QueryBlockProvisionsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Teritori_Mint_V1beta1_QueryBlockProvisionsResponse {
    return try await self.performAsyncUnaryCall(
      path: Teritori_Mint_V1beta1_QueryClientMetadata.Methods.blockProvisions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBlockProvisionsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Teritori_Mint_V1beta1_QueryAsyncClient: Teritori_Mint_V1beta1_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Teritori_Mint_V1beta1_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Teritori_Mint_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Teritori_Mint_V1beta1_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'params'.
  func makeParamsInterceptors() -> [ClientInterceptor<Teritori_Mint_V1beta1_QueryParamsRequest, Teritori_Mint_V1beta1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when invoking 'blockProvisions'.
  func makeBlockProvisionsInterceptors() -> [ClientInterceptor<Teritori_Mint_V1beta1_QueryBlockProvisionsRequest, Teritori_Mint_V1beta1_QueryBlockProvisionsResponse>]
}

internal enum Teritori_Mint_V1beta1_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "teritori.mint.v1beta1.Query",
    methods: [
      Teritori_Mint_V1beta1_QueryClientMetadata.Methods.params,
      Teritori_Mint_V1beta1_QueryClientMetadata.Methods.blockProvisions,
    ]
  )

  internal enum Methods {
    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/teritori.mint.v1beta1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let blockProvisions = GRPCMethodDescriptor(
      name: "BlockProvisions",
      path: "/teritori.mint.v1beta1.Query/BlockProvisions",
      type: GRPCCallType.unary
    )
  }
}

/// Query provides defines the gRPC querier service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Teritori_Mint_V1beta1_QueryProvider: CallHandlerProvider {
  var interceptors: Teritori_Mint_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  /// Params returns the total set of minting parameters.
  func params(request: Teritori_Mint_V1beta1_QueryParamsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Teritori_Mint_V1beta1_QueryParamsResponse>

  /// BlockProvisions current minting epoch provisions value.
  func blockProvisions(request: Teritori_Mint_V1beta1_QueryBlockProvisionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Teritori_Mint_V1beta1_QueryBlockProvisionsResponse>
}

extension Teritori_Mint_V1beta1_QueryProvider {
  internal var serviceName: Substring {
    return Teritori_Mint_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Params":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Teritori_Mint_V1beta1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Teritori_Mint_V1beta1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        userFunction: self.params(request:context:)
      )

    case "BlockProvisions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Teritori_Mint_V1beta1_QueryBlockProvisionsRequest>(),
        responseSerializer: ProtobufSerializer<Teritori_Mint_V1beta1_QueryBlockProvisionsResponse>(),
        interceptors: self.interceptors?.makeBlockProvisionsInterceptors() ?? [],
        userFunction: self.blockProvisions(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Query provides defines the gRPC querier service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Teritori_Mint_V1beta1_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Teritori_Mint_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  /// Params returns the total set of minting parameters.
  @Sendable func params(
    request: Teritori_Mint_V1beta1_QueryParamsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Teritori_Mint_V1beta1_QueryParamsResponse

  /// BlockProvisions current minting epoch provisions value.
  @Sendable func blockProvisions(
    request: Teritori_Mint_V1beta1_QueryBlockProvisionsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Teritori_Mint_V1beta1_QueryBlockProvisionsResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Teritori_Mint_V1beta1_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Teritori_Mint_V1beta1_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Teritori_Mint_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Teritori_Mint_V1beta1_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Params":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Teritori_Mint_V1beta1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Teritori_Mint_V1beta1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        wrapping: self.params(request:context:)
      )

    case "BlockProvisions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Teritori_Mint_V1beta1_QueryBlockProvisionsRequest>(),
        responseSerializer: ProtobufSerializer<Teritori_Mint_V1beta1_QueryBlockProvisionsResponse>(),
        interceptors: self.interceptors?.makeBlockProvisionsInterceptors() ?? [],
        wrapping: self.blockProvisions(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Teritori_Mint_V1beta1_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'params'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeParamsInterceptors() -> [ServerInterceptor<Teritori_Mint_V1beta1_QueryParamsRequest, Teritori_Mint_V1beta1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when handling 'blockProvisions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBlockProvisionsInterceptors() -> [ServerInterceptor<Teritori_Mint_V1beta1_QueryBlockProvisionsRequest, Teritori_Mint_V1beta1_QueryBlockProvisionsResponse>]
}

internal enum Teritori_Mint_V1beta1_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "teritori.mint.v1beta1.Query",
    methods: [
      Teritori_Mint_V1beta1_QueryServerMetadata.Methods.params,
      Teritori_Mint_V1beta1_QueryServerMetadata.Methods.blockProvisions,
    ]
  )

  internal enum Methods {
    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/teritori.mint.v1beta1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let blockProvisions = GRPCMethodDescriptor(
      name: "BlockProvisions",
      path: "/teritori.mint.v1beta1.Query/BlockProvisions",
      type: GRPCCallType.unary
    )
  }
}

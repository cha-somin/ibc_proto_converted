//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: ixo/entity/v1beta1/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Query defines the gRPC querier service.
///
/// Usage: instantiate `Ixo_Entity_V1beta1_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Ixo_Entity_V1beta1_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Ixo_Entity_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func params(
    _ request: Ixo_Entity_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Entity_V1beta1_QueryParamsRequest, Ixo_Entity_V1beta1_QueryParamsResponse>

  func entity(
    _ request: Ixo_Entity_V1beta1_QueryEntityRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Entity_V1beta1_QueryEntityRequest, Ixo_Entity_V1beta1_QueryEntityResponse>

  func entityMetaData(
    _ request: Ixo_Entity_V1beta1_QueryEntityMetadataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Entity_V1beta1_QueryEntityMetadataRequest, Ixo_Entity_V1beta1_QueryEntityMetadataResponse>

  func entityIidDocument(
    _ request: Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest, Ixo_Entity_V1beta1_QueryEntityIidDocumentResponse>

  func entityVerified(
    _ request: Ixo_Entity_V1beta1_QueryEntityVerifiedRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Entity_V1beta1_QueryEntityVerifiedRequest, Ixo_Entity_V1beta1_QueryEntityVerifiedResponse>

  func entityList(
    _ request: Ixo_Entity_V1beta1_QueryEntityListRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Entity_V1beta1_QueryEntityListRequest, Ixo_Entity_V1beta1_QueryEntityListResponse>
}

extension Ixo_Entity_V1beta1_QueryClientProtocol {
  internal var serviceName: String {
    return "ixo.entity.v1beta1.Query"
  }

  /// Unary call to Params
  ///
  /// - Parameters:
  ///   - request: Request to send to Params.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func params(
    _ request: Ixo_Entity_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Entity_V1beta1_QueryParamsRequest, Ixo_Entity_V1beta1_QueryParamsResponse> {
    return self.makeUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  /// Unary call to Entity
  ///
  /// - Parameters:
  ///   - request: Request to send to Entity.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func entity(
    _ request: Ixo_Entity_V1beta1_QueryEntityRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Entity_V1beta1_QueryEntityRequest, Ixo_Entity_V1beta1_QueryEntityResponse> {
    return self.makeUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entity.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityInterceptors() ?? []
    )
  }

  /// Unary call to EntityMetaData
  ///
  /// - Parameters:
  ///   - request: Request to send to EntityMetaData.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func entityMetaData(
    _ request: Ixo_Entity_V1beta1_QueryEntityMetadataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Entity_V1beta1_QueryEntityMetadataRequest, Ixo_Entity_V1beta1_QueryEntityMetadataResponse> {
    return self.makeUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityMetaData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityMetaDataInterceptors() ?? []
    )
  }

  /// Unary call to EntityIidDocument
  ///
  /// - Parameters:
  ///   - request: Request to send to EntityIidDocument.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func entityIidDocument(
    _ request: Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest, Ixo_Entity_V1beta1_QueryEntityIidDocumentResponse> {
    return self.makeUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityIidDocument.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityIidDocumentInterceptors() ?? []
    )
  }

  /// Unary call to EntityVerified
  ///
  /// - Parameters:
  ///   - request: Request to send to EntityVerified.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func entityVerified(
    _ request: Ixo_Entity_V1beta1_QueryEntityVerifiedRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Entity_V1beta1_QueryEntityVerifiedRequest, Ixo_Entity_V1beta1_QueryEntityVerifiedResponse> {
    return self.makeUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityVerified.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityVerifiedInterceptors() ?? []
    )
  }

  /// Unary call to EntityList
  ///
  /// - Parameters:
  ///   - request: Request to send to EntityList.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func entityList(
    _ request: Ixo_Entity_V1beta1_QueryEntityListRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Entity_V1beta1_QueryEntityListRequest, Ixo_Entity_V1beta1_QueryEntityListResponse> {
    return self.makeUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityListInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Ixo_Entity_V1beta1_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Ixo_Entity_V1beta1_QueryNIOClient")
internal final class Ixo_Entity_V1beta1_QueryClient: Ixo_Entity_V1beta1_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Ixo_Entity_V1beta1_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Ixo_Entity_V1beta1_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the ixo.entity.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ixo_Entity_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Ixo_Entity_V1beta1_QueryNIOClient: Ixo_Entity_V1beta1_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Ixo_Entity_V1beta1_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the ixo.entity.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ixo_Entity_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Query defines the gRPC querier service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Ixo_Entity_V1beta1_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Ixo_Entity_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func makeParamsCall(
    _ request: Ixo_Entity_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Entity_V1beta1_QueryParamsRequest, Ixo_Entity_V1beta1_QueryParamsResponse>

  func makeEntityCall(
    _ request: Ixo_Entity_V1beta1_QueryEntityRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Entity_V1beta1_QueryEntityRequest, Ixo_Entity_V1beta1_QueryEntityResponse>

  func makeEntityMetaDataCall(
    _ request: Ixo_Entity_V1beta1_QueryEntityMetadataRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Entity_V1beta1_QueryEntityMetadataRequest, Ixo_Entity_V1beta1_QueryEntityMetadataResponse>

  func makeEntityIidDocumentCall(
    _ request: Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest, Ixo_Entity_V1beta1_QueryEntityIidDocumentResponse>

  func makeEntityVerifiedCall(
    _ request: Ixo_Entity_V1beta1_QueryEntityVerifiedRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Entity_V1beta1_QueryEntityVerifiedRequest, Ixo_Entity_V1beta1_QueryEntityVerifiedResponse>

  func makeEntityListCall(
    _ request: Ixo_Entity_V1beta1_QueryEntityListRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Entity_V1beta1_QueryEntityListRequest, Ixo_Entity_V1beta1_QueryEntityListResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ixo_Entity_V1beta1_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Ixo_Entity_V1beta1_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Ixo_Entity_V1beta1_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeParamsCall(
    _ request: Ixo_Entity_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Entity_V1beta1_QueryParamsRequest, Ixo_Entity_V1beta1_QueryParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func makeEntityCall(
    _ request: Ixo_Entity_V1beta1_QueryEntityRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Entity_V1beta1_QueryEntityRequest, Ixo_Entity_V1beta1_QueryEntityResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entity.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityInterceptors() ?? []
    )
  }

  internal func makeEntityMetaDataCall(
    _ request: Ixo_Entity_V1beta1_QueryEntityMetadataRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Entity_V1beta1_QueryEntityMetadataRequest, Ixo_Entity_V1beta1_QueryEntityMetadataResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityMetaData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityMetaDataInterceptors() ?? []
    )
  }

  internal func makeEntityIidDocumentCall(
    _ request: Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest, Ixo_Entity_V1beta1_QueryEntityIidDocumentResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityIidDocument.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityIidDocumentInterceptors() ?? []
    )
  }

  internal func makeEntityVerifiedCall(
    _ request: Ixo_Entity_V1beta1_QueryEntityVerifiedRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Entity_V1beta1_QueryEntityVerifiedRequest, Ixo_Entity_V1beta1_QueryEntityVerifiedResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityVerified.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityVerifiedInterceptors() ?? []
    )
  }

  internal func makeEntityListCall(
    _ request: Ixo_Entity_V1beta1_QueryEntityListRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Entity_V1beta1_QueryEntityListRequest, Ixo_Entity_V1beta1_QueryEntityListResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityListInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ixo_Entity_V1beta1_QueryAsyncClientProtocol {
  internal func params(
    _ request: Ixo_Entity_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Entity_V1beta1_QueryParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func entity(
    _ request: Ixo_Entity_V1beta1_QueryEntityRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Entity_V1beta1_QueryEntityResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entity.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityInterceptors() ?? []
    )
  }

  internal func entityMetaData(
    _ request: Ixo_Entity_V1beta1_QueryEntityMetadataRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Entity_V1beta1_QueryEntityMetadataResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityMetaData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityMetaDataInterceptors() ?? []
    )
  }

  internal func entityIidDocument(
    _ request: Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Entity_V1beta1_QueryEntityIidDocumentResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityIidDocument.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityIidDocumentInterceptors() ?? []
    )
  }

  internal func entityVerified(
    _ request: Ixo_Entity_V1beta1_QueryEntityVerifiedRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Entity_V1beta1_QueryEntityVerifiedResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityVerified.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityVerifiedInterceptors() ?? []
    )
  }

  internal func entityList(
    _ request: Ixo_Entity_V1beta1_QueryEntityListRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Entity_V1beta1_QueryEntityListResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEntityListInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Ixo_Entity_V1beta1_QueryAsyncClient: Ixo_Entity_V1beta1_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Ixo_Entity_V1beta1_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ixo_Entity_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Ixo_Entity_V1beta1_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'params'.
  func makeParamsInterceptors() -> [ClientInterceptor<Ixo_Entity_V1beta1_QueryParamsRequest, Ixo_Entity_V1beta1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when invoking 'entity'.
  func makeEntityInterceptors() -> [ClientInterceptor<Ixo_Entity_V1beta1_QueryEntityRequest, Ixo_Entity_V1beta1_QueryEntityResponse>]

  /// - Returns: Interceptors to use when invoking 'entityMetaData'.
  func makeEntityMetaDataInterceptors() -> [ClientInterceptor<Ixo_Entity_V1beta1_QueryEntityMetadataRequest, Ixo_Entity_V1beta1_QueryEntityMetadataResponse>]

  /// - Returns: Interceptors to use when invoking 'entityIidDocument'.
  func makeEntityIidDocumentInterceptors() -> [ClientInterceptor<Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest, Ixo_Entity_V1beta1_QueryEntityIidDocumentResponse>]

  /// - Returns: Interceptors to use when invoking 'entityVerified'.
  func makeEntityVerifiedInterceptors() -> [ClientInterceptor<Ixo_Entity_V1beta1_QueryEntityVerifiedRequest, Ixo_Entity_V1beta1_QueryEntityVerifiedResponse>]

  /// - Returns: Interceptors to use when invoking 'entityList'.
  func makeEntityListInterceptors() -> [ClientInterceptor<Ixo_Entity_V1beta1_QueryEntityListRequest, Ixo_Entity_V1beta1_QueryEntityListResponse>]
}

internal enum Ixo_Entity_V1beta1_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "ixo.entity.v1beta1.Query",
    methods: [
      Ixo_Entity_V1beta1_QueryClientMetadata.Methods.params,
      Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entity,
      Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityMetaData,
      Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityIidDocument,
      Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityVerified,
      Ixo_Entity_V1beta1_QueryClientMetadata.Methods.entityList,
    ]
  )

  internal enum Methods {
    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/ixo.entity.v1beta1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let entity = GRPCMethodDescriptor(
      name: "Entity",
      path: "/ixo.entity.v1beta1.Query/Entity",
      type: GRPCCallType.unary
    )

    internal static let entityMetaData = GRPCMethodDescriptor(
      name: "EntityMetaData",
      path: "/ixo.entity.v1beta1.Query/EntityMetaData",
      type: GRPCCallType.unary
    )

    internal static let entityIidDocument = GRPCMethodDescriptor(
      name: "EntityIidDocument",
      path: "/ixo.entity.v1beta1.Query/EntityIidDocument",
      type: GRPCCallType.unary
    )

    internal static let entityVerified = GRPCMethodDescriptor(
      name: "EntityVerified",
      path: "/ixo.entity.v1beta1.Query/EntityVerified",
      type: GRPCCallType.unary
    )

    internal static let entityList = GRPCMethodDescriptor(
      name: "EntityList",
      path: "/ixo.entity.v1beta1.Query/EntityList",
      type: GRPCCallType.unary
    )
  }
}

/// Query defines the gRPC querier service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Ixo_Entity_V1beta1_QueryProvider: CallHandlerProvider {
  var interceptors: Ixo_Entity_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  func params(request: Ixo_Entity_V1beta1_QueryParamsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Entity_V1beta1_QueryParamsResponse>

  func entity(request: Ixo_Entity_V1beta1_QueryEntityRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Entity_V1beta1_QueryEntityResponse>

  func entityMetaData(request: Ixo_Entity_V1beta1_QueryEntityMetadataRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Entity_V1beta1_QueryEntityMetadataResponse>

  func entityIidDocument(request: Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Entity_V1beta1_QueryEntityIidDocumentResponse>

  func entityVerified(request: Ixo_Entity_V1beta1_QueryEntityVerifiedRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Entity_V1beta1_QueryEntityVerifiedResponse>

  func entityList(request: Ixo_Entity_V1beta1_QueryEntityListRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Entity_V1beta1_QueryEntityListResponse>
}

extension Ixo_Entity_V1beta1_QueryProvider {
  internal var serviceName: Substring {
    return Ixo_Entity_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Params":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Entity_V1beta1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Entity_V1beta1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        userFunction: self.params(request:context:)
      )

    case "Entity":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Entity_V1beta1_QueryEntityRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Entity_V1beta1_QueryEntityResponse>(),
        interceptors: self.interceptors?.makeEntityInterceptors() ?? [],
        userFunction: self.entity(request:context:)
      )

    case "EntityMetaData":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Entity_V1beta1_QueryEntityMetadataRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Entity_V1beta1_QueryEntityMetadataResponse>(),
        interceptors: self.interceptors?.makeEntityMetaDataInterceptors() ?? [],
        userFunction: self.entityMetaData(request:context:)
      )

    case "EntityIidDocument":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Entity_V1beta1_QueryEntityIidDocumentResponse>(),
        interceptors: self.interceptors?.makeEntityIidDocumentInterceptors() ?? [],
        userFunction: self.entityIidDocument(request:context:)
      )

    case "EntityVerified":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Entity_V1beta1_QueryEntityVerifiedRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Entity_V1beta1_QueryEntityVerifiedResponse>(),
        interceptors: self.interceptors?.makeEntityVerifiedInterceptors() ?? [],
        userFunction: self.entityVerified(request:context:)
      )

    case "EntityList":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Entity_V1beta1_QueryEntityListRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Entity_V1beta1_QueryEntityListResponse>(),
        interceptors: self.interceptors?.makeEntityListInterceptors() ?? [],
        userFunction: self.entityList(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Query defines the gRPC querier service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Ixo_Entity_V1beta1_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Ixo_Entity_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  @Sendable func params(
    request: Ixo_Entity_V1beta1_QueryParamsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Entity_V1beta1_QueryParamsResponse

  @Sendable func entity(
    request: Ixo_Entity_V1beta1_QueryEntityRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Entity_V1beta1_QueryEntityResponse

  @Sendable func entityMetaData(
    request: Ixo_Entity_V1beta1_QueryEntityMetadataRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Entity_V1beta1_QueryEntityMetadataResponse

  @Sendable func entityIidDocument(
    request: Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Entity_V1beta1_QueryEntityIidDocumentResponse

  @Sendable func entityVerified(
    request: Ixo_Entity_V1beta1_QueryEntityVerifiedRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Entity_V1beta1_QueryEntityVerifiedResponse

  @Sendable func entityList(
    request: Ixo_Entity_V1beta1_QueryEntityListRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Entity_V1beta1_QueryEntityListResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ixo_Entity_V1beta1_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Ixo_Entity_V1beta1_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Ixo_Entity_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Ixo_Entity_V1beta1_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Params":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Entity_V1beta1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Entity_V1beta1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        wrapping: self.params(request:context:)
      )

    case "Entity":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Entity_V1beta1_QueryEntityRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Entity_V1beta1_QueryEntityResponse>(),
        interceptors: self.interceptors?.makeEntityInterceptors() ?? [],
        wrapping: self.entity(request:context:)
      )

    case "EntityMetaData":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Entity_V1beta1_QueryEntityMetadataRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Entity_V1beta1_QueryEntityMetadataResponse>(),
        interceptors: self.interceptors?.makeEntityMetaDataInterceptors() ?? [],
        wrapping: self.entityMetaData(request:context:)
      )

    case "EntityIidDocument":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Entity_V1beta1_QueryEntityIidDocumentResponse>(),
        interceptors: self.interceptors?.makeEntityIidDocumentInterceptors() ?? [],
        wrapping: self.entityIidDocument(request:context:)
      )

    case "EntityVerified":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Entity_V1beta1_QueryEntityVerifiedRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Entity_V1beta1_QueryEntityVerifiedResponse>(),
        interceptors: self.interceptors?.makeEntityVerifiedInterceptors() ?? [],
        wrapping: self.entityVerified(request:context:)
      )

    case "EntityList":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Entity_V1beta1_QueryEntityListRequest>(),
        responseSerializer: ProtobufSerializer<Ixo_Entity_V1beta1_QueryEntityListResponse>(),
        interceptors: self.interceptors?.makeEntityListInterceptors() ?? [],
        wrapping: self.entityList(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Ixo_Entity_V1beta1_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'params'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeParamsInterceptors() -> [ServerInterceptor<Ixo_Entity_V1beta1_QueryParamsRequest, Ixo_Entity_V1beta1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when handling 'entity'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEntityInterceptors() -> [ServerInterceptor<Ixo_Entity_V1beta1_QueryEntityRequest, Ixo_Entity_V1beta1_QueryEntityResponse>]

  /// - Returns: Interceptors to use when handling 'entityMetaData'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEntityMetaDataInterceptors() -> [ServerInterceptor<Ixo_Entity_V1beta1_QueryEntityMetadataRequest, Ixo_Entity_V1beta1_QueryEntityMetadataResponse>]

  /// - Returns: Interceptors to use when handling 'entityIidDocument'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEntityIidDocumentInterceptors() -> [ServerInterceptor<Ixo_Entity_V1beta1_QueryEntityIidDocumentRequest, Ixo_Entity_V1beta1_QueryEntityIidDocumentResponse>]

  /// - Returns: Interceptors to use when handling 'entityVerified'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEntityVerifiedInterceptors() -> [ServerInterceptor<Ixo_Entity_V1beta1_QueryEntityVerifiedRequest, Ixo_Entity_V1beta1_QueryEntityVerifiedResponse>]

  /// - Returns: Interceptors to use when handling 'entityList'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEntityListInterceptors() -> [ServerInterceptor<Ixo_Entity_V1beta1_QueryEntityListRequest, Ixo_Entity_V1beta1_QueryEntityListResponse>]
}

internal enum Ixo_Entity_V1beta1_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "ixo.entity.v1beta1.Query",
    methods: [
      Ixo_Entity_V1beta1_QueryServerMetadata.Methods.params,
      Ixo_Entity_V1beta1_QueryServerMetadata.Methods.entity,
      Ixo_Entity_V1beta1_QueryServerMetadata.Methods.entityMetaData,
      Ixo_Entity_V1beta1_QueryServerMetadata.Methods.entityIidDocument,
      Ixo_Entity_V1beta1_QueryServerMetadata.Methods.entityVerified,
      Ixo_Entity_V1beta1_QueryServerMetadata.Methods.entityList,
    ]
  )

  internal enum Methods {
    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/ixo.entity.v1beta1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let entity = GRPCMethodDescriptor(
      name: "Entity",
      path: "/ixo.entity.v1beta1.Query/Entity",
      type: GRPCCallType.unary
    )

    internal static let entityMetaData = GRPCMethodDescriptor(
      name: "EntityMetaData",
      path: "/ixo.entity.v1beta1.Query/EntityMetaData",
      type: GRPCCallType.unary
    )

    internal static let entityIidDocument = GRPCMethodDescriptor(
      name: "EntityIidDocument",
      path: "/ixo.entity.v1beta1.Query/EntityIidDocument",
      type: GRPCCallType.unary
    )

    internal static let entityVerified = GRPCMethodDescriptor(
      name: "EntityVerified",
      path: "/ixo.entity.v1beta1.Query/EntityVerified",
      type: GRPCCallType.unary
    )

    internal static let entityList = GRPCMethodDescriptor(
      name: "EntityList",
      path: "/ixo.entity.v1beta1.Query/EntityList",
      type: GRPCCallType.unary
    )
  }
}

//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: akash/provider/v1beta2/provider.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the provider Msg service
///
/// Usage: instantiate `Akash_Provider_V1beta2_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Akash_Provider_V1beta2_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Akash_Provider_V1beta2_MsgClientInterceptorFactoryProtocol? { get }

  func createProvider(
    _ request: Akash_Provider_V1beta2_MsgCreateProvider,
    callOptions: CallOptions?
  ) -> UnaryCall<Akash_Provider_V1beta2_MsgCreateProvider, Akash_Provider_V1beta2_MsgCreateProviderResponse>

  func updateProvider(
    _ request: Akash_Provider_V1beta2_MsgUpdateProvider,
    callOptions: CallOptions?
  ) -> UnaryCall<Akash_Provider_V1beta2_MsgUpdateProvider, Akash_Provider_V1beta2_MsgUpdateProviderResponse>

  func deleteProvider(
    _ request: Akash_Provider_V1beta2_MsgDeleteProvider,
    callOptions: CallOptions?
  ) -> UnaryCall<Akash_Provider_V1beta2_MsgDeleteProvider, Akash_Provider_V1beta2_MsgDeleteProviderResponse>
}

extension Akash_Provider_V1beta2_MsgClientProtocol {
  internal var serviceName: String {
    return "akash.provider.v1beta2.Msg"
  }

  /// CreateProvider defines a method that creates a provider given the proper inputs
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateProvider.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createProvider(
    _ request: Akash_Provider_V1beta2_MsgCreateProvider,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Akash_Provider_V1beta2_MsgCreateProvider, Akash_Provider_V1beta2_MsgCreateProviderResponse> {
    return self.makeUnaryCall(
      path: Akash_Provider_V1beta2_MsgClientMetadata.Methods.createProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateProviderInterceptors() ?? []
    )
  }

  /// UpdateProvider defines a method that updates a provider given the proper inputs
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateProvider.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateProvider(
    _ request: Akash_Provider_V1beta2_MsgUpdateProvider,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Akash_Provider_V1beta2_MsgUpdateProvider, Akash_Provider_V1beta2_MsgUpdateProviderResponse> {
    return self.makeUnaryCall(
      path: Akash_Provider_V1beta2_MsgClientMetadata.Methods.updateProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateProviderInterceptors() ?? []
    )
  }

  /// DeleteProvider defines a method that deletes a provider given the proper inputs
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteProvider.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteProvider(
    _ request: Akash_Provider_V1beta2_MsgDeleteProvider,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Akash_Provider_V1beta2_MsgDeleteProvider, Akash_Provider_V1beta2_MsgDeleteProviderResponse> {
    return self.makeUnaryCall(
      path: Akash_Provider_V1beta2_MsgClientMetadata.Methods.deleteProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteProviderInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Akash_Provider_V1beta2_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Akash_Provider_V1beta2_MsgNIOClient")
internal final class Akash_Provider_V1beta2_MsgClient: Akash_Provider_V1beta2_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Akash_Provider_V1beta2_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Akash_Provider_V1beta2_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the akash.provider.v1beta2.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Akash_Provider_V1beta2_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Akash_Provider_V1beta2_MsgNIOClient: Akash_Provider_V1beta2_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Akash_Provider_V1beta2_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the akash.provider.v1beta2.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Akash_Provider_V1beta2_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the provider Msg service
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Akash_Provider_V1beta2_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Akash_Provider_V1beta2_MsgClientInterceptorFactoryProtocol? { get }

  func makeCreateProviderCall(
    _ request: Akash_Provider_V1beta2_MsgCreateProvider,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Akash_Provider_V1beta2_MsgCreateProvider, Akash_Provider_V1beta2_MsgCreateProviderResponse>

  func makeUpdateProviderCall(
    _ request: Akash_Provider_V1beta2_MsgUpdateProvider,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Akash_Provider_V1beta2_MsgUpdateProvider, Akash_Provider_V1beta2_MsgUpdateProviderResponse>

  func makeDeleteProviderCall(
    _ request: Akash_Provider_V1beta2_MsgDeleteProvider,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Akash_Provider_V1beta2_MsgDeleteProvider, Akash_Provider_V1beta2_MsgDeleteProviderResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Akash_Provider_V1beta2_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Akash_Provider_V1beta2_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Akash_Provider_V1beta2_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeCreateProviderCall(
    _ request: Akash_Provider_V1beta2_MsgCreateProvider,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Akash_Provider_V1beta2_MsgCreateProvider, Akash_Provider_V1beta2_MsgCreateProviderResponse> {
    return self.makeAsyncUnaryCall(
      path: Akash_Provider_V1beta2_MsgClientMetadata.Methods.createProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateProviderInterceptors() ?? []
    )
  }

  internal func makeUpdateProviderCall(
    _ request: Akash_Provider_V1beta2_MsgUpdateProvider,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Akash_Provider_V1beta2_MsgUpdateProvider, Akash_Provider_V1beta2_MsgUpdateProviderResponse> {
    return self.makeAsyncUnaryCall(
      path: Akash_Provider_V1beta2_MsgClientMetadata.Methods.updateProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateProviderInterceptors() ?? []
    )
  }

  internal func makeDeleteProviderCall(
    _ request: Akash_Provider_V1beta2_MsgDeleteProvider,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Akash_Provider_V1beta2_MsgDeleteProvider, Akash_Provider_V1beta2_MsgDeleteProviderResponse> {
    return self.makeAsyncUnaryCall(
      path: Akash_Provider_V1beta2_MsgClientMetadata.Methods.deleteProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteProviderInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Akash_Provider_V1beta2_MsgAsyncClientProtocol {
  internal func createProvider(
    _ request: Akash_Provider_V1beta2_MsgCreateProvider,
    callOptions: CallOptions? = nil
  ) async throws -> Akash_Provider_V1beta2_MsgCreateProviderResponse {
    return try await self.performAsyncUnaryCall(
      path: Akash_Provider_V1beta2_MsgClientMetadata.Methods.createProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateProviderInterceptors() ?? []
    )
  }

  internal func updateProvider(
    _ request: Akash_Provider_V1beta2_MsgUpdateProvider,
    callOptions: CallOptions? = nil
  ) async throws -> Akash_Provider_V1beta2_MsgUpdateProviderResponse {
    return try await self.performAsyncUnaryCall(
      path: Akash_Provider_V1beta2_MsgClientMetadata.Methods.updateProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateProviderInterceptors() ?? []
    )
  }

  internal func deleteProvider(
    _ request: Akash_Provider_V1beta2_MsgDeleteProvider,
    callOptions: CallOptions? = nil
  ) async throws -> Akash_Provider_V1beta2_MsgDeleteProviderResponse {
    return try await self.performAsyncUnaryCall(
      path: Akash_Provider_V1beta2_MsgClientMetadata.Methods.deleteProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteProviderInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Akash_Provider_V1beta2_MsgAsyncClient: Akash_Provider_V1beta2_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Akash_Provider_V1beta2_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Akash_Provider_V1beta2_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Akash_Provider_V1beta2_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'createProvider'.
  func makeCreateProviderInterceptors() -> [ClientInterceptor<Akash_Provider_V1beta2_MsgCreateProvider, Akash_Provider_V1beta2_MsgCreateProviderResponse>]

  /// - Returns: Interceptors to use when invoking 'updateProvider'.
  func makeUpdateProviderInterceptors() -> [ClientInterceptor<Akash_Provider_V1beta2_MsgUpdateProvider, Akash_Provider_V1beta2_MsgUpdateProviderResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteProvider'.
  func makeDeleteProviderInterceptors() -> [ClientInterceptor<Akash_Provider_V1beta2_MsgDeleteProvider, Akash_Provider_V1beta2_MsgDeleteProviderResponse>]
}

internal enum Akash_Provider_V1beta2_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "akash.provider.v1beta2.Msg",
    methods: [
      Akash_Provider_V1beta2_MsgClientMetadata.Methods.createProvider,
      Akash_Provider_V1beta2_MsgClientMetadata.Methods.updateProvider,
      Akash_Provider_V1beta2_MsgClientMetadata.Methods.deleteProvider,
    ]
  )

  internal enum Methods {
    internal static let createProvider = GRPCMethodDescriptor(
      name: "CreateProvider",
      path: "/akash.provider.v1beta2.Msg/CreateProvider",
      type: GRPCCallType.unary
    )

    internal static let updateProvider = GRPCMethodDescriptor(
      name: "UpdateProvider",
      path: "/akash.provider.v1beta2.Msg/UpdateProvider",
      type: GRPCCallType.unary
    )

    internal static let deleteProvider = GRPCMethodDescriptor(
      name: "DeleteProvider",
      path: "/akash.provider.v1beta2.Msg/DeleteProvider",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the provider Msg service
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Akash_Provider_V1beta2_MsgProvider: CallHandlerProvider {
  var interceptors: Akash_Provider_V1beta2_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateProvider defines a method that creates a provider given the proper inputs
  func createProvider(request: Akash_Provider_V1beta2_MsgCreateProvider, context: StatusOnlyCallContext) -> EventLoopFuture<Akash_Provider_V1beta2_MsgCreateProviderResponse>

  /// UpdateProvider defines a method that updates a provider given the proper inputs
  func updateProvider(request: Akash_Provider_V1beta2_MsgUpdateProvider, context: StatusOnlyCallContext) -> EventLoopFuture<Akash_Provider_V1beta2_MsgUpdateProviderResponse>

  /// DeleteProvider defines a method that deletes a provider given the proper inputs
  func deleteProvider(request: Akash_Provider_V1beta2_MsgDeleteProvider, context: StatusOnlyCallContext) -> EventLoopFuture<Akash_Provider_V1beta2_MsgDeleteProviderResponse>
}

extension Akash_Provider_V1beta2_MsgProvider {
  internal var serviceName: Substring {
    return Akash_Provider_V1beta2_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateProvider":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Akash_Provider_V1beta2_MsgCreateProvider>(),
        responseSerializer: ProtobufSerializer<Akash_Provider_V1beta2_MsgCreateProviderResponse>(),
        interceptors: self.interceptors?.makeCreateProviderInterceptors() ?? [],
        userFunction: self.createProvider(request:context:)
      )

    case "UpdateProvider":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Akash_Provider_V1beta2_MsgUpdateProvider>(),
        responseSerializer: ProtobufSerializer<Akash_Provider_V1beta2_MsgUpdateProviderResponse>(),
        interceptors: self.interceptors?.makeUpdateProviderInterceptors() ?? [],
        userFunction: self.updateProvider(request:context:)
      )

    case "DeleteProvider":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Akash_Provider_V1beta2_MsgDeleteProvider>(),
        responseSerializer: ProtobufSerializer<Akash_Provider_V1beta2_MsgDeleteProviderResponse>(),
        interceptors: self.interceptors?.makeDeleteProviderInterceptors() ?? [],
        userFunction: self.deleteProvider(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the provider Msg service
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Akash_Provider_V1beta2_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Akash_Provider_V1beta2_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateProvider defines a method that creates a provider given the proper inputs
  @Sendable func createProvider(
    request: Akash_Provider_V1beta2_MsgCreateProvider,
    context: GRPCAsyncServerCallContext
  ) async throws -> Akash_Provider_V1beta2_MsgCreateProviderResponse

  /// UpdateProvider defines a method that updates a provider given the proper inputs
  @Sendable func updateProvider(
    request: Akash_Provider_V1beta2_MsgUpdateProvider,
    context: GRPCAsyncServerCallContext
  ) async throws -> Akash_Provider_V1beta2_MsgUpdateProviderResponse

  /// DeleteProvider defines a method that deletes a provider given the proper inputs
  @Sendable func deleteProvider(
    request: Akash_Provider_V1beta2_MsgDeleteProvider,
    context: GRPCAsyncServerCallContext
  ) async throws -> Akash_Provider_V1beta2_MsgDeleteProviderResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Akash_Provider_V1beta2_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Akash_Provider_V1beta2_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Akash_Provider_V1beta2_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Akash_Provider_V1beta2_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateProvider":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Akash_Provider_V1beta2_MsgCreateProvider>(),
        responseSerializer: ProtobufSerializer<Akash_Provider_V1beta2_MsgCreateProviderResponse>(),
        interceptors: self.interceptors?.makeCreateProviderInterceptors() ?? [],
        wrapping: self.createProvider(request:context:)
      )

    case "UpdateProvider":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Akash_Provider_V1beta2_MsgUpdateProvider>(),
        responseSerializer: ProtobufSerializer<Akash_Provider_V1beta2_MsgUpdateProviderResponse>(),
        interceptors: self.interceptors?.makeUpdateProviderInterceptors() ?? [],
        wrapping: self.updateProvider(request:context:)
      )

    case "DeleteProvider":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Akash_Provider_V1beta2_MsgDeleteProvider>(),
        responseSerializer: ProtobufSerializer<Akash_Provider_V1beta2_MsgDeleteProviderResponse>(),
        interceptors: self.interceptors?.makeDeleteProviderInterceptors() ?? [],
        wrapping: self.deleteProvider(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Akash_Provider_V1beta2_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'createProvider'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateProviderInterceptors() -> [ServerInterceptor<Akash_Provider_V1beta2_MsgCreateProvider, Akash_Provider_V1beta2_MsgCreateProviderResponse>]

  /// - Returns: Interceptors to use when handling 'updateProvider'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateProviderInterceptors() -> [ServerInterceptor<Akash_Provider_V1beta2_MsgUpdateProvider, Akash_Provider_V1beta2_MsgUpdateProviderResponse>]

  /// - Returns: Interceptors to use when handling 'deleteProvider'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteProviderInterceptors() -> [ServerInterceptor<Akash_Provider_V1beta2_MsgDeleteProvider, Akash_Provider_V1beta2_MsgDeleteProviderResponse>]
}

internal enum Akash_Provider_V1beta2_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "akash.provider.v1beta2.Msg",
    methods: [
      Akash_Provider_V1beta2_MsgServerMetadata.Methods.createProvider,
      Akash_Provider_V1beta2_MsgServerMetadata.Methods.updateProvider,
      Akash_Provider_V1beta2_MsgServerMetadata.Methods.deleteProvider,
    ]
  )

  internal enum Methods {
    internal static let createProvider = GRPCMethodDescriptor(
      name: "CreateProvider",
      path: "/akash.provider.v1beta2.Msg/CreateProvider",
      type: GRPCCallType.unary
    )

    internal static let updateProvider = GRPCMethodDescriptor(
      name: "UpdateProvider",
      path: "/akash.provider.v1beta2.Msg/UpdateProvider",
      type: GRPCCallType.unary
    )

    internal static let deleteProvider = GRPCMethodDescriptor(
      name: "DeleteProvider",
      path: "/akash.provider.v1beta2.Msg/DeleteProvider",
      type: GRPCCallType.unary
    )
  }
}

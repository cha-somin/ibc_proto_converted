//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: comdex/lend/v1beta1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Comdex_Lend_V1beta1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Comdex_Lend_V1beta1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Comdex_Lend_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func lend(
    _ request: Comdex_Lend_V1beta1_MsgLend,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgLend, Comdex_Lend_V1beta1_MsgLendResponse>

  func withdraw(
    _ request: Comdex_Lend_V1beta1_MsgWithdraw,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgWithdraw, Comdex_Lend_V1beta1_MsgWithdrawResponse>

  func deposit(
    _ request: Comdex_Lend_V1beta1_MsgDeposit,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgDeposit, Comdex_Lend_V1beta1_MsgDepositResponse>

  func closeLend(
    _ request: Comdex_Lend_V1beta1_MsgCloseLend,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgCloseLend, Comdex_Lend_V1beta1_MsgCloseLendResponse>

  func borrow(
    _ request: Comdex_Lend_V1beta1_MsgBorrow,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgBorrow, Comdex_Lend_V1beta1_MsgBorrowResponse>

  func repay(
    _ request: Comdex_Lend_V1beta1_MsgRepay,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgRepay, Comdex_Lend_V1beta1_MsgRepayResponse>

  func depositBorrow(
    _ request: Comdex_Lend_V1beta1_MsgDepositBorrow,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgDepositBorrow, Comdex_Lend_V1beta1_MsgDepositBorrowResponse>

  func draw(
    _ request: Comdex_Lend_V1beta1_MsgDraw,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgDraw, Comdex_Lend_V1beta1_MsgDrawResponse>

  func closeBorrow(
    _ request: Comdex_Lend_V1beta1_MsgCloseBorrow,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgCloseBorrow, Comdex_Lend_V1beta1_MsgCloseBorrowResponse>

  func borrowAlternate(
    _ request: Comdex_Lend_V1beta1_MsgBorrowAlternate,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgBorrowAlternate, Comdex_Lend_V1beta1_MsgBorrowAlternateResponse>

  func fundModuleAccounts(
    _ request: Comdex_Lend_V1beta1_MsgFundModuleAccounts,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgFundModuleAccounts, Comdex_Lend_V1beta1_MsgFundModuleAccountsResponse>

  func calculateInterestAndRewards(
    _ request: Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards, Comdex_Lend_V1beta1_MsgCalculateInterestAndRewardsResponse>

  func fundReserveAccounts(
    _ request: Comdex_Lend_V1beta1_MsgFundReserveAccounts,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgFundReserveAccounts, Comdex_Lend_V1beta1_MsgFundReserveAccountsResponse>
}

extension Comdex_Lend_V1beta1_MsgClientProtocol {
  internal var serviceName: String {
    return "comdex.lend.v1beta1.Msg"
  }

  /// LendAsset defines a method for lending coins to the ModuleAccount.
  ///
  /// - Parameters:
  ///   - request: Request to send to Lend.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func lend(
    _ request: Comdex_Lend_V1beta1_MsgLend,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgLend, Comdex_Lend_V1beta1_MsgLendResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.lend.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLendInterceptors() ?? []
    )
  }

  /// WithdrawAsset defines a method for withdrawing previously loaned coins from
  /// the ModuleAccount.
  ///
  /// - Parameters:
  ///   - request: Request to send to Withdraw.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func withdraw(
    _ request: Comdex_Lend_V1beta1_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgWithdraw, Comdex_Lend_V1beta1_MsgWithdrawResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.withdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  /// Unary call to Deposit
  ///
  /// - Parameters:
  ///   - request: Request to send to Deposit.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deposit(
    _ request: Comdex_Lend_V1beta1_MsgDeposit,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgDeposit, Comdex_Lend_V1beta1_MsgDepositResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.deposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  /// Unary call to CloseLend
  ///
  /// - Parameters:
  ///   - request: Request to send to CloseLend.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func closeLend(
    _ request: Comdex_Lend_V1beta1_MsgCloseLend,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgCloseLend, Comdex_Lend_V1beta1_MsgCloseLendResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.closeLend.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCloseLendInterceptors() ?? []
    )
  }

  /// BorrowAsset defines a method for borrowing coins from the ModuleAccount.
  ///
  /// - Parameters:
  ///   - request: Request to send to Borrow.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func borrow(
    _ request: Comdex_Lend_V1beta1_MsgBorrow,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgBorrow, Comdex_Lend_V1beta1_MsgBorrowResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.borrow.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBorrowInterceptors() ?? []
    )
  }

  /// RepayAsset defines a method for repaying borrowed coins to the ModuleAccount.
  ///
  /// - Parameters:
  ///   - request: Request to send to Repay.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func repay(
    _ request: Comdex_Lend_V1beta1_MsgRepay,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgRepay, Comdex_Lend_V1beta1_MsgRepayResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.repay.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRepayInterceptors() ?? []
    )
  }

  /// Unary call to DepositBorrow
  ///
  /// - Parameters:
  ///   - request: Request to send to DepositBorrow.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func depositBorrow(
    _ request: Comdex_Lend_V1beta1_MsgDepositBorrow,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgDepositBorrow, Comdex_Lend_V1beta1_MsgDepositBorrowResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.depositBorrow.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositBorrowInterceptors() ?? []
    )
  }

  /// Unary call to Draw
  ///
  /// - Parameters:
  ///   - request: Request to send to Draw.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func draw(
    _ request: Comdex_Lend_V1beta1_MsgDraw,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgDraw, Comdex_Lend_V1beta1_MsgDrawResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.draw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDrawInterceptors() ?? []
    )
  }

  /// Unary call to CloseBorrow
  ///
  /// - Parameters:
  ///   - request: Request to send to CloseBorrow.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func closeBorrow(
    _ request: Comdex_Lend_V1beta1_MsgCloseBorrow,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgCloseBorrow, Comdex_Lend_V1beta1_MsgCloseBorrowResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.closeBorrow.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCloseBorrowInterceptors() ?? []
    )
  }

  /// Unary call to BorrowAlternate
  ///
  /// - Parameters:
  ///   - request: Request to send to BorrowAlternate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func borrowAlternate(
    _ request: Comdex_Lend_V1beta1_MsgBorrowAlternate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgBorrowAlternate, Comdex_Lend_V1beta1_MsgBorrowAlternateResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.borrowAlternate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBorrowAlternateInterceptors() ?? []
    )
  }

  /// FundModuleAccounts funds an existing module account
  ///
  /// - Parameters:
  ///   - request: Request to send to FundModuleAccounts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func fundModuleAccounts(
    _ request: Comdex_Lend_V1beta1_MsgFundModuleAccounts,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgFundModuleAccounts, Comdex_Lend_V1beta1_MsgFundModuleAccountsResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.fundModuleAccounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFundModuleAccountsInterceptors() ?? []
    )
  }

  /// Unary call to CalculateInterestAndRewards
  ///
  /// - Parameters:
  ///   - request: Request to send to CalculateInterestAndRewards.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func calculateInterestAndRewards(
    _ request: Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards, Comdex_Lend_V1beta1_MsgCalculateInterestAndRewardsResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.calculateInterestAndRewards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCalculateInterestAndRewardsInterceptors() ?? []
    )
  }

  /// Unary call to FundReserveAccounts
  ///
  /// - Parameters:
  ///   - request: Request to send to FundReserveAccounts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func fundReserveAccounts(
    _ request: Comdex_Lend_V1beta1_MsgFundReserveAccounts,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Lend_V1beta1_MsgFundReserveAccounts, Comdex_Lend_V1beta1_MsgFundReserveAccountsResponse> {
    return self.makeUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.fundReserveAccounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFundReserveAccountsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Comdex_Lend_V1beta1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Comdex_Lend_V1beta1_MsgNIOClient")
internal final class Comdex_Lend_V1beta1_MsgClient: Comdex_Lend_V1beta1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Comdex_Lend_V1beta1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Comdex_Lend_V1beta1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the comdex.lend.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Lend_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Comdex_Lend_V1beta1_MsgNIOClient: Comdex_Lend_V1beta1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Comdex_Lend_V1beta1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the comdex.lend.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Lend_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Comdex_Lend_V1beta1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Comdex_Lend_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func makeLendCall(
    _ request: Comdex_Lend_V1beta1_MsgLend,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgLend, Comdex_Lend_V1beta1_MsgLendResponse>

  func makeWithdrawCall(
    _ request: Comdex_Lend_V1beta1_MsgWithdraw,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgWithdraw, Comdex_Lend_V1beta1_MsgWithdrawResponse>

  func makeDepositCall(
    _ request: Comdex_Lend_V1beta1_MsgDeposit,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgDeposit, Comdex_Lend_V1beta1_MsgDepositResponse>

  func makeCloseLendCall(
    _ request: Comdex_Lend_V1beta1_MsgCloseLend,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgCloseLend, Comdex_Lend_V1beta1_MsgCloseLendResponse>

  func makeBorrowCall(
    _ request: Comdex_Lend_V1beta1_MsgBorrow,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgBorrow, Comdex_Lend_V1beta1_MsgBorrowResponse>

  func makeRepayCall(
    _ request: Comdex_Lend_V1beta1_MsgRepay,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgRepay, Comdex_Lend_V1beta1_MsgRepayResponse>

  func makeDepositBorrowCall(
    _ request: Comdex_Lend_V1beta1_MsgDepositBorrow,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgDepositBorrow, Comdex_Lend_V1beta1_MsgDepositBorrowResponse>

  func makeDrawCall(
    _ request: Comdex_Lend_V1beta1_MsgDraw,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgDraw, Comdex_Lend_V1beta1_MsgDrawResponse>

  func makeCloseBorrowCall(
    _ request: Comdex_Lend_V1beta1_MsgCloseBorrow,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgCloseBorrow, Comdex_Lend_V1beta1_MsgCloseBorrowResponse>

  func makeBorrowAlternateCall(
    _ request: Comdex_Lend_V1beta1_MsgBorrowAlternate,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgBorrowAlternate, Comdex_Lend_V1beta1_MsgBorrowAlternateResponse>

  func makeFundModuleAccountsCall(
    _ request: Comdex_Lend_V1beta1_MsgFundModuleAccounts,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgFundModuleAccounts, Comdex_Lend_V1beta1_MsgFundModuleAccountsResponse>

  func makeCalculateInterestAndRewardsCall(
    _ request: Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards, Comdex_Lend_V1beta1_MsgCalculateInterestAndRewardsResponse>

  func makeFundReserveAccountsCall(
    _ request: Comdex_Lend_V1beta1_MsgFundReserveAccounts,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgFundReserveAccounts, Comdex_Lend_V1beta1_MsgFundReserveAccountsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Lend_V1beta1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Comdex_Lend_V1beta1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Comdex_Lend_V1beta1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeLendCall(
    _ request: Comdex_Lend_V1beta1_MsgLend,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgLend, Comdex_Lend_V1beta1_MsgLendResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.lend.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLendInterceptors() ?? []
    )
  }

  internal func makeWithdrawCall(
    _ request: Comdex_Lend_V1beta1_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgWithdraw, Comdex_Lend_V1beta1_MsgWithdrawResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.withdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  internal func makeDepositCall(
    _ request: Comdex_Lend_V1beta1_MsgDeposit,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgDeposit, Comdex_Lend_V1beta1_MsgDepositResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.deposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  internal func makeCloseLendCall(
    _ request: Comdex_Lend_V1beta1_MsgCloseLend,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgCloseLend, Comdex_Lend_V1beta1_MsgCloseLendResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.closeLend.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCloseLendInterceptors() ?? []
    )
  }

  internal func makeBorrowCall(
    _ request: Comdex_Lend_V1beta1_MsgBorrow,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgBorrow, Comdex_Lend_V1beta1_MsgBorrowResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.borrow.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBorrowInterceptors() ?? []
    )
  }

  internal func makeRepayCall(
    _ request: Comdex_Lend_V1beta1_MsgRepay,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgRepay, Comdex_Lend_V1beta1_MsgRepayResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.repay.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRepayInterceptors() ?? []
    )
  }

  internal func makeDepositBorrowCall(
    _ request: Comdex_Lend_V1beta1_MsgDepositBorrow,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgDepositBorrow, Comdex_Lend_V1beta1_MsgDepositBorrowResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.depositBorrow.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositBorrowInterceptors() ?? []
    )
  }

  internal func makeDrawCall(
    _ request: Comdex_Lend_V1beta1_MsgDraw,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgDraw, Comdex_Lend_V1beta1_MsgDrawResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.draw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDrawInterceptors() ?? []
    )
  }

  internal func makeCloseBorrowCall(
    _ request: Comdex_Lend_V1beta1_MsgCloseBorrow,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgCloseBorrow, Comdex_Lend_V1beta1_MsgCloseBorrowResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.closeBorrow.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCloseBorrowInterceptors() ?? []
    )
  }

  internal func makeBorrowAlternateCall(
    _ request: Comdex_Lend_V1beta1_MsgBorrowAlternate,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgBorrowAlternate, Comdex_Lend_V1beta1_MsgBorrowAlternateResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.borrowAlternate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBorrowAlternateInterceptors() ?? []
    )
  }

  internal func makeFundModuleAccountsCall(
    _ request: Comdex_Lend_V1beta1_MsgFundModuleAccounts,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgFundModuleAccounts, Comdex_Lend_V1beta1_MsgFundModuleAccountsResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.fundModuleAccounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFundModuleAccountsInterceptors() ?? []
    )
  }

  internal func makeCalculateInterestAndRewardsCall(
    _ request: Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards, Comdex_Lend_V1beta1_MsgCalculateInterestAndRewardsResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.calculateInterestAndRewards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCalculateInterestAndRewardsInterceptors() ?? []
    )
  }

  internal func makeFundReserveAccountsCall(
    _ request: Comdex_Lend_V1beta1_MsgFundReserveAccounts,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Lend_V1beta1_MsgFundReserveAccounts, Comdex_Lend_V1beta1_MsgFundReserveAccountsResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.fundReserveAccounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFundReserveAccountsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Lend_V1beta1_MsgAsyncClientProtocol {
  internal func lend(
    _ request: Comdex_Lend_V1beta1_MsgLend,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgLendResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.lend.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLendInterceptors() ?? []
    )
  }

  internal func withdraw(
    _ request: Comdex_Lend_V1beta1_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgWithdrawResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.withdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  internal func deposit(
    _ request: Comdex_Lend_V1beta1_MsgDeposit,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgDepositResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.deposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  internal func closeLend(
    _ request: Comdex_Lend_V1beta1_MsgCloseLend,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgCloseLendResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.closeLend.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCloseLendInterceptors() ?? []
    )
  }

  internal func borrow(
    _ request: Comdex_Lend_V1beta1_MsgBorrow,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgBorrowResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.borrow.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBorrowInterceptors() ?? []
    )
  }

  internal func repay(
    _ request: Comdex_Lend_V1beta1_MsgRepay,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgRepayResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.repay.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRepayInterceptors() ?? []
    )
  }

  internal func depositBorrow(
    _ request: Comdex_Lend_V1beta1_MsgDepositBorrow,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgDepositBorrowResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.depositBorrow.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositBorrowInterceptors() ?? []
    )
  }

  internal func draw(
    _ request: Comdex_Lend_V1beta1_MsgDraw,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgDrawResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.draw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDrawInterceptors() ?? []
    )
  }

  internal func closeBorrow(
    _ request: Comdex_Lend_V1beta1_MsgCloseBorrow,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgCloseBorrowResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.closeBorrow.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCloseBorrowInterceptors() ?? []
    )
  }

  internal func borrowAlternate(
    _ request: Comdex_Lend_V1beta1_MsgBorrowAlternate,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgBorrowAlternateResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.borrowAlternate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBorrowAlternateInterceptors() ?? []
    )
  }

  internal func fundModuleAccounts(
    _ request: Comdex_Lend_V1beta1_MsgFundModuleAccounts,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgFundModuleAccountsResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.fundModuleAccounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFundModuleAccountsInterceptors() ?? []
    )
  }

  internal func calculateInterestAndRewards(
    _ request: Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgCalculateInterestAndRewardsResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.calculateInterestAndRewards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCalculateInterestAndRewardsInterceptors() ?? []
    )
  }

  internal func fundReserveAccounts(
    _ request: Comdex_Lend_V1beta1_MsgFundReserveAccounts,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Lend_V1beta1_MsgFundReserveAccountsResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Lend_V1beta1_MsgClientMetadata.Methods.fundReserveAccounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFundReserveAccountsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Comdex_Lend_V1beta1_MsgAsyncClient: Comdex_Lend_V1beta1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Comdex_Lend_V1beta1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Lend_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Comdex_Lend_V1beta1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'lend'.
  func makeLendInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgLend, Comdex_Lend_V1beta1_MsgLendResponse>]

  /// - Returns: Interceptors to use when invoking 'withdraw'.
  func makeWithdrawInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgWithdraw, Comdex_Lend_V1beta1_MsgWithdrawResponse>]

  /// - Returns: Interceptors to use when invoking 'deposit'.
  func makeDepositInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgDeposit, Comdex_Lend_V1beta1_MsgDepositResponse>]

  /// - Returns: Interceptors to use when invoking 'closeLend'.
  func makeCloseLendInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgCloseLend, Comdex_Lend_V1beta1_MsgCloseLendResponse>]

  /// - Returns: Interceptors to use when invoking 'borrow'.
  func makeBorrowInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgBorrow, Comdex_Lend_V1beta1_MsgBorrowResponse>]

  /// - Returns: Interceptors to use when invoking 'repay'.
  func makeRepayInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgRepay, Comdex_Lend_V1beta1_MsgRepayResponse>]

  /// - Returns: Interceptors to use when invoking 'depositBorrow'.
  func makeDepositBorrowInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgDepositBorrow, Comdex_Lend_V1beta1_MsgDepositBorrowResponse>]

  /// - Returns: Interceptors to use when invoking 'draw'.
  func makeDrawInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgDraw, Comdex_Lend_V1beta1_MsgDrawResponse>]

  /// - Returns: Interceptors to use when invoking 'closeBorrow'.
  func makeCloseBorrowInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgCloseBorrow, Comdex_Lend_V1beta1_MsgCloseBorrowResponse>]

  /// - Returns: Interceptors to use when invoking 'borrowAlternate'.
  func makeBorrowAlternateInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgBorrowAlternate, Comdex_Lend_V1beta1_MsgBorrowAlternateResponse>]

  /// - Returns: Interceptors to use when invoking 'fundModuleAccounts'.
  func makeFundModuleAccountsInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgFundModuleAccounts, Comdex_Lend_V1beta1_MsgFundModuleAccountsResponse>]

  /// - Returns: Interceptors to use when invoking 'calculateInterestAndRewards'.
  func makeCalculateInterestAndRewardsInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards, Comdex_Lend_V1beta1_MsgCalculateInterestAndRewardsResponse>]

  /// - Returns: Interceptors to use when invoking 'fundReserveAccounts'.
  func makeFundReserveAccountsInterceptors() -> [ClientInterceptor<Comdex_Lend_V1beta1_MsgFundReserveAccounts, Comdex_Lend_V1beta1_MsgFundReserveAccountsResponse>]
}

internal enum Comdex_Lend_V1beta1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "comdex.lend.v1beta1.Msg",
    methods: [
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.lend,
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.withdraw,
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.deposit,
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.closeLend,
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.borrow,
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.repay,
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.depositBorrow,
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.draw,
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.closeBorrow,
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.borrowAlternate,
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.fundModuleAccounts,
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.calculateInterestAndRewards,
      Comdex_Lend_V1beta1_MsgClientMetadata.Methods.fundReserveAccounts,
    ]
  )

  internal enum Methods {
    internal static let lend = GRPCMethodDescriptor(
      name: "Lend",
      path: "/comdex.lend.v1beta1.Msg/Lend",
      type: GRPCCallType.unary
    )

    internal static let withdraw = GRPCMethodDescriptor(
      name: "Withdraw",
      path: "/comdex.lend.v1beta1.Msg/Withdraw",
      type: GRPCCallType.unary
    )

    internal static let deposit = GRPCMethodDescriptor(
      name: "Deposit",
      path: "/comdex.lend.v1beta1.Msg/Deposit",
      type: GRPCCallType.unary
    )

    internal static let closeLend = GRPCMethodDescriptor(
      name: "CloseLend",
      path: "/comdex.lend.v1beta1.Msg/CloseLend",
      type: GRPCCallType.unary
    )

    internal static let borrow = GRPCMethodDescriptor(
      name: "Borrow",
      path: "/comdex.lend.v1beta1.Msg/Borrow",
      type: GRPCCallType.unary
    )

    internal static let repay = GRPCMethodDescriptor(
      name: "Repay",
      path: "/comdex.lend.v1beta1.Msg/Repay",
      type: GRPCCallType.unary
    )

    internal static let depositBorrow = GRPCMethodDescriptor(
      name: "DepositBorrow",
      path: "/comdex.lend.v1beta1.Msg/DepositBorrow",
      type: GRPCCallType.unary
    )

    internal static let draw = GRPCMethodDescriptor(
      name: "Draw",
      path: "/comdex.lend.v1beta1.Msg/Draw",
      type: GRPCCallType.unary
    )

    internal static let closeBorrow = GRPCMethodDescriptor(
      name: "CloseBorrow",
      path: "/comdex.lend.v1beta1.Msg/CloseBorrow",
      type: GRPCCallType.unary
    )

    internal static let borrowAlternate = GRPCMethodDescriptor(
      name: "BorrowAlternate",
      path: "/comdex.lend.v1beta1.Msg/BorrowAlternate",
      type: GRPCCallType.unary
    )

    internal static let fundModuleAccounts = GRPCMethodDescriptor(
      name: "FundModuleAccounts",
      path: "/comdex.lend.v1beta1.Msg/FundModuleAccounts",
      type: GRPCCallType.unary
    )

    internal static let calculateInterestAndRewards = GRPCMethodDescriptor(
      name: "CalculateInterestAndRewards",
      path: "/comdex.lend.v1beta1.Msg/CalculateInterestAndRewards",
      type: GRPCCallType.unary
    )

    internal static let fundReserveAccounts = GRPCMethodDescriptor(
      name: "FundReserveAccounts",
      path: "/comdex.lend.v1beta1.Msg/FundReserveAccounts",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Comdex_Lend_V1beta1_MsgProvider: CallHandlerProvider {
  var interceptors: Comdex_Lend_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// LendAsset defines a method for lending coins to the ModuleAccount.
  func lend(request: Comdex_Lend_V1beta1_MsgLend, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgLendResponse>

  /// WithdrawAsset defines a method for withdrawing previously loaned coins from
  /// the ModuleAccount.
  func withdraw(request: Comdex_Lend_V1beta1_MsgWithdraw, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgWithdrawResponse>

  func deposit(request: Comdex_Lend_V1beta1_MsgDeposit, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgDepositResponse>

  func closeLend(request: Comdex_Lend_V1beta1_MsgCloseLend, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgCloseLendResponse>

  /// BorrowAsset defines a method for borrowing coins from the ModuleAccount.
  func borrow(request: Comdex_Lend_V1beta1_MsgBorrow, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgBorrowResponse>

  /// RepayAsset defines a method for repaying borrowed coins to the ModuleAccount.
  func repay(request: Comdex_Lend_V1beta1_MsgRepay, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgRepayResponse>

  func depositBorrow(request: Comdex_Lend_V1beta1_MsgDepositBorrow, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgDepositBorrowResponse>

  func draw(request: Comdex_Lend_V1beta1_MsgDraw, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgDrawResponse>

  func closeBorrow(request: Comdex_Lend_V1beta1_MsgCloseBorrow, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgCloseBorrowResponse>

  func borrowAlternate(request: Comdex_Lend_V1beta1_MsgBorrowAlternate, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgBorrowAlternateResponse>

  /// FundModuleAccounts funds an existing module account
  func fundModuleAccounts(request: Comdex_Lend_V1beta1_MsgFundModuleAccounts, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgFundModuleAccountsResponse>

  func calculateInterestAndRewards(request: Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgCalculateInterestAndRewardsResponse>

  func fundReserveAccounts(request: Comdex_Lend_V1beta1_MsgFundReserveAccounts, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Lend_V1beta1_MsgFundReserveAccountsResponse>
}

extension Comdex_Lend_V1beta1_MsgProvider {
  internal var serviceName: Substring {
    return Comdex_Lend_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Lend":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgLend>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgLendResponse>(),
        interceptors: self.interceptors?.makeLendInterceptors() ?? [],
        userFunction: self.lend(request:context:)
      )

    case "Withdraw":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgWithdraw>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgWithdrawResponse>(),
        interceptors: self.interceptors?.makeWithdrawInterceptors() ?? [],
        userFunction: self.withdraw(request:context:)
      )

    case "Deposit":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgDeposit>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgDepositResponse>(),
        interceptors: self.interceptors?.makeDepositInterceptors() ?? [],
        userFunction: self.deposit(request:context:)
      )

    case "CloseLend":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgCloseLend>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgCloseLendResponse>(),
        interceptors: self.interceptors?.makeCloseLendInterceptors() ?? [],
        userFunction: self.closeLend(request:context:)
      )

    case "Borrow":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgBorrow>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgBorrowResponse>(),
        interceptors: self.interceptors?.makeBorrowInterceptors() ?? [],
        userFunction: self.borrow(request:context:)
      )

    case "Repay":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgRepay>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgRepayResponse>(),
        interceptors: self.interceptors?.makeRepayInterceptors() ?? [],
        userFunction: self.repay(request:context:)
      )

    case "DepositBorrow":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgDepositBorrow>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgDepositBorrowResponse>(),
        interceptors: self.interceptors?.makeDepositBorrowInterceptors() ?? [],
        userFunction: self.depositBorrow(request:context:)
      )

    case "Draw":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgDraw>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgDrawResponse>(),
        interceptors: self.interceptors?.makeDrawInterceptors() ?? [],
        userFunction: self.draw(request:context:)
      )

    case "CloseBorrow":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgCloseBorrow>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgCloseBorrowResponse>(),
        interceptors: self.interceptors?.makeCloseBorrowInterceptors() ?? [],
        userFunction: self.closeBorrow(request:context:)
      )

    case "BorrowAlternate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgBorrowAlternate>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgBorrowAlternateResponse>(),
        interceptors: self.interceptors?.makeBorrowAlternateInterceptors() ?? [],
        userFunction: self.borrowAlternate(request:context:)
      )

    case "FundModuleAccounts":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgFundModuleAccounts>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgFundModuleAccountsResponse>(),
        interceptors: self.interceptors?.makeFundModuleAccountsInterceptors() ?? [],
        userFunction: self.fundModuleAccounts(request:context:)
      )

    case "CalculateInterestAndRewards":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgCalculateInterestAndRewardsResponse>(),
        interceptors: self.interceptors?.makeCalculateInterestAndRewardsInterceptors() ?? [],
        userFunction: self.calculateInterestAndRewards(request:context:)
      )

    case "FundReserveAccounts":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgFundReserveAccounts>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgFundReserveAccountsResponse>(),
        interceptors: self.interceptors?.makeFundReserveAccountsInterceptors() ?? [],
        userFunction: self.fundReserveAccounts(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Comdex_Lend_V1beta1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Comdex_Lend_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// LendAsset defines a method for lending coins to the ModuleAccount.
  @Sendable func lend(
    request: Comdex_Lend_V1beta1_MsgLend,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgLendResponse

  /// WithdrawAsset defines a method for withdrawing previously loaned coins from
  /// the ModuleAccount.
  @Sendable func withdraw(
    request: Comdex_Lend_V1beta1_MsgWithdraw,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgWithdrawResponse

  @Sendable func deposit(
    request: Comdex_Lend_V1beta1_MsgDeposit,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgDepositResponse

  @Sendable func closeLend(
    request: Comdex_Lend_V1beta1_MsgCloseLend,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgCloseLendResponse

  /// BorrowAsset defines a method for borrowing coins from the ModuleAccount.
  @Sendable func borrow(
    request: Comdex_Lend_V1beta1_MsgBorrow,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgBorrowResponse

  /// RepayAsset defines a method for repaying borrowed coins to the ModuleAccount.
  @Sendable func repay(
    request: Comdex_Lend_V1beta1_MsgRepay,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgRepayResponse

  @Sendable func depositBorrow(
    request: Comdex_Lend_V1beta1_MsgDepositBorrow,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgDepositBorrowResponse

  @Sendable func draw(
    request: Comdex_Lend_V1beta1_MsgDraw,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgDrawResponse

  @Sendable func closeBorrow(
    request: Comdex_Lend_V1beta1_MsgCloseBorrow,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgCloseBorrowResponse

  @Sendable func borrowAlternate(
    request: Comdex_Lend_V1beta1_MsgBorrowAlternate,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgBorrowAlternateResponse

  /// FundModuleAccounts funds an existing module account
  @Sendable func fundModuleAccounts(
    request: Comdex_Lend_V1beta1_MsgFundModuleAccounts,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgFundModuleAccountsResponse

  @Sendable func calculateInterestAndRewards(
    request: Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgCalculateInterestAndRewardsResponse

  @Sendable func fundReserveAccounts(
    request: Comdex_Lend_V1beta1_MsgFundReserveAccounts,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Lend_V1beta1_MsgFundReserveAccountsResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Lend_V1beta1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Comdex_Lend_V1beta1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Comdex_Lend_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Comdex_Lend_V1beta1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Lend":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgLend>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgLendResponse>(),
        interceptors: self.interceptors?.makeLendInterceptors() ?? [],
        wrapping: self.lend(request:context:)
      )

    case "Withdraw":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgWithdraw>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgWithdrawResponse>(),
        interceptors: self.interceptors?.makeWithdrawInterceptors() ?? [],
        wrapping: self.withdraw(request:context:)
      )

    case "Deposit":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgDeposit>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgDepositResponse>(),
        interceptors: self.interceptors?.makeDepositInterceptors() ?? [],
        wrapping: self.deposit(request:context:)
      )

    case "CloseLend":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgCloseLend>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgCloseLendResponse>(),
        interceptors: self.interceptors?.makeCloseLendInterceptors() ?? [],
        wrapping: self.closeLend(request:context:)
      )

    case "Borrow":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgBorrow>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgBorrowResponse>(),
        interceptors: self.interceptors?.makeBorrowInterceptors() ?? [],
        wrapping: self.borrow(request:context:)
      )

    case "Repay":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgRepay>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgRepayResponse>(),
        interceptors: self.interceptors?.makeRepayInterceptors() ?? [],
        wrapping: self.repay(request:context:)
      )

    case "DepositBorrow":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgDepositBorrow>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgDepositBorrowResponse>(),
        interceptors: self.interceptors?.makeDepositBorrowInterceptors() ?? [],
        wrapping: self.depositBorrow(request:context:)
      )

    case "Draw":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgDraw>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgDrawResponse>(),
        interceptors: self.interceptors?.makeDrawInterceptors() ?? [],
        wrapping: self.draw(request:context:)
      )

    case "CloseBorrow":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgCloseBorrow>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgCloseBorrowResponse>(),
        interceptors: self.interceptors?.makeCloseBorrowInterceptors() ?? [],
        wrapping: self.closeBorrow(request:context:)
      )

    case "BorrowAlternate":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgBorrowAlternate>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgBorrowAlternateResponse>(),
        interceptors: self.interceptors?.makeBorrowAlternateInterceptors() ?? [],
        wrapping: self.borrowAlternate(request:context:)
      )

    case "FundModuleAccounts":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgFundModuleAccounts>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgFundModuleAccountsResponse>(),
        interceptors: self.interceptors?.makeFundModuleAccountsInterceptors() ?? [],
        wrapping: self.fundModuleAccounts(request:context:)
      )

    case "CalculateInterestAndRewards":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgCalculateInterestAndRewardsResponse>(),
        interceptors: self.interceptors?.makeCalculateInterestAndRewardsInterceptors() ?? [],
        wrapping: self.calculateInterestAndRewards(request:context:)
      )

    case "FundReserveAccounts":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Lend_V1beta1_MsgFundReserveAccounts>(),
        responseSerializer: ProtobufSerializer<Comdex_Lend_V1beta1_MsgFundReserveAccountsResponse>(),
        interceptors: self.interceptors?.makeFundReserveAccountsInterceptors() ?? [],
        wrapping: self.fundReserveAccounts(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Comdex_Lend_V1beta1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'lend'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeLendInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgLend, Comdex_Lend_V1beta1_MsgLendResponse>]

  /// - Returns: Interceptors to use when handling 'withdraw'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWithdrawInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgWithdraw, Comdex_Lend_V1beta1_MsgWithdrawResponse>]

  /// - Returns: Interceptors to use when handling 'deposit'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDepositInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgDeposit, Comdex_Lend_V1beta1_MsgDepositResponse>]

  /// - Returns: Interceptors to use when handling 'closeLend'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCloseLendInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgCloseLend, Comdex_Lend_V1beta1_MsgCloseLendResponse>]

  /// - Returns: Interceptors to use when handling 'borrow'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBorrowInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgBorrow, Comdex_Lend_V1beta1_MsgBorrowResponse>]

  /// - Returns: Interceptors to use when handling 'repay'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRepayInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgRepay, Comdex_Lend_V1beta1_MsgRepayResponse>]

  /// - Returns: Interceptors to use when handling 'depositBorrow'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDepositBorrowInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgDepositBorrow, Comdex_Lend_V1beta1_MsgDepositBorrowResponse>]

  /// - Returns: Interceptors to use when handling 'draw'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDrawInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgDraw, Comdex_Lend_V1beta1_MsgDrawResponse>]

  /// - Returns: Interceptors to use when handling 'closeBorrow'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCloseBorrowInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgCloseBorrow, Comdex_Lend_V1beta1_MsgCloseBorrowResponse>]

  /// - Returns: Interceptors to use when handling 'borrowAlternate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBorrowAlternateInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgBorrowAlternate, Comdex_Lend_V1beta1_MsgBorrowAlternateResponse>]

  /// - Returns: Interceptors to use when handling 'fundModuleAccounts'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeFundModuleAccountsInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgFundModuleAccounts, Comdex_Lend_V1beta1_MsgFundModuleAccountsResponse>]

  /// - Returns: Interceptors to use when handling 'calculateInterestAndRewards'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCalculateInterestAndRewardsInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgCalculateInterestAndRewards, Comdex_Lend_V1beta1_MsgCalculateInterestAndRewardsResponse>]

  /// - Returns: Interceptors to use when handling 'fundReserveAccounts'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeFundReserveAccountsInterceptors() -> [ServerInterceptor<Comdex_Lend_V1beta1_MsgFundReserveAccounts, Comdex_Lend_V1beta1_MsgFundReserveAccountsResponse>]
}

internal enum Comdex_Lend_V1beta1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "comdex.lend.v1beta1.Msg",
    methods: [
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.lend,
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.withdraw,
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.deposit,
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.closeLend,
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.borrow,
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.repay,
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.depositBorrow,
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.draw,
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.closeBorrow,
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.borrowAlternate,
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.fundModuleAccounts,
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.calculateInterestAndRewards,
      Comdex_Lend_V1beta1_MsgServerMetadata.Methods.fundReserveAccounts,
    ]
  )

  internal enum Methods {
    internal static let lend = GRPCMethodDescriptor(
      name: "Lend",
      path: "/comdex.lend.v1beta1.Msg/Lend",
      type: GRPCCallType.unary
    )

    internal static let withdraw = GRPCMethodDescriptor(
      name: "Withdraw",
      path: "/comdex.lend.v1beta1.Msg/Withdraw",
      type: GRPCCallType.unary
    )

    internal static let deposit = GRPCMethodDescriptor(
      name: "Deposit",
      path: "/comdex.lend.v1beta1.Msg/Deposit",
      type: GRPCCallType.unary
    )

    internal static let closeLend = GRPCMethodDescriptor(
      name: "CloseLend",
      path: "/comdex.lend.v1beta1.Msg/CloseLend",
      type: GRPCCallType.unary
    )

    internal static let borrow = GRPCMethodDescriptor(
      name: "Borrow",
      path: "/comdex.lend.v1beta1.Msg/Borrow",
      type: GRPCCallType.unary
    )

    internal static let repay = GRPCMethodDescriptor(
      name: "Repay",
      path: "/comdex.lend.v1beta1.Msg/Repay",
      type: GRPCCallType.unary
    )

    internal static let depositBorrow = GRPCMethodDescriptor(
      name: "DepositBorrow",
      path: "/comdex.lend.v1beta1.Msg/DepositBorrow",
      type: GRPCCallType.unary
    )

    internal static let draw = GRPCMethodDescriptor(
      name: "Draw",
      path: "/comdex.lend.v1beta1.Msg/Draw",
      type: GRPCCallType.unary
    )

    internal static let closeBorrow = GRPCMethodDescriptor(
      name: "CloseBorrow",
      path: "/comdex.lend.v1beta1.Msg/CloseBorrow",
      type: GRPCCallType.unary
    )

    internal static let borrowAlternate = GRPCMethodDescriptor(
      name: "BorrowAlternate",
      path: "/comdex.lend.v1beta1.Msg/BorrowAlternate",
      type: GRPCCallType.unary
    )

    internal static let fundModuleAccounts = GRPCMethodDescriptor(
      name: "FundModuleAccounts",
      path: "/comdex.lend.v1beta1.Msg/FundModuleAccounts",
      type: GRPCCallType.unary
    )

    internal static let calculateInterestAndRewards = GRPCMethodDescriptor(
      name: "CalculateInterestAndRewards",
      path: "/comdex.lend.v1beta1.Msg/CalculateInterestAndRewards",
      type: GRPCCallType.unary
    )

    internal static let fundReserveAccounts = GRPCMethodDescriptor(
      name: "FundReserveAccounts",
      path: "/comdex.lend.v1beta1.Msg/FundReserveAccounts",
      type: GRPCCallType.unary
    )
  }
}

//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: stafihub/rdex/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Query defines the gRPC querier service.
///
/// Usage: instantiate `Stafihub_Stafihub_Rdex_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Stafihub_Stafihub_Rdex_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Stafihub_Stafihub_Rdex_QueryClientInterceptorFactoryProtocol? { get }

  func params(
    _ request: Stafihub_Stafihub_Rdex_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rdex_QueryParamsRequest, Stafihub_Stafihub_Rdex_QueryParamsResponse>

  func swapPoolInfo(
    _ request: Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest, Stafihub_Stafihub_Rdex_QuerySwapPoolInfoResponse>

  func swapPoolList(
    _ request: Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest, Stafihub_Stafihub_Rdex_QuerySwapPoolListResponse>

  func providerList(
    _ request: Stafihub_Stafihub_Rdex_QueryProviderListRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rdex_QueryProviderListRequest, Stafihub_Stafihub_Rdex_QueryProviderListResponse>

  func poolCreatorList(
    _ request: Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest, Stafihub_Stafihub_Rdex_QueryPoolCreatorListResponse>

  func providerSwitch(
    _ request: Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest, Stafihub_Stafihub_Rdex_QueryProviderSwitchResponse>
}

extension Stafihub_Stafihub_Rdex_QueryClientProtocol {
  internal var serviceName: String {
    return "stafihub.stafihub.rdex.Query"
  }

  /// Parameters queries the parameters of the module.
  ///
  /// - Parameters:
  ///   - request: Request to send to Params.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func params(
    _ request: Stafihub_Stafihub_Rdex_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rdex_QueryParamsRequest, Stafihub_Stafihub_Rdex_QueryParamsResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  /// Queries a list of SwapPoolInfo items.
  ///
  /// - Parameters:
  ///   - request: Request to send to SwapPoolInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func swapPoolInfo(
    _ request: Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest, Stafihub_Stafihub_Rdex_QuerySwapPoolInfoResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.swapPoolInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapPoolInfoInterceptors() ?? []
    )
  }

  /// Queries a list of SwapPoolList items.
  ///
  /// - Parameters:
  ///   - request: Request to send to SwapPoolList.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func swapPoolList(
    _ request: Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest, Stafihub_Stafihub_Rdex_QuerySwapPoolListResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.swapPoolList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapPoolListInterceptors() ?? []
    )
  }

  /// Queries a list of ProviderList items.
  ///
  /// - Parameters:
  ///   - request: Request to send to ProviderList.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func providerList(
    _ request: Stafihub_Stafihub_Rdex_QueryProviderListRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rdex_QueryProviderListRequest, Stafihub_Stafihub_Rdex_QueryProviderListResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.providerList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProviderListInterceptors() ?? []
    )
  }

  /// Queries a list of PoolCreatorList items.
  ///
  /// - Parameters:
  ///   - request: Request to send to PoolCreatorList.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func poolCreatorList(
    _ request: Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest, Stafihub_Stafihub_Rdex_QueryPoolCreatorListResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.poolCreatorList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePoolCreatorListInterceptors() ?? []
    )
  }

  /// Queries a list of ProviderSwitch items.
  ///
  /// - Parameters:
  ///   - request: Request to send to ProviderSwitch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func providerSwitch(
    _ request: Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest, Stafihub_Stafihub_Rdex_QueryProviderSwitchResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.providerSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProviderSwitchInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Stafihub_Stafihub_Rdex_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Stafihub_Stafihub_Rdex_QueryNIOClient")
internal final class Stafihub_Stafihub_Rdex_QueryClient: Stafihub_Stafihub_Rdex_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Stafihub_Stafihub_Rdex_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Stafihub_Stafihub_Rdex_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the stafihub.stafihub.rdex.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Rdex_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Stafihub_Stafihub_Rdex_QueryNIOClient: Stafihub_Stafihub_Rdex_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stafihub_Stafihub_Rdex_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the stafihub.stafihub.rdex.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Rdex_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Query defines the gRPC querier service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stafihub_Stafihub_Rdex_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stafihub_Stafihub_Rdex_QueryClientInterceptorFactoryProtocol? { get }

  func makeParamsCall(
    _ request: Stafihub_Stafihub_Rdex_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rdex_QueryParamsRequest, Stafihub_Stafihub_Rdex_QueryParamsResponse>

  func makeSwapPoolInfoCall(
    _ request: Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest, Stafihub_Stafihub_Rdex_QuerySwapPoolInfoResponse>

  func makeSwapPoolListCall(
    _ request: Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest, Stafihub_Stafihub_Rdex_QuerySwapPoolListResponse>

  func makeProviderListCall(
    _ request: Stafihub_Stafihub_Rdex_QueryProviderListRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rdex_QueryProviderListRequest, Stafihub_Stafihub_Rdex_QueryProviderListResponse>

  func makePoolCreatorListCall(
    _ request: Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest, Stafihub_Stafihub_Rdex_QueryPoolCreatorListResponse>

  func makeProviderSwitchCall(
    _ request: Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest, Stafihub_Stafihub_Rdex_QueryProviderSwitchResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Rdex_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stafihub_Stafihub_Rdex_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Stafihub_Stafihub_Rdex_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeParamsCall(
    _ request: Stafihub_Stafihub_Rdex_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rdex_QueryParamsRequest, Stafihub_Stafihub_Rdex_QueryParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func makeSwapPoolInfoCall(
    _ request: Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest, Stafihub_Stafihub_Rdex_QuerySwapPoolInfoResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.swapPoolInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapPoolInfoInterceptors() ?? []
    )
  }

  internal func makeSwapPoolListCall(
    _ request: Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest, Stafihub_Stafihub_Rdex_QuerySwapPoolListResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.swapPoolList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapPoolListInterceptors() ?? []
    )
  }

  internal func makeProviderListCall(
    _ request: Stafihub_Stafihub_Rdex_QueryProviderListRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rdex_QueryProviderListRequest, Stafihub_Stafihub_Rdex_QueryProviderListResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.providerList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProviderListInterceptors() ?? []
    )
  }

  internal func makePoolCreatorListCall(
    _ request: Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest, Stafihub_Stafihub_Rdex_QueryPoolCreatorListResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.poolCreatorList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePoolCreatorListInterceptors() ?? []
    )
  }

  internal func makeProviderSwitchCall(
    _ request: Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest, Stafihub_Stafihub_Rdex_QueryProviderSwitchResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.providerSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProviderSwitchInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Rdex_QueryAsyncClientProtocol {
  internal func params(
    _ request: Stafihub_Stafihub_Rdex_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rdex_QueryParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func swapPoolInfo(
    _ request: Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rdex_QuerySwapPoolInfoResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.swapPoolInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapPoolInfoInterceptors() ?? []
    )
  }

  internal func swapPoolList(
    _ request: Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rdex_QuerySwapPoolListResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.swapPoolList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapPoolListInterceptors() ?? []
    )
  }

  internal func providerList(
    _ request: Stafihub_Stafihub_Rdex_QueryProviderListRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rdex_QueryProviderListResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.providerList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProviderListInterceptors() ?? []
    )
  }

  internal func poolCreatorList(
    _ request: Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rdex_QueryPoolCreatorListResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.poolCreatorList.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePoolCreatorListInterceptors() ?? []
    )
  }

  internal func providerSwitch(
    _ request: Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rdex_QueryProviderSwitchResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.providerSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProviderSwitchInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Stafihub_Stafihub_Rdex_QueryAsyncClient: Stafihub_Stafihub_Rdex_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stafihub_Stafihub_Rdex_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Rdex_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Stafihub_Stafihub_Rdex_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'params'.
  func makeParamsInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rdex_QueryParamsRequest, Stafihub_Stafihub_Rdex_QueryParamsResponse>]

  /// - Returns: Interceptors to use when invoking 'swapPoolInfo'.
  func makeSwapPoolInfoInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest, Stafihub_Stafihub_Rdex_QuerySwapPoolInfoResponse>]

  /// - Returns: Interceptors to use when invoking 'swapPoolList'.
  func makeSwapPoolListInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest, Stafihub_Stafihub_Rdex_QuerySwapPoolListResponse>]

  /// - Returns: Interceptors to use when invoking 'providerList'.
  func makeProviderListInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rdex_QueryProviderListRequest, Stafihub_Stafihub_Rdex_QueryProviderListResponse>]

  /// - Returns: Interceptors to use when invoking 'poolCreatorList'.
  func makePoolCreatorListInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest, Stafihub_Stafihub_Rdex_QueryPoolCreatorListResponse>]

  /// - Returns: Interceptors to use when invoking 'providerSwitch'.
  func makeProviderSwitchInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest, Stafihub_Stafihub_Rdex_QueryProviderSwitchResponse>]
}

internal enum Stafihub_Stafihub_Rdex_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "stafihub.stafihub.rdex.Query",
    methods: [
      Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.params,
      Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.swapPoolInfo,
      Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.swapPoolList,
      Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.providerList,
      Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.poolCreatorList,
      Stafihub_Stafihub_Rdex_QueryClientMetadata.Methods.providerSwitch,
    ]
  )

  internal enum Methods {
    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/stafihub.stafihub.rdex.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let swapPoolInfo = GRPCMethodDescriptor(
      name: "SwapPoolInfo",
      path: "/stafihub.stafihub.rdex.Query/SwapPoolInfo",
      type: GRPCCallType.unary
    )

    internal static let swapPoolList = GRPCMethodDescriptor(
      name: "SwapPoolList",
      path: "/stafihub.stafihub.rdex.Query/SwapPoolList",
      type: GRPCCallType.unary
    )

    internal static let providerList = GRPCMethodDescriptor(
      name: "ProviderList",
      path: "/stafihub.stafihub.rdex.Query/ProviderList",
      type: GRPCCallType.unary
    )

    internal static let poolCreatorList = GRPCMethodDescriptor(
      name: "PoolCreatorList",
      path: "/stafihub.stafihub.rdex.Query/PoolCreatorList",
      type: GRPCCallType.unary
    )

    internal static let providerSwitch = GRPCMethodDescriptor(
      name: "ProviderSwitch",
      path: "/stafihub.stafihub.rdex.Query/ProviderSwitch",
      type: GRPCCallType.unary
    )
  }
}

/// Query defines the gRPC querier service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Stafihub_Stafihub_Rdex_QueryProvider: CallHandlerProvider {
  var interceptors: Stafihub_Stafihub_Rdex_QueryServerInterceptorFactoryProtocol? { get }

  /// Parameters queries the parameters of the module.
  func params(request: Stafihub_Stafihub_Rdex_QueryParamsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rdex_QueryParamsResponse>

  /// Queries a list of SwapPoolInfo items.
  func swapPoolInfo(request: Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rdex_QuerySwapPoolInfoResponse>

  /// Queries a list of SwapPoolList items.
  func swapPoolList(request: Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rdex_QuerySwapPoolListResponse>

  /// Queries a list of ProviderList items.
  func providerList(request: Stafihub_Stafihub_Rdex_QueryProviderListRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rdex_QueryProviderListResponse>

  /// Queries a list of PoolCreatorList items.
  func poolCreatorList(request: Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rdex_QueryPoolCreatorListResponse>

  /// Queries a list of ProviderSwitch items.
  func providerSwitch(request: Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rdex_QueryProviderSwitchResponse>
}

extension Stafihub_Stafihub_Rdex_QueryProvider {
  internal var serviceName: Substring {
    return Stafihub_Stafihub_Rdex_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Params":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rdex_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rdex_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        userFunction: self.params(request:context:)
      )

    case "SwapPoolInfo":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rdex_QuerySwapPoolInfoResponse>(),
        interceptors: self.interceptors?.makeSwapPoolInfoInterceptors() ?? [],
        userFunction: self.swapPoolInfo(request:context:)
      )

    case "SwapPoolList":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rdex_QuerySwapPoolListResponse>(),
        interceptors: self.interceptors?.makeSwapPoolListInterceptors() ?? [],
        userFunction: self.swapPoolList(request:context:)
      )

    case "ProviderList":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rdex_QueryProviderListRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rdex_QueryProviderListResponse>(),
        interceptors: self.interceptors?.makeProviderListInterceptors() ?? [],
        userFunction: self.providerList(request:context:)
      )

    case "PoolCreatorList":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rdex_QueryPoolCreatorListResponse>(),
        interceptors: self.interceptors?.makePoolCreatorListInterceptors() ?? [],
        userFunction: self.poolCreatorList(request:context:)
      )

    case "ProviderSwitch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rdex_QueryProviderSwitchResponse>(),
        interceptors: self.interceptors?.makeProviderSwitchInterceptors() ?? [],
        userFunction: self.providerSwitch(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Query defines the gRPC querier service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stafihub_Stafihub_Rdex_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stafihub_Stafihub_Rdex_QueryServerInterceptorFactoryProtocol? { get }

  /// Parameters queries the parameters of the module.
  @Sendable func params(
    request: Stafihub_Stafihub_Rdex_QueryParamsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rdex_QueryParamsResponse

  /// Queries a list of SwapPoolInfo items.
  @Sendable func swapPoolInfo(
    request: Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rdex_QuerySwapPoolInfoResponse

  /// Queries a list of SwapPoolList items.
  @Sendable func swapPoolList(
    request: Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rdex_QuerySwapPoolListResponse

  /// Queries a list of ProviderList items.
  @Sendable func providerList(
    request: Stafihub_Stafihub_Rdex_QueryProviderListRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rdex_QueryProviderListResponse

  /// Queries a list of PoolCreatorList items.
  @Sendable func poolCreatorList(
    request: Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rdex_QueryPoolCreatorListResponse

  /// Queries a list of ProviderSwitch items.
  @Sendable func providerSwitch(
    request: Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rdex_QueryProviderSwitchResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Rdex_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stafihub_Stafihub_Rdex_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Stafihub_Stafihub_Rdex_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Stafihub_Stafihub_Rdex_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Params":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rdex_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rdex_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        wrapping: self.params(request:context:)
      )

    case "SwapPoolInfo":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rdex_QuerySwapPoolInfoResponse>(),
        interceptors: self.interceptors?.makeSwapPoolInfoInterceptors() ?? [],
        wrapping: self.swapPoolInfo(request:context:)
      )

    case "SwapPoolList":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rdex_QuerySwapPoolListResponse>(),
        interceptors: self.interceptors?.makeSwapPoolListInterceptors() ?? [],
        wrapping: self.swapPoolList(request:context:)
      )

    case "ProviderList":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rdex_QueryProviderListRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rdex_QueryProviderListResponse>(),
        interceptors: self.interceptors?.makeProviderListInterceptors() ?? [],
        wrapping: self.providerList(request:context:)
      )

    case "PoolCreatorList":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rdex_QueryPoolCreatorListResponse>(),
        interceptors: self.interceptors?.makePoolCreatorListInterceptors() ?? [],
        wrapping: self.poolCreatorList(request:context:)
      )

    case "ProviderSwitch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rdex_QueryProviderSwitchResponse>(),
        interceptors: self.interceptors?.makeProviderSwitchInterceptors() ?? [],
        wrapping: self.providerSwitch(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Stafihub_Stafihub_Rdex_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'params'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeParamsInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rdex_QueryParamsRequest, Stafihub_Stafihub_Rdex_QueryParamsResponse>]

  /// - Returns: Interceptors to use when handling 'swapPoolInfo'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSwapPoolInfoInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rdex_QuerySwapPoolInfoRequest, Stafihub_Stafihub_Rdex_QuerySwapPoolInfoResponse>]

  /// - Returns: Interceptors to use when handling 'swapPoolList'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSwapPoolListInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rdex_QuerySwapPoolListRequest, Stafihub_Stafihub_Rdex_QuerySwapPoolListResponse>]

  /// - Returns: Interceptors to use when handling 'providerList'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeProviderListInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rdex_QueryProviderListRequest, Stafihub_Stafihub_Rdex_QueryProviderListResponse>]

  /// - Returns: Interceptors to use when handling 'poolCreatorList'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makePoolCreatorListInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rdex_QueryPoolCreatorListRequest, Stafihub_Stafihub_Rdex_QueryPoolCreatorListResponse>]

  /// - Returns: Interceptors to use when handling 'providerSwitch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeProviderSwitchInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rdex_QueryProviderSwitchRequest, Stafihub_Stafihub_Rdex_QueryProviderSwitchResponse>]
}

internal enum Stafihub_Stafihub_Rdex_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "stafihub.stafihub.rdex.Query",
    methods: [
      Stafihub_Stafihub_Rdex_QueryServerMetadata.Methods.params,
      Stafihub_Stafihub_Rdex_QueryServerMetadata.Methods.swapPoolInfo,
      Stafihub_Stafihub_Rdex_QueryServerMetadata.Methods.swapPoolList,
      Stafihub_Stafihub_Rdex_QueryServerMetadata.Methods.providerList,
      Stafihub_Stafihub_Rdex_QueryServerMetadata.Methods.poolCreatorList,
      Stafihub_Stafihub_Rdex_QueryServerMetadata.Methods.providerSwitch,
    ]
  )

  internal enum Methods {
    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/stafihub.stafihub.rdex.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let swapPoolInfo = GRPCMethodDescriptor(
      name: "SwapPoolInfo",
      path: "/stafihub.stafihub.rdex.Query/SwapPoolInfo",
      type: GRPCCallType.unary
    )

    internal static let swapPoolList = GRPCMethodDescriptor(
      name: "SwapPoolList",
      path: "/stafihub.stafihub.rdex.Query/SwapPoolList",
      type: GRPCCallType.unary
    )

    internal static let providerList = GRPCMethodDescriptor(
      name: "ProviderList",
      path: "/stafihub.stafihub.rdex.Query/ProviderList",
      type: GRPCCallType.unary
    )

    internal static let poolCreatorList = GRPCMethodDescriptor(
      name: "PoolCreatorList",
      path: "/stafihub.stafihub.rdex.Query/PoolCreatorList",
      type: GRPCCallType.unary
    )

    internal static let providerSwitch = GRPCMethodDescriptor(
      name: "ProviderSwitch",
      path: "/stafihub.stafihub.rdex.Query/ProviderSwitch",
      type: GRPCCallType.unary
    )
  }
}

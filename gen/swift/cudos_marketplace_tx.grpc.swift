//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: cudos/marketplace/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the Msg service.
///
/// Usage: instantiate `Cudoventures_Cudosnode_Marketplace_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Cudoventures_Cudosnode_Marketplace_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Cudoventures_Cudosnode_Marketplace_MsgClientInterceptorFactoryProtocol? { get }

  func publishCollection(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgPublishCollection,
    callOptions: CallOptions?
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgPublishCollection, Cudoventures_Cudosnode_Marketplace_MsgPublishCollectionResponse>

  func publishNft(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgPublishNft,
    callOptions: CallOptions?
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgPublishNft, Cudoventures_Cudosnode_Marketplace_MsgPublishNftResponse>

  func buyNft(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgBuyNft,
    callOptions: CallOptions?
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgBuyNft, Cudoventures_Cudosnode_Marketplace_MsgBuyNftResponse>

  func mintNft(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgMintNft,
    callOptions: CallOptions?
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgMintNft, Cudoventures_Cudosnode_Marketplace_MsgMintNftResponse>

  func removeNft(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgRemoveNft,
    callOptions: CallOptions?
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgRemoveNft, Cudoventures_Cudosnode_Marketplace_MsgRemoveNftResponse>

  func verifyCollection(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection,
    callOptions: CallOptions?
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection, Cudoventures_Cudosnode_Marketplace_MsgVerifyCollectionResponse>

  func unverifyCollection(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection,
    callOptions: CallOptions?
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection, Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollectionResponse>

  func createCollection(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgCreateCollection,
    callOptions: CallOptions?
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgCreateCollection, Cudoventures_Cudosnode_Marketplace_MsgCreateCollectionResponse>

  func updateRoyalties(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties,
    callOptions: CallOptions?
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties, Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyaltiesResponse>

  func updatePrice(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice,
    callOptions: CallOptions?
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice, Cudoventures_Cudosnode_Marketplace_MsgUpdatePriceResponse>

  func addAdmin(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgAddAdmin,
    callOptions: CallOptions?
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgAddAdmin, Cudoventures_Cudosnode_Marketplace_MsgAddAdminResponse>

  func removeAdmin(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin,
    callOptions: CallOptions?
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin, Cudoventures_Cudosnode_Marketplace_MsgRemoveAdminResponse>
}

extension Cudoventures_Cudosnode_Marketplace_MsgClientProtocol {
  internal var serviceName: String {
    return "cudoventures.cudosnode.marketplace.Msg"
  }

  /// Unary call to PublishCollection
  ///
  /// - Parameters:
  ///   - request: Request to send to PublishCollection.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func publishCollection(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgPublishCollection,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgPublishCollection, Cudoventures_Cudosnode_Marketplace_MsgPublishCollectionResponse> {
    return self.makeUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.publishCollection.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePublishCollectionInterceptors() ?? []
    )
  }

  /// Unary call to PublishNft
  ///
  /// - Parameters:
  ///   - request: Request to send to PublishNft.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func publishNft(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgPublishNft,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgPublishNft, Cudoventures_Cudosnode_Marketplace_MsgPublishNftResponse> {
    return self.makeUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.publishNft.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePublishNftInterceptors() ?? []
    )
  }

  /// Unary call to BuyNft
  ///
  /// - Parameters:
  ///   - request: Request to send to BuyNft.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func buyNft(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgBuyNft,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgBuyNft, Cudoventures_Cudosnode_Marketplace_MsgBuyNftResponse> {
    return self.makeUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.buyNft.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBuyNftInterceptors() ?? []
    )
  }

  /// Unary call to MintNft
  ///
  /// - Parameters:
  ///   - request: Request to send to MintNft.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func mintNft(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgMintNft,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgMintNft, Cudoventures_Cudosnode_Marketplace_MsgMintNftResponse> {
    return self.makeUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.mintNft.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMintNftInterceptors() ?? []
    )
  }

  /// Unary call to RemoveNft
  ///
  /// - Parameters:
  ///   - request: Request to send to RemoveNft.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func removeNft(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgRemoveNft,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgRemoveNft, Cudoventures_Cudosnode_Marketplace_MsgRemoveNftResponse> {
    return self.makeUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.removeNft.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveNftInterceptors() ?? []
    )
  }

  /// Unary call to VerifyCollection
  ///
  /// - Parameters:
  ///   - request: Request to send to VerifyCollection.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func verifyCollection(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection, Cudoventures_Cudosnode_Marketplace_MsgVerifyCollectionResponse> {
    return self.makeUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.verifyCollection.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVerifyCollectionInterceptors() ?? []
    )
  }

  /// Unary call to UnverifyCollection
  ///
  /// - Parameters:
  ///   - request: Request to send to UnverifyCollection.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func unverifyCollection(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection, Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollectionResponse> {
    return self.makeUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.unverifyCollection.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnverifyCollectionInterceptors() ?? []
    )
  }

  /// Unary call to CreateCollection
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateCollection.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createCollection(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgCreateCollection,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgCreateCollection, Cudoventures_Cudosnode_Marketplace_MsgCreateCollectionResponse> {
    return self.makeUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.createCollection.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateCollectionInterceptors() ?? []
    )
  }

  /// Unary call to UpdateRoyalties
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateRoyalties.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateRoyalties(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties, Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyaltiesResponse> {
    return self.makeUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.updateRoyalties.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRoyaltiesInterceptors() ?? []
    )
  }

  /// Unary call to UpdatePrice
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdatePrice.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updatePrice(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice, Cudoventures_Cudosnode_Marketplace_MsgUpdatePriceResponse> {
    return self.makeUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.updatePrice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePriceInterceptors() ?? []
    )
  }

  /// Unary call to AddAdmin
  ///
  /// - Parameters:
  ///   - request: Request to send to AddAdmin.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addAdmin(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgAddAdmin,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgAddAdmin, Cudoventures_Cudosnode_Marketplace_MsgAddAdminResponse> {
    return self.makeUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.addAdmin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddAdminInterceptors() ?? []
    )
  }

  /// this line is used by starport scaffolding # proto/tx/rpc
  ///
  /// - Parameters:
  ///   - request: Request to send to RemoveAdmin.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func removeAdmin(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin, Cudoventures_Cudosnode_Marketplace_MsgRemoveAdminResponse> {
    return self.makeUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.removeAdmin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveAdminInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Cudoventures_Cudosnode_Marketplace_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Cudoventures_Cudosnode_Marketplace_MsgNIOClient")
internal final class Cudoventures_Cudosnode_Marketplace_MsgClient: Cudoventures_Cudosnode_Marketplace_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Cudoventures_Cudosnode_Marketplace_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Cudoventures_Cudosnode_Marketplace_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the cudoventures.cudosnode.marketplace.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Cudoventures_Cudosnode_Marketplace_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Cudoventures_Cudosnode_Marketplace_MsgNIOClient: Cudoventures_Cudosnode_Marketplace_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Cudoventures_Cudosnode_Marketplace_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the cudoventures.cudosnode.marketplace.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Cudoventures_Cudosnode_Marketplace_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Cudoventures_Cudosnode_Marketplace_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Cudoventures_Cudosnode_Marketplace_MsgClientInterceptorFactoryProtocol? { get }

  func makePublishCollectionCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgPublishCollection,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgPublishCollection, Cudoventures_Cudosnode_Marketplace_MsgPublishCollectionResponse>

  func makePublishNftCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgPublishNft,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgPublishNft, Cudoventures_Cudosnode_Marketplace_MsgPublishNftResponse>

  func makeBuyNftCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgBuyNft,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgBuyNft, Cudoventures_Cudosnode_Marketplace_MsgBuyNftResponse>

  func makeMintNftCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgMintNft,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgMintNft, Cudoventures_Cudosnode_Marketplace_MsgMintNftResponse>

  func makeRemoveNftCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgRemoveNft,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgRemoveNft, Cudoventures_Cudosnode_Marketplace_MsgRemoveNftResponse>

  func makeVerifyCollectionCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection, Cudoventures_Cudosnode_Marketplace_MsgVerifyCollectionResponse>

  func makeUnverifyCollectionCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection, Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollectionResponse>

  func makeCreateCollectionCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgCreateCollection,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgCreateCollection, Cudoventures_Cudosnode_Marketplace_MsgCreateCollectionResponse>

  func makeUpdateRoyaltiesCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties, Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyaltiesResponse>

  func makeUpdatePriceCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice, Cudoventures_Cudosnode_Marketplace_MsgUpdatePriceResponse>

  func makeAddAdminCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgAddAdmin,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgAddAdmin, Cudoventures_Cudosnode_Marketplace_MsgAddAdminResponse>

  func makeRemoveAdminCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin, Cudoventures_Cudosnode_Marketplace_MsgRemoveAdminResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Cudoventures_Cudosnode_Marketplace_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Cudoventures_Cudosnode_Marketplace_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makePublishCollectionCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgPublishCollection,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgPublishCollection, Cudoventures_Cudosnode_Marketplace_MsgPublishCollectionResponse> {
    return self.makeAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.publishCollection.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePublishCollectionInterceptors() ?? []
    )
  }

  internal func makePublishNftCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgPublishNft,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgPublishNft, Cudoventures_Cudosnode_Marketplace_MsgPublishNftResponse> {
    return self.makeAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.publishNft.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePublishNftInterceptors() ?? []
    )
  }

  internal func makeBuyNftCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgBuyNft,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgBuyNft, Cudoventures_Cudosnode_Marketplace_MsgBuyNftResponse> {
    return self.makeAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.buyNft.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBuyNftInterceptors() ?? []
    )
  }

  internal func makeMintNftCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgMintNft,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgMintNft, Cudoventures_Cudosnode_Marketplace_MsgMintNftResponse> {
    return self.makeAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.mintNft.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMintNftInterceptors() ?? []
    )
  }

  internal func makeRemoveNftCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgRemoveNft,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgRemoveNft, Cudoventures_Cudosnode_Marketplace_MsgRemoveNftResponse> {
    return self.makeAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.removeNft.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveNftInterceptors() ?? []
    )
  }

  internal func makeVerifyCollectionCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection, Cudoventures_Cudosnode_Marketplace_MsgVerifyCollectionResponse> {
    return self.makeAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.verifyCollection.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVerifyCollectionInterceptors() ?? []
    )
  }

  internal func makeUnverifyCollectionCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection, Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollectionResponse> {
    return self.makeAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.unverifyCollection.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnverifyCollectionInterceptors() ?? []
    )
  }

  internal func makeCreateCollectionCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgCreateCollection,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgCreateCollection, Cudoventures_Cudosnode_Marketplace_MsgCreateCollectionResponse> {
    return self.makeAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.createCollection.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateCollectionInterceptors() ?? []
    )
  }

  internal func makeUpdateRoyaltiesCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties, Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyaltiesResponse> {
    return self.makeAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.updateRoyalties.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRoyaltiesInterceptors() ?? []
    )
  }

  internal func makeUpdatePriceCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice, Cudoventures_Cudosnode_Marketplace_MsgUpdatePriceResponse> {
    return self.makeAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.updatePrice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePriceInterceptors() ?? []
    )
  }

  internal func makeAddAdminCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgAddAdmin,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgAddAdmin, Cudoventures_Cudosnode_Marketplace_MsgAddAdminResponse> {
    return self.makeAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.addAdmin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddAdminInterceptors() ?? []
    )
  }

  internal func makeRemoveAdminCall(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin, Cudoventures_Cudosnode_Marketplace_MsgRemoveAdminResponse> {
    return self.makeAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.removeAdmin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveAdminInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Cudoventures_Cudosnode_Marketplace_MsgAsyncClientProtocol {
  internal func publishCollection(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgPublishCollection,
    callOptions: CallOptions? = nil
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgPublishCollectionResponse {
    return try await self.performAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.publishCollection.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePublishCollectionInterceptors() ?? []
    )
  }

  internal func publishNft(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgPublishNft,
    callOptions: CallOptions? = nil
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgPublishNftResponse {
    return try await self.performAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.publishNft.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePublishNftInterceptors() ?? []
    )
  }

  internal func buyNft(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgBuyNft,
    callOptions: CallOptions? = nil
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgBuyNftResponse {
    return try await self.performAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.buyNft.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBuyNftInterceptors() ?? []
    )
  }

  internal func mintNft(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgMintNft,
    callOptions: CallOptions? = nil
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgMintNftResponse {
    return try await self.performAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.mintNft.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMintNftInterceptors() ?? []
    )
  }

  internal func removeNft(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgRemoveNft,
    callOptions: CallOptions? = nil
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgRemoveNftResponse {
    return try await self.performAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.removeNft.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveNftInterceptors() ?? []
    )
  }

  internal func verifyCollection(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection,
    callOptions: CallOptions? = nil
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgVerifyCollectionResponse {
    return try await self.performAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.verifyCollection.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVerifyCollectionInterceptors() ?? []
    )
  }

  internal func unverifyCollection(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection,
    callOptions: CallOptions? = nil
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollectionResponse {
    return try await self.performAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.unverifyCollection.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnverifyCollectionInterceptors() ?? []
    )
  }

  internal func createCollection(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgCreateCollection,
    callOptions: CallOptions? = nil
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgCreateCollectionResponse {
    return try await self.performAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.createCollection.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateCollectionInterceptors() ?? []
    )
  }

  internal func updateRoyalties(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties,
    callOptions: CallOptions? = nil
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyaltiesResponse {
    return try await self.performAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.updateRoyalties.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRoyaltiesInterceptors() ?? []
    )
  }

  internal func updatePrice(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice,
    callOptions: CallOptions? = nil
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgUpdatePriceResponse {
    return try await self.performAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.updatePrice.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePriceInterceptors() ?? []
    )
  }

  internal func addAdmin(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgAddAdmin,
    callOptions: CallOptions? = nil
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgAddAdminResponse {
    return try await self.performAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.addAdmin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddAdminInterceptors() ?? []
    )
  }

  internal func removeAdmin(
    _ request: Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin,
    callOptions: CallOptions? = nil
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgRemoveAdminResponse {
    return try await self.performAsyncUnaryCall(
      path: Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.removeAdmin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveAdminInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Cudoventures_Cudosnode_Marketplace_MsgAsyncClient: Cudoventures_Cudosnode_Marketplace_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Cudoventures_Cudosnode_Marketplace_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Cudoventures_Cudosnode_Marketplace_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Cudoventures_Cudosnode_Marketplace_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'publishCollection'.
  func makePublishCollectionInterceptors() -> [ClientInterceptor<Cudoventures_Cudosnode_Marketplace_MsgPublishCollection, Cudoventures_Cudosnode_Marketplace_MsgPublishCollectionResponse>]

  /// - Returns: Interceptors to use when invoking 'publishNft'.
  func makePublishNftInterceptors() -> [ClientInterceptor<Cudoventures_Cudosnode_Marketplace_MsgPublishNft, Cudoventures_Cudosnode_Marketplace_MsgPublishNftResponse>]

  /// - Returns: Interceptors to use when invoking 'buyNft'.
  func makeBuyNftInterceptors() -> [ClientInterceptor<Cudoventures_Cudosnode_Marketplace_MsgBuyNft, Cudoventures_Cudosnode_Marketplace_MsgBuyNftResponse>]

  /// - Returns: Interceptors to use when invoking 'mintNft'.
  func makeMintNftInterceptors() -> [ClientInterceptor<Cudoventures_Cudosnode_Marketplace_MsgMintNft, Cudoventures_Cudosnode_Marketplace_MsgMintNftResponse>]

  /// - Returns: Interceptors to use when invoking 'removeNft'.
  func makeRemoveNftInterceptors() -> [ClientInterceptor<Cudoventures_Cudosnode_Marketplace_MsgRemoveNft, Cudoventures_Cudosnode_Marketplace_MsgRemoveNftResponse>]

  /// - Returns: Interceptors to use when invoking 'verifyCollection'.
  func makeVerifyCollectionInterceptors() -> [ClientInterceptor<Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection, Cudoventures_Cudosnode_Marketplace_MsgVerifyCollectionResponse>]

  /// - Returns: Interceptors to use when invoking 'unverifyCollection'.
  func makeUnverifyCollectionInterceptors() -> [ClientInterceptor<Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection, Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollectionResponse>]

  /// - Returns: Interceptors to use when invoking 'createCollection'.
  func makeCreateCollectionInterceptors() -> [ClientInterceptor<Cudoventures_Cudosnode_Marketplace_MsgCreateCollection, Cudoventures_Cudosnode_Marketplace_MsgCreateCollectionResponse>]

  /// - Returns: Interceptors to use when invoking 'updateRoyalties'.
  func makeUpdateRoyaltiesInterceptors() -> [ClientInterceptor<Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties, Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyaltiesResponse>]

  /// - Returns: Interceptors to use when invoking 'updatePrice'.
  func makeUpdatePriceInterceptors() -> [ClientInterceptor<Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice, Cudoventures_Cudosnode_Marketplace_MsgUpdatePriceResponse>]

  /// - Returns: Interceptors to use when invoking 'addAdmin'.
  func makeAddAdminInterceptors() -> [ClientInterceptor<Cudoventures_Cudosnode_Marketplace_MsgAddAdmin, Cudoventures_Cudosnode_Marketplace_MsgAddAdminResponse>]

  /// - Returns: Interceptors to use when invoking 'removeAdmin'.
  func makeRemoveAdminInterceptors() -> [ClientInterceptor<Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin, Cudoventures_Cudosnode_Marketplace_MsgRemoveAdminResponse>]
}

internal enum Cudoventures_Cudosnode_Marketplace_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "cudoventures.cudosnode.marketplace.Msg",
    methods: [
      Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.publishCollection,
      Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.publishNft,
      Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.buyNft,
      Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.mintNft,
      Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.removeNft,
      Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.verifyCollection,
      Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.unverifyCollection,
      Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.createCollection,
      Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.updateRoyalties,
      Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.updatePrice,
      Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.addAdmin,
      Cudoventures_Cudosnode_Marketplace_MsgClientMetadata.Methods.removeAdmin,
    ]
  )

  internal enum Methods {
    internal static let publishCollection = GRPCMethodDescriptor(
      name: "PublishCollection",
      path: "/cudoventures.cudosnode.marketplace.Msg/PublishCollection",
      type: GRPCCallType.unary
    )

    internal static let publishNft = GRPCMethodDescriptor(
      name: "PublishNft",
      path: "/cudoventures.cudosnode.marketplace.Msg/PublishNft",
      type: GRPCCallType.unary
    )

    internal static let buyNft = GRPCMethodDescriptor(
      name: "BuyNft",
      path: "/cudoventures.cudosnode.marketplace.Msg/BuyNft",
      type: GRPCCallType.unary
    )

    internal static let mintNft = GRPCMethodDescriptor(
      name: "MintNft",
      path: "/cudoventures.cudosnode.marketplace.Msg/MintNft",
      type: GRPCCallType.unary
    )

    internal static let removeNft = GRPCMethodDescriptor(
      name: "RemoveNft",
      path: "/cudoventures.cudosnode.marketplace.Msg/RemoveNft",
      type: GRPCCallType.unary
    )

    internal static let verifyCollection = GRPCMethodDescriptor(
      name: "VerifyCollection",
      path: "/cudoventures.cudosnode.marketplace.Msg/VerifyCollection",
      type: GRPCCallType.unary
    )

    internal static let unverifyCollection = GRPCMethodDescriptor(
      name: "UnverifyCollection",
      path: "/cudoventures.cudosnode.marketplace.Msg/UnverifyCollection",
      type: GRPCCallType.unary
    )

    internal static let createCollection = GRPCMethodDescriptor(
      name: "CreateCollection",
      path: "/cudoventures.cudosnode.marketplace.Msg/CreateCollection",
      type: GRPCCallType.unary
    )

    internal static let updateRoyalties = GRPCMethodDescriptor(
      name: "UpdateRoyalties",
      path: "/cudoventures.cudosnode.marketplace.Msg/UpdateRoyalties",
      type: GRPCCallType.unary
    )

    internal static let updatePrice = GRPCMethodDescriptor(
      name: "UpdatePrice",
      path: "/cudoventures.cudosnode.marketplace.Msg/UpdatePrice",
      type: GRPCCallType.unary
    )

    internal static let addAdmin = GRPCMethodDescriptor(
      name: "AddAdmin",
      path: "/cudoventures.cudosnode.marketplace.Msg/AddAdmin",
      type: GRPCCallType.unary
    )

    internal static let removeAdmin = GRPCMethodDescriptor(
      name: "RemoveAdmin",
      path: "/cudoventures.cudosnode.marketplace.Msg/RemoveAdmin",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Cudoventures_Cudosnode_Marketplace_MsgProvider: CallHandlerProvider {
  var interceptors: Cudoventures_Cudosnode_Marketplace_MsgServerInterceptorFactoryProtocol? { get }

  func publishCollection(request: Cudoventures_Cudosnode_Marketplace_MsgPublishCollection, context: StatusOnlyCallContext) -> EventLoopFuture<Cudoventures_Cudosnode_Marketplace_MsgPublishCollectionResponse>

  func publishNft(request: Cudoventures_Cudosnode_Marketplace_MsgPublishNft, context: StatusOnlyCallContext) -> EventLoopFuture<Cudoventures_Cudosnode_Marketplace_MsgPublishNftResponse>

  func buyNft(request: Cudoventures_Cudosnode_Marketplace_MsgBuyNft, context: StatusOnlyCallContext) -> EventLoopFuture<Cudoventures_Cudosnode_Marketplace_MsgBuyNftResponse>

  func mintNft(request: Cudoventures_Cudosnode_Marketplace_MsgMintNft, context: StatusOnlyCallContext) -> EventLoopFuture<Cudoventures_Cudosnode_Marketplace_MsgMintNftResponse>

  func removeNft(request: Cudoventures_Cudosnode_Marketplace_MsgRemoveNft, context: StatusOnlyCallContext) -> EventLoopFuture<Cudoventures_Cudosnode_Marketplace_MsgRemoveNftResponse>

  func verifyCollection(request: Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection, context: StatusOnlyCallContext) -> EventLoopFuture<Cudoventures_Cudosnode_Marketplace_MsgVerifyCollectionResponse>

  func unverifyCollection(request: Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection, context: StatusOnlyCallContext) -> EventLoopFuture<Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollectionResponse>

  func createCollection(request: Cudoventures_Cudosnode_Marketplace_MsgCreateCollection, context: StatusOnlyCallContext) -> EventLoopFuture<Cudoventures_Cudosnode_Marketplace_MsgCreateCollectionResponse>

  func updateRoyalties(request: Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties, context: StatusOnlyCallContext) -> EventLoopFuture<Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyaltiesResponse>

  func updatePrice(request: Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice, context: StatusOnlyCallContext) -> EventLoopFuture<Cudoventures_Cudosnode_Marketplace_MsgUpdatePriceResponse>

  func addAdmin(request: Cudoventures_Cudosnode_Marketplace_MsgAddAdmin, context: StatusOnlyCallContext) -> EventLoopFuture<Cudoventures_Cudosnode_Marketplace_MsgAddAdminResponse>

  /// this line is used by starport scaffolding # proto/tx/rpc
  func removeAdmin(request: Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin, context: StatusOnlyCallContext) -> EventLoopFuture<Cudoventures_Cudosnode_Marketplace_MsgRemoveAdminResponse>
}

extension Cudoventures_Cudosnode_Marketplace_MsgProvider {
  internal var serviceName: Substring {
    return Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "PublishCollection":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgPublishCollection>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgPublishCollectionResponse>(),
        interceptors: self.interceptors?.makePublishCollectionInterceptors() ?? [],
        userFunction: self.publishCollection(request:context:)
      )

    case "PublishNft":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgPublishNft>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgPublishNftResponse>(),
        interceptors: self.interceptors?.makePublishNftInterceptors() ?? [],
        userFunction: self.publishNft(request:context:)
      )

    case "BuyNft":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgBuyNft>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgBuyNftResponse>(),
        interceptors: self.interceptors?.makeBuyNftInterceptors() ?? [],
        userFunction: self.buyNft(request:context:)
      )

    case "MintNft":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgMintNft>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgMintNftResponse>(),
        interceptors: self.interceptors?.makeMintNftInterceptors() ?? [],
        userFunction: self.mintNft(request:context:)
      )

    case "RemoveNft":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgRemoveNft>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgRemoveNftResponse>(),
        interceptors: self.interceptors?.makeRemoveNftInterceptors() ?? [],
        userFunction: self.removeNft(request:context:)
      )

    case "VerifyCollection":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgVerifyCollectionResponse>(),
        interceptors: self.interceptors?.makeVerifyCollectionInterceptors() ?? [],
        userFunction: self.verifyCollection(request:context:)
      )

    case "UnverifyCollection":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollectionResponse>(),
        interceptors: self.interceptors?.makeUnverifyCollectionInterceptors() ?? [],
        userFunction: self.unverifyCollection(request:context:)
      )

    case "CreateCollection":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgCreateCollection>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgCreateCollectionResponse>(),
        interceptors: self.interceptors?.makeCreateCollectionInterceptors() ?? [],
        userFunction: self.createCollection(request:context:)
      )

    case "UpdateRoyalties":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyaltiesResponse>(),
        interceptors: self.interceptors?.makeUpdateRoyaltiesInterceptors() ?? [],
        userFunction: self.updateRoyalties(request:context:)
      )

    case "UpdatePrice":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgUpdatePriceResponse>(),
        interceptors: self.interceptors?.makeUpdatePriceInterceptors() ?? [],
        userFunction: self.updatePrice(request:context:)
      )

    case "AddAdmin":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgAddAdmin>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgAddAdminResponse>(),
        interceptors: self.interceptors?.makeAddAdminInterceptors() ?? [],
        userFunction: self.addAdmin(request:context:)
      )

    case "RemoveAdmin":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgRemoveAdminResponse>(),
        interceptors: self.interceptors?.makeRemoveAdminInterceptors() ?? [],
        userFunction: self.removeAdmin(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Cudoventures_Cudosnode_Marketplace_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Cudoventures_Cudosnode_Marketplace_MsgServerInterceptorFactoryProtocol? { get }

  @Sendable func publishCollection(
    request: Cudoventures_Cudosnode_Marketplace_MsgPublishCollection,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgPublishCollectionResponse

  @Sendable func publishNft(
    request: Cudoventures_Cudosnode_Marketplace_MsgPublishNft,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgPublishNftResponse

  @Sendable func buyNft(
    request: Cudoventures_Cudosnode_Marketplace_MsgBuyNft,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgBuyNftResponse

  @Sendable func mintNft(
    request: Cudoventures_Cudosnode_Marketplace_MsgMintNft,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgMintNftResponse

  @Sendable func removeNft(
    request: Cudoventures_Cudosnode_Marketplace_MsgRemoveNft,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgRemoveNftResponse

  @Sendable func verifyCollection(
    request: Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgVerifyCollectionResponse

  @Sendable func unverifyCollection(
    request: Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollectionResponse

  @Sendable func createCollection(
    request: Cudoventures_Cudosnode_Marketplace_MsgCreateCollection,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgCreateCollectionResponse

  @Sendable func updateRoyalties(
    request: Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyaltiesResponse

  @Sendable func updatePrice(
    request: Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgUpdatePriceResponse

  @Sendable func addAdmin(
    request: Cudoventures_Cudosnode_Marketplace_MsgAddAdmin,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgAddAdminResponse

  /// this line is used by starport scaffolding # proto/tx/rpc
  @Sendable func removeAdmin(
    request: Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cudoventures_Cudosnode_Marketplace_MsgRemoveAdminResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Cudoventures_Cudosnode_Marketplace_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Cudoventures_Cudosnode_Marketplace_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "PublishCollection":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgPublishCollection>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgPublishCollectionResponse>(),
        interceptors: self.interceptors?.makePublishCollectionInterceptors() ?? [],
        wrapping: self.publishCollection(request:context:)
      )

    case "PublishNft":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgPublishNft>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgPublishNftResponse>(),
        interceptors: self.interceptors?.makePublishNftInterceptors() ?? [],
        wrapping: self.publishNft(request:context:)
      )

    case "BuyNft":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgBuyNft>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgBuyNftResponse>(),
        interceptors: self.interceptors?.makeBuyNftInterceptors() ?? [],
        wrapping: self.buyNft(request:context:)
      )

    case "MintNft":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgMintNft>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgMintNftResponse>(),
        interceptors: self.interceptors?.makeMintNftInterceptors() ?? [],
        wrapping: self.mintNft(request:context:)
      )

    case "RemoveNft":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgRemoveNft>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgRemoveNftResponse>(),
        interceptors: self.interceptors?.makeRemoveNftInterceptors() ?? [],
        wrapping: self.removeNft(request:context:)
      )

    case "VerifyCollection":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgVerifyCollectionResponse>(),
        interceptors: self.interceptors?.makeVerifyCollectionInterceptors() ?? [],
        wrapping: self.verifyCollection(request:context:)
      )

    case "UnverifyCollection":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollectionResponse>(),
        interceptors: self.interceptors?.makeUnverifyCollectionInterceptors() ?? [],
        wrapping: self.unverifyCollection(request:context:)
      )

    case "CreateCollection":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgCreateCollection>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgCreateCollectionResponse>(),
        interceptors: self.interceptors?.makeCreateCollectionInterceptors() ?? [],
        wrapping: self.createCollection(request:context:)
      )

    case "UpdateRoyalties":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyaltiesResponse>(),
        interceptors: self.interceptors?.makeUpdateRoyaltiesInterceptors() ?? [],
        wrapping: self.updateRoyalties(request:context:)
      )

    case "UpdatePrice":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgUpdatePriceResponse>(),
        interceptors: self.interceptors?.makeUpdatePriceInterceptors() ?? [],
        wrapping: self.updatePrice(request:context:)
      )

    case "AddAdmin":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgAddAdmin>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgAddAdminResponse>(),
        interceptors: self.interceptors?.makeAddAdminInterceptors() ?? [],
        wrapping: self.addAdmin(request:context:)
      )

    case "RemoveAdmin":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin>(),
        responseSerializer: ProtobufSerializer<Cudoventures_Cudosnode_Marketplace_MsgRemoveAdminResponse>(),
        interceptors: self.interceptors?.makeRemoveAdminInterceptors() ?? [],
        wrapping: self.removeAdmin(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Cudoventures_Cudosnode_Marketplace_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'publishCollection'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makePublishCollectionInterceptors() -> [ServerInterceptor<Cudoventures_Cudosnode_Marketplace_MsgPublishCollection, Cudoventures_Cudosnode_Marketplace_MsgPublishCollectionResponse>]

  /// - Returns: Interceptors to use when handling 'publishNft'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makePublishNftInterceptors() -> [ServerInterceptor<Cudoventures_Cudosnode_Marketplace_MsgPublishNft, Cudoventures_Cudosnode_Marketplace_MsgPublishNftResponse>]

  /// - Returns: Interceptors to use when handling 'buyNft'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBuyNftInterceptors() -> [ServerInterceptor<Cudoventures_Cudosnode_Marketplace_MsgBuyNft, Cudoventures_Cudosnode_Marketplace_MsgBuyNftResponse>]

  /// - Returns: Interceptors to use when handling 'mintNft'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMintNftInterceptors() -> [ServerInterceptor<Cudoventures_Cudosnode_Marketplace_MsgMintNft, Cudoventures_Cudosnode_Marketplace_MsgMintNftResponse>]

  /// - Returns: Interceptors to use when handling 'removeNft'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRemoveNftInterceptors() -> [ServerInterceptor<Cudoventures_Cudosnode_Marketplace_MsgRemoveNft, Cudoventures_Cudosnode_Marketplace_MsgRemoveNftResponse>]

  /// - Returns: Interceptors to use when handling 'verifyCollection'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeVerifyCollectionInterceptors() -> [ServerInterceptor<Cudoventures_Cudosnode_Marketplace_MsgVerifyCollection, Cudoventures_Cudosnode_Marketplace_MsgVerifyCollectionResponse>]

  /// - Returns: Interceptors to use when handling 'unverifyCollection'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUnverifyCollectionInterceptors() -> [ServerInterceptor<Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollection, Cudoventures_Cudosnode_Marketplace_MsgUnverifyCollectionResponse>]

  /// - Returns: Interceptors to use when handling 'createCollection'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateCollectionInterceptors() -> [ServerInterceptor<Cudoventures_Cudosnode_Marketplace_MsgCreateCollection, Cudoventures_Cudosnode_Marketplace_MsgCreateCollectionResponse>]

  /// - Returns: Interceptors to use when handling 'updateRoyalties'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateRoyaltiesInterceptors() -> [ServerInterceptor<Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyalties, Cudoventures_Cudosnode_Marketplace_MsgUpdateRoyaltiesResponse>]

  /// - Returns: Interceptors to use when handling 'updatePrice'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdatePriceInterceptors() -> [ServerInterceptor<Cudoventures_Cudosnode_Marketplace_MsgUpdatePrice, Cudoventures_Cudosnode_Marketplace_MsgUpdatePriceResponse>]

  /// - Returns: Interceptors to use when handling 'addAdmin'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddAdminInterceptors() -> [ServerInterceptor<Cudoventures_Cudosnode_Marketplace_MsgAddAdmin, Cudoventures_Cudosnode_Marketplace_MsgAddAdminResponse>]

  /// - Returns: Interceptors to use when handling 'removeAdmin'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRemoveAdminInterceptors() -> [ServerInterceptor<Cudoventures_Cudosnode_Marketplace_MsgRemoveAdmin, Cudoventures_Cudosnode_Marketplace_MsgRemoveAdminResponse>]
}

internal enum Cudoventures_Cudosnode_Marketplace_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "cudoventures.cudosnode.marketplace.Msg",
    methods: [
      Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.Methods.publishCollection,
      Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.Methods.publishNft,
      Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.Methods.buyNft,
      Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.Methods.mintNft,
      Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.Methods.removeNft,
      Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.Methods.verifyCollection,
      Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.Methods.unverifyCollection,
      Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.Methods.createCollection,
      Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.Methods.updateRoyalties,
      Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.Methods.updatePrice,
      Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.Methods.addAdmin,
      Cudoventures_Cudosnode_Marketplace_MsgServerMetadata.Methods.removeAdmin,
    ]
  )

  internal enum Methods {
    internal static let publishCollection = GRPCMethodDescriptor(
      name: "PublishCollection",
      path: "/cudoventures.cudosnode.marketplace.Msg/PublishCollection",
      type: GRPCCallType.unary
    )

    internal static let publishNft = GRPCMethodDescriptor(
      name: "PublishNft",
      path: "/cudoventures.cudosnode.marketplace.Msg/PublishNft",
      type: GRPCCallType.unary
    )

    internal static let buyNft = GRPCMethodDescriptor(
      name: "BuyNft",
      path: "/cudoventures.cudosnode.marketplace.Msg/BuyNft",
      type: GRPCCallType.unary
    )

    internal static let mintNft = GRPCMethodDescriptor(
      name: "MintNft",
      path: "/cudoventures.cudosnode.marketplace.Msg/MintNft",
      type: GRPCCallType.unary
    )

    internal static let removeNft = GRPCMethodDescriptor(
      name: "RemoveNft",
      path: "/cudoventures.cudosnode.marketplace.Msg/RemoveNft",
      type: GRPCCallType.unary
    )

    internal static let verifyCollection = GRPCMethodDescriptor(
      name: "VerifyCollection",
      path: "/cudoventures.cudosnode.marketplace.Msg/VerifyCollection",
      type: GRPCCallType.unary
    )

    internal static let unverifyCollection = GRPCMethodDescriptor(
      name: "UnverifyCollection",
      path: "/cudoventures.cudosnode.marketplace.Msg/UnverifyCollection",
      type: GRPCCallType.unary
    )

    internal static let createCollection = GRPCMethodDescriptor(
      name: "CreateCollection",
      path: "/cudoventures.cudosnode.marketplace.Msg/CreateCollection",
      type: GRPCCallType.unary
    )

    internal static let updateRoyalties = GRPCMethodDescriptor(
      name: "UpdateRoyalties",
      path: "/cudoventures.cudosnode.marketplace.Msg/UpdateRoyalties",
      type: GRPCCallType.unary
    )

    internal static let updatePrice = GRPCMethodDescriptor(
      name: "UpdatePrice",
      path: "/cudoventures.cudosnode.marketplace.Msg/UpdatePrice",
      type: GRPCCallType.unary
    )

    internal static let addAdmin = GRPCMethodDescriptor(
      name: "AddAdmin",
      path: "/cudoventures.cudosnode.marketplace.Msg/AddAdmin",
      type: GRPCCallType.unary
    )

    internal static let removeAdmin = GRPCMethodDescriptor(
      name: "RemoveAdmin",
      path: "/cudoventures.cudosnode.marketplace.Msg/RemoveAdmin",
      type: GRPCCallType.unary
    )
  }
}

//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: iov/starname/v1beta1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the starname Msg service.
///
/// Usage: instantiate `Starnamed_X_Starname_V1beta1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Starnamed_X_Starname_V1beta1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Starnamed_X_Starname_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func addAccountCertificate(
    _ request: Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate, Starnamed_X_Starname_V1beta1_MsgAddAccountCertificateResponse>

  func deleteAccount(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteAccount,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgDeleteAccount, Starnamed_X_Starname_V1beta1_MsgDeleteAccountResponse>

  func deleteAccountCertificate(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate, Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificateResponse>

  func deleteDomain(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteDomain,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgDeleteDomain, Starnamed_X_Starname_V1beta1_MsgDeleteDomainResponse>

  func registerAccount(
    _ request: Starnamed_X_Starname_V1beta1_MsgRegisterAccount,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgRegisterAccount, Starnamed_X_Starname_V1beta1_MsgRegisterAccountResponse>

  func registerDomain(
    _ request: Starnamed_X_Starname_V1beta1_MsgRegisterDomain,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgRegisterDomain, Starnamed_X_Starname_V1beta1_MsgRegisterDomainResponse>

  func renewAccount(
    _ request: Starnamed_X_Starname_V1beta1_MsgRenewAccount,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgRenewAccount, Starnamed_X_Starname_V1beta1_MsgRenewAccountResponse>

  func renewDomain(
    _ request: Starnamed_X_Starname_V1beta1_MsgRenewDomain,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgRenewDomain, Starnamed_X_Starname_V1beta1_MsgRenewDomainResponse>

  func replaceAccountMetadata(
    _ request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata, Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadataResponse>

  func replaceAccountResources(
    _ request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources, Starnamed_X_Starname_V1beta1_MsgReplaceAccountResourcesResponse>

  func transferAccount(
    _ request: Starnamed_X_Starname_V1beta1_MsgTransferAccount,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgTransferAccount, Starnamed_X_Starname_V1beta1_MsgTransferAccountResponse>

  func transferDomain(
    _ request: Starnamed_X_Starname_V1beta1_MsgTransferDomain,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgTransferDomain, Starnamed_X_Starname_V1beta1_MsgTransferDomainResponse>
}

extension Starnamed_X_Starname_V1beta1_MsgClientProtocol {
  internal var serviceName: String {
    return "starnamed.x.starname.v1beta1.Msg"
  }

  /// AddAccountCertificate adds a certificate to an Account
  ///
  /// - Parameters:
  ///   - request: Request to send to AddAccountCertificate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addAccountCertificate(
    _ request: Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate, Starnamed_X_Starname_V1beta1_MsgAddAccountCertificateResponse> {
    return self.makeUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.addAccountCertificate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddAccountCertificateInterceptors() ?? []
    )
  }

  /// DeleteAccount registers a Domain
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAccount(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteAccount,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgDeleteAccount, Starnamed_X_Starname_V1beta1_MsgDeleteAccountResponse> {
    return self.makeUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.deleteAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAccountInterceptors() ?? []
    )
  }

  /// DeleteAccountCertificate deletes a certificate from an account
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAccountCertificate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAccountCertificate(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate, Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificateResponse> {
    return self.makeUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.deleteAccountCertificate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAccountCertificateInterceptors() ?? []
    )
  }

  /// DeleteDomain registers a Domain
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteDomain.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteDomain(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteDomain,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgDeleteDomain, Starnamed_X_Starname_V1beta1_MsgDeleteDomainResponse> {
    return self.makeUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.deleteDomain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDomainInterceptors() ?? []
    )
  }

  /// RegisterAccount registers an Account
  ///
  /// - Parameters:
  ///   - request: Request to send to RegisterAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func registerAccount(
    _ request: Starnamed_X_Starname_V1beta1_MsgRegisterAccount,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgRegisterAccount, Starnamed_X_Starname_V1beta1_MsgRegisterAccountResponse> {
    return self.makeUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.registerAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterAccountInterceptors() ?? []
    )
  }

  /// RegisterDomain registers a Domain
  ///
  /// - Parameters:
  ///   - request: Request to send to RegisterDomain.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func registerDomain(
    _ request: Starnamed_X_Starname_V1beta1_MsgRegisterDomain,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgRegisterDomain, Starnamed_X_Starname_V1beta1_MsgRegisterDomainResponse> {
    return self.makeUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.registerDomain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterDomainInterceptors() ?? []
    )
  }

  /// RenewAccount registers a Domain
  ///
  /// - Parameters:
  ///   - request: Request to send to RenewAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func renewAccount(
    _ request: Starnamed_X_Starname_V1beta1_MsgRenewAccount,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgRenewAccount, Starnamed_X_Starname_V1beta1_MsgRenewAccountResponse> {
    return self.makeUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.renewAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRenewAccountInterceptors() ?? []
    )
  }

  /// RenewDomain registers a Domain
  ///
  /// - Parameters:
  ///   - request: Request to send to RenewDomain.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func renewDomain(
    _ request: Starnamed_X_Starname_V1beta1_MsgRenewDomain,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgRenewDomain, Starnamed_X_Starname_V1beta1_MsgRenewDomainResponse> {
    return self.makeUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.renewDomain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRenewDomainInterceptors() ?? []
    )
  }

  /// ReplaceAccountMetadata registers a Domain
  ///
  /// - Parameters:
  ///   - request: Request to send to ReplaceAccountMetadata.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func replaceAccountMetadata(
    _ request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata, Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadataResponse> {
    return self.makeUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.replaceAccountMetadata.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReplaceAccountMetadataInterceptors() ?? []
    )
  }

  /// ReplaceAccountResources registers a Domain
  ///
  /// - Parameters:
  ///   - request: Request to send to ReplaceAccountResources.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func replaceAccountResources(
    _ request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources, Starnamed_X_Starname_V1beta1_MsgReplaceAccountResourcesResponse> {
    return self.makeUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.replaceAccountResources.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReplaceAccountResourcesInterceptors() ?? []
    )
  }

  /// TransferAccount registers a Domain
  ///
  /// - Parameters:
  ///   - request: Request to send to TransferAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func transferAccount(
    _ request: Starnamed_X_Starname_V1beta1_MsgTransferAccount,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgTransferAccount, Starnamed_X_Starname_V1beta1_MsgTransferAccountResponse> {
    return self.makeUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.transferAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTransferAccountInterceptors() ?? []
    )
  }

  /// TransferDomain registers a Domain
  ///
  /// - Parameters:
  ///   - request: Request to send to TransferDomain.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func transferDomain(
    _ request: Starnamed_X_Starname_V1beta1_MsgTransferDomain,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Starname_V1beta1_MsgTransferDomain, Starnamed_X_Starname_V1beta1_MsgTransferDomainResponse> {
    return self.makeUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.transferDomain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTransferDomainInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Starnamed_X_Starname_V1beta1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Starnamed_X_Starname_V1beta1_MsgNIOClient")
internal final class Starnamed_X_Starname_V1beta1_MsgClient: Starnamed_X_Starname_V1beta1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Starnamed_X_Starname_V1beta1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Starnamed_X_Starname_V1beta1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the starnamed.x.starname.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Starnamed_X_Starname_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Starnamed_X_Starname_V1beta1_MsgNIOClient: Starnamed_X_Starname_V1beta1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Starnamed_X_Starname_V1beta1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the starnamed.x.starname.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Starnamed_X_Starname_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the starname Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Starnamed_X_Starname_V1beta1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Starnamed_X_Starname_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func makeAddAccountCertificateCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate, Starnamed_X_Starname_V1beta1_MsgAddAccountCertificateResponse>

  func makeDeleteAccountCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteAccount,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgDeleteAccount, Starnamed_X_Starname_V1beta1_MsgDeleteAccountResponse>

  func makeDeleteAccountCertificateCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate, Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificateResponse>

  func makeDeleteDomainCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteDomain,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgDeleteDomain, Starnamed_X_Starname_V1beta1_MsgDeleteDomainResponse>

  func makeRegisterAccountCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgRegisterAccount,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgRegisterAccount, Starnamed_X_Starname_V1beta1_MsgRegisterAccountResponse>

  func makeRegisterDomainCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgRegisterDomain,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgRegisterDomain, Starnamed_X_Starname_V1beta1_MsgRegisterDomainResponse>

  func makeRenewAccountCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgRenewAccount,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgRenewAccount, Starnamed_X_Starname_V1beta1_MsgRenewAccountResponse>

  func makeRenewDomainCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgRenewDomain,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgRenewDomain, Starnamed_X_Starname_V1beta1_MsgRenewDomainResponse>

  func makeReplaceAccountMetadataCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata, Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadataResponse>

  func makeReplaceAccountResourcesCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources, Starnamed_X_Starname_V1beta1_MsgReplaceAccountResourcesResponse>

  func makeTransferAccountCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgTransferAccount,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgTransferAccount, Starnamed_X_Starname_V1beta1_MsgTransferAccountResponse>

  func makeTransferDomainCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgTransferDomain,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgTransferDomain, Starnamed_X_Starname_V1beta1_MsgTransferDomainResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Starnamed_X_Starname_V1beta1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Starnamed_X_Starname_V1beta1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Starnamed_X_Starname_V1beta1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeAddAccountCertificateCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate, Starnamed_X_Starname_V1beta1_MsgAddAccountCertificateResponse> {
    return self.makeAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.addAccountCertificate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddAccountCertificateInterceptors() ?? []
    )
  }

  internal func makeDeleteAccountCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteAccount,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgDeleteAccount, Starnamed_X_Starname_V1beta1_MsgDeleteAccountResponse> {
    return self.makeAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.deleteAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAccountInterceptors() ?? []
    )
  }

  internal func makeDeleteAccountCertificateCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate, Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificateResponse> {
    return self.makeAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.deleteAccountCertificate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAccountCertificateInterceptors() ?? []
    )
  }

  internal func makeDeleteDomainCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteDomain,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgDeleteDomain, Starnamed_X_Starname_V1beta1_MsgDeleteDomainResponse> {
    return self.makeAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.deleteDomain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDomainInterceptors() ?? []
    )
  }

  internal func makeRegisterAccountCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgRegisterAccount,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgRegisterAccount, Starnamed_X_Starname_V1beta1_MsgRegisterAccountResponse> {
    return self.makeAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.registerAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterAccountInterceptors() ?? []
    )
  }

  internal func makeRegisterDomainCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgRegisterDomain,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgRegisterDomain, Starnamed_X_Starname_V1beta1_MsgRegisterDomainResponse> {
    return self.makeAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.registerDomain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterDomainInterceptors() ?? []
    )
  }

  internal func makeRenewAccountCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgRenewAccount,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgRenewAccount, Starnamed_X_Starname_V1beta1_MsgRenewAccountResponse> {
    return self.makeAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.renewAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRenewAccountInterceptors() ?? []
    )
  }

  internal func makeRenewDomainCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgRenewDomain,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgRenewDomain, Starnamed_X_Starname_V1beta1_MsgRenewDomainResponse> {
    return self.makeAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.renewDomain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRenewDomainInterceptors() ?? []
    )
  }

  internal func makeReplaceAccountMetadataCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata, Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadataResponse> {
    return self.makeAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.replaceAccountMetadata.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReplaceAccountMetadataInterceptors() ?? []
    )
  }

  internal func makeReplaceAccountResourcesCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources, Starnamed_X_Starname_V1beta1_MsgReplaceAccountResourcesResponse> {
    return self.makeAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.replaceAccountResources.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReplaceAccountResourcesInterceptors() ?? []
    )
  }

  internal func makeTransferAccountCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgTransferAccount,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgTransferAccount, Starnamed_X_Starname_V1beta1_MsgTransferAccountResponse> {
    return self.makeAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.transferAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTransferAccountInterceptors() ?? []
    )
  }

  internal func makeTransferDomainCall(
    _ request: Starnamed_X_Starname_V1beta1_MsgTransferDomain,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Starnamed_X_Starname_V1beta1_MsgTransferDomain, Starnamed_X_Starname_V1beta1_MsgTransferDomainResponse> {
    return self.makeAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.transferDomain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTransferDomainInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Starnamed_X_Starname_V1beta1_MsgAsyncClientProtocol {
  internal func addAccountCertificate(
    _ request: Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate,
    callOptions: CallOptions? = nil
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgAddAccountCertificateResponse {
    return try await self.performAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.addAccountCertificate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddAccountCertificateInterceptors() ?? []
    )
  }

  internal func deleteAccount(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteAccount,
    callOptions: CallOptions? = nil
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgDeleteAccountResponse {
    return try await self.performAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.deleteAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAccountInterceptors() ?? []
    )
  }

  internal func deleteAccountCertificate(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate,
    callOptions: CallOptions? = nil
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificateResponse {
    return try await self.performAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.deleteAccountCertificate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAccountCertificateInterceptors() ?? []
    )
  }

  internal func deleteDomain(
    _ request: Starnamed_X_Starname_V1beta1_MsgDeleteDomain,
    callOptions: CallOptions? = nil
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgDeleteDomainResponse {
    return try await self.performAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.deleteDomain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDomainInterceptors() ?? []
    )
  }

  internal func registerAccount(
    _ request: Starnamed_X_Starname_V1beta1_MsgRegisterAccount,
    callOptions: CallOptions? = nil
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgRegisterAccountResponse {
    return try await self.performAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.registerAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterAccountInterceptors() ?? []
    )
  }

  internal func registerDomain(
    _ request: Starnamed_X_Starname_V1beta1_MsgRegisterDomain,
    callOptions: CallOptions? = nil
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgRegisterDomainResponse {
    return try await self.performAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.registerDomain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterDomainInterceptors() ?? []
    )
  }

  internal func renewAccount(
    _ request: Starnamed_X_Starname_V1beta1_MsgRenewAccount,
    callOptions: CallOptions? = nil
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgRenewAccountResponse {
    return try await self.performAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.renewAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRenewAccountInterceptors() ?? []
    )
  }

  internal func renewDomain(
    _ request: Starnamed_X_Starname_V1beta1_MsgRenewDomain,
    callOptions: CallOptions? = nil
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgRenewDomainResponse {
    return try await self.performAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.renewDomain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRenewDomainInterceptors() ?? []
    )
  }

  internal func replaceAccountMetadata(
    _ request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata,
    callOptions: CallOptions? = nil
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadataResponse {
    return try await self.performAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.replaceAccountMetadata.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReplaceAccountMetadataInterceptors() ?? []
    )
  }

  internal func replaceAccountResources(
    _ request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources,
    callOptions: CallOptions? = nil
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgReplaceAccountResourcesResponse {
    return try await self.performAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.replaceAccountResources.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReplaceAccountResourcesInterceptors() ?? []
    )
  }

  internal func transferAccount(
    _ request: Starnamed_X_Starname_V1beta1_MsgTransferAccount,
    callOptions: CallOptions? = nil
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgTransferAccountResponse {
    return try await self.performAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.transferAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTransferAccountInterceptors() ?? []
    )
  }

  internal func transferDomain(
    _ request: Starnamed_X_Starname_V1beta1_MsgTransferDomain,
    callOptions: CallOptions? = nil
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgTransferDomainResponse {
    return try await self.performAsyncUnaryCall(
      path: Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.transferDomain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTransferDomainInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Starnamed_X_Starname_V1beta1_MsgAsyncClient: Starnamed_X_Starname_V1beta1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Starnamed_X_Starname_V1beta1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Starnamed_X_Starname_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Starnamed_X_Starname_V1beta1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'addAccountCertificate'.
  func makeAddAccountCertificateInterceptors() -> [ClientInterceptor<Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate, Starnamed_X_Starname_V1beta1_MsgAddAccountCertificateResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteAccount'.
  func makeDeleteAccountInterceptors() -> [ClientInterceptor<Starnamed_X_Starname_V1beta1_MsgDeleteAccount, Starnamed_X_Starname_V1beta1_MsgDeleteAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteAccountCertificate'.
  func makeDeleteAccountCertificateInterceptors() -> [ClientInterceptor<Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate, Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificateResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteDomain'.
  func makeDeleteDomainInterceptors() -> [ClientInterceptor<Starnamed_X_Starname_V1beta1_MsgDeleteDomain, Starnamed_X_Starname_V1beta1_MsgDeleteDomainResponse>]

  /// - Returns: Interceptors to use when invoking 'registerAccount'.
  func makeRegisterAccountInterceptors() -> [ClientInterceptor<Starnamed_X_Starname_V1beta1_MsgRegisterAccount, Starnamed_X_Starname_V1beta1_MsgRegisterAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'registerDomain'.
  func makeRegisterDomainInterceptors() -> [ClientInterceptor<Starnamed_X_Starname_V1beta1_MsgRegisterDomain, Starnamed_X_Starname_V1beta1_MsgRegisterDomainResponse>]

  /// - Returns: Interceptors to use when invoking 'renewAccount'.
  func makeRenewAccountInterceptors() -> [ClientInterceptor<Starnamed_X_Starname_V1beta1_MsgRenewAccount, Starnamed_X_Starname_V1beta1_MsgRenewAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'renewDomain'.
  func makeRenewDomainInterceptors() -> [ClientInterceptor<Starnamed_X_Starname_V1beta1_MsgRenewDomain, Starnamed_X_Starname_V1beta1_MsgRenewDomainResponse>]

  /// - Returns: Interceptors to use when invoking 'replaceAccountMetadata'.
  func makeReplaceAccountMetadataInterceptors() -> [ClientInterceptor<Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata, Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadataResponse>]

  /// - Returns: Interceptors to use when invoking 'replaceAccountResources'.
  func makeReplaceAccountResourcesInterceptors() -> [ClientInterceptor<Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources, Starnamed_X_Starname_V1beta1_MsgReplaceAccountResourcesResponse>]

  /// - Returns: Interceptors to use when invoking 'transferAccount'.
  func makeTransferAccountInterceptors() -> [ClientInterceptor<Starnamed_X_Starname_V1beta1_MsgTransferAccount, Starnamed_X_Starname_V1beta1_MsgTransferAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'transferDomain'.
  func makeTransferDomainInterceptors() -> [ClientInterceptor<Starnamed_X_Starname_V1beta1_MsgTransferDomain, Starnamed_X_Starname_V1beta1_MsgTransferDomainResponse>]
}

internal enum Starnamed_X_Starname_V1beta1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "starnamed.x.starname.v1beta1.Msg",
    methods: [
      Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.addAccountCertificate,
      Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.deleteAccount,
      Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.deleteAccountCertificate,
      Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.deleteDomain,
      Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.registerAccount,
      Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.registerDomain,
      Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.renewAccount,
      Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.renewDomain,
      Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.replaceAccountMetadata,
      Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.replaceAccountResources,
      Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.transferAccount,
      Starnamed_X_Starname_V1beta1_MsgClientMetadata.Methods.transferDomain,
    ]
  )

  internal enum Methods {
    internal static let addAccountCertificate = GRPCMethodDescriptor(
      name: "AddAccountCertificate",
      path: "/starnamed.x.starname.v1beta1.Msg/AddAccountCertificate",
      type: GRPCCallType.unary
    )

    internal static let deleteAccount = GRPCMethodDescriptor(
      name: "DeleteAccount",
      path: "/starnamed.x.starname.v1beta1.Msg/DeleteAccount",
      type: GRPCCallType.unary
    )

    internal static let deleteAccountCertificate = GRPCMethodDescriptor(
      name: "DeleteAccountCertificate",
      path: "/starnamed.x.starname.v1beta1.Msg/DeleteAccountCertificate",
      type: GRPCCallType.unary
    )

    internal static let deleteDomain = GRPCMethodDescriptor(
      name: "DeleteDomain",
      path: "/starnamed.x.starname.v1beta1.Msg/DeleteDomain",
      type: GRPCCallType.unary
    )

    internal static let registerAccount = GRPCMethodDescriptor(
      name: "RegisterAccount",
      path: "/starnamed.x.starname.v1beta1.Msg/RegisterAccount",
      type: GRPCCallType.unary
    )

    internal static let registerDomain = GRPCMethodDescriptor(
      name: "RegisterDomain",
      path: "/starnamed.x.starname.v1beta1.Msg/RegisterDomain",
      type: GRPCCallType.unary
    )

    internal static let renewAccount = GRPCMethodDescriptor(
      name: "RenewAccount",
      path: "/starnamed.x.starname.v1beta1.Msg/RenewAccount",
      type: GRPCCallType.unary
    )

    internal static let renewDomain = GRPCMethodDescriptor(
      name: "RenewDomain",
      path: "/starnamed.x.starname.v1beta1.Msg/RenewDomain",
      type: GRPCCallType.unary
    )

    internal static let replaceAccountMetadata = GRPCMethodDescriptor(
      name: "ReplaceAccountMetadata",
      path: "/starnamed.x.starname.v1beta1.Msg/ReplaceAccountMetadata",
      type: GRPCCallType.unary
    )

    internal static let replaceAccountResources = GRPCMethodDescriptor(
      name: "ReplaceAccountResources",
      path: "/starnamed.x.starname.v1beta1.Msg/ReplaceAccountResources",
      type: GRPCCallType.unary
    )

    internal static let transferAccount = GRPCMethodDescriptor(
      name: "TransferAccount",
      path: "/starnamed.x.starname.v1beta1.Msg/TransferAccount",
      type: GRPCCallType.unary
    )

    internal static let transferDomain = GRPCMethodDescriptor(
      name: "TransferDomain",
      path: "/starnamed.x.starname.v1beta1.Msg/TransferDomain",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the starname Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Starnamed_X_Starname_V1beta1_MsgProvider: CallHandlerProvider {
  var interceptors: Starnamed_X_Starname_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// AddAccountCertificate adds a certificate to an Account
  func addAccountCertificate(request: Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Starname_V1beta1_MsgAddAccountCertificateResponse>

  /// DeleteAccount registers a Domain
  func deleteAccount(request: Starnamed_X_Starname_V1beta1_MsgDeleteAccount, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Starname_V1beta1_MsgDeleteAccountResponse>

  /// DeleteAccountCertificate deletes a certificate from an account
  func deleteAccountCertificate(request: Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificateResponse>

  /// DeleteDomain registers a Domain
  func deleteDomain(request: Starnamed_X_Starname_V1beta1_MsgDeleteDomain, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Starname_V1beta1_MsgDeleteDomainResponse>

  /// RegisterAccount registers an Account
  func registerAccount(request: Starnamed_X_Starname_V1beta1_MsgRegisterAccount, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Starname_V1beta1_MsgRegisterAccountResponse>

  /// RegisterDomain registers a Domain
  func registerDomain(request: Starnamed_X_Starname_V1beta1_MsgRegisterDomain, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Starname_V1beta1_MsgRegisterDomainResponse>

  /// RenewAccount registers a Domain
  func renewAccount(request: Starnamed_X_Starname_V1beta1_MsgRenewAccount, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Starname_V1beta1_MsgRenewAccountResponse>

  /// RenewDomain registers a Domain
  func renewDomain(request: Starnamed_X_Starname_V1beta1_MsgRenewDomain, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Starname_V1beta1_MsgRenewDomainResponse>

  /// ReplaceAccountMetadata registers a Domain
  func replaceAccountMetadata(request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadataResponse>

  /// ReplaceAccountResources registers a Domain
  func replaceAccountResources(request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Starname_V1beta1_MsgReplaceAccountResourcesResponse>

  /// TransferAccount registers a Domain
  func transferAccount(request: Starnamed_X_Starname_V1beta1_MsgTransferAccount, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Starname_V1beta1_MsgTransferAccountResponse>

  /// TransferDomain registers a Domain
  func transferDomain(request: Starnamed_X_Starname_V1beta1_MsgTransferDomain, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Starname_V1beta1_MsgTransferDomainResponse>
}

extension Starnamed_X_Starname_V1beta1_MsgProvider {
  internal var serviceName: Substring {
    return Starnamed_X_Starname_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "AddAccountCertificate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgAddAccountCertificateResponse>(),
        interceptors: self.interceptors?.makeAddAccountCertificateInterceptors() ?? [],
        userFunction: self.addAccountCertificate(request:context:)
      )

    case "DeleteAccount":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgDeleteAccount>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgDeleteAccountResponse>(),
        interceptors: self.interceptors?.makeDeleteAccountInterceptors() ?? [],
        userFunction: self.deleteAccount(request:context:)
      )

    case "DeleteAccountCertificate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificateResponse>(),
        interceptors: self.interceptors?.makeDeleteAccountCertificateInterceptors() ?? [],
        userFunction: self.deleteAccountCertificate(request:context:)
      )

    case "DeleteDomain":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgDeleteDomain>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgDeleteDomainResponse>(),
        interceptors: self.interceptors?.makeDeleteDomainInterceptors() ?? [],
        userFunction: self.deleteDomain(request:context:)
      )

    case "RegisterAccount":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgRegisterAccount>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgRegisterAccountResponse>(),
        interceptors: self.interceptors?.makeRegisterAccountInterceptors() ?? [],
        userFunction: self.registerAccount(request:context:)
      )

    case "RegisterDomain":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgRegisterDomain>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgRegisterDomainResponse>(),
        interceptors: self.interceptors?.makeRegisterDomainInterceptors() ?? [],
        userFunction: self.registerDomain(request:context:)
      )

    case "RenewAccount":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgRenewAccount>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgRenewAccountResponse>(),
        interceptors: self.interceptors?.makeRenewAccountInterceptors() ?? [],
        userFunction: self.renewAccount(request:context:)
      )

    case "RenewDomain":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgRenewDomain>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgRenewDomainResponse>(),
        interceptors: self.interceptors?.makeRenewDomainInterceptors() ?? [],
        userFunction: self.renewDomain(request:context:)
      )

    case "ReplaceAccountMetadata":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadataResponse>(),
        interceptors: self.interceptors?.makeReplaceAccountMetadataInterceptors() ?? [],
        userFunction: self.replaceAccountMetadata(request:context:)
      )

    case "ReplaceAccountResources":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgReplaceAccountResourcesResponse>(),
        interceptors: self.interceptors?.makeReplaceAccountResourcesInterceptors() ?? [],
        userFunction: self.replaceAccountResources(request:context:)
      )

    case "TransferAccount":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgTransferAccount>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgTransferAccountResponse>(),
        interceptors: self.interceptors?.makeTransferAccountInterceptors() ?? [],
        userFunction: self.transferAccount(request:context:)
      )

    case "TransferDomain":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgTransferDomain>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgTransferDomainResponse>(),
        interceptors: self.interceptors?.makeTransferDomainInterceptors() ?? [],
        userFunction: self.transferDomain(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the starname Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Starnamed_X_Starname_V1beta1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Starnamed_X_Starname_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// AddAccountCertificate adds a certificate to an Account
  @Sendable func addAccountCertificate(
    request: Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate,
    context: GRPCAsyncServerCallContext
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgAddAccountCertificateResponse

  /// DeleteAccount registers a Domain
  @Sendable func deleteAccount(
    request: Starnamed_X_Starname_V1beta1_MsgDeleteAccount,
    context: GRPCAsyncServerCallContext
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgDeleteAccountResponse

  /// DeleteAccountCertificate deletes a certificate from an account
  @Sendable func deleteAccountCertificate(
    request: Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate,
    context: GRPCAsyncServerCallContext
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificateResponse

  /// DeleteDomain registers a Domain
  @Sendable func deleteDomain(
    request: Starnamed_X_Starname_V1beta1_MsgDeleteDomain,
    context: GRPCAsyncServerCallContext
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgDeleteDomainResponse

  /// RegisterAccount registers an Account
  @Sendable func registerAccount(
    request: Starnamed_X_Starname_V1beta1_MsgRegisterAccount,
    context: GRPCAsyncServerCallContext
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgRegisterAccountResponse

  /// RegisterDomain registers a Domain
  @Sendable func registerDomain(
    request: Starnamed_X_Starname_V1beta1_MsgRegisterDomain,
    context: GRPCAsyncServerCallContext
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgRegisterDomainResponse

  /// RenewAccount registers a Domain
  @Sendable func renewAccount(
    request: Starnamed_X_Starname_V1beta1_MsgRenewAccount,
    context: GRPCAsyncServerCallContext
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgRenewAccountResponse

  /// RenewDomain registers a Domain
  @Sendable func renewDomain(
    request: Starnamed_X_Starname_V1beta1_MsgRenewDomain,
    context: GRPCAsyncServerCallContext
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgRenewDomainResponse

  /// ReplaceAccountMetadata registers a Domain
  @Sendable func replaceAccountMetadata(
    request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata,
    context: GRPCAsyncServerCallContext
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadataResponse

  /// ReplaceAccountResources registers a Domain
  @Sendable func replaceAccountResources(
    request: Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources,
    context: GRPCAsyncServerCallContext
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgReplaceAccountResourcesResponse

  /// TransferAccount registers a Domain
  @Sendable func transferAccount(
    request: Starnamed_X_Starname_V1beta1_MsgTransferAccount,
    context: GRPCAsyncServerCallContext
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgTransferAccountResponse

  /// TransferDomain registers a Domain
  @Sendable func transferDomain(
    request: Starnamed_X_Starname_V1beta1_MsgTransferDomain,
    context: GRPCAsyncServerCallContext
  ) async throws -> Starnamed_X_Starname_V1beta1_MsgTransferDomainResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Starnamed_X_Starname_V1beta1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Starnamed_X_Starname_V1beta1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Starnamed_X_Starname_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Starnamed_X_Starname_V1beta1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "AddAccountCertificate":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgAddAccountCertificateResponse>(),
        interceptors: self.interceptors?.makeAddAccountCertificateInterceptors() ?? [],
        wrapping: self.addAccountCertificate(request:context:)
      )

    case "DeleteAccount":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgDeleteAccount>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgDeleteAccountResponse>(),
        interceptors: self.interceptors?.makeDeleteAccountInterceptors() ?? [],
        wrapping: self.deleteAccount(request:context:)
      )

    case "DeleteAccountCertificate":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificateResponse>(),
        interceptors: self.interceptors?.makeDeleteAccountCertificateInterceptors() ?? [],
        wrapping: self.deleteAccountCertificate(request:context:)
      )

    case "DeleteDomain":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgDeleteDomain>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgDeleteDomainResponse>(),
        interceptors: self.interceptors?.makeDeleteDomainInterceptors() ?? [],
        wrapping: self.deleteDomain(request:context:)
      )

    case "RegisterAccount":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgRegisterAccount>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgRegisterAccountResponse>(),
        interceptors: self.interceptors?.makeRegisterAccountInterceptors() ?? [],
        wrapping: self.registerAccount(request:context:)
      )

    case "RegisterDomain":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgRegisterDomain>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgRegisterDomainResponse>(),
        interceptors: self.interceptors?.makeRegisterDomainInterceptors() ?? [],
        wrapping: self.registerDomain(request:context:)
      )

    case "RenewAccount":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgRenewAccount>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgRenewAccountResponse>(),
        interceptors: self.interceptors?.makeRenewAccountInterceptors() ?? [],
        wrapping: self.renewAccount(request:context:)
      )

    case "RenewDomain":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgRenewDomain>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgRenewDomainResponse>(),
        interceptors: self.interceptors?.makeRenewDomainInterceptors() ?? [],
        wrapping: self.renewDomain(request:context:)
      )

    case "ReplaceAccountMetadata":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadataResponse>(),
        interceptors: self.interceptors?.makeReplaceAccountMetadataInterceptors() ?? [],
        wrapping: self.replaceAccountMetadata(request:context:)
      )

    case "ReplaceAccountResources":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgReplaceAccountResourcesResponse>(),
        interceptors: self.interceptors?.makeReplaceAccountResourcesInterceptors() ?? [],
        wrapping: self.replaceAccountResources(request:context:)
      )

    case "TransferAccount":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgTransferAccount>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgTransferAccountResponse>(),
        interceptors: self.interceptors?.makeTransferAccountInterceptors() ?? [],
        wrapping: self.transferAccount(request:context:)
      )

    case "TransferDomain":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Starname_V1beta1_MsgTransferDomain>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Starname_V1beta1_MsgTransferDomainResponse>(),
        interceptors: self.interceptors?.makeTransferDomainInterceptors() ?? [],
        wrapping: self.transferDomain(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Starnamed_X_Starname_V1beta1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'addAccountCertificate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddAccountCertificateInterceptors() -> [ServerInterceptor<Starnamed_X_Starname_V1beta1_MsgAddAccountCertificate, Starnamed_X_Starname_V1beta1_MsgAddAccountCertificateResponse>]

  /// - Returns: Interceptors to use when handling 'deleteAccount'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAccountInterceptors() -> [ServerInterceptor<Starnamed_X_Starname_V1beta1_MsgDeleteAccount, Starnamed_X_Starname_V1beta1_MsgDeleteAccountResponse>]

  /// - Returns: Interceptors to use when handling 'deleteAccountCertificate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAccountCertificateInterceptors() -> [ServerInterceptor<Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificate, Starnamed_X_Starname_V1beta1_MsgDeleteAccountCertificateResponse>]

  /// - Returns: Interceptors to use when handling 'deleteDomain'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteDomainInterceptors() -> [ServerInterceptor<Starnamed_X_Starname_V1beta1_MsgDeleteDomain, Starnamed_X_Starname_V1beta1_MsgDeleteDomainResponse>]

  /// - Returns: Interceptors to use when handling 'registerAccount'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRegisterAccountInterceptors() -> [ServerInterceptor<Starnamed_X_Starname_V1beta1_MsgRegisterAccount, Starnamed_X_Starname_V1beta1_MsgRegisterAccountResponse>]

  /// - Returns: Interceptors to use when handling 'registerDomain'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRegisterDomainInterceptors() -> [ServerInterceptor<Starnamed_X_Starname_V1beta1_MsgRegisterDomain, Starnamed_X_Starname_V1beta1_MsgRegisterDomainResponse>]

  /// - Returns: Interceptors to use when handling 'renewAccount'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRenewAccountInterceptors() -> [ServerInterceptor<Starnamed_X_Starname_V1beta1_MsgRenewAccount, Starnamed_X_Starname_V1beta1_MsgRenewAccountResponse>]

  /// - Returns: Interceptors to use when handling 'renewDomain'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRenewDomainInterceptors() -> [ServerInterceptor<Starnamed_X_Starname_V1beta1_MsgRenewDomain, Starnamed_X_Starname_V1beta1_MsgRenewDomainResponse>]

  /// - Returns: Interceptors to use when handling 'replaceAccountMetadata'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeReplaceAccountMetadataInterceptors() -> [ServerInterceptor<Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadata, Starnamed_X_Starname_V1beta1_MsgReplaceAccountMetadataResponse>]

  /// - Returns: Interceptors to use when handling 'replaceAccountResources'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeReplaceAccountResourcesInterceptors() -> [ServerInterceptor<Starnamed_X_Starname_V1beta1_MsgReplaceAccountResources, Starnamed_X_Starname_V1beta1_MsgReplaceAccountResourcesResponse>]

  /// - Returns: Interceptors to use when handling 'transferAccount'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeTransferAccountInterceptors() -> [ServerInterceptor<Starnamed_X_Starname_V1beta1_MsgTransferAccount, Starnamed_X_Starname_V1beta1_MsgTransferAccountResponse>]

  /// - Returns: Interceptors to use when handling 'transferDomain'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeTransferDomainInterceptors() -> [ServerInterceptor<Starnamed_X_Starname_V1beta1_MsgTransferDomain, Starnamed_X_Starname_V1beta1_MsgTransferDomainResponse>]
}

internal enum Starnamed_X_Starname_V1beta1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "starnamed.x.starname.v1beta1.Msg",
    methods: [
      Starnamed_X_Starname_V1beta1_MsgServerMetadata.Methods.addAccountCertificate,
      Starnamed_X_Starname_V1beta1_MsgServerMetadata.Methods.deleteAccount,
      Starnamed_X_Starname_V1beta1_MsgServerMetadata.Methods.deleteAccountCertificate,
      Starnamed_X_Starname_V1beta1_MsgServerMetadata.Methods.deleteDomain,
      Starnamed_X_Starname_V1beta1_MsgServerMetadata.Methods.registerAccount,
      Starnamed_X_Starname_V1beta1_MsgServerMetadata.Methods.registerDomain,
      Starnamed_X_Starname_V1beta1_MsgServerMetadata.Methods.renewAccount,
      Starnamed_X_Starname_V1beta1_MsgServerMetadata.Methods.renewDomain,
      Starnamed_X_Starname_V1beta1_MsgServerMetadata.Methods.replaceAccountMetadata,
      Starnamed_X_Starname_V1beta1_MsgServerMetadata.Methods.replaceAccountResources,
      Starnamed_X_Starname_V1beta1_MsgServerMetadata.Methods.transferAccount,
      Starnamed_X_Starname_V1beta1_MsgServerMetadata.Methods.transferDomain,
    ]
  )

  internal enum Methods {
    internal static let addAccountCertificate = GRPCMethodDescriptor(
      name: "AddAccountCertificate",
      path: "/starnamed.x.starname.v1beta1.Msg/AddAccountCertificate",
      type: GRPCCallType.unary
    )

    internal static let deleteAccount = GRPCMethodDescriptor(
      name: "DeleteAccount",
      path: "/starnamed.x.starname.v1beta1.Msg/DeleteAccount",
      type: GRPCCallType.unary
    )

    internal static let deleteAccountCertificate = GRPCMethodDescriptor(
      name: "DeleteAccountCertificate",
      path: "/starnamed.x.starname.v1beta1.Msg/DeleteAccountCertificate",
      type: GRPCCallType.unary
    )

    internal static let deleteDomain = GRPCMethodDescriptor(
      name: "DeleteDomain",
      path: "/starnamed.x.starname.v1beta1.Msg/DeleteDomain",
      type: GRPCCallType.unary
    )

    internal static let registerAccount = GRPCMethodDescriptor(
      name: "RegisterAccount",
      path: "/starnamed.x.starname.v1beta1.Msg/RegisterAccount",
      type: GRPCCallType.unary
    )

    internal static let registerDomain = GRPCMethodDescriptor(
      name: "RegisterDomain",
      path: "/starnamed.x.starname.v1beta1.Msg/RegisterDomain",
      type: GRPCCallType.unary
    )

    internal static let renewAccount = GRPCMethodDescriptor(
      name: "RenewAccount",
      path: "/starnamed.x.starname.v1beta1.Msg/RenewAccount",
      type: GRPCCallType.unary
    )

    internal static let renewDomain = GRPCMethodDescriptor(
      name: "RenewDomain",
      path: "/starnamed.x.starname.v1beta1.Msg/RenewDomain",
      type: GRPCCallType.unary
    )

    internal static let replaceAccountMetadata = GRPCMethodDescriptor(
      name: "ReplaceAccountMetadata",
      path: "/starnamed.x.starname.v1beta1.Msg/ReplaceAccountMetadata",
      type: GRPCCallType.unary
    )

    internal static let replaceAccountResources = GRPCMethodDescriptor(
      name: "ReplaceAccountResources",
      path: "/starnamed.x.starname.v1beta1.Msg/ReplaceAccountResources",
      type: GRPCCallType.unary
    )

    internal static let transferAccount = GRPCMethodDescriptor(
      name: "TransferAccount",
      path: "/starnamed.x.starname.v1beta1.Msg/TransferAccount",
      type: GRPCCallType.unary
    )

    internal static let transferDomain = GRPCMethodDescriptor(
      name: "TransferDomain",
      path: "/starnamed.x.starname.v1beta1.Msg/TransferDomain",
      type: GRPCCallType.unary
    )
  }
}

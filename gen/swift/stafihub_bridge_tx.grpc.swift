//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: stafihub/bridge/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the Msg service.
///
/// Usage: instantiate `Stafihub_Stafihub_Bridge_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Stafihub_Stafihub_Bridge_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Stafihub_Stafihub_Bridge_MsgClientInterceptorFactoryProtocol? { get }

  func setResourceidToDenom(
    _ request: Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom, Stafihub_Stafihub_Bridge_MsgSetResourceidToDenomResponse>

  func deposit(
    _ request: Stafihub_Stafihub_Bridge_MsgDeposit,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgDeposit, Stafihub_Stafihub_Bridge_MsgDepositResponse>

  func addChainId(
    _ request: Stafihub_Stafihub_Bridge_MsgAddChainId,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgAddChainId, Stafihub_Stafihub_Bridge_MsgAddChainIdResponse>

  func voteProposal(
    _ request: Stafihub_Stafihub_Bridge_MsgVoteProposal,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgVoteProposal, Stafihub_Stafihub_Bridge_MsgVoteProposalResponse>

  func rmChainId(
    _ request: Stafihub_Stafihub_Bridge_MsgRmChainId,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgRmChainId, Stafihub_Stafihub_Bridge_MsgRmChainIdResponse>

  func setRelayFeeReceiver(
    _ request: Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver, Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiverResponse>

  func setRelayFee(
    _ request: Stafihub_Stafihub_Bridge_MsgSetRelayFee,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgSetRelayFee, Stafihub_Stafihub_Bridge_MsgSetRelayFeeResponse>

  func addBannedDenom(
    _ request: Stafihub_Stafihub_Bridge_MsgAddBannedDenom,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgAddBannedDenom, Stafihub_Stafihub_Bridge_MsgAddBannedDenomResponse>

  func rmBannedDenom(
    _ request: Stafihub_Stafihub_Bridge_MsgRmBannedDenom,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgRmBannedDenom, Stafihub_Stafihub_Bridge_MsgRmBannedDenomResponse>
}

extension Stafihub_Stafihub_Bridge_MsgClientProtocol {
  internal var serviceName: String {
    return "stafihub.stafihub.bridge.Msg"
  }

  /// Unary call to SetResourceidToDenom
  ///
  /// - Parameters:
  ///   - request: Request to send to SetResourceidToDenom.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setResourceidToDenom(
    _ request: Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom, Stafihub_Stafihub_Bridge_MsgSetResourceidToDenomResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.setResourceidToDenom.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetResourceidToDenomInterceptors() ?? []
    )
  }

  /// Unary call to Deposit
  ///
  /// - Parameters:
  ///   - request: Request to send to Deposit.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deposit(
    _ request: Stafihub_Stafihub_Bridge_MsgDeposit,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgDeposit, Stafihub_Stafihub_Bridge_MsgDepositResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.deposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  /// Unary call to AddChainId
  ///
  /// - Parameters:
  ///   - request: Request to send to AddChainId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addChainId(
    _ request: Stafihub_Stafihub_Bridge_MsgAddChainId,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgAddChainId, Stafihub_Stafihub_Bridge_MsgAddChainIdResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.addChainId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddChainIdInterceptors() ?? []
    )
  }

  /// Unary call to VoteProposal
  ///
  /// - Parameters:
  ///   - request: Request to send to VoteProposal.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func voteProposal(
    _ request: Stafihub_Stafihub_Bridge_MsgVoteProposal,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgVoteProposal, Stafihub_Stafihub_Bridge_MsgVoteProposalResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.voteProposal.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVoteProposalInterceptors() ?? []
    )
  }

  /// Unary call to RmChainId
  ///
  /// - Parameters:
  ///   - request: Request to send to RmChainId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func rmChainId(
    _ request: Stafihub_Stafihub_Bridge_MsgRmChainId,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgRmChainId, Stafihub_Stafihub_Bridge_MsgRmChainIdResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.rmChainId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmChainIdInterceptors() ?? []
    )
  }

  /// Unary call to SetRelayFeeReceiver
  ///
  /// - Parameters:
  ///   - request: Request to send to SetRelayFeeReceiver.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setRelayFeeReceiver(
    _ request: Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver, Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiverResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.setRelayFeeReceiver.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetRelayFeeReceiverInterceptors() ?? []
    )
  }

  /// Unary call to SetRelayFee
  ///
  /// - Parameters:
  ///   - request: Request to send to SetRelayFee.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setRelayFee(
    _ request: Stafihub_Stafihub_Bridge_MsgSetRelayFee,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgSetRelayFee, Stafihub_Stafihub_Bridge_MsgSetRelayFeeResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.setRelayFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetRelayFeeInterceptors() ?? []
    )
  }

  /// Unary call to AddBannedDenom
  ///
  /// - Parameters:
  ///   - request: Request to send to AddBannedDenom.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addBannedDenom(
    _ request: Stafihub_Stafihub_Bridge_MsgAddBannedDenom,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgAddBannedDenom, Stafihub_Stafihub_Bridge_MsgAddBannedDenomResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.addBannedDenom.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddBannedDenomInterceptors() ?? []
    )
  }

  /// this line is used by starport scaffolding # proto/tx/rpc
  ///
  /// - Parameters:
  ///   - request: Request to send to RmBannedDenom.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func rmBannedDenom(
    _ request: Stafihub_Stafihub_Bridge_MsgRmBannedDenom,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Bridge_MsgRmBannedDenom, Stafihub_Stafihub_Bridge_MsgRmBannedDenomResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.rmBannedDenom.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmBannedDenomInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Stafihub_Stafihub_Bridge_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Stafihub_Stafihub_Bridge_MsgNIOClient")
internal final class Stafihub_Stafihub_Bridge_MsgClient: Stafihub_Stafihub_Bridge_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Stafihub_Stafihub_Bridge_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Stafihub_Stafihub_Bridge_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the stafihub.stafihub.bridge.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Bridge_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Stafihub_Stafihub_Bridge_MsgNIOClient: Stafihub_Stafihub_Bridge_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stafihub_Stafihub_Bridge_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the stafihub.stafihub.bridge.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Bridge_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stafihub_Stafihub_Bridge_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stafihub_Stafihub_Bridge_MsgClientInterceptorFactoryProtocol? { get }

  func makeSetResourceidToDenomCall(
    _ request: Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom, Stafihub_Stafihub_Bridge_MsgSetResourceidToDenomResponse>

  func makeDepositCall(
    _ request: Stafihub_Stafihub_Bridge_MsgDeposit,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgDeposit, Stafihub_Stafihub_Bridge_MsgDepositResponse>

  func makeAddChainIDCall(
    _ request: Stafihub_Stafihub_Bridge_MsgAddChainId,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgAddChainId, Stafihub_Stafihub_Bridge_MsgAddChainIdResponse>

  func makeVoteProposalCall(
    _ request: Stafihub_Stafihub_Bridge_MsgVoteProposal,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgVoteProposal, Stafihub_Stafihub_Bridge_MsgVoteProposalResponse>

  func makeRmChainIDCall(
    _ request: Stafihub_Stafihub_Bridge_MsgRmChainId,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgRmChainId, Stafihub_Stafihub_Bridge_MsgRmChainIdResponse>

  func makeSetRelayFeeReceiverCall(
    _ request: Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver, Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiverResponse>

  func makeSetRelayFeeCall(
    _ request: Stafihub_Stafihub_Bridge_MsgSetRelayFee,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgSetRelayFee, Stafihub_Stafihub_Bridge_MsgSetRelayFeeResponse>

  func makeAddBannedDenomCall(
    _ request: Stafihub_Stafihub_Bridge_MsgAddBannedDenom,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgAddBannedDenom, Stafihub_Stafihub_Bridge_MsgAddBannedDenomResponse>

  func makeRmBannedDenomCall(
    _ request: Stafihub_Stafihub_Bridge_MsgRmBannedDenom,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgRmBannedDenom, Stafihub_Stafihub_Bridge_MsgRmBannedDenomResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Bridge_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stafihub_Stafihub_Bridge_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Stafihub_Stafihub_Bridge_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeSetResourceidToDenomCall(
    _ request: Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom, Stafihub_Stafihub_Bridge_MsgSetResourceidToDenomResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.setResourceidToDenom.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetResourceidToDenomInterceptors() ?? []
    )
  }

  internal func makeDepositCall(
    _ request: Stafihub_Stafihub_Bridge_MsgDeposit,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgDeposit, Stafihub_Stafihub_Bridge_MsgDepositResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.deposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  internal func makeAddChainIDCall(
    _ request: Stafihub_Stafihub_Bridge_MsgAddChainId,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgAddChainId, Stafihub_Stafihub_Bridge_MsgAddChainIdResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.addChainId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddChainIdInterceptors() ?? []
    )
  }

  internal func makeVoteProposalCall(
    _ request: Stafihub_Stafihub_Bridge_MsgVoteProposal,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgVoteProposal, Stafihub_Stafihub_Bridge_MsgVoteProposalResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.voteProposal.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVoteProposalInterceptors() ?? []
    )
  }

  internal func makeRmChainIDCall(
    _ request: Stafihub_Stafihub_Bridge_MsgRmChainId,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgRmChainId, Stafihub_Stafihub_Bridge_MsgRmChainIdResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.rmChainId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmChainIdInterceptors() ?? []
    )
  }

  internal func makeSetRelayFeeReceiverCall(
    _ request: Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver, Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiverResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.setRelayFeeReceiver.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetRelayFeeReceiverInterceptors() ?? []
    )
  }

  internal func makeSetRelayFeeCall(
    _ request: Stafihub_Stafihub_Bridge_MsgSetRelayFee,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgSetRelayFee, Stafihub_Stafihub_Bridge_MsgSetRelayFeeResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.setRelayFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetRelayFeeInterceptors() ?? []
    )
  }

  internal func makeAddBannedDenomCall(
    _ request: Stafihub_Stafihub_Bridge_MsgAddBannedDenom,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgAddBannedDenom, Stafihub_Stafihub_Bridge_MsgAddBannedDenomResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.addBannedDenom.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddBannedDenomInterceptors() ?? []
    )
  }

  internal func makeRmBannedDenomCall(
    _ request: Stafihub_Stafihub_Bridge_MsgRmBannedDenom,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Bridge_MsgRmBannedDenom, Stafihub_Stafihub_Bridge_MsgRmBannedDenomResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.rmBannedDenom.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmBannedDenomInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Bridge_MsgAsyncClientProtocol {
  internal func setResourceidToDenom(
    _ request: Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_MsgSetResourceidToDenomResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.setResourceidToDenom.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetResourceidToDenomInterceptors() ?? []
    )
  }

  internal func deposit(
    _ request: Stafihub_Stafihub_Bridge_MsgDeposit,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_MsgDepositResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.deposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  internal func addChainId(
    _ request: Stafihub_Stafihub_Bridge_MsgAddChainId,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_MsgAddChainIdResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.addChainId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddChainIdInterceptors() ?? []
    )
  }

  internal func voteProposal(
    _ request: Stafihub_Stafihub_Bridge_MsgVoteProposal,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_MsgVoteProposalResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.voteProposal.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVoteProposalInterceptors() ?? []
    )
  }

  internal func rmChainId(
    _ request: Stafihub_Stafihub_Bridge_MsgRmChainId,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_MsgRmChainIdResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.rmChainId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmChainIdInterceptors() ?? []
    )
  }

  internal func setRelayFeeReceiver(
    _ request: Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiverResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.setRelayFeeReceiver.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetRelayFeeReceiverInterceptors() ?? []
    )
  }

  internal func setRelayFee(
    _ request: Stafihub_Stafihub_Bridge_MsgSetRelayFee,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_MsgSetRelayFeeResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.setRelayFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetRelayFeeInterceptors() ?? []
    )
  }

  internal func addBannedDenom(
    _ request: Stafihub_Stafihub_Bridge_MsgAddBannedDenom,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_MsgAddBannedDenomResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.addBannedDenom.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddBannedDenomInterceptors() ?? []
    )
  }

  internal func rmBannedDenom(
    _ request: Stafihub_Stafihub_Bridge_MsgRmBannedDenom,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Bridge_MsgRmBannedDenomResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.rmBannedDenom.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmBannedDenomInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Stafihub_Stafihub_Bridge_MsgAsyncClient: Stafihub_Stafihub_Bridge_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stafihub_Stafihub_Bridge_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Bridge_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Stafihub_Stafihub_Bridge_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'setResourceidToDenom'.
  func makeSetResourceidToDenomInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom, Stafihub_Stafihub_Bridge_MsgSetResourceidToDenomResponse>]

  /// - Returns: Interceptors to use when invoking 'deposit'.
  func makeDepositInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_MsgDeposit, Stafihub_Stafihub_Bridge_MsgDepositResponse>]

  /// - Returns: Interceptors to use when invoking 'addChainId'.
  func makeAddChainIdInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_MsgAddChainId, Stafihub_Stafihub_Bridge_MsgAddChainIdResponse>]

  /// - Returns: Interceptors to use when invoking 'voteProposal'.
  func makeVoteProposalInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_MsgVoteProposal, Stafihub_Stafihub_Bridge_MsgVoteProposalResponse>]

  /// - Returns: Interceptors to use when invoking 'rmChainId'.
  func makeRmChainIdInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_MsgRmChainId, Stafihub_Stafihub_Bridge_MsgRmChainIdResponse>]

  /// - Returns: Interceptors to use when invoking 'setRelayFeeReceiver'.
  func makeSetRelayFeeReceiverInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver, Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiverResponse>]

  /// - Returns: Interceptors to use when invoking 'setRelayFee'.
  func makeSetRelayFeeInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_MsgSetRelayFee, Stafihub_Stafihub_Bridge_MsgSetRelayFeeResponse>]

  /// - Returns: Interceptors to use when invoking 'addBannedDenom'.
  func makeAddBannedDenomInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_MsgAddBannedDenom, Stafihub_Stafihub_Bridge_MsgAddBannedDenomResponse>]

  /// - Returns: Interceptors to use when invoking 'rmBannedDenom'.
  func makeRmBannedDenomInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Bridge_MsgRmBannedDenom, Stafihub_Stafihub_Bridge_MsgRmBannedDenomResponse>]
}

internal enum Stafihub_Stafihub_Bridge_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "stafihub.stafihub.bridge.Msg",
    methods: [
      Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.setResourceidToDenom,
      Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.deposit,
      Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.addChainId,
      Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.voteProposal,
      Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.rmChainId,
      Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.setRelayFeeReceiver,
      Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.setRelayFee,
      Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.addBannedDenom,
      Stafihub_Stafihub_Bridge_MsgClientMetadata.Methods.rmBannedDenom,
    ]
  )

  internal enum Methods {
    internal static let setResourceidToDenom = GRPCMethodDescriptor(
      name: "SetResourceidToDenom",
      path: "/stafihub.stafihub.bridge.Msg/SetResourceidToDenom",
      type: GRPCCallType.unary
    )

    internal static let deposit = GRPCMethodDescriptor(
      name: "Deposit",
      path: "/stafihub.stafihub.bridge.Msg/Deposit",
      type: GRPCCallType.unary
    )

    internal static let addChainId = GRPCMethodDescriptor(
      name: "AddChainId",
      path: "/stafihub.stafihub.bridge.Msg/AddChainId",
      type: GRPCCallType.unary
    )

    internal static let voteProposal = GRPCMethodDescriptor(
      name: "VoteProposal",
      path: "/stafihub.stafihub.bridge.Msg/VoteProposal",
      type: GRPCCallType.unary
    )

    internal static let rmChainId = GRPCMethodDescriptor(
      name: "RmChainId",
      path: "/stafihub.stafihub.bridge.Msg/RmChainId",
      type: GRPCCallType.unary
    )

    internal static let setRelayFeeReceiver = GRPCMethodDescriptor(
      name: "SetRelayFeeReceiver",
      path: "/stafihub.stafihub.bridge.Msg/SetRelayFeeReceiver",
      type: GRPCCallType.unary
    )

    internal static let setRelayFee = GRPCMethodDescriptor(
      name: "SetRelayFee",
      path: "/stafihub.stafihub.bridge.Msg/SetRelayFee",
      type: GRPCCallType.unary
    )

    internal static let addBannedDenom = GRPCMethodDescriptor(
      name: "AddBannedDenom",
      path: "/stafihub.stafihub.bridge.Msg/AddBannedDenom",
      type: GRPCCallType.unary
    )

    internal static let rmBannedDenom = GRPCMethodDescriptor(
      name: "RmBannedDenom",
      path: "/stafihub.stafihub.bridge.Msg/RmBannedDenom",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Stafihub_Stafihub_Bridge_MsgProvider: CallHandlerProvider {
  var interceptors: Stafihub_Stafihub_Bridge_MsgServerInterceptorFactoryProtocol? { get }

  func setResourceidToDenom(request: Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_MsgSetResourceidToDenomResponse>

  func deposit(request: Stafihub_Stafihub_Bridge_MsgDeposit, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_MsgDepositResponse>

  func addChainId(request: Stafihub_Stafihub_Bridge_MsgAddChainId, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_MsgAddChainIdResponse>

  func voteProposal(request: Stafihub_Stafihub_Bridge_MsgVoteProposal, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_MsgVoteProposalResponse>

  func rmChainId(request: Stafihub_Stafihub_Bridge_MsgRmChainId, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_MsgRmChainIdResponse>

  func setRelayFeeReceiver(request: Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiverResponse>

  func setRelayFee(request: Stafihub_Stafihub_Bridge_MsgSetRelayFee, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_MsgSetRelayFeeResponse>

  func addBannedDenom(request: Stafihub_Stafihub_Bridge_MsgAddBannedDenom, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_MsgAddBannedDenomResponse>

  /// this line is used by starport scaffolding # proto/tx/rpc
  func rmBannedDenom(request: Stafihub_Stafihub_Bridge_MsgRmBannedDenom, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Bridge_MsgRmBannedDenomResponse>
}

extension Stafihub_Stafihub_Bridge_MsgProvider {
  internal var serviceName: Substring {
    return Stafihub_Stafihub_Bridge_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "SetResourceidToDenom":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgSetResourceidToDenomResponse>(),
        interceptors: self.interceptors?.makeSetResourceidToDenomInterceptors() ?? [],
        userFunction: self.setResourceidToDenom(request:context:)
      )

    case "Deposit":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgDeposit>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgDepositResponse>(),
        interceptors: self.interceptors?.makeDepositInterceptors() ?? [],
        userFunction: self.deposit(request:context:)
      )

    case "AddChainId":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgAddChainId>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgAddChainIdResponse>(),
        interceptors: self.interceptors?.makeAddChainIdInterceptors() ?? [],
        userFunction: self.addChainId(request:context:)
      )

    case "VoteProposal":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgVoteProposal>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgVoteProposalResponse>(),
        interceptors: self.interceptors?.makeVoteProposalInterceptors() ?? [],
        userFunction: self.voteProposal(request:context:)
      )

    case "RmChainId":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgRmChainId>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgRmChainIdResponse>(),
        interceptors: self.interceptors?.makeRmChainIdInterceptors() ?? [],
        userFunction: self.rmChainId(request:context:)
      )

    case "SetRelayFeeReceiver":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiverResponse>(),
        interceptors: self.interceptors?.makeSetRelayFeeReceiverInterceptors() ?? [],
        userFunction: self.setRelayFeeReceiver(request:context:)
      )

    case "SetRelayFee":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgSetRelayFee>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgSetRelayFeeResponse>(),
        interceptors: self.interceptors?.makeSetRelayFeeInterceptors() ?? [],
        userFunction: self.setRelayFee(request:context:)
      )

    case "AddBannedDenom":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgAddBannedDenom>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgAddBannedDenomResponse>(),
        interceptors: self.interceptors?.makeAddBannedDenomInterceptors() ?? [],
        userFunction: self.addBannedDenom(request:context:)
      )

    case "RmBannedDenom":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgRmBannedDenom>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgRmBannedDenomResponse>(),
        interceptors: self.interceptors?.makeRmBannedDenomInterceptors() ?? [],
        userFunction: self.rmBannedDenom(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stafihub_Stafihub_Bridge_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stafihub_Stafihub_Bridge_MsgServerInterceptorFactoryProtocol? { get }

  @Sendable func setResourceidToDenom(
    request: Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_MsgSetResourceidToDenomResponse

  @Sendable func deposit(
    request: Stafihub_Stafihub_Bridge_MsgDeposit,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_MsgDepositResponse

  @Sendable func addChainId(
    request: Stafihub_Stafihub_Bridge_MsgAddChainId,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_MsgAddChainIdResponse

  @Sendable func voteProposal(
    request: Stafihub_Stafihub_Bridge_MsgVoteProposal,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_MsgVoteProposalResponse

  @Sendable func rmChainId(
    request: Stafihub_Stafihub_Bridge_MsgRmChainId,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_MsgRmChainIdResponse

  @Sendable func setRelayFeeReceiver(
    request: Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiverResponse

  @Sendable func setRelayFee(
    request: Stafihub_Stafihub_Bridge_MsgSetRelayFee,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_MsgSetRelayFeeResponse

  @Sendable func addBannedDenom(
    request: Stafihub_Stafihub_Bridge_MsgAddBannedDenom,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_MsgAddBannedDenomResponse

  /// this line is used by starport scaffolding # proto/tx/rpc
  @Sendable func rmBannedDenom(
    request: Stafihub_Stafihub_Bridge_MsgRmBannedDenom,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Bridge_MsgRmBannedDenomResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Bridge_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stafihub_Stafihub_Bridge_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Stafihub_Stafihub_Bridge_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Stafihub_Stafihub_Bridge_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "SetResourceidToDenom":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgSetResourceidToDenomResponse>(),
        interceptors: self.interceptors?.makeSetResourceidToDenomInterceptors() ?? [],
        wrapping: self.setResourceidToDenom(request:context:)
      )

    case "Deposit":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgDeposit>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgDepositResponse>(),
        interceptors: self.interceptors?.makeDepositInterceptors() ?? [],
        wrapping: self.deposit(request:context:)
      )

    case "AddChainId":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgAddChainId>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgAddChainIdResponse>(),
        interceptors: self.interceptors?.makeAddChainIdInterceptors() ?? [],
        wrapping: self.addChainId(request:context:)
      )

    case "VoteProposal":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgVoteProposal>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgVoteProposalResponse>(),
        interceptors: self.interceptors?.makeVoteProposalInterceptors() ?? [],
        wrapping: self.voteProposal(request:context:)
      )

    case "RmChainId":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgRmChainId>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgRmChainIdResponse>(),
        interceptors: self.interceptors?.makeRmChainIdInterceptors() ?? [],
        wrapping: self.rmChainId(request:context:)
      )

    case "SetRelayFeeReceiver":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiverResponse>(),
        interceptors: self.interceptors?.makeSetRelayFeeReceiverInterceptors() ?? [],
        wrapping: self.setRelayFeeReceiver(request:context:)
      )

    case "SetRelayFee":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgSetRelayFee>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgSetRelayFeeResponse>(),
        interceptors: self.interceptors?.makeSetRelayFeeInterceptors() ?? [],
        wrapping: self.setRelayFee(request:context:)
      )

    case "AddBannedDenom":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgAddBannedDenom>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgAddBannedDenomResponse>(),
        interceptors: self.interceptors?.makeAddBannedDenomInterceptors() ?? [],
        wrapping: self.addBannedDenom(request:context:)
      )

    case "RmBannedDenom":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Bridge_MsgRmBannedDenom>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Bridge_MsgRmBannedDenomResponse>(),
        interceptors: self.interceptors?.makeRmBannedDenomInterceptors() ?? [],
        wrapping: self.rmBannedDenom(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Stafihub_Stafihub_Bridge_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'setResourceidToDenom'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetResourceidToDenomInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_MsgSetResourceidToDenom, Stafihub_Stafihub_Bridge_MsgSetResourceidToDenomResponse>]

  /// - Returns: Interceptors to use when handling 'deposit'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDepositInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_MsgDeposit, Stafihub_Stafihub_Bridge_MsgDepositResponse>]

  /// - Returns: Interceptors to use when handling 'addChainId'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddChainIdInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_MsgAddChainId, Stafihub_Stafihub_Bridge_MsgAddChainIdResponse>]

  /// - Returns: Interceptors to use when handling 'voteProposal'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeVoteProposalInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_MsgVoteProposal, Stafihub_Stafihub_Bridge_MsgVoteProposalResponse>]

  /// - Returns: Interceptors to use when handling 'rmChainId'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRmChainIdInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_MsgRmChainId, Stafihub_Stafihub_Bridge_MsgRmChainIdResponse>]

  /// - Returns: Interceptors to use when handling 'setRelayFeeReceiver'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetRelayFeeReceiverInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiver, Stafihub_Stafihub_Bridge_MsgSetRelayFeeReceiverResponse>]

  /// - Returns: Interceptors to use when handling 'setRelayFee'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetRelayFeeInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_MsgSetRelayFee, Stafihub_Stafihub_Bridge_MsgSetRelayFeeResponse>]

  /// - Returns: Interceptors to use when handling 'addBannedDenom'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddBannedDenomInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_MsgAddBannedDenom, Stafihub_Stafihub_Bridge_MsgAddBannedDenomResponse>]

  /// - Returns: Interceptors to use when handling 'rmBannedDenom'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRmBannedDenomInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Bridge_MsgRmBannedDenom, Stafihub_Stafihub_Bridge_MsgRmBannedDenomResponse>]
}

internal enum Stafihub_Stafihub_Bridge_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "stafihub.stafihub.bridge.Msg",
    methods: [
      Stafihub_Stafihub_Bridge_MsgServerMetadata.Methods.setResourceidToDenom,
      Stafihub_Stafihub_Bridge_MsgServerMetadata.Methods.deposit,
      Stafihub_Stafihub_Bridge_MsgServerMetadata.Methods.addChainId,
      Stafihub_Stafihub_Bridge_MsgServerMetadata.Methods.voteProposal,
      Stafihub_Stafihub_Bridge_MsgServerMetadata.Methods.rmChainId,
      Stafihub_Stafihub_Bridge_MsgServerMetadata.Methods.setRelayFeeReceiver,
      Stafihub_Stafihub_Bridge_MsgServerMetadata.Methods.setRelayFee,
      Stafihub_Stafihub_Bridge_MsgServerMetadata.Methods.addBannedDenom,
      Stafihub_Stafihub_Bridge_MsgServerMetadata.Methods.rmBannedDenom,
    ]
  )

  internal enum Methods {
    internal static let setResourceidToDenom = GRPCMethodDescriptor(
      name: "SetResourceidToDenom",
      path: "/stafihub.stafihub.bridge.Msg/SetResourceidToDenom",
      type: GRPCCallType.unary
    )

    internal static let deposit = GRPCMethodDescriptor(
      name: "Deposit",
      path: "/stafihub.stafihub.bridge.Msg/Deposit",
      type: GRPCCallType.unary
    )

    internal static let addChainId = GRPCMethodDescriptor(
      name: "AddChainId",
      path: "/stafihub.stafihub.bridge.Msg/AddChainId",
      type: GRPCCallType.unary
    )

    internal static let voteProposal = GRPCMethodDescriptor(
      name: "VoteProposal",
      path: "/stafihub.stafihub.bridge.Msg/VoteProposal",
      type: GRPCCallType.unary
    )

    internal static let rmChainId = GRPCMethodDescriptor(
      name: "RmChainId",
      path: "/stafihub.stafihub.bridge.Msg/RmChainId",
      type: GRPCCallType.unary
    )

    internal static let setRelayFeeReceiver = GRPCMethodDescriptor(
      name: "SetRelayFeeReceiver",
      path: "/stafihub.stafihub.bridge.Msg/SetRelayFeeReceiver",
      type: GRPCCallType.unary
    )

    internal static let setRelayFee = GRPCMethodDescriptor(
      name: "SetRelayFee",
      path: "/stafihub.stafihub.bridge.Msg/SetRelayFee",
      type: GRPCCallType.unary
    )

    internal static let addBannedDenom = GRPCMethodDescriptor(
      name: "AddBannedDenom",
      path: "/stafihub.stafihub.bridge.Msg/AddBannedDenom",
      type: GRPCCallType.unary
    )

    internal static let rmBannedDenom = GRPCMethodDescriptor(
      name: "RmBannedDenom",
      path: "/stafihub.stafihub.bridge.Msg/RmBannedDenom",
      type: GRPCCallType.unary
    )
  }
}

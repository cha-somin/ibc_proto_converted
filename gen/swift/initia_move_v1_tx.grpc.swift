//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: initia/move/v1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the move Msg service.
///
/// Usage: instantiate `Initia_Move_V1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Initia_Move_V1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Initia_Move_V1_MsgClientInterceptorFactoryProtocol? { get }

  func publish(
    _ request: Initia_Move_V1_MsgPublish,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgPublish, Initia_Move_V1_MsgPublishResponse>

  func execute(
    _ request: Initia_Move_V1_MsgExecute,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgExecute, Initia_Move_V1_MsgExecuteResponse>

  func executeJSON(
    _ request: Initia_Move_V1_MsgExecuteJSON,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgExecuteJSON, Initia_Move_V1_MsgExecuteJSONResponse>

  func script(
    _ request: Initia_Move_V1_MsgScript,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgScript, Initia_Move_V1_MsgScriptResponse>

  func scriptJSON(
    _ request: Initia_Move_V1_MsgScriptJSON,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgScriptJSON, Initia_Move_V1_MsgScriptJSONResponse>

  func govPublish(
    _ request: Initia_Move_V1_MsgGovPublish,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgGovPublish, Initia_Move_V1_MsgGovPublishResponse>

  func govExecute(
    _ request: Initia_Move_V1_MsgGovExecute,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgGovExecute, Initia_Move_V1_MsgGovExecuteResponse>

  func govExecuteJSON(
    _ request: Initia_Move_V1_MsgGovExecuteJSON,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgGovExecuteJSON, Initia_Move_V1_MsgGovExecuteJSONResponse>

  func govScript(
    _ request: Initia_Move_V1_MsgGovScript,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgGovScript, Initia_Move_V1_MsgGovScriptResponse>

  func govScriptJSON(
    _ request: Initia_Move_V1_MsgGovScriptJSON,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgGovScriptJSON, Initia_Move_V1_MsgGovScriptJSONResponse>

  func whitelist(
    _ request: Initia_Move_V1_MsgWhitelist,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgWhitelist, Initia_Move_V1_MsgWhitelistResponse>

  func delist(
    _ request: Initia_Move_V1_MsgDelist,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgDelist, Initia_Move_V1_MsgDelistResponse>

  func updateParams(
    _ request: Initia_Move_V1_MsgUpdateParams,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Move_V1_MsgUpdateParams, Initia_Move_V1_MsgUpdateParamsResponse>
}

extension Initia_Move_V1_MsgClientProtocol {
  internal var serviceName: String {
    return "initia.move.v1.Msg"
  }

  /// Publish stores compiled Move module
  ///
  /// - Parameters:
  ///   - request: Request to send to Publish.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func publish(
    _ request: Initia_Move_V1_MsgPublish,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgPublish, Initia_Move_V1_MsgPublishResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.publish.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePublishInterceptors() ?? []
    )
  }

  /// Deprecated: Use ExecuteJSON instead
  /// Execute runs a entry function with the given message
  ///
  /// - Parameters:
  ///   - request: Request to send to Execute.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func execute(
    _ request: Initia_Move_V1_MsgExecute,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgExecute, Initia_Move_V1_MsgExecuteResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.execute.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteInterceptors() ?? []
    )
  }

  /// ExecuteJSON runs a entry function with the given message
  ///
  /// - Parameters:
  ///   - request: Request to send to ExecuteJSON.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func executeJSON(
    _ request: Initia_Move_V1_MsgExecuteJSON,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgExecuteJSON, Initia_Move_V1_MsgExecuteJSONResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.executeJSON.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteJSONInterceptors() ?? []
    )
  }

  /// Deprecated: Use ScriptJSON instead
  /// Script runs a scripts with the given message
  ///
  /// - Parameters:
  ///   - request: Request to send to Script.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func script(
    _ request: Initia_Move_V1_MsgScript,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgScript, Initia_Move_V1_MsgScriptResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.script.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeScriptInterceptors() ?? []
    )
  }

  /// ScriptJSON runs a scripts with the given message
  ///
  /// - Parameters:
  ///   - request: Request to send to ScriptJSON.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func scriptJSON(
    _ request: Initia_Move_V1_MsgScriptJSON,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgScriptJSON, Initia_Move_V1_MsgScriptJSONResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.scriptJSON.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeScriptJSONInterceptors() ?? []
    )
  }

  /// GovPublish stores compiled Move module via gov proposal
  ///
  /// - Parameters:
  ///   - request: Request to send to GovPublish.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func govPublish(
    _ request: Initia_Move_V1_MsgGovPublish,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgGovPublish, Initia_Move_V1_MsgGovPublishResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govPublish.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovPublishInterceptors() ?? []
    )
  }

  /// Deprecated: Use GovExecuteJSON instead
  /// GovExecute runs a entry function with the given message via gov proposal
  ///
  /// - Parameters:
  ///   - request: Request to send to GovExecute.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func govExecute(
    _ request: Initia_Move_V1_MsgGovExecute,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgGovExecute, Initia_Move_V1_MsgGovExecuteResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govExecute.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovExecuteInterceptors() ?? []
    )
  }

  /// GovExecuteJSON runs a entry function with the given message via gov proposal
  ///
  /// - Parameters:
  ///   - request: Request to send to GovExecuteJSON.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func govExecuteJSON(
    _ request: Initia_Move_V1_MsgGovExecuteJSON,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgGovExecuteJSON, Initia_Move_V1_MsgGovExecuteJSONResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govExecuteJSON.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovExecuteJSONInterceptors() ?? []
    )
  }

  /// Deprecated: Use GovScriptJSON instead
  /// GovScript runs a scripts with the given message via gov proposal
  ///
  /// - Parameters:
  ///   - request: Request to send to GovScript.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func govScript(
    _ request: Initia_Move_V1_MsgGovScript,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgGovScript, Initia_Move_V1_MsgGovScriptResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govScript.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovScriptInterceptors() ?? []
    )
  }

  /// GovScriptJSON runs a scripts with the given message via gov proposal
  ///
  /// - Parameters:
  ///   - request: Request to send to GovScriptJSON.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func govScriptJSON(
    _ request: Initia_Move_V1_MsgGovScriptJSON,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgGovScriptJSON, Initia_Move_V1_MsgGovScriptJSONResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govScriptJSON.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovScriptJSONInterceptors() ?? []
    )
  }

  /// Whitelist registers a dex pair to whitelist of various features.
  /// - whitelist from coin register operation
  /// - allow counter party denom can be used as gas fee
  /// - register lp denom as staking denom
  ///
  /// - Parameters:
  ///   - request: Request to send to Whitelist.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func whitelist(
    _ request: Initia_Move_V1_MsgWhitelist,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgWhitelist, Initia_Move_V1_MsgWhitelistResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.whitelist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWhitelistInterceptors() ?? []
    )
  }

  /// Delist unregisters a dex pair from the whitelist.
  ///
  /// - Parameters:
  ///   - request: Request to send to Delist.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func delist(
    _ request: Initia_Move_V1_MsgDelist,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgDelist, Initia_Move_V1_MsgDelistResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.delist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelistInterceptors() ?? []
    )
  }

  /// UpdateParams defines an operation for updating the x/move module
  /// parameters.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateParams.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateParams(
    _ request: Initia_Move_V1_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Move_V1_MsgUpdateParams, Initia_Move_V1_MsgUpdateParamsResponse> {
    return self.makeUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.updateParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Initia_Move_V1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Initia_Move_V1_MsgNIOClient")
internal final class Initia_Move_V1_MsgClient: Initia_Move_V1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Initia_Move_V1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Initia_Move_V1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the initia.move.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Initia_Move_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Initia_Move_V1_MsgNIOClient: Initia_Move_V1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Initia_Move_V1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the initia.move.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Initia_Move_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the move Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Initia_Move_V1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Initia_Move_V1_MsgClientInterceptorFactoryProtocol? { get }

  func makePublishCall(
    _ request: Initia_Move_V1_MsgPublish,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgPublish, Initia_Move_V1_MsgPublishResponse>

  func makeExecuteCall(
    _ request: Initia_Move_V1_MsgExecute,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgExecute, Initia_Move_V1_MsgExecuteResponse>

  func makeExecuteJsonCall(
    _ request: Initia_Move_V1_MsgExecuteJSON,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgExecuteJSON, Initia_Move_V1_MsgExecuteJSONResponse>

  func makeScriptCall(
    _ request: Initia_Move_V1_MsgScript,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgScript, Initia_Move_V1_MsgScriptResponse>

  func makeScriptJsonCall(
    _ request: Initia_Move_V1_MsgScriptJSON,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgScriptJSON, Initia_Move_V1_MsgScriptJSONResponse>

  func makeGovPublishCall(
    _ request: Initia_Move_V1_MsgGovPublish,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgGovPublish, Initia_Move_V1_MsgGovPublishResponse>

  func makeGovExecuteCall(
    _ request: Initia_Move_V1_MsgGovExecute,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgGovExecute, Initia_Move_V1_MsgGovExecuteResponse>

  func makeGovExecuteJsonCall(
    _ request: Initia_Move_V1_MsgGovExecuteJSON,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgGovExecuteJSON, Initia_Move_V1_MsgGovExecuteJSONResponse>

  func makeGovScriptCall(
    _ request: Initia_Move_V1_MsgGovScript,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgGovScript, Initia_Move_V1_MsgGovScriptResponse>

  func makeGovScriptJsonCall(
    _ request: Initia_Move_V1_MsgGovScriptJSON,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgGovScriptJSON, Initia_Move_V1_MsgGovScriptJSONResponse>

  func makeWhitelistCall(
    _ request: Initia_Move_V1_MsgWhitelist,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgWhitelist, Initia_Move_V1_MsgWhitelistResponse>

  func makeDelistCall(
    _ request: Initia_Move_V1_MsgDelist,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgDelist, Initia_Move_V1_MsgDelistResponse>

  func makeUpdateParamsCall(
    _ request: Initia_Move_V1_MsgUpdateParams,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgUpdateParams, Initia_Move_V1_MsgUpdateParamsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Initia_Move_V1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Initia_Move_V1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Initia_Move_V1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makePublishCall(
    _ request: Initia_Move_V1_MsgPublish,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgPublish, Initia_Move_V1_MsgPublishResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.publish.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePublishInterceptors() ?? []
    )
  }

  internal func makeExecuteCall(
    _ request: Initia_Move_V1_MsgExecute,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgExecute, Initia_Move_V1_MsgExecuteResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.execute.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteInterceptors() ?? []
    )
  }

  internal func makeExecuteJsonCall(
    _ request: Initia_Move_V1_MsgExecuteJSON,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgExecuteJSON, Initia_Move_V1_MsgExecuteJSONResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.executeJSON.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteJSONInterceptors() ?? []
    )
  }

  internal func makeScriptCall(
    _ request: Initia_Move_V1_MsgScript,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgScript, Initia_Move_V1_MsgScriptResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.script.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeScriptInterceptors() ?? []
    )
  }

  internal func makeScriptJsonCall(
    _ request: Initia_Move_V1_MsgScriptJSON,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgScriptJSON, Initia_Move_V1_MsgScriptJSONResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.scriptJSON.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeScriptJSONInterceptors() ?? []
    )
  }

  internal func makeGovPublishCall(
    _ request: Initia_Move_V1_MsgGovPublish,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgGovPublish, Initia_Move_V1_MsgGovPublishResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govPublish.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovPublishInterceptors() ?? []
    )
  }

  internal func makeGovExecuteCall(
    _ request: Initia_Move_V1_MsgGovExecute,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgGovExecute, Initia_Move_V1_MsgGovExecuteResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govExecute.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovExecuteInterceptors() ?? []
    )
  }

  internal func makeGovExecuteJsonCall(
    _ request: Initia_Move_V1_MsgGovExecuteJSON,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgGovExecuteJSON, Initia_Move_V1_MsgGovExecuteJSONResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govExecuteJSON.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovExecuteJSONInterceptors() ?? []
    )
  }

  internal func makeGovScriptCall(
    _ request: Initia_Move_V1_MsgGovScript,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgGovScript, Initia_Move_V1_MsgGovScriptResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govScript.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovScriptInterceptors() ?? []
    )
  }

  internal func makeGovScriptJsonCall(
    _ request: Initia_Move_V1_MsgGovScriptJSON,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgGovScriptJSON, Initia_Move_V1_MsgGovScriptJSONResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govScriptJSON.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovScriptJSONInterceptors() ?? []
    )
  }

  internal func makeWhitelistCall(
    _ request: Initia_Move_V1_MsgWhitelist,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgWhitelist, Initia_Move_V1_MsgWhitelistResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.whitelist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWhitelistInterceptors() ?? []
    )
  }

  internal func makeDelistCall(
    _ request: Initia_Move_V1_MsgDelist,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgDelist, Initia_Move_V1_MsgDelistResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.delist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelistInterceptors() ?? []
    )
  }

  internal func makeUpdateParamsCall(
    _ request: Initia_Move_V1_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Move_V1_MsgUpdateParams, Initia_Move_V1_MsgUpdateParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.updateParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Initia_Move_V1_MsgAsyncClientProtocol {
  internal func publish(
    _ request: Initia_Move_V1_MsgPublish,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgPublishResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.publish.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePublishInterceptors() ?? []
    )
  }

  internal func execute(
    _ request: Initia_Move_V1_MsgExecute,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgExecuteResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.execute.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteInterceptors() ?? []
    )
  }

  internal func executeJSON(
    _ request: Initia_Move_V1_MsgExecuteJSON,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgExecuteJSONResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.executeJSON.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteJSONInterceptors() ?? []
    )
  }

  internal func script(
    _ request: Initia_Move_V1_MsgScript,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgScriptResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.script.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeScriptInterceptors() ?? []
    )
  }

  internal func scriptJSON(
    _ request: Initia_Move_V1_MsgScriptJSON,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgScriptJSONResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.scriptJSON.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeScriptJSONInterceptors() ?? []
    )
  }

  internal func govPublish(
    _ request: Initia_Move_V1_MsgGovPublish,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgGovPublishResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govPublish.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovPublishInterceptors() ?? []
    )
  }

  internal func govExecute(
    _ request: Initia_Move_V1_MsgGovExecute,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgGovExecuteResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govExecute.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovExecuteInterceptors() ?? []
    )
  }

  internal func govExecuteJSON(
    _ request: Initia_Move_V1_MsgGovExecuteJSON,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgGovExecuteJSONResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govExecuteJSON.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovExecuteJSONInterceptors() ?? []
    )
  }

  internal func govScript(
    _ request: Initia_Move_V1_MsgGovScript,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgGovScriptResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govScript.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovScriptInterceptors() ?? []
    )
  }

  internal func govScriptJSON(
    _ request: Initia_Move_V1_MsgGovScriptJSON,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgGovScriptJSONResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.govScriptJSON.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGovScriptJSONInterceptors() ?? []
    )
  }

  internal func whitelist(
    _ request: Initia_Move_V1_MsgWhitelist,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgWhitelistResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.whitelist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWhitelistInterceptors() ?? []
    )
  }

  internal func delist(
    _ request: Initia_Move_V1_MsgDelist,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgDelistResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.delist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelistInterceptors() ?? []
    )
  }

  internal func updateParams(
    _ request: Initia_Move_V1_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Move_V1_MsgUpdateParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Move_V1_MsgClientMetadata.Methods.updateParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Initia_Move_V1_MsgAsyncClient: Initia_Move_V1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Initia_Move_V1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Initia_Move_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Initia_Move_V1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'publish'.
  func makePublishInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgPublish, Initia_Move_V1_MsgPublishResponse>]

  /// - Returns: Interceptors to use when invoking 'execute'.
  func makeExecuteInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgExecute, Initia_Move_V1_MsgExecuteResponse>]

  /// - Returns: Interceptors to use when invoking 'executeJSON'.
  func makeExecuteJSONInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgExecuteJSON, Initia_Move_V1_MsgExecuteJSONResponse>]

  /// - Returns: Interceptors to use when invoking 'script'.
  func makeScriptInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgScript, Initia_Move_V1_MsgScriptResponse>]

  /// - Returns: Interceptors to use when invoking 'scriptJSON'.
  func makeScriptJSONInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgScriptJSON, Initia_Move_V1_MsgScriptJSONResponse>]

  /// - Returns: Interceptors to use when invoking 'govPublish'.
  func makeGovPublishInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgGovPublish, Initia_Move_V1_MsgGovPublishResponse>]

  /// - Returns: Interceptors to use when invoking 'govExecute'.
  func makeGovExecuteInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgGovExecute, Initia_Move_V1_MsgGovExecuteResponse>]

  /// - Returns: Interceptors to use when invoking 'govExecuteJSON'.
  func makeGovExecuteJSONInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgGovExecuteJSON, Initia_Move_V1_MsgGovExecuteJSONResponse>]

  /// - Returns: Interceptors to use when invoking 'govScript'.
  func makeGovScriptInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgGovScript, Initia_Move_V1_MsgGovScriptResponse>]

  /// - Returns: Interceptors to use when invoking 'govScriptJSON'.
  func makeGovScriptJSONInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgGovScriptJSON, Initia_Move_V1_MsgGovScriptJSONResponse>]

  /// - Returns: Interceptors to use when invoking 'whitelist'.
  func makeWhitelistInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgWhitelist, Initia_Move_V1_MsgWhitelistResponse>]

  /// - Returns: Interceptors to use when invoking 'delist'.
  func makeDelistInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgDelist, Initia_Move_V1_MsgDelistResponse>]

  /// - Returns: Interceptors to use when invoking 'updateParams'.
  func makeUpdateParamsInterceptors() -> [ClientInterceptor<Initia_Move_V1_MsgUpdateParams, Initia_Move_V1_MsgUpdateParamsResponse>]
}

internal enum Initia_Move_V1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "initia.move.v1.Msg",
    methods: [
      Initia_Move_V1_MsgClientMetadata.Methods.publish,
      Initia_Move_V1_MsgClientMetadata.Methods.execute,
      Initia_Move_V1_MsgClientMetadata.Methods.executeJSON,
      Initia_Move_V1_MsgClientMetadata.Methods.script,
      Initia_Move_V1_MsgClientMetadata.Methods.scriptJSON,
      Initia_Move_V1_MsgClientMetadata.Methods.govPublish,
      Initia_Move_V1_MsgClientMetadata.Methods.govExecute,
      Initia_Move_V1_MsgClientMetadata.Methods.govExecuteJSON,
      Initia_Move_V1_MsgClientMetadata.Methods.govScript,
      Initia_Move_V1_MsgClientMetadata.Methods.govScriptJSON,
      Initia_Move_V1_MsgClientMetadata.Methods.whitelist,
      Initia_Move_V1_MsgClientMetadata.Methods.delist,
      Initia_Move_V1_MsgClientMetadata.Methods.updateParams,
    ]
  )

  internal enum Methods {
    internal static let publish = GRPCMethodDescriptor(
      name: "Publish",
      path: "/initia.move.v1.Msg/Publish",
      type: GRPCCallType.unary
    )

    internal static let execute = GRPCMethodDescriptor(
      name: "Execute",
      path: "/initia.move.v1.Msg/Execute",
      type: GRPCCallType.unary
    )

    internal static let executeJSON = GRPCMethodDescriptor(
      name: "ExecuteJSON",
      path: "/initia.move.v1.Msg/ExecuteJSON",
      type: GRPCCallType.unary
    )

    internal static let script = GRPCMethodDescriptor(
      name: "Script",
      path: "/initia.move.v1.Msg/Script",
      type: GRPCCallType.unary
    )

    internal static let scriptJSON = GRPCMethodDescriptor(
      name: "ScriptJSON",
      path: "/initia.move.v1.Msg/ScriptJSON",
      type: GRPCCallType.unary
    )

    internal static let govPublish = GRPCMethodDescriptor(
      name: "GovPublish",
      path: "/initia.move.v1.Msg/GovPublish",
      type: GRPCCallType.unary
    )

    internal static let govExecute = GRPCMethodDescriptor(
      name: "GovExecute",
      path: "/initia.move.v1.Msg/GovExecute",
      type: GRPCCallType.unary
    )

    internal static let govExecuteJSON = GRPCMethodDescriptor(
      name: "GovExecuteJSON",
      path: "/initia.move.v1.Msg/GovExecuteJSON",
      type: GRPCCallType.unary
    )

    internal static let govScript = GRPCMethodDescriptor(
      name: "GovScript",
      path: "/initia.move.v1.Msg/GovScript",
      type: GRPCCallType.unary
    )

    internal static let govScriptJSON = GRPCMethodDescriptor(
      name: "GovScriptJSON",
      path: "/initia.move.v1.Msg/GovScriptJSON",
      type: GRPCCallType.unary
    )

    internal static let whitelist = GRPCMethodDescriptor(
      name: "Whitelist",
      path: "/initia.move.v1.Msg/Whitelist",
      type: GRPCCallType.unary
    )

    internal static let delist = GRPCMethodDescriptor(
      name: "Delist",
      path: "/initia.move.v1.Msg/Delist",
      type: GRPCCallType.unary
    )

    internal static let updateParams = GRPCMethodDescriptor(
      name: "UpdateParams",
      path: "/initia.move.v1.Msg/UpdateParams",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the move Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Initia_Move_V1_MsgProvider: CallHandlerProvider {
  var interceptors: Initia_Move_V1_MsgServerInterceptorFactoryProtocol? { get }

  /// Publish stores compiled Move module
  func publish(request: Initia_Move_V1_MsgPublish, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgPublishResponse>

  /// Deprecated: Use ExecuteJSON instead
  /// Execute runs a entry function with the given message
  func execute(request: Initia_Move_V1_MsgExecute, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgExecuteResponse>

  /// ExecuteJSON runs a entry function with the given message
  func executeJSON(request: Initia_Move_V1_MsgExecuteJSON, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgExecuteJSONResponse>

  /// Deprecated: Use ScriptJSON instead
  /// Script runs a scripts with the given message
  func script(request: Initia_Move_V1_MsgScript, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgScriptResponse>

  /// ScriptJSON runs a scripts with the given message
  func scriptJSON(request: Initia_Move_V1_MsgScriptJSON, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgScriptJSONResponse>

  /// GovPublish stores compiled Move module via gov proposal
  func govPublish(request: Initia_Move_V1_MsgGovPublish, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgGovPublishResponse>

  /// Deprecated: Use GovExecuteJSON instead
  /// GovExecute runs a entry function with the given message via gov proposal
  func govExecute(request: Initia_Move_V1_MsgGovExecute, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgGovExecuteResponse>

  /// GovExecuteJSON runs a entry function with the given message via gov proposal
  func govExecuteJSON(request: Initia_Move_V1_MsgGovExecuteJSON, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgGovExecuteJSONResponse>

  /// Deprecated: Use GovScriptJSON instead
  /// GovScript runs a scripts with the given message via gov proposal
  func govScript(request: Initia_Move_V1_MsgGovScript, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgGovScriptResponse>

  /// GovScriptJSON runs a scripts with the given message via gov proposal
  func govScriptJSON(request: Initia_Move_V1_MsgGovScriptJSON, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgGovScriptJSONResponse>

  /// Whitelist registers a dex pair to whitelist of various features.
  /// - whitelist from coin register operation
  /// - allow counter party denom can be used as gas fee
  /// - register lp denom as staking denom
  func whitelist(request: Initia_Move_V1_MsgWhitelist, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgWhitelistResponse>

  /// Delist unregisters a dex pair from the whitelist.
  func delist(request: Initia_Move_V1_MsgDelist, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgDelistResponse>

  /// UpdateParams defines an operation for updating the x/move module
  /// parameters.
  func updateParams(request: Initia_Move_V1_MsgUpdateParams, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Move_V1_MsgUpdateParamsResponse>
}

extension Initia_Move_V1_MsgProvider {
  internal var serviceName: Substring {
    return Initia_Move_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Publish":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgPublish>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgPublishResponse>(),
        interceptors: self.interceptors?.makePublishInterceptors() ?? [],
        userFunction: self.publish(request:context:)
      )

    case "Execute":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgExecute>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgExecuteResponse>(),
        interceptors: self.interceptors?.makeExecuteInterceptors() ?? [],
        userFunction: self.execute(request:context:)
      )

    case "ExecuteJSON":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgExecuteJSON>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgExecuteJSONResponse>(),
        interceptors: self.interceptors?.makeExecuteJSONInterceptors() ?? [],
        userFunction: self.executeJSON(request:context:)
      )

    case "Script":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgScript>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgScriptResponse>(),
        interceptors: self.interceptors?.makeScriptInterceptors() ?? [],
        userFunction: self.script(request:context:)
      )

    case "ScriptJSON":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgScriptJSON>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgScriptJSONResponse>(),
        interceptors: self.interceptors?.makeScriptJSONInterceptors() ?? [],
        userFunction: self.scriptJSON(request:context:)
      )

    case "GovPublish":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgGovPublish>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgGovPublishResponse>(),
        interceptors: self.interceptors?.makeGovPublishInterceptors() ?? [],
        userFunction: self.govPublish(request:context:)
      )

    case "GovExecute":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgGovExecute>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgGovExecuteResponse>(),
        interceptors: self.interceptors?.makeGovExecuteInterceptors() ?? [],
        userFunction: self.govExecute(request:context:)
      )

    case "GovExecuteJSON":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgGovExecuteJSON>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgGovExecuteJSONResponse>(),
        interceptors: self.interceptors?.makeGovExecuteJSONInterceptors() ?? [],
        userFunction: self.govExecuteJSON(request:context:)
      )

    case "GovScript":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgGovScript>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgGovScriptResponse>(),
        interceptors: self.interceptors?.makeGovScriptInterceptors() ?? [],
        userFunction: self.govScript(request:context:)
      )

    case "GovScriptJSON":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgGovScriptJSON>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgGovScriptJSONResponse>(),
        interceptors: self.interceptors?.makeGovScriptJSONInterceptors() ?? [],
        userFunction: self.govScriptJSON(request:context:)
      )

    case "Whitelist":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgWhitelist>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgWhitelistResponse>(),
        interceptors: self.interceptors?.makeWhitelistInterceptors() ?? [],
        userFunction: self.whitelist(request:context:)
      )

    case "Delist":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgDelist>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgDelistResponse>(),
        interceptors: self.interceptors?.makeDelistInterceptors() ?? [],
        userFunction: self.delist(request:context:)
      )

    case "UpdateParams":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgUpdateParams>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgUpdateParamsResponse>(),
        interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? [],
        userFunction: self.updateParams(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the move Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Initia_Move_V1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Initia_Move_V1_MsgServerInterceptorFactoryProtocol? { get }

  /// Publish stores compiled Move module
  @Sendable func publish(
    request: Initia_Move_V1_MsgPublish,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgPublishResponse

  /// Deprecated: Use ExecuteJSON instead
  /// Execute runs a entry function with the given message
  @Sendable func execute(
    request: Initia_Move_V1_MsgExecute,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgExecuteResponse

  /// ExecuteJSON runs a entry function with the given message
  @Sendable func executeJSON(
    request: Initia_Move_V1_MsgExecuteJSON,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgExecuteJSONResponse

  /// Deprecated: Use ScriptJSON instead
  /// Script runs a scripts with the given message
  @Sendable func script(
    request: Initia_Move_V1_MsgScript,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgScriptResponse

  /// ScriptJSON runs a scripts with the given message
  @Sendable func scriptJSON(
    request: Initia_Move_V1_MsgScriptJSON,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgScriptJSONResponse

  /// GovPublish stores compiled Move module via gov proposal
  @Sendable func govPublish(
    request: Initia_Move_V1_MsgGovPublish,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgGovPublishResponse

  /// Deprecated: Use GovExecuteJSON instead
  /// GovExecute runs a entry function with the given message via gov proposal
  @Sendable func govExecute(
    request: Initia_Move_V1_MsgGovExecute,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgGovExecuteResponse

  /// GovExecuteJSON runs a entry function with the given message via gov proposal
  @Sendable func govExecuteJSON(
    request: Initia_Move_V1_MsgGovExecuteJSON,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgGovExecuteJSONResponse

  /// Deprecated: Use GovScriptJSON instead
  /// GovScript runs a scripts with the given message via gov proposal
  @Sendable func govScript(
    request: Initia_Move_V1_MsgGovScript,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgGovScriptResponse

  /// GovScriptJSON runs a scripts with the given message via gov proposal
  @Sendable func govScriptJSON(
    request: Initia_Move_V1_MsgGovScriptJSON,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgGovScriptJSONResponse

  /// Whitelist registers a dex pair to whitelist of various features.
  /// - whitelist from coin register operation
  /// - allow counter party denom can be used as gas fee
  /// - register lp denom as staking denom
  @Sendable func whitelist(
    request: Initia_Move_V1_MsgWhitelist,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgWhitelistResponse

  /// Delist unregisters a dex pair from the whitelist.
  @Sendable func delist(
    request: Initia_Move_V1_MsgDelist,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgDelistResponse

  /// UpdateParams defines an operation for updating the x/move module
  /// parameters.
  @Sendable func updateParams(
    request: Initia_Move_V1_MsgUpdateParams,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Move_V1_MsgUpdateParamsResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Initia_Move_V1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Initia_Move_V1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Initia_Move_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Initia_Move_V1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Publish":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgPublish>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgPublishResponse>(),
        interceptors: self.interceptors?.makePublishInterceptors() ?? [],
        wrapping: self.publish(request:context:)
      )

    case "Execute":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgExecute>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgExecuteResponse>(),
        interceptors: self.interceptors?.makeExecuteInterceptors() ?? [],
        wrapping: self.execute(request:context:)
      )

    case "ExecuteJSON":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgExecuteJSON>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgExecuteJSONResponse>(),
        interceptors: self.interceptors?.makeExecuteJSONInterceptors() ?? [],
        wrapping: self.executeJSON(request:context:)
      )

    case "Script":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgScript>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgScriptResponse>(),
        interceptors: self.interceptors?.makeScriptInterceptors() ?? [],
        wrapping: self.script(request:context:)
      )

    case "ScriptJSON":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgScriptJSON>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgScriptJSONResponse>(),
        interceptors: self.interceptors?.makeScriptJSONInterceptors() ?? [],
        wrapping: self.scriptJSON(request:context:)
      )

    case "GovPublish":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgGovPublish>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgGovPublishResponse>(),
        interceptors: self.interceptors?.makeGovPublishInterceptors() ?? [],
        wrapping: self.govPublish(request:context:)
      )

    case "GovExecute":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgGovExecute>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgGovExecuteResponse>(),
        interceptors: self.interceptors?.makeGovExecuteInterceptors() ?? [],
        wrapping: self.govExecute(request:context:)
      )

    case "GovExecuteJSON":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgGovExecuteJSON>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgGovExecuteJSONResponse>(),
        interceptors: self.interceptors?.makeGovExecuteJSONInterceptors() ?? [],
        wrapping: self.govExecuteJSON(request:context:)
      )

    case "GovScript":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgGovScript>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgGovScriptResponse>(),
        interceptors: self.interceptors?.makeGovScriptInterceptors() ?? [],
        wrapping: self.govScript(request:context:)
      )

    case "GovScriptJSON":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgGovScriptJSON>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgGovScriptJSONResponse>(),
        interceptors: self.interceptors?.makeGovScriptJSONInterceptors() ?? [],
        wrapping: self.govScriptJSON(request:context:)
      )

    case "Whitelist":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgWhitelist>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgWhitelistResponse>(),
        interceptors: self.interceptors?.makeWhitelistInterceptors() ?? [],
        wrapping: self.whitelist(request:context:)
      )

    case "Delist":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgDelist>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgDelistResponse>(),
        interceptors: self.interceptors?.makeDelistInterceptors() ?? [],
        wrapping: self.delist(request:context:)
      )

    case "UpdateParams":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Move_V1_MsgUpdateParams>(),
        responseSerializer: ProtobufSerializer<Initia_Move_V1_MsgUpdateParamsResponse>(),
        interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? [],
        wrapping: self.updateParams(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Initia_Move_V1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'publish'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makePublishInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgPublish, Initia_Move_V1_MsgPublishResponse>]

  /// - Returns: Interceptors to use when handling 'execute'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeExecuteInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgExecute, Initia_Move_V1_MsgExecuteResponse>]

  /// - Returns: Interceptors to use when handling 'executeJSON'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeExecuteJSONInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgExecuteJSON, Initia_Move_V1_MsgExecuteJSONResponse>]

  /// - Returns: Interceptors to use when handling 'script'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeScriptInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgScript, Initia_Move_V1_MsgScriptResponse>]

  /// - Returns: Interceptors to use when handling 'scriptJSON'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeScriptJSONInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgScriptJSON, Initia_Move_V1_MsgScriptJSONResponse>]

  /// - Returns: Interceptors to use when handling 'govPublish'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGovPublishInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgGovPublish, Initia_Move_V1_MsgGovPublishResponse>]

  /// - Returns: Interceptors to use when handling 'govExecute'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGovExecuteInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgGovExecute, Initia_Move_V1_MsgGovExecuteResponse>]

  /// - Returns: Interceptors to use when handling 'govExecuteJSON'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGovExecuteJSONInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgGovExecuteJSON, Initia_Move_V1_MsgGovExecuteJSONResponse>]

  /// - Returns: Interceptors to use when handling 'govScript'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGovScriptInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgGovScript, Initia_Move_V1_MsgGovScriptResponse>]

  /// - Returns: Interceptors to use when handling 'govScriptJSON'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGovScriptJSONInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgGovScriptJSON, Initia_Move_V1_MsgGovScriptJSONResponse>]

  /// - Returns: Interceptors to use when handling 'whitelist'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWhitelistInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgWhitelist, Initia_Move_V1_MsgWhitelistResponse>]

  /// - Returns: Interceptors to use when handling 'delist'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDelistInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgDelist, Initia_Move_V1_MsgDelistResponse>]

  /// - Returns: Interceptors to use when handling 'updateParams'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateParamsInterceptors() -> [ServerInterceptor<Initia_Move_V1_MsgUpdateParams, Initia_Move_V1_MsgUpdateParamsResponse>]
}

internal enum Initia_Move_V1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "initia.move.v1.Msg",
    methods: [
      Initia_Move_V1_MsgServerMetadata.Methods.publish,
      Initia_Move_V1_MsgServerMetadata.Methods.execute,
      Initia_Move_V1_MsgServerMetadata.Methods.executeJSON,
      Initia_Move_V1_MsgServerMetadata.Methods.script,
      Initia_Move_V1_MsgServerMetadata.Methods.scriptJSON,
      Initia_Move_V1_MsgServerMetadata.Methods.govPublish,
      Initia_Move_V1_MsgServerMetadata.Methods.govExecute,
      Initia_Move_V1_MsgServerMetadata.Methods.govExecuteJSON,
      Initia_Move_V1_MsgServerMetadata.Methods.govScript,
      Initia_Move_V1_MsgServerMetadata.Methods.govScriptJSON,
      Initia_Move_V1_MsgServerMetadata.Methods.whitelist,
      Initia_Move_V1_MsgServerMetadata.Methods.delist,
      Initia_Move_V1_MsgServerMetadata.Methods.updateParams,
    ]
  )

  internal enum Methods {
    internal static let publish = GRPCMethodDescriptor(
      name: "Publish",
      path: "/initia.move.v1.Msg/Publish",
      type: GRPCCallType.unary
    )

    internal static let execute = GRPCMethodDescriptor(
      name: "Execute",
      path: "/initia.move.v1.Msg/Execute",
      type: GRPCCallType.unary
    )

    internal static let executeJSON = GRPCMethodDescriptor(
      name: "ExecuteJSON",
      path: "/initia.move.v1.Msg/ExecuteJSON",
      type: GRPCCallType.unary
    )

    internal static let script = GRPCMethodDescriptor(
      name: "Script",
      path: "/initia.move.v1.Msg/Script",
      type: GRPCCallType.unary
    )

    internal static let scriptJSON = GRPCMethodDescriptor(
      name: "ScriptJSON",
      path: "/initia.move.v1.Msg/ScriptJSON",
      type: GRPCCallType.unary
    )

    internal static let govPublish = GRPCMethodDescriptor(
      name: "GovPublish",
      path: "/initia.move.v1.Msg/GovPublish",
      type: GRPCCallType.unary
    )

    internal static let govExecute = GRPCMethodDescriptor(
      name: "GovExecute",
      path: "/initia.move.v1.Msg/GovExecute",
      type: GRPCCallType.unary
    )

    internal static let govExecuteJSON = GRPCMethodDescriptor(
      name: "GovExecuteJSON",
      path: "/initia.move.v1.Msg/GovExecuteJSON",
      type: GRPCCallType.unary
    )

    internal static let govScript = GRPCMethodDescriptor(
      name: "GovScript",
      path: "/initia.move.v1.Msg/GovScript",
      type: GRPCCallType.unary
    )

    internal static let govScriptJSON = GRPCMethodDescriptor(
      name: "GovScriptJSON",
      path: "/initia.move.v1.Msg/GovScriptJSON",
      type: GRPCCallType.unary
    )

    internal static let whitelist = GRPCMethodDescriptor(
      name: "Whitelist",
      path: "/initia.move.v1.Msg/Whitelist",
      type: GRPCCallType.unary
    )

    internal static let delist = GRPCMethodDescriptor(
      name: "Delist",
      path: "/initia.move.v1.Msg/Delist",
      type: GRPCCallType.unary
    )

    internal static let updateParams = GRPCMethodDescriptor(
      name: "UpdateParams",
      path: "/initia.move.v1.Msg/UpdateParams",
      type: GRPCCallType.unary
    )
  }
}

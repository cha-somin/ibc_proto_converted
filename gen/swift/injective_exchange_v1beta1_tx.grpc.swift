//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: injective/exchange/v1beta1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the exchange Msg service.
///
/// Usage: instantiate `Injective_Exchange_V1beta1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Injective_Exchange_V1beta1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func deposit(
    _ request: Injective_Exchange_V1beta1_MsgDeposit,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgDeposit, Injective_Exchange_V1beta1_MsgDepositResponse>

  func withdraw(
    _ request: Injective_Exchange_V1beta1_MsgWithdraw,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgWithdraw, Injective_Exchange_V1beta1_MsgWithdrawResponse>

  func instantSpotMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch, Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse>

  func instantPerpetualMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch, Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse>

  func instantExpiryFuturesMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch, Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse>

  func createSpotLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder, Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse>

  func batchCreateSpotLimitOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse>

  func createSpotMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder, Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse>

  func cancelSpotOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelSpotOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCancelSpotOrder, Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse>

  func batchCancelSpotOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders, Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse>

  func batchUpdateOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchUpdateOrders,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchUpdateOrders, Injective_Exchange_V1beta1_MsgBatchUpdateOrdersResponse>

  func privilegedExecuteContract(
    _ request: Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract, Injective_Exchange_V1beta1_MsgPrivilegedExecuteContractResponse>

  func createDerivativeLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse>

  func batchCreateDerivativeLimitOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse>

  func createDerivativeMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse>

  func cancelDerivativeOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelDerivativeOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder, Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse>

  func batchCancelDerivativeOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders, Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse>

  func instantBinaryOptionsMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch, Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunchResponse>

  func createBinaryOptionsLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder, Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrderResponse>

  func createBinaryOptionsMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder, Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrderResponse>

  func cancelBinaryOptionsOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder, Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrderResponse>

  func batchCancelBinaryOptionsOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders, Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrdersResponse>

  func subaccountTransfer(
    _ request: Injective_Exchange_V1beta1_MsgSubaccountTransfer,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgSubaccountTransfer, Injective_Exchange_V1beta1_MsgSubaccountTransferResponse>

  func externalTransfer(
    _ request: Injective_Exchange_V1beta1_MsgExternalTransfer,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgExternalTransfer, Injective_Exchange_V1beta1_MsgExternalTransferResponse>

  func liquidatePosition(
    _ request: Injective_Exchange_V1beta1_MsgLiquidatePosition,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgLiquidatePosition, Injective_Exchange_V1beta1_MsgLiquidatePositionResponse>

  func increasePositionMargin(
    _ request: Injective_Exchange_V1beta1_MsgIncreasePositionMargin,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgIncreasePositionMargin, Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse>

  func rewardsOptOut(
    _ request: Injective_Exchange_V1beta1_MsgRewardsOptOut,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgRewardsOptOut, Injective_Exchange_V1beta1_MsgRewardsOptOutResponse>

  func adminUpdateBinaryOptionsMarket(
    _ request: Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket, Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarketResponse>

  func reclaimLockedFunds(
    _ request: Injective_Exchange_V1beta1_MsgReclaimLockedFunds,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgReclaimLockedFunds, Injective_Exchange_V1beta1_MsgReclaimLockedFundsResponse>

  func updateParams(
    _ request: Injective_Exchange_V1beta1_MsgUpdateParams,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgUpdateParams, Injective_Exchange_V1beta1_MsgUpdateParamsResponse>
}

extension Injective_Exchange_V1beta1_MsgClientProtocol {
  internal var serviceName: String {
    return "injective.exchange.v1beta1.Msg"
  }

  /// Deposit defines a method for transferring coins from the sender's bank
  /// balance into the subaccount's exchange deposits
  ///
  /// - Parameters:
  ///   - request: Request to send to Deposit.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deposit(
    _ request: Injective_Exchange_V1beta1_MsgDeposit,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgDeposit, Injective_Exchange_V1beta1_MsgDepositResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.deposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  /// Withdraw defines a method for withdrawing coins from a subaccount's
  /// deposits to the user's bank balance
  ///
  /// - Parameters:
  ///   - request: Request to send to Withdraw.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func withdraw(
    _ request: Injective_Exchange_V1beta1_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgWithdraw, Injective_Exchange_V1beta1_MsgWithdrawResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.withdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  /// InstantSpotMarketLaunch defines method for creating a spot market by paying
  /// listing fee without governance
  ///
  /// - Parameters:
  ///   - request: Request to send to InstantSpotMarketLaunch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func instantSpotMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch, Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantSpotMarketLaunch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantSpotMarketLaunchInterceptors() ?? []
    )
  }

  /// InstantPerpetualMarketLaunch defines a method for creating a new perpetual
  /// futures market by paying listing fee without governance
  ///
  /// - Parameters:
  ///   - request: Request to send to InstantPerpetualMarketLaunch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func instantPerpetualMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch, Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantPerpetualMarketLaunch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantPerpetualMarketLaunchInterceptors() ?? []
    )
  }

  /// InstantExpiryFuturesMarketLaunch defines a method for creating a new expiry
  /// futures market by paying listing fee without governance
  ///
  /// - Parameters:
  ///   - request: Request to send to InstantExpiryFuturesMarketLaunch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func instantExpiryFuturesMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch, Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantExpiryFuturesMarketLaunch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantExpiryFuturesMarketLaunchInterceptors() ?? []
    )
  }

  /// CreateSpotLimitOrder defines a method for creating a new spot limit order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSpotLimitOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createSpotLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder, Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createSpotLimitOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSpotLimitOrderInterceptors() ?? []
    )
  }

  /// BatchCreateSpotLimitOrder defines a method for creating a new batch of spot
  /// limit orders.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchCreateSpotLimitOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func batchCreateSpotLimitOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCreateSpotLimitOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateSpotLimitOrdersInterceptors() ?? []
    )
  }

  /// CreateSpotMarketOrder defines a method for creating a new spot market
  /// order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSpotMarketOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createSpotMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder, Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createSpotMarketOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSpotMarketOrderInterceptors() ?? []
    )
  }

  /// MsgCancelSpotOrder defines a method for cancelling a spot order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelSpotOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func cancelSpotOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelSpotOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCancelSpotOrder, Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.cancelSpotOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelSpotOrderInterceptors() ?? []
    )
  }

  /// BatchCancelSpotOrders defines a method for cancelling a batch of spot
  /// orders in a given market.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchCancelSpotOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func batchCancelSpotOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders, Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCancelSpotOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCancelSpotOrdersInterceptors() ?? []
    )
  }

  /// BatchUpdateOrders defines a method for updating a batch of orders.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchUpdateOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func batchUpdateOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchUpdateOrders,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchUpdateOrders, Injective_Exchange_V1beta1_MsgBatchUpdateOrdersResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchUpdateOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchUpdateOrdersInterceptors() ?? []
    )
  }

  /// PrivilegedExecuteContract defines a method for executing a Cosmwasm
  /// contract from the exchange module with privileged capabilities.
  ///
  /// - Parameters:
  ///   - request: Request to send to PrivilegedExecuteContract.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func privilegedExecuteContract(
    _ request: Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract, Injective_Exchange_V1beta1_MsgPrivilegedExecuteContractResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.privilegedExecuteContract.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePrivilegedExecuteContractInterceptors() ?? []
    )
  }

  /// CreateDerivativeLimitOrder defines a method for creating a new derivative
  /// limit order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateDerivativeLimitOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createDerivativeLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createDerivativeLimitOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDerivativeLimitOrderInterceptors() ?? []
    )
  }

  /// BatchCreateDerivativeLimitOrders defines a method for creating a new batch
  /// of derivative limit orders.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchCreateDerivativeLimitOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func batchCreateDerivativeLimitOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCreateDerivativeLimitOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateDerivativeLimitOrdersInterceptors() ?? []
    )
  }

  /// MsgCreateDerivativeLimitOrder defines a method for creating a new
  /// derivative market order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateDerivativeMarketOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createDerivativeMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createDerivativeMarketOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDerivativeMarketOrderInterceptors() ?? []
    )
  }

  /// MsgCancelDerivativeOrder defines a method for cancelling a derivative
  /// order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelDerivativeOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func cancelDerivativeOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelDerivativeOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder, Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.cancelDerivativeOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelDerivativeOrderInterceptors() ?? []
    )
  }

  /// MsgBatchCancelDerivativeOrders defines a method for cancelling a batch of
  /// derivative limit orders.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchCancelDerivativeOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func batchCancelDerivativeOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders, Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCancelDerivativeOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCancelDerivativeOrdersInterceptors() ?? []
    )
  }

  /// InstantBinaryOptionsMarketLaunch defines method for creating a binary
  /// options market by paying listing fee without governance
  ///
  /// - Parameters:
  ///   - request: Request to send to InstantBinaryOptionsMarketLaunch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func instantBinaryOptionsMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch, Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunchResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantBinaryOptionsMarketLaunch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantBinaryOptionsMarketLaunchInterceptors() ?? []
    )
  }

  /// CreateBinaryOptionsLimitOrder defines a method for creating a new binary
  /// options limit order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateBinaryOptionsLimitOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createBinaryOptionsLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder, Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrderResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createBinaryOptionsLimitOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateBinaryOptionsLimitOrderInterceptors() ?? []
    )
  }

  /// CreateBinaryOptionsMarketOrder defines a method for creating a new binary
  /// options market order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateBinaryOptionsMarketOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createBinaryOptionsMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder, Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrderResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createBinaryOptionsMarketOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateBinaryOptionsMarketOrderInterceptors() ?? []
    )
  }

  /// MsgCancelBinaryOptionsOrder defines a method for cancelling a binary
  /// options order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelBinaryOptionsOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func cancelBinaryOptionsOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder, Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrderResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.cancelBinaryOptionsOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelBinaryOptionsOrderInterceptors() ?? []
    )
  }

  /// BatchCancelBinaryOptionsOrders defines a method for cancelling a batch of
  /// binary options limit orders.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchCancelBinaryOptionsOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func batchCancelBinaryOptionsOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders, Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrdersResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCancelBinaryOptionsOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCancelBinaryOptionsOrdersInterceptors() ?? []
    )
  }

  /// SubaccountTransfer defines a method for transfer between subaccounts
  ///
  /// - Parameters:
  ///   - request: Request to send to SubaccountTransfer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func subaccountTransfer(
    _ request: Injective_Exchange_V1beta1_MsgSubaccountTransfer,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgSubaccountTransfer, Injective_Exchange_V1beta1_MsgSubaccountTransferResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.subaccountTransfer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubaccountTransferInterceptors() ?? []
    )
  }

  /// ExternalTransfer defines a method for transfer between external accounts
  ///
  /// - Parameters:
  ///   - request: Request to send to ExternalTransfer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func externalTransfer(
    _ request: Injective_Exchange_V1beta1_MsgExternalTransfer,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgExternalTransfer, Injective_Exchange_V1beta1_MsgExternalTransferResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.externalTransfer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExternalTransferInterceptors() ?? []
    )
  }

  /// LiquidatePosition defines a method for liquidating a position
  ///
  /// - Parameters:
  ///   - request: Request to send to LiquidatePosition.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func liquidatePosition(
    _ request: Injective_Exchange_V1beta1_MsgLiquidatePosition,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgLiquidatePosition, Injective_Exchange_V1beta1_MsgLiquidatePositionResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.liquidatePosition.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLiquidatePositionInterceptors() ?? []
    )
  }

  /// IncreasePositionMargin defines a method for increasing margin of a position
  ///
  /// - Parameters:
  ///   - request: Request to send to IncreasePositionMargin.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func increasePositionMargin(
    _ request: Injective_Exchange_V1beta1_MsgIncreasePositionMargin,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgIncreasePositionMargin, Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.increasePositionMargin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeIncreasePositionMarginInterceptors() ?? []
    )
  }

  /// RewardsOptOut defines a method for opting out of rewards
  ///
  /// - Parameters:
  ///   - request: Request to send to RewardsOptOut.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func rewardsOptOut(
    _ request: Injective_Exchange_V1beta1_MsgRewardsOptOut,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgRewardsOptOut, Injective_Exchange_V1beta1_MsgRewardsOptOutResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.rewardsOptOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRewardsOptOutInterceptors() ?? []
    )
  }

  /// AdminUpdateBinaryOptionsMarket defines method for updating a binary options
  /// market by admin
  ///
  /// - Parameters:
  ///   - request: Request to send to AdminUpdateBinaryOptionsMarket.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func adminUpdateBinaryOptionsMarket(
    _ request: Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket, Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarketResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.adminUpdateBinaryOptionsMarket.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAdminUpdateBinaryOptionsMarketInterceptors() ?? []
    )
  }

  /// Unary call to ReclaimLockedFunds
  ///
  /// - Parameters:
  ///   - request: Request to send to ReclaimLockedFunds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func reclaimLockedFunds(
    _ request: Injective_Exchange_V1beta1_MsgReclaimLockedFunds,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgReclaimLockedFunds, Injective_Exchange_V1beta1_MsgReclaimLockedFundsResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.reclaimLockedFunds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReclaimLockedFundsInterceptors() ?? []
    )
  }

  /// Unary call to UpdateParams
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateParams.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateParams(
    _ request: Injective_Exchange_V1beta1_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgUpdateParams, Injective_Exchange_V1beta1_MsgUpdateParamsResponse> {
    return self.makeUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.updateParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Injective_Exchange_V1beta1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Injective_Exchange_V1beta1_MsgNIOClient")
internal final class Injective_Exchange_V1beta1_MsgClient: Injective_Exchange_V1beta1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the injective.exchange.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Injective_Exchange_V1beta1_MsgNIOClient: Injective_Exchange_V1beta1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the injective.exchange.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the exchange Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Injective_Exchange_V1beta1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func makeDepositCall(
    _ request: Injective_Exchange_V1beta1_MsgDeposit,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgDeposit, Injective_Exchange_V1beta1_MsgDepositResponse>

  func makeWithdrawCall(
    _ request: Injective_Exchange_V1beta1_MsgWithdraw,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgWithdraw, Injective_Exchange_V1beta1_MsgWithdrawResponse>

  func makeInstantSpotMarketLaunchCall(
    _ request: Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch, Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse>

  func makeInstantPerpetualMarketLaunchCall(
    _ request: Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch, Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse>

  func makeInstantExpiryFuturesMarketLaunchCall(
    _ request: Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch, Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse>

  func makeCreateSpotLimitOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder, Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse>

  func makeBatchCreateSpotLimitOrdersCall(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse>

  func makeCreateSpotMarketOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder, Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse>

  func makeCancelSpotOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCancelSpotOrder,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCancelSpotOrder, Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse>

  func makeBatchCancelSpotOrdersCall(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders, Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse>

  func makeBatchUpdateOrdersCall(
    _ request: Injective_Exchange_V1beta1_MsgBatchUpdateOrders,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgBatchUpdateOrders, Injective_Exchange_V1beta1_MsgBatchUpdateOrdersResponse>

  func makePrivilegedExecuteContractCall(
    _ request: Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract, Injective_Exchange_V1beta1_MsgPrivilegedExecuteContractResponse>

  func makeCreateDerivativeLimitOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse>

  func makeBatchCreateDerivativeLimitOrdersCall(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse>

  func makeCreateDerivativeMarketOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse>

  func makeCancelDerivativeOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCancelDerivativeOrder,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder, Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse>

  func makeBatchCancelDerivativeOrdersCall(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders, Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse>

  func makeInstantBinaryOptionsMarketLaunchCall(
    _ request: Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch, Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunchResponse>

  func makeCreateBinaryOptionsLimitOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder, Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrderResponse>

  func makeCreateBinaryOptionsMarketOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder, Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrderResponse>

  func makeCancelBinaryOptionsOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder, Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrderResponse>

  func makeBatchCancelBinaryOptionsOrdersCall(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders, Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrdersResponse>

  func makeSubaccountTransferCall(
    _ request: Injective_Exchange_V1beta1_MsgSubaccountTransfer,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgSubaccountTransfer, Injective_Exchange_V1beta1_MsgSubaccountTransferResponse>

  func makeExternalTransferCall(
    _ request: Injective_Exchange_V1beta1_MsgExternalTransfer,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgExternalTransfer, Injective_Exchange_V1beta1_MsgExternalTransferResponse>

  func makeLiquidatePositionCall(
    _ request: Injective_Exchange_V1beta1_MsgLiquidatePosition,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgLiquidatePosition, Injective_Exchange_V1beta1_MsgLiquidatePositionResponse>

  func makeIncreasePositionMarginCall(
    _ request: Injective_Exchange_V1beta1_MsgIncreasePositionMargin,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgIncreasePositionMargin, Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse>

  func makeRewardsOptOutCall(
    _ request: Injective_Exchange_V1beta1_MsgRewardsOptOut,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgRewardsOptOut, Injective_Exchange_V1beta1_MsgRewardsOptOutResponse>

  func makeAdminUpdateBinaryOptionsMarketCall(
    _ request: Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket, Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarketResponse>

  func makeReclaimLockedFundsCall(
    _ request: Injective_Exchange_V1beta1_MsgReclaimLockedFunds,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgReclaimLockedFunds, Injective_Exchange_V1beta1_MsgReclaimLockedFundsResponse>

  func makeUpdateParamsCall(
    _ request: Injective_Exchange_V1beta1_MsgUpdateParams,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgUpdateParams, Injective_Exchange_V1beta1_MsgUpdateParamsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Injective_Exchange_V1beta1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Injective_Exchange_V1beta1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeDepositCall(
    _ request: Injective_Exchange_V1beta1_MsgDeposit,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgDeposit, Injective_Exchange_V1beta1_MsgDepositResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.deposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  internal func makeWithdrawCall(
    _ request: Injective_Exchange_V1beta1_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgWithdraw, Injective_Exchange_V1beta1_MsgWithdrawResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.withdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  internal func makeInstantSpotMarketLaunchCall(
    _ request: Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch, Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantSpotMarketLaunch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantSpotMarketLaunchInterceptors() ?? []
    )
  }

  internal func makeInstantPerpetualMarketLaunchCall(
    _ request: Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch, Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantPerpetualMarketLaunch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantPerpetualMarketLaunchInterceptors() ?? []
    )
  }

  internal func makeInstantExpiryFuturesMarketLaunchCall(
    _ request: Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch, Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantExpiryFuturesMarketLaunch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantExpiryFuturesMarketLaunchInterceptors() ?? []
    )
  }

  internal func makeCreateSpotLimitOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder, Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createSpotLimitOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSpotLimitOrderInterceptors() ?? []
    )
  }

  internal func makeBatchCreateSpotLimitOrdersCall(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCreateSpotLimitOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateSpotLimitOrdersInterceptors() ?? []
    )
  }

  internal func makeCreateSpotMarketOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder, Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createSpotMarketOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSpotMarketOrderInterceptors() ?? []
    )
  }

  internal func makeCancelSpotOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCancelSpotOrder,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCancelSpotOrder, Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.cancelSpotOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelSpotOrderInterceptors() ?? []
    )
  }

  internal func makeBatchCancelSpotOrdersCall(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders, Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCancelSpotOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCancelSpotOrdersInterceptors() ?? []
    )
  }

  internal func makeBatchUpdateOrdersCall(
    _ request: Injective_Exchange_V1beta1_MsgBatchUpdateOrders,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgBatchUpdateOrders, Injective_Exchange_V1beta1_MsgBatchUpdateOrdersResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchUpdateOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchUpdateOrdersInterceptors() ?? []
    )
  }

  internal func makePrivilegedExecuteContractCall(
    _ request: Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract, Injective_Exchange_V1beta1_MsgPrivilegedExecuteContractResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.privilegedExecuteContract.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePrivilegedExecuteContractInterceptors() ?? []
    )
  }

  internal func makeCreateDerivativeLimitOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createDerivativeLimitOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDerivativeLimitOrderInterceptors() ?? []
    )
  }

  internal func makeBatchCreateDerivativeLimitOrdersCall(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCreateDerivativeLimitOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateDerivativeLimitOrdersInterceptors() ?? []
    )
  }

  internal func makeCreateDerivativeMarketOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createDerivativeMarketOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDerivativeMarketOrderInterceptors() ?? []
    )
  }

  internal func makeCancelDerivativeOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCancelDerivativeOrder,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder, Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.cancelDerivativeOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelDerivativeOrderInterceptors() ?? []
    )
  }

  internal func makeBatchCancelDerivativeOrdersCall(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders, Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCancelDerivativeOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCancelDerivativeOrdersInterceptors() ?? []
    )
  }

  internal func makeInstantBinaryOptionsMarketLaunchCall(
    _ request: Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch, Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunchResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantBinaryOptionsMarketLaunch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantBinaryOptionsMarketLaunchInterceptors() ?? []
    )
  }

  internal func makeCreateBinaryOptionsLimitOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder, Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrderResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createBinaryOptionsLimitOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateBinaryOptionsLimitOrderInterceptors() ?? []
    )
  }

  internal func makeCreateBinaryOptionsMarketOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder, Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrderResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createBinaryOptionsMarketOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateBinaryOptionsMarketOrderInterceptors() ?? []
    )
  }

  internal func makeCancelBinaryOptionsOrderCall(
    _ request: Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder, Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrderResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.cancelBinaryOptionsOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelBinaryOptionsOrderInterceptors() ?? []
    )
  }

  internal func makeBatchCancelBinaryOptionsOrdersCall(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders, Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrdersResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCancelBinaryOptionsOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCancelBinaryOptionsOrdersInterceptors() ?? []
    )
  }

  internal func makeSubaccountTransferCall(
    _ request: Injective_Exchange_V1beta1_MsgSubaccountTransfer,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgSubaccountTransfer, Injective_Exchange_V1beta1_MsgSubaccountTransferResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.subaccountTransfer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubaccountTransferInterceptors() ?? []
    )
  }

  internal func makeExternalTransferCall(
    _ request: Injective_Exchange_V1beta1_MsgExternalTransfer,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgExternalTransfer, Injective_Exchange_V1beta1_MsgExternalTransferResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.externalTransfer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExternalTransferInterceptors() ?? []
    )
  }

  internal func makeLiquidatePositionCall(
    _ request: Injective_Exchange_V1beta1_MsgLiquidatePosition,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgLiquidatePosition, Injective_Exchange_V1beta1_MsgLiquidatePositionResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.liquidatePosition.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLiquidatePositionInterceptors() ?? []
    )
  }

  internal func makeIncreasePositionMarginCall(
    _ request: Injective_Exchange_V1beta1_MsgIncreasePositionMargin,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgIncreasePositionMargin, Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.increasePositionMargin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeIncreasePositionMarginInterceptors() ?? []
    )
  }

  internal func makeRewardsOptOutCall(
    _ request: Injective_Exchange_V1beta1_MsgRewardsOptOut,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgRewardsOptOut, Injective_Exchange_V1beta1_MsgRewardsOptOutResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.rewardsOptOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRewardsOptOutInterceptors() ?? []
    )
  }

  internal func makeAdminUpdateBinaryOptionsMarketCall(
    _ request: Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket, Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarketResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.adminUpdateBinaryOptionsMarket.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAdminUpdateBinaryOptionsMarketInterceptors() ?? []
    )
  }

  internal func makeReclaimLockedFundsCall(
    _ request: Injective_Exchange_V1beta1_MsgReclaimLockedFunds,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgReclaimLockedFunds, Injective_Exchange_V1beta1_MsgReclaimLockedFundsResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.reclaimLockedFunds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReclaimLockedFundsInterceptors() ?? []
    )
  }

  internal func makeUpdateParamsCall(
    _ request: Injective_Exchange_V1beta1_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Injective_Exchange_V1beta1_MsgUpdateParams, Injective_Exchange_V1beta1_MsgUpdateParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.updateParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Injective_Exchange_V1beta1_MsgAsyncClientProtocol {
  internal func deposit(
    _ request: Injective_Exchange_V1beta1_MsgDeposit,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgDepositResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.deposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  internal func withdraw(
    _ request: Injective_Exchange_V1beta1_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgWithdrawResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.withdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  internal func instantSpotMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantSpotMarketLaunch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantSpotMarketLaunchInterceptors() ?? []
    )
  }

  internal func instantPerpetualMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantPerpetualMarketLaunch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantPerpetualMarketLaunchInterceptors() ?? []
    )
  }

  internal func instantExpiryFuturesMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantExpiryFuturesMarketLaunch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantExpiryFuturesMarketLaunchInterceptors() ?? []
    )
  }

  internal func createSpotLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createSpotLimitOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSpotLimitOrderInterceptors() ?? []
    )
  }

  internal func batchCreateSpotLimitOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCreateSpotLimitOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateSpotLimitOrdersInterceptors() ?? []
    )
  }

  internal func createSpotMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createSpotMarketOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSpotMarketOrderInterceptors() ?? []
    )
  }

  internal func cancelSpotOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelSpotOrder,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.cancelSpotOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelSpotOrderInterceptors() ?? []
    )
  }

  internal func batchCancelSpotOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCancelSpotOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCancelSpotOrdersInterceptors() ?? []
    )
  }

  internal func batchUpdateOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchUpdateOrders,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgBatchUpdateOrdersResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchUpdateOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchUpdateOrdersInterceptors() ?? []
    )
  }

  internal func privilegedExecuteContract(
    _ request: Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgPrivilegedExecuteContractResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.privilegedExecuteContract.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePrivilegedExecuteContractInterceptors() ?? []
    )
  }

  internal func createDerivativeLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createDerivativeLimitOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDerivativeLimitOrderInterceptors() ?? []
    )
  }

  internal func batchCreateDerivativeLimitOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCreateDerivativeLimitOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateDerivativeLimitOrdersInterceptors() ?? []
    )
  }

  internal func createDerivativeMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createDerivativeMarketOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDerivativeMarketOrderInterceptors() ?? []
    )
  }

  internal func cancelDerivativeOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelDerivativeOrder,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.cancelDerivativeOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelDerivativeOrderInterceptors() ?? []
    )
  }

  internal func batchCancelDerivativeOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCancelDerivativeOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCancelDerivativeOrdersInterceptors() ?? []
    )
  }

  internal func instantBinaryOptionsMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunchResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantBinaryOptionsMarketLaunch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantBinaryOptionsMarketLaunchInterceptors() ?? []
    )
  }

  internal func createBinaryOptionsLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrderResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createBinaryOptionsLimitOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateBinaryOptionsLimitOrderInterceptors() ?? []
    )
  }

  internal func createBinaryOptionsMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrderResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createBinaryOptionsMarketOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateBinaryOptionsMarketOrderInterceptors() ?? []
    )
  }

  internal func cancelBinaryOptionsOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrderResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.cancelBinaryOptionsOrder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelBinaryOptionsOrderInterceptors() ?? []
    )
  }

  internal func batchCancelBinaryOptionsOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrdersResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCancelBinaryOptionsOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCancelBinaryOptionsOrdersInterceptors() ?? []
    )
  }

  internal func subaccountTransfer(
    _ request: Injective_Exchange_V1beta1_MsgSubaccountTransfer,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgSubaccountTransferResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.subaccountTransfer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubaccountTransferInterceptors() ?? []
    )
  }

  internal func externalTransfer(
    _ request: Injective_Exchange_V1beta1_MsgExternalTransfer,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgExternalTransferResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.externalTransfer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExternalTransferInterceptors() ?? []
    )
  }

  internal func liquidatePosition(
    _ request: Injective_Exchange_V1beta1_MsgLiquidatePosition,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgLiquidatePositionResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.liquidatePosition.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLiquidatePositionInterceptors() ?? []
    )
  }

  internal func increasePositionMargin(
    _ request: Injective_Exchange_V1beta1_MsgIncreasePositionMargin,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.increasePositionMargin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeIncreasePositionMarginInterceptors() ?? []
    )
  }

  internal func rewardsOptOut(
    _ request: Injective_Exchange_V1beta1_MsgRewardsOptOut,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgRewardsOptOutResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.rewardsOptOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRewardsOptOutInterceptors() ?? []
    )
  }

  internal func adminUpdateBinaryOptionsMarket(
    _ request: Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarketResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.adminUpdateBinaryOptionsMarket.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAdminUpdateBinaryOptionsMarketInterceptors() ?? []
    )
  }

  internal func reclaimLockedFunds(
    _ request: Injective_Exchange_V1beta1_MsgReclaimLockedFunds,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgReclaimLockedFundsResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.reclaimLockedFunds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReclaimLockedFundsInterceptors() ?? []
    )
  }

  internal func updateParams(
    _ request: Injective_Exchange_V1beta1_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) async throws -> Injective_Exchange_V1beta1_MsgUpdateParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Injective_Exchange_V1beta1_MsgClientMetadata.Methods.updateParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Injective_Exchange_V1beta1_MsgAsyncClient: Injective_Exchange_V1beta1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'deposit'.
  func makeDepositInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgDeposit, Injective_Exchange_V1beta1_MsgDepositResponse>]

  /// - Returns: Interceptors to use when invoking 'withdraw'.
  func makeWithdrawInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgWithdraw, Injective_Exchange_V1beta1_MsgWithdrawResponse>]

  /// - Returns: Interceptors to use when invoking 'instantSpotMarketLaunch'.
  func makeInstantSpotMarketLaunchInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch, Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse>]

  /// - Returns: Interceptors to use when invoking 'instantPerpetualMarketLaunch'.
  func makeInstantPerpetualMarketLaunchInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch, Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse>]

  /// - Returns: Interceptors to use when invoking 'instantExpiryFuturesMarketLaunch'.
  func makeInstantExpiryFuturesMarketLaunchInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch, Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse>]

  /// - Returns: Interceptors to use when invoking 'createSpotLimitOrder'.
  func makeCreateSpotLimitOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder, Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'batchCreateSpotLimitOrders'.
  func makeBatchCreateSpotLimitOrdersInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'createSpotMarketOrder'.
  func makeCreateSpotMarketOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder, Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'cancelSpotOrder'.
  func makeCancelSpotOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCancelSpotOrder, Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'batchCancelSpotOrders'.
  func makeBatchCancelSpotOrdersInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders, Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'batchUpdateOrders'.
  func makeBatchUpdateOrdersInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgBatchUpdateOrders, Injective_Exchange_V1beta1_MsgBatchUpdateOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'privilegedExecuteContract'.
  func makePrivilegedExecuteContractInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract, Injective_Exchange_V1beta1_MsgPrivilegedExecuteContractResponse>]

  /// - Returns: Interceptors to use when invoking 'createDerivativeLimitOrder'.
  func makeCreateDerivativeLimitOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'batchCreateDerivativeLimitOrders'.
  func makeBatchCreateDerivativeLimitOrdersInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'createDerivativeMarketOrder'.
  func makeCreateDerivativeMarketOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'cancelDerivativeOrder'.
  func makeCancelDerivativeOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder, Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'batchCancelDerivativeOrders'.
  func makeBatchCancelDerivativeOrdersInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders, Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'instantBinaryOptionsMarketLaunch'.
  func makeInstantBinaryOptionsMarketLaunchInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch, Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunchResponse>]

  /// - Returns: Interceptors to use when invoking 'createBinaryOptionsLimitOrder'.
  func makeCreateBinaryOptionsLimitOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder, Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'createBinaryOptionsMarketOrder'.
  func makeCreateBinaryOptionsMarketOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder, Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'cancelBinaryOptionsOrder'.
  func makeCancelBinaryOptionsOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder, Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'batchCancelBinaryOptionsOrders'.
  func makeBatchCancelBinaryOptionsOrdersInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders, Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'subaccountTransfer'.
  func makeSubaccountTransferInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgSubaccountTransfer, Injective_Exchange_V1beta1_MsgSubaccountTransferResponse>]

  /// - Returns: Interceptors to use when invoking 'externalTransfer'.
  func makeExternalTransferInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgExternalTransfer, Injective_Exchange_V1beta1_MsgExternalTransferResponse>]

  /// - Returns: Interceptors to use when invoking 'liquidatePosition'.
  func makeLiquidatePositionInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgLiquidatePosition, Injective_Exchange_V1beta1_MsgLiquidatePositionResponse>]

  /// - Returns: Interceptors to use when invoking 'increasePositionMargin'.
  func makeIncreasePositionMarginInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgIncreasePositionMargin, Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse>]

  /// - Returns: Interceptors to use when invoking 'rewardsOptOut'.
  func makeRewardsOptOutInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgRewardsOptOut, Injective_Exchange_V1beta1_MsgRewardsOptOutResponse>]

  /// - Returns: Interceptors to use when invoking 'adminUpdateBinaryOptionsMarket'.
  func makeAdminUpdateBinaryOptionsMarketInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket, Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarketResponse>]

  /// - Returns: Interceptors to use when invoking 'reclaimLockedFunds'.
  func makeReclaimLockedFundsInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgReclaimLockedFunds, Injective_Exchange_V1beta1_MsgReclaimLockedFundsResponse>]

  /// - Returns: Interceptors to use when invoking 'updateParams'.
  func makeUpdateParamsInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgUpdateParams, Injective_Exchange_V1beta1_MsgUpdateParamsResponse>]
}

internal enum Injective_Exchange_V1beta1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "injective.exchange.v1beta1.Msg",
    methods: [
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.deposit,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.withdraw,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantSpotMarketLaunch,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantPerpetualMarketLaunch,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantExpiryFuturesMarketLaunch,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createSpotLimitOrder,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCreateSpotLimitOrders,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createSpotMarketOrder,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.cancelSpotOrder,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCancelSpotOrders,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchUpdateOrders,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.privilegedExecuteContract,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createDerivativeLimitOrder,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCreateDerivativeLimitOrders,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createDerivativeMarketOrder,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.cancelDerivativeOrder,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCancelDerivativeOrders,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.instantBinaryOptionsMarketLaunch,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createBinaryOptionsLimitOrder,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.createBinaryOptionsMarketOrder,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.cancelBinaryOptionsOrder,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.batchCancelBinaryOptionsOrders,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.subaccountTransfer,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.externalTransfer,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.liquidatePosition,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.increasePositionMargin,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.rewardsOptOut,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.adminUpdateBinaryOptionsMarket,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.reclaimLockedFunds,
      Injective_Exchange_V1beta1_MsgClientMetadata.Methods.updateParams,
    ]
  )

  internal enum Methods {
    internal static let deposit = GRPCMethodDescriptor(
      name: "Deposit",
      path: "/injective.exchange.v1beta1.Msg/Deposit",
      type: GRPCCallType.unary
    )

    internal static let withdraw = GRPCMethodDescriptor(
      name: "Withdraw",
      path: "/injective.exchange.v1beta1.Msg/Withdraw",
      type: GRPCCallType.unary
    )

    internal static let instantSpotMarketLaunch = GRPCMethodDescriptor(
      name: "InstantSpotMarketLaunch",
      path: "/injective.exchange.v1beta1.Msg/InstantSpotMarketLaunch",
      type: GRPCCallType.unary
    )

    internal static let instantPerpetualMarketLaunch = GRPCMethodDescriptor(
      name: "InstantPerpetualMarketLaunch",
      path: "/injective.exchange.v1beta1.Msg/InstantPerpetualMarketLaunch",
      type: GRPCCallType.unary
    )

    internal static let instantExpiryFuturesMarketLaunch = GRPCMethodDescriptor(
      name: "InstantExpiryFuturesMarketLaunch",
      path: "/injective.exchange.v1beta1.Msg/InstantExpiryFuturesMarketLaunch",
      type: GRPCCallType.unary
    )

    internal static let createSpotLimitOrder = GRPCMethodDescriptor(
      name: "CreateSpotLimitOrder",
      path: "/injective.exchange.v1beta1.Msg/CreateSpotLimitOrder",
      type: GRPCCallType.unary
    )

    internal static let batchCreateSpotLimitOrders = GRPCMethodDescriptor(
      name: "BatchCreateSpotLimitOrders",
      path: "/injective.exchange.v1beta1.Msg/BatchCreateSpotLimitOrders",
      type: GRPCCallType.unary
    )

    internal static let createSpotMarketOrder = GRPCMethodDescriptor(
      name: "CreateSpotMarketOrder",
      path: "/injective.exchange.v1beta1.Msg/CreateSpotMarketOrder",
      type: GRPCCallType.unary
    )

    internal static let cancelSpotOrder = GRPCMethodDescriptor(
      name: "CancelSpotOrder",
      path: "/injective.exchange.v1beta1.Msg/CancelSpotOrder",
      type: GRPCCallType.unary
    )

    internal static let batchCancelSpotOrders = GRPCMethodDescriptor(
      name: "BatchCancelSpotOrders",
      path: "/injective.exchange.v1beta1.Msg/BatchCancelSpotOrders",
      type: GRPCCallType.unary
    )

    internal static let batchUpdateOrders = GRPCMethodDescriptor(
      name: "BatchUpdateOrders",
      path: "/injective.exchange.v1beta1.Msg/BatchUpdateOrders",
      type: GRPCCallType.unary
    )

    internal static let privilegedExecuteContract = GRPCMethodDescriptor(
      name: "PrivilegedExecuteContract",
      path: "/injective.exchange.v1beta1.Msg/PrivilegedExecuteContract",
      type: GRPCCallType.unary
    )

    internal static let createDerivativeLimitOrder = GRPCMethodDescriptor(
      name: "CreateDerivativeLimitOrder",
      path: "/injective.exchange.v1beta1.Msg/CreateDerivativeLimitOrder",
      type: GRPCCallType.unary
    )

    internal static let batchCreateDerivativeLimitOrders = GRPCMethodDescriptor(
      name: "BatchCreateDerivativeLimitOrders",
      path: "/injective.exchange.v1beta1.Msg/BatchCreateDerivativeLimitOrders",
      type: GRPCCallType.unary
    )

    internal static let createDerivativeMarketOrder = GRPCMethodDescriptor(
      name: "CreateDerivativeMarketOrder",
      path: "/injective.exchange.v1beta1.Msg/CreateDerivativeMarketOrder",
      type: GRPCCallType.unary
    )

    internal static let cancelDerivativeOrder = GRPCMethodDescriptor(
      name: "CancelDerivativeOrder",
      path: "/injective.exchange.v1beta1.Msg/CancelDerivativeOrder",
      type: GRPCCallType.unary
    )

    internal static let batchCancelDerivativeOrders = GRPCMethodDescriptor(
      name: "BatchCancelDerivativeOrders",
      path: "/injective.exchange.v1beta1.Msg/BatchCancelDerivativeOrders",
      type: GRPCCallType.unary
    )

    internal static let instantBinaryOptionsMarketLaunch = GRPCMethodDescriptor(
      name: "InstantBinaryOptionsMarketLaunch",
      path: "/injective.exchange.v1beta1.Msg/InstantBinaryOptionsMarketLaunch",
      type: GRPCCallType.unary
    )

    internal static let createBinaryOptionsLimitOrder = GRPCMethodDescriptor(
      name: "CreateBinaryOptionsLimitOrder",
      path: "/injective.exchange.v1beta1.Msg/CreateBinaryOptionsLimitOrder",
      type: GRPCCallType.unary
    )

    internal static let createBinaryOptionsMarketOrder = GRPCMethodDescriptor(
      name: "CreateBinaryOptionsMarketOrder",
      path: "/injective.exchange.v1beta1.Msg/CreateBinaryOptionsMarketOrder",
      type: GRPCCallType.unary
    )

    internal static let cancelBinaryOptionsOrder = GRPCMethodDescriptor(
      name: "CancelBinaryOptionsOrder",
      path: "/injective.exchange.v1beta1.Msg/CancelBinaryOptionsOrder",
      type: GRPCCallType.unary
    )

    internal static let batchCancelBinaryOptionsOrders = GRPCMethodDescriptor(
      name: "BatchCancelBinaryOptionsOrders",
      path: "/injective.exchange.v1beta1.Msg/BatchCancelBinaryOptionsOrders",
      type: GRPCCallType.unary
    )

    internal static let subaccountTransfer = GRPCMethodDescriptor(
      name: "SubaccountTransfer",
      path: "/injective.exchange.v1beta1.Msg/SubaccountTransfer",
      type: GRPCCallType.unary
    )

    internal static let externalTransfer = GRPCMethodDescriptor(
      name: "ExternalTransfer",
      path: "/injective.exchange.v1beta1.Msg/ExternalTransfer",
      type: GRPCCallType.unary
    )

    internal static let liquidatePosition = GRPCMethodDescriptor(
      name: "LiquidatePosition",
      path: "/injective.exchange.v1beta1.Msg/LiquidatePosition",
      type: GRPCCallType.unary
    )

    internal static let increasePositionMargin = GRPCMethodDescriptor(
      name: "IncreasePositionMargin",
      path: "/injective.exchange.v1beta1.Msg/IncreasePositionMargin",
      type: GRPCCallType.unary
    )

    internal static let rewardsOptOut = GRPCMethodDescriptor(
      name: "RewardsOptOut",
      path: "/injective.exchange.v1beta1.Msg/RewardsOptOut",
      type: GRPCCallType.unary
    )

    internal static let adminUpdateBinaryOptionsMarket = GRPCMethodDescriptor(
      name: "AdminUpdateBinaryOptionsMarket",
      path: "/injective.exchange.v1beta1.Msg/AdminUpdateBinaryOptionsMarket",
      type: GRPCCallType.unary
    )

    internal static let reclaimLockedFunds = GRPCMethodDescriptor(
      name: "ReclaimLockedFunds",
      path: "/injective.exchange.v1beta1.Msg/ReclaimLockedFunds",
      type: GRPCCallType.unary
    )

    internal static let updateParams = GRPCMethodDescriptor(
      name: "UpdateParams",
      path: "/injective.exchange.v1beta1.Msg/UpdateParams",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the exchange Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Injective_Exchange_V1beta1_MsgProvider: CallHandlerProvider {
  var interceptors: Injective_Exchange_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// Deposit defines a method for transferring coins from the sender's bank
  /// balance into the subaccount's exchange deposits
  func deposit(request: Injective_Exchange_V1beta1_MsgDeposit, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgDepositResponse>

  /// Withdraw defines a method for withdrawing coins from a subaccount's
  /// deposits to the user's bank balance
  func withdraw(request: Injective_Exchange_V1beta1_MsgWithdraw, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgWithdrawResponse>

  /// InstantSpotMarketLaunch defines method for creating a spot market by paying
  /// listing fee without governance
  func instantSpotMarketLaunch(request: Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse>

  /// InstantPerpetualMarketLaunch defines a method for creating a new perpetual
  /// futures market by paying listing fee without governance
  func instantPerpetualMarketLaunch(request: Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse>

  /// InstantExpiryFuturesMarketLaunch defines a method for creating a new expiry
  /// futures market by paying listing fee without governance
  func instantExpiryFuturesMarketLaunch(request: Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse>

  /// CreateSpotLimitOrder defines a method for creating a new spot limit order.
  func createSpotLimitOrder(request: Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse>

  /// BatchCreateSpotLimitOrder defines a method for creating a new batch of spot
  /// limit orders.
  func batchCreateSpotLimitOrders(request: Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse>

  /// CreateSpotMarketOrder defines a method for creating a new spot market
  /// order.
  func createSpotMarketOrder(request: Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse>

  /// MsgCancelSpotOrder defines a method for cancelling a spot order.
  func cancelSpotOrder(request: Injective_Exchange_V1beta1_MsgCancelSpotOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse>

  /// BatchCancelSpotOrders defines a method for cancelling a batch of spot
  /// orders in a given market.
  func batchCancelSpotOrders(request: Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse>

  /// BatchUpdateOrders defines a method for updating a batch of orders.
  func batchUpdateOrders(request: Injective_Exchange_V1beta1_MsgBatchUpdateOrders, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgBatchUpdateOrdersResponse>

  /// PrivilegedExecuteContract defines a method for executing a Cosmwasm
  /// contract from the exchange module with privileged capabilities.
  func privilegedExecuteContract(request: Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgPrivilegedExecuteContractResponse>

  /// CreateDerivativeLimitOrder defines a method for creating a new derivative
  /// limit order.
  func createDerivativeLimitOrder(request: Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse>

  /// BatchCreateDerivativeLimitOrders defines a method for creating a new batch
  /// of derivative limit orders.
  func batchCreateDerivativeLimitOrders(request: Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse>

  /// MsgCreateDerivativeLimitOrder defines a method for creating a new
  /// derivative market order.
  func createDerivativeMarketOrder(request: Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse>

  /// MsgCancelDerivativeOrder defines a method for cancelling a derivative
  /// order.
  func cancelDerivativeOrder(request: Injective_Exchange_V1beta1_MsgCancelDerivativeOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse>

  /// MsgBatchCancelDerivativeOrders defines a method for cancelling a batch of
  /// derivative limit orders.
  func batchCancelDerivativeOrders(request: Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse>

  /// InstantBinaryOptionsMarketLaunch defines method for creating a binary
  /// options market by paying listing fee without governance
  func instantBinaryOptionsMarketLaunch(request: Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunchResponse>

  /// CreateBinaryOptionsLimitOrder defines a method for creating a new binary
  /// options limit order.
  func createBinaryOptionsLimitOrder(request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrderResponse>

  /// CreateBinaryOptionsMarketOrder defines a method for creating a new binary
  /// options market order.
  func createBinaryOptionsMarketOrder(request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrderResponse>

  /// MsgCancelBinaryOptionsOrder defines a method for cancelling a binary
  /// options order.
  func cancelBinaryOptionsOrder(request: Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrderResponse>

  /// BatchCancelBinaryOptionsOrders defines a method for cancelling a batch of
  /// binary options limit orders.
  func batchCancelBinaryOptionsOrders(request: Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrdersResponse>

  /// SubaccountTransfer defines a method for transfer between subaccounts
  func subaccountTransfer(request: Injective_Exchange_V1beta1_MsgSubaccountTransfer, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgSubaccountTransferResponse>

  /// ExternalTransfer defines a method for transfer between external accounts
  func externalTransfer(request: Injective_Exchange_V1beta1_MsgExternalTransfer, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgExternalTransferResponse>

  /// LiquidatePosition defines a method for liquidating a position
  func liquidatePosition(request: Injective_Exchange_V1beta1_MsgLiquidatePosition, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgLiquidatePositionResponse>

  /// IncreasePositionMargin defines a method for increasing margin of a position
  func increasePositionMargin(request: Injective_Exchange_V1beta1_MsgIncreasePositionMargin, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse>

  /// RewardsOptOut defines a method for opting out of rewards
  func rewardsOptOut(request: Injective_Exchange_V1beta1_MsgRewardsOptOut, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgRewardsOptOutResponse>

  /// AdminUpdateBinaryOptionsMarket defines method for updating a binary options
  /// market by admin
  func adminUpdateBinaryOptionsMarket(request: Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarketResponse>

  func reclaimLockedFunds(request: Injective_Exchange_V1beta1_MsgReclaimLockedFunds, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgReclaimLockedFundsResponse>

  func updateParams(request: Injective_Exchange_V1beta1_MsgUpdateParams, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgUpdateParamsResponse>
}

extension Injective_Exchange_V1beta1_MsgProvider {
  internal var serviceName: Substring {
    return Injective_Exchange_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Deposit":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgDeposit>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgDepositResponse>(),
        interceptors: self.interceptors?.makeDepositInterceptors() ?? [],
        userFunction: self.deposit(request:context:)
      )

    case "Withdraw":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgWithdraw>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgWithdrawResponse>(),
        interceptors: self.interceptors?.makeWithdrawInterceptors() ?? [],
        userFunction: self.withdraw(request:context:)
      )

    case "InstantSpotMarketLaunch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse>(),
        interceptors: self.interceptors?.makeInstantSpotMarketLaunchInterceptors() ?? [],
        userFunction: self.instantSpotMarketLaunch(request:context:)
      )

    case "InstantPerpetualMarketLaunch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse>(),
        interceptors: self.interceptors?.makeInstantPerpetualMarketLaunchInterceptors() ?? [],
        userFunction: self.instantPerpetualMarketLaunch(request:context:)
      )

    case "InstantExpiryFuturesMarketLaunch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse>(),
        interceptors: self.interceptors?.makeInstantExpiryFuturesMarketLaunchInterceptors() ?? [],
        userFunction: self.instantExpiryFuturesMarketLaunch(request:context:)
      )

    case "CreateSpotLimitOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse>(),
        interceptors: self.interceptors?.makeCreateSpotLimitOrderInterceptors() ?? [],
        userFunction: self.createSpotLimitOrder(request:context:)
      )

    case "BatchCreateSpotLimitOrders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCreateSpotLimitOrdersInterceptors() ?? [],
        userFunction: self.batchCreateSpotLimitOrders(request:context:)
      )

    case "CreateSpotMarketOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse>(),
        interceptors: self.interceptors?.makeCreateSpotMarketOrderInterceptors() ?? [],
        userFunction: self.createSpotMarketOrder(request:context:)
      )

    case "CancelSpotOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCancelSpotOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse>(),
        interceptors: self.interceptors?.makeCancelSpotOrderInterceptors() ?? [],
        userFunction: self.cancelSpotOrder(request:context:)
      )

    case "BatchCancelSpotOrders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCancelSpotOrdersInterceptors() ?? [],
        userFunction: self.batchCancelSpotOrders(request:context:)
      )

    case "BatchUpdateOrders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchUpdateOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchUpdateOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchUpdateOrdersInterceptors() ?? [],
        userFunction: self.batchUpdateOrders(request:context:)
      )

    case "PrivilegedExecuteContract":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgPrivilegedExecuteContractResponse>(),
        interceptors: self.interceptors?.makePrivilegedExecuteContractInterceptors() ?? [],
        userFunction: self.privilegedExecuteContract(request:context:)
      )

    case "CreateDerivativeLimitOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse>(),
        interceptors: self.interceptors?.makeCreateDerivativeLimitOrderInterceptors() ?? [],
        userFunction: self.createDerivativeLimitOrder(request:context:)
      )

    case "BatchCreateDerivativeLimitOrders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCreateDerivativeLimitOrdersInterceptors() ?? [],
        userFunction: self.batchCreateDerivativeLimitOrders(request:context:)
      )

    case "CreateDerivativeMarketOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse>(),
        interceptors: self.interceptors?.makeCreateDerivativeMarketOrderInterceptors() ?? [],
        userFunction: self.createDerivativeMarketOrder(request:context:)
      )

    case "CancelDerivativeOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse>(),
        interceptors: self.interceptors?.makeCancelDerivativeOrderInterceptors() ?? [],
        userFunction: self.cancelDerivativeOrder(request:context:)
      )

    case "BatchCancelDerivativeOrders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCancelDerivativeOrdersInterceptors() ?? [],
        userFunction: self.batchCancelDerivativeOrders(request:context:)
      )

    case "InstantBinaryOptionsMarketLaunch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunchResponse>(),
        interceptors: self.interceptors?.makeInstantBinaryOptionsMarketLaunchInterceptors() ?? [],
        userFunction: self.instantBinaryOptionsMarketLaunch(request:context:)
      )

    case "CreateBinaryOptionsLimitOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrderResponse>(),
        interceptors: self.interceptors?.makeCreateBinaryOptionsLimitOrderInterceptors() ?? [],
        userFunction: self.createBinaryOptionsLimitOrder(request:context:)
      )

    case "CreateBinaryOptionsMarketOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrderResponse>(),
        interceptors: self.interceptors?.makeCreateBinaryOptionsMarketOrderInterceptors() ?? [],
        userFunction: self.createBinaryOptionsMarketOrder(request:context:)
      )

    case "CancelBinaryOptionsOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrderResponse>(),
        interceptors: self.interceptors?.makeCancelBinaryOptionsOrderInterceptors() ?? [],
        userFunction: self.cancelBinaryOptionsOrder(request:context:)
      )

    case "BatchCancelBinaryOptionsOrders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCancelBinaryOptionsOrdersInterceptors() ?? [],
        userFunction: self.batchCancelBinaryOptionsOrders(request:context:)
      )

    case "SubaccountTransfer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgSubaccountTransfer>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgSubaccountTransferResponse>(),
        interceptors: self.interceptors?.makeSubaccountTransferInterceptors() ?? [],
        userFunction: self.subaccountTransfer(request:context:)
      )

    case "ExternalTransfer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgExternalTransfer>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgExternalTransferResponse>(),
        interceptors: self.interceptors?.makeExternalTransferInterceptors() ?? [],
        userFunction: self.externalTransfer(request:context:)
      )

    case "LiquidatePosition":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgLiquidatePosition>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgLiquidatePositionResponse>(),
        interceptors: self.interceptors?.makeLiquidatePositionInterceptors() ?? [],
        userFunction: self.liquidatePosition(request:context:)
      )

    case "IncreasePositionMargin":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgIncreasePositionMargin>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse>(),
        interceptors: self.interceptors?.makeIncreasePositionMarginInterceptors() ?? [],
        userFunction: self.increasePositionMargin(request:context:)
      )

    case "RewardsOptOut":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgRewardsOptOut>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgRewardsOptOutResponse>(),
        interceptors: self.interceptors?.makeRewardsOptOutInterceptors() ?? [],
        userFunction: self.rewardsOptOut(request:context:)
      )

    case "AdminUpdateBinaryOptionsMarket":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarketResponse>(),
        interceptors: self.interceptors?.makeAdminUpdateBinaryOptionsMarketInterceptors() ?? [],
        userFunction: self.adminUpdateBinaryOptionsMarket(request:context:)
      )

    case "ReclaimLockedFunds":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgReclaimLockedFunds>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgReclaimLockedFundsResponse>(),
        interceptors: self.interceptors?.makeReclaimLockedFundsInterceptors() ?? [],
        userFunction: self.reclaimLockedFunds(request:context:)
      )

    case "UpdateParams":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgUpdateParams>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgUpdateParamsResponse>(),
        interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? [],
        userFunction: self.updateParams(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the exchange Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Injective_Exchange_V1beta1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Injective_Exchange_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// Deposit defines a method for transferring coins from the sender's bank
  /// balance into the subaccount's exchange deposits
  @Sendable func deposit(
    request: Injective_Exchange_V1beta1_MsgDeposit,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgDepositResponse

  /// Withdraw defines a method for withdrawing coins from a subaccount's
  /// deposits to the user's bank balance
  @Sendable func withdraw(
    request: Injective_Exchange_V1beta1_MsgWithdraw,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgWithdrawResponse

  /// InstantSpotMarketLaunch defines method for creating a spot market by paying
  /// listing fee without governance
  @Sendable func instantSpotMarketLaunch(
    request: Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse

  /// InstantPerpetualMarketLaunch defines a method for creating a new perpetual
  /// futures market by paying listing fee without governance
  @Sendable func instantPerpetualMarketLaunch(
    request: Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse

  /// InstantExpiryFuturesMarketLaunch defines a method for creating a new expiry
  /// futures market by paying listing fee without governance
  @Sendable func instantExpiryFuturesMarketLaunch(
    request: Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse

  /// CreateSpotLimitOrder defines a method for creating a new spot limit order.
  @Sendable func createSpotLimitOrder(
    request: Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse

  /// BatchCreateSpotLimitOrder defines a method for creating a new batch of spot
  /// limit orders.
  @Sendable func batchCreateSpotLimitOrders(
    request: Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse

  /// CreateSpotMarketOrder defines a method for creating a new spot market
  /// order.
  @Sendable func createSpotMarketOrder(
    request: Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse

  /// MsgCancelSpotOrder defines a method for cancelling a spot order.
  @Sendable func cancelSpotOrder(
    request: Injective_Exchange_V1beta1_MsgCancelSpotOrder,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse

  /// BatchCancelSpotOrders defines a method for cancelling a batch of spot
  /// orders in a given market.
  @Sendable func batchCancelSpotOrders(
    request: Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse

  /// BatchUpdateOrders defines a method for updating a batch of orders.
  @Sendable func batchUpdateOrders(
    request: Injective_Exchange_V1beta1_MsgBatchUpdateOrders,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgBatchUpdateOrdersResponse

  /// PrivilegedExecuteContract defines a method for executing a Cosmwasm
  /// contract from the exchange module with privileged capabilities.
  @Sendable func privilegedExecuteContract(
    request: Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgPrivilegedExecuteContractResponse

  /// CreateDerivativeLimitOrder defines a method for creating a new derivative
  /// limit order.
  @Sendable func createDerivativeLimitOrder(
    request: Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse

  /// BatchCreateDerivativeLimitOrders defines a method for creating a new batch
  /// of derivative limit orders.
  @Sendable func batchCreateDerivativeLimitOrders(
    request: Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse

  /// MsgCreateDerivativeLimitOrder defines a method for creating a new
  /// derivative market order.
  @Sendable func createDerivativeMarketOrder(
    request: Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse

  /// MsgCancelDerivativeOrder defines a method for cancelling a derivative
  /// order.
  @Sendable func cancelDerivativeOrder(
    request: Injective_Exchange_V1beta1_MsgCancelDerivativeOrder,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse

  /// MsgBatchCancelDerivativeOrders defines a method for cancelling a batch of
  /// derivative limit orders.
  @Sendable func batchCancelDerivativeOrders(
    request: Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse

  /// InstantBinaryOptionsMarketLaunch defines method for creating a binary
  /// options market by paying listing fee without governance
  @Sendable func instantBinaryOptionsMarketLaunch(
    request: Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunchResponse

  /// CreateBinaryOptionsLimitOrder defines a method for creating a new binary
  /// options limit order.
  @Sendable func createBinaryOptionsLimitOrder(
    request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrderResponse

  /// CreateBinaryOptionsMarketOrder defines a method for creating a new binary
  /// options market order.
  @Sendable func createBinaryOptionsMarketOrder(
    request: Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrderResponse

  /// MsgCancelBinaryOptionsOrder defines a method for cancelling a binary
  /// options order.
  @Sendable func cancelBinaryOptionsOrder(
    request: Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrderResponse

  /// BatchCancelBinaryOptionsOrders defines a method for cancelling a batch of
  /// binary options limit orders.
  @Sendable func batchCancelBinaryOptionsOrders(
    request: Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrdersResponse

  /// SubaccountTransfer defines a method for transfer between subaccounts
  @Sendable func subaccountTransfer(
    request: Injective_Exchange_V1beta1_MsgSubaccountTransfer,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgSubaccountTransferResponse

  /// ExternalTransfer defines a method for transfer between external accounts
  @Sendable func externalTransfer(
    request: Injective_Exchange_V1beta1_MsgExternalTransfer,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgExternalTransferResponse

  /// LiquidatePosition defines a method for liquidating a position
  @Sendable func liquidatePosition(
    request: Injective_Exchange_V1beta1_MsgLiquidatePosition,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgLiquidatePositionResponse

  /// IncreasePositionMargin defines a method for increasing margin of a position
  @Sendable func increasePositionMargin(
    request: Injective_Exchange_V1beta1_MsgIncreasePositionMargin,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse

  /// RewardsOptOut defines a method for opting out of rewards
  @Sendable func rewardsOptOut(
    request: Injective_Exchange_V1beta1_MsgRewardsOptOut,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgRewardsOptOutResponse

  /// AdminUpdateBinaryOptionsMarket defines method for updating a binary options
  /// market by admin
  @Sendable func adminUpdateBinaryOptionsMarket(
    request: Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarketResponse

  @Sendable func reclaimLockedFunds(
    request: Injective_Exchange_V1beta1_MsgReclaimLockedFunds,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgReclaimLockedFundsResponse

  @Sendable func updateParams(
    request: Injective_Exchange_V1beta1_MsgUpdateParams,
    context: GRPCAsyncServerCallContext
  ) async throws -> Injective_Exchange_V1beta1_MsgUpdateParamsResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Injective_Exchange_V1beta1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Injective_Exchange_V1beta1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Injective_Exchange_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Injective_Exchange_V1beta1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Deposit":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgDeposit>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgDepositResponse>(),
        interceptors: self.interceptors?.makeDepositInterceptors() ?? [],
        wrapping: self.deposit(request:context:)
      )

    case "Withdraw":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgWithdraw>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgWithdrawResponse>(),
        interceptors: self.interceptors?.makeWithdrawInterceptors() ?? [],
        wrapping: self.withdraw(request:context:)
      )

    case "InstantSpotMarketLaunch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse>(),
        interceptors: self.interceptors?.makeInstantSpotMarketLaunchInterceptors() ?? [],
        wrapping: self.instantSpotMarketLaunch(request:context:)
      )

    case "InstantPerpetualMarketLaunch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse>(),
        interceptors: self.interceptors?.makeInstantPerpetualMarketLaunchInterceptors() ?? [],
        wrapping: self.instantPerpetualMarketLaunch(request:context:)
      )

    case "InstantExpiryFuturesMarketLaunch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse>(),
        interceptors: self.interceptors?.makeInstantExpiryFuturesMarketLaunchInterceptors() ?? [],
        wrapping: self.instantExpiryFuturesMarketLaunch(request:context:)
      )

    case "CreateSpotLimitOrder":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse>(),
        interceptors: self.interceptors?.makeCreateSpotLimitOrderInterceptors() ?? [],
        wrapping: self.createSpotLimitOrder(request:context:)
      )

    case "BatchCreateSpotLimitOrders":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCreateSpotLimitOrdersInterceptors() ?? [],
        wrapping: self.batchCreateSpotLimitOrders(request:context:)
      )

    case "CreateSpotMarketOrder":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse>(),
        interceptors: self.interceptors?.makeCreateSpotMarketOrderInterceptors() ?? [],
        wrapping: self.createSpotMarketOrder(request:context:)
      )

    case "CancelSpotOrder":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCancelSpotOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse>(),
        interceptors: self.interceptors?.makeCancelSpotOrderInterceptors() ?? [],
        wrapping: self.cancelSpotOrder(request:context:)
      )

    case "BatchCancelSpotOrders":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCancelSpotOrdersInterceptors() ?? [],
        wrapping: self.batchCancelSpotOrders(request:context:)
      )

    case "BatchUpdateOrders":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchUpdateOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchUpdateOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchUpdateOrdersInterceptors() ?? [],
        wrapping: self.batchUpdateOrders(request:context:)
      )

    case "PrivilegedExecuteContract":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgPrivilegedExecuteContractResponse>(),
        interceptors: self.interceptors?.makePrivilegedExecuteContractInterceptors() ?? [],
        wrapping: self.privilegedExecuteContract(request:context:)
      )

    case "CreateDerivativeLimitOrder":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse>(),
        interceptors: self.interceptors?.makeCreateDerivativeLimitOrderInterceptors() ?? [],
        wrapping: self.createDerivativeLimitOrder(request:context:)
      )

    case "BatchCreateDerivativeLimitOrders":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCreateDerivativeLimitOrdersInterceptors() ?? [],
        wrapping: self.batchCreateDerivativeLimitOrders(request:context:)
      )

    case "CreateDerivativeMarketOrder":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse>(),
        interceptors: self.interceptors?.makeCreateDerivativeMarketOrderInterceptors() ?? [],
        wrapping: self.createDerivativeMarketOrder(request:context:)
      )

    case "CancelDerivativeOrder":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse>(),
        interceptors: self.interceptors?.makeCancelDerivativeOrderInterceptors() ?? [],
        wrapping: self.cancelDerivativeOrder(request:context:)
      )

    case "BatchCancelDerivativeOrders":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCancelDerivativeOrdersInterceptors() ?? [],
        wrapping: self.batchCancelDerivativeOrders(request:context:)
      )

    case "InstantBinaryOptionsMarketLaunch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunchResponse>(),
        interceptors: self.interceptors?.makeInstantBinaryOptionsMarketLaunchInterceptors() ?? [],
        wrapping: self.instantBinaryOptionsMarketLaunch(request:context:)
      )

    case "CreateBinaryOptionsLimitOrder":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrderResponse>(),
        interceptors: self.interceptors?.makeCreateBinaryOptionsLimitOrderInterceptors() ?? [],
        wrapping: self.createBinaryOptionsLimitOrder(request:context:)
      )

    case "CreateBinaryOptionsMarketOrder":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrderResponse>(),
        interceptors: self.interceptors?.makeCreateBinaryOptionsMarketOrderInterceptors() ?? [],
        wrapping: self.createBinaryOptionsMarketOrder(request:context:)
      )

    case "CancelBinaryOptionsOrder":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrderResponse>(),
        interceptors: self.interceptors?.makeCancelBinaryOptionsOrderInterceptors() ?? [],
        wrapping: self.cancelBinaryOptionsOrder(request:context:)
      )

    case "BatchCancelBinaryOptionsOrders":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCancelBinaryOptionsOrdersInterceptors() ?? [],
        wrapping: self.batchCancelBinaryOptionsOrders(request:context:)
      )

    case "SubaccountTransfer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgSubaccountTransfer>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgSubaccountTransferResponse>(),
        interceptors: self.interceptors?.makeSubaccountTransferInterceptors() ?? [],
        wrapping: self.subaccountTransfer(request:context:)
      )

    case "ExternalTransfer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgExternalTransfer>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgExternalTransferResponse>(),
        interceptors: self.interceptors?.makeExternalTransferInterceptors() ?? [],
        wrapping: self.externalTransfer(request:context:)
      )

    case "LiquidatePosition":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgLiquidatePosition>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgLiquidatePositionResponse>(),
        interceptors: self.interceptors?.makeLiquidatePositionInterceptors() ?? [],
        wrapping: self.liquidatePosition(request:context:)
      )

    case "IncreasePositionMargin":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgIncreasePositionMargin>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse>(),
        interceptors: self.interceptors?.makeIncreasePositionMarginInterceptors() ?? [],
        wrapping: self.increasePositionMargin(request:context:)
      )

    case "RewardsOptOut":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgRewardsOptOut>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgRewardsOptOutResponse>(),
        interceptors: self.interceptors?.makeRewardsOptOutInterceptors() ?? [],
        wrapping: self.rewardsOptOut(request:context:)
      )

    case "AdminUpdateBinaryOptionsMarket":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarketResponse>(),
        interceptors: self.interceptors?.makeAdminUpdateBinaryOptionsMarketInterceptors() ?? [],
        wrapping: self.adminUpdateBinaryOptionsMarket(request:context:)
      )

    case "ReclaimLockedFunds":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgReclaimLockedFunds>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgReclaimLockedFundsResponse>(),
        interceptors: self.interceptors?.makeReclaimLockedFundsInterceptors() ?? [],
        wrapping: self.reclaimLockedFunds(request:context:)
      )

    case "UpdateParams":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgUpdateParams>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgUpdateParamsResponse>(),
        interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? [],
        wrapping: self.updateParams(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Injective_Exchange_V1beta1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'deposit'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDepositInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgDeposit, Injective_Exchange_V1beta1_MsgDepositResponse>]

  /// - Returns: Interceptors to use when handling 'withdraw'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWithdrawInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgWithdraw, Injective_Exchange_V1beta1_MsgWithdrawResponse>]

  /// - Returns: Interceptors to use when handling 'instantSpotMarketLaunch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInstantSpotMarketLaunchInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch, Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse>]

  /// - Returns: Interceptors to use when handling 'instantPerpetualMarketLaunch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInstantPerpetualMarketLaunchInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch, Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse>]

  /// - Returns: Interceptors to use when handling 'instantExpiryFuturesMarketLaunch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInstantExpiryFuturesMarketLaunchInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch, Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse>]

  /// - Returns: Interceptors to use when handling 'createSpotLimitOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateSpotLimitOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder, Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse>]

  /// - Returns: Interceptors to use when handling 'batchCreateSpotLimitOrders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBatchCreateSpotLimitOrdersInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse>]

  /// - Returns: Interceptors to use when handling 'createSpotMarketOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateSpotMarketOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder, Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse>]

  /// - Returns: Interceptors to use when handling 'cancelSpotOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelSpotOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCancelSpotOrder, Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse>]

  /// - Returns: Interceptors to use when handling 'batchCancelSpotOrders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBatchCancelSpotOrdersInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders, Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse>]

  /// - Returns: Interceptors to use when handling 'batchUpdateOrders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBatchUpdateOrdersInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgBatchUpdateOrders, Injective_Exchange_V1beta1_MsgBatchUpdateOrdersResponse>]

  /// - Returns: Interceptors to use when handling 'privilegedExecuteContract'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makePrivilegedExecuteContractInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgPrivilegedExecuteContract, Injective_Exchange_V1beta1_MsgPrivilegedExecuteContractResponse>]

  /// - Returns: Interceptors to use when handling 'createDerivativeLimitOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateDerivativeLimitOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse>]

  /// - Returns: Interceptors to use when handling 'batchCreateDerivativeLimitOrders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBatchCreateDerivativeLimitOrdersInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse>]

  /// - Returns: Interceptors to use when handling 'createDerivativeMarketOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateDerivativeMarketOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse>]

  /// - Returns: Interceptors to use when handling 'cancelDerivativeOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelDerivativeOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder, Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse>]

  /// - Returns: Interceptors to use when handling 'batchCancelDerivativeOrders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBatchCancelDerivativeOrdersInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders, Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse>]

  /// - Returns: Interceptors to use when handling 'instantBinaryOptionsMarketLaunch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInstantBinaryOptionsMarketLaunchInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunch, Injective_Exchange_V1beta1_MsgInstantBinaryOptionsMarketLaunchResponse>]

  /// - Returns: Interceptors to use when handling 'createBinaryOptionsLimitOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateBinaryOptionsLimitOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrder, Injective_Exchange_V1beta1_MsgCreateBinaryOptionsLimitOrderResponse>]

  /// - Returns: Interceptors to use when handling 'createBinaryOptionsMarketOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateBinaryOptionsMarketOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrder, Injective_Exchange_V1beta1_MsgCreateBinaryOptionsMarketOrderResponse>]

  /// - Returns: Interceptors to use when handling 'cancelBinaryOptionsOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelBinaryOptionsOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrder, Injective_Exchange_V1beta1_MsgCancelBinaryOptionsOrderResponse>]

  /// - Returns: Interceptors to use when handling 'batchCancelBinaryOptionsOrders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBatchCancelBinaryOptionsOrdersInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrders, Injective_Exchange_V1beta1_MsgBatchCancelBinaryOptionsOrdersResponse>]

  /// - Returns: Interceptors to use when handling 'subaccountTransfer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSubaccountTransferInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgSubaccountTransfer, Injective_Exchange_V1beta1_MsgSubaccountTransferResponse>]

  /// - Returns: Interceptors to use when handling 'externalTransfer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeExternalTransferInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgExternalTransfer, Injective_Exchange_V1beta1_MsgExternalTransferResponse>]

  /// - Returns: Interceptors to use when handling 'liquidatePosition'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeLiquidatePositionInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgLiquidatePosition, Injective_Exchange_V1beta1_MsgLiquidatePositionResponse>]

  /// - Returns: Interceptors to use when handling 'increasePositionMargin'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeIncreasePositionMarginInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgIncreasePositionMargin, Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse>]

  /// - Returns: Interceptors to use when handling 'rewardsOptOut'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRewardsOptOutInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgRewardsOptOut, Injective_Exchange_V1beta1_MsgRewardsOptOutResponse>]

  /// - Returns: Interceptors to use when handling 'adminUpdateBinaryOptionsMarket'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAdminUpdateBinaryOptionsMarketInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarket, Injective_Exchange_V1beta1_MsgAdminUpdateBinaryOptionsMarketResponse>]

  /// - Returns: Interceptors to use when handling 'reclaimLockedFunds'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeReclaimLockedFundsInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgReclaimLockedFunds, Injective_Exchange_V1beta1_MsgReclaimLockedFundsResponse>]

  /// - Returns: Interceptors to use when handling 'updateParams'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateParamsInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgUpdateParams, Injective_Exchange_V1beta1_MsgUpdateParamsResponse>]
}

internal enum Injective_Exchange_V1beta1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "injective.exchange.v1beta1.Msg",
    methods: [
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.deposit,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.withdraw,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.instantSpotMarketLaunch,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.instantPerpetualMarketLaunch,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.instantExpiryFuturesMarketLaunch,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.createSpotLimitOrder,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.batchCreateSpotLimitOrders,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.createSpotMarketOrder,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.cancelSpotOrder,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.batchCancelSpotOrders,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.batchUpdateOrders,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.privilegedExecuteContract,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.createDerivativeLimitOrder,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.batchCreateDerivativeLimitOrders,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.createDerivativeMarketOrder,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.cancelDerivativeOrder,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.batchCancelDerivativeOrders,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.instantBinaryOptionsMarketLaunch,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.createBinaryOptionsLimitOrder,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.createBinaryOptionsMarketOrder,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.cancelBinaryOptionsOrder,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.batchCancelBinaryOptionsOrders,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.subaccountTransfer,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.externalTransfer,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.liquidatePosition,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.increasePositionMargin,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.rewardsOptOut,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.adminUpdateBinaryOptionsMarket,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.reclaimLockedFunds,
      Injective_Exchange_V1beta1_MsgServerMetadata.Methods.updateParams,
    ]
  )

  internal enum Methods {
    internal static let deposit = GRPCMethodDescriptor(
      name: "Deposit",
      path: "/injective.exchange.v1beta1.Msg/Deposit",
      type: GRPCCallType.unary
    )

    internal static let withdraw = GRPCMethodDescriptor(
      name: "Withdraw",
      path: "/injective.exchange.v1beta1.Msg/Withdraw",
      type: GRPCCallType.unary
    )

    internal static let instantSpotMarketLaunch = GRPCMethodDescriptor(
      name: "InstantSpotMarketLaunch",
      path: "/injective.exchange.v1beta1.Msg/InstantSpotMarketLaunch",
      type: GRPCCallType.unary
    )

    internal static let instantPerpetualMarketLaunch = GRPCMethodDescriptor(
      name: "InstantPerpetualMarketLaunch",
      path: "/injective.exchange.v1beta1.Msg/InstantPerpetualMarketLaunch",
      type: GRPCCallType.unary
    )

    internal static let instantExpiryFuturesMarketLaunch = GRPCMethodDescriptor(
      name: "InstantExpiryFuturesMarketLaunch",
      path: "/injective.exchange.v1beta1.Msg/InstantExpiryFuturesMarketLaunch",
      type: GRPCCallType.unary
    )

    internal static let createSpotLimitOrder = GRPCMethodDescriptor(
      name: "CreateSpotLimitOrder",
      path: "/injective.exchange.v1beta1.Msg/CreateSpotLimitOrder",
      type: GRPCCallType.unary
    )

    internal static let batchCreateSpotLimitOrders = GRPCMethodDescriptor(
      name: "BatchCreateSpotLimitOrders",
      path: "/injective.exchange.v1beta1.Msg/BatchCreateSpotLimitOrders",
      type: GRPCCallType.unary
    )

    internal static let createSpotMarketOrder = GRPCMethodDescriptor(
      name: "CreateSpotMarketOrder",
      path: "/injective.exchange.v1beta1.Msg/CreateSpotMarketOrder",
      type: GRPCCallType.unary
    )

    internal static let cancelSpotOrder = GRPCMethodDescriptor(
      name: "CancelSpotOrder",
      path: "/injective.exchange.v1beta1.Msg/CancelSpotOrder",
      type: GRPCCallType.unary
    )

    internal static let batchCancelSpotOrders = GRPCMethodDescriptor(
      name: "BatchCancelSpotOrders",
      path: "/injective.exchange.v1beta1.Msg/BatchCancelSpotOrders",
      type: GRPCCallType.unary
    )

    internal static let batchUpdateOrders = GRPCMethodDescriptor(
      name: "BatchUpdateOrders",
      path: "/injective.exchange.v1beta1.Msg/BatchUpdateOrders",
      type: GRPCCallType.unary
    )

    internal static let privilegedExecuteContract = GRPCMethodDescriptor(
      name: "PrivilegedExecuteContract",
      path: "/injective.exchange.v1beta1.Msg/PrivilegedExecuteContract",
      type: GRPCCallType.unary
    )

    internal static let createDerivativeLimitOrder = GRPCMethodDescriptor(
      name: "CreateDerivativeLimitOrder",
      path: "/injective.exchange.v1beta1.Msg/CreateDerivativeLimitOrder",
      type: GRPCCallType.unary
    )

    internal static let batchCreateDerivativeLimitOrders = GRPCMethodDescriptor(
      name: "BatchCreateDerivativeLimitOrders",
      path: "/injective.exchange.v1beta1.Msg/BatchCreateDerivativeLimitOrders",
      type: GRPCCallType.unary
    )

    internal static let createDerivativeMarketOrder = GRPCMethodDescriptor(
      name: "CreateDerivativeMarketOrder",
      path: "/injective.exchange.v1beta1.Msg/CreateDerivativeMarketOrder",
      type: GRPCCallType.unary
    )

    internal static let cancelDerivativeOrder = GRPCMethodDescriptor(
      name: "CancelDerivativeOrder",
      path: "/injective.exchange.v1beta1.Msg/CancelDerivativeOrder",
      type: GRPCCallType.unary
    )

    internal static let batchCancelDerivativeOrders = GRPCMethodDescriptor(
      name: "BatchCancelDerivativeOrders",
      path: "/injective.exchange.v1beta1.Msg/BatchCancelDerivativeOrders",
      type: GRPCCallType.unary
    )

    internal static let instantBinaryOptionsMarketLaunch = GRPCMethodDescriptor(
      name: "InstantBinaryOptionsMarketLaunch",
      path: "/injective.exchange.v1beta1.Msg/InstantBinaryOptionsMarketLaunch",
      type: GRPCCallType.unary
    )

    internal static let createBinaryOptionsLimitOrder = GRPCMethodDescriptor(
      name: "CreateBinaryOptionsLimitOrder",
      path: "/injective.exchange.v1beta1.Msg/CreateBinaryOptionsLimitOrder",
      type: GRPCCallType.unary
    )

    internal static let createBinaryOptionsMarketOrder = GRPCMethodDescriptor(
      name: "CreateBinaryOptionsMarketOrder",
      path: "/injective.exchange.v1beta1.Msg/CreateBinaryOptionsMarketOrder",
      type: GRPCCallType.unary
    )

    internal static let cancelBinaryOptionsOrder = GRPCMethodDescriptor(
      name: "CancelBinaryOptionsOrder",
      path: "/injective.exchange.v1beta1.Msg/CancelBinaryOptionsOrder",
      type: GRPCCallType.unary
    )

    internal static let batchCancelBinaryOptionsOrders = GRPCMethodDescriptor(
      name: "BatchCancelBinaryOptionsOrders",
      path: "/injective.exchange.v1beta1.Msg/BatchCancelBinaryOptionsOrders",
      type: GRPCCallType.unary
    )

    internal static let subaccountTransfer = GRPCMethodDescriptor(
      name: "SubaccountTransfer",
      path: "/injective.exchange.v1beta1.Msg/SubaccountTransfer",
      type: GRPCCallType.unary
    )

    internal static let externalTransfer = GRPCMethodDescriptor(
      name: "ExternalTransfer",
      path: "/injective.exchange.v1beta1.Msg/ExternalTransfer",
      type: GRPCCallType.unary
    )

    internal static let liquidatePosition = GRPCMethodDescriptor(
      name: "LiquidatePosition",
      path: "/injective.exchange.v1beta1.Msg/LiquidatePosition",
      type: GRPCCallType.unary
    )

    internal static let increasePositionMargin = GRPCMethodDescriptor(
      name: "IncreasePositionMargin",
      path: "/injective.exchange.v1beta1.Msg/IncreasePositionMargin",
      type: GRPCCallType.unary
    )

    internal static let rewardsOptOut = GRPCMethodDescriptor(
      name: "RewardsOptOut",
      path: "/injective.exchange.v1beta1.Msg/RewardsOptOut",
      type: GRPCCallType.unary
    )

    internal static let adminUpdateBinaryOptionsMarket = GRPCMethodDescriptor(
      name: "AdminUpdateBinaryOptionsMarket",
      path: "/injective.exchange.v1beta1.Msg/AdminUpdateBinaryOptionsMarket",
      type: GRPCCallType.unary
    )

    internal static let reclaimLockedFunds = GRPCMethodDescriptor(
      name: "ReclaimLockedFunds",
      path: "/injective.exchange.v1beta1.Msg/ReclaimLockedFunds",
      type: GRPCCallType.unary
    )

    internal static let updateParams = GRPCMethodDescriptor(
      name: "UpdateParams",
      path: "/injective.exchange.v1beta1.Msg/UpdateParams",
      type: GRPCCallType.unary
    )
  }
}

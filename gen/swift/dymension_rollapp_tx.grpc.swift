//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: dymension/rollapp/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the Msg service.
///
/// Usage: instantiate `Dymensionxyz_Dymension_Rollapp_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Dymensionxyz_Dymension_Rollapp_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Dymensionxyz_Dymension_Rollapp_MsgClientInterceptorFactoryProtocol? { get }

  func createRollapp(
    _ request: Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp,
    callOptions: CallOptions?
  ) -> UnaryCall<Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp, Dymensionxyz_Dymension_Rollapp_MsgCreateRollappResponse>

  func updateState(
    _ request: Dymensionxyz_Dymension_Rollapp_MsgUpdateState,
    callOptions: CallOptions?
  ) -> UnaryCall<Dymensionxyz_Dymension_Rollapp_MsgUpdateState, Dymensionxyz_Dymension_Rollapp_MsgUpdateStateResponse>
}

extension Dymensionxyz_Dymension_Rollapp_MsgClientProtocol {
  internal var serviceName: String {
    return "dymensionxyz.dymension.rollapp.Msg"
  }

  /// Unary call to CreateRollapp
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateRollapp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createRollapp(
    _ request: Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp, Dymensionxyz_Dymension_Rollapp_MsgCreateRollappResponse> {
    return self.makeUnaryCall(
      path: Dymensionxyz_Dymension_Rollapp_MsgClientMetadata.Methods.createRollapp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRollappInterceptors() ?? []
    )
  }

  /// Unary call to UpdateState
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateState.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateState(
    _ request: Dymensionxyz_Dymension_Rollapp_MsgUpdateState,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dymensionxyz_Dymension_Rollapp_MsgUpdateState, Dymensionxyz_Dymension_Rollapp_MsgUpdateStateResponse> {
    return self.makeUnaryCall(
      path: Dymensionxyz_Dymension_Rollapp_MsgClientMetadata.Methods.updateState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateStateInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Dymensionxyz_Dymension_Rollapp_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Dymensionxyz_Dymension_Rollapp_MsgNIOClient")
internal final class Dymensionxyz_Dymension_Rollapp_MsgClient: Dymensionxyz_Dymension_Rollapp_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Dymensionxyz_Dymension_Rollapp_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Dymensionxyz_Dymension_Rollapp_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the dymensionxyz.dymension.rollapp.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dymensionxyz_Dymension_Rollapp_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Dymensionxyz_Dymension_Rollapp_MsgNIOClient: Dymensionxyz_Dymension_Rollapp_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Dymensionxyz_Dymension_Rollapp_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the dymensionxyz.dymension.rollapp.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dymensionxyz_Dymension_Rollapp_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Dymensionxyz_Dymension_Rollapp_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Dymensionxyz_Dymension_Rollapp_MsgClientInterceptorFactoryProtocol? { get }

  func makeCreateRollappCall(
    _ request: Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp, Dymensionxyz_Dymension_Rollapp_MsgCreateRollappResponse>

  func makeUpdateStateCall(
    _ request: Dymensionxyz_Dymension_Rollapp_MsgUpdateState,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dymensionxyz_Dymension_Rollapp_MsgUpdateState, Dymensionxyz_Dymension_Rollapp_MsgUpdateStateResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dymensionxyz_Dymension_Rollapp_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Dymensionxyz_Dymension_Rollapp_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Dymensionxyz_Dymension_Rollapp_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeCreateRollappCall(
    _ request: Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp, Dymensionxyz_Dymension_Rollapp_MsgCreateRollappResponse> {
    return self.makeAsyncUnaryCall(
      path: Dymensionxyz_Dymension_Rollapp_MsgClientMetadata.Methods.createRollapp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRollappInterceptors() ?? []
    )
  }

  internal func makeUpdateStateCall(
    _ request: Dymensionxyz_Dymension_Rollapp_MsgUpdateState,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dymensionxyz_Dymension_Rollapp_MsgUpdateState, Dymensionxyz_Dymension_Rollapp_MsgUpdateStateResponse> {
    return self.makeAsyncUnaryCall(
      path: Dymensionxyz_Dymension_Rollapp_MsgClientMetadata.Methods.updateState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateStateInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dymensionxyz_Dymension_Rollapp_MsgAsyncClientProtocol {
  internal func createRollapp(
    _ request: Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp,
    callOptions: CallOptions? = nil
  ) async throws -> Dymensionxyz_Dymension_Rollapp_MsgCreateRollappResponse {
    return try await self.performAsyncUnaryCall(
      path: Dymensionxyz_Dymension_Rollapp_MsgClientMetadata.Methods.createRollapp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRollappInterceptors() ?? []
    )
  }

  internal func updateState(
    _ request: Dymensionxyz_Dymension_Rollapp_MsgUpdateState,
    callOptions: CallOptions? = nil
  ) async throws -> Dymensionxyz_Dymension_Rollapp_MsgUpdateStateResponse {
    return try await self.performAsyncUnaryCall(
      path: Dymensionxyz_Dymension_Rollapp_MsgClientMetadata.Methods.updateState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateStateInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Dymensionxyz_Dymension_Rollapp_MsgAsyncClient: Dymensionxyz_Dymension_Rollapp_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Dymensionxyz_Dymension_Rollapp_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dymensionxyz_Dymension_Rollapp_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Dymensionxyz_Dymension_Rollapp_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'createRollapp'.
  func makeCreateRollappInterceptors() -> [ClientInterceptor<Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp, Dymensionxyz_Dymension_Rollapp_MsgCreateRollappResponse>]

  /// - Returns: Interceptors to use when invoking 'updateState'.
  func makeUpdateStateInterceptors() -> [ClientInterceptor<Dymensionxyz_Dymension_Rollapp_MsgUpdateState, Dymensionxyz_Dymension_Rollapp_MsgUpdateStateResponse>]
}

internal enum Dymensionxyz_Dymension_Rollapp_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "dymensionxyz.dymension.rollapp.Msg",
    methods: [
      Dymensionxyz_Dymension_Rollapp_MsgClientMetadata.Methods.createRollapp,
      Dymensionxyz_Dymension_Rollapp_MsgClientMetadata.Methods.updateState,
    ]
  )

  internal enum Methods {
    internal static let createRollapp = GRPCMethodDescriptor(
      name: "CreateRollapp",
      path: "/dymensionxyz.dymension.rollapp.Msg/CreateRollapp",
      type: GRPCCallType.unary
    )

    internal static let updateState = GRPCMethodDescriptor(
      name: "UpdateState",
      path: "/dymensionxyz.dymension.rollapp.Msg/UpdateState",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Dymensionxyz_Dymension_Rollapp_MsgProvider: CallHandlerProvider {
  var interceptors: Dymensionxyz_Dymension_Rollapp_MsgServerInterceptorFactoryProtocol? { get }

  func createRollapp(request: Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp, context: StatusOnlyCallContext) -> EventLoopFuture<Dymensionxyz_Dymension_Rollapp_MsgCreateRollappResponse>

  func updateState(request: Dymensionxyz_Dymension_Rollapp_MsgUpdateState, context: StatusOnlyCallContext) -> EventLoopFuture<Dymensionxyz_Dymension_Rollapp_MsgUpdateStateResponse>
}

extension Dymensionxyz_Dymension_Rollapp_MsgProvider {
  internal var serviceName: Substring {
    return Dymensionxyz_Dymension_Rollapp_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateRollapp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp>(),
        responseSerializer: ProtobufSerializer<Dymensionxyz_Dymension_Rollapp_MsgCreateRollappResponse>(),
        interceptors: self.interceptors?.makeCreateRollappInterceptors() ?? [],
        userFunction: self.createRollapp(request:context:)
      )

    case "UpdateState":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Dymensionxyz_Dymension_Rollapp_MsgUpdateState>(),
        responseSerializer: ProtobufSerializer<Dymensionxyz_Dymension_Rollapp_MsgUpdateStateResponse>(),
        interceptors: self.interceptors?.makeUpdateStateInterceptors() ?? [],
        userFunction: self.updateState(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Dymensionxyz_Dymension_Rollapp_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Dymensionxyz_Dymension_Rollapp_MsgServerInterceptorFactoryProtocol? { get }

  @Sendable func createRollapp(
    request: Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp,
    context: GRPCAsyncServerCallContext
  ) async throws -> Dymensionxyz_Dymension_Rollapp_MsgCreateRollappResponse

  @Sendable func updateState(
    request: Dymensionxyz_Dymension_Rollapp_MsgUpdateState,
    context: GRPCAsyncServerCallContext
  ) async throws -> Dymensionxyz_Dymension_Rollapp_MsgUpdateStateResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dymensionxyz_Dymension_Rollapp_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Dymensionxyz_Dymension_Rollapp_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Dymensionxyz_Dymension_Rollapp_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Dymensionxyz_Dymension_Rollapp_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateRollapp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp>(),
        responseSerializer: ProtobufSerializer<Dymensionxyz_Dymension_Rollapp_MsgCreateRollappResponse>(),
        interceptors: self.interceptors?.makeCreateRollappInterceptors() ?? [],
        wrapping: self.createRollapp(request:context:)
      )

    case "UpdateState":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Dymensionxyz_Dymension_Rollapp_MsgUpdateState>(),
        responseSerializer: ProtobufSerializer<Dymensionxyz_Dymension_Rollapp_MsgUpdateStateResponse>(),
        interceptors: self.interceptors?.makeUpdateStateInterceptors() ?? [],
        wrapping: self.updateState(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Dymensionxyz_Dymension_Rollapp_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'createRollapp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateRollappInterceptors() -> [ServerInterceptor<Dymensionxyz_Dymension_Rollapp_MsgCreateRollapp, Dymensionxyz_Dymension_Rollapp_MsgCreateRollappResponse>]

  /// - Returns: Interceptors to use when handling 'updateState'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateStateInterceptors() -> [ServerInterceptor<Dymensionxyz_Dymension_Rollapp_MsgUpdateState, Dymensionxyz_Dymension_Rollapp_MsgUpdateStateResponse>]
}

internal enum Dymensionxyz_Dymension_Rollapp_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "dymensionxyz.dymension.rollapp.Msg",
    methods: [
      Dymensionxyz_Dymension_Rollapp_MsgServerMetadata.Methods.createRollapp,
      Dymensionxyz_Dymension_Rollapp_MsgServerMetadata.Methods.updateState,
    ]
  )

  internal enum Methods {
    internal static let createRollapp = GRPCMethodDescriptor(
      name: "CreateRollapp",
      path: "/dymensionxyz.dymension.rollapp.Msg/CreateRollapp",
      type: GRPCCallType.unary
    )

    internal static let updateState = GRPCMethodDescriptor(
      name: "UpdateState",
      path: "/dymensionxyz.dymension.rollapp.Msg/UpdateState",
      type: GRPCCallType.unary
    )
  }
}

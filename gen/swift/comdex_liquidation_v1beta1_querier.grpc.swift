//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: comdex/liquidation/v1beta1/querier.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Comdex_Liquidation_V1beta1_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Comdex_Liquidation_V1beta1_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Comdex_Liquidation_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func queryLockedVault(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultResponse>

  func queryLockedVaults(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsResponse>

  func queryLiquidationParams(
    _ request: Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest, Comdex_Liquidation_V1beta1_QueryLiquidationParamsResponse>

  func queryLockedVaultsHistory(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryResponse>

  func queryUserLockedVaults(
    _ request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest, Comdex_Liquidation_V1beta1_QueryUserLockedVaultsResponse>

  func queryUserLockedVaultsHistory(
    _ request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest, Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryResponse>

  func queryLockedVaultsPair(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsPairResponse>

  func queryAppIds(
    _ request: Comdex_Liquidation_V1beta1_QueryAppIdsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryAppIdsRequest, Comdex_Liquidation_V1beta1_QueryAppIdsResponse>
}

extension Comdex_Liquidation_V1beta1_QueryClientProtocol {
  internal var serviceName: String {
    return "comdex.liquidation.v1beta1.Query"
  }

  /// Unary call to QueryLockedVault
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockedVault.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockedVault(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultResponse> {
    return self.makeUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVault.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockedVaultInterceptors() ?? []
    )
  }

  /// Unary call to QueryLockedVaults
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockedVaults.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockedVaults(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsResponse> {
    return self.makeUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVaults.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockedVaultsInterceptors() ?? []
    )
  }

  /// Unary call to QueryLiquidationParams
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLiquidationParams.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLiquidationParams(
    _ request: Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest, Comdex_Liquidation_V1beta1_QueryLiquidationParamsResponse> {
    return self.makeUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLiquidationParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLiquidationParamsInterceptors() ?? []
    )
  }

  /// Unary call to QueryLockedVaultsHistory
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockedVaultsHistory.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockedVaultsHistory(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryResponse> {
    return self.makeUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVaultsHistory.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockedVaultsHistoryInterceptors() ?? []
    )
  }

  /// Unary call to QueryUserLockedVaults
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryUserLockedVaults.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryUserLockedVaults(
    _ request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest, Comdex_Liquidation_V1beta1_QueryUserLockedVaultsResponse> {
    return self.makeUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryUserLockedVaults.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryUserLockedVaultsInterceptors() ?? []
    )
  }

  /// Unary call to QueryUserLockedVaultsHistory
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryUserLockedVaultsHistory.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryUserLockedVaultsHistory(
    _ request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest, Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryResponse> {
    return self.makeUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryUserLockedVaultsHistory.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryUserLockedVaultsHistoryInterceptors() ?? []
    )
  }

  /// Unary call to QueryLockedVaultsPair
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryLockedVaultsPair.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryLockedVaultsPair(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsPairResponse> {
    return self.makeUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVaultsPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockedVaultsPairInterceptors() ?? []
    )
  }

  /// Unary call to QueryAppIds
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryAppIds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryAppIds(
    _ request: Comdex_Liquidation_V1beta1_QueryAppIdsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Liquidation_V1beta1_QueryAppIdsRequest, Comdex_Liquidation_V1beta1_QueryAppIdsResponse> {
    return self.makeUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryAppIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAppIdsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Comdex_Liquidation_V1beta1_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Comdex_Liquidation_V1beta1_QueryNIOClient")
internal final class Comdex_Liquidation_V1beta1_QueryClient: Comdex_Liquidation_V1beta1_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Comdex_Liquidation_V1beta1_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Comdex_Liquidation_V1beta1_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the comdex.liquidation.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Liquidation_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Comdex_Liquidation_V1beta1_QueryNIOClient: Comdex_Liquidation_V1beta1_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Comdex_Liquidation_V1beta1_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the comdex.liquidation.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Liquidation_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Comdex_Liquidation_V1beta1_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Comdex_Liquidation_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func makeQueryLockedVaultCall(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultResponse>

  func makeQueryLockedVaultsCall(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsResponse>

  func makeQueryLiquidationParamsCall(
    _ request: Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest, Comdex_Liquidation_V1beta1_QueryLiquidationParamsResponse>

  func makeQueryLockedVaultsHistoryCall(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryResponse>

  func makeQueryUserLockedVaultsCall(
    _ request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest, Comdex_Liquidation_V1beta1_QueryUserLockedVaultsResponse>

  func makeQueryUserLockedVaultsHistoryCall(
    _ request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest, Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryResponse>

  func makeQueryLockedVaultsPairCall(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsPairResponse>

  func makeQueryAppIdsCall(
    _ request: Comdex_Liquidation_V1beta1_QueryAppIdsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryAppIdsRequest, Comdex_Liquidation_V1beta1_QueryAppIdsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Liquidation_V1beta1_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Comdex_Liquidation_V1beta1_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Comdex_Liquidation_V1beta1_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeQueryLockedVaultCall(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVault.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockedVaultInterceptors() ?? []
    )
  }

  internal func makeQueryLockedVaultsCall(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVaults.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockedVaultsInterceptors() ?? []
    )
  }

  internal func makeQueryLiquidationParamsCall(
    _ request: Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest, Comdex_Liquidation_V1beta1_QueryLiquidationParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLiquidationParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLiquidationParamsInterceptors() ?? []
    )
  }

  internal func makeQueryLockedVaultsHistoryCall(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVaultsHistory.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockedVaultsHistoryInterceptors() ?? []
    )
  }

  internal func makeQueryUserLockedVaultsCall(
    _ request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest, Comdex_Liquidation_V1beta1_QueryUserLockedVaultsResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryUserLockedVaults.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryUserLockedVaultsInterceptors() ?? []
    )
  }

  internal func makeQueryUserLockedVaultsHistoryCall(
    _ request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest, Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryUserLockedVaultsHistory.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryUserLockedVaultsHistoryInterceptors() ?? []
    )
  }

  internal func makeQueryLockedVaultsPairCall(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsPairResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVaultsPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockedVaultsPairInterceptors() ?? []
    )
  }

  internal func makeQueryAppIdsCall(
    _ request: Comdex_Liquidation_V1beta1_QueryAppIdsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Liquidation_V1beta1_QueryAppIdsRequest, Comdex_Liquidation_V1beta1_QueryAppIdsResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryAppIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAppIdsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Liquidation_V1beta1_QueryAsyncClientProtocol {
  internal func queryLockedVault(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Liquidation_V1beta1_QueryLockedVaultResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVault.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockedVaultInterceptors() ?? []
    )
  }

  internal func queryLockedVaults(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Liquidation_V1beta1_QueryLockedVaultsResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVaults.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockedVaultsInterceptors() ?? []
    )
  }

  internal func queryLiquidationParams(
    _ request: Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Liquidation_V1beta1_QueryLiquidationParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLiquidationParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLiquidationParamsInterceptors() ?? []
    )
  }

  internal func queryLockedVaultsHistory(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVaultsHistory.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockedVaultsHistoryInterceptors() ?? []
    )
  }

  internal func queryUserLockedVaults(
    _ request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Liquidation_V1beta1_QueryUserLockedVaultsResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryUserLockedVaults.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryUserLockedVaultsInterceptors() ?? []
    )
  }

  internal func queryUserLockedVaultsHistory(
    _ request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryUserLockedVaultsHistory.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryUserLockedVaultsHistoryInterceptors() ?? []
    )
  }

  internal func queryLockedVaultsPair(
    _ request: Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Liquidation_V1beta1_QueryLockedVaultsPairResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVaultsPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryLockedVaultsPairInterceptors() ?? []
    )
  }

  internal func queryAppIds(
    _ request: Comdex_Liquidation_V1beta1_QueryAppIdsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Liquidation_V1beta1_QueryAppIdsResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryAppIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAppIdsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Comdex_Liquidation_V1beta1_QueryAsyncClient: Comdex_Liquidation_V1beta1_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Comdex_Liquidation_V1beta1_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Liquidation_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Comdex_Liquidation_V1beta1_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'queryLockedVault'.
  func makeQueryLockedVaultInterceptors() -> [ClientInterceptor<Comdex_Liquidation_V1beta1_QueryLockedVaultRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLockedVaults'.
  func makeQueryLockedVaultsInterceptors() -> [ClientInterceptor<Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLiquidationParams'.
  func makeQueryLiquidationParamsInterceptors() -> [ClientInterceptor<Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest, Comdex_Liquidation_V1beta1_QueryLiquidationParamsResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLockedVaultsHistory'.
  func makeQueryLockedVaultsHistoryInterceptors() -> [ClientInterceptor<Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryResponse>]

  /// - Returns: Interceptors to use when invoking 'queryUserLockedVaults'.
  func makeQueryUserLockedVaultsInterceptors() -> [ClientInterceptor<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest, Comdex_Liquidation_V1beta1_QueryUserLockedVaultsResponse>]

  /// - Returns: Interceptors to use when invoking 'queryUserLockedVaultsHistory'.
  func makeQueryUserLockedVaultsHistoryInterceptors() -> [ClientInterceptor<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest, Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryResponse>]

  /// - Returns: Interceptors to use when invoking 'queryLockedVaultsPair'.
  func makeQueryLockedVaultsPairInterceptors() -> [ClientInterceptor<Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsPairResponse>]

  /// - Returns: Interceptors to use when invoking 'queryAppIds'.
  func makeQueryAppIdsInterceptors() -> [ClientInterceptor<Comdex_Liquidation_V1beta1_QueryAppIdsRequest, Comdex_Liquidation_V1beta1_QueryAppIdsResponse>]
}

internal enum Comdex_Liquidation_V1beta1_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "comdex.liquidation.v1beta1.Query",
    methods: [
      Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVault,
      Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVaults,
      Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLiquidationParams,
      Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVaultsHistory,
      Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryUserLockedVaults,
      Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryUserLockedVaultsHistory,
      Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryLockedVaultsPair,
      Comdex_Liquidation_V1beta1_QueryClientMetadata.Methods.queryAppIds,
    ]
  )

  internal enum Methods {
    internal static let queryLockedVault = GRPCMethodDescriptor(
      name: "QueryLockedVault",
      path: "/comdex.liquidation.v1beta1.Query/QueryLockedVault",
      type: GRPCCallType.unary
    )

    internal static let queryLockedVaults = GRPCMethodDescriptor(
      name: "QueryLockedVaults",
      path: "/comdex.liquidation.v1beta1.Query/QueryLockedVaults",
      type: GRPCCallType.unary
    )

    internal static let queryLiquidationParams = GRPCMethodDescriptor(
      name: "QueryLiquidationParams",
      path: "/comdex.liquidation.v1beta1.Query/QueryLiquidationParams",
      type: GRPCCallType.unary
    )

    internal static let queryLockedVaultsHistory = GRPCMethodDescriptor(
      name: "QueryLockedVaultsHistory",
      path: "/comdex.liquidation.v1beta1.Query/QueryLockedVaultsHistory",
      type: GRPCCallType.unary
    )

    internal static let queryUserLockedVaults = GRPCMethodDescriptor(
      name: "QueryUserLockedVaults",
      path: "/comdex.liquidation.v1beta1.Query/QueryUserLockedVaults",
      type: GRPCCallType.unary
    )

    internal static let queryUserLockedVaultsHistory = GRPCMethodDescriptor(
      name: "QueryUserLockedVaultsHistory",
      path: "/comdex.liquidation.v1beta1.Query/QueryUserLockedVaultsHistory",
      type: GRPCCallType.unary
    )

    internal static let queryLockedVaultsPair = GRPCMethodDescriptor(
      name: "QueryLockedVaultsPair",
      path: "/comdex.liquidation.v1beta1.Query/QueryLockedVaultsPair",
      type: GRPCCallType.unary
    )

    internal static let queryAppIds = GRPCMethodDescriptor(
      name: "QueryAppIds",
      path: "/comdex.liquidation.v1beta1.Query/QueryAppIds",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Comdex_Liquidation_V1beta1_QueryProvider: CallHandlerProvider {
  var interceptors: Comdex_Liquidation_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  func queryLockedVault(request: Comdex_Liquidation_V1beta1_QueryLockedVaultRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Liquidation_V1beta1_QueryLockedVaultResponse>

  func queryLockedVaults(request: Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Liquidation_V1beta1_QueryLockedVaultsResponse>

  func queryLiquidationParams(request: Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Liquidation_V1beta1_QueryLiquidationParamsResponse>

  func queryLockedVaultsHistory(request: Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryResponse>

  func queryUserLockedVaults(request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsResponse>

  func queryUserLockedVaultsHistory(request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryResponse>

  func queryLockedVaultsPair(request: Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Liquidation_V1beta1_QueryLockedVaultsPairResponse>

  func queryAppIds(request: Comdex_Liquidation_V1beta1_QueryAppIdsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Liquidation_V1beta1_QueryAppIdsResponse>
}

extension Comdex_Liquidation_V1beta1_QueryProvider {
  internal var serviceName: Substring {
    return Comdex_Liquidation_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "QueryLockedVault":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryLockedVaultRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryLockedVaultResponse>(),
        interceptors: self.interceptors?.makeQueryLockedVaultInterceptors() ?? [],
        userFunction: self.queryLockedVault(request:context:)
      )

    case "QueryLockedVaults":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryLockedVaultsResponse>(),
        interceptors: self.interceptors?.makeQueryLockedVaultsInterceptors() ?? [],
        userFunction: self.queryLockedVaults(request:context:)
      )

    case "QueryLiquidationParams":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryLiquidationParamsResponse>(),
        interceptors: self.interceptors?.makeQueryLiquidationParamsInterceptors() ?? [],
        userFunction: self.queryLiquidationParams(request:context:)
      )

    case "QueryLockedVaultsHistory":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryResponse>(),
        interceptors: self.interceptors?.makeQueryLockedVaultsHistoryInterceptors() ?? [],
        userFunction: self.queryLockedVaultsHistory(request:context:)
      )

    case "QueryUserLockedVaults":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsResponse>(),
        interceptors: self.interceptors?.makeQueryUserLockedVaultsInterceptors() ?? [],
        userFunction: self.queryUserLockedVaults(request:context:)
      )

    case "QueryUserLockedVaultsHistory":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryResponse>(),
        interceptors: self.interceptors?.makeQueryUserLockedVaultsHistoryInterceptors() ?? [],
        userFunction: self.queryUserLockedVaultsHistory(request:context:)
      )

    case "QueryLockedVaultsPair":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryLockedVaultsPairResponse>(),
        interceptors: self.interceptors?.makeQueryLockedVaultsPairInterceptors() ?? [],
        userFunction: self.queryLockedVaultsPair(request:context:)
      )

    case "QueryAppIds":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryAppIdsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryAppIdsResponse>(),
        interceptors: self.interceptors?.makeQueryAppIdsInterceptors() ?? [],
        userFunction: self.queryAppIds(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Comdex_Liquidation_V1beta1_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Comdex_Liquidation_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  @Sendable func queryLockedVault(
    request: Comdex_Liquidation_V1beta1_QueryLockedVaultRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Liquidation_V1beta1_QueryLockedVaultResponse

  @Sendable func queryLockedVaults(
    request: Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Liquidation_V1beta1_QueryLockedVaultsResponse

  @Sendable func queryLiquidationParams(
    request: Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Liquidation_V1beta1_QueryLiquidationParamsResponse

  @Sendable func queryLockedVaultsHistory(
    request: Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryResponse

  @Sendable func queryUserLockedVaults(
    request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Liquidation_V1beta1_QueryUserLockedVaultsResponse

  @Sendable func queryUserLockedVaultsHistory(
    request: Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryResponse

  @Sendable func queryLockedVaultsPair(
    request: Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Liquidation_V1beta1_QueryLockedVaultsPairResponse

  @Sendable func queryAppIds(
    request: Comdex_Liquidation_V1beta1_QueryAppIdsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Liquidation_V1beta1_QueryAppIdsResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Liquidation_V1beta1_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Comdex_Liquidation_V1beta1_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Comdex_Liquidation_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Comdex_Liquidation_V1beta1_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "QueryLockedVault":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryLockedVaultRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryLockedVaultResponse>(),
        interceptors: self.interceptors?.makeQueryLockedVaultInterceptors() ?? [],
        wrapping: self.queryLockedVault(request:context:)
      )

    case "QueryLockedVaults":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryLockedVaultsResponse>(),
        interceptors: self.interceptors?.makeQueryLockedVaultsInterceptors() ?? [],
        wrapping: self.queryLockedVaults(request:context:)
      )

    case "QueryLiquidationParams":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryLiquidationParamsResponse>(),
        interceptors: self.interceptors?.makeQueryLiquidationParamsInterceptors() ?? [],
        wrapping: self.queryLiquidationParams(request:context:)
      )

    case "QueryLockedVaultsHistory":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryResponse>(),
        interceptors: self.interceptors?.makeQueryLockedVaultsHistoryInterceptors() ?? [],
        wrapping: self.queryLockedVaultsHistory(request:context:)
      )

    case "QueryUserLockedVaults":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsResponse>(),
        interceptors: self.interceptors?.makeQueryUserLockedVaultsInterceptors() ?? [],
        wrapping: self.queryUserLockedVaults(request:context:)
      )

    case "QueryUserLockedVaultsHistory":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryResponse>(),
        interceptors: self.interceptors?.makeQueryUserLockedVaultsHistoryInterceptors() ?? [],
        wrapping: self.queryUserLockedVaultsHistory(request:context:)
      )

    case "QueryLockedVaultsPair":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryLockedVaultsPairResponse>(),
        interceptors: self.interceptors?.makeQueryLockedVaultsPairInterceptors() ?? [],
        wrapping: self.queryLockedVaultsPair(request:context:)
      )

    case "QueryAppIds":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Liquidation_V1beta1_QueryAppIdsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Liquidation_V1beta1_QueryAppIdsResponse>(),
        interceptors: self.interceptors?.makeQueryAppIdsInterceptors() ?? [],
        wrapping: self.queryAppIds(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Comdex_Liquidation_V1beta1_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'queryLockedVault'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockedVaultInterceptors() -> [ServerInterceptor<Comdex_Liquidation_V1beta1_QueryLockedVaultRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultResponse>]

  /// - Returns: Interceptors to use when handling 'queryLockedVaults'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockedVaultsInterceptors() -> [ServerInterceptor<Comdex_Liquidation_V1beta1_QueryLockedVaultsRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsResponse>]

  /// - Returns: Interceptors to use when handling 'queryLiquidationParams'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLiquidationParamsInterceptors() -> [ServerInterceptor<Comdex_Liquidation_V1beta1_QueryLiquidationParamsRequest, Comdex_Liquidation_V1beta1_QueryLiquidationParamsResponse>]

  /// - Returns: Interceptors to use when handling 'queryLockedVaultsHistory'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockedVaultsHistoryInterceptors() -> [ServerInterceptor<Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsHistoryResponse>]

  /// - Returns: Interceptors to use when handling 'queryUserLockedVaults'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryUserLockedVaultsInterceptors() -> [ServerInterceptor<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsRequest, Comdex_Liquidation_V1beta1_QueryUserLockedVaultsResponse>]

  /// - Returns: Interceptors to use when handling 'queryUserLockedVaultsHistory'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryUserLockedVaultsHistoryInterceptors() -> [ServerInterceptor<Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryRequest, Comdex_Liquidation_V1beta1_QueryUserLockedVaultsHistoryResponse>]

  /// - Returns: Interceptors to use when handling 'queryLockedVaultsPair'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryLockedVaultsPairInterceptors() -> [ServerInterceptor<Comdex_Liquidation_V1beta1_QueryLockedVaultsPairRequest, Comdex_Liquidation_V1beta1_QueryLockedVaultsPairResponse>]

  /// - Returns: Interceptors to use when handling 'queryAppIds'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryAppIdsInterceptors() -> [ServerInterceptor<Comdex_Liquidation_V1beta1_QueryAppIdsRequest, Comdex_Liquidation_V1beta1_QueryAppIdsResponse>]
}

internal enum Comdex_Liquidation_V1beta1_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "comdex.liquidation.v1beta1.Query",
    methods: [
      Comdex_Liquidation_V1beta1_QueryServerMetadata.Methods.queryLockedVault,
      Comdex_Liquidation_V1beta1_QueryServerMetadata.Methods.queryLockedVaults,
      Comdex_Liquidation_V1beta1_QueryServerMetadata.Methods.queryLiquidationParams,
      Comdex_Liquidation_V1beta1_QueryServerMetadata.Methods.queryLockedVaultsHistory,
      Comdex_Liquidation_V1beta1_QueryServerMetadata.Methods.queryUserLockedVaults,
      Comdex_Liquidation_V1beta1_QueryServerMetadata.Methods.queryUserLockedVaultsHistory,
      Comdex_Liquidation_V1beta1_QueryServerMetadata.Methods.queryLockedVaultsPair,
      Comdex_Liquidation_V1beta1_QueryServerMetadata.Methods.queryAppIds,
    ]
  )

  internal enum Methods {
    internal static let queryLockedVault = GRPCMethodDescriptor(
      name: "QueryLockedVault",
      path: "/comdex.liquidation.v1beta1.Query/QueryLockedVault",
      type: GRPCCallType.unary
    )

    internal static let queryLockedVaults = GRPCMethodDescriptor(
      name: "QueryLockedVaults",
      path: "/comdex.liquidation.v1beta1.Query/QueryLockedVaults",
      type: GRPCCallType.unary
    )

    internal static let queryLiquidationParams = GRPCMethodDescriptor(
      name: "QueryLiquidationParams",
      path: "/comdex.liquidation.v1beta1.Query/QueryLiquidationParams",
      type: GRPCCallType.unary
    )

    internal static let queryLockedVaultsHistory = GRPCMethodDescriptor(
      name: "QueryLockedVaultsHistory",
      path: "/comdex.liquidation.v1beta1.Query/QueryLockedVaultsHistory",
      type: GRPCCallType.unary
    )

    internal static let queryUserLockedVaults = GRPCMethodDescriptor(
      name: "QueryUserLockedVaults",
      path: "/comdex.liquidation.v1beta1.Query/QueryUserLockedVaults",
      type: GRPCCallType.unary
    )

    internal static let queryUserLockedVaultsHistory = GRPCMethodDescriptor(
      name: "QueryUserLockedVaultsHistory",
      path: "/comdex.liquidation.v1beta1.Query/QueryUserLockedVaultsHistory",
      type: GRPCCallType.unary
    )

    internal static let queryLockedVaultsPair = GRPCMethodDescriptor(
      name: "QueryLockedVaultsPair",
      path: "/comdex.liquidation.v1beta1.Query/QueryLockedVaultsPair",
      type: GRPCCallType.unary
    )

    internal static let queryAppIds = GRPCMethodDescriptor(
      name: "QueryAppIds",
      path: "/comdex.liquidation.v1beta1.Query/QueryAppIds",
      type: GRPCCallType.unary
    )
  }
}

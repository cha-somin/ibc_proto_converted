//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: kava/hard/v1beta1/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Query defines the gRPC querier service for bep3 module.
///
/// Usage: instantiate `Kava_Hard_V1beta1_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Kava_Hard_V1beta1_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Kava_Hard_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func params(
    _ request: Kava_Hard_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryParamsRequest, Kava_Hard_V1beta1_QueryParamsResponse>

  func accounts(
    _ request: Kava_Hard_V1beta1_QueryAccountsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryAccountsRequest, Kava_Hard_V1beta1_QueryAccountsResponse>

  func deposits(
    _ request: Kava_Hard_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryDepositsRequest, Kava_Hard_V1beta1_QueryDepositsResponse>

  func unsyncedDeposits(
    _ request: Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest, Kava_Hard_V1beta1_QueryUnsyncedDepositsResponse>

  func totalDeposited(
    _ request: Kava_Hard_V1beta1_QueryTotalDepositedRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryTotalDepositedRequest, Kava_Hard_V1beta1_QueryTotalDepositedResponse>

  func borrows(
    _ request: Kava_Hard_V1beta1_QueryBorrowsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryBorrowsRequest, Kava_Hard_V1beta1_QueryBorrowsResponse>

  func unsyncedBorrows(
    _ request: Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest, Kava_Hard_V1beta1_QueryUnsyncedBorrowsResponse>

  func totalBorrowed(
    _ request: Kava_Hard_V1beta1_QueryTotalBorrowedRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryTotalBorrowedRequest, Kava_Hard_V1beta1_QueryTotalBorrowedResponse>

  func interestRate(
    _ request: Kava_Hard_V1beta1_QueryInterestRateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryInterestRateRequest, Kava_Hard_V1beta1_QueryInterestRateResponse>

  func reserves(
    _ request: Kava_Hard_V1beta1_QueryReservesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryReservesRequest, Kava_Hard_V1beta1_QueryReservesResponse>

  func interestFactors(
    _ request: Kava_Hard_V1beta1_QueryInterestFactorsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryInterestFactorsRequest, Kava_Hard_V1beta1_QueryInterestFactorsResponse>
}

extension Kava_Hard_V1beta1_QueryClientProtocol {
  internal var serviceName: String {
    return "kava.hard.v1beta1.Query"
  }

  /// Params queries module params.
  ///
  /// - Parameters:
  ///   - request: Request to send to Params.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func params(
    _ request: Kava_Hard_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryParamsRequest, Kava_Hard_V1beta1_QueryParamsResponse> {
    return self.makeUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  /// Accounts queries module accounts.
  ///
  /// - Parameters:
  ///   - request: Request to send to Accounts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func accounts(
    _ request: Kava_Hard_V1beta1_QueryAccountsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryAccountsRequest, Kava_Hard_V1beta1_QueryAccountsResponse> {
    return self.makeUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.accounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAccountsInterceptors() ?? []
    )
  }

  /// Deposits queries hard deposits.
  ///
  /// - Parameters:
  ///   - request: Request to send to Deposits.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deposits(
    _ request: Kava_Hard_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryDepositsRequest, Kava_Hard_V1beta1_QueryDepositsResponse> {
    return self.makeUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.deposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositsInterceptors() ?? []
    )
  }

  /// UnsyncedDeposits queries unsynced deposits.
  ///
  /// - Parameters:
  ///   - request: Request to send to UnsyncedDeposits.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func unsyncedDeposits(
    _ request: Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest, Kava_Hard_V1beta1_QueryUnsyncedDepositsResponse> {
    return self.makeUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.unsyncedDeposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnsyncedDepositsInterceptors() ?? []
    )
  }

  /// TotalDeposited queries total coins deposited to hard liquidity pools.
  ///
  /// - Parameters:
  ///   - request: Request to send to TotalDeposited.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func totalDeposited(
    _ request: Kava_Hard_V1beta1_QueryTotalDepositedRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryTotalDepositedRequest, Kava_Hard_V1beta1_QueryTotalDepositedResponse> {
    return self.makeUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.totalDeposited.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTotalDepositedInterceptors() ?? []
    )
  }

  /// Borrows queries hard borrows.
  ///
  /// - Parameters:
  ///   - request: Request to send to Borrows.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func borrows(
    _ request: Kava_Hard_V1beta1_QueryBorrowsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryBorrowsRequest, Kava_Hard_V1beta1_QueryBorrowsResponse> {
    return self.makeUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.borrows.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBorrowsInterceptors() ?? []
    )
  }

  /// UnsyncedBorrows queries unsynced borrows.
  ///
  /// - Parameters:
  ///   - request: Request to send to UnsyncedBorrows.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func unsyncedBorrows(
    _ request: Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest, Kava_Hard_V1beta1_QueryUnsyncedBorrowsResponse> {
    return self.makeUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.unsyncedBorrows.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnsyncedBorrowsInterceptors() ?? []
    )
  }

  /// TotalBorrowed queries total coins borrowed from hard liquidity pools.
  ///
  /// - Parameters:
  ///   - request: Request to send to TotalBorrowed.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func totalBorrowed(
    _ request: Kava_Hard_V1beta1_QueryTotalBorrowedRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryTotalBorrowedRequest, Kava_Hard_V1beta1_QueryTotalBorrowedResponse> {
    return self.makeUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.totalBorrowed.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTotalBorrowedInterceptors() ?? []
    )
  }

  /// InterestRate queries the hard module interest rates.
  ///
  /// - Parameters:
  ///   - request: Request to send to InterestRate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func interestRate(
    _ request: Kava_Hard_V1beta1_QueryInterestRateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryInterestRateRequest, Kava_Hard_V1beta1_QueryInterestRateResponse> {
    return self.makeUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.interestRate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInterestRateInterceptors() ?? []
    )
  }

  /// Reserves queries total hard reserve coins.
  ///
  /// - Parameters:
  ///   - request: Request to send to Reserves.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func reserves(
    _ request: Kava_Hard_V1beta1_QueryReservesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryReservesRequest, Kava_Hard_V1beta1_QueryReservesResponse> {
    return self.makeUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.reserves.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReservesInterceptors() ?? []
    )
  }

  /// InterestFactors queries hard module interest factors.
  ///
  /// - Parameters:
  ///   - request: Request to send to InterestFactors.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func interestFactors(
    _ request: Kava_Hard_V1beta1_QueryInterestFactorsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Kava_Hard_V1beta1_QueryInterestFactorsRequest, Kava_Hard_V1beta1_QueryInterestFactorsResponse> {
    return self.makeUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.interestFactors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInterestFactorsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Kava_Hard_V1beta1_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Kava_Hard_V1beta1_QueryNIOClient")
internal final class Kava_Hard_V1beta1_QueryClient: Kava_Hard_V1beta1_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Kava_Hard_V1beta1_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Kava_Hard_V1beta1_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the kava.hard.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Kava_Hard_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Kava_Hard_V1beta1_QueryNIOClient: Kava_Hard_V1beta1_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Kava_Hard_V1beta1_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the kava.hard.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Kava_Hard_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Query defines the gRPC querier service for bep3 module.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Kava_Hard_V1beta1_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Kava_Hard_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func makeParamsCall(
    _ request: Kava_Hard_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryParamsRequest, Kava_Hard_V1beta1_QueryParamsResponse>

  func makeAccountsCall(
    _ request: Kava_Hard_V1beta1_QueryAccountsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryAccountsRequest, Kava_Hard_V1beta1_QueryAccountsResponse>

  func makeDepositsCall(
    _ request: Kava_Hard_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryDepositsRequest, Kava_Hard_V1beta1_QueryDepositsResponse>

  func makeUnsyncedDepositsCall(
    _ request: Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest, Kava_Hard_V1beta1_QueryUnsyncedDepositsResponse>

  func makeTotalDepositedCall(
    _ request: Kava_Hard_V1beta1_QueryTotalDepositedRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryTotalDepositedRequest, Kava_Hard_V1beta1_QueryTotalDepositedResponse>

  func makeBorrowsCall(
    _ request: Kava_Hard_V1beta1_QueryBorrowsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryBorrowsRequest, Kava_Hard_V1beta1_QueryBorrowsResponse>

  func makeUnsyncedBorrowsCall(
    _ request: Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest, Kava_Hard_V1beta1_QueryUnsyncedBorrowsResponse>

  func makeTotalBorrowedCall(
    _ request: Kava_Hard_V1beta1_QueryTotalBorrowedRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryTotalBorrowedRequest, Kava_Hard_V1beta1_QueryTotalBorrowedResponse>

  func makeInterestRateCall(
    _ request: Kava_Hard_V1beta1_QueryInterestRateRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryInterestRateRequest, Kava_Hard_V1beta1_QueryInterestRateResponse>

  func makeReservesCall(
    _ request: Kava_Hard_V1beta1_QueryReservesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryReservesRequest, Kava_Hard_V1beta1_QueryReservesResponse>

  func makeInterestFactorsCall(
    _ request: Kava_Hard_V1beta1_QueryInterestFactorsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryInterestFactorsRequest, Kava_Hard_V1beta1_QueryInterestFactorsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Kava_Hard_V1beta1_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Kava_Hard_V1beta1_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Kava_Hard_V1beta1_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeParamsCall(
    _ request: Kava_Hard_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryParamsRequest, Kava_Hard_V1beta1_QueryParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func makeAccountsCall(
    _ request: Kava_Hard_V1beta1_QueryAccountsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryAccountsRequest, Kava_Hard_V1beta1_QueryAccountsResponse> {
    return self.makeAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.accounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAccountsInterceptors() ?? []
    )
  }

  internal func makeDepositsCall(
    _ request: Kava_Hard_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryDepositsRequest, Kava_Hard_V1beta1_QueryDepositsResponse> {
    return self.makeAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.deposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositsInterceptors() ?? []
    )
  }

  internal func makeUnsyncedDepositsCall(
    _ request: Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest, Kava_Hard_V1beta1_QueryUnsyncedDepositsResponse> {
    return self.makeAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.unsyncedDeposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnsyncedDepositsInterceptors() ?? []
    )
  }

  internal func makeTotalDepositedCall(
    _ request: Kava_Hard_V1beta1_QueryTotalDepositedRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryTotalDepositedRequest, Kava_Hard_V1beta1_QueryTotalDepositedResponse> {
    return self.makeAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.totalDeposited.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTotalDepositedInterceptors() ?? []
    )
  }

  internal func makeBorrowsCall(
    _ request: Kava_Hard_V1beta1_QueryBorrowsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryBorrowsRequest, Kava_Hard_V1beta1_QueryBorrowsResponse> {
    return self.makeAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.borrows.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBorrowsInterceptors() ?? []
    )
  }

  internal func makeUnsyncedBorrowsCall(
    _ request: Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest, Kava_Hard_V1beta1_QueryUnsyncedBorrowsResponse> {
    return self.makeAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.unsyncedBorrows.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnsyncedBorrowsInterceptors() ?? []
    )
  }

  internal func makeTotalBorrowedCall(
    _ request: Kava_Hard_V1beta1_QueryTotalBorrowedRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryTotalBorrowedRequest, Kava_Hard_V1beta1_QueryTotalBorrowedResponse> {
    return self.makeAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.totalBorrowed.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTotalBorrowedInterceptors() ?? []
    )
  }

  internal func makeInterestRateCall(
    _ request: Kava_Hard_V1beta1_QueryInterestRateRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryInterestRateRequest, Kava_Hard_V1beta1_QueryInterestRateResponse> {
    return self.makeAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.interestRate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInterestRateInterceptors() ?? []
    )
  }

  internal func makeReservesCall(
    _ request: Kava_Hard_V1beta1_QueryReservesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryReservesRequest, Kava_Hard_V1beta1_QueryReservesResponse> {
    return self.makeAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.reserves.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReservesInterceptors() ?? []
    )
  }

  internal func makeInterestFactorsCall(
    _ request: Kava_Hard_V1beta1_QueryInterestFactorsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Kava_Hard_V1beta1_QueryInterestFactorsRequest, Kava_Hard_V1beta1_QueryInterestFactorsResponse> {
    return self.makeAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.interestFactors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInterestFactorsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Kava_Hard_V1beta1_QueryAsyncClientProtocol {
  internal func params(
    _ request: Kava_Hard_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Kava_Hard_V1beta1_QueryParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func accounts(
    _ request: Kava_Hard_V1beta1_QueryAccountsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Kava_Hard_V1beta1_QueryAccountsResponse {
    return try await self.performAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.accounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAccountsInterceptors() ?? []
    )
  }

  internal func deposits(
    _ request: Kava_Hard_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Kava_Hard_V1beta1_QueryDepositsResponse {
    return try await self.performAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.deposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositsInterceptors() ?? []
    )
  }

  internal func unsyncedDeposits(
    _ request: Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Kava_Hard_V1beta1_QueryUnsyncedDepositsResponse {
    return try await self.performAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.unsyncedDeposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnsyncedDepositsInterceptors() ?? []
    )
  }

  internal func totalDeposited(
    _ request: Kava_Hard_V1beta1_QueryTotalDepositedRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Kava_Hard_V1beta1_QueryTotalDepositedResponse {
    return try await self.performAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.totalDeposited.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTotalDepositedInterceptors() ?? []
    )
  }

  internal func borrows(
    _ request: Kava_Hard_V1beta1_QueryBorrowsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Kava_Hard_V1beta1_QueryBorrowsResponse {
    return try await self.performAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.borrows.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBorrowsInterceptors() ?? []
    )
  }

  internal func unsyncedBorrows(
    _ request: Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Kava_Hard_V1beta1_QueryUnsyncedBorrowsResponse {
    return try await self.performAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.unsyncedBorrows.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnsyncedBorrowsInterceptors() ?? []
    )
  }

  internal func totalBorrowed(
    _ request: Kava_Hard_V1beta1_QueryTotalBorrowedRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Kava_Hard_V1beta1_QueryTotalBorrowedResponse {
    return try await self.performAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.totalBorrowed.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTotalBorrowedInterceptors() ?? []
    )
  }

  internal func interestRate(
    _ request: Kava_Hard_V1beta1_QueryInterestRateRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Kava_Hard_V1beta1_QueryInterestRateResponse {
    return try await self.performAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.interestRate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInterestRateInterceptors() ?? []
    )
  }

  internal func reserves(
    _ request: Kava_Hard_V1beta1_QueryReservesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Kava_Hard_V1beta1_QueryReservesResponse {
    return try await self.performAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.reserves.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReservesInterceptors() ?? []
    )
  }

  internal func interestFactors(
    _ request: Kava_Hard_V1beta1_QueryInterestFactorsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Kava_Hard_V1beta1_QueryInterestFactorsResponse {
    return try await self.performAsyncUnaryCall(
      path: Kava_Hard_V1beta1_QueryClientMetadata.Methods.interestFactors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInterestFactorsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Kava_Hard_V1beta1_QueryAsyncClient: Kava_Hard_V1beta1_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Kava_Hard_V1beta1_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Kava_Hard_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Kava_Hard_V1beta1_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'params'.
  func makeParamsInterceptors() -> [ClientInterceptor<Kava_Hard_V1beta1_QueryParamsRequest, Kava_Hard_V1beta1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when invoking 'accounts'.
  func makeAccountsInterceptors() -> [ClientInterceptor<Kava_Hard_V1beta1_QueryAccountsRequest, Kava_Hard_V1beta1_QueryAccountsResponse>]

  /// - Returns: Interceptors to use when invoking 'deposits'.
  func makeDepositsInterceptors() -> [ClientInterceptor<Kava_Hard_V1beta1_QueryDepositsRequest, Kava_Hard_V1beta1_QueryDepositsResponse>]

  /// - Returns: Interceptors to use when invoking 'unsyncedDeposits'.
  func makeUnsyncedDepositsInterceptors() -> [ClientInterceptor<Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest, Kava_Hard_V1beta1_QueryUnsyncedDepositsResponse>]

  /// - Returns: Interceptors to use when invoking 'totalDeposited'.
  func makeTotalDepositedInterceptors() -> [ClientInterceptor<Kava_Hard_V1beta1_QueryTotalDepositedRequest, Kava_Hard_V1beta1_QueryTotalDepositedResponse>]

  /// - Returns: Interceptors to use when invoking 'borrows'.
  func makeBorrowsInterceptors() -> [ClientInterceptor<Kava_Hard_V1beta1_QueryBorrowsRequest, Kava_Hard_V1beta1_QueryBorrowsResponse>]

  /// - Returns: Interceptors to use when invoking 'unsyncedBorrows'.
  func makeUnsyncedBorrowsInterceptors() -> [ClientInterceptor<Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest, Kava_Hard_V1beta1_QueryUnsyncedBorrowsResponse>]

  /// - Returns: Interceptors to use when invoking 'totalBorrowed'.
  func makeTotalBorrowedInterceptors() -> [ClientInterceptor<Kava_Hard_V1beta1_QueryTotalBorrowedRequest, Kava_Hard_V1beta1_QueryTotalBorrowedResponse>]

  /// - Returns: Interceptors to use when invoking 'interestRate'.
  func makeInterestRateInterceptors() -> [ClientInterceptor<Kava_Hard_V1beta1_QueryInterestRateRequest, Kava_Hard_V1beta1_QueryInterestRateResponse>]

  /// - Returns: Interceptors to use when invoking 'reserves'.
  func makeReservesInterceptors() -> [ClientInterceptor<Kava_Hard_V1beta1_QueryReservesRequest, Kava_Hard_V1beta1_QueryReservesResponse>]

  /// - Returns: Interceptors to use when invoking 'interestFactors'.
  func makeInterestFactorsInterceptors() -> [ClientInterceptor<Kava_Hard_V1beta1_QueryInterestFactorsRequest, Kava_Hard_V1beta1_QueryInterestFactorsResponse>]
}

internal enum Kava_Hard_V1beta1_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "kava.hard.v1beta1.Query",
    methods: [
      Kava_Hard_V1beta1_QueryClientMetadata.Methods.params,
      Kava_Hard_V1beta1_QueryClientMetadata.Methods.accounts,
      Kava_Hard_V1beta1_QueryClientMetadata.Methods.deposits,
      Kava_Hard_V1beta1_QueryClientMetadata.Methods.unsyncedDeposits,
      Kava_Hard_V1beta1_QueryClientMetadata.Methods.totalDeposited,
      Kava_Hard_V1beta1_QueryClientMetadata.Methods.borrows,
      Kava_Hard_V1beta1_QueryClientMetadata.Methods.unsyncedBorrows,
      Kava_Hard_V1beta1_QueryClientMetadata.Methods.totalBorrowed,
      Kava_Hard_V1beta1_QueryClientMetadata.Methods.interestRate,
      Kava_Hard_V1beta1_QueryClientMetadata.Methods.reserves,
      Kava_Hard_V1beta1_QueryClientMetadata.Methods.interestFactors,
    ]
  )

  internal enum Methods {
    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/kava.hard.v1beta1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let accounts = GRPCMethodDescriptor(
      name: "Accounts",
      path: "/kava.hard.v1beta1.Query/Accounts",
      type: GRPCCallType.unary
    )

    internal static let deposits = GRPCMethodDescriptor(
      name: "Deposits",
      path: "/kava.hard.v1beta1.Query/Deposits",
      type: GRPCCallType.unary
    )

    internal static let unsyncedDeposits = GRPCMethodDescriptor(
      name: "UnsyncedDeposits",
      path: "/kava.hard.v1beta1.Query/UnsyncedDeposits",
      type: GRPCCallType.unary
    )

    internal static let totalDeposited = GRPCMethodDescriptor(
      name: "TotalDeposited",
      path: "/kava.hard.v1beta1.Query/TotalDeposited",
      type: GRPCCallType.unary
    )

    internal static let borrows = GRPCMethodDescriptor(
      name: "Borrows",
      path: "/kava.hard.v1beta1.Query/Borrows",
      type: GRPCCallType.unary
    )

    internal static let unsyncedBorrows = GRPCMethodDescriptor(
      name: "UnsyncedBorrows",
      path: "/kava.hard.v1beta1.Query/UnsyncedBorrows",
      type: GRPCCallType.unary
    )

    internal static let totalBorrowed = GRPCMethodDescriptor(
      name: "TotalBorrowed",
      path: "/kava.hard.v1beta1.Query/TotalBorrowed",
      type: GRPCCallType.unary
    )

    internal static let interestRate = GRPCMethodDescriptor(
      name: "InterestRate",
      path: "/kava.hard.v1beta1.Query/InterestRate",
      type: GRPCCallType.unary
    )

    internal static let reserves = GRPCMethodDescriptor(
      name: "Reserves",
      path: "/kava.hard.v1beta1.Query/Reserves",
      type: GRPCCallType.unary
    )

    internal static let interestFactors = GRPCMethodDescriptor(
      name: "InterestFactors",
      path: "/kava.hard.v1beta1.Query/InterestFactors",
      type: GRPCCallType.unary
    )
  }
}

/// Query defines the gRPC querier service for bep3 module.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Kava_Hard_V1beta1_QueryProvider: CallHandlerProvider {
  var interceptors: Kava_Hard_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  /// Params queries module params.
  func params(request: Kava_Hard_V1beta1_QueryParamsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Kava_Hard_V1beta1_QueryParamsResponse>

  /// Accounts queries module accounts.
  func accounts(request: Kava_Hard_V1beta1_QueryAccountsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Kava_Hard_V1beta1_QueryAccountsResponse>

  /// Deposits queries hard deposits.
  func deposits(request: Kava_Hard_V1beta1_QueryDepositsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Kava_Hard_V1beta1_QueryDepositsResponse>

  /// UnsyncedDeposits queries unsynced deposits.
  func unsyncedDeposits(request: Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Kava_Hard_V1beta1_QueryUnsyncedDepositsResponse>

  /// TotalDeposited queries total coins deposited to hard liquidity pools.
  func totalDeposited(request: Kava_Hard_V1beta1_QueryTotalDepositedRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Kava_Hard_V1beta1_QueryTotalDepositedResponse>

  /// Borrows queries hard borrows.
  func borrows(request: Kava_Hard_V1beta1_QueryBorrowsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Kava_Hard_V1beta1_QueryBorrowsResponse>

  /// UnsyncedBorrows queries unsynced borrows.
  func unsyncedBorrows(request: Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Kava_Hard_V1beta1_QueryUnsyncedBorrowsResponse>

  /// TotalBorrowed queries total coins borrowed from hard liquidity pools.
  func totalBorrowed(request: Kava_Hard_V1beta1_QueryTotalBorrowedRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Kava_Hard_V1beta1_QueryTotalBorrowedResponse>

  /// InterestRate queries the hard module interest rates.
  func interestRate(request: Kava_Hard_V1beta1_QueryInterestRateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Kava_Hard_V1beta1_QueryInterestRateResponse>

  /// Reserves queries total hard reserve coins.
  func reserves(request: Kava_Hard_V1beta1_QueryReservesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Kava_Hard_V1beta1_QueryReservesResponse>

  /// InterestFactors queries hard module interest factors.
  func interestFactors(request: Kava_Hard_V1beta1_QueryInterestFactorsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Kava_Hard_V1beta1_QueryInterestFactorsResponse>
}

extension Kava_Hard_V1beta1_QueryProvider {
  internal var serviceName: Substring {
    return Kava_Hard_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Params":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        userFunction: self.params(request:context:)
      )

    case "Accounts":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryAccountsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryAccountsResponse>(),
        interceptors: self.interceptors?.makeAccountsInterceptors() ?? [],
        userFunction: self.accounts(request:context:)
      )

    case "Deposits":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryDepositsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryDepositsResponse>(),
        interceptors: self.interceptors?.makeDepositsInterceptors() ?? [],
        userFunction: self.deposits(request:context:)
      )

    case "UnsyncedDeposits":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryUnsyncedDepositsResponse>(),
        interceptors: self.interceptors?.makeUnsyncedDepositsInterceptors() ?? [],
        userFunction: self.unsyncedDeposits(request:context:)
      )

    case "TotalDeposited":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryTotalDepositedRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryTotalDepositedResponse>(),
        interceptors: self.interceptors?.makeTotalDepositedInterceptors() ?? [],
        userFunction: self.totalDeposited(request:context:)
      )

    case "Borrows":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryBorrowsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryBorrowsResponse>(),
        interceptors: self.interceptors?.makeBorrowsInterceptors() ?? [],
        userFunction: self.borrows(request:context:)
      )

    case "UnsyncedBorrows":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryUnsyncedBorrowsResponse>(),
        interceptors: self.interceptors?.makeUnsyncedBorrowsInterceptors() ?? [],
        userFunction: self.unsyncedBorrows(request:context:)
      )

    case "TotalBorrowed":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryTotalBorrowedRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryTotalBorrowedResponse>(),
        interceptors: self.interceptors?.makeTotalBorrowedInterceptors() ?? [],
        userFunction: self.totalBorrowed(request:context:)
      )

    case "InterestRate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryInterestRateRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryInterestRateResponse>(),
        interceptors: self.interceptors?.makeInterestRateInterceptors() ?? [],
        userFunction: self.interestRate(request:context:)
      )

    case "Reserves":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryReservesRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryReservesResponse>(),
        interceptors: self.interceptors?.makeReservesInterceptors() ?? [],
        userFunction: self.reserves(request:context:)
      )

    case "InterestFactors":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryInterestFactorsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryInterestFactorsResponse>(),
        interceptors: self.interceptors?.makeInterestFactorsInterceptors() ?? [],
        userFunction: self.interestFactors(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Query defines the gRPC querier service for bep3 module.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Kava_Hard_V1beta1_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Kava_Hard_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  /// Params queries module params.
  @Sendable func params(
    request: Kava_Hard_V1beta1_QueryParamsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Kava_Hard_V1beta1_QueryParamsResponse

  /// Accounts queries module accounts.
  @Sendable func accounts(
    request: Kava_Hard_V1beta1_QueryAccountsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Kava_Hard_V1beta1_QueryAccountsResponse

  /// Deposits queries hard deposits.
  @Sendable func deposits(
    request: Kava_Hard_V1beta1_QueryDepositsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Kava_Hard_V1beta1_QueryDepositsResponse

  /// UnsyncedDeposits queries unsynced deposits.
  @Sendable func unsyncedDeposits(
    request: Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Kava_Hard_V1beta1_QueryUnsyncedDepositsResponse

  /// TotalDeposited queries total coins deposited to hard liquidity pools.
  @Sendable func totalDeposited(
    request: Kava_Hard_V1beta1_QueryTotalDepositedRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Kava_Hard_V1beta1_QueryTotalDepositedResponse

  /// Borrows queries hard borrows.
  @Sendable func borrows(
    request: Kava_Hard_V1beta1_QueryBorrowsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Kava_Hard_V1beta1_QueryBorrowsResponse

  /// UnsyncedBorrows queries unsynced borrows.
  @Sendable func unsyncedBorrows(
    request: Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Kava_Hard_V1beta1_QueryUnsyncedBorrowsResponse

  /// TotalBorrowed queries total coins borrowed from hard liquidity pools.
  @Sendable func totalBorrowed(
    request: Kava_Hard_V1beta1_QueryTotalBorrowedRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Kava_Hard_V1beta1_QueryTotalBorrowedResponse

  /// InterestRate queries the hard module interest rates.
  @Sendable func interestRate(
    request: Kava_Hard_V1beta1_QueryInterestRateRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Kava_Hard_V1beta1_QueryInterestRateResponse

  /// Reserves queries total hard reserve coins.
  @Sendable func reserves(
    request: Kava_Hard_V1beta1_QueryReservesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Kava_Hard_V1beta1_QueryReservesResponse

  /// InterestFactors queries hard module interest factors.
  @Sendable func interestFactors(
    request: Kava_Hard_V1beta1_QueryInterestFactorsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Kava_Hard_V1beta1_QueryInterestFactorsResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Kava_Hard_V1beta1_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Kava_Hard_V1beta1_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Kava_Hard_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Kava_Hard_V1beta1_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Params":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        wrapping: self.params(request:context:)
      )

    case "Accounts":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryAccountsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryAccountsResponse>(),
        interceptors: self.interceptors?.makeAccountsInterceptors() ?? [],
        wrapping: self.accounts(request:context:)
      )

    case "Deposits":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryDepositsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryDepositsResponse>(),
        interceptors: self.interceptors?.makeDepositsInterceptors() ?? [],
        wrapping: self.deposits(request:context:)
      )

    case "UnsyncedDeposits":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryUnsyncedDepositsResponse>(),
        interceptors: self.interceptors?.makeUnsyncedDepositsInterceptors() ?? [],
        wrapping: self.unsyncedDeposits(request:context:)
      )

    case "TotalDeposited":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryTotalDepositedRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryTotalDepositedResponse>(),
        interceptors: self.interceptors?.makeTotalDepositedInterceptors() ?? [],
        wrapping: self.totalDeposited(request:context:)
      )

    case "Borrows":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryBorrowsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryBorrowsResponse>(),
        interceptors: self.interceptors?.makeBorrowsInterceptors() ?? [],
        wrapping: self.borrows(request:context:)
      )

    case "UnsyncedBorrows":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryUnsyncedBorrowsResponse>(),
        interceptors: self.interceptors?.makeUnsyncedBorrowsInterceptors() ?? [],
        wrapping: self.unsyncedBorrows(request:context:)
      )

    case "TotalBorrowed":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryTotalBorrowedRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryTotalBorrowedResponse>(),
        interceptors: self.interceptors?.makeTotalBorrowedInterceptors() ?? [],
        wrapping: self.totalBorrowed(request:context:)
      )

    case "InterestRate":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryInterestRateRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryInterestRateResponse>(),
        interceptors: self.interceptors?.makeInterestRateInterceptors() ?? [],
        wrapping: self.interestRate(request:context:)
      )

    case "Reserves":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryReservesRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryReservesResponse>(),
        interceptors: self.interceptors?.makeReservesInterceptors() ?? [],
        wrapping: self.reserves(request:context:)
      )

    case "InterestFactors":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Kava_Hard_V1beta1_QueryInterestFactorsRequest>(),
        responseSerializer: ProtobufSerializer<Kava_Hard_V1beta1_QueryInterestFactorsResponse>(),
        interceptors: self.interceptors?.makeInterestFactorsInterceptors() ?? [],
        wrapping: self.interestFactors(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Kava_Hard_V1beta1_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'params'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeParamsInterceptors() -> [ServerInterceptor<Kava_Hard_V1beta1_QueryParamsRequest, Kava_Hard_V1beta1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when handling 'accounts'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAccountsInterceptors() -> [ServerInterceptor<Kava_Hard_V1beta1_QueryAccountsRequest, Kava_Hard_V1beta1_QueryAccountsResponse>]

  /// - Returns: Interceptors to use when handling 'deposits'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDepositsInterceptors() -> [ServerInterceptor<Kava_Hard_V1beta1_QueryDepositsRequest, Kava_Hard_V1beta1_QueryDepositsResponse>]

  /// - Returns: Interceptors to use when handling 'unsyncedDeposits'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUnsyncedDepositsInterceptors() -> [ServerInterceptor<Kava_Hard_V1beta1_QueryUnsyncedDepositsRequest, Kava_Hard_V1beta1_QueryUnsyncedDepositsResponse>]

  /// - Returns: Interceptors to use when handling 'totalDeposited'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeTotalDepositedInterceptors() -> [ServerInterceptor<Kava_Hard_V1beta1_QueryTotalDepositedRequest, Kava_Hard_V1beta1_QueryTotalDepositedResponse>]

  /// - Returns: Interceptors to use when handling 'borrows'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBorrowsInterceptors() -> [ServerInterceptor<Kava_Hard_V1beta1_QueryBorrowsRequest, Kava_Hard_V1beta1_QueryBorrowsResponse>]

  /// - Returns: Interceptors to use when handling 'unsyncedBorrows'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUnsyncedBorrowsInterceptors() -> [ServerInterceptor<Kava_Hard_V1beta1_QueryUnsyncedBorrowsRequest, Kava_Hard_V1beta1_QueryUnsyncedBorrowsResponse>]

  /// - Returns: Interceptors to use when handling 'totalBorrowed'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeTotalBorrowedInterceptors() -> [ServerInterceptor<Kava_Hard_V1beta1_QueryTotalBorrowedRequest, Kava_Hard_V1beta1_QueryTotalBorrowedResponse>]

  /// - Returns: Interceptors to use when handling 'interestRate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInterestRateInterceptors() -> [ServerInterceptor<Kava_Hard_V1beta1_QueryInterestRateRequest, Kava_Hard_V1beta1_QueryInterestRateResponse>]

  /// - Returns: Interceptors to use when handling 'reserves'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeReservesInterceptors() -> [ServerInterceptor<Kava_Hard_V1beta1_QueryReservesRequest, Kava_Hard_V1beta1_QueryReservesResponse>]

  /// - Returns: Interceptors to use when handling 'interestFactors'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInterestFactorsInterceptors() -> [ServerInterceptor<Kava_Hard_V1beta1_QueryInterestFactorsRequest, Kava_Hard_V1beta1_QueryInterestFactorsResponse>]
}

internal enum Kava_Hard_V1beta1_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "kava.hard.v1beta1.Query",
    methods: [
      Kava_Hard_V1beta1_QueryServerMetadata.Methods.params,
      Kava_Hard_V1beta1_QueryServerMetadata.Methods.accounts,
      Kava_Hard_V1beta1_QueryServerMetadata.Methods.deposits,
      Kava_Hard_V1beta1_QueryServerMetadata.Methods.unsyncedDeposits,
      Kava_Hard_V1beta1_QueryServerMetadata.Methods.totalDeposited,
      Kava_Hard_V1beta1_QueryServerMetadata.Methods.borrows,
      Kava_Hard_V1beta1_QueryServerMetadata.Methods.unsyncedBorrows,
      Kava_Hard_V1beta1_QueryServerMetadata.Methods.totalBorrowed,
      Kava_Hard_V1beta1_QueryServerMetadata.Methods.interestRate,
      Kava_Hard_V1beta1_QueryServerMetadata.Methods.reserves,
      Kava_Hard_V1beta1_QueryServerMetadata.Methods.interestFactors,
    ]
  )

  internal enum Methods {
    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/kava.hard.v1beta1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let accounts = GRPCMethodDescriptor(
      name: "Accounts",
      path: "/kava.hard.v1beta1.Query/Accounts",
      type: GRPCCallType.unary
    )

    internal static let deposits = GRPCMethodDescriptor(
      name: "Deposits",
      path: "/kava.hard.v1beta1.Query/Deposits",
      type: GRPCCallType.unary
    )

    internal static let unsyncedDeposits = GRPCMethodDescriptor(
      name: "UnsyncedDeposits",
      path: "/kava.hard.v1beta1.Query/UnsyncedDeposits",
      type: GRPCCallType.unary
    )

    internal static let totalDeposited = GRPCMethodDescriptor(
      name: "TotalDeposited",
      path: "/kava.hard.v1beta1.Query/TotalDeposited",
      type: GRPCCallType.unary
    )

    internal static let borrows = GRPCMethodDescriptor(
      name: "Borrows",
      path: "/kava.hard.v1beta1.Query/Borrows",
      type: GRPCCallType.unary
    )

    internal static let unsyncedBorrows = GRPCMethodDescriptor(
      name: "UnsyncedBorrows",
      path: "/kava.hard.v1beta1.Query/UnsyncedBorrows",
      type: GRPCCallType.unary
    )

    internal static let totalBorrowed = GRPCMethodDescriptor(
      name: "TotalBorrowed",
      path: "/kava.hard.v1beta1.Query/TotalBorrowed",
      type: GRPCCallType.unary
    )

    internal static let interestRate = GRPCMethodDescriptor(
      name: "InterestRate",
      path: "/kava.hard.v1beta1.Query/InterestRate",
      type: GRPCCallType.unary
    )

    internal static let reserves = GRPCMethodDescriptor(
      name: "Reserves",
      path: "/kava.hard.v1beta1.Query/Reserves",
      type: GRPCCallType.unary
    )

    internal static let interestFactors = GRPCMethodDescriptor(
      name: "InterestFactors",
      path: "/kava.hard.v1beta1.Query/InterestFactors",
      type: GRPCCallType.unary
    )
  }
}

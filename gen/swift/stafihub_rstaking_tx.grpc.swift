//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: stafihub/rstaking/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the Msg service.
///
/// Usage: instantiate `Stafihub_Stafihub_Rstaking_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Stafihub_Stafihub_Rstaking_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Stafihub_Stafihub_Rstaking_MsgClientInterceptorFactoryProtocol? { get }

  func setInflationBase(
    _ request: Stafihub_Stafihub_Rstaking_MsgSetInflationBase,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgSetInflationBase, Stafihub_Stafihub_Rstaking_MsgSetInflationBaseResponse>

  func addValToWhitelist(
    _ request: Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist, Stafihub_Stafihub_Rstaking_MsgAddValToWhitelistResponse>

  func toggleValidatorWhitelistSwitch(
    _ request: Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch, Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitchResponse>

  func withdraw(
    _ request: Stafihub_Stafihub_Rstaking_MsgWithdraw,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgWithdraw, Stafihub_Stafihub_Rstaking_MsgWithdrawResponse>

  func addDelegatorToWhitelist(
    _ request: Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist, Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelistResponse>

  func toggleDelegatorWhitelistSwitch(
    _ request: Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch, Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitchResponse>

  func provideToken(
    _ request: Stafihub_Stafihub_Rstaking_MsgProvideToken,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgProvideToken, Stafihub_Stafihub_Rstaking_MsgProvideTokenResponse>

  func rmDelegatorFromWhitelist(
    _ request: Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist, Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelistResponse>
}

extension Stafihub_Stafihub_Rstaking_MsgClientProtocol {
  internal var serviceName: String {
    return "stafihub.stafihub.rstaking.Msg"
  }

  /// Unary call to SetInflationBase
  ///
  /// - Parameters:
  ///   - request: Request to send to SetInflationBase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setInflationBase(
    _ request: Stafihub_Stafihub_Rstaking_MsgSetInflationBase,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgSetInflationBase, Stafihub_Stafihub_Rstaking_MsgSetInflationBaseResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.setInflationBase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetInflationBaseInterceptors() ?? []
    )
  }

  /// Unary call to AddValToWhitelist
  ///
  /// - Parameters:
  ///   - request: Request to send to AddValToWhitelist.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addValToWhitelist(
    _ request: Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist, Stafihub_Stafihub_Rstaking_MsgAddValToWhitelistResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.addValToWhitelist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddValToWhitelistInterceptors() ?? []
    )
  }

  /// Unary call to ToggleValidatorWhitelistSwitch
  ///
  /// - Parameters:
  ///   - request: Request to send to ToggleValidatorWhitelistSwitch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func toggleValidatorWhitelistSwitch(
    _ request: Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch, Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitchResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.toggleValidatorWhitelistSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeToggleValidatorWhitelistSwitchInterceptors() ?? []
    )
  }

  /// Unary call to Withdraw
  ///
  /// - Parameters:
  ///   - request: Request to send to Withdraw.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func withdraw(
    _ request: Stafihub_Stafihub_Rstaking_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgWithdraw, Stafihub_Stafihub_Rstaking_MsgWithdrawResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.withdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  /// Unary call to AddDelegatorToWhitelist
  ///
  /// - Parameters:
  ///   - request: Request to send to AddDelegatorToWhitelist.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addDelegatorToWhitelist(
    _ request: Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist, Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelistResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.addDelegatorToWhitelist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddDelegatorToWhitelistInterceptors() ?? []
    )
  }

  /// Unary call to ToggleDelegatorWhitelistSwitch
  ///
  /// - Parameters:
  ///   - request: Request to send to ToggleDelegatorWhitelistSwitch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func toggleDelegatorWhitelistSwitch(
    _ request: Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch, Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitchResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.toggleDelegatorWhitelistSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeToggleDelegatorWhitelistSwitchInterceptors() ?? []
    )
  }

  /// Unary call to ProvideToken
  ///
  /// - Parameters:
  ///   - request: Request to send to ProvideToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func provideToken(
    _ request: Stafihub_Stafihub_Rstaking_MsgProvideToken,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgProvideToken, Stafihub_Stafihub_Rstaking_MsgProvideTokenResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.provideToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProvideTokenInterceptors() ?? []
    )
  }

  /// this line is used by starport scaffolding # proto/tx/rpc
  ///
  /// - Parameters:
  ///   - request: Request to send to RmDelegatorFromWhitelist.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func rmDelegatorFromWhitelist(
    _ request: Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist, Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelistResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.rmDelegatorFromWhitelist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmDelegatorFromWhitelistInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Stafihub_Stafihub_Rstaking_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Stafihub_Stafihub_Rstaking_MsgNIOClient")
internal final class Stafihub_Stafihub_Rstaking_MsgClient: Stafihub_Stafihub_Rstaking_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Stafihub_Stafihub_Rstaking_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Stafihub_Stafihub_Rstaking_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the stafihub.stafihub.rstaking.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Rstaking_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Stafihub_Stafihub_Rstaking_MsgNIOClient: Stafihub_Stafihub_Rstaking_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stafihub_Stafihub_Rstaking_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the stafihub.stafihub.rstaking.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Rstaking_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stafihub_Stafihub_Rstaking_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stafihub_Stafihub_Rstaking_MsgClientInterceptorFactoryProtocol? { get }

  func makeSetInflationBaseCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgSetInflationBase,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgSetInflationBase, Stafihub_Stafihub_Rstaking_MsgSetInflationBaseResponse>

  func makeAddValToWhitelistCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist, Stafihub_Stafihub_Rstaking_MsgAddValToWhitelistResponse>

  func makeToggleValidatorWhitelistSwitchCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch, Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitchResponse>

  func makeWithdrawCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgWithdraw,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgWithdraw, Stafihub_Stafihub_Rstaking_MsgWithdrawResponse>

  func makeAddDelegatorToWhitelistCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist, Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelistResponse>

  func makeToggleDelegatorWhitelistSwitchCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch, Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitchResponse>

  func makeProvideTokenCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgProvideToken,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgProvideToken, Stafihub_Stafihub_Rstaking_MsgProvideTokenResponse>

  func makeRmDelegatorFromWhitelistCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist, Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelistResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Rstaking_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stafihub_Stafihub_Rstaking_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Stafihub_Stafihub_Rstaking_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeSetInflationBaseCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgSetInflationBase,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgSetInflationBase, Stafihub_Stafihub_Rstaking_MsgSetInflationBaseResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.setInflationBase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetInflationBaseInterceptors() ?? []
    )
  }

  internal func makeAddValToWhitelistCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist, Stafihub_Stafihub_Rstaking_MsgAddValToWhitelistResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.addValToWhitelist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddValToWhitelistInterceptors() ?? []
    )
  }

  internal func makeToggleValidatorWhitelistSwitchCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch, Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitchResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.toggleValidatorWhitelistSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeToggleValidatorWhitelistSwitchInterceptors() ?? []
    )
  }

  internal func makeWithdrawCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgWithdraw, Stafihub_Stafihub_Rstaking_MsgWithdrawResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.withdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  internal func makeAddDelegatorToWhitelistCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist, Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelistResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.addDelegatorToWhitelist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddDelegatorToWhitelistInterceptors() ?? []
    )
  }

  internal func makeToggleDelegatorWhitelistSwitchCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch, Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitchResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.toggleDelegatorWhitelistSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeToggleDelegatorWhitelistSwitchInterceptors() ?? []
    )
  }

  internal func makeProvideTokenCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgProvideToken,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgProvideToken, Stafihub_Stafihub_Rstaking_MsgProvideTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.provideToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProvideTokenInterceptors() ?? []
    )
  }

  internal func makeRmDelegatorFromWhitelistCall(
    _ request: Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist, Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelistResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.rmDelegatorFromWhitelist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmDelegatorFromWhitelistInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Rstaking_MsgAsyncClientProtocol {
  internal func setInflationBase(
    _ request: Stafihub_Stafihub_Rstaking_MsgSetInflationBase,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgSetInflationBaseResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.setInflationBase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetInflationBaseInterceptors() ?? []
    )
  }

  internal func addValToWhitelist(
    _ request: Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgAddValToWhitelistResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.addValToWhitelist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddValToWhitelistInterceptors() ?? []
    )
  }

  internal func toggleValidatorWhitelistSwitch(
    _ request: Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitchResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.toggleValidatorWhitelistSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeToggleValidatorWhitelistSwitchInterceptors() ?? []
    )
  }

  internal func withdraw(
    _ request: Stafihub_Stafihub_Rstaking_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgWithdrawResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.withdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  internal func addDelegatorToWhitelist(
    _ request: Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelistResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.addDelegatorToWhitelist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddDelegatorToWhitelistInterceptors() ?? []
    )
  }

  internal func toggleDelegatorWhitelistSwitch(
    _ request: Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitchResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.toggleDelegatorWhitelistSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeToggleDelegatorWhitelistSwitchInterceptors() ?? []
    )
  }

  internal func provideToken(
    _ request: Stafihub_Stafihub_Rstaking_MsgProvideToken,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgProvideTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.provideToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeProvideTokenInterceptors() ?? []
    )
  }

  internal func rmDelegatorFromWhitelist(
    _ request: Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelistResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.rmDelegatorFromWhitelist.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmDelegatorFromWhitelistInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Stafihub_Stafihub_Rstaking_MsgAsyncClient: Stafihub_Stafihub_Rstaking_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stafihub_Stafihub_Rstaking_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Rstaking_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Stafihub_Stafihub_Rstaking_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'setInflationBase'.
  func makeSetInflationBaseInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rstaking_MsgSetInflationBase, Stafihub_Stafihub_Rstaking_MsgSetInflationBaseResponse>]

  /// - Returns: Interceptors to use when invoking 'addValToWhitelist'.
  func makeAddValToWhitelistInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist, Stafihub_Stafihub_Rstaking_MsgAddValToWhitelistResponse>]

  /// - Returns: Interceptors to use when invoking 'toggleValidatorWhitelistSwitch'.
  func makeToggleValidatorWhitelistSwitchInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch, Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitchResponse>]

  /// - Returns: Interceptors to use when invoking 'withdraw'.
  func makeWithdrawInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rstaking_MsgWithdraw, Stafihub_Stafihub_Rstaking_MsgWithdrawResponse>]

  /// - Returns: Interceptors to use when invoking 'addDelegatorToWhitelist'.
  func makeAddDelegatorToWhitelistInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist, Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelistResponse>]

  /// - Returns: Interceptors to use when invoking 'toggleDelegatorWhitelistSwitch'.
  func makeToggleDelegatorWhitelistSwitchInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch, Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitchResponse>]

  /// - Returns: Interceptors to use when invoking 'provideToken'.
  func makeProvideTokenInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rstaking_MsgProvideToken, Stafihub_Stafihub_Rstaking_MsgProvideTokenResponse>]

  /// - Returns: Interceptors to use when invoking 'rmDelegatorFromWhitelist'.
  func makeRmDelegatorFromWhitelistInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist, Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelistResponse>]
}

internal enum Stafihub_Stafihub_Rstaking_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "stafihub.stafihub.rstaking.Msg",
    methods: [
      Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.setInflationBase,
      Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.addValToWhitelist,
      Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.toggleValidatorWhitelistSwitch,
      Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.withdraw,
      Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.addDelegatorToWhitelist,
      Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.toggleDelegatorWhitelistSwitch,
      Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.provideToken,
      Stafihub_Stafihub_Rstaking_MsgClientMetadata.Methods.rmDelegatorFromWhitelist,
    ]
  )

  internal enum Methods {
    internal static let setInflationBase = GRPCMethodDescriptor(
      name: "SetInflationBase",
      path: "/stafihub.stafihub.rstaking.Msg/SetInflationBase",
      type: GRPCCallType.unary
    )

    internal static let addValToWhitelist = GRPCMethodDescriptor(
      name: "AddValToWhitelist",
      path: "/stafihub.stafihub.rstaking.Msg/AddValToWhitelist",
      type: GRPCCallType.unary
    )

    internal static let toggleValidatorWhitelistSwitch = GRPCMethodDescriptor(
      name: "ToggleValidatorWhitelistSwitch",
      path: "/stafihub.stafihub.rstaking.Msg/ToggleValidatorWhitelistSwitch",
      type: GRPCCallType.unary
    )

    internal static let withdraw = GRPCMethodDescriptor(
      name: "Withdraw",
      path: "/stafihub.stafihub.rstaking.Msg/Withdraw",
      type: GRPCCallType.unary
    )

    internal static let addDelegatorToWhitelist = GRPCMethodDescriptor(
      name: "AddDelegatorToWhitelist",
      path: "/stafihub.stafihub.rstaking.Msg/AddDelegatorToWhitelist",
      type: GRPCCallType.unary
    )

    internal static let toggleDelegatorWhitelistSwitch = GRPCMethodDescriptor(
      name: "ToggleDelegatorWhitelistSwitch",
      path: "/stafihub.stafihub.rstaking.Msg/ToggleDelegatorWhitelistSwitch",
      type: GRPCCallType.unary
    )

    internal static let provideToken = GRPCMethodDescriptor(
      name: "ProvideToken",
      path: "/stafihub.stafihub.rstaking.Msg/ProvideToken",
      type: GRPCCallType.unary
    )

    internal static let rmDelegatorFromWhitelist = GRPCMethodDescriptor(
      name: "RmDelegatorFromWhitelist",
      path: "/stafihub.stafihub.rstaking.Msg/RmDelegatorFromWhitelist",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Stafihub_Stafihub_Rstaking_MsgProvider: CallHandlerProvider {
  var interceptors: Stafihub_Stafihub_Rstaking_MsgServerInterceptorFactoryProtocol? { get }

  func setInflationBase(request: Stafihub_Stafihub_Rstaking_MsgSetInflationBase, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rstaking_MsgSetInflationBaseResponse>

  func addValToWhitelist(request: Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rstaking_MsgAddValToWhitelistResponse>

  func toggleValidatorWhitelistSwitch(request: Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitchResponse>

  func withdraw(request: Stafihub_Stafihub_Rstaking_MsgWithdraw, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rstaking_MsgWithdrawResponse>

  func addDelegatorToWhitelist(request: Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelistResponse>

  func toggleDelegatorWhitelistSwitch(request: Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitchResponse>

  func provideToken(request: Stafihub_Stafihub_Rstaking_MsgProvideToken, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rstaking_MsgProvideTokenResponse>

  /// this line is used by starport scaffolding # proto/tx/rpc
  func rmDelegatorFromWhitelist(request: Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelistResponse>
}

extension Stafihub_Stafihub_Rstaking_MsgProvider {
  internal var serviceName: Substring {
    return Stafihub_Stafihub_Rstaking_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "SetInflationBase":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgSetInflationBase>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgSetInflationBaseResponse>(),
        interceptors: self.interceptors?.makeSetInflationBaseInterceptors() ?? [],
        userFunction: self.setInflationBase(request:context:)
      )

    case "AddValToWhitelist":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgAddValToWhitelistResponse>(),
        interceptors: self.interceptors?.makeAddValToWhitelistInterceptors() ?? [],
        userFunction: self.addValToWhitelist(request:context:)
      )

    case "ToggleValidatorWhitelistSwitch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitchResponse>(),
        interceptors: self.interceptors?.makeToggleValidatorWhitelistSwitchInterceptors() ?? [],
        userFunction: self.toggleValidatorWhitelistSwitch(request:context:)
      )

    case "Withdraw":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgWithdraw>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgWithdrawResponse>(),
        interceptors: self.interceptors?.makeWithdrawInterceptors() ?? [],
        userFunction: self.withdraw(request:context:)
      )

    case "AddDelegatorToWhitelist":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelistResponse>(),
        interceptors: self.interceptors?.makeAddDelegatorToWhitelistInterceptors() ?? [],
        userFunction: self.addDelegatorToWhitelist(request:context:)
      )

    case "ToggleDelegatorWhitelistSwitch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitchResponse>(),
        interceptors: self.interceptors?.makeToggleDelegatorWhitelistSwitchInterceptors() ?? [],
        userFunction: self.toggleDelegatorWhitelistSwitch(request:context:)
      )

    case "ProvideToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgProvideToken>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgProvideTokenResponse>(),
        interceptors: self.interceptors?.makeProvideTokenInterceptors() ?? [],
        userFunction: self.provideToken(request:context:)
      )

    case "RmDelegatorFromWhitelist":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelistResponse>(),
        interceptors: self.interceptors?.makeRmDelegatorFromWhitelistInterceptors() ?? [],
        userFunction: self.rmDelegatorFromWhitelist(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stafihub_Stafihub_Rstaking_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stafihub_Stafihub_Rstaking_MsgServerInterceptorFactoryProtocol? { get }

  @Sendable func setInflationBase(
    request: Stafihub_Stafihub_Rstaking_MsgSetInflationBase,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgSetInflationBaseResponse

  @Sendable func addValToWhitelist(
    request: Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgAddValToWhitelistResponse

  @Sendable func toggleValidatorWhitelistSwitch(
    request: Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitchResponse

  @Sendable func withdraw(
    request: Stafihub_Stafihub_Rstaking_MsgWithdraw,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgWithdrawResponse

  @Sendable func addDelegatorToWhitelist(
    request: Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelistResponse

  @Sendable func toggleDelegatorWhitelistSwitch(
    request: Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitchResponse

  @Sendable func provideToken(
    request: Stafihub_Stafihub_Rstaking_MsgProvideToken,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgProvideTokenResponse

  /// this line is used by starport scaffolding # proto/tx/rpc
  @Sendable func rmDelegatorFromWhitelist(
    request: Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelistResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Rstaking_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stafihub_Stafihub_Rstaking_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Stafihub_Stafihub_Rstaking_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Stafihub_Stafihub_Rstaking_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "SetInflationBase":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgSetInflationBase>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgSetInflationBaseResponse>(),
        interceptors: self.interceptors?.makeSetInflationBaseInterceptors() ?? [],
        wrapping: self.setInflationBase(request:context:)
      )

    case "AddValToWhitelist":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgAddValToWhitelistResponse>(),
        interceptors: self.interceptors?.makeAddValToWhitelistInterceptors() ?? [],
        wrapping: self.addValToWhitelist(request:context:)
      )

    case "ToggleValidatorWhitelistSwitch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitchResponse>(),
        interceptors: self.interceptors?.makeToggleValidatorWhitelistSwitchInterceptors() ?? [],
        wrapping: self.toggleValidatorWhitelistSwitch(request:context:)
      )

    case "Withdraw":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgWithdraw>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgWithdrawResponse>(),
        interceptors: self.interceptors?.makeWithdrawInterceptors() ?? [],
        wrapping: self.withdraw(request:context:)
      )

    case "AddDelegatorToWhitelist":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelistResponse>(),
        interceptors: self.interceptors?.makeAddDelegatorToWhitelistInterceptors() ?? [],
        wrapping: self.addDelegatorToWhitelist(request:context:)
      )

    case "ToggleDelegatorWhitelistSwitch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitchResponse>(),
        interceptors: self.interceptors?.makeToggleDelegatorWhitelistSwitchInterceptors() ?? [],
        wrapping: self.toggleDelegatorWhitelistSwitch(request:context:)
      )

    case "ProvideToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgProvideToken>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgProvideTokenResponse>(),
        interceptors: self.interceptors?.makeProvideTokenInterceptors() ?? [],
        wrapping: self.provideToken(request:context:)
      )

    case "RmDelegatorFromWhitelist":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelistResponse>(),
        interceptors: self.interceptors?.makeRmDelegatorFromWhitelistInterceptors() ?? [],
        wrapping: self.rmDelegatorFromWhitelist(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Stafihub_Stafihub_Rstaking_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'setInflationBase'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetInflationBaseInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rstaking_MsgSetInflationBase, Stafihub_Stafihub_Rstaking_MsgSetInflationBaseResponse>]

  /// - Returns: Interceptors to use when handling 'addValToWhitelist'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddValToWhitelistInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rstaking_MsgAddValToWhitelist, Stafihub_Stafihub_Rstaking_MsgAddValToWhitelistResponse>]

  /// - Returns: Interceptors to use when handling 'toggleValidatorWhitelistSwitch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeToggleValidatorWhitelistSwitchInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitch, Stafihub_Stafihub_Rstaking_MsgToggleValidatorWhitelistSwitchResponse>]

  /// - Returns: Interceptors to use when handling 'withdraw'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWithdrawInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rstaking_MsgWithdraw, Stafihub_Stafihub_Rstaking_MsgWithdrawResponse>]

  /// - Returns: Interceptors to use when handling 'addDelegatorToWhitelist'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddDelegatorToWhitelistInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelist, Stafihub_Stafihub_Rstaking_MsgAddDelegatorToWhitelistResponse>]

  /// - Returns: Interceptors to use when handling 'toggleDelegatorWhitelistSwitch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeToggleDelegatorWhitelistSwitchInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitch, Stafihub_Stafihub_Rstaking_MsgToggleDelegatorWhitelistSwitchResponse>]

  /// - Returns: Interceptors to use when handling 'provideToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeProvideTokenInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rstaking_MsgProvideToken, Stafihub_Stafihub_Rstaking_MsgProvideTokenResponse>]

  /// - Returns: Interceptors to use when handling 'rmDelegatorFromWhitelist'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRmDelegatorFromWhitelistInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelist, Stafihub_Stafihub_Rstaking_MsgRmDelegatorFromWhitelistResponse>]
}

internal enum Stafihub_Stafihub_Rstaking_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "stafihub.stafihub.rstaking.Msg",
    methods: [
      Stafihub_Stafihub_Rstaking_MsgServerMetadata.Methods.setInflationBase,
      Stafihub_Stafihub_Rstaking_MsgServerMetadata.Methods.addValToWhitelist,
      Stafihub_Stafihub_Rstaking_MsgServerMetadata.Methods.toggleValidatorWhitelistSwitch,
      Stafihub_Stafihub_Rstaking_MsgServerMetadata.Methods.withdraw,
      Stafihub_Stafihub_Rstaking_MsgServerMetadata.Methods.addDelegatorToWhitelist,
      Stafihub_Stafihub_Rstaking_MsgServerMetadata.Methods.toggleDelegatorWhitelistSwitch,
      Stafihub_Stafihub_Rstaking_MsgServerMetadata.Methods.provideToken,
      Stafihub_Stafihub_Rstaking_MsgServerMetadata.Methods.rmDelegatorFromWhitelist,
    ]
  )

  internal enum Methods {
    internal static let setInflationBase = GRPCMethodDescriptor(
      name: "SetInflationBase",
      path: "/stafihub.stafihub.rstaking.Msg/SetInflationBase",
      type: GRPCCallType.unary
    )

    internal static let addValToWhitelist = GRPCMethodDescriptor(
      name: "AddValToWhitelist",
      path: "/stafihub.stafihub.rstaking.Msg/AddValToWhitelist",
      type: GRPCCallType.unary
    )

    internal static let toggleValidatorWhitelistSwitch = GRPCMethodDescriptor(
      name: "ToggleValidatorWhitelistSwitch",
      path: "/stafihub.stafihub.rstaking.Msg/ToggleValidatorWhitelistSwitch",
      type: GRPCCallType.unary
    )

    internal static let withdraw = GRPCMethodDescriptor(
      name: "Withdraw",
      path: "/stafihub.stafihub.rstaking.Msg/Withdraw",
      type: GRPCCallType.unary
    )

    internal static let addDelegatorToWhitelist = GRPCMethodDescriptor(
      name: "AddDelegatorToWhitelist",
      path: "/stafihub.stafihub.rstaking.Msg/AddDelegatorToWhitelist",
      type: GRPCCallType.unary
    )

    internal static let toggleDelegatorWhitelistSwitch = GRPCMethodDescriptor(
      name: "ToggleDelegatorWhitelistSwitch",
      path: "/stafihub.stafihub.rstaking.Msg/ToggleDelegatorWhitelistSwitch",
      type: GRPCCallType.unary
    )

    internal static let provideToken = GRPCMethodDescriptor(
      name: "ProvideToken",
      path: "/stafihub.stafihub.rstaking.Msg/ProvideToken",
      type: GRPCCallType.unary
    )

    internal static let rmDelegatorFromWhitelist = GRPCMethodDescriptor(
      name: "RmDelegatorFromWhitelist",
      path: "/stafihub.stafihub.rstaking.Msg/RmDelegatorFromWhitelist",
      type: GRPCCallType.unary
    )
  }
}

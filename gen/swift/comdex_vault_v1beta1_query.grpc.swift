//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: comdex/vault/v1beta1/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Comdex_Vault_V1beta1_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Comdex_Vault_V1beta1_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Comdex_Vault_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func queryVault(
    _ request: Comdex_Vault_V1beta1_QueryVaultRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultRequest, Comdex_Vault_V1beta1_QueryVaultResponse>

  func queryUserExtendedPairTotalData(
    _ request: Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest, Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataResponse>

  func queryVaultInfoByVaultID(
    _ request: Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest, Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDResponse>

  func queryVaultInfoOfOwnerByApp(
    _ request: Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest, Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppResponse>

  func queryAllVaults(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryAllVaultsRequest, Comdex_Vault_V1beta1_QueryAllVaultsResponse>

  func queryAllVaultsByApp(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest, Comdex_Vault_V1beta1_QueryAllVaultsByAppResponse>

  func queryAllVaultsByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairResponse>

  func queryVaultIDOfOwnerByExtendedPairAndApp(
    _ request: Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest, Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppResponse>

  func queryVaultIdsByAppInAllExtendedPairs(
    _ request: Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest, Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsResponse>

  func queryAllVaultIdsByAnOwner(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest, Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerResponse>

  func queryTokenMintedByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairResponse>

  func queryTokenMintedAssetWiseByApp(
    _ request: Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest, Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppResponse>

  func queryVaultCountByApp(
    _ request: Comdex_Vault_V1beta1_QueryVaultCountByAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultCountByAppRequest, Comdex_Vault_V1beta1_QueryVaultCountByAppResponse>

  func queryVaultCountByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairResponse>

  func queryTotalValueLockedByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairResponse>

  func queryExtendedPairIDsByApp(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest, Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppResponse>

  func queryStableVaultByVaultID(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest, Comdex_Vault_V1beta1_QueryStableVaultByVaultIDResponse>

  func queryStableVaultByApp(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryStableVaultByAppRequest, Comdex_Vault_V1beta1_QueryStableVaultByAppResponse>

  func queryStableVaultByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairResponse>

  func queryExtendedPairVaultMappingByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairResponse>

  func queryExtendedPairVaultMappingByApp(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest, Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppResponse>

  func queryTVLByAppOfAllExtendedPairs(
    _ request: Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest, Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsResponse>

  func queryTVLByApp(
    _ request: Comdex_Vault_V1beta1_QueryTVLByAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryTVLByAppRequest, Comdex_Vault_V1beta1_QueryTVLByAppResponse>

  func queryUserMyPositionByApp(
    _ request: Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest, Comdex_Vault_V1beta1_QueryUserMyPositionByAppResponse>

  func queryPairsLockedAndMintedStatisticByApp(
    _ request: Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest, Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppResponse>

  func queryAllStableMintVaultRewards(
    _ request: Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest, Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsResponse>
}

extension Comdex_Vault_V1beta1_QueryClientProtocol {
  internal var serviceName: String {
    return "comdex.vault.v1beta1.Query"
  }

  /// Unary call to QueryVault
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryVault.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryVault(
    _ request: Comdex_Vault_V1beta1_QueryVaultRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultRequest, Comdex_Vault_V1beta1_QueryVaultResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVault.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultInterceptors() ?? []
    )
  }

  /// Unary call to QueryUserExtendedPairTotalData
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryUserExtendedPairTotalData.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryUserExtendedPairTotalData(
    _ request: Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest, Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryUserExtendedPairTotalData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryUserExtendedPairTotalDataInterceptors() ?? []
    )
  }

  /// Unary call to QueryVaultInfoByVaultID
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryVaultInfoByVaultID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryVaultInfoByVaultID(
    _ request: Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest, Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultInfoByVaultID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultInfoByVaultIDInterceptors() ?? []
    )
  }

  /// Unary call to QueryVaultInfoOfOwnerByApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryVaultInfoOfOwnerByApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryVaultInfoOfOwnerByApp(
    _ request: Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest, Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultInfoOfOwnerByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultInfoOfOwnerByAppInterceptors() ?? []
    )
  }

  /// Unary call to QueryAllVaults
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryAllVaults.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryAllVaults(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryAllVaultsRequest, Comdex_Vault_V1beta1_QueryAllVaultsResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaults.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllVaultsInterceptors() ?? []
    )
  }

  /// Unary call to QueryAllVaultsByApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryAllVaultsByApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryAllVaultsByApp(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest, Comdex_Vault_V1beta1_QueryAllVaultsByAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaultsByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllVaultsByAppInterceptors() ?? []
    )
  }

  /// Unary call to QueryAllVaultsByAppAndExtendedPair
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryAllVaultsByAppAndExtendedPair.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryAllVaultsByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaultsByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllVaultsByAppAndExtendedPairInterceptors() ?? []
    )
  }

  /// Unary call to QueryVaultIDOfOwnerByExtendedPairAndApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryVaultIDOfOwnerByExtendedPairAndApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryVaultIDOfOwnerByExtendedPairAndApp(
    _ request: Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest, Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultIDOfOwnerByExtendedPairAndApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultIDOfOwnerByExtendedPairAndAppInterceptors() ?? []
    )
  }

  /// Unary call to QueryVaultIdsByAppInAllExtendedPairs
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryVaultIdsByAppInAllExtendedPairs.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryVaultIdsByAppInAllExtendedPairs(
    _ request: Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest, Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultIdsByAppInAllExtendedPairs.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultIdsByAppInAllExtendedPairsInterceptors() ?? []
    )
  }

  /// Unary call to QueryAllVaultIdsByAnOwner
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryAllVaultIdsByAnOwner.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryAllVaultIdsByAnOwner(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest, Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaultIdsByAnOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllVaultIdsByAnOwnerInterceptors() ?? []
    )
  }

  /// Unary call to QueryTokenMintedByAppAndExtendedPair
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryTokenMintedByAppAndExtendedPair.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryTokenMintedByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTokenMintedByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTokenMintedByAppAndExtendedPairInterceptors() ?? []
    )
  }

  /// Unary call to QueryTokenMintedAssetWiseByApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryTokenMintedAssetWiseByApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryTokenMintedAssetWiseByApp(
    _ request: Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest, Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTokenMintedAssetWiseByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTokenMintedAssetWiseByAppInterceptors() ?? []
    )
  }

  /// Unary call to QueryVaultCountByApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryVaultCountByApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryVaultCountByApp(
    _ request: Comdex_Vault_V1beta1_QueryVaultCountByAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultCountByAppRequest, Comdex_Vault_V1beta1_QueryVaultCountByAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultCountByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultCountByAppInterceptors() ?? []
    )
  }

  /// Unary call to QueryVaultCountByAppAndExtendedPair
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryVaultCountByAppAndExtendedPair.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryVaultCountByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultCountByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultCountByAppAndExtendedPairInterceptors() ?? []
    )
  }

  /// Unary call to QueryTotalValueLockedByAppAndExtendedPair
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryTotalValueLockedByAppAndExtendedPair.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryTotalValueLockedByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTotalValueLockedByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTotalValueLockedByAppAndExtendedPairInterceptors() ?? []
    )
  }

  /// Unary call to QueryExtendedPairIDsByApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryExtendedPairIDsByApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryExtendedPairIDsByApp(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest, Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryExtendedPairIDsByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryExtendedPairIDsByAppInterceptors() ?? []
    )
  }

  /// Unary call to QueryStableVaultByVaultID
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryStableVaultByVaultID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryStableVaultByVaultID(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest, Comdex_Vault_V1beta1_QueryStableVaultByVaultIDResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryStableVaultByVaultID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryStableVaultByVaultIDInterceptors() ?? []
    )
  }

  /// Unary call to QueryStableVaultByApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryStableVaultByApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryStableVaultByApp(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryStableVaultByAppRequest, Comdex_Vault_V1beta1_QueryStableVaultByAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryStableVaultByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryStableVaultByAppInterceptors() ?? []
    )
  }

  /// Unary call to QueryStableVaultByAppAndExtendedPair
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryStableVaultByAppAndExtendedPair.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryStableVaultByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryStableVaultByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryStableVaultByAppAndExtendedPairInterceptors() ?? []
    )
  }

  /// Unary call to QueryExtendedPairVaultMappingByAppAndExtendedPair
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryExtendedPairVaultMappingByAppAndExtendedPair.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryExtendedPairVaultMappingByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryExtendedPairVaultMappingByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryExtendedPairVaultMappingByAppAndExtendedPairInterceptors() ?? []
    )
  }

  /// Unary call to QueryExtendedPairVaultMappingByApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryExtendedPairVaultMappingByApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryExtendedPairVaultMappingByApp(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest, Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryExtendedPairVaultMappingByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryExtendedPairVaultMappingByAppInterceptors() ?? []
    )
  }

  /// Unary call to QueryTVLByAppOfAllExtendedPairs
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryTVLByAppOfAllExtendedPairs.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryTVLByAppOfAllExtendedPairs(
    _ request: Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest, Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTVLByAppOfAllExtendedPairs.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTVLByAppOfAllExtendedPairsInterceptors() ?? []
    )
  }

  /// Unary call to QueryTVLByApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryTVLByApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryTVLByApp(
    _ request: Comdex_Vault_V1beta1_QueryTVLByAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryTVLByAppRequest, Comdex_Vault_V1beta1_QueryTVLByAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTVLByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTVLByAppInterceptors() ?? []
    )
  }

  /// Unary call to QueryUserMyPositionByApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryUserMyPositionByApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryUserMyPositionByApp(
    _ request: Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest, Comdex_Vault_V1beta1_QueryUserMyPositionByAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryUserMyPositionByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryUserMyPositionByAppInterceptors() ?? []
    )
  }

  /// Unary call to QueryPairsLockedAndMintedStatisticByApp
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryPairsLockedAndMintedStatisticByApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryPairsLockedAndMintedStatisticByApp(
    _ request: Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest, Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryPairsLockedAndMintedStatisticByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryPairsLockedAndMintedStatisticByAppInterceptors() ?? []
    )
  }

  /// Unary call to QueryAllStableMintVaultRewards
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryAllStableMintVaultRewards.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryAllStableMintVaultRewards(
    _ request: Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest, Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsResponse> {
    return self.makeUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllStableMintVaultRewards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllStableMintVaultRewardsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Comdex_Vault_V1beta1_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Comdex_Vault_V1beta1_QueryNIOClient")
internal final class Comdex_Vault_V1beta1_QueryClient: Comdex_Vault_V1beta1_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Comdex_Vault_V1beta1_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Comdex_Vault_V1beta1_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the comdex.vault.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Vault_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Comdex_Vault_V1beta1_QueryNIOClient: Comdex_Vault_V1beta1_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Comdex_Vault_V1beta1_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the comdex.vault.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Vault_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Comdex_Vault_V1beta1_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Comdex_Vault_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func makeQueryVaultCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultRequest, Comdex_Vault_V1beta1_QueryVaultResponse>

  func makeQueryUserExtendedPairTotalDataCall(
    _ request: Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest, Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataResponse>

  func makeQueryVaultInfoByVaultIDCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest, Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDResponse>

  func makeQueryVaultInfoOfOwnerByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest, Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppResponse>

  func makeQueryAllVaultsCall(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryAllVaultsRequest, Comdex_Vault_V1beta1_QueryAllVaultsResponse>

  func makeQueryAllVaultsByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest, Comdex_Vault_V1beta1_QueryAllVaultsByAppResponse>

  func makeQueryAllVaultsByAppAndExtendedPairCall(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairResponse>

  func makeQueryVaultIdofOwnerByExtendedPairAndAppCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest, Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppResponse>

  func makeQueryVaultIdsByAppInAllExtendedPairsCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest, Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsResponse>

  func makeQueryAllVaultIdsByAnOwnerCall(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest, Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerResponse>

  func makeQueryTokenMintedByAppAndExtendedPairCall(
    _ request: Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairResponse>

  func makeQueryTokenMintedAssetWiseByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest, Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppResponse>

  func makeQueryVaultCountByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultCountByAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultCountByAppRequest, Comdex_Vault_V1beta1_QueryVaultCountByAppResponse>

  func makeQueryVaultCountByAppAndExtendedPairCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairResponse>

  func makeQueryTotalValueLockedByAppAndExtendedPairCall(
    _ request: Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairResponse>

  func makeQueryExtendedPairIdsByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest, Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppResponse>

  func makeQueryStableVaultByVaultIDCall(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest, Comdex_Vault_V1beta1_QueryStableVaultByVaultIDResponse>

  func makeQueryStableVaultByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryStableVaultByAppRequest, Comdex_Vault_V1beta1_QueryStableVaultByAppResponse>

  func makeQueryStableVaultByAppAndExtendedPairCall(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairResponse>

  func makeQueryExtendedPairVaultMappingByAppAndExtendedPairCall(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairResponse>

  func makeQueryExtendedPairVaultMappingByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest, Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppResponse>

  func makeQueryTvlbyAppOfAllExtendedPairsCall(
    _ request: Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest, Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsResponse>

  func makeQueryTvlbyAppCall(
    _ request: Comdex_Vault_V1beta1_QueryTVLByAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryTVLByAppRequest, Comdex_Vault_V1beta1_QueryTVLByAppResponse>

  func makeQueryUserMyPositionByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest, Comdex_Vault_V1beta1_QueryUserMyPositionByAppResponse>

  func makeQueryPairsLockedAndMintedStatisticByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest, Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppResponse>

  func makeQueryAllStableMintVaultRewardsCall(
    _ request: Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest, Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Vault_V1beta1_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Comdex_Vault_V1beta1_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Comdex_Vault_V1beta1_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeQueryVaultCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultRequest, Comdex_Vault_V1beta1_QueryVaultResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVault.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultInterceptors() ?? []
    )
  }

  internal func makeQueryUserExtendedPairTotalDataCall(
    _ request: Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest, Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryUserExtendedPairTotalData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryUserExtendedPairTotalDataInterceptors() ?? []
    )
  }

  internal func makeQueryVaultInfoByVaultIDCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest, Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultInfoByVaultID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultInfoByVaultIDInterceptors() ?? []
    )
  }

  internal func makeQueryVaultInfoOfOwnerByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest, Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultInfoOfOwnerByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultInfoOfOwnerByAppInterceptors() ?? []
    )
  }

  internal func makeQueryAllVaultsCall(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryAllVaultsRequest, Comdex_Vault_V1beta1_QueryAllVaultsResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaults.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllVaultsInterceptors() ?? []
    )
  }

  internal func makeQueryAllVaultsByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest, Comdex_Vault_V1beta1_QueryAllVaultsByAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaultsByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllVaultsByAppInterceptors() ?? []
    )
  }

  internal func makeQueryAllVaultsByAppAndExtendedPairCall(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaultsByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllVaultsByAppAndExtendedPairInterceptors() ?? []
    )
  }

  internal func makeQueryVaultIdofOwnerByExtendedPairAndAppCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest, Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultIDOfOwnerByExtendedPairAndApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultIDOfOwnerByExtendedPairAndAppInterceptors() ?? []
    )
  }

  internal func makeQueryVaultIdsByAppInAllExtendedPairsCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest, Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultIdsByAppInAllExtendedPairs.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultIdsByAppInAllExtendedPairsInterceptors() ?? []
    )
  }

  internal func makeQueryAllVaultIdsByAnOwnerCall(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest, Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaultIdsByAnOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllVaultIdsByAnOwnerInterceptors() ?? []
    )
  }

  internal func makeQueryTokenMintedByAppAndExtendedPairCall(
    _ request: Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTokenMintedByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTokenMintedByAppAndExtendedPairInterceptors() ?? []
    )
  }

  internal func makeQueryTokenMintedAssetWiseByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest, Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTokenMintedAssetWiseByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTokenMintedAssetWiseByAppInterceptors() ?? []
    )
  }

  internal func makeQueryVaultCountByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultCountByAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultCountByAppRequest, Comdex_Vault_V1beta1_QueryVaultCountByAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultCountByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultCountByAppInterceptors() ?? []
    )
  }

  internal func makeQueryVaultCountByAppAndExtendedPairCall(
    _ request: Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultCountByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultCountByAppAndExtendedPairInterceptors() ?? []
    )
  }

  internal func makeQueryTotalValueLockedByAppAndExtendedPairCall(
    _ request: Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTotalValueLockedByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTotalValueLockedByAppAndExtendedPairInterceptors() ?? []
    )
  }

  internal func makeQueryExtendedPairIdsByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest, Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryExtendedPairIDsByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryExtendedPairIDsByAppInterceptors() ?? []
    )
  }

  internal func makeQueryStableVaultByVaultIDCall(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest, Comdex_Vault_V1beta1_QueryStableVaultByVaultIDResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryStableVaultByVaultID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryStableVaultByVaultIDInterceptors() ?? []
    )
  }

  internal func makeQueryStableVaultByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryStableVaultByAppRequest, Comdex_Vault_V1beta1_QueryStableVaultByAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryStableVaultByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryStableVaultByAppInterceptors() ?? []
    )
  }

  internal func makeQueryStableVaultByAppAndExtendedPairCall(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryStableVaultByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryStableVaultByAppAndExtendedPairInterceptors() ?? []
    )
  }

  internal func makeQueryExtendedPairVaultMappingByAppAndExtendedPairCall(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryExtendedPairVaultMappingByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryExtendedPairVaultMappingByAppAndExtendedPairInterceptors() ?? []
    )
  }

  internal func makeQueryExtendedPairVaultMappingByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest, Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryExtendedPairVaultMappingByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryExtendedPairVaultMappingByAppInterceptors() ?? []
    )
  }

  internal func makeQueryTvlbyAppOfAllExtendedPairsCall(
    _ request: Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest, Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTVLByAppOfAllExtendedPairs.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTVLByAppOfAllExtendedPairsInterceptors() ?? []
    )
  }

  internal func makeQueryTvlbyAppCall(
    _ request: Comdex_Vault_V1beta1_QueryTVLByAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryTVLByAppRequest, Comdex_Vault_V1beta1_QueryTVLByAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTVLByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTVLByAppInterceptors() ?? []
    )
  }

  internal func makeQueryUserMyPositionByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest, Comdex_Vault_V1beta1_QueryUserMyPositionByAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryUserMyPositionByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryUserMyPositionByAppInterceptors() ?? []
    )
  }

  internal func makeQueryPairsLockedAndMintedStatisticByAppCall(
    _ request: Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest, Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryPairsLockedAndMintedStatisticByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryPairsLockedAndMintedStatisticByAppInterceptors() ?? []
    )
  }

  internal func makeQueryAllStableMintVaultRewardsCall(
    _ request: Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest, Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllStableMintVaultRewards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllStableMintVaultRewardsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Vault_V1beta1_QueryAsyncClientProtocol {
  internal func queryVault(
    _ request: Comdex_Vault_V1beta1_QueryVaultRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVault.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultInterceptors() ?? []
    )
  }

  internal func queryUserExtendedPairTotalData(
    _ request: Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryUserExtendedPairTotalData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryUserExtendedPairTotalDataInterceptors() ?? []
    )
  }

  internal func queryVaultInfoByVaultID(
    _ request: Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultInfoByVaultID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultInfoByVaultIDInterceptors() ?? []
    )
  }

  internal func queryVaultInfoOfOwnerByApp(
    _ request: Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultInfoOfOwnerByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultInfoOfOwnerByAppInterceptors() ?? []
    )
  }

  internal func queryAllVaults(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryAllVaultsResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaults.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllVaultsInterceptors() ?? []
    )
  }

  internal func queryAllVaultsByApp(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryAllVaultsByAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaultsByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllVaultsByAppInterceptors() ?? []
    )
  }

  internal func queryAllVaultsByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaultsByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllVaultsByAppAndExtendedPairInterceptors() ?? []
    )
  }

  internal func queryVaultIDOfOwnerByExtendedPairAndApp(
    _ request: Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultIDOfOwnerByExtendedPairAndApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultIDOfOwnerByExtendedPairAndAppInterceptors() ?? []
    )
  }

  internal func queryVaultIdsByAppInAllExtendedPairs(
    _ request: Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultIdsByAppInAllExtendedPairs.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultIdsByAppInAllExtendedPairsInterceptors() ?? []
    )
  }

  internal func queryAllVaultIdsByAnOwner(
    _ request: Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaultIdsByAnOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllVaultIdsByAnOwnerInterceptors() ?? []
    )
  }

  internal func queryTokenMintedByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTokenMintedByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTokenMintedByAppAndExtendedPairInterceptors() ?? []
    )
  }

  internal func queryTokenMintedAssetWiseByApp(
    _ request: Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTokenMintedAssetWiseByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTokenMintedAssetWiseByAppInterceptors() ?? []
    )
  }

  internal func queryVaultCountByApp(
    _ request: Comdex_Vault_V1beta1_QueryVaultCountByAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultCountByAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultCountByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultCountByAppInterceptors() ?? []
    )
  }

  internal func queryVaultCountByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultCountByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryVaultCountByAppAndExtendedPairInterceptors() ?? []
    )
  }

  internal func queryTotalValueLockedByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTotalValueLockedByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTotalValueLockedByAppAndExtendedPairInterceptors() ?? []
    )
  }

  internal func queryExtendedPairIDsByApp(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryExtendedPairIDsByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryExtendedPairIDsByAppInterceptors() ?? []
    )
  }

  internal func queryStableVaultByVaultID(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryStableVaultByVaultIDResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryStableVaultByVaultID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryStableVaultByVaultIDInterceptors() ?? []
    )
  }

  internal func queryStableVaultByApp(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryStableVaultByAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryStableVaultByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryStableVaultByAppInterceptors() ?? []
    )
  }

  internal func queryStableVaultByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryStableVaultByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryStableVaultByAppAndExtendedPairInterceptors() ?? []
    )
  }

  internal func queryExtendedPairVaultMappingByAppAndExtendedPair(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryExtendedPairVaultMappingByAppAndExtendedPair.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryExtendedPairVaultMappingByAppAndExtendedPairInterceptors() ?? []
    )
  }

  internal func queryExtendedPairVaultMappingByApp(
    _ request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryExtendedPairVaultMappingByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryExtendedPairVaultMappingByAppInterceptors() ?? []
    )
  }

  internal func queryTVLByAppOfAllExtendedPairs(
    _ request: Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTVLByAppOfAllExtendedPairs.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTVLByAppOfAllExtendedPairsInterceptors() ?? []
    )
  }

  internal func queryTVLByApp(
    _ request: Comdex_Vault_V1beta1_QueryTVLByAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryTVLByAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTVLByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryTVLByAppInterceptors() ?? []
    )
  }

  internal func queryUserMyPositionByApp(
    _ request: Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryUserMyPositionByAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryUserMyPositionByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryUserMyPositionByAppInterceptors() ?? []
    )
  }

  internal func queryPairsLockedAndMintedStatisticByApp(
    _ request: Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryPairsLockedAndMintedStatisticByApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryPairsLockedAndMintedStatisticByAppInterceptors() ?? []
    )
  }

  internal func queryAllStableMintVaultRewards(
    _ request: Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllStableMintVaultRewards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryAllStableMintVaultRewardsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Comdex_Vault_V1beta1_QueryAsyncClient: Comdex_Vault_V1beta1_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Comdex_Vault_V1beta1_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Vault_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Comdex_Vault_V1beta1_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'queryVault'.
  func makeQueryVaultInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryVaultRequest, Comdex_Vault_V1beta1_QueryVaultResponse>]

  /// - Returns: Interceptors to use when invoking 'queryUserExtendedPairTotalData'.
  func makeQueryUserExtendedPairTotalDataInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest, Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataResponse>]

  /// - Returns: Interceptors to use when invoking 'queryVaultInfoByVaultID'.
  func makeQueryVaultInfoByVaultIDInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest, Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDResponse>]

  /// - Returns: Interceptors to use when invoking 'queryVaultInfoOfOwnerByApp'.
  func makeQueryVaultInfoOfOwnerByAppInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest, Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppResponse>]

  /// - Returns: Interceptors to use when invoking 'queryAllVaults'.
  func makeQueryAllVaultsInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryAllVaultsRequest, Comdex_Vault_V1beta1_QueryAllVaultsResponse>]

  /// - Returns: Interceptors to use when invoking 'queryAllVaultsByApp'.
  func makeQueryAllVaultsByAppInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest, Comdex_Vault_V1beta1_QueryAllVaultsByAppResponse>]

  /// - Returns: Interceptors to use when invoking 'queryAllVaultsByAppAndExtendedPair'.
  func makeQueryAllVaultsByAppAndExtendedPairInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairResponse>]

  /// - Returns: Interceptors to use when invoking 'queryVaultIDOfOwnerByExtendedPairAndApp'.
  func makeQueryVaultIDOfOwnerByExtendedPairAndAppInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest, Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppResponse>]

  /// - Returns: Interceptors to use when invoking 'queryVaultIdsByAppInAllExtendedPairs'.
  func makeQueryVaultIdsByAppInAllExtendedPairsInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest, Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsResponse>]

  /// - Returns: Interceptors to use when invoking 'queryAllVaultIdsByAnOwner'.
  func makeQueryAllVaultIdsByAnOwnerInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest, Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerResponse>]

  /// - Returns: Interceptors to use when invoking 'queryTokenMintedByAppAndExtendedPair'.
  func makeQueryTokenMintedByAppAndExtendedPairInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairResponse>]

  /// - Returns: Interceptors to use when invoking 'queryTokenMintedAssetWiseByApp'.
  func makeQueryTokenMintedAssetWiseByAppInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest, Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppResponse>]

  /// - Returns: Interceptors to use when invoking 'queryVaultCountByApp'.
  func makeQueryVaultCountByAppInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryVaultCountByAppRequest, Comdex_Vault_V1beta1_QueryVaultCountByAppResponse>]

  /// - Returns: Interceptors to use when invoking 'queryVaultCountByAppAndExtendedPair'.
  func makeQueryVaultCountByAppAndExtendedPairInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairResponse>]

  /// - Returns: Interceptors to use when invoking 'queryTotalValueLockedByAppAndExtendedPair'.
  func makeQueryTotalValueLockedByAppAndExtendedPairInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairResponse>]

  /// - Returns: Interceptors to use when invoking 'queryExtendedPairIDsByApp'.
  func makeQueryExtendedPairIDsByAppInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest, Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppResponse>]

  /// - Returns: Interceptors to use when invoking 'queryStableVaultByVaultID'.
  func makeQueryStableVaultByVaultIDInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest, Comdex_Vault_V1beta1_QueryStableVaultByVaultIDResponse>]

  /// - Returns: Interceptors to use when invoking 'queryStableVaultByApp'.
  func makeQueryStableVaultByAppInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryStableVaultByAppRequest, Comdex_Vault_V1beta1_QueryStableVaultByAppResponse>]

  /// - Returns: Interceptors to use when invoking 'queryStableVaultByAppAndExtendedPair'.
  func makeQueryStableVaultByAppAndExtendedPairInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairResponse>]

  /// - Returns: Interceptors to use when invoking 'queryExtendedPairVaultMappingByAppAndExtendedPair'.
  func makeQueryExtendedPairVaultMappingByAppAndExtendedPairInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairResponse>]

  /// - Returns: Interceptors to use when invoking 'queryExtendedPairVaultMappingByApp'.
  func makeQueryExtendedPairVaultMappingByAppInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest, Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppResponse>]

  /// - Returns: Interceptors to use when invoking 'queryTVLByAppOfAllExtendedPairs'.
  func makeQueryTVLByAppOfAllExtendedPairsInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest, Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsResponse>]

  /// - Returns: Interceptors to use when invoking 'queryTVLByApp'.
  func makeQueryTVLByAppInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryTVLByAppRequest, Comdex_Vault_V1beta1_QueryTVLByAppResponse>]

  /// - Returns: Interceptors to use when invoking 'queryUserMyPositionByApp'.
  func makeQueryUserMyPositionByAppInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest, Comdex_Vault_V1beta1_QueryUserMyPositionByAppResponse>]

  /// - Returns: Interceptors to use when invoking 'queryPairsLockedAndMintedStatisticByApp'.
  func makeQueryPairsLockedAndMintedStatisticByAppInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest, Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppResponse>]

  /// - Returns: Interceptors to use when invoking 'queryAllStableMintVaultRewards'.
  func makeQueryAllStableMintVaultRewardsInterceptors() -> [ClientInterceptor<Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest, Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsResponse>]
}

internal enum Comdex_Vault_V1beta1_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "comdex.vault.v1beta1.Query",
    methods: [
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVault,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryUserExtendedPairTotalData,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultInfoByVaultID,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultInfoOfOwnerByApp,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaults,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaultsByApp,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaultsByAppAndExtendedPair,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultIDOfOwnerByExtendedPairAndApp,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultIdsByAppInAllExtendedPairs,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllVaultIdsByAnOwner,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTokenMintedByAppAndExtendedPair,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTokenMintedAssetWiseByApp,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultCountByApp,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryVaultCountByAppAndExtendedPair,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTotalValueLockedByAppAndExtendedPair,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryExtendedPairIDsByApp,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryStableVaultByVaultID,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryStableVaultByApp,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryStableVaultByAppAndExtendedPair,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryExtendedPairVaultMappingByAppAndExtendedPair,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryExtendedPairVaultMappingByApp,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTVLByAppOfAllExtendedPairs,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryTVLByApp,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryUserMyPositionByApp,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryPairsLockedAndMintedStatisticByApp,
      Comdex_Vault_V1beta1_QueryClientMetadata.Methods.queryAllStableMintVaultRewards,
    ]
  )

  internal enum Methods {
    internal static let queryVault = GRPCMethodDescriptor(
      name: "QueryVault",
      path: "/comdex.vault.v1beta1.Query/QueryVault",
      type: GRPCCallType.unary
    )

    internal static let queryUserExtendedPairTotalData = GRPCMethodDescriptor(
      name: "QueryUserExtendedPairTotalData",
      path: "/comdex.vault.v1beta1.Query/QueryUserExtendedPairTotalData",
      type: GRPCCallType.unary
    )

    internal static let queryVaultInfoByVaultID = GRPCMethodDescriptor(
      name: "QueryVaultInfoByVaultID",
      path: "/comdex.vault.v1beta1.Query/QueryVaultInfoByVaultID",
      type: GRPCCallType.unary
    )

    internal static let queryVaultInfoOfOwnerByApp = GRPCMethodDescriptor(
      name: "QueryVaultInfoOfOwnerByApp",
      path: "/comdex.vault.v1beta1.Query/QueryVaultInfoOfOwnerByApp",
      type: GRPCCallType.unary
    )

    internal static let queryAllVaults = GRPCMethodDescriptor(
      name: "QueryAllVaults",
      path: "/comdex.vault.v1beta1.Query/QueryAllVaults",
      type: GRPCCallType.unary
    )

    internal static let queryAllVaultsByApp = GRPCMethodDescriptor(
      name: "QueryAllVaultsByApp",
      path: "/comdex.vault.v1beta1.Query/QueryAllVaultsByApp",
      type: GRPCCallType.unary
    )

    internal static let queryAllVaultsByAppAndExtendedPair = GRPCMethodDescriptor(
      name: "QueryAllVaultsByAppAndExtendedPair",
      path: "/comdex.vault.v1beta1.Query/QueryAllVaultsByAppAndExtendedPair",
      type: GRPCCallType.unary
    )

    internal static let queryVaultIDOfOwnerByExtendedPairAndApp = GRPCMethodDescriptor(
      name: "QueryVaultIDOfOwnerByExtendedPairAndApp",
      path: "/comdex.vault.v1beta1.Query/QueryVaultIDOfOwnerByExtendedPairAndApp",
      type: GRPCCallType.unary
    )

    internal static let queryVaultIdsByAppInAllExtendedPairs = GRPCMethodDescriptor(
      name: "QueryVaultIdsByAppInAllExtendedPairs",
      path: "/comdex.vault.v1beta1.Query/QueryVaultIdsByAppInAllExtendedPairs",
      type: GRPCCallType.unary
    )

    internal static let queryAllVaultIdsByAnOwner = GRPCMethodDescriptor(
      name: "QueryAllVaultIdsByAnOwner",
      path: "/comdex.vault.v1beta1.Query/QueryAllVaultIdsByAnOwner",
      type: GRPCCallType.unary
    )

    internal static let queryTokenMintedByAppAndExtendedPair = GRPCMethodDescriptor(
      name: "QueryTokenMintedByAppAndExtendedPair",
      path: "/comdex.vault.v1beta1.Query/QueryTokenMintedByAppAndExtendedPair",
      type: GRPCCallType.unary
    )

    internal static let queryTokenMintedAssetWiseByApp = GRPCMethodDescriptor(
      name: "QueryTokenMintedAssetWiseByApp",
      path: "/comdex.vault.v1beta1.Query/QueryTokenMintedAssetWiseByApp",
      type: GRPCCallType.unary
    )

    internal static let queryVaultCountByApp = GRPCMethodDescriptor(
      name: "QueryVaultCountByApp",
      path: "/comdex.vault.v1beta1.Query/QueryVaultCountByApp",
      type: GRPCCallType.unary
    )

    internal static let queryVaultCountByAppAndExtendedPair = GRPCMethodDescriptor(
      name: "QueryVaultCountByAppAndExtendedPair",
      path: "/comdex.vault.v1beta1.Query/QueryVaultCountByAppAndExtendedPair",
      type: GRPCCallType.unary
    )

    internal static let queryTotalValueLockedByAppAndExtendedPair = GRPCMethodDescriptor(
      name: "QueryTotalValueLockedByAppAndExtendedPair",
      path: "/comdex.vault.v1beta1.Query/QueryTotalValueLockedByAppAndExtendedPair",
      type: GRPCCallType.unary
    )

    internal static let queryExtendedPairIDsByApp = GRPCMethodDescriptor(
      name: "QueryExtendedPairIDsByApp",
      path: "/comdex.vault.v1beta1.Query/QueryExtendedPairIDsByApp",
      type: GRPCCallType.unary
    )

    internal static let queryStableVaultByVaultID = GRPCMethodDescriptor(
      name: "QueryStableVaultByVaultID",
      path: "/comdex.vault.v1beta1.Query/QueryStableVaultByVaultID",
      type: GRPCCallType.unary
    )

    internal static let queryStableVaultByApp = GRPCMethodDescriptor(
      name: "QueryStableVaultByApp",
      path: "/comdex.vault.v1beta1.Query/QueryStableVaultByApp",
      type: GRPCCallType.unary
    )

    internal static let queryStableVaultByAppAndExtendedPair = GRPCMethodDescriptor(
      name: "QueryStableVaultByAppAndExtendedPair",
      path: "/comdex.vault.v1beta1.Query/QueryStableVaultByAppAndExtendedPair",
      type: GRPCCallType.unary
    )

    internal static let queryExtendedPairVaultMappingByAppAndExtendedPair = GRPCMethodDescriptor(
      name: "QueryExtendedPairVaultMappingByAppAndExtendedPair",
      path: "/comdex.vault.v1beta1.Query/QueryExtendedPairVaultMappingByAppAndExtendedPair",
      type: GRPCCallType.unary
    )

    internal static let queryExtendedPairVaultMappingByApp = GRPCMethodDescriptor(
      name: "QueryExtendedPairVaultMappingByApp",
      path: "/comdex.vault.v1beta1.Query/QueryExtendedPairVaultMappingByApp",
      type: GRPCCallType.unary
    )

    internal static let queryTVLByAppOfAllExtendedPairs = GRPCMethodDescriptor(
      name: "QueryTVLByAppOfAllExtendedPairs",
      path: "/comdex.vault.v1beta1.Query/QueryTVLByAppOfAllExtendedPairs",
      type: GRPCCallType.unary
    )

    internal static let queryTVLByApp = GRPCMethodDescriptor(
      name: "QueryTVLByApp",
      path: "/comdex.vault.v1beta1.Query/QueryTVLByApp",
      type: GRPCCallType.unary
    )

    internal static let queryUserMyPositionByApp = GRPCMethodDescriptor(
      name: "QueryUserMyPositionByApp",
      path: "/comdex.vault.v1beta1.Query/QueryUserMyPositionByApp",
      type: GRPCCallType.unary
    )

    internal static let queryPairsLockedAndMintedStatisticByApp = GRPCMethodDescriptor(
      name: "QueryPairsLockedAndMintedStatisticByApp",
      path: "/comdex.vault.v1beta1.Query/QueryPairsLockedAndMintedStatisticByApp",
      type: GRPCCallType.unary
    )

    internal static let queryAllStableMintVaultRewards = GRPCMethodDescriptor(
      name: "QueryAllStableMintVaultRewards",
      path: "/comdex.vault.v1beta1.Query/QueryAllStableMintVaultRewards",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Comdex_Vault_V1beta1_QueryProvider: CallHandlerProvider {
  var interceptors: Comdex_Vault_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  func queryVault(request: Comdex_Vault_V1beta1_QueryVaultRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryVaultResponse>

  func queryUserExtendedPairTotalData(request: Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataResponse>

  func queryVaultInfoByVaultID(request: Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDResponse>

  func queryVaultInfoOfOwnerByApp(request: Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppResponse>

  func queryAllVaults(request: Comdex_Vault_V1beta1_QueryAllVaultsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryAllVaultsResponse>

  func queryAllVaultsByApp(request: Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryAllVaultsByAppResponse>

  func queryAllVaultsByAppAndExtendedPair(request: Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairResponse>

  func queryVaultIDOfOwnerByExtendedPairAndApp(request: Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppResponse>

  func queryVaultIdsByAppInAllExtendedPairs(request: Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsResponse>

  func queryAllVaultIdsByAnOwner(request: Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerResponse>

  func queryTokenMintedByAppAndExtendedPair(request: Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairResponse>

  func queryTokenMintedAssetWiseByApp(request: Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppResponse>

  func queryVaultCountByApp(request: Comdex_Vault_V1beta1_QueryVaultCountByAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryVaultCountByAppResponse>

  func queryVaultCountByAppAndExtendedPair(request: Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairResponse>

  func queryTotalValueLockedByAppAndExtendedPair(request: Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairResponse>

  func queryExtendedPairIDsByApp(request: Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppResponse>

  func queryStableVaultByVaultID(request: Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryStableVaultByVaultIDResponse>

  func queryStableVaultByApp(request: Comdex_Vault_V1beta1_QueryStableVaultByAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryStableVaultByAppResponse>

  func queryStableVaultByAppAndExtendedPair(request: Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairResponse>

  func queryExtendedPairVaultMappingByAppAndExtendedPair(request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairResponse>

  func queryExtendedPairVaultMappingByApp(request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppResponse>

  func queryTVLByAppOfAllExtendedPairs(request: Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsResponse>

  func queryTVLByApp(request: Comdex_Vault_V1beta1_QueryTVLByAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryTVLByAppResponse>

  func queryUserMyPositionByApp(request: Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryUserMyPositionByAppResponse>

  func queryPairsLockedAndMintedStatisticByApp(request: Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppResponse>

  func queryAllStableMintVaultRewards(request: Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsResponse>
}

extension Comdex_Vault_V1beta1_QueryProvider {
  internal var serviceName: Substring {
    return Comdex_Vault_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "QueryVault":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultResponse>(),
        interceptors: self.interceptors?.makeQueryVaultInterceptors() ?? [],
        userFunction: self.queryVault(request:context:)
      )

    case "QueryUserExtendedPairTotalData":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataResponse>(),
        interceptors: self.interceptors?.makeQueryUserExtendedPairTotalDataInterceptors() ?? [],
        userFunction: self.queryUserExtendedPairTotalData(request:context:)
      )

    case "QueryVaultInfoByVaultID":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDResponse>(),
        interceptors: self.interceptors?.makeQueryVaultInfoByVaultIDInterceptors() ?? [],
        userFunction: self.queryVaultInfoByVaultID(request:context:)
      )

    case "QueryVaultInfoOfOwnerByApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppResponse>(),
        interceptors: self.interceptors?.makeQueryVaultInfoOfOwnerByAppInterceptors() ?? [],
        userFunction: self.queryVaultInfoOfOwnerByApp(request:context:)
      )

    case "QueryAllVaults":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryAllVaultsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryAllVaultsResponse>(),
        interceptors: self.interceptors?.makeQueryAllVaultsInterceptors() ?? [],
        userFunction: self.queryAllVaults(request:context:)
      )

    case "QueryAllVaultsByApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryAllVaultsByAppResponse>(),
        interceptors: self.interceptors?.makeQueryAllVaultsByAppInterceptors() ?? [],
        userFunction: self.queryAllVaultsByApp(request:context:)
      )

    case "QueryAllVaultsByAppAndExtendedPair":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairResponse>(),
        interceptors: self.interceptors?.makeQueryAllVaultsByAppAndExtendedPairInterceptors() ?? [],
        userFunction: self.queryAllVaultsByAppAndExtendedPair(request:context:)
      )

    case "QueryVaultIDOfOwnerByExtendedPairAndApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppResponse>(),
        interceptors: self.interceptors?.makeQueryVaultIDOfOwnerByExtendedPairAndAppInterceptors() ?? [],
        userFunction: self.queryVaultIDOfOwnerByExtendedPairAndApp(request:context:)
      )

    case "QueryVaultIdsByAppInAllExtendedPairs":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsResponse>(),
        interceptors: self.interceptors?.makeQueryVaultIdsByAppInAllExtendedPairsInterceptors() ?? [],
        userFunction: self.queryVaultIdsByAppInAllExtendedPairs(request:context:)
      )

    case "QueryAllVaultIdsByAnOwner":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerResponse>(),
        interceptors: self.interceptors?.makeQueryAllVaultIdsByAnOwnerInterceptors() ?? [],
        userFunction: self.queryAllVaultIdsByAnOwner(request:context:)
      )

    case "QueryTokenMintedByAppAndExtendedPair":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairResponse>(),
        interceptors: self.interceptors?.makeQueryTokenMintedByAppAndExtendedPairInterceptors() ?? [],
        userFunction: self.queryTokenMintedByAppAndExtendedPair(request:context:)
      )

    case "QueryTokenMintedAssetWiseByApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppResponse>(),
        interceptors: self.interceptors?.makeQueryTokenMintedAssetWiseByAppInterceptors() ?? [],
        userFunction: self.queryTokenMintedAssetWiseByApp(request:context:)
      )

    case "QueryVaultCountByApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultCountByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultCountByAppResponse>(),
        interceptors: self.interceptors?.makeQueryVaultCountByAppInterceptors() ?? [],
        userFunction: self.queryVaultCountByApp(request:context:)
      )

    case "QueryVaultCountByAppAndExtendedPair":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairResponse>(),
        interceptors: self.interceptors?.makeQueryVaultCountByAppAndExtendedPairInterceptors() ?? [],
        userFunction: self.queryVaultCountByAppAndExtendedPair(request:context:)
      )

    case "QueryTotalValueLockedByAppAndExtendedPair":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairResponse>(),
        interceptors: self.interceptors?.makeQueryTotalValueLockedByAppAndExtendedPairInterceptors() ?? [],
        userFunction: self.queryTotalValueLockedByAppAndExtendedPair(request:context:)
      )

    case "QueryExtendedPairIDsByApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppResponse>(),
        interceptors: self.interceptors?.makeQueryExtendedPairIDsByAppInterceptors() ?? [],
        userFunction: self.queryExtendedPairIDsByApp(request:context:)
      )

    case "QueryStableVaultByVaultID":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryStableVaultByVaultIDResponse>(),
        interceptors: self.interceptors?.makeQueryStableVaultByVaultIDInterceptors() ?? [],
        userFunction: self.queryStableVaultByVaultID(request:context:)
      )

    case "QueryStableVaultByApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryStableVaultByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryStableVaultByAppResponse>(),
        interceptors: self.interceptors?.makeQueryStableVaultByAppInterceptors() ?? [],
        userFunction: self.queryStableVaultByApp(request:context:)
      )

    case "QueryStableVaultByAppAndExtendedPair":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairResponse>(),
        interceptors: self.interceptors?.makeQueryStableVaultByAppAndExtendedPairInterceptors() ?? [],
        userFunction: self.queryStableVaultByAppAndExtendedPair(request:context:)
      )

    case "QueryExtendedPairVaultMappingByAppAndExtendedPair":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairResponse>(),
        interceptors: self.interceptors?.makeQueryExtendedPairVaultMappingByAppAndExtendedPairInterceptors() ?? [],
        userFunction: self.queryExtendedPairVaultMappingByAppAndExtendedPair(request:context:)
      )

    case "QueryExtendedPairVaultMappingByApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppResponse>(),
        interceptors: self.interceptors?.makeQueryExtendedPairVaultMappingByAppInterceptors() ?? [],
        userFunction: self.queryExtendedPairVaultMappingByApp(request:context:)
      )

    case "QueryTVLByAppOfAllExtendedPairs":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsResponse>(),
        interceptors: self.interceptors?.makeQueryTVLByAppOfAllExtendedPairsInterceptors() ?? [],
        userFunction: self.queryTVLByAppOfAllExtendedPairs(request:context:)
      )

    case "QueryTVLByApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryTVLByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryTVLByAppResponse>(),
        interceptors: self.interceptors?.makeQueryTVLByAppInterceptors() ?? [],
        userFunction: self.queryTVLByApp(request:context:)
      )

    case "QueryUserMyPositionByApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryUserMyPositionByAppResponse>(),
        interceptors: self.interceptors?.makeQueryUserMyPositionByAppInterceptors() ?? [],
        userFunction: self.queryUserMyPositionByApp(request:context:)
      )

    case "QueryPairsLockedAndMintedStatisticByApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppResponse>(),
        interceptors: self.interceptors?.makeQueryPairsLockedAndMintedStatisticByAppInterceptors() ?? [],
        userFunction: self.queryPairsLockedAndMintedStatisticByApp(request:context:)
      )

    case "QueryAllStableMintVaultRewards":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsResponse>(),
        interceptors: self.interceptors?.makeQueryAllStableMintVaultRewardsInterceptors() ?? [],
        userFunction: self.queryAllStableMintVaultRewards(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Comdex_Vault_V1beta1_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Comdex_Vault_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  @Sendable func queryVault(
    request: Comdex_Vault_V1beta1_QueryVaultRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultResponse

  @Sendable func queryUserExtendedPairTotalData(
    request: Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataResponse

  @Sendable func queryVaultInfoByVaultID(
    request: Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDResponse

  @Sendable func queryVaultInfoOfOwnerByApp(
    request: Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppResponse

  @Sendable func queryAllVaults(
    request: Comdex_Vault_V1beta1_QueryAllVaultsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryAllVaultsResponse

  @Sendable func queryAllVaultsByApp(
    request: Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryAllVaultsByAppResponse

  @Sendable func queryAllVaultsByAppAndExtendedPair(
    request: Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairResponse

  @Sendable func queryVaultIDOfOwnerByExtendedPairAndApp(
    request: Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppResponse

  @Sendable func queryVaultIdsByAppInAllExtendedPairs(
    request: Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsResponse

  @Sendable func queryAllVaultIdsByAnOwner(
    request: Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerResponse

  @Sendable func queryTokenMintedByAppAndExtendedPair(
    request: Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairResponse

  @Sendable func queryTokenMintedAssetWiseByApp(
    request: Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppResponse

  @Sendable func queryVaultCountByApp(
    request: Comdex_Vault_V1beta1_QueryVaultCountByAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultCountByAppResponse

  @Sendable func queryVaultCountByAppAndExtendedPair(
    request: Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairResponse

  @Sendable func queryTotalValueLockedByAppAndExtendedPair(
    request: Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairResponse

  @Sendable func queryExtendedPairIDsByApp(
    request: Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppResponse

  @Sendable func queryStableVaultByVaultID(
    request: Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryStableVaultByVaultIDResponse

  @Sendable func queryStableVaultByApp(
    request: Comdex_Vault_V1beta1_QueryStableVaultByAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryStableVaultByAppResponse

  @Sendable func queryStableVaultByAppAndExtendedPair(
    request: Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairResponse

  @Sendable func queryExtendedPairVaultMappingByAppAndExtendedPair(
    request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairResponse

  @Sendable func queryExtendedPairVaultMappingByApp(
    request: Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppResponse

  @Sendable func queryTVLByAppOfAllExtendedPairs(
    request: Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsResponse

  @Sendable func queryTVLByApp(
    request: Comdex_Vault_V1beta1_QueryTVLByAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryTVLByAppResponse

  @Sendable func queryUserMyPositionByApp(
    request: Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryUserMyPositionByAppResponse

  @Sendable func queryPairsLockedAndMintedStatisticByApp(
    request: Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppResponse

  @Sendable func queryAllStableMintVaultRewards(
    request: Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Vault_V1beta1_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Comdex_Vault_V1beta1_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Comdex_Vault_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Comdex_Vault_V1beta1_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "QueryVault":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultResponse>(),
        interceptors: self.interceptors?.makeQueryVaultInterceptors() ?? [],
        wrapping: self.queryVault(request:context:)
      )

    case "QueryUserExtendedPairTotalData":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataResponse>(),
        interceptors: self.interceptors?.makeQueryUserExtendedPairTotalDataInterceptors() ?? [],
        wrapping: self.queryUserExtendedPairTotalData(request:context:)
      )

    case "QueryVaultInfoByVaultID":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDResponse>(),
        interceptors: self.interceptors?.makeQueryVaultInfoByVaultIDInterceptors() ?? [],
        wrapping: self.queryVaultInfoByVaultID(request:context:)
      )

    case "QueryVaultInfoOfOwnerByApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppResponse>(),
        interceptors: self.interceptors?.makeQueryVaultInfoOfOwnerByAppInterceptors() ?? [],
        wrapping: self.queryVaultInfoOfOwnerByApp(request:context:)
      )

    case "QueryAllVaults":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryAllVaultsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryAllVaultsResponse>(),
        interceptors: self.interceptors?.makeQueryAllVaultsInterceptors() ?? [],
        wrapping: self.queryAllVaults(request:context:)
      )

    case "QueryAllVaultsByApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryAllVaultsByAppResponse>(),
        interceptors: self.interceptors?.makeQueryAllVaultsByAppInterceptors() ?? [],
        wrapping: self.queryAllVaultsByApp(request:context:)
      )

    case "QueryAllVaultsByAppAndExtendedPair":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairResponse>(),
        interceptors: self.interceptors?.makeQueryAllVaultsByAppAndExtendedPairInterceptors() ?? [],
        wrapping: self.queryAllVaultsByAppAndExtendedPair(request:context:)
      )

    case "QueryVaultIDOfOwnerByExtendedPairAndApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppResponse>(),
        interceptors: self.interceptors?.makeQueryVaultIDOfOwnerByExtendedPairAndAppInterceptors() ?? [],
        wrapping: self.queryVaultIDOfOwnerByExtendedPairAndApp(request:context:)
      )

    case "QueryVaultIdsByAppInAllExtendedPairs":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsResponse>(),
        interceptors: self.interceptors?.makeQueryVaultIdsByAppInAllExtendedPairsInterceptors() ?? [],
        wrapping: self.queryVaultIdsByAppInAllExtendedPairs(request:context:)
      )

    case "QueryAllVaultIdsByAnOwner":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerResponse>(),
        interceptors: self.interceptors?.makeQueryAllVaultIdsByAnOwnerInterceptors() ?? [],
        wrapping: self.queryAllVaultIdsByAnOwner(request:context:)
      )

    case "QueryTokenMintedByAppAndExtendedPair":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairResponse>(),
        interceptors: self.interceptors?.makeQueryTokenMintedByAppAndExtendedPairInterceptors() ?? [],
        wrapping: self.queryTokenMintedByAppAndExtendedPair(request:context:)
      )

    case "QueryTokenMintedAssetWiseByApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppResponse>(),
        interceptors: self.interceptors?.makeQueryTokenMintedAssetWiseByAppInterceptors() ?? [],
        wrapping: self.queryTokenMintedAssetWiseByApp(request:context:)
      )

    case "QueryVaultCountByApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultCountByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultCountByAppResponse>(),
        interceptors: self.interceptors?.makeQueryVaultCountByAppInterceptors() ?? [],
        wrapping: self.queryVaultCountByApp(request:context:)
      )

    case "QueryVaultCountByAppAndExtendedPair":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairResponse>(),
        interceptors: self.interceptors?.makeQueryVaultCountByAppAndExtendedPairInterceptors() ?? [],
        wrapping: self.queryVaultCountByAppAndExtendedPair(request:context:)
      )

    case "QueryTotalValueLockedByAppAndExtendedPair":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairResponse>(),
        interceptors: self.interceptors?.makeQueryTotalValueLockedByAppAndExtendedPairInterceptors() ?? [],
        wrapping: self.queryTotalValueLockedByAppAndExtendedPair(request:context:)
      )

    case "QueryExtendedPairIDsByApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppResponse>(),
        interceptors: self.interceptors?.makeQueryExtendedPairIDsByAppInterceptors() ?? [],
        wrapping: self.queryExtendedPairIDsByApp(request:context:)
      )

    case "QueryStableVaultByVaultID":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryStableVaultByVaultIDResponse>(),
        interceptors: self.interceptors?.makeQueryStableVaultByVaultIDInterceptors() ?? [],
        wrapping: self.queryStableVaultByVaultID(request:context:)
      )

    case "QueryStableVaultByApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryStableVaultByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryStableVaultByAppResponse>(),
        interceptors: self.interceptors?.makeQueryStableVaultByAppInterceptors() ?? [],
        wrapping: self.queryStableVaultByApp(request:context:)
      )

    case "QueryStableVaultByAppAndExtendedPair":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairResponse>(),
        interceptors: self.interceptors?.makeQueryStableVaultByAppAndExtendedPairInterceptors() ?? [],
        wrapping: self.queryStableVaultByAppAndExtendedPair(request:context:)
      )

    case "QueryExtendedPairVaultMappingByAppAndExtendedPair":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairResponse>(),
        interceptors: self.interceptors?.makeQueryExtendedPairVaultMappingByAppAndExtendedPairInterceptors() ?? [],
        wrapping: self.queryExtendedPairVaultMappingByAppAndExtendedPair(request:context:)
      )

    case "QueryExtendedPairVaultMappingByApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppResponse>(),
        interceptors: self.interceptors?.makeQueryExtendedPairVaultMappingByAppInterceptors() ?? [],
        wrapping: self.queryExtendedPairVaultMappingByApp(request:context:)
      )

    case "QueryTVLByAppOfAllExtendedPairs":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsResponse>(),
        interceptors: self.interceptors?.makeQueryTVLByAppOfAllExtendedPairsInterceptors() ?? [],
        wrapping: self.queryTVLByAppOfAllExtendedPairs(request:context:)
      )

    case "QueryTVLByApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryTVLByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryTVLByAppResponse>(),
        interceptors: self.interceptors?.makeQueryTVLByAppInterceptors() ?? [],
        wrapping: self.queryTVLByApp(request:context:)
      )

    case "QueryUserMyPositionByApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryUserMyPositionByAppResponse>(),
        interceptors: self.interceptors?.makeQueryUserMyPositionByAppInterceptors() ?? [],
        wrapping: self.queryUserMyPositionByApp(request:context:)
      )

    case "QueryPairsLockedAndMintedStatisticByApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppResponse>(),
        interceptors: self.interceptors?.makeQueryPairsLockedAndMintedStatisticByAppInterceptors() ?? [],
        wrapping: self.queryPairsLockedAndMintedStatisticByApp(request:context:)
      )

    case "QueryAllStableMintVaultRewards":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsResponse>(),
        interceptors: self.interceptors?.makeQueryAllStableMintVaultRewardsInterceptors() ?? [],
        wrapping: self.queryAllStableMintVaultRewards(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Comdex_Vault_V1beta1_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'queryVault'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryVaultInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryVaultRequest, Comdex_Vault_V1beta1_QueryVaultResponse>]

  /// - Returns: Interceptors to use when handling 'queryUserExtendedPairTotalData'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryUserExtendedPairTotalDataInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataRequest, Comdex_Vault_V1beta1_QueryUserExtendedPairTotalDataResponse>]

  /// - Returns: Interceptors to use when handling 'queryVaultInfoByVaultID'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryVaultInfoByVaultIDInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDRequest, Comdex_Vault_V1beta1_QueryVaultInfoByVaultIDResponse>]

  /// - Returns: Interceptors to use when handling 'queryVaultInfoOfOwnerByApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryVaultInfoOfOwnerByAppInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppRequest, Comdex_Vault_V1beta1_QueryVaultInfoOfOwnerByAppResponse>]

  /// - Returns: Interceptors to use when handling 'queryAllVaults'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryAllVaultsInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryAllVaultsRequest, Comdex_Vault_V1beta1_QueryAllVaultsResponse>]

  /// - Returns: Interceptors to use when handling 'queryAllVaultsByApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryAllVaultsByAppInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryAllVaultsByAppRequest, Comdex_Vault_V1beta1_QueryAllVaultsByAppResponse>]

  /// - Returns: Interceptors to use when handling 'queryAllVaultsByAppAndExtendedPair'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryAllVaultsByAppAndExtendedPairInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryAllVaultsByAppAndExtendedPairResponse>]

  /// - Returns: Interceptors to use when handling 'queryVaultIDOfOwnerByExtendedPairAndApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryVaultIDOfOwnerByExtendedPairAndAppInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppRequest, Comdex_Vault_V1beta1_QueryVaultIDOfOwnerByExtendedPairAndAppResponse>]

  /// - Returns: Interceptors to use when handling 'queryVaultIdsByAppInAllExtendedPairs'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryVaultIdsByAppInAllExtendedPairsInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsRequest, Comdex_Vault_V1beta1_QueryVaultIdsByAppInAllExtendedPairsResponse>]

  /// - Returns: Interceptors to use when handling 'queryAllVaultIdsByAnOwner'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryAllVaultIdsByAnOwnerInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerRequest, Comdex_Vault_V1beta1_QueryAllVaultIdsByAnOwnerResponse>]

  /// - Returns: Interceptors to use when handling 'queryTokenMintedByAppAndExtendedPair'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryTokenMintedByAppAndExtendedPairInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryTokenMintedByAppAndExtendedPairResponse>]

  /// - Returns: Interceptors to use when handling 'queryTokenMintedAssetWiseByApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryTokenMintedAssetWiseByAppInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppRequest, Comdex_Vault_V1beta1_QueryTokenMintedAssetWiseByAppResponse>]

  /// - Returns: Interceptors to use when handling 'queryVaultCountByApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryVaultCountByAppInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryVaultCountByAppRequest, Comdex_Vault_V1beta1_QueryVaultCountByAppResponse>]

  /// - Returns: Interceptors to use when handling 'queryVaultCountByAppAndExtendedPair'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryVaultCountByAppAndExtendedPairInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryVaultCountByAppAndExtendedPairResponse>]

  /// - Returns: Interceptors to use when handling 'queryTotalValueLockedByAppAndExtendedPair'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryTotalValueLockedByAppAndExtendedPairInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryTotalValueLockedByAppAndExtendedPairResponse>]

  /// - Returns: Interceptors to use when handling 'queryExtendedPairIDsByApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryExtendedPairIDsByAppInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppRequest, Comdex_Vault_V1beta1_QueryExtendedPairIDsByAppResponse>]

  /// - Returns: Interceptors to use when handling 'queryStableVaultByVaultID'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryStableVaultByVaultIDInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryStableVaultByVaultIDRequest, Comdex_Vault_V1beta1_QueryStableVaultByVaultIDResponse>]

  /// - Returns: Interceptors to use when handling 'queryStableVaultByApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryStableVaultByAppInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryStableVaultByAppRequest, Comdex_Vault_V1beta1_QueryStableVaultByAppResponse>]

  /// - Returns: Interceptors to use when handling 'queryStableVaultByAppAndExtendedPair'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryStableVaultByAppAndExtendedPairInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryStableVaultByAppAndExtendedPairResponse>]

  /// - Returns: Interceptors to use when handling 'queryExtendedPairVaultMappingByAppAndExtendedPair'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryExtendedPairVaultMappingByAppAndExtendedPairInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairRequest, Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppAndExtendedPairResponse>]

  /// - Returns: Interceptors to use when handling 'queryExtendedPairVaultMappingByApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryExtendedPairVaultMappingByAppInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppRequest, Comdex_Vault_V1beta1_QueryExtendedPairVaultMappingByAppResponse>]

  /// - Returns: Interceptors to use when handling 'queryTVLByAppOfAllExtendedPairs'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryTVLByAppOfAllExtendedPairsInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsRequest, Comdex_Vault_V1beta1_QueryTVLByAppOfAllExtendedPairsResponse>]

  /// - Returns: Interceptors to use when handling 'queryTVLByApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryTVLByAppInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryTVLByAppRequest, Comdex_Vault_V1beta1_QueryTVLByAppResponse>]

  /// - Returns: Interceptors to use when handling 'queryUserMyPositionByApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryUserMyPositionByAppInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryUserMyPositionByAppRequest, Comdex_Vault_V1beta1_QueryUserMyPositionByAppResponse>]

  /// - Returns: Interceptors to use when handling 'queryPairsLockedAndMintedStatisticByApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryPairsLockedAndMintedStatisticByAppInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppRequest, Comdex_Vault_V1beta1_QueryPairsLockedAndMintedStatisticByAppResponse>]

  /// - Returns: Interceptors to use when handling 'queryAllStableMintVaultRewards'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryAllStableMintVaultRewardsInterceptors() -> [ServerInterceptor<Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsRequest, Comdex_Vault_V1beta1_QueryAllStableMintVaultRewardsResponse>]
}

internal enum Comdex_Vault_V1beta1_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "comdex.vault.v1beta1.Query",
    methods: [
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryVault,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryUserExtendedPairTotalData,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryVaultInfoByVaultID,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryVaultInfoOfOwnerByApp,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryAllVaults,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryAllVaultsByApp,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryAllVaultsByAppAndExtendedPair,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryVaultIDOfOwnerByExtendedPairAndApp,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryVaultIdsByAppInAllExtendedPairs,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryAllVaultIdsByAnOwner,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryTokenMintedByAppAndExtendedPair,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryTokenMintedAssetWiseByApp,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryVaultCountByApp,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryVaultCountByAppAndExtendedPair,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryTotalValueLockedByAppAndExtendedPair,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryExtendedPairIDsByApp,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryStableVaultByVaultID,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryStableVaultByApp,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryStableVaultByAppAndExtendedPair,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryExtendedPairVaultMappingByAppAndExtendedPair,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryExtendedPairVaultMappingByApp,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryTVLByAppOfAllExtendedPairs,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryTVLByApp,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryUserMyPositionByApp,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryPairsLockedAndMintedStatisticByApp,
      Comdex_Vault_V1beta1_QueryServerMetadata.Methods.queryAllStableMintVaultRewards,
    ]
  )

  internal enum Methods {
    internal static let queryVault = GRPCMethodDescriptor(
      name: "QueryVault",
      path: "/comdex.vault.v1beta1.Query/QueryVault",
      type: GRPCCallType.unary
    )

    internal static let queryUserExtendedPairTotalData = GRPCMethodDescriptor(
      name: "QueryUserExtendedPairTotalData",
      path: "/comdex.vault.v1beta1.Query/QueryUserExtendedPairTotalData",
      type: GRPCCallType.unary
    )

    internal static let queryVaultInfoByVaultID = GRPCMethodDescriptor(
      name: "QueryVaultInfoByVaultID",
      path: "/comdex.vault.v1beta1.Query/QueryVaultInfoByVaultID",
      type: GRPCCallType.unary
    )

    internal static let queryVaultInfoOfOwnerByApp = GRPCMethodDescriptor(
      name: "QueryVaultInfoOfOwnerByApp",
      path: "/comdex.vault.v1beta1.Query/QueryVaultInfoOfOwnerByApp",
      type: GRPCCallType.unary
    )

    internal static let queryAllVaults = GRPCMethodDescriptor(
      name: "QueryAllVaults",
      path: "/comdex.vault.v1beta1.Query/QueryAllVaults",
      type: GRPCCallType.unary
    )

    internal static let queryAllVaultsByApp = GRPCMethodDescriptor(
      name: "QueryAllVaultsByApp",
      path: "/comdex.vault.v1beta1.Query/QueryAllVaultsByApp",
      type: GRPCCallType.unary
    )

    internal static let queryAllVaultsByAppAndExtendedPair = GRPCMethodDescriptor(
      name: "QueryAllVaultsByAppAndExtendedPair",
      path: "/comdex.vault.v1beta1.Query/QueryAllVaultsByAppAndExtendedPair",
      type: GRPCCallType.unary
    )

    internal static let queryVaultIDOfOwnerByExtendedPairAndApp = GRPCMethodDescriptor(
      name: "QueryVaultIDOfOwnerByExtendedPairAndApp",
      path: "/comdex.vault.v1beta1.Query/QueryVaultIDOfOwnerByExtendedPairAndApp",
      type: GRPCCallType.unary
    )

    internal static let queryVaultIdsByAppInAllExtendedPairs = GRPCMethodDescriptor(
      name: "QueryVaultIdsByAppInAllExtendedPairs",
      path: "/comdex.vault.v1beta1.Query/QueryVaultIdsByAppInAllExtendedPairs",
      type: GRPCCallType.unary
    )

    internal static let queryAllVaultIdsByAnOwner = GRPCMethodDescriptor(
      name: "QueryAllVaultIdsByAnOwner",
      path: "/comdex.vault.v1beta1.Query/QueryAllVaultIdsByAnOwner",
      type: GRPCCallType.unary
    )

    internal static let queryTokenMintedByAppAndExtendedPair = GRPCMethodDescriptor(
      name: "QueryTokenMintedByAppAndExtendedPair",
      path: "/comdex.vault.v1beta1.Query/QueryTokenMintedByAppAndExtendedPair",
      type: GRPCCallType.unary
    )

    internal static let queryTokenMintedAssetWiseByApp = GRPCMethodDescriptor(
      name: "QueryTokenMintedAssetWiseByApp",
      path: "/comdex.vault.v1beta1.Query/QueryTokenMintedAssetWiseByApp",
      type: GRPCCallType.unary
    )

    internal static let queryVaultCountByApp = GRPCMethodDescriptor(
      name: "QueryVaultCountByApp",
      path: "/comdex.vault.v1beta1.Query/QueryVaultCountByApp",
      type: GRPCCallType.unary
    )

    internal static let queryVaultCountByAppAndExtendedPair = GRPCMethodDescriptor(
      name: "QueryVaultCountByAppAndExtendedPair",
      path: "/comdex.vault.v1beta1.Query/QueryVaultCountByAppAndExtendedPair",
      type: GRPCCallType.unary
    )

    internal static let queryTotalValueLockedByAppAndExtendedPair = GRPCMethodDescriptor(
      name: "QueryTotalValueLockedByAppAndExtendedPair",
      path: "/comdex.vault.v1beta1.Query/QueryTotalValueLockedByAppAndExtendedPair",
      type: GRPCCallType.unary
    )

    internal static let queryExtendedPairIDsByApp = GRPCMethodDescriptor(
      name: "QueryExtendedPairIDsByApp",
      path: "/comdex.vault.v1beta1.Query/QueryExtendedPairIDsByApp",
      type: GRPCCallType.unary
    )

    internal static let queryStableVaultByVaultID = GRPCMethodDescriptor(
      name: "QueryStableVaultByVaultID",
      path: "/comdex.vault.v1beta1.Query/QueryStableVaultByVaultID",
      type: GRPCCallType.unary
    )

    internal static let queryStableVaultByApp = GRPCMethodDescriptor(
      name: "QueryStableVaultByApp",
      path: "/comdex.vault.v1beta1.Query/QueryStableVaultByApp",
      type: GRPCCallType.unary
    )

    internal static let queryStableVaultByAppAndExtendedPair = GRPCMethodDescriptor(
      name: "QueryStableVaultByAppAndExtendedPair",
      path: "/comdex.vault.v1beta1.Query/QueryStableVaultByAppAndExtendedPair",
      type: GRPCCallType.unary
    )

    internal static let queryExtendedPairVaultMappingByAppAndExtendedPair = GRPCMethodDescriptor(
      name: "QueryExtendedPairVaultMappingByAppAndExtendedPair",
      path: "/comdex.vault.v1beta1.Query/QueryExtendedPairVaultMappingByAppAndExtendedPair",
      type: GRPCCallType.unary
    )

    internal static let queryExtendedPairVaultMappingByApp = GRPCMethodDescriptor(
      name: "QueryExtendedPairVaultMappingByApp",
      path: "/comdex.vault.v1beta1.Query/QueryExtendedPairVaultMappingByApp",
      type: GRPCCallType.unary
    )

    internal static let queryTVLByAppOfAllExtendedPairs = GRPCMethodDescriptor(
      name: "QueryTVLByAppOfAllExtendedPairs",
      path: "/comdex.vault.v1beta1.Query/QueryTVLByAppOfAllExtendedPairs",
      type: GRPCCallType.unary
    )

    internal static let queryTVLByApp = GRPCMethodDescriptor(
      name: "QueryTVLByApp",
      path: "/comdex.vault.v1beta1.Query/QueryTVLByApp",
      type: GRPCCallType.unary
    )

    internal static let queryUserMyPositionByApp = GRPCMethodDescriptor(
      name: "QueryUserMyPositionByApp",
      path: "/comdex.vault.v1beta1.Query/QueryUserMyPositionByApp",
      type: GRPCCallType.unary
    )

    internal static let queryPairsLockedAndMintedStatisticByApp = GRPCMethodDescriptor(
      name: "QueryPairsLockedAndMintedStatisticByApp",
      path: "/comdex.vault.v1beta1.Query/QueryPairsLockedAndMintedStatisticByApp",
      type: GRPCCallType.unary
    )

    internal static let queryAllStableMintVaultRewards = GRPCMethodDescriptor(
      name: "QueryAllStableMintVaultRewards",
      path: "/comdex.vault.v1beta1.Query/QueryAllStableMintVaultRewards",
      type: GRPCCallType.unary
    )
  }
}

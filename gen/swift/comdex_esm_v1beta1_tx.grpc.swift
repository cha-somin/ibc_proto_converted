//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: comdex/esm/v1beta1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Comdex_Esm_V1beta1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Comdex_Esm_V1beta1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Comdex_Esm_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func depositESM(
    _ request: Comdex_Esm_V1beta1_MsgDepositESM,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Esm_V1beta1_MsgDepositESM, Comdex_Esm_V1beta1_MsgDepositESMResponse>

  func executeESM(
    _ request: Comdex_Esm_V1beta1_MsgExecuteESM,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Esm_V1beta1_MsgExecuteESM, Comdex_Esm_V1beta1_MsgExecuteESMResponse>

  func msgKillSwitch(
    _ request: Comdex_Esm_V1beta1_MsgKillRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Esm_V1beta1_MsgKillRequest, Comdex_Esm_V1beta1_MsgKillResponse>

  func msgCollateralRedemption(
    _ request: Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest, Comdex_Esm_V1beta1_MsgCollateralRedemptionResponse>
}

extension Comdex_Esm_V1beta1_MsgClientProtocol {
  internal var serviceName: String {
    return "comdex.esm.v1beta1.Msg"
  }

  /// Unary call to DepositESM
  ///
  /// - Parameters:
  ///   - request: Request to send to DepositESM.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func depositESM(
    _ request: Comdex_Esm_V1beta1_MsgDepositESM,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Esm_V1beta1_MsgDepositESM, Comdex_Esm_V1beta1_MsgDepositESMResponse> {
    return self.makeUnaryCall(
      path: Comdex_Esm_V1beta1_MsgClientMetadata.Methods.depositESM.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositESMInterceptors() ?? []
    )
  }

  /// Unary call to ExecuteESM
  ///
  /// - Parameters:
  ///   - request: Request to send to ExecuteESM.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func executeESM(
    _ request: Comdex_Esm_V1beta1_MsgExecuteESM,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Esm_V1beta1_MsgExecuteESM, Comdex_Esm_V1beta1_MsgExecuteESMResponse> {
    return self.makeUnaryCall(
      path: Comdex_Esm_V1beta1_MsgClientMetadata.Methods.executeESM.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteESMInterceptors() ?? []
    )
  }

  /// Unary call to MsgKillSwitch
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgKillSwitch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgKillSwitch(
    _ request: Comdex_Esm_V1beta1_MsgKillRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Esm_V1beta1_MsgKillRequest, Comdex_Esm_V1beta1_MsgKillResponse> {
    return self.makeUnaryCall(
      path: Comdex_Esm_V1beta1_MsgClientMetadata.Methods.msgKillSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgKillSwitchInterceptors() ?? []
    )
  }

  /// Unary call to MsgCollateralRedemption
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgCollateralRedemption.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgCollateralRedemption(
    _ request: Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest, Comdex_Esm_V1beta1_MsgCollateralRedemptionResponse> {
    return self.makeUnaryCall(
      path: Comdex_Esm_V1beta1_MsgClientMetadata.Methods.msgCollateralRedemption.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgCollateralRedemptionInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Comdex_Esm_V1beta1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Comdex_Esm_V1beta1_MsgNIOClient")
internal final class Comdex_Esm_V1beta1_MsgClient: Comdex_Esm_V1beta1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Comdex_Esm_V1beta1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Comdex_Esm_V1beta1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the comdex.esm.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Esm_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Comdex_Esm_V1beta1_MsgNIOClient: Comdex_Esm_V1beta1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Comdex_Esm_V1beta1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the comdex.esm.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Esm_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Comdex_Esm_V1beta1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Comdex_Esm_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func makeDepositEsmCall(
    _ request: Comdex_Esm_V1beta1_MsgDepositESM,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Esm_V1beta1_MsgDepositESM, Comdex_Esm_V1beta1_MsgDepositESMResponse>

  func makeExecuteEsmCall(
    _ request: Comdex_Esm_V1beta1_MsgExecuteESM,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Esm_V1beta1_MsgExecuteESM, Comdex_Esm_V1beta1_MsgExecuteESMResponse>

  func makeMsgKillSwitchCall(
    _ request: Comdex_Esm_V1beta1_MsgKillRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Esm_V1beta1_MsgKillRequest, Comdex_Esm_V1beta1_MsgKillResponse>

  func makeMsgCollateralRedemptionCall(
    _ request: Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest, Comdex_Esm_V1beta1_MsgCollateralRedemptionResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Esm_V1beta1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Comdex_Esm_V1beta1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Comdex_Esm_V1beta1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeDepositEsmCall(
    _ request: Comdex_Esm_V1beta1_MsgDepositESM,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Esm_V1beta1_MsgDepositESM, Comdex_Esm_V1beta1_MsgDepositESMResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Esm_V1beta1_MsgClientMetadata.Methods.depositESM.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositESMInterceptors() ?? []
    )
  }

  internal func makeExecuteEsmCall(
    _ request: Comdex_Esm_V1beta1_MsgExecuteESM,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Esm_V1beta1_MsgExecuteESM, Comdex_Esm_V1beta1_MsgExecuteESMResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Esm_V1beta1_MsgClientMetadata.Methods.executeESM.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteESMInterceptors() ?? []
    )
  }

  internal func makeMsgKillSwitchCall(
    _ request: Comdex_Esm_V1beta1_MsgKillRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Esm_V1beta1_MsgKillRequest, Comdex_Esm_V1beta1_MsgKillResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Esm_V1beta1_MsgClientMetadata.Methods.msgKillSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgKillSwitchInterceptors() ?? []
    )
  }

  internal func makeMsgCollateralRedemptionCall(
    _ request: Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest, Comdex_Esm_V1beta1_MsgCollateralRedemptionResponse> {
    return self.makeAsyncUnaryCall(
      path: Comdex_Esm_V1beta1_MsgClientMetadata.Methods.msgCollateralRedemption.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgCollateralRedemptionInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Esm_V1beta1_MsgAsyncClientProtocol {
  internal func depositESM(
    _ request: Comdex_Esm_V1beta1_MsgDepositESM,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Esm_V1beta1_MsgDepositESMResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Esm_V1beta1_MsgClientMetadata.Methods.depositESM.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositESMInterceptors() ?? []
    )
  }

  internal func executeESM(
    _ request: Comdex_Esm_V1beta1_MsgExecuteESM,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Esm_V1beta1_MsgExecuteESMResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Esm_V1beta1_MsgClientMetadata.Methods.executeESM.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteESMInterceptors() ?? []
    )
  }

  internal func msgKillSwitch(
    _ request: Comdex_Esm_V1beta1_MsgKillRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Esm_V1beta1_MsgKillResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Esm_V1beta1_MsgClientMetadata.Methods.msgKillSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgKillSwitchInterceptors() ?? []
    )
  }

  internal func msgCollateralRedemption(
    _ request: Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Comdex_Esm_V1beta1_MsgCollateralRedemptionResponse {
    return try await self.performAsyncUnaryCall(
      path: Comdex_Esm_V1beta1_MsgClientMetadata.Methods.msgCollateralRedemption.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgCollateralRedemptionInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Comdex_Esm_V1beta1_MsgAsyncClient: Comdex_Esm_V1beta1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Comdex_Esm_V1beta1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Esm_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Comdex_Esm_V1beta1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'depositESM'.
  func makeDepositESMInterceptors() -> [ClientInterceptor<Comdex_Esm_V1beta1_MsgDepositESM, Comdex_Esm_V1beta1_MsgDepositESMResponse>]

  /// - Returns: Interceptors to use when invoking 'executeESM'.
  func makeExecuteESMInterceptors() -> [ClientInterceptor<Comdex_Esm_V1beta1_MsgExecuteESM, Comdex_Esm_V1beta1_MsgExecuteESMResponse>]

  /// - Returns: Interceptors to use when invoking 'msgKillSwitch'.
  func makeMsgKillSwitchInterceptors() -> [ClientInterceptor<Comdex_Esm_V1beta1_MsgKillRequest, Comdex_Esm_V1beta1_MsgKillResponse>]

  /// - Returns: Interceptors to use when invoking 'msgCollateralRedemption'.
  func makeMsgCollateralRedemptionInterceptors() -> [ClientInterceptor<Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest, Comdex_Esm_V1beta1_MsgCollateralRedemptionResponse>]
}

internal enum Comdex_Esm_V1beta1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "comdex.esm.v1beta1.Msg",
    methods: [
      Comdex_Esm_V1beta1_MsgClientMetadata.Methods.depositESM,
      Comdex_Esm_V1beta1_MsgClientMetadata.Methods.executeESM,
      Comdex_Esm_V1beta1_MsgClientMetadata.Methods.msgKillSwitch,
      Comdex_Esm_V1beta1_MsgClientMetadata.Methods.msgCollateralRedemption,
    ]
  )

  internal enum Methods {
    internal static let depositESM = GRPCMethodDescriptor(
      name: "DepositESM",
      path: "/comdex.esm.v1beta1.Msg/DepositESM",
      type: GRPCCallType.unary
    )

    internal static let executeESM = GRPCMethodDescriptor(
      name: "ExecuteESM",
      path: "/comdex.esm.v1beta1.Msg/ExecuteESM",
      type: GRPCCallType.unary
    )

    internal static let msgKillSwitch = GRPCMethodDescriptor(
      name: "MsgKillSwitch",
      path: "/comdex.esm.v1beta1.Msg/MsgKillSwitch",
      type: GRPCCallType.unary
    )

    internal static let msgCollateralRedemption = GRPCMethodDescriptor(
      name: "MsgCollateralRedemption",
      path: "/comdex.esm.v1beta1.Msg/MsgCollateralRedemption",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Comdex_Esm_V1beta1_MsgProvider: CallHandlerProvider {
  var interceptors: Comdex_Esm_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  func depositESM(request: Comdex_Esm_V1beta1_MsgDepositESM, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Esm_V1beta1_MsgDepositESMResponse>

  func executeESM(request: Comdex_Esm_V1beta1_MsgExecuteESM, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Esm_V1beta1_MsgExecuteESMResponse>

  func msgKillSwitch(request: Comdex_Esm_V1beta1_MsgKillRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Esm_V1beta1_MsgKillResponse>

  func msgCollateralRedemption(request: Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Esm_V1beta1_MsgCollateralRedemptionResponse>
}

extension Comdex_Esm_V1beta1_MsgProvider {
  internal var serviceName: Substring {
    return Comdex_Esm_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "DepositESM":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Esm_V1beta1_MsgDepositESM>(),
        responseSerializer: ProtobufSerializer<Comdex_Esm_V1beta1_MsgDepositESMResponse>(),
        interceptors: self.interceptors?.makeDepositESMInterceptors() ?? [],
        userFunction: self.depositESM(request:context:)
      )

    case "ExecuteESM":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Esm_V1beta1_MsgExecuteESM>(),
        responseSerializer: ProtobufSerializer<Comdex_Esm_V1beta1_MsgExecuteESMResponse>(),
        interceptors: self.interceptors?.makeExecuteESMInterceptors() ?? [],
        userFunction: self.executeESM(request:context:)
      )

    case "MsgKillSwitch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Esm_V1beta1_MsgKillRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Esm_V1beta1_MsgKillResponse>(),
        interceptors: self.interceptors?.makeMsgKillSwitchInterceptors() ?? [],
        userFunction: self.msgKillSwitch(request:context:)
      )

    case "MsgCollateralRedemption":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Esm_V1beta1_MsgCollateralRedemptionResponse>(),
        interceptors: self.interceptors?.makeMsgCollateralRedemptionInterceptors() ?? [],
        userFunction: self.msgCollateralRedemption(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Comdex_Esm_V1beta1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Comdex_Esm_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  @Sendable func depositESM(
    request: Comdex_Esm_V1beta1_MsgDepositESM,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Esm_V1beta1_MsgDepositESMResponse

  @Sendable func executeESM(
    request: Comdex_Esm_V1beta1_MsgExecuteESM,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Esm_V1beta1_MsgExecuteESMResponse

  @Sendable func msgKillSwitch(
    request: Comdex_Esm_V1beta1_MsgKillRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Esm_V1beta1_MsgKillResponse

  @Sendable func msgCollateralRedemption(
    request: Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Comdex_Esm_V1beta1_MsgCollateralRedemptionResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Comdex_Esm_V1beta1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Comdex_Esm_V1beta1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Comdex_Esm_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Comdex_Esm_V1beta1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "DepositESM":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Esm_V1beta1_MsgDepositESM>(),
        responseSerializer: ProtobufSerializer<Comdex_Esm_V1beta1_MsgDepositESMResponse>(),
        interceptors: self.interceptors?.makeDepositESMInterceptors() ?? [],
        wrapping: self.depositESM(request:context:)
      )

    case "ExecuteESM":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Esm_V1beta1_MsgExecuteESM>(),
        responseSerializer: ProtobufSerializer<Comdex_Esm_V1beta1_MsgExecuteESMResponse>(),
        interceptors: self.interceptors?.makeExecuteESMInterceptors() ?? [],
        wrapping: self.executeESM(request:context:)
      )

    case "MsgKillSwitch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Esm_V1beta1_MsgKillRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Esm_V1beta1_MsgKillResponse>(),
        interceptors: self.interceptors?.makeMsgKillSwitchInterceptors() ?? [],
        wrapping: self.msgKillSwitch(request:context:)
      )

    case "MsgCollateralRedemption":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Esm_V1beta1_MsgCollateralRedemptionResponse>(),
        interceptors: self.interceptors?.makeMsgCollateralRedemptionInterceptors() ?? [],
        wrapping: self.msgCollateralRedemption(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Comdex_Esm_V1beta1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'depositESM'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDepositESMInterceptors() -> [ServerInterceptor<Comdex_Esm_V1beta1_MsgDepositESM, Comdex_Esm_V1beta1_MsgDepositESMResponse>]

  /// - Returns: Interceptors to use when handling 'executeESM'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeExecuteESMInterceptors() -> [ServerInterceptor<Comdex_Esm_V1beta1_MsgExecuteESM, Comdex_Esm_V1beta1_MsgExecuteESMResponse>]

  /// - Returns: Interceptors to use when handling 'msgKillSwitch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgKillSwitchInterceptors() -> [ServerInterceptor<Comdex_Esm_V1beta1_MsgKillRequest, Comdex_Esm_V1beta1_MsgKillResponse>]

  /// - Returns: Interceptors to use when handling 'msgCollateralRedemption'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgCollateralRedemptionInterceptors() -> [ServerInterceptor<Comdex_Esm_V1beta1_MsgCollateralRedemptionRequest, Comdex_Esm_V1beta1_MsgCollateralRedemptionResponse>]
}

internal enum Comdex_Esm_V1beta1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "comdex.esm.v1beta1.Msg",
    methods: [
      Comdex_Esm_V1beta1_MsgServerMetadata.Methods.depositESM,
      Comdex_Esm_V1beta1_MsgServerMetadata.Methods.executeESM,
      Comdex_Esm_V1beta1_MsgServerMetadata.Methods.msgKillSwitch,
      Comdex_Esm_V1beta1_MsgServerMetadata.Methods.msgCollateralRedemption,
    ]
  )

  internal enum Methods {
    internal static let depositESM = GRPCMethodDescriptor(
      name: "DepositESM",
      path: "/comdex.esm.v1beta1.Msg/DepositESM",
      type: GRPCCallType.unary
    )

    internal static let executeESM = GRPCMethodDescriptor(
      name: "ExecuteESM",
      path: "/comdex.esm.v1beta1.Msg/ExecuteESM",
      type: GRPCCallType.unary
    )

    internal static let msgKillSwitch = GRPCMethodDescriptor(
      name: "MsgKillSwitch",
      path: "/comdex.esm.v1beta1.Msg/MsgKillSwitch",
      type: GRPCCallType.unary
    )

    internal static let msgCollateralRedemption = GRPCMethodDescriptor(
      name: "MsgCollateralRedemption",
      path: "/comdex.esm.v1beta1.Msg/MsgCollateralRedemption",
      type: GRPCCallType.unary
    )
  }
}

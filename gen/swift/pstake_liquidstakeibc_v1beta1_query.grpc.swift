//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: pstake/liquidstakeibc/v1beta1/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Query defines the gRPC querier service.
///
/// Usage: instantiate `Pstake_Liquidstakeibc_V1beta1_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Pstake_Liquidstakeibc_V1beta1_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Pstake_Liquidstakeibc_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func params(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest, Pstake_Liquidstakeibc_V1beta1_QueryParamsResponse>

  func hostChain(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest, Pstake_Liquidstakeibc_V1beta1_QueryHostChainResponse>

  func hostChains(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest, Pstake_Liquidstakeibc_V1beta1_QueryHostChainsResponse>

  func deposits(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest, Pstake_Liquidstakeibc_V1beta1_QueryDepositsResponse>

  func lSMDeposits(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest, Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsResponse>

  func unbondings(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest, Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsResponse>

  func unbonding(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest, Pstake_Liquidstakeibc_V1beta1_QueryUnbondingResponse>

  func userUnbondings(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest, Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsResponse>

  func validatorUnbondings(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest, Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingResponse>

  func depositAccountBalance(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest, Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceResponse>

  func exchangeRate(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest, Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateResponse>
}

extension Pstake_Liquidstakeibc_V1beta1_QueryClientProtocol {
  internal var serviceName: String {
    return "pstake.liquidstakeibc.v1beta1.Query"
  }

  /// Queries the parameters of the module.
  ///
  /// - Parameters:
  ///   - request: Request to send to Params.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func params(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest, Pstake_Liquidstakeibc_V1beta1_QueryParamsResponse> {
    return self.makeUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  /// Queries a HostChain by id.
  ///
  /// - Parameters:
  ///   - request: Request to send to HostChain.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func hostChain(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest, Pstake_Liquidstakeibc_V1beta1_QueryHostChainResponse> {
    return self.makeUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.hostChain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHostChainInterceptors() ?? []
    )
  }

  /// Queries for all the HostChains.
  ///
  /// - Parameters:
  ///   - request: Request to send to HostChains.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func hostChains(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest, Pstake_Liquidstakeibc_V1beta1_QueryHostChainsResponse> {
    return self.makeUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.hostChains.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHostChainsInterceptors() ?? []
    )
  }

  /// Queries for all the deposits for a host chain.
  ///
  /// - Parameters:
  ///   - request: Request to send to Deposits.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deposits(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest, Pstake_Liquidstakeibc_V1beta1_QueryDepositsResponse> {
    return self.makeUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.deposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositsInterceptors() ?? []
    )
  }

  /// Queries for all the deposits for a host chain.
  ///
  /// - Parameters:
  ///   - request: Request to send to LSMDeposits.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func lSMDeposits(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest, Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsResponse> {
    return self.makeUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.lSMDeposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLSMDepositsInterceptors() ?? []
    )
  }

  /// Queries all unbondings for a host chain.
  ///
  /// - Parameters:
  ///   - request: Request to send to Unbondings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func unbondings(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest, Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsResponse> {
    return self.makeUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.unbondings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbondingsInterceptors() ?? []
    )
  }

  /// Queries an unbonding for a host chain.
  ///
  /// - Parameters:
  ///   - request: Request to send to Unbonding.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func unbonding(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest, Pstake_Liquidstakeibc_V1beta1_QueryUnbondingResponse> {
    return self.makeUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.unbonding.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbondingInterceptors() ?? []
    )
  }

  /// Queries all unbondings for a delegator address.
  ///
  /// - Parameters:
  ///   - request: Request to send to UserUnbondings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func userUnbondings(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest, Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsResponse> {
    return self.makeUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.userUnbondings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUserUnbondingsInterceptors() ?? []
    )
  }

  /// Queries all validator unbondings for a host chain.
  ///
  /// - Parameters:
  ///   - request: Request to send to ValidatorUnbondings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func validatorUnbondings(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest, Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingResponse> {
    return self.makeUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.validatorUnbondings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorUnbondingsInterceptors() ?? []
    )
  }

  /// Queries for a host chain deposit account balance.
  ///
  /// - Parameters:
  ///   - request: Request to send to DepositAccountBalance.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func depositAccountBalance(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest, Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceResponse> {
    return self.makeUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.depositAccountBalance.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositAccountBalanceInterceptors() ?? []
    )
  }

  /// Queries for a host chain exchange rate between the host token and the stk token.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExchangeRate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func exchangeRate(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest, Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateResponse> {
    return self.makeUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.exchangeRate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExchangeRateInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Pstake_Liquidstakeibc_V1beta1_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Pstake_Liquidstakeibc_V1beta1_QueryNIOClient")
internal final class Pstake_Liquidstakeibc_V1beta1_QueryClient: Pstake_Liquidstakeibc_V1beta1_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Pstake_Liquidstakeibc_V1beta1_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Pstake_Liquidstakeibc_V1beta1_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the pstake.liquidstakeibc.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Pstake_Liquidstakeibc_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Pstake_Liquidstakeibc_V1beta1_QueryNIOClient: Pstake_Liquidstakeibc_V1beta1_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Pstake_Liquidstakeibc_V1beta1_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the pstake.liquidstakeibc.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Pstake_Liquidstakeibc_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Query defines the gRPC querier service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Pstake_Liquidstakeibc_V1beta1_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Pstake_Liquidstakeibc_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func makeParamsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest, Pstake_Liquidstakeibc_V1beta1_QueryParamsResponse>

  func makeHostChainCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest, Pstake_Liquidstakeibc_V1beta1_QueryHostChainResponse>

  func makeHostChainsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest, Pstake_Liquidstakeibc_V1beta1_QueryHostChainsResponse>

  func makeDepositsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest, Pstake_Liquidstakeibc_V1beta1_QueryDepositsResponse>

  func makeLsmdepositsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest, Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsResponse>

  func makeUnbondingsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest, Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsResponse>

  func makeUnbondingCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest, Pstake_Liquidstakeibc_V1beta1_QueryUnbondingResponse>

  func makeUserUnbondingsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest, Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsResponse>

  func makeValidatorUnbondingsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest, Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingResponse>

  func makeDepositAccountBalanceCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest, Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceResponse>

  func makeExchangeRateCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest, Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Pstake_Liquidstakeibc_V1beta1_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Pstake_Liquidstakeibc_V1beta1_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeParamsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest, Pstake_Liquidstakeibc_V1beta1_QueryParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func makeHostChainCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest, Pstake_Liquidstakeibc_V1beta1_QueryHostChainResponse> {
    return self.makeAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.hostChain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHostChainInterceptors() ?? []
    )
  }

  internal func makeHostChainsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest, Pstake_Liquidstakeibc_V1beta1_QueryHostChainsResponse> {
    return self.makeAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.hostChains.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHostChainsInterceptors() ?? []
    )
  }

  internal func makeDepositsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest, Pstake_Liquidstakeibc_V1beta1_QueryDepositsResponse> {
    return self.makeAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.deposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositsInterceptors() ?? []
    )
  }

  internal func makeLsmdepositsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest, Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsResponse> {
    return self.makeAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.lSMDeposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLSMDepositsInterceptors() ?? []
    )
  }

  internal func makeUnbondingsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest, Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsResponse> {
    return self.makeAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.unbondings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbondingsInterceptors() ?? []
    )
  }

  internal func makeUnbondingCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest, Pstake_Liquidstakeibc_V1beta1_QueryUnbondingResponse> {
    return self.makeAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.unbonding.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbondingInterceptors() ?? []
    )
  }

  internal func makeUserUnbondingsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest, Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsResponse> {
    return self.makeAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.userUnbondings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUserUnbondingsInterceptors() ?? []
    )
  }

  internal func makeValidatorUnbondingsCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest, Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingResponse> {
    return self.makeAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.validatorUnbondings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorUnbondingsInterceptors() ?? []
    )
  }

  internal func makeDepositAccountBalanceCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest, Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceResponse> {
    return self.makeAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.depositAccountBalance.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositAccountBalanceInterceptors() ?? []
    )
  }

  internal func makeExchangeRateCall(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest, Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateResponse> {
    return self.makeAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.exchangeRate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExchangeRateInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Pstake_Liquidstakeibc_V1beta1_QueryAsyncClientProtocol {
  internal func params(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func hostChain(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryHostChainResponse {
    return try await self.performAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.hostChain.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHostChainInterceptors() ?? []
    )
  }

  internal func hostChains(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryHostChainsResponse {
    return try await self.performAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.hostChains.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHostChainsInterceptors() ?? []
    )
  }

  internal func deposits(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryDepositsResponse {
    return try await self.performAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.deposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositsInterceptors() ?? []
    )
  }

  internal func lSMDeposits(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsResponse {
    return try await self.performAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.lSMDeposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLSMDepositsInterceptors() ?? []
    )
  }

  internal func unbondings(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsResponse {
    return try await self.performAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.unbondings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbondingsInterceptors() ?? []
    )
  }

  internal func unbonding(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryUnbondingResponse {
    return try await self.performAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.unbonding.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbondingInterceptors() ?? []
    )
  }

  internal func userUnbondings(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsResponse {
    return try await self.performAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.userUnbondings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUserUnbondingsInterceptors() ?? []
    )
  }

  internal func validatorUnbondings(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingResponse {
    return try await self.performAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.validatorUnbondings.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorUnbondingsInterceptors() ?? []
    )
  }

  internal func depositAccountBalance(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceResponse {
    return try await self.performAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.depositAccountBalance.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositAccountBalanceInterceptors() ?? []
    )
  }

  internal func exchangeRate(
    _ request: Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateResponse {
    return try await self.performAsyncUnaryCall(
      path: Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.exchangeRate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExchangeRateInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Pstake_Liquidstakeibc_V1beta1_QueryAsyncClient: Pstake_Liquidstakeibc_V1beta1_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Pstake_Liquidstakeibc_V1beta1_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Pstake_Liquidstakeibc_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Pstake_Liquidstakeibc_V1beta1_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'params'.
  func makeParamsInterceptors() -> [ClientInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest, Pstake_Liquidstakeibc_V1beta1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when invoking 'hostChain'.
  func makeHostChainInterceptors() -> [ClientInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest, Pstake_Liquidstakeibc_V1beta1_QueryHostChainResponse>]

  /// - Returns: Interceptors to use when invoking 'hostChains'.
  func makeHostChainsInterceptors() -> [ClientInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest, Pstake_Liquidstakeibc_V1beta1_QueryHostChainsResponse>]

  /// - Returns: Interceptors to use when invoking 'deposits'.
  func makeDepositsInterceptors() -> [ClientInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest, Pstake_Liquidstakeibc_V1beta1_QueryDepositsResponse>]

  /// - Returns: Interceptors to use when invoking 'lSMDeposits'.
  func makeLSMDepositsInterceptors() -> [ClientInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest, Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsResponse>]

  /// - Returns: Interceptors to use when invoking 'unbondings'.
  func makeUnbondingsInterceptors() -> [ClientInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest, Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsResponse>]

  /// - Returns: Interceptors to use when invoking 'unbonding'.
  func makeUnbondingInterceptors() -> [ClientInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest, Pstake_Liquidstakeibc_V1beta1_QueryUnbondingResponse>]

  /// - Returns: Interceptors to use when invoking 'userUnbondings'.
  func makeUserUnbondingsInterceptors() -> [ClientInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest, Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsResponse>]

  /// - Returns: Interceptors to use when invoking 'validatorUnbondings'.
  func makeValidatorUnbondingsInterceptors() -> [ClientInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest, Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingResponse>]

  /// - Returns: Interceptors to use when invoking 'depositAccountBalance'.
  func makeDepositAccountBalanceInterceptors() -> [ClientInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest, Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceResponse>]

  /// - Returns: Interceptors to use when invoking 'exchangeRate'.
  func makeExchangeRateInterceptors() -> [ClientInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest, Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateResponse>]
}

internal enum Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "pstake.liquidstakeibc.v1beta1.Query",
    methods: [
      Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.params,
      Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.hostChain,
      Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.hostChains,
      Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.deposits,
      Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.lSMDeposits,
      Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.unbondings,
      Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.unbonding,
      Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.userUnbondings,
      Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.validatorUnbondings,
      Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.depositAccountBalance,
      Pstake_Liquidstakeibc_V1beta1_QueryClientMetadata.Methods.exchangeRate,
    ]
  )

  internal enum Methods {
    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/pstake.liquidstakeibc.v1beta1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let hostChain = GRPCMethodDescriptor(
      name: "HostChain",
      path: "/pstake.liquidstakeibc.v1beta1.Query/HostChain",
      type: GRPCCallType.unary
    )

    internal static let hostChains = GRPCMethodDescriptor(
      name: "HostChains",
      path: "/pstake.liquidstakeibc.v1beta1.Query/HostChains",
      type: GRPCCallType.unary
    )

    internal static let deposits = GRPCMethodDescriptor(
      name: "Deposits",
      path: "/pstake.liquidstakeibc.v1beta1.Query/Deposits",
      type: GRPCCallType.unary
    )

    internal static let lSMDeposits = GRPCMethodDescriptor(
      name: "LSMDeposits",
      path: "/pstake.liquidstakeibc.v1beta1.Query/LSMDeposits",
      type: GRPCCallType.unary
    )

    internal static let unbondings = GRPCMethodDescriptor(
      name: "Unbondings",
      path: "/pstake.liquidstakeibc.v1beta1.Query/Unbondings",
      type: GRPCCallType.unary
    )

    internal static let unbonding = GRPCMethodDescriptor(
      name: "Unbonding",
      path: "/pstake.liquidstakeibc.v1beta1.Query/Unbonding",
      type: GRPCCallType.unary
    )

    internal static let userUnbondings = GRPCMethodDescriptor(
      name: "UserUnbondings",
      path: "/pstake.liquidstakeibc.v1beta1.Query/UserUnbondings",
      type: GRPCCallType.unary
    )

    internal static let validatorUnbondings = GRPCMethodDescriptor(
      name: "ValidatorUnbondings",
      path: "/pstake.liquidstakeibc.v1beta1.Query/ValidatorUnbondings",
      type: GRPCCallType.unary
    )

    internal static let depositAccountBalance = GRPCMethodDescriptor(
      name: "DepositAccountBalance",
      path: "/pstake.liquidstakeibc.v1beta1.Query/DepositAccountBalance",
      type: GRPCCallType.unary
    )

    internal static let exchangeRate = GRPCMethodDescriptor(
      name: "ExchangeRate",
      path: "/pstake.liquidstakeibc.v1beta1.Query/ExchangeRate",
      type: GRPCCallType.unary
    )
  }
}

/// Query defines the gRPC querier service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Pstake_Liquidstakeibc_V1beta1_QueryProvider: CallHandlerProvider {
  var interceptors: Pstake_Liquidstakeibc_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  /// Queries the parameters of the module.
  func params(request: Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pstake_Liquidstakeibc_V1beta1_QueryParamsResponse>

  /// Queries a HostChain by id.
  func hostChain(request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pstake_Liquidstakeibc_V1beta1_QueryHostChainResponse>

  /// Queries for all the HostChains.
  func hostChains(request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pstake_Liquidstakeibc_V1beta1_QueryHostChainsResponse>

  /// Queries for all the deposits for a host chain.
  func deposits(request: Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pstake_Liquidstakeibc_V1beta1_QueryDepositsResponse>

  /// Queries for all the deposits for a host chain.
  func lSMDeposits(request: Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsResponse>

  /// Queries all unbondings for a host chain.
  func unbondings(request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsResponse>

  /// Queries an unbonding for a host chain.
  func unbonding(request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingResponse>

  /// Queries all unbondings for a delegator address.
  func userUnbondings(request: Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsResponse>

  /// Queries all validator unbondings for a host chain.
  func validatorUnbondings(request: Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingResponse>

  /// Queries for a host chain deposit account balance.
  func depositAccountBalance(request: Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceResponse>

  /// Queries for a host chain exchange rate between the host token and the stk token.
  func exchangeRate(request: Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateResponse>
}

extension Pstake_Liquidstakeibc_V1beta1_QueryProvider {
  internal var serviceName: Substring {
    return Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Params":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        userFunction: self.params(request:context:)
      )

    case "HostChain":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryHostChainResponse>(),
        interceptors: self.interceptors?.makeHostChainInterceptors() ?? [],
        userFunction: self.hostChain(request:context:)
      )

    case "HostChains":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryHostChainsResponse>(),
        interceptors: self.interceptors?.makeHostChainsInterceptors() ?? [],
        userFunction: self.hostChains(request:context:)
      )

    case "Deposits":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryDepositsResponse>(),
        interceptors: self.interceptors?.makeDepositsInterceptors() ?? [],
        userFunction: self.deposits(request:context:)
      )

    case "LSMDeposits":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsResponse>(),
        interceptors: self.interceptors?.makeLSMDepositsInterceptors() ?? [],
        userFunction: self.lSMDeposits(request:context:)
      )

    case "Unbondings":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsResponse>(),
        interceptors: self.interceptors?.makeUnbondingsInterceptors() ?? [],
        userFunction: self.unbondings(request:context:)
      )

    case "Unbonding":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingResponse>(),
        interceptors: self.interceptors?.makeUnbondingInterceptors() ?? [],
        userFunction: self.unbonding(request:context:)
      )

    case "UserUnbondings":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsResponse>(),
        interceptors: self.interceptors?.makeUserUnbondingsInterceptors() ?? [],
        userFunction: self.userUnbondings(request:context:)
      )

    case "ValidatorUnbondings":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingResponse>(),
        interceptors: self.interceptors?.makeValidatorUnbondingsInterceptors() ?? [],
        userFunction: self.validatorUnbondings(request:context:)
      )

    case "DepositAccountBalance":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceResponse>(),
        interceptors: self.interceptors?.makeDepositAccountBalanceInterceptors() ?? [],
        userFunction: self.depositAccountBalance(request:context:)
      )

    case "ExchangeRate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateResponse>(),
        interceptors: self.interceptors?.makeExchangeRateInterceptors() ?? [],
        userFunction: self.exchangeRate(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Query defines the gRPC querier service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Pstake_Liquidstakeibc_V1beta1_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Pstake_Liquidstakeibc_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  /// Queries the parameters of the module.
  @Sendable func params(
    request: Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryParamsResponse

  /// Queries a HostChain by id.
  @Sendable func hostChain(
    request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryHostChainResponse

  /// Queries for all the HostChains.
  @Sendable func hostChains(
    request: Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryHostChainsResponse

  /// Queries for all the deposits for a host chain.
  @Sendable func deposits(
    request: Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryDepositsResponse

  /// Queries for all the deposits for a host chain.
  @Sendable func lSMDeposits(
    request: Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsResponse

  /// Queries all unbondings for a host chain.
  @Sendable func unbondings(
    request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsResponse

  /// Queries an unbonding for a host chain.
  @Sendable func unbonding(
    request: Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryUnbondingResponse

  /// Queries all unbondings for a delegator address.
  @Sendable func userUnbondings(
    request: Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsResponse

  /// Queries all validator unbondings for a host chain.
  @Sendable func validatorUnbondings(
    request: Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingResponse

  /// Queries for a host chain deposit account balance.
  @Sendable func depositAccountBalance(
    request: Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceResponse

  /// Queries for a host chain exchange rate between the host token and the stk token.
  @Sendable func exchangeRate(
    request: Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Pstake_Liquidstakeibc_V1beta1_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Pstake_Liquidstakeibc_V1beta1_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Params":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        wrapping: self.params(request:context:)
      )

    case "HostChain":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryHostChainResponse>(),
        interceptors: self.interceptors?.makeHostChainInterceptors() ?? [],
        wrapping: self.hostChain(request:context:)
      )

    case "HostChains":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryHostChainsResponse>(),
        interceptors: self.interceptors?.makeHostChainsInterceptors() ?? [],
        wrapping: self.hostChains(request:context:)
      )

    case "Deposits":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryDepositsResponse>(),
        interceptors: self.interceptors?.makeDepositsInterceptors() ?? [],
        wrapping: self.deposits(request:context:)
      )

    case "LSMDeposits":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsResponse>(),
        interceptors: self.interceptors?.makeLSMDepositsInterceptors() ?? [],
        wrapping: self.lSMDeposits(request:context:)
      )

    case "Unbondings":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsResponse>(),
        interceptors: self.interceptors?.makeUnbondingsInterceptors() ?? [],
        wrapping: self.unbondings(request:context:)
      )

    case "Unbonding":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingResponse>(),
        interceptors: self.interceptors?.makeUnbondingInterceptors() ?? [],
        wrapping: self.unbonding(request:context:)
      )

    case "UserUnbondings":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsResponse>(),
        interceptors: self.interceptors?.makeUserUnbondingsInterceptors() ?? [],
        wrapping: self.userUnbondings(request:context:)
      )

    case "ValidatorUnbondings":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingResponse>(),
        interceptors: self.interceptors?.makeValidatorUnbondingsInterceptors() ?? [],
        wrapping: self.validatorUnbondings(request:context:)
      )

    case "DepositAccountBalance":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceResponse>(),
        interceptors: self.interceptors?.makeDepositAccountBalanceInterceptors() ?? [],
        wrapping: self.depositAccountBalance(request:context:)
      )

    case "ExchangeRate":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest>(),
        responseSerializer: ProtobufSerializer<Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateResponse>(),
        interceptors: self.interceptors?.makeExchangeRateInterceptors() ?? [],
        wrapping: self.exchangeRate(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Pstake_Liquidstakeibc_V1beta1_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'params'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeParamsInterceptors() -> [ServerInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryParamsRequest, Pstake_Liquidstakeibc_V1beta1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when handling 'hostChain'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeHostChainInterceptors() -> [ServerInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryHostChainRequest, Pstake_Liquidstakeibc_V1beta1_QueryHostChainResponse>]

  /// - Returns: Interceptors to use when handling 'hostChains'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeHostChainsInterceptors() -> [ServerInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryHostChainsRequest, Pstake_Liquidstakeibc_V1beta1_QueryHostChainsResponse>]

  /// - Returns: Interceptors to use when handling 'deposits'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDepositsInterceptors() -> [ServerInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryDepositsRequest, Pstake_Liquidstakeibc_V1beta1_QueryDepositsResponse>]

  /// - Returns: Interceptors to use when handling 'lSMDeposits'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeLSMDepositsInterceptors() -> [ServerInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsRequest, Pstake_Liquidstakeibc_V1beta1_QueryLSMDepositsResponse>]

  /// - Returns: Interceptors to use when handling 'unbondings'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUnbondingsInterceptors() -> [ServerInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsRequest, Pstake_Liquidstakeibc_V1beta1_QueryUnbondingsResponse>]

  /// - Returns: Interceptors to use when handling 'unbonding'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUnbondingInterceptors() -> [ServerInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryUnbondingRequest, Pstake_Liquidstakeibc_V1beta1_QueryUnbondingResponse>]

  /// - Returns: Interceptors to use when handling 'userUnbondings'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUserUnbondingsInterceptors() -> [ServerInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsRequest, Pstake_Liquidstakeibc_V1beta1_QueryUserUnbondingsResponse>]

  /// - Returns: Interceptors to use when handling 'validatorUnbondings'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeValidatorUnbondingsInterceptors() -> [ServerInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingRequest, Pstake_Liquidstakeibc_V1beta1_QueryValidatorUnbondingResponse>]

  /// - Returns: Interceptors to use when handling 'depositAccountBalance'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDepositAccountBalanceInterceptors() -> [ServerInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceRequest, Pstake_Liquidstakeibc_V1beta1_QueryDepositAccountBalanceResponse>]

  /// - Returns: Interceptors to use when handling 'exchangeRate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeExchangeRateInterceptors() -> [ServerInterceptor<Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateRequest, Pstake_Liquidstakeibc_V1beta1_QueryExchangeRateResponse>]
}

internal enum Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "pstake.liquidstakeibc.v1beta1.Query",
    methods: [
      Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.Methods.params,
      Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.Methods.hostChain,
      Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.Methods.hostChains,
      Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.Methods.deposits,
      Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.Methods.lSMDeposits,
      Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.Methods.unbondings,
      Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.Methods.unbonding,
      Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.Methods.userUnbondings,
      Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.Methods.validatorUnbondings,
      Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.Methods.depositAccountBalance,
      Pstake_Liquidstakeibc_V1beta1_QueryServerMetadata.Methods.exchangeRate,
    ]
  )

  internal enum Methods {
    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/pstake.liquidstakeibc.v1beta1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let hostChain = GRPCMethodDescriptor(
      name: "HostChain",
      path: "/pstake.liquidstakeibc.v1beta1.Query/HostChain",
      type: GRPCCallType.unary
    )

    internal static let hostChains = GRPCMethodDescriptor(
      name: "HostChains",
      path: "/pstake.liquidstakeibc.v1beta1.Query/HostChains",
      type: GRPCCallType.unary
    )

    internal static let deposits = GRPCMethodDescriptor(
      name: "Deposits",
      path: "/pstake.liquidstakeibc.v1beta1.Query/Deposits",
      type: GRPCCallType.unary
    )

    internal static let lSMDeposits = GRPCMethodDescriptor(
      name: "LSMDeposits",
      path: "/pstake.liquidstakeibc.v1beta1.Query/LSMDeposits",
      type: GRPCCallType.unary
    )

    internal static let unbondings = GRPCMethodDescriptor(
      name: "Unbondings",
      path: "/pstake.liquidstakeibc.v1beta1.Query/Unbondings",
      type: GRPCCallType.unary
    )

    internal static let unbonding = GRPCMethodDescriptor(
      name: "Unbonding",
      path: "/pstake.liquidstakeibc.v1beta1.Query/Unbonding",
      type: GRPCCallType.unary
    )

    internal static let userUnbondings = GRPCMethodDescriptor(
      name: "UserUnbondings",
      path: "/pstake.liquidstakeibc.v1beta1.Query/UserUnbondings",
      type: GRPCCallType.unary
    )

    internal static let validatorUnbondings = GRPCMethodDescriptor(
      name: "ValidatorUnbondings",
      path: "/pstake.liquidstakeibc.v1beta1.Query/ValidatorUnbondings",
      type: GRPCCallType.unary
    )

    internal static let depositAccountBalance = GRPCMethodDescriptor(
      name: "DepositAccountBalance",
      path: "/pstake.liquidstakeibc.v1beta1.Query/DepositAccountBalance",
      type: GRPCCallType.unary
    )

    internal static let exchangeRate = GRPCMethodDescriptor(
      name: "ExchangeRate",
      path: "/pstake.liquidstakeibc.v1beta1.Query/ExchangeRate",
      type: GRPCCallType.unary
    )
  }
}

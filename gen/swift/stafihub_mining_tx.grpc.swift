//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: stafihub/mining/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the Msg service.
///
/// Usage: instantiate `Stafihub_Stafihub_Mining_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Stafihub_Stafihub_Mining_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Stafihub_Stafihub_Mining_MsgClientInterceptorFactoryProtocol? { get }

  func addStakePool(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakePool,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddStakePool, Stafihub_Stafihub_Mining_MsgAddStakePoolResponse>

  func addStakeItem(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakeItem,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddStakeItem, Stafihub_Stafihub_Mining_MsgAddStakeItemResponse>

  func addRewardPool(
    _ request: Stafihub_Stafihub_Mining_MsgAddRewardPool,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddRewardPool, Stafihub_Stafihub_Mining_MsgAddRewardPoolResponse>

  func stake(
    _ request: Stafihub_Stafihub_Mining_MsgStake,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgStake, Stafihub_Stafihub_Mining_MsgStakeResponse>

  func claimReward(
    _ request: Stafihub_Stafihub_Mining_MsgClaimReward,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgClaimReward, Stafihub_Stafihub_Mining_MsgClaimRewardResponse>

  func withdraw(
    _ request: Stafihub_Stafihub_Mining_MsgWithdraw,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgWithdraw, Stafihub_Stafihub_Mining_MsgWithdrawResponse>

  func updateStakeItem(
    _ request: Stafihub_Stafihub_Mining_MsgUpdateStakeItem,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgUpdateStakeItem, Stafihub_Stafihub_Mining_MsgUpdateStakeItemResponse>

  func addMiningProvider(
    _ request: Stafihub_Stafihub_Mining_MsgAddMiningProvider,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddMiningProvider, Stafihub_Stafihub_Mining_MsgAddMiningProviderResponse>

  func rmMiningProvider(
    _ request: Stafihub_Stafihub_Mining_MsgRmMiningProvider,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgRmMiningProvider, Stafihub_Stafihub_Mining_MsgRmMiningProviderResponse>

  func addRewardToken(
    _ request: Stafihub_Stafihub_Mining_MsgAddRewardToken,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddRewardToken, Stafihub_Stafihub_Mining_MsgAddRewardTokenResponse>

  func setMaxRewardPoolNumber(
    _ request: Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber, Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumberResponse>

  func updateRewardPool(
    _ request: Stafihub_Stafihub_Mining_MsgUpdateRewardPool,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgUpdateRewardPool, Stafihub_Stafihub_Mining_MsgUpdateRewardPoolResponse>

  func toggleProviderSwitch(
    _ request: Stafihub_Stafihub_Mining_MsgToggleProviderSwitch,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgToggleProviderSwitch, Stafihub_Stafihub_Mining_MsgToggleProviderSwitchResponse>

  func setMaxStakeItemNumber(
    _ request: Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber, Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumberResponse>

  func addReward(
    _ request: Stafihub_Stafihub_Mining_MsgAddReward,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddReward, Stafihub_Stafihub_Mining_MsgAddRewardResponse>

  func toggleEmergencySwitch(
    _ request: Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch, Stafihub_Stafihub_Mining_MsgToggleEmergencySwitchResponse>

  func emergencyWithdraw(
    _ request: Stafihub_Stafihub_Mining_MsgEmergencyWithdraw,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgEmergencyWithdraw, Stafihub_Stafihub_Mining_MsgEmergencyWithdrawResponse>

  func addStakeToken(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakeToken,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddStakeToken, Stafihub_Stafihub_Mining_MsgAddStakeTokenResponse>

  func rmRewardToken(
    _ request: Stafihub_Stafihub_Mining_MsgRmRewardToken,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgRmRewardToken, Stafihub_Stafihub_Mining_MsgRmRewardTokenResponse>

  func rmStakeToken(
    _ request: Stafihub_Stafihub_Mining_MsgRmStakeToken,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgRmStakeToken, Stafihub_Stafihub_Mining_MsgRmStakeTokenResponse>

  func setStakeItemLimit(
    _ request: Stafihub_Stafihub_Mining_MsgSetStakeItemLimit,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgSetStakeItemLimit, Stafihub_Stafihub_Mining_MsgSetStakeItemLimitResponse>

  func withdrawRewardToken(
    _ request: Stafihub_Stafihub_Mining_MsgWithdrawRewardToken,
    callOptions: CallOptions?
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgWithdrawRewardToken, Stafihub_Stafihub_Mining_MsgWithdrawRewardTokenResponse>
}

extension Stafihub_Stafihub_Mining_MsgClientProtocol {
  internal var serviceName: String {
    return "stafihub.stafihub.mining.Msg"
  }

  /// Unary call to AddStakePool
  ///
  /// - Parameters:
  ///   - request: Request to send to AddStakePool.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addStakePool(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakePool,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddStakePool, Stafihub_Stafihub_Mining_MsgAddStakePoolResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addStakePool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddStakePoolInterceptors() ?? []
    )
  }

  /// Unary call to AddStakeItem
  ///
  /// - Parameters:
  ///   - request: Request to send to AddStakeItem.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addStakeItem(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakeItem,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddStakeItem, Stafihub_Stafihub_Mining_MsgAddStakeItemResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addStakeItem.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddStakeItemInterceptors() ?? []
    )
  }

  /// Unary call to AddRewardPool
  ///
  /// - Parameters:
  ///   - request: Request to send to AddRewardPool.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addRewardPool(
    _ request: Stafihub_Stafihub_Mining_MsgAddRewardPool,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddRewardPool, Stafihub_Stafihub_Mining_MsgAddRewardPoolResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addRewardPool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRewardPoolInterceptors() ?? []
    )
  }

  /// Unary call to Stake
  ///
  /// - Parameters:
  ///   - request: Request to send to Stake.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func stake(
    _ request: Stafihub_Stafihub_Mining_MsgStake,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgStake, Stafihub_Stafihub_Mining_MsgStakeResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.stake.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStakeInterceptors() ?? []
    )
  }

  /// Unary call to ClaimReward
  ///
  /// - Parameters:
  ///   - request: Request to send to ClaimReward.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func claimReward(
    _ request: Stafihub_Stafihub_Mining_MsgClaimReward,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgClaimReward, Stafihub_Stafihub_Mining_MsgClaimRewardResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.claimReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClaimRewardInterceptors() ?? []
    )
  }

  /// Unary call to Withdraw
  ///
  /// - Parameters:
  ///   - request: Request to send to Withdraw.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func withdraw(
    _ request: Stafihub_Stafihub_Mining_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgWithdraw, Stafihub_Stafihub_Mining_MsgWithdrawResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.withdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  /// Unary call to UpdateStakeItem
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateStakeItem.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateStakeItem(
    _ request: Stafihub_Stafihub_Mining_MsgUpdateStakeItem,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgUpdateStakeItem, Stafihub_Stafihub_Mining_MsgUpdateStakeItemResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.updateStakeItem.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateStakeItemInterceptors() ?? []
    )
  }

  /// Unary call to AddMiningProvider
  ///
  /// - Parameters:
  ///   - request: Request to send to AddMiningProvider.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addMiningProvider(
    _ request: Stafihub_Stafihub_Mining_MsgAddMiningProvider,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddMiningProvider, Stafihub_Stafihub_Mining_MsgAddMiningProviderResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addMiningProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddMiningProviderInterceptors() ?? []
    )
  }

  /// Unary call to RmMiningProvider
  ///
  /// - Parameters:
  ///   - request: Request to send to RmMiningProvider.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func rmMiningProvider(
    _ request: Stafihub_Stafihub_Mining_MsgRmMiningProvider,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgRmMiningProvider, Stafihub_Stafihub_Mining_MsgRmMiningProviderResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.rmMiningProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmMiningProviderInterceptors() ?? []
    )
  }

  /// Unary call to AddRewardToken
  ///
  /// - Parameters:
  ///   - request: Request to send to AddRewardToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addRewardToken(
    _ request: Stafihub_Stafihub_Mining_MsgAddRewardToken,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddRewardToken, Stafihub_Stafihub_Mining_MsgAddRewardTokenResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addRewardToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRewardTokenInterceptors() ?? []
    )
  }

  /// Unary call to SetMaxRewardPoolNumber
  ///
  /// - Parameters:
  ///   - request: Request to send to SetMaxRewardPoolNumber.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setMaxRewardPoolNumber(
    _ request: Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber, Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumberResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.setMaxRewardPoolNumber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetMaxRewardPoolNumberInterceptors() ?? []
    )
  }

  /// Unary call to UpdateRewardPool
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateRewardPool.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateRewardPool(
    _ request: Stafihub_Stafihub_Mining_MsgUpdateRewardPool,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgUpdateRewardPool, Stafihub_Stafihub_Mining_MsgUpdateRewardPoolResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.updateRewardPool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRewardPoolInterceptors() ?? []
    )
  }

  /// Unary call to ToggleProviderSwitch
  ///
  /// - Parameters:
  ///   - request: Request to send to ToggleProviderSwitch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func toggleProviderSwitch(
    _ request: Stafihub_Stafihub_Mining_MsgToggleProviderSwitch,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgToggleProviderSwitch, Stafihub_Stafihub_Mining_MsgToggleProviderSwitchResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.toggleProviderSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeToggleProviderSwitchInterceptors() ?? []
    )
  }

  /// Unary call to SetMaxStakeItemNumber
  ///
  /// - Parameters:
  ///   - request: Request to send to SetMaxStakeItemNumber.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setMaxStakeItemNumber(
    _ request: Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber, Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumberResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.setMaxStakeItemNumber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetMaxStakeItemNumberInterceptors() ?? []
    )
  }

  /// Unary call to AddReward
  ///
  /// - Parameters:
  ///   - request: Request to send to AddReward.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addReward(
    _ request: Stafihub_Stafihub_Mining_MsgAddReward,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddReward, Stafihub_Stafihub_Mining_MsgAddRewardResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRewardInterceptors() ?? []
    )
  }

  /// Unary call to ToggleEmergencySwitch
  ///
  /// - Parameters:
  ///   - request: Request to send to ToggleEmergencySwitch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func toggleEmergencySwitch(
    _ request: Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch, Stafihub_Stafihub_Mining_MsgToggleEmergencySwitchResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.toggleEmergencySwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeToggleEmergencySwitchInterceptors() ?? []
    )
  }

  /// Unary call to EmergencyWithdraw
  ///
  /// - Parameters:
  ///   - request: Request to send to EmergencyWithdraw.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func emergencyWithdraw(
    _ request: Stafihub_Stafihub_Mining_MsgEmergencyWithdraw,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgEmergencyWithdraw, Stafihub_Stafihub_Mining_MsgEmergencyWithdrawResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.emergencyWithdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEmergencyWithdrawInterceptors() ?? []
    )
  }

  /// Unary call to AddStakeToken
  ///
  /// - Parameters:
  ///   - request: Request to send to AddStakeToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addStakeToken(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakeToken,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgAddStakeToken, Stafihub_Stafihub_Mining_MsgAddStakeTokenResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addStakeToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddStakeTokenInterceptors() ?? []
    )
  }

  /// Unary call to RmRewardToken
  ///
  /// - Parameters:
  ///   - request: Request to send to RmRewardToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func rmRewardToken(
    _ request: Stafihub_Stafihub_Mining_MsgRmRewardToken,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgRmRewardToken, Stafihub_Stafihub_Mining_MsgRmRewardTokenResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.rmRewardToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmRewardTokenInterceptors() ?? []
    )
  }

  /// Unary call to RmStakeToken
  ///
  /// - Parameters:
  ///   - request: Request to send to RmStakeToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func rmStakeToken(
    _ request: Stafihub_Stafihub_Mining_MsgRmStakeToken,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgRmStakeToken, Stafihub_Stafihub_Mining_MsgRmStakeTokenResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.rmStakeToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmStakeTokenInterceptors() ?? []
    )
  }

  /// Unary call to SetStakeItemLimit
  ///
  /// - Parameters:
  ///   - request: Request to send to SetStakeItemLimit.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setStakeItemLimit(
    _ request: Stafihub_Stafihub_Mining_MsgSetStakeItemLimit,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgSetStakeItemLimit, Stafihub_Stafihub_Mining_MsgSetStakeItemLimitResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.setStakeItemLimit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetStakeItemLimitInterceptors() ?? []
    )
  }

  /// this line is used by starport scaffolding # proto/tx/rpc
  ///
  /// - Parameters:
  ///   - request: Request to send to WithdrawRewardToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func withdrawRewardToken(
    _ request: Stafihub_Stafihub_Mining_MsgWithdrawRewardToken,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stafihub_Stafihub_Mining_MsgWithdrawRewardToken, Stafihub_Stafihub_Mining_MsgWithdrawRewardTokenResponse> {
    return self.makeUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.withdrawRewardToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawRewardTokenInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Stafihub_Stafihub_Mining_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Stafihub_Stafihub_Mining_MsgNIOClient")
internal final class Stafihub_Stafihub_Mining_MsgClient: Stafihub_Stafihub_Mining_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Stafihub_Stafihub_Mining_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Stafihub_Stafihub_Mining_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the stafihub.stafihub.mining.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Mining_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Stafihub_Stafihub_Mining_MsgNIOClient: Stafihub_Stafihub_Mining_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stafihub_Stafihub_Mining_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the stafihub.stafihub.mining.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Mining_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stafihub_Stafihub_Mining_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stafihub_Stafihub_Mining_MsgClientInterceptorFactoryProtocol? { get }

  func makeAddStakePoolCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakePool,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddStakePool, Stafihub_Stafihub_Mining_MsgAddStakePoolResponse>

  func makeAddStakeItemCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakeItem,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddStakeItem, Stafihub_Stafihub_Mining_MsgAddStakeItemResponse>

  func makeAddRewardPoolCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddRewardPool,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddRewardPool, Stafihub_Stafihub_Mining_MsgAddRewardPoolResponse>

  func makeStakeCall(
    _ request: Stafihub_Stafihub_Mining_MsgStake,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgStake, Stafihub_Stafihub_Mining_MsgStakeResponse>

  func makeClaimRewardCall(
    _ request: Stafihub_Stafihub_Mining_MsgClaimReward,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgClaimReward, Stafihub_Stafihub_Mining_MsgClaimRewardResponse>

  func makeWithdrawCall(
    _ request: Stafihub_Stafihub_Mining_MsgWithdraw,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgWithdraw, Stafihub_Stafihub_Mining_MsgWithdrawResponse>

  func makeUpdateStakeItemCall(
    _ request: Stafihub_Stafihub_Mining_MsgUpdateStakeItem,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgUpdateStakeItem, Stafihub_Stafihub_Mining_MsgUpdateStakeItemResponse>

  func makeAddMiningProviderCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddMiningProvider,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddMiningProvider, Stafihub_Stafihub_Mining_MsgAddMiningProviderResponse>

  func makeRmMiningProviderCall(
    _ request: Stafihub_Stafihub_Mining_MsgRmMiningProvider,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgRmMiningProvider, Stafihub_Stafihub_Mining_MsgRmMiningProviderResponse>

  func makeAddRewardTokenCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddRewardToken,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddRewardToken, Stafihub_Stafihub_Mining_MsgAddRewardTokenResponse>

  func makeSetMaxRewardPoolNumberCall(
    _ request: Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber, Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumberResponse>

  func makeUpdateRewardPoolCall(
    _ request: Stafihub_Stafihub_Mining_MsgUpdateRewardPool,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgUpdateRewardPool, Stafihub_Stafihub_Mining_MsgUpdateRewardPoolResponse>

  func makeToggleProviderSwitchCall(
    _ request: Stafihub_Stafihub_Mining_MsgToggleProviderSwitch,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgToggleProviderSwitch, Stafihub_Stafihub_Mining_MsgToggleProviderSwitchResponse>

  func makeSetMaxStakeItemNumberCall(
    _ request: Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber, Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumberResponse>

  func makeAddRewardCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddReward,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddReward, Stafihub_Stafihub_Mining_MsgAddRewardResponse>

  func makeToggleEmergencySwitchCall(
    _ request: Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch, Stafihub_Stafihub_Mining_MsgToggleEmergencySwitchResponse>

  func makeEmergencyWithdrawCall(
    _ request: Stafihub_Stafihub_Mining_MsgEmergencyWithdraw,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgEmergencyWithdraw, Stafihub_Stafihub_Mining_MsgEmergencyWithdrawResponse>

  func makeAddStakeTokenCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakeToken,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddStakeToken, Stafihub_Stafihub_Mining_MsgAddStakeTokenResponse>

  func makeRmRewardTokenCall(
    _ request: Stafihub_Stafihub_Mining_MsgRmRewardToken,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgRmRewardToken, Stafihub_Stafihub_Mining_MsgRmRewardTokenResponse>

  func makeRmStakeTokenCall(
    _ request: Stafihub_Stafihub_Mining_MsgRmStakeToken,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgRmStakeToken, Stafihub_Stafihub_Mining_MsgRmStakeTokenResponse>

  func makeSetStakeItemLimitCall(
    _ request: Stafihub_Stafihub_Mining_MsgSetStakeItemLimit,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgSetStakeItemLimit, Stafihub_Stafihub_Mining_MsgSetStakeItemLimitResponse>

  func makeWithdrawRewardTokenCall(
    _ request: Stafihub_Stafihub_Mining_MsgWithdrawRewardToken,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgWithdrawRewardToken, Stafihub_Stafihub_Mining_MsgWithdrawRewardTokenResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Mining_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stafihub_Stafihub_Mining_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Stafihub_Stafihub_Mining_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeAddStakePoolCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakePool,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddStakePool, Stafihub_Stafihub_Mining_MsgAddStakePoolResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addStakePool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddStakePoolInterceptors() ?? []
    )
  }

  internal func makeAddStakeItemCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakeItem,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddStakeItem, Stafihub_Stafihub_Mining_MsgAddStakeItemResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addStakeItem.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddStakeItemInterceptors() ?? []
    )
  }

  internal func makeAddRewardPoolCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddRewardPool,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddRewardPool, Stafihub_Stafihub_Mining_MsgAddRewardPoolResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addRewardPool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRewardPoolInterceptors() ?? []
    )
  }

  internal func makeStakeCall(
    _ request: Stafihub_Stafihub_Mining_MsgStake,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgStake, Stafihub_Stafihub_Mining_MsgStakeResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.stake.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStakeInterceptors() ?? []
    )
  }

  internal func makeClaimRewardCall(
    _ request: Stafihub_Stafihub_Mining_MsgClaimReward,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgClaimReward, Stafihub_Stafihub_Mining_MsgClaimRewardResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.claimReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClaimRewardInterceptors() ?? []
    )
  }

  internal func makeWithdrawCall(
    _ request: Stafihub_Stafihub_Mining_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgWithdraw, Stafihub_Stafihub_Mining_MsgWithdrawResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.withdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  internal func makeUpdateStakeItemCall(
    _ request: Stafihub_Stafihub_Mining_MsgUpdateStakeItem,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgUpdateStakeItem, Stafihub_Stafihub_Mining_MsgUpdateStakeItemResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.updateStakeItem.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateStakeItemInterceptors() ?? []
    )
  }

  internal func makeAddMiningProviderCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddMiningProvider,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddMiningProvider, Stafihub_Stafihub_Mining_MsgAddMiningProviderResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addMiningProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddMiningProviderInterceptors() ?? []
    )
  }

  internal func makeRmMiningProviderCall(
    _ request: Stafihub_Stafihub_Mining_MsgRmMiningProvider,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgRmMiningProvider, Stafihub_Stafihub_Mining_MsgRmMiningProviderResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.rmMiningProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmMiningProviderInterceptors() ?? []
    )
  }

  internal func makeAddRewardTokenCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddRewardToken,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddRewardToken, Stafihub_Stafihub_Mining_MsgAddRewardTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addRewardToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRewardTokenInterceptors() ?? []
    )
  }

  internal func makeSetMaxRewardPoolNumberCall(
    _ request: Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber, Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumberResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.setMaxRewardPoolNumber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetMaxRewardPoolNumberInterceptors() ?? []
    )
  }

  internal func makeUpdateRewardPoolCall(
    _ request: Stafihub_Stafihub_Mining_MsgUpdateRewardPool,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgUpdateRewardPool, Stafihub_Stafihub_Mining_MsgUpdateRewardPoolResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.updateRewardPool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRewardPoolInterceptors() ?? []
    )
  }

  internal func makeToggleProviderSwitchCall(
    _ request: Stafihub_Stafihub_Mining_MsgToggleProviderSwitch,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgToggleProviderSwitch, Stafihub_Stafihub_Mining_MsgToggleProviderSwitchResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.toggleProviderSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeToggleProviderSwitchInterceptors() ?? []
    )
  }

  internal func makeSetMaxStakeItemNumberCall(
    _ request: Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber, Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumberResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.setMaxStakeItemNumber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetMaxStakeItemNumberInterceptors() ?? []
    )
  }

  internal func makeAddRewardCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddReward,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddReward, Stafihub_Stafihub_Mining_MsgAddRewardResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRewardInterceptors() ?? []
    )
  }

  internal func makeToggleEmergencySwitchCall(
    _ request: Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch, Stafihub_Stafihub_Mining_MsgToggleEmergencySwitchResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.toggleEmergencySwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeToggleEmergencySwitchInterceptors() ?? []
    )
  }

  internal func makeEmergencyWithdrawCall(
    _ request: Stafihub_Stafihub_Mining_MsgEmergencyWithdraw,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgEmergencyWithdraw, Stafihub_Stafihub_Mining_MsgEmergencyWithdrawResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.emergencyWithdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEmergencyWithdrawInterceptors() ?? []
    )
  }

  internal func makeAddStakeTokenCall(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakeToken,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgAddStakeToken, Stafihub_Stafihub_Mining_MsgAddStakeTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addStakeToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddStakeTokenInterceptors() ?? []
    )
  }

  internal func makeRmRewardTokenCall(
    _ request: Stafihub_Stafihub_Mining_MsgRmRewardToken,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgRmRewardToken, Stafihub_Stafihub_Mining_MsgRmRewardTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.rmRewardToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmRewardTokenInterceptors() ?? []
    )
  }

  internal func makeRmStakeTokenCall(
    _ request: Stafihub_Stafihub_Mining_MsgRmStakeToken,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgRmStakeToken, Stafihub_Stafihub_Mining_MsgRmStakeTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.rmStakeToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmStakeTokenInterceptors() ?? []
    )
  }

  internal func makeSetStakeItemLimitCall(
    _ request: Stafihub_Stafihub_Mining_MsgSetStakeItemLimit,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgSetStakeItemLimit, Stafihub_Stafihub_Mining_MsgSetStakeItemLimitResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.setStakeItemLimit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetStakeItemLimitInterceptors() ?? []
    )
  }

  internal func makeWithdrawRewardTokenCall(
    _ request: Stafihub_Stafihub_Mining_MsgWithdrawRewardToken,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stafihub_Stafihub_Mining_MsgWithdrawRewardToken, Stafihub_Stafihub_Mining_MsgWithdrawRewardTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.withdrawRewardToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawRewardTokenInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Mining_MsgAsyncClientProtocol {
  internal func addStakePool(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakePool,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddStakePoolResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addStakePool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddStakePoolInterceptors() ?? []
    )
  }

  internal func addStakeItem(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakeItem,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddStakeItemResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addStakeItem.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddStakeItemInterceptors() ?? []
    )
  }

  internal func addRewardPool(
    _ request: Stafihub_Stafihub_Mining_MsgAddRewardPool,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddRewardPoolResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addRewardPool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRewardPoolInterceptors() ?? []
    )
  }

  internal func stake(
    _ request: Stafihub_Stafihub_Mining_MsgStake,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgStakeResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.stake.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStakeInterceptors() ?? []
    )
  }

  internal func claimReward(
    _ request: Stafihub_Stafihub_Mining_MsgClaimReward,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgClaimRewardResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.claimReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClaimRewardInterceptors() ?? []
    )
  }

  internal func withdraw(
    _ request: Stafihub_Stafihub_Mining_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgWithdrawResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.withdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  internal func updateStakeItem(
    _ request: Stafihub_Stafihub_Mining_MsgUpdateStakeItem,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgUpdateStakeItemResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.updateStakeItem.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateStakeItemInterceptors() ?? []
    )
  }

  internal func addMiningProvider(
    _ request: Stafihub_Stafihub_Mining_MsgAddMiningProvider,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddMiningProviderResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addMiningProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddMiningProviderInterceptors() ?? []
    )
  }

  internal func rmMiningProvider(
    _ request: Stafihub_Stafihub_Mining_MsgRmMiningProvider,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgRmMiningProviderResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.rmMiningProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmMiningProviderInterceptors() ?? []
    )
  }

  internal func addRewardToken(
    _ request: Stafihub_Stafihub_Mining_MsgAddRewardToken,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddRewardTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addRewardToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRewardTokenInterceptors() ?? []
    )
  }

  internal func setMaxRewardPoolNumber(
    _ request: Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumberResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.setMaxRewardPoolNumber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetMaxRewardPoolNumberInterceptors() ?? []
    )
  }

  internal func updateRewardPool(
    _ request: Stafihub_Stafihub_Mining_MsgUpdateRewardPool,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgUpdateRewardPoolResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.updateRewardPool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRewardPoolInterceptors() ?? []
    )
  }

  internal func toggleProviderSwitch(
    _ request: Stafihub_Stafihub_Mining_MsgToggleProviderSwitch,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgToggleProviderSwitchResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.toggleProviderSwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeToggleProviderSwitchInterceptors() ?? []
    )
  }

  internal func setMaxStakeItemNumber(
    _ request: Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumberResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.setMaxStakeItemNumber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetMaxStakeItemNumberInterceptors() ?? []
    )
  }

  internal func addReward(
    _ request: Stafihub_Stafihub_Mining_MsgAddReward,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddRewardResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRewardInterceptors() ?? []
    )
  }

  internal func toggleEmergencySwitch(
    _ request: Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgToggleEmergencySwitchResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.toggleEmergencySwitch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeToggleEmergencySwitchInterceptors() ?? []
    )
  }

  internal func emergencyWithdraw(
    _ request: Stafihub_Stafihub_Mining_MsgEmergencyWithdraw,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgEmergencyWithdrawResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.emergencyWithdraw.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEmergencyWithdrawInterceptors() ?? []
    )
  }

  internal func addStakeToken(
    _ request: Stafihub_Stafihub_Mining_MsgAddStakeToken,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddStakeTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addStakeToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddStakeTokenInterceptors() ?? []
    )
  }

  internal func rmRewardToken(
    _ request: Stafihub_Stafihub_Mining_MsgRmRewardToken,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgRmRewardTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.rmRewardToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmRewardTokenInterceptors() ?? []
    )
  }

  internal func rmStakeToken(
    _ request: Stafihub_Stafihub_Mining_MsgRmStakeToken,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgRmStakeTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.rmStakeToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRmStakeTokenInterceptors() ?? []
    )
  }

  internal func setStakeItemLimit(
    _ request: Stafihub_Stafihub_Mining_MsgSetStakeItemLimit,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgSetStakeItemLimitResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.setStakeItemLimit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetStakeItemLimitInterceptors() ?? []
    )
  }

  internal func withdrawRewardToken(
    _ request: Stafihub_Stafihub_Mining_MsgWithdrawRewardToken,
    callOptions: CallOptions? = nil
  ) async throws -> Stafihub_Stafihub_Mining_MsgWithdrawRewardTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.withdrawRewardToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawRewardTokenInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Stafihub_Stafihub_Mining_MsgAsyncClient: Stafihub_Stafihub_Mining_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stafihub_Stafihub_Mining_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stafihub_Stafihub_Mining_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Stafihub_Stafihub_Mining_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'addStakePool'.
  func makeAddStakePoolInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgAddStakePool, Stafihub_Stafihub_Mining_MsgAddStakePoolResponse>]

  /// - Returns: Interceptors to use when invoking 'addStakeItem'.
  func makeAddStakeItemInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgAddStakeItem, Stafihub_Stafihub_Mining_MsgAddStakeItemResponse>]

  /// - Returns: Interceptors to use when invoking 'addRewardPool'.
  func makeAddRewardPoolInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgAddRewardPool, Stafihub_Stafihub_Mining_MsgAddRewardPoolResponse>]

  /// - Returns: Interceptors to use when invoking 'stake'.
  func makeStakeInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgStake, Stafihub_Stafihub_Mining_MsgStakeResponse>]

  /// - Returns: Interceptors to use when invoking 'claimReward'.
  func makeClaimRewardInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgClaimReward, Stafihub_Stafihub_Mining_MsgClaimRewardResponse>]

  /// - Returns: Interceptors to use when invoking 'withdraw'.
  func makeWithdrawInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgWithdraw, Stafihub_Stafihub_Mining_MsgWithdrawResponse>]

  /// - Returns: Interceptors to use when invoking 'updateStakeItem'.
  func makeUpdateStakeItemInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgUpdateStakeItem, Stafihub_Stafihub_Mining_MsgUpdateStakeItemResponse>]

  /// - Returns: Interceptors to use when invoking 'addMiningProvider'.
  func makeAddMiningProviderInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgAddMiningProvider, Stafihub_Stafihub_Mining_MsgAddMiningProviderResponse>]

  /// - Returns: Interceptors to use when invoking 'rmMiningProvider'.
  func makeRmMiningProviderInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgRmMiningProvider, Stafihub_Stafihub_Mining_MsgRmMiningProviderResponse>]

  /// - Returns: Interceptors to use when invoking 'addRewardToken'.
  func makeAddRewardTokenInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgAddRewardToken, Stafihub_Stafihub_Mining_MsgAddRewardTokenResponse>]

  /// - Returns: Interceptors to use when invoking 'setMaxRewardPoolNumber'.
  func makeSetMaxRewardPoolNumberInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber, Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumberResponse>]

  /// - Returns: Interceptors to use when invoking 'updateRewardPool'.
  func makeUpdateRewardPoolInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgUpdateRewardPool, Stafihub_Stafihub_Mining_MsgUpdateRewardPoolResponse>]

  /// - Returns: Interceptors to use when invoking 'toggleProviderSwitch'.
  func makeToggleProviderSwitchInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgToggleProviderSwitch, Stafihub_Stafihub_Mining_MsgToggleProviderSwitchResponse>]

  /// - Returns: Interceptors to use when invoking 'setMaxStakeItemNumber'.
  func makeSetMaxStakeItemNumberInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber, Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumberResponse>]

  /// - Returns: Interceptors to use when invoking 'addReward'.
  func makeAddRewardInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgAddReward, Stafihub_Stafihub_Mining_MsgAddRewardResponse>]

  /// - Returns: Interceptors to use when invoking 'toggleEmergencySwitch'.
  func makeToggleEmergencySwitchInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch, Stafihub_Stafihub_Mining_MsgToggleEmergencySwitchResponse>]

  /// - Returns: Interceptors to use when invoking 'emergencyWithdraw'.
  func makeEmergencyWithdrawInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgEmergencyWithdraw, Stafihub_Stafihub_Mining_MsgEmergencyWithdrawResponse>]

  /// - Returns: Interceptors to use when invoking 'addStakeToken'.
  func makeAddStakeTokenInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgAddStakeToken, Stafihub_Stafihub_Mining_MsgAddStakeTokenResponse>]

  /// - Returns: Interceptors to use when invoking 'rmRewardToken'.
  func makeRmRewardTokenInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgRmRewardToken, Stafihub_Stafihub_Mining_MsgRmRewardTokenResponse>]

  /// - Returns: Interceptors to use when invoking 'rmStakeToken'.
  func makeRmStakeTokenInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgRmStakeToken, Stafihub_Stafihub_Mining_MsgRmStakeTokenResponse>]

  /// - Returns: Interceptors to use when invoking 'setStakeItemLimit'.
  func makeSetStakeItemLimitInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgSetStakeItemLimit, Stafihub_Stafihub_Mining_MsgSetStakeItemLimitResponse>]

  /// - Returns: Interceptors to use when invoking 'withdrawRewardToken'.
  func makeWithdrawRewardTokenInterceptors() -> [ClientInterceptor<Stafihub_Stafihub_Mining_MsgWithdrawRewardToken, Stafihub_Stafihub_Mining_MsgWithdrawRewardTokenResponse>]
}

internal enum Stafihub_Stafihub_Mining_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "stafihub.stafihub.mining.Msg",
    methods: [
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addStakePool,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addStakeItem,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addRewardPool,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.stake,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.claimReward,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.withdraw,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.updateStakeItem,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addMiningProvider,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.rmMiningProvider,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addRewardToken,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.setMaxRewardPoolNumber,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.updateRewardPool,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.toggleProviderSwitch,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.setMaxStakeItemNumber,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addReward,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.toggleEmergencySwitch,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.emergencyWithdraw,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.addStakeToken,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.rmRewardToken,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.rmStakeToken,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.setStakeItemLimit,
      Stafihub_Stafihub_Mining_MsgClientMetadata.Methods.withdrawRewardToken,
    ]
  )

  internal enum Methods {
    internal static let addStakePool = GRPCMethodDescriptor(
      name: "AddStakePool",
      path: "/stafihub.stafihub.mining.Msg/AddStakePool",
      type: GRPCCallType.unary
    )

    internal static let addStakeItem = GRPCMethodDescriptor(
      name: "AddStakeItem",
      path: "/stafihub.stafihub.mining.Msg/AddStakeItem",
      type: GRPCCallType.unary
    )

    internal static let addRewardPool = GRPCMethodDescriptor(
      name: "AddRewardPool",
      path: "/stafihub.stafihub.mining.Msg/AddRewardPool",
      type: GRPCCallType.unary
    )

    internal static let stake = GRPCMethodDescriptor(
      name: "Stake",
      path: "/stafihub.stafihub.mining.Msg/Stake",
      type: GRPCCallType.unary
    )

    internal static let claimReward = GRPCMethodDescriptor(
      name: "ClaimReward",
      path: "/stafihub.stafihub.mining.Msg/ClaimReward",
      type: GRPCCallType.unary
    )

    internal static let withdraw = GRPCMethodDescriptor(
      name: "Withdraw",
      path: "/stafihub.stafihub.mining.Msg/Withdraw",
      type: GRPCCallType.unary
    )

    internal static let updateStakeItem = GRPCMethodDescriptor(
      name: "UpdateStakeItem",
      path: "/stafihub.stafihub.mining.Msg/UpdateStakeItem",
      type: GRPCCallType.unary
    )

    internal static let addMiningProvider = GRPCMethodDescriptor(
      name: "AddMiningProvider",
      path: "/stafihub.stafihub.mining.Msg/AddMiningProvider",
      type: GRPCCallType.unary
    )

    internal static let rmMiningProvider = GRPCMethodDescriptor(
      name: "RmMiningProvider",
      path: "/stafihub.stafihub.mining.Msg/RmMiningProvider",
      type: GRPCCallType.unary
    )

    internal static let addRewardToken = GRPCMethodDescriptor(
      name: "AddRewardToken",
      path: "/stafihub.stafihub.mining.Msg/AddRewardToken",
      type: GRPCCallType.unary
    )

    internal static let setMaxRewardPoolNumber = GRPCMethodDescriptor(
      name: "SetMaxRewardPoolNumber",
      path: "/stafihub.stafihub.mining.Msg/SetMaxRewardPoolNumber",
      type: GRPCCallType.unary
    )

    internal static let updateRewardPool = GRPCMethodDescriptor(
      name: "UpdateRewardPool",
      path: "/stafihub.stafihub.mining.Msg/UpdateRewardPool",
      type: GRPCCallType.unary
    )

    internal static let toggleProviderSwitch = GRPCMethodDescriptor(
      name: "ToggleProviderSwitch",
      path: "/stafihub.stafihub.mining.Msg/ToggleProviderSwitch",
      type: GRPCCallType.unary
    )

    internal static let setMaxStakeItemNumber = GRPCMethodDescriptor(
      name: "SetMaxStakeItemNumber",
      path: "/stafihub.stafihub.mining.Msg/SetMaxStakeItemNumber",
      type: GRPCCallType.unary
    )

    internal static let addReward = GRPCMethodDescriptor(
      name: "AddReward",
      path: "/stafihub.stafihub.mining.Msg/AddReward",
      type: GRPCCallType.unary
    )

    internal static let toggleEmergencySwitch = GRPCMethodDescriptor(
      name: "ToggleEmergencySwitch",
      path: "/stafihub.stafihub.mining.Msg/ToggleEmergencySwitch",
      type: GRPCCallType.unary
    )

    internal static let emergencyWithdraw = GRPCMethodDescriptor(
      name: "EmergencyWithdraw",
      path: "/stafihub.stafihub.mining.Msg/EmergencyWithdraw",
      type: GRPCCallType.unary
    )

    internal static let addStakeToken = GRPCMethodDescriptor(
      name: "AddStakeToken",
      path: "/stafihub.stafihub.mining.Msg/AddStakeToken",
      type: GRPCCallType.unary
    )

    internal static let rmRewardToken = GRPCMethodDescriptor(
      name: "RmRewardToken",
      path: "/stafihub.stafihub.mining.Msg/RmRewardToken",
      type: GRPCCallType.unary
    )

    internal static let rmStakeToken = GRPCMethodDescriptor(
      name: "RmStakeToken",
      path: "/stafihub.stafihub.mining.Msg/RmStakeToken",
      type: GRPCCallType.unary
    )

    internal static let setStakeItemLimit = GRPCMethodDescriptor(
      name: "SetStakeItemLimit",
      path: "/stafihub.stafihub.mining.Msg/SetStakeItemLimit",
      type: GRPCCallType.unary
    )

    internal static let withdrawRewardToken = GRPCMethodDescriptor(
      name: "WithdrawRewardToken",
      path: "/stafihub.stafihub.mining.Msg/WithdrawRewardToken",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Stafihub_Stafihub_Mining_MsgProvider: CallHandlerProvider {
  var interceptors: Stafihub_Stafihub_Mining_MsgServerInterceptorFactoryProtocol? { get }

  func addStakePool(request: Stafihub_Stafihub_Mining_MsgAddStakePool, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgAddStakePoolResponse>

  func addStakeItem(request: Stafihub_Stafihub_Mining_MsgAddStakeItem, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgAddStakeItemResponse>

  func addRewardPool(request: Stafihub_Stafihub_Mining_MsgAddRewardPool, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgAddRewardPoolResponse>

  func stake(request: Stafihub_Stafihub_Mining_MsgStake, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgStakeResponse>

  func claimReward(request: Stafihub_Stafihub_Mining_MsgClaimReward, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgClaimRewardResponse>

  func withdraw(request: Stafihub_Stafihub_Mining_MsgWithdraw, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgWithdrawResponse>

  func updateStakeItem(request: Stafihub_Stafihub_Mining_MsgUpdateStakeItem, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgUpdateStakeItemResponse>

  func addMiningProvider(request: Stafihub_Stafihub_Mining_MsgAddMiningProvider, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgAddMiningProviderResponse>

  func rmMiningProvider(request: Stafihub_Stafihub_Mining_MsgRmMiningProvider, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgRmMiningProviderResponse>

  func addRewardToken(request: Stafihub_Stafihub_Mining_MsgAddRewardToken, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgAddRewardTokenResponse>

  func setMaxRewardPoolNumber(request: Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumberResponse>

  func updateRewardPool(request: Stafihub_Stafihub_Mining_MsgUpdateRewardPool, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgUpdateRewardPoolResponse>

  func toggleProviderSwitch(request: Stafihub_Stafihub_Mining_MsgToggleProviderSwitch, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgToggleProviderSwitchResponse>

  func setMaxStakeItemNumber(request: Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumberResponse>

  func addReward(request: Stafihub_Stafihub_Mining_MsgAddReward, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgAddRewardResponse>

  func toggleEmergencySwitch(request: Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgToggleEmergencySwitchResponse>

  func emergencyWithdraw(request: Stafihub_Stafihub_Mining_MsgEmergencyWithdraw, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgEmergencyWithdrawResponse>

  func addStakeToken(request: Stafihub_Stafihub_Mining_MsgAddStakeToken, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgAddStakeTokenResponse>

  func rmRewardToken(request: Stafihub_Stafihub_Mining_MsgRmRewardToken, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgRmRewardTokenResponse>

  func rmStakeToken(request: Stafihub_Stafihub_Mining_MsgRmStakeToken, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgRmStakeTokenResponse>

  func setStakeItemLimit(request: Stafihub_Stafihub_Mining_MsgSetStakeItemLimit, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgSetStakeItemLimitResponse>

  /// this line is used by starport scaffolding # proto/tx/rpc
  func withdrawRewardToken(request: Stafihub_Stafihub_Mining_MsgWithdrawRewardToken, context: StatusOnlyCallContext) -> EventLoopFuture<Stafihub_Stafihub_Mining_MsgWithdrawRewardTokenResponse>
}

extension Stafihub_Stafihub_Mining_MsgProvider {
  internal var serviceName: Substring {
    return Stafihub_Stafihub_Mining_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "AddStakePool":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddStakePool>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddStakePoolResponse>(),
        interceptors: self.interceptors?.makeAddStakePoolInterceptors() ?? [],
        userFunction: self.addStakePool(request:context:)
      )

    case "AddStakeItem":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddStakeItem>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddStakeItemResponse>(),
        interceptors: self.interceptors?.makeAddStakeItemInterceptors() ?? [],
        userFunction: self.addStakeItem(request:context:)
      )

    case "AddRewardPool":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddRewardPool>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddRewardPoolResponse>(),
        interceptors: self.interceptors?.makeAddRewardPoolInterceptors() ?? [],
        userFunction: self.addRewardPool(request:context:)
      )

    case "Stake":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgStake>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgStakeResponse>(),
        interceptors: self.interceptors?.makeStakeInterceptors() ?? [],
        userFunction: self.stake(request:context:)
      )

    case "ClaimReward":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgClaimReward>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgClaimRewardResponse>(),
        interceptors: self.interceptors?.makeClaimRewardInterceptors() ?? [],
        userFunction: self.claimReward(request:context:)
      )

    case "Withdraw":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgWithdraw>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgWithdrawResponse>(),
        interceptors: self.interceptors?.makeWithdrawInterceptors() ?? [],
        userFunction: self.withdraw(request:context:)
      )

    case "UpdateStakeItem":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgUpdateStakeItem>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgUpdateStakeItemResponse>(),
        interceptors: self.interceptors?.makeUpdateStakeItemInterceptors() ?? [],
        userFunction: self.updateStakeItem(request:context:)
      )

    case "AddMiningProvider":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddMiningProvider>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddMiningProviderResponse>(),
        interceptors: self.interceptors?.makeAddMiningProviderInterceptors() ?? [],
        userFunction: self.addMiningProvider(request:context:)
      )

    case "RmMiningProvider":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgRmMiningProvider>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgRmMiningProviderResponse>(),
        interceptors: self.interceptors?.makeRmMiningProviderInterceptors() ?? [],
        userFunction: self.rmMiningProvider(request:context:)
      )

    case "AddRewardToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddRewardToken>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddRewardTokenResponse>(),
        interceptors: self.interceptors?.makeAddRewardTokenInterceptors() ?? [],
        userFunction: self.addRewardToken(request:context:)
      )

    case "SetMaxRewardPoolNumber":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumberResponse>(),
        interceptors: self.interceptors?.makeSetMaxRewardPoolNumberInterceptors() ?? [],
        userFunction: self.setMaxRewardPoolNumber(request:context:)
      )

    case "UpdateRewardPool":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgUpdateRewardPool>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgUpdateRewardPoolResponse>(),
        interceptors: self.interceptors?.makeUpdateRewardPoolInterceptors() ?? [],
        userFunction: self.updateRewardPool(request:context:)
      )

    case "ToggleProviderSwitch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgToggleProviderSwitch>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgToggleProviderSwitchResponse>(),
        interceptors: self.interceptors?.makeToggleProviderSwitchInterceptors() ?? [],
        userFunction: self.toggleProviderSwitch(request:context:)
      )

    case "SetMaxStakeItemNumber":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumberResponse>(),
        interceptors: self.interceptors?.makeSetMaxStakeItemNumberInterceptors() ?? [],
        userFunction: self.setMaxStakeItemNumber(request:context:)
      )

    case "AddReward":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddReward>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddRewardResponse>(),
        interceptors: self.interceptors?.makeAddRewardInterceptors() ?? [],
        userFunction: self.addReward(request:context:)
      )

    case "ToggleEmergencySwitch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgToggleEmergencySwitchResponse>(),
        interceptors: self.interceptors?.makeToggleEmergencySwitchInterceptors() ?? [],
        userFunction: self.toggleEmergencySwitch(request:context:)
      )

    case "EmergencyWithdraw":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgEmergencyWithdraw>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgEmergencyWithdrawResponse>(),
        interceptors: self.interceptors?.makeEmergencyWithdrawInterceptors() ?? [],
        userFunction: self.emergencyWithdraw(request:context:)
      )

    case "AddStakeToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddStakeToken>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddStakeTokenResponse>(),
        interceptors: self.interceptors?.makeAddStakeTokenInterceptors() ?? [],
        userFunction: self.addStakeToken(request:context:)
      )

    case "RmRewardToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgRmRewardToken>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgRmRewardTokenResponse>(),
        interceptors: self.interceptors?.makeRmRewardTokenInterceptors() ?? [],
        userFunction: self.rmRewardToken(request:context:)
      )

    case "RmStakeToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgRmStakeToken>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgRmStakeTokenResponse>(),
        interceptors: self.interceptors?.makeRmStakeTokenInterceptors() ?? [],
        userFunction: self.rmStakeToken(request:context:)
      )

    case "SetStakeItemLimit":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgSetStakeItemLimit>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgSetStakeItemLimitResponse>(),
        interceptors: self.interceptors?.makeSetStakeItemLimitInterceptors() ?? [],
        userFunction: self.setStakeItemLimit(request:context:)
      )

    case "WithdrawRewardToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgWithdrawRewardToken>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgWithdrawRewardTokenResponse>(),
        interceptors: self.interceptors?.makeWithdrawRewardTokenInterceptors() ?? [],
        userFunction: self.withdrawRewardToken(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stafihub_Stafihub_Mining_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stafihub_Stafihub_Mining_MsgServerInterceptorFactoryProtocol? { get }

  @Sendable func addStakePool(
    request: Stafihub_Stafihub_Mining_MsgAddStakePool,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddStakePoolResponse

  @Sendable func addStakeItem(
    request: Stafihub_Stafihub_Mining_MsgAddStakeItem,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddStakeItemResponse

  @Sendable func addRewardPool(
    request: Stafihub_Stafihub_Mining_MsgAddRewardPool,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddRewardPoolResponse

  @Sendable func stake(
    request: Stafihub_Stafihub_Mining_MsgStake,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgStakeResponse

  @Sendable func claimReward(
    request: Stafihub_Stafihub_Mining_MsgClaimReward,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgClaimRewardResponse

  @Sendable func withdraw(
    request: Stafihub_Stafihub_Mining_MsgWithdraw,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgWithdrawResponse

  @Sendable func updateStakeItem(
    request: Stafihub_Stafihub_Mining_MsgUpdateStakeItem,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgUpdateStakeItemResponse

  @Sendable func addMiningProvider(
    request: Stafihub_Stafihub_Mining_MsgAddMiningProvider,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddMiningProviderResponse

  @Sendable func rmMiningProvider(
    request: Stafihub_Stafihub_Mining_MsgRmMiningProvider,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgRmMiningProviderResponse

  @Sendable func addRewardToken(
    request: Stafihub_Stafihub_Mining_MsgAddRewardToken,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddRewardTokenResponse

  @Sendable func setMaxRewardPoolNumber(
    request: Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumberResponse

  @Sendable func updateRewardPool(
    request: Stafihub_Stafihub_Mining_MsgUpdateRewardPool,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgUpdateRewardPoolResponse

  @Sendable func toggleProviderSwitch(
    request: Stafihub_Stafihub_Mining_MsgToggleProviderSwitch,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgToggleProviderSwitchResponse

  @Sendable func setMaxStakeItemNumber(
    request: Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumberResponse

  @Sendable func addReward(
    request: Stafihub_Stafihub_Mining_MsgAddReward,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddRewardResponse

  @Sendable func toggleEmergencySwitch(
    request: Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgToggleEmergencySwitchResponse

  @Sendable func emergencyWithdraw(
    request: Stafihub_Stafihub_Mining_MsgEmergencyWithdraw,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgEmergencyWithdrawResponse

  @Sendable func addStakeToken(
    request: Stafihub_Stafihub_Mining_MsgAddStakeToken,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgAddStakeTokenResponse

  @Sendable func rmRewardToken(
    request: Stafihub_Stafihub_Mining_MsgRmRewardToken,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgRmRewardTokenResponse

  @Sendable func rmStakeToken(
    request: Stafihub_Stafihub_Mining_MsgRmStakeToken,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgRmStakeTokenResponse

  @Sendable func setStakeItemLimit(
    request: Stafihub_Stafihub_Mining_MsgSetStakeItemLimit,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgSetStakeItemLimitResponse

  /// this line is used by starport scaffolding # proto/tx/rpc
  @Sendable func withdrawRewardToken(
    request: Stafihub_Stafihub_Mining_MsgWithdrawRewardToken,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stafihub_Stafihub_Mining_MsgWithdrawRewardTokenResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stafihub_Stafihub_Mining_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stafihub_Stafihub_Mining_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Stafihub_Stafihub_Mining_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Stafihub_Stafihub_Mining_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "AddStakePool":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddStakePool>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddStakePoolResponse>(),
        interceptors: self.interceptors?.makeAddStakePoolInterceptors() ?? [],
        wrapping: self.addStakePool(request:context:)
      )

    case "AddStakeItem":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddStakeItem>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddStakeItemResponse>(),
        interceptors: self.interceptors?.makeAddStakeItemInterceptors() ?? [],
        wrapping: self.addStakeItem(request:context:)
      )

    case "AddRewardPool":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddRewardPool>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddRewardPoolResponse>(),
        interceptors: self.interceptors?.makeAddRewardPoolInterceptors() ?? [],
        wrapping: self.addRewardPool(request:context:)
      )

    case "Stake":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgStake>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgStakeResponse>(),
        interceptors: self.interceptors?.makeStakeInterceptors() ?? [],
        wrapping: self.stake(request:context:)
      )

    case "ClaimReward":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgClaimReward>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgClaimRewardResponse>(),
        interceptors: self.interceptors?.makeClaimRewardInterceptors() ?? [],
        wrapping: self.claimReward(request:context:)
      )

    case "Withdraw":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgWithdraw>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgWithdrawResponse>(),
        interceptors: self.interceptors?.makeWithdrawInterceptors() ?? [],
        wrapping: self.withdraw(request:context:)
      )

    case "UpdateStakeItem":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgUpdateStakeItem>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgUpdateStakeItemResponse>(),
        interceptors: self.interceptors?.makeUpdateStakeItemInterceptors() ?? [],
        wrapping: self.updateStakeItem(request:context:)
      )

    case "AddMiningProvider":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddMiningProvider>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddMiningProviderResponse>(),
        interceptors: self.interceptors?.makeAddMiningProviderInterceptors() ?? [],
        wrapping: self.addMiningProvider(request:context:)
      )

    case "RmMiningProvider":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgRmMiningProvider>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgRmMiningProviderResponse>(),
        interceptors: self.interceptors?.makeRmMiningProviderInterceptors() ?? [],
        wrapping: self.rmMiningProvider(request:context:)
      )

    case "AddRewardToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddRewardToken>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddRewardTokenResponse>(),
        interceptors: self.interceptors?.makeAddRewardTokenInterceptors() ?? [],
        wrapping: self.addRewardToken(request:context:)
      )

    case "SetMaxRewardPoolNumber":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumberResponse>(),
        interceptors: self.interceptors?.makeSetMaxRewardPoolNumberInterceptors() ?? [],
        wrapping: self.setMaxRewardPoolNumber(request:context:)
      )

    case "UpdateRewardPool":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgUpdateRewardPool>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgUpdateRewardPoolResponse>(),
        interceptors: self.interceptors?.makeUpdateRewardPoolInterceptors() ?? [],
        wrapping: self.updateRewardPool(request:context:)
      )

    case "ToggleProviderSwitch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgToggleProviderSwitch>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgToggleProviderSwitchResponse>(),
        interceptors: self.interceptors?.makeToggleProviderSwitchInterceptors() ?? [],
        wrapping: self.toggleProviderSwitch(request:context:)
      )

    case "SetMaxStakeItemNumber":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumberResponse>(),
        interceptors: self.interceptors?.makeSetMaxStakeItemNumberInterceptors() ?? [],
        wrapping: self.setMaxStakeItemNumber(request:context:)
      )

    case "AddReward":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddReward>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddRewardResponse>(),
        interceptors: self.interceptors?.makeAddRewardInterceptors() ?? [],
        wrapping: self.addReward(request:context:)
      )

    case "ToggleEmergencySwitch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgToggleEmergencySwitchResponse>(),
        interceptors: self.interceptors?.makeToggleEmergencySwitchInterceptors() ?? [],
        wrapping: self.toggleEmergencySwitch(request:context:)
      )

    case "EmergencyWithdraw":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgEmergencyWithdraw>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgEmergencyWithdrawResponse>(),
        interceptors: self.interceptors?.makeEmergencyWithdrawInterceptors() ?? [],
        wrapping: self.emergencyWithdraw(request:context:)
      )

    case "AddStakeToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgAddStakeToken>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgAddStakeTokenResponse>(),
        interceptors: self.interceptors?.makeAddStakeTokenInterceptors() ?? [],
        wrapping: self.addStakeToken(request:context:)
      )

    case "RmRewardToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgRmRewardToken>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgRmRewardTokenResponse>(),
        interceptors: self.interceptors?.makeRmRewardTokenInterceptors() ?? [],
        wrapping: self.rmRewardToken(request:context:)
      )

    case "RmStakeToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgRmStakeToken>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgRmStakeTokenResponse>(),
        interceptors: self.interceptors?.makeRmStakeTokenInterceptors() ?? [],
        wrapping: self.rmStakeToken(request:context:)
      )

    case "SetStakeItemLimit":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgSetStakeItemLimit>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgSetStakeItemLimitResponse>(),
        interceptors: self.interceptors?.makeSetStakeItemLimitInterceptors() ?? [],
        wrapping: self.setStakeItemLimit(request:context:)
      )

    case "WithdrawRewardToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stafihub_Stafihub_Mining_MsgWithdrawRewardToken>(),
        responseSerializer: ProtobufSerializer<Stafihub_Stafihub_Mining_MsgWithdrawRewardTokenResponse>(),
        interceptors: self.interceptors?.makeWithdrawRewardTokenInterceptors() ?? [],
        wrapping: self.withdrawRewardToken(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Stafihub_Stafihub_Mining_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'addStakePool'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddStakePoolInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgAddStakePool, Stafihub_Stafihub_Mining_MsgAddStakePoolResponse>]

  /// - Returns: Interceptors to use when handling 'addStakeItem'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddStakeItemInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgAddStakeItem, Stafihub_Stafihub_Mining_MsgAddStakeItemResponse>]

  /// - Returns: Interceptors to use when handling 'addRewardPool'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddRewardPoolInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgAddRewardPool, Stafihub_Stafihub_Mining_MsgAddRewardPoolResponse>]

  /// - Returns: Interceptors to use when handling 'stake'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeStakeInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgStake, Stafihub_Stafihub_Mining_MsgStakeResponse>]

  /// - Returns: Interceptors to use when handling 'claimReward'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeClaimRewardInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgClaimReward, Stafihub_Stafihub_Mining_MsgClaimRewardResponse>]

  /// - Returns: Interceptors to use when handling 'withdraw'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWithdrawInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgWithdraw, Stafihub_Stafihub_Mining_MsgWithdrawResponse>]

  /// - Returns: Interceptors to use when handling 'updateStakeItem'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateStakeItemInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgUpdateStakeItem, Stafihub_Stafihub_Mining_MsgUpdateStakeItemResponse>]

  /// - Returns: Interceptors to use when handling 'addMiningProvider'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddMiningProviderInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgAddMiningProvider, Stafihub_Stafihub_Mining_MsgAddMiningProviderResponse>]

  /// - Returns: Interceptors to use when handling 'rmMiningProvider'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRmMiningProviderInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgRmMiningProvider, Stafihub_Stafihub_Mining_MsgRmMiningProviderResponse>]

  /// - Returns: Interceptors to use when handling 'addRewardToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddRewardTokenInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgAddRewardToken, Stafihub_Stafihub_Mining_MsgAddRewardTokenResponse>]

  /// - Returns: Interceptors to use when handling 'setMaxRewardPoolNumber'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetMaxRewardPoolNumberInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumber, Stafihub_Stafihub_Mining_MsgSetMaxRewardPoolNumberResponse>]

  /// - Returns: Interceptors to use when handling 'updateRewardPool'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateRewardPoolInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgUpdateRewardPool, Stafihub_Stafihub_Mining_MsgUpdateRewardPoolResponse>]

  /// - Returns: Interceptors to use when handling 'toggleProviderSwitch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeToggleProviderSwitchInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgToggleProviderSwitch, Stafihub_Stafihub_Mining_MsgToggleProviderSwitchResponse>]

  /// - Returns: Interceptors to use when handling 'setMaxStakeItemNumber'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetMaxStakeItemNumberInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumber, Stafihub_Stafihub_Mining_MsgSetMaxStakeItemNumberResponse>]

  /// - Returns: Interceptors to use when handling 'addReward'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddRewardInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgAddReward, Stafihub_Stafihub_Mining_MsgAddRewardResponse>]

  /// - Returns: Interceptors to use when handling 'toggleEmergencySwitch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeToggleEmergencySwitchInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgToggleEmergencySwitch, Stafihub_Stafihub_Mining_MsgToggleEmergencySwitchResponse>]

  /// - Returns: Interceptors to use when handling 'emergencyWithdraw'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEmergencyWithdrawInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgEmergencyWithdraw, Stafihub_Stafihub_Mining_MsgEmergencyWithdrawResponse>]

  /// - Returns: Interceptors to use when handling 'addStakeToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddStakeTokenInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgAddStakeToken, Stafihub_Stafihub_Mining_MsgAddStakeTokenResponse>]

  /// - Returns: Interceptors to use when handling 'rmRewardToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRmRewardTokenInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgRmRewardToken, Stafihub_Stafihub_Mining_MsgRmRewardTokenResponse>]

  /// - Returns: Interceptors to use when handling 'rmStakeToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRmStakeTokenInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgRmStakeToken, Stafihub_Stafihub_Mining_MsgRmStakeTokenResponse>]

  /// - Returns: Interceptors to use when handling 'setStakeItemLimit'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetStakeItemLimitInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgSetStakeItemLimit, Stafihub_Stafihub_Mining_MsgSetStakeItemLimitResponse>]

  /// - Returns: Interceptors to use when handling 'withdrawRewardToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWithdrawRewardTokenInterceptors() -> [ServerInterceptor<Stafihub_Stafihub_Mining_MsgWithdrawRewardToken, Stafihub_Stafihub_Mining_MsgWithdrawRewardTokenResponse>]
}

internal enum Stafihub_Stafihub_Mining_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "stafihub.stafihub.mining.Msg",
    methods: [
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.addStakePool,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.addStakeItem,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.addRewardPool,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.stake,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.claimReward,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.withdraw,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.updateStakeItem,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.addMiningProvider,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.rmMiningProvider,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.addRewardToken,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.setMaxRewardPoolNumber,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.updateRewardPool,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.toggleProviderSwitch,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.setMaxStakeItemNumber,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.addReward,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.toggleEmergencySwitch,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.emergencyWithdraw,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.addStakeToken,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.rmRewardToken,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.rmStakeToken,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.setStakeItemLimit,
      Stafihub_Stafihub_Mining_MsgServerMetadata.Methods.withdrawRewardToken,
    ]
  )

  internal enum Methods {
    internal static let addStakePool = GRPCMethodDescriptor(
      name: "AddStakePool",
      path: "/stafihub.stafihub.mining.Msg/AddStakePool",
      type: GRPCCallType.unary
    )

    internal static let addStakeItem = GRPCMethodDescriptor(
      name: "AddStakeItem",
      path: "/stafihub.stafihub.mining.Msg/AddStakeItem",
      type: GRPCCallType.unary
    )

    internal static let addRewardPool = GRPCMethodDescriptor(
      name: "AddRewardPool",
      path: "/stafihub.stafihub.mining.Msg/AddRewardPool",
      type: GRPCCallType.unary
    )

    internal static let stake = GRPCMethodDescriptor(
      name: "Stake",
      path: "/stafihub.stafihub.mining.Msg/Stake",
      type: GRPCCallType.unary
    )

    internal static let claimReward = GRPCMethodDescriptor(
      name: "ClaimReward",
      path: "/stafihub.stafihub.mining.Msg/ClaimReward",
      type: GRPCCallType.unary
    )

    internal static let withdraw = GRPCMethodDescriptor(
      name: "Withdraw",
      path: "/stafihub.stafihub.mining.Msg/Withdraw",
      type: GRPCCallType.unary
    )

    internal static let updateStakeItem = GRPCMethodDescriptor(
      name: "UpdateStakeItem",
      path: "/stafihub.stafihub.mining.Msg/UpdateStakeItem",
      type: GRPCCallType.unary
    )

    internal static let addMiningProvider = GRPCMethodDescriptor(
      name: "AddMiningProvider",
      path: "/stafihub.stafihub.mining.Msg/AddMiningProvider",
      type: GRPCCallType.unary
    )

    internal static let rmMiningProvider = GRPCMethodDescriptor(
      name: "RmMiningProvider",
      path: "/stafihub.stafihub.mining.Msg/RmMiningProvider",
      type: GRPCCallType.unary
    )

    internal static let addRewardToken = GRPCMethodDescriptor(
      name: "AddRewardToken",
      path: "/stafihub.stafihub.mining.Msg/AddRewardToken",
      type: GRPCCallType.unary
    )

    internal static let setMaxRewardPoolNumber = GRPCMethodDescriptor(
      name: "SetMaxRewardPoolNumber",
      path: "/stafihub.stafihub.mining.Msg/SetMaxRewardPoolNumber",
      type: GRPCCallType.unary
    )

    internal static let updateRewardPool = GRPCMethodDescriptor(
      name: "UpdateRewardPool",
      path: "/stafihub.stafihub.mining.Msg/UpdateRewardPool",
      type: GRPCCallType.unary
    )

    internal static let toggleProviderSwitch = GRPCMethodDescriptor(
      name: "ToggleProviderSwitch",
      path: "/stafihub.stafihub.mining.Msg/ToggleProviderSwitch",
      type: GRPCCallType.unary
    )

    internal static let setMaxStakeItemNumber = GRPCMethodDescriptor(
      name: "SetMaxStakeItemNumber",
      path: "/stafihub.stafihub.mining.Msg/SetMaxStakeItemNumber",
      type: GRPCCallType.unary
    )

    internal static let addReward = GRPCMethodDescriptor(
      name: "AddReward",
      path: "/stafihub.stafihub.mining.Msg/AddReward",
      type: GRPCCallType.unary
    )

    internal static let toggleEmergencySwitch = GRPCMethodDescriptor(
      name: "ToggleEmergencySwitch",
      path: "/stafihub.stafihub.mining.Msg/ToggleEmergencySwitch",
      type: GRPCCallType.unary
    )

    internal static let emergencyWithdraw = GRPCMethodDescriptor(
      name: "EmergencyWithdraw",
      path: "/stafihub.stafihub.mining.Msg/EmergencyWithdraw",
      type: GRPCCallType.unary
    )

    internal static let addStakeToken = GRPCMethodDescriptor(
      name: "AddStakeToken",
      path: "/stafihub.stafihub.mining.Msg/AddStakeToken",
      type: GRPCCallType.unary
    )

    internal static let rmRewardToken = GRPCMethodDescriptor(
      name: "RmRewardToken",
      path: "/stafihub.stafihub.mining.Msg/RmRewardToken",
      type: GRPCCallType.unary
    )

    internal static let rmStakeToken = GRPCMethodDescriptor(
      name: "RmStakeToken",
      path: "/stafihub.stafihub.mining.Msg/RmStakeToken",
      type: GRPCCallType.unary
    )

    internal static let setStakeItemLimit = GRPCMethodDescriptor(
      name: "SetStakeItemLimit",
      path: "/stafihub.stafihub.mining.Msg/SetStakeItemLimit",
      type: GRPCCallType.unary
    )

    internal static let withdrawRewardToken = GRPCMethodDescriptor(
      name: "WithdrawRewardToken",
      path: "/stafihub.stafihub.mining.Msg/WithdrawRewardToken",
      type: GRPCCallType.unary
    )
  }
}

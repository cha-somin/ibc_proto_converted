//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: ibc/core/client/v1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the ibc/client Msg service.
///
/// Usage: instantiate `Ibc_Core_Client_V1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Ibc_Core_Client_V1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Ibc_Core_Client_V1_MsgClientInterceptorFactoryProtocol? { get }

  func createClient(
    _ request: Ibc_Core_Client_V1_MsgCreateClient,
    callOptions: CallOptions?
  ) -> UnaryCall<Ibc_Core_Client_V1_MsgCreateClient, Ibc_Core_Client_V1_MsgCreateClientResponse>

  func updateClient(
    _ request: Ibc_Core_Client_V1_MsgUpdateClient,
    callOptions: CallOptions?
  ) -> UnaryCall<Ibc_Core_Client_V1_MsgUpdateClient, Ibc_Core_Client_V1_MsgUpdateClientResponse>

  func upgradeClient(
    _ request: Ibc_Core_Client_V1_MsgUpgradeClient,
    callOptions: CallOptions?
  ) -> UnaryCall<Ibc_Core_Client_V1_MsgUpgradeClient, Ibc_Core_Client_V1_MsgUpgradeClientResponse>

  func submitMisbehaviour(
    _ request: Ibc_Core_Client_V1_MsgSubmitMisbehaviour,
    callOptions: CallOptions?
  ) -> UnaryCall<Ibc_Core_Client_V1_MsgSubmitMisbehaviour, Ibc_Core_Client_V1_MsgSubmitMisbehaviourResponse>

  func updateClientParams(
    _ request: Ibc_Core_Client_V1_MsgUpdateParams,
    callOptions: CallOptions?
  ) -> UnaryCall<Ibc_Core_Client_V1_MsgUpdateParams, Ibc_Core_Client_V1_MsgUpdateParamsResponse>
}

extension Ibc_Core_Client_V1_MsgClientProtocol {
  internal var serviceName: String {
    return "ibc.core.client.v1.Msg"
  }

  /// CreateClient defines a rpc handler method for MsgCreateClient.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateClient.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createClient(
    _ request: Ibc_Core_Client_V1_MsgCreateClient,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ibc_Core_Client_V1_MsgCreateClient, Ibc_Core_Client_V1_MsgCreateClientResponse> {
    return self.makeUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.createClient.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateClientInterceptors() ?? []
    )
  }

  /// UpdateClient defines a rpc handler method for MsgUpdateClient.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateClient.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateClient(
    _ request: Ibc_Core_Client_V1_MsgUpdateClient,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ibc_Core_Client_V1_MsgUpdateClient, Ibc_Core_Client_V1_MsgUpdateClientResponse> {
    return self.makeUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.updateClient.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateClientInterceptors() ?? []
    )
  }

  /// UpgradeClient defines a rpc handler method for MsgUpgradeClient.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpgradeClient.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upgradeClient(
    _ request: Ibc_Core_Client_V1_MsgUpgradeClient,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ibc_Core_Client_V1_MsgUpgradeClient, Ibc_Core_Client_V1_MsgUpgradeClientResponse> {
    return self.makeUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.upgradeClient.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpgradeClientInterceptors() ?? []
    )
  }

  /// SubmitMisbehaviour defines a rpc handler method for MsgSubmitMisbehaviour.
  ///
  /// - Parameters:
  ///   - request: Request to send to SubmitMisbehaviour.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func submitMisbehaviour(
    _ request: Ibc_Core_Client_V1_MsgSubmitMisbehaviour,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ibc_Core_Client_V1_MsgSubmitMisbehaviour, Ibc_Core_Client_V1_MsgSubmitMisbehaviourResponse> {
    return self.makeUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.submitMisbehaviour.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubmitMisbehaviourInterceptors() ?? []
    )
  }

  /// UpdateClientParams defines a rpc handler method for MsgUpdateParams.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateClientParams.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateClientParams(
    _ request: Ibc_Core_Client_V1_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ibc_Core_Client_V1_MsgUpdateParams, Ibc_Core_Client_V1_MsgUpdateParamsResponse> {
    return self.makeUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.updateClientParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateClientParamsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Ibc_Core_Client_V1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Ibc_Core_Client_V1_MsgNIOClient")
internal final class Ibc_Core_Client_V1_MsgClient: Ibc_Core_Client_V1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Ibc_Core_Client_V1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Ibc_Core_Client_V1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the ibc.core.client.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ibc_Core_Client_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Ibc_Core_Client_V1_MsgNIOClient: Ibc_Core_Client_V1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Ibc_Core_Client_V1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the ibc.core.client.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ibc_Core_Client_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the ibc/client Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Ibc_Core_Client_V1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Ibc_Core_Client_V1_MsgClientInterceptorFactoryProtocol? { get }

  func makeCreateClientCall(
    _ request: Ibc_Core_Client_V1_MsgCreateClient,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ibc_Core_Client_V1_MsgCreateClient, Ibc_Core_Client_V1_MsgCreateClientResponse>

  func makeUpdateClientCall(
    _ request: Ibc_Core_Client_V1_MsgUpdateClient,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ibc_Core_Client_V1_MsgUpdateClient, Ibc_Core_Client_V1_MsgUpdateClientResponse>

  func makeUpgradeClientCall(
    _ request: Ibc_Core_Client_V1_MsgUpgradeClient,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ibc_Core_Client_V1_MsgUpgradeClient, Ibc_Core_Client_V1_MsgUpgradeClientResponse>

  func makeSubmitMisbehaviourCall(
    _ request: Ibc_Core_Client_V1_MsgSubmitMisbehaviour,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ibc_Core_Client_V1_MsgSubmitMisbehaviour, Ibc_Core_Client_V1_MsgSubmitMisbehaviourResponse>

  func makeUpdateClientParamsCall(
    _ request: Ibc_Core_Client_V1_MsgUpdateParams,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ibc_Core_Client_V1_MsgUpdateParams, Ibc_Core_Client_V1_MsgUpdateParamsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ibc_Core_Client_V1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Ibc_Core_Client_V1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Ibc_Core_Client_V1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeCreateClientCall(
    _ request: Ibc_Core_Client_V1_MsgCreateClient,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ibc_Core_Client_V1_MsgCreateClient, Ibc_Core_Client_V1_MsgCreateClientResponse> {
    return self.makeAsyncUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.createClient.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateClientInterceptors() ?? []
    )
  }

  internal func makeUpdateClientCall(
    _ request: Ibc_Core_Client_V1_MsgUpdateClient,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ibc_Core_Client_V1_MsgUpdateClient, Ibc_Core_Client_V1_MsgUpdateClientResponse> {
    return self.makeAsyncUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.updateClient.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateClientInterceptors() ?? []
    )
  }

  internal func makeUpgradeClientCall(
    _ request: Ibc_Core_Client_V1_MsgUpgradeClient,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ibc_Core_Client_V1_MsgUpgradeClient, Ibc_Core_Client_V1_MsgUpgradeClientResponse> {
    return self.makeAsyncUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.upgradeClient.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpgradeClientInterceptors() ?? []
    )
  }

  internal func makeSubmitMisbehaviourCall(
    _ request: Ibc_Core_Client_V1_MsgSubmitMisbehaviour,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ibc_Core_Client_V1_MsgSubmitMisbehaviour, Ibc_Core_Client_V1_MsgSubmitMisbehaviourResponse> {
    return self.makeAsyncUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.submitMisbehaviour.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubmitMisbehaviourInterceptors() ?? []
    )
  }

  internal func makeUpdateClientParamsCall(
    _ request: Ibc_Core_Client_V1_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ibc_Core_Client_V1_MsgUpdateParams, Ibc_Core_Client_V1_MsgUpdateParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.updateClientParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateClientParamsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ibc_Core_Client_V1_MsgAsyncClientProtocol {
  internal func createClient(
    _ request: Ibc_Core_Client_V1_MsgCreateClient,
    callOptions: CallOptions? = nil
  ) async throws -> Ibc_Core_Client_V1_MsgCreateClientResponse {
    return try await self.performAsyncUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.createClient.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateClientInterceptors() ?? []
    )
  }

  internal func updateClient(
    _ request: Ibc_Core_Client_V1_MsgUpdateClient,
    callOptions: CallOptions? = nil
  ) async throws -> Ibc_Core_Client_V1_MsgUpdateClientResponse {
    return try await self.performAsyncUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.updateClient.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateClientInterceptors() ?? []
    )
  }

  internal func upgradeClient(
    _ request: Ibc_Core_Client_V1_MsgUpgradeClient,
    callOptions: CallOptions? = nil
  ) async throws -> Ibc_Core_Client_V1_MsgUpgradeClientResponse {
    return try await self.performAsyncUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.upgradeClient.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpgradeClientInterceptors() ?? []
    )
  }

  internal func submitMisbehaviour(
    _ request: Ibc_Core_Client_V1_MsgSubmitMisbehaviour,
    callOptions: CallOptions? = nil
  ) async throws -> Ibc_Core_Client_V1_MsgSubmitMisbehaviourResponse {
    return try await self.performAsyncUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.submitMisbehaviour.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubmitMisbehaviourInterceptors() ?? []
    )
  }

  internal func updateClientParams(
    _ request: Ibc_Core_Client_V1_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) async throws -> Ibc_Core_Client_V1_MsgUpdateParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Ibc_Core_Client_V1_MsgClientMetadata.Methods.updateClientParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateClientParamsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Ibc_Core_Client_V1_MsgAsyncClient: Ibc_Core_Client_V1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Ibc_Core_Client_V1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ibc_Core_Client_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Ibc_Core_Client_V1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'createClient'.
  func makeCreateClientInterceptors() -> [ClientInterceptor<Ibc_Core_Client_V1_MsgCreateClient, Ibc_Core_Client_V1_MsgCreateClientResponse>]

  /// - Returns: Interceptors to use when invoking 'updateClient'.
  func makeUpdateClientInterceptors() -> [ClientInterceptor<Ibc_Core_Client_V1_MsgUpdateClient, Ibc_Core_Client_V1_MsgUpdateClientResponse>]

  /// - Returns: Interceptors to use when invoking 'upgradeClient'.
  func makeUpgradeClientInterceptors() -> [ClientInterceptor<Ibc_Core_Client_V1_MsgUpgradeClient, Ibc_Core_Client_V1_MsgUpgradeClientResponse>]

  /// - Returns: Interceptors to use when invoking 'submitMisbehaviour'.
  func makeSubmitMisbehaviourInterceptors() -> [ClientInterceptor<Ibc_Core_Client_V1_MsgSubmitMisbehaviour, Ibc_Core_Client_V1_MsgSubmitMisbehaviourResponse>]

  /// - Returns: Interceptors to use when invoking 'updateClientParams'.
  func makeUpdateClientParamsInterceptors() -> [ClientInterceptor<Ibc_Core_Client_V1_MsgUpdateParams, Ibc_Core_Client_V1_MsgUpdateParamsResponse>]
}

internal enum Ibc_Core_Client_V1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "ibc.core.client.v1.Msg",
    methods: [
      Ibc_Core_Client_V1_MsgClientMetadata.Methods.createClient,
      Ibc_Core_Client_V1_MsgClientMetadata.Methods.updateClient,
      Ibc_Core_Client_V1_MsgClientMetadata.Methods.upgradeClient,
      Ibc_Core_Client_V1_MsgClientMetadata.Methods.submitMisbehaviour,
      Ibc_Core_Client_V1_MsgClientMetadata.Methods.updateClientParams,
    ]
  )

  internal enum Methods {
    internal static let createClient = GRPCMethodDescriptor(
      name: "CreateClient",
      path: "/ibc.core.client.v1.Msg/CreateClient",
      type: GRPCCallType.unary
    )

    internal static let updateClient = GRPCMethodDescriptor(
      name: "UpdateClient",
      path: "/ibc.core.client.v1.Msg/UpdateClient",
      type: GRPCCallType.unary
    )

    internal static let upgradeClient = GRPCMethodDescriptor(
      name: "UpgradeClient",
      path: "/ibc.core.client.v1.Msg/UpgradeClient",
      type: GRPCCallType.unary
    )

    internal static let submitMisbehaviour = GRPCMethodDescriptor(
      name: "SubmitMisbehaviour",
      path: "/ibc.core.client.v1.Msg/SubmitMisbehaviour",
      type: GRPCCallType.unary
    )

    internal static let updateClientParams = GRPCMethodDescriptor(
      name: "UpdateClientParams",
      path: "/ibc.core.client.v1.Msg/UpdateClientParams",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the ibc/client Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Ibc_Core_Client_V1_MsgProvider: CallHandlerProvider {
  var interceptors: Ibc_Core_Client_V1_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateClient defines a rpc handler method for MsgCreateClient.
  func createClient(request: Ibc_Core_Client_V1_MsgCreateClient, context: StatusOnlyCallContext) -> EventLoopFuture<Ibc_Core_Client_V1_MsgCreateClientResponse>

  /// UpdateClient defines a rpc handler method for MsgUpdateClient.
  func updateClient(request: Ibc_Core_Client_V1_MsgUpdateClient, context: StatusOnlyCallContext) -> EventLoopFuture<Ibc_Core_Client_V1_MsgUpdateClientResponse>

  /// UpgradeClient defines a rpc handler method for MsgUpgradeClient.
  func upgradeClient(request: Ibc_Core_Client_V1_MsgUpgradeClient, context: StatusOnlyCallContext) -> EventLoopFuture<Ibc_Core_Client_V1_MsgUpgradeClientResponse>

  /// SubmitMisbehaviour defines a rpc handler method for MsgSubmitMisbehaviour.
  func submitMisbehaviour(request: Ibc_Core_Client_V1_MsgSubmitMisbehaviour, context: StatusOnlyCallContext) -> EventLoopFuture<Ibc_Core_Client_V1_MsgSubmitMisbehaviourResponse>

  /// UpdateClientParams defines a rpc handler method for MsgUpdateParams.
  func updateClientParams(request: Ibc_Core_Client_V1_MsgUpdateParams, context: StatusOnlyCallContext) -> EventLoopFuture<Ibc_Core_Client_V1_MsgUpdateParamsResponse>
}

extension Ibc_Core_Client_V1_MsgProvider {
  internal var serviceName: Substring {
    return Ibc_Core_Client_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateClient":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ibc_Core_Client_V1_MsgCreateClient>(),
        responseSerializer: ProtobufSerializer<Ibc_Core_Client_V1_MsgCreateClientResponse>(),
        interceptors: self.interceptors?.makeCreateClientInterceptors() ?? [],
        userFunction: self.createClient(request:context:)
      )

    case "UpdateClient":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ibc_Core_Client_V1_MsgUpdateClient>(),
        responseSerializer: ProtobufSerializer<Ibc_Core_Client_V1_MsgUpdateClientResponse>(),
        interceptors: self.interceptors?.makeUpdateClientInterceptors() ?? [],
        userFunction: self.updateClient(request:context:)
      )

    case "UpgradeClient":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ibc_Core_Client_V1_MsgUpgradeClient>(),
        responseSerializer: ProtobufSerializer<Ibc_Core_Client_V1_MsgUpgradeClientResponse>(),
        interceptors: self.interceptors?.makeUpgradeClientInterceptors() ?? [],
        userFunction: self.upgradeClient(request:context:)
      )

    case "SubmitMisbehaviour":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ibc_Core_Client_V1_MsgSubmitMisbehaviour>(),
        responseSerializer: ProtobufSerializer<Ibc_Core_Client_V1_MsgSubmitMisbehaviourResponse>(),
        interceptors: self.interceptors?.makeSubmitMisbehaviourInterceptors() ?? [],
        userFunction: self.submitMisbehaviour(request:context:)
      )

    case "UpdateClientParams":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ibc_Core_Client_V1_MsgUpdateParams>(),
        responseSerializer: ProtobufSerializer<Ibc_Core_Client_V1_MsgUpdateParamsResponse>(),
        interceptors: self.interceptors?.makeUpdateClientParamsInterceptors() ?? [],
        userFunction: self.updateClientParams(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the ibc/client Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Ibc_Core_Client_V1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Ibc_Core_Client_V1_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateClient defines a rpc handler method for MsgCreateClient.
  @Sendable func createClient(
    request: Ibc_Core_Client_V1_MsgCreateClient,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ibc_Core_Client_V1_MsgCreateClientResponse

  /// UpdateClient defines a rpc handler method for MsgUpdateClient.
  @Sendable func updateClient(
    request: Ibc_Core_Client_V1_MsgUpdateClient,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ibc_Core_Client_V1_MsgUpdateClientResponse

  /// UpgradeClient defines a rpc handler method for MsgUpgradeClient.
  @Sendable func upgradeClient(
    request: Ibc_Core_Client_V1_MsgUpgradeClient,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ibc_Core_Client_V1_MsgUpgradeClientResponse

  /// SubmitMisbehaviour defines a rpc handler method for MsgSubmitMisbehaviour.
  @Sendable func submitMisbehaviour(
    request: Ibc_Core_Client_V1_MsgSubmitMisbehaviour,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ibc_Core_Client_V1_MsgSubmitMisbehaviourResponse

  /// UpdateClientParams defines a rpc handler method for MsgUpdateParams.
  @Sendable func updateClientParams(
    request: Ibc_Core_Client_V1_MsgUpdateParams,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ibc_Core_Client_V1_MsgUpdateParamsResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ibc_Core_Client_V1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Ibc_Core_Client_V1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Ibc_Core_Client_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Ibc_Core_Client_V1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateClient":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ibc_Core_Client_V1_MsgCreateClient>(),
        responseSerializer: ProtobufSerializer<Ibc_Core_Client_V1_MsgCreateClientResponse>(),
        interceptors: self.interceptors?.makeCreateClientInterceptors() ?? [],
        wrapping: self.createClient(request:context:)
      )

    case "UpdateClient":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ibc_Core_Client_V1_MsgUpdateClient>(),
        responseSerializer: ProtobufSerializer<Ibc_Core_Client_V1_MsgUpdateClientResponse>(),
        interceptors: self.interceptors?.makeUpdateClientInterceptors() ?? [],
        wrapping: self.updateClient(request:context:)
      )

    case "UpgradeClient":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ibc_Core_Client_V1_MsgUpgradeClient>(),
        responseSerializer: ProtobufSerializer<Ibc_Core_Client_V1_MsgUpgradeClientResponse>(),
        interceptors: self.interceptors?.makeUpgradeClientInterceptors() ?? [],
        wrapping: self.upgradeClient(request:context:)
      )

    case "SubmitMisbehaviour":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ibc_Core_Client_V1_MsgSubmitMisbehaviour>(),
        responseSerializer: ProtobufSerializer<Ibc_Core_Client_V1_MsgSubmitMisbehaviourResponse>(),
        interceptors: self.interceptors?.makeSubmitMisbehaviourInterceptors() ?? [],
        wrapping: self.submitMisbehaviour(request:context:)
      )

    case "UpdateClientParams":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ibc_Core_Client_V1_MsgUpdateParams>(),
        responseSerializer: ProtobufSerializer<Ibc_Core_Client_V1_MsgUpdateParamsResponse>(),
        interceptors: self.interceptors?.makeUpdateClientParamsInterceptors() ?? [],
        wrapping: self.updateClientParams(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Ibc_Core_Client_V1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'createClient'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateClientInterceptors() -> [ServerInterceptor<Ibc_Core_Client_V1_MsgCreateClient, Ibc_Core_Client_V1_MsgCreateClientResponse>]

  /// - Returns: Interceptors to use when handling 'updateClient'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateClientInterceptors() -> [ServerInterceptor<Ibc_Core_Client_V1_MsgUpdateClient, Ibc_Core_Client_V1_MsgUpdateClientResponse>]

  /// - Returns: Interceptors to use when handling 'upgradeClient'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpgradeClientInterceptors() -> [ServerInterceptor<Ibc_Core_Client_V1_MsgUpgradeClient, Ibc_Core_Client_V1_MsgUpgradeClientResponse>]

  /// - Returns: Interceptors to use when handling 'submitMisbehaviour'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSubmitMisbehaviourInterceptors() -> [ServerInterceptor<Ibc_Core_Client_V1_MsgSubmitMisbehaviour, Ibc_Core_Client_V1_MsgSubmitMisbehaviourResponse>]

  /// - Returns: Interceptors to use when handling 'updateClientParams'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateClientParamsInterceptors() -> [ServerInterceptor<Ibc_Core_Client_V1_MsgUpdateParams, Ibc_Core_Client_V1_MsgUpdateParamsResponse>]
}

internal enum Ibc_Core_Client_V1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "ibc.core.client.v1.Msg",
    methods: [
      Ibc_Core_Client_V1_MsgServerMetadata.Methods.createClient,
      Ibc_Core_Client_V1_MsgServerMetadata.Methods.updateClient,
      Ibc_Core_Client_V1_MsgServerMetadata.Methods.upgradeClient,
      Ibc_Core_Client_V1_MsgServerMetadata.Methods.submitMisbehaviour,
      Ibc_Core_Client_V1_MsgServerMetadata.Methods.updateClientParams,
    ]
  )

  internal enum Methods {
    internal static let createClient = GRPCMethodDescriptor(
      name: "CreateClient",
      path: "/ibc.core.client.v1.Msg/CreateClient",
      type: GRPCCallType.unary
    )

    internal static let updateClient = GRPCMethodDescriptor(
      name: "UpdateClient",
      path: "/ibc.core.client.v1.Msg/UpdateClient",
      type: GRPCCallType.unary
    )

    internal static let upgradeClient = GRPCMethodDescriptor(
      name: "UpgradeClient",
      path: "/ibc.core.client.v1.Msg/UpgradeClient",
      type: GRPCCallType.unary
    )

    internal static let submitMisbehaviour = GRPCMethodDescriptor(
      name: "SubmitMisbehaviour",
      path: "/ibc.core.client.v1.Msg/SubmitMisbehaviour",
      type: GRPCCallType.unary
    )

    internal static let updateClientParams = GRPCMethodDescriptor(
      name: "UpdateClientParams",
      path: "/ibc.core.client.v1.Msg/UpdateClientParams",
      type: GRPCCallType.unary
    )
  }
}

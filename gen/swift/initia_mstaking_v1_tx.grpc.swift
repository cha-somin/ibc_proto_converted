//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: initia/mstaking/v1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the staking Msg service.
///
/// Usage: instantiate `Initia_Mstaking_V1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Initia_Mstaking_V1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Initia_Mstaking_V1_MsgClientInterceptorFactoryProtocol? { get }

  func createValidator(
    _ request: Initia_Mstaking_V1_MsgCreateValidator,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Mstaking_V1_MsgCreateValidator, Initia_Mstaking_V1_MsgCreateValidatorResponse>

  func editValidator(
    _ request: Initia_Mstaking_V1_MsgEditValidator,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Mstaking_V1_MsgEditValidator, Initia_Mstaking_V1_MsgEditValidatorResponse>

  func delegate(
    _ request: Initia_Mstaking_V1_MsgDelegate,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Mstaking_V1_MsgDelegate, Initia_Mstaking_V1_MsgDelegateResponse>

  func beginRedelegate(
    _ request: Initia_Mstaking_V1_MsgBeginRedelegate,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Mstaking_V1_MsgBeginRedelegate, Initia_Mstaking_V1_MsgBeginRedelegateResponse>

  func undelegate(
    _ request: Initia_Mstaking_V1_MsgUndelegate,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Mstaking_V1_MsgUndelegate, Initia_Mstaking_V1_MsgUndelegateResponse>

  func cancelUnbondingDelegation(
    _ request: Initia_Mstaking_V1_MsgCancelUnbondingDelegation,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Mstaking_V1_MsgCancelUnbondingDelegation, Initia_Mstaking_V1_MsgCancelUnbondingDelegationResponse>

  func updateParams(
    _ request: Initia_Mstaking_V1_MsgUpdateParams,
    callOptions: CallOptions?
  ) -> UnaryCall<Initia_Mstaking_V1_MsgUpdateParams, Initia_Mstaking_V1_MsgUpdateParamsResponse>
}

extension Initia_Mstaking_V1_MsgClientProtocol {
  internal var serviceName: String {
    return "initia.mstaking.v1.Msg"
  }

  /// CreateValidator defines a method for creating a new validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateValidator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createValidator(
    _ request: Initia_Mstaking_V1_MsgCreateValidator,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Mstaking_V1_MsgCreateValidator, Initia_Mstaking_V1_MsgCreateValidatorResponse> {
    return self.makeUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.createValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateValidatorInterceptors() ?? []
    )
  }

  /// EditValidator defines a method for editing an existing validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to EditValidator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func editValidator(
    _ request: Initia_Mstaking_V1_MsgEditValidator,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Mstaking_V1_MsgEditValidator, Initia_Mstaking_V1_MsgEditValidatorResponse> {
    return self.makeUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.editValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditValidatorInterceptors() ?? []
    )
  }

  /// Delegate defines a method for performing a delegation of coins
  /// from a delegator to a validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to Delegate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func delegate(
    _ request: Initia_Mstaking_V1_MsgDelegate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Mstaking_V1_MsgDelegate, Initia_Mstaking_V1_MsgDelegateResponse> {
    return self.makeUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.delegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateInterceptors() ?? []
    )
  }

  /// BeginRedelegate defines a method for performing a redelegation
  /// of coins from a delegator and source validator to a destination validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to BeginRedelegate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func beginRedelegate(
    _ request: Initia_Mstaking_V1_MsgBeginRedelegate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Mstaking_V1_MsgBeginRedelegate, Initia_Mstaking_V1_MsgBeginRedelegateResponse> {
    return self.makeUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.beginRedelegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBeginRedelegateInterceptors() ?? []
    )
  }

  /// Undelegate defines a method for performing an undelegation from a
  /// delegate and a validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to Undelegate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func undelegate(
    _ request: Initia_Mstaking_V1_MsgUndelegate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Mstaking_V1_MsgUndelegate, Initia_Mstaking_V1_MsgUndelegateResponse> {
    return self.makeUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.undelegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndelegateInterceptors() ?? []
    )
  }

  /// CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
  /// and delegate back to previous validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelUnbondingDelegation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func cancelUnbondingDelegation(
    _ request: Initia_Mstaking_V1_MsgCancelUnbondingDelegation,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Mstaking_V1_MsgCancelUnbondingDelegation, Initia_Mstaking_V1_MsgCancelUnbondingDelegationResponse> {
    return self.makeUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.cancelUnbondingDelegation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelUnbondingDelegationInterceptors() ?? []
    )
  }

  /// UpdateParams defines an operation for updating the x/staking module
  /// parameters.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateParams.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateParams(
    _ request: Initia_Mstaking_V1_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Initia_Mstaking_V1_MsgUpdateParams, Initia_Mstaking_V1_MsgUpdateParamsResponse> {
    return self.makeUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.updateParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Initia_Mstaking_V1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Initia_Mstaking_V1_MsgNIOClient")
internal final class Initia_Mstaking_V1_MsgClient: Initia_Mstaking_V1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Initia_Mstaking_V1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Initia_Mstaking_V1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the initia.mstaking.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Initia_Mstaking_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Initia_Mstaking_V1_MsgNIOClient: Initia_Mstaking_V1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Initia_Mstaking_V1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the initia.mstaking.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Initia_Mstaking_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the staking Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Initia_Mstaking_V1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Initia_Mstaking_V1_MsgClientInterceptorFactoryProtocol? { get }

  func makeCreateValidatorCall(
    _ request: Initia_Mstaking_V1_MsgCreateValidator,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgCreateValidator, Initia_Mstaking_V1_MsgCreateValidatorResponse>

  func makeEditValidatorCall(
    _ request: Initia_Mstaking_V1_MsgEditValidator,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgEditValidator, Initia_Mstaking_V1_MsgEditValidatorResponse>

  func makeDelegateCall(
    _ request: Initia_Mstaking_V1_MsgDelegate,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgDelegate, Initia_Mstaking_V1_MsgDelegateResponse>

  func makeBeginRedelegateCall(
    _ request: Initia_Mstaking_V1_MsgBeginRedelegate,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgBeginRedelegate, Initia_Mstaking_V1_MsgBeginRedelegateResponse>

  func makeUndelegateCall(
    _ request: Initia_Mstaking_V1_MsgUndelegate,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgUndelegate, Initia_Mstaking_V1_MsgUndelegateResponse>

  func makeCancelUnbondingDelegationCall(
    _ request: Initia_Mstaking_V1_MsgCancelUnbondingDelegation,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgCancelUnbondingDelegation, Initia_Mstaking_V1_MsgCancelUnbondingDelegationResponse>

  func makeUpdateParamsCall(
    _ request: Initia_Mstaking_V1_MsgUpdateParams,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgUpdateParams, Initia_Mstaking_V1_MsgUpdateParamsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Initia_Mstaking_V1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Initia_Mstaking_V1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Initia_Mstaking_V1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeCreateValidatorCall(
    _ request: Initia_Mstaking_V1_MsgCreateValidator,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgCreateValidator, Initia_Mstaking_V1_MsgCreateValidatorResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.createValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateValidatorInterceptors() ?? []
    )
  }

  internal func makeEditValidatorCall(
    _ request: Initia_Mstaking_V1_MsgEditValidator,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgEditValidator, Initia_Mstaking_V1_MsgEditValidatorResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.editValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditValidatorInterceptors() ?? []
    )
  }

  internal func makeDelegateCall(
    _ request: Initia_Mstaking_V1_MsgDelegate,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgDelegate, Initia_Mstaking_V1_MsgDelegateResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.delegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateInterceptors() ?? []
    )
  }

  internal func makeBeginRedelegateCall(
    _ request: Initia_Mstaking_V1_MsgBeginRedelegate,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgBeginRedelegate, Initia_Mstaking_V1_MsgBeginRedelegateResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.beginRedelegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBeginRedelegateInterceptors() ?? []
    )
  }

  internal func makeUndelegateCall(
    _ request: Initia_Mstaking_V1_MsgUndelegate,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgUndelegate, Initia_Mstaking_V1_MsgUndelegateResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.undelegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndelegateInterceptors() ?? []
    )
  }

  internal func makeCancelUnbondingDelegationCall(
    _ request: Initia_Mstaking_V1_MsgCancelUnbondingDelegation,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgCancelUnbondingDelegation, Initia_Mstaking_V1_MsgCancelUnbondingDelegationResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.cancelUnbondingDelegation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelUnbondingDelegationInterceptors() ?? []
    )
  }

  internal func makeUpdateParamsCall(
    _ request: Initia_Mstaking_V1_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Initia_Mstaking_V1_MsgUpdateParams, Initia_Mstaking_V1_MsgUpdateParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.updateParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Initia_Mstaking_V1_MsgAsyncClientProtocol {
  internal func createValidator(
    _ request: Initia_Mstaking_V1_MsgCreateValidator,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Mstaking_V1_MsgCreateValidatorResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.createValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateValidatorInterceptors() ?? []
    )
  }

  internal func editValidator(
    _ request: Initia_Mstaking_V1_MsgEditValidator,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Mstaking_V1_MsgEditValidatorResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.editValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditValidatorInterceptors() ?? []
    )
  }

  internal func delegate(
    _ request: Initia_Mstaking_V1_MsgDelegate,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Mstaking_V1_MsgDelegateResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.delegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateInterceptors() ?? []
    )
  }

  internal func beginRedelegate(
    _ request: Initia_Mstaking_V1_MsgBeginRedelegate,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Mstaking_V1_MsgBeginRedelegateResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.beginRedelegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBeginRedelegateInterceptors() ?? []
    )
  }

  internal func undelegate(
    _ request: Initia_Mstaking_V1_MsgUndelegate,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Mstaking_V1_MsgUndelegateResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.undelegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndelegateInterceptors() ?? []
    )
  }

  internal func cancelUnbondingDelegation(
    _ request: Initia_Mstaking_V1_MsgCancelUnbondingDelegation,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Mstaking_V1_MsgCancelUnbondingDelegationResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.cancelUnbondingDelegation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelUnbondingDelegationInterceptors() ?? []
    )
  }

  internal func updateParams(
    _ request: Initia_Mstaking_V1_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) async throws -> Initia_Mstaking_V1_MsgUpdateParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Initia_Mstaking_V1_MsgClientMetadata.Methods.updateParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Initia_Mstaking_V1_MsgAsyncClient: Initia_Mstaking_V1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Initia_Mstaking_V1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Initia_Mstaking_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Initia_Mstaking_V1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'createValidator'.
  func makeCreateValidatorInterceptors() -> [ClientInterceptor<Initia_Mstaking_V1_MsgCreateValidator, Initia_Mstaking_V1_MsgCreateValidatorResponse>]

  /// - Returns: Interceptors to use when invoking 'editValidator'.
  func makeEditValidatorInterceptors() -> [ClientInterceptor<Initia_Mstaking_V1_MsgEditValidator, Initia_Mstaking_V1_MsgEditValidatorResponse>]

  /// - Returns: Interceptors to use when invoking 'delegate'.
  func makeDelegateInterceptors() -> [ClientInterceptor<Initia_Mstaking_V1_MsgDelegate, Initia_Mstaking_V1_MsgDelegateResponse>]

  /// - Returns: Interceptors to use when invoking 'beginRedelegate'.
  func makeBeginRedelegateInterceptors() -> [ClientInterceptor<Initia_Mstaking_V1_MsgBeginRedelegate, Initia_Mstaking_V1_MsgBeginRedelegateResponse>]

  /// - Returns: Interceptors to use when invoking 'undelegate'.
  func makeUndelegateInterceptors() -> [ClientInterceptor<Initia_Mstaking_V1_MsgUndelegate, Initia_Mstaking_V1_MsgUndelegateResponse>]

  /// - Returns: Interceptors to use when invoking 'cancelUnbondingDelegation'.
  func makeCancelUnbondingDelegationInterceptors() -> [ClientInterceptor<Initia_Mstaking_V1_MsgCancelUnbondingDelegation, Initia_Mstaking_V1_MsgCancelUnbondingDelegationResponse>]

  /// - Returns: Interceptors to use when invoking 'updateParams'.
  func makeUpdateParamsInterceptors() -> [ClientInterceptor<Initia_Mstaking_V1_MsgUpdateParams, Initia_Mstaking_V1_MsgUpdateParamsResponse>]
}

internal enum Initia_Mstaking_V1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "initia.mstaking.v1.Msg",
    methods: [
      Initia_Mstaking_V1_MsgClientMetadata.Methods.createValidator,
      Initia_Mstaking_V1_MsgClientMetadata.Methods.editValidator,
      Initia_Mstaking_V1_MsgClientMetadata.Methods.delegate,
      Initia_Mstaking_V1_MsgClientMetadata.Methods.beginRedelegate,
      Initia_Mstaking_V1_MsgClientMetadata.Methods.undelegate,
      Initia_Mstaking_V1_MsgClientMetadata.Methods.cancelUnbondingDelegation,
      Initia_Mstaking_V1_MsgClientMetadata.Methods.updateParams,
    ]
  )

  internal enum Methods {
    internal static let createValidator = GRPCMethodDescriptor(
      name: "CreateValidator",
      path: "/initia.mstaking.v1.Msg/CreateValidator",
      type: GRPCCallType.unary
    )

    internal static let editValidator = GRPCMethodDescriptor(
      name: "EditValidator",
      path: "/initia.mstaking.v1.Msg/EditValidator",
      type: GRPCCallType.unary
    )

    internal static let delegate = GRPCMethodDescriptor(
      name: "Delegate",
      path: "/initia.mstaking.v1.Msg/Delegate",
      type: GRPCCallType.unary
    )

    internal static let beginRedelegate = GRPCMethodDescriptor(
      name: "BeginRedelegate",
      path: "/initia.mstaking.v1.Msg/BeginRedelegate",
      type: GRPCCallType.unary
    )

    internal static let undelegate = GRPCMethodDescriptor(
      name: "Undelegate",
      path: "/initia.mstaking.v1.Msg/Undelegate",
      type: GRPCCallType.unary
    )

    internal static let cancelUnbondingDelegation = GRPCMethodDescriptor(
      name: "CancelUnbondingDelegation",
      path: "/initia.mstaking.v1.Msg/CancelUnbondingDelegation",
      type: GRPCCallType.unary
    )

    internal static let updateParams = GRPCMethodDescriptor(
      name: "UpdateParams",
      path: "/initia.mstaking.v1.Msg/UpdateParams",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the staking Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Initia_Mstaking_V1_MsgProvider: CallHandlerProvider {
  var interceptors: Initia_Mstaking_V1_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateValidator defines a method for creating a new validator.
  func createValidator(request: Initia_Mstaking_V1_MsgCreateValidator, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Mstaking_V1_MsgCreateValidatorResponse>

  /// EditValidator defines a method for editing an existing validator.
  func editValidator(request: Initia_Mstaking_V1_MsgEditValidator, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Mstaking_V1_MsgEditValidatorResponse>

  /// Delegate defines a method for performing a delegation of coins
  /// from a delegator to a validator.
  func delegate(request: Initia_Mstaking_V1_MsgDelegate, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Mstaking_V1_MsgDelegateResponse>

  /// BeginRedelegate defines a method for performing a redelegation
  /// of coins from a delegator and source validator to a destination validator.
  func beginRedelegate(request: Initia_Mstaking_V1_MsgBeginRedelegate, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Mstaking_V1_MsgBeginRedelegateResponse>

  /// Undelegate defines a method for performing an undelegation from a
  /// delegate and a validator.
  func undelegate(request: Initia_Mstaking_V1_MsgUndelegate, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Mstaking_V1_MsgUndelegateResponse>

  /// CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
  /// and delegate back to previous validator.
  func cancelUnbondingDelegation(request: Initia_Mstaking_V1_MsgCancelUnbondingDelegation, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Mstaking_V1_MsgCancelUnbondingDelegationResponse>

  /// UpdateParams defines an operation for updating the x/staking module
  /// parameters.
  func updateParams(request: Initia_Mstaking_V1_MsgUpdateParams, context: StatusOnlyCallContext) -> EventLoopFuture<Initia_Mstaking_V1_MsgUpdateParamsResponse>
}

extension Initia_Mstaking_V1_MsgProvider {
  internal var serviceName: Substring {
    return Initia_Mstaking_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateValidator":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgCreateValidator>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgCreateValidatorResponse>(),
        interceptors: self.interceptors?.makeCreateValidatorInterceptors() ?? [],
        userFunction: self.createValidator(request:context:)
      )

    case "EditValidator":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgEditValidator>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgEditValidatorResponse>(),
        interceptors: self.interceptors?.makeEditValidatorInterceptors() ?? [],
        userFunction: self.editValidator(request:context:)
      )

    case "Delegate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgDelegate>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgDelegateResponse>(),
        interceptors: self.interceptors?.makeDelegateInterceptors() ?? [],
        userFunction: self.delegate(request:context:)
      )

    case "BeginRedelegate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgBeginRedelegate>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgBeginRedelegateResponse>(),
        interceptors: self.interceptors?.makeBeginRedelegateInterceptors() ?? [],
        userFunction: self.beginRedelegate(request:context:)
      )

    case "Undelegate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgUndelegate>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgUndelegateResponse>(),
        interceptors: self.interceptors?.makeUndelegateInterceptors() ?? [],
        userFunction: self.undelegate(request:context:)
      )

    case "CancelUnbondingDelegation":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgCancelUnbondingDelegation>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgCancelUnbondingDelegationResponse>(),
        interceptors: self.interceptors?.makeCancelUnbondingDelegationInterceptors() ?? [],
        userFunction: self.cancelUnbondingDelegation(request:context:)
      )

    case "UpdateParams":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgUpdateParams>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgUpdateParamsResponse>(),
        interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? [],
        userFunction: self.updateParams(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the staking Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Initia_Mstaking_V1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Initia_Mstaking_V1_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateValidator defines a method for creating a new validator.
  @Sendable func createValidator(
    request: Initia_Mstaking_V1_MsgCreateValidator,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Mstaking_V1_MsgCreateValidatorResponse

  /// EditValidator defines a method for editing an existing validator.
  @Sendable func editValidator(
    request: Initia_Mstaking_V1_MsgEditValidator,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Mstaking_V1_MsgEditValidatorResponse

  /// Delegate defines a method for performing a delegation of coins
  /// from a delegator to a validator.
  @Sendable func delegate(
    request: Initia_Mstaking_V1_MsgDelegate,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Mstaking_V1_MsgDelegateResponse

  /// BeginRedelegate defines a method for performing a redelegation
  /// of coins from a delegator and source validator to a destination validator.
  @Sendable func beginRedelegate(
    request: Initia_Mstaking_V1_MsgBeginRedelegate,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Mstaking_V1_MsgBeginRedelegateResponse

  /// Undelegate defines a method for performing an undelegation from a
  /// delegate and a validator.
  @Sendable func undelegate(
    request: Initia_Mstaking_V1_MsgUndelegate,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Mstaking_V1_MsgUndelegateResponse

  /// CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
  /// and delegate back to previous validator.
  @Sendable func cancelUnbondingDelegation(
    request: Initia_Mstaking_V1_MsgCancelUnbondingDelegation,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Mstaking_V1_MsgCancelUnbondingDelegationResponse

  /// UpdateParams defines an operation for updating the x/staking module
  /// parameters.
  @Sendable func updateParams(
    request: Initia_Mstaking_V1_MsgUpdateParams,
    context: GRPCAsyncServerCallContext
  ) async throws -> Initia_Mstaking_V1_MsgUpdateParamsResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Initia_Mstaking_V1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Initia_Mstaking_V1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Initia_Mstaking_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Initia_Mstaking_V1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateValidator":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgCreateValidator>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgCreateValidatorResponse>(),
        interceptors: self.interceptors?.makeCreateValidatorInterceptors() ?? [],
        wrapping: self.createValidator(request:context:)
      )

    case "EditValidator":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgEditValidator>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgEditValidatorResponse>(),
        interceptors: self.interceptors?.makeEditValidatorInterceptors() ?? [],
        wrapping: self.editValidator(request:context:)
      )

    case "Delegate":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgDelegate>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgDelegateResponse>(),
        interceptors: self.interceptors?.makeDelegateInterceptors() ?? [],
        wrapping: self.delegate(request:context:)
      )

    case "BeginRedelegate":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgBeginRedelegate>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgBeginRedelegateResponse>(),
        interceptors: self.interceptors?.makeBeginRedelegateInterceptors() ?? [],
        wrapping: self.beginRedelegate(request:context:)
      )

    case "Undelegate":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgUndelegate>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgUndelegateResponse>(),
        interceptors: self.interceptors?.makeUndelegateInterceptors() ?? [],
        wrapping: self.undelegate(request:context:)
      )

    case "CancelUnbondingDelegation":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgCancelUnbondingDelegation>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgCancelUnbondingDelegationResponse>(),
        interceptors: self.interceptors?.makeCancelUnbondingDelegationInterceptors() ?? [],
        wrapping: self.cancelUnbondingDelegation(request:context:)
      )

    case "UpdateParams":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Initia_Mstaking_V1_MsgUpdateParams>(),
        responseSerializer: ProtobufSerializer<Initia_Mstaking_V1_MsgUpdateParamsResponse>(),
        interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? [],
        wrapping: self.updateParams(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Initia_Mstaking_V1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'createValidator'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateValidatorInterceptors() -> [ServerInterceptor<Initia_Mstaking_V1_MsgCreateValidator, Initia_Mstaking_V1_MsgCreateValidatorResponse>]

  /// - Returns: Interceptors to use when handling 'editValidator'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEditValidatorInterceptors() -> [ServerInterceptor<Initia_Mstaking_V1_MsgEditValidator, Initia_Mstaking_V1_MsgEditValidatorResponse>]

  /// - Returns: Interceptors to use when handling 'delegate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDelegateInterceptors() -> [ServerInterceptor<Initia_Mstaking_V1_MsgDelegate, Initia_Mstaking_V1_MsgDelegateResponse>]

  /// - Returns: Interceptors to use when handling 'beginRedelegate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBeginRedelegateInterceptors() -> [ServerInterceptor<Initia_Mstaking_V1_MsgBeginRedelegate, Initia_Mstaking_V1_MsgBeginRedelegateResponse>]

  /// - Returns: Interceptors to use when handling 'undelegate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUndelegateInterceptors() -> [ServerInterceptor<Initia_Mstaking_V1_MsgUndelegate, Initia_Mstaking_V1_MsgUndelegateResponse>]

  /// - Returns: Interceptors to use when handling 'cancelUnbondingDelegation'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelUnbondingDelegationInterceptors() -> [ServerInterceptor<Initia_Mstaking_V1_MsgCancelUnbondingDelegation, Initia_Mstaking_V1_MsgCancelUnbondingDelegationResponse>]

  /// - Returns: Interceptors to use when handling 'updateParams'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateParamsInterceptors() -> [ServerInterceptor<Initia_Mstaking_V1_MsgUpdateParams, Initia_Mstaking_V1_MsgUpdateParamsResponse>]
}

internal enum Initia_Mstaking_V1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "initia.mstaking.v1.Msg",
    methods: [
      Initia_Mstaking_V1_MsgServerMetadata.Methods.createValidator,
      Initia_Mstaking_V1_MsgServerMetadata.Methods.editValidator,
      Initia_Mstaking_V1_MsgServerMetadata.Methods.delegate,
      Initia_Mstaking_V1_MsgServerMetadata.Methods.beginRedelegate,
      Initia_Mstaking_V1_MsgServerMetadata.Methods.undelegate,
      Initia_Mstaking_V1_MsgServerMetadata.Methods.cancelUnbondingDelegation,
      Initia_Mstaking_V1_MsgServerMetadata.Methods.updateParams,
    ]
  )

  internal enum Methods {
    internal static let createValidator = GRPCMethodDescriptor(
      name: "CreateValidator",
      path: "/initia.mstaking.v1.Msg/CreateValidator",
      type: GRPCCallType.unary
    )

    internal static let editValidator = GRPCMethodDescriptor(
      name: "EditValidator",
      path: "/initia.mstaking.v1.Msg/EditValidator",
      type: GRPCCallType.unary
    )

    internal static let delegate = GRPCMethodDescriptor(
      name: "Delegate",
      path: "/initia.mstaking.v1.Msg/Delegate",
      type: GRPCCallType.unary
    )

    internal static let beginRedelegate = GRPCMethodDescriptor(
      name: "BeginRedelegate",
      path: "/initia.mstaking.v1.Msg/BeginRedelegate",
      type: GRPCCallType.unary
    )

    internal static let undelegate = GRPCMethodDescriptor(
      name: "Undelegate",
      path: "/initia.mstaking.v1.Msg/Undelegate",
      type: GRPCCallType.unary
    )

    internal static let cancelUnbondingDelegation = GRPCMethodDescriptor(
      name: "CancelUnbondingDelegation",
      path: "/initia.mstaking.v1.Msg/CancelUnbondingDelegation",
      type: GRPCCallType.unary
    )

    internal static let updateParams = GRPCMethodDescriptor(
      name: "UpdateParams",
      path: "/initia.mstaking.v1.Msg/UpdateParams",
      type: GRPCCallType.unary
    )
  }
}

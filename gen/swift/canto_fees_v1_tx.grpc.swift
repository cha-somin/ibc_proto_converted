//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: canto/fees/v1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the fees Msg service.
///
/// Usage: instantiate `Canto_Fees_V1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Canto_Fees_V1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Canto_Fees_V1_MsgClientInterceptorFactoryProtocol? { get }

  func registerFee(
    _ request: Canto_Fees_V1_MsgRegisterFee,
    callOptions: CallOptions?
  ) -> UnaryCall<Canto_Fees_V1_MsgRegisterFee, Canto_Fees_V1_MsgRegisterFeeResponse>

  func cancelFee(
    _ request: Canto_Fees_V1_MsgCancelFee,
    callOptions: CallOptions?
  ) -> UnaryCall<Canto_Fees_V1_MsgCancelFee, Canto_Fees_V1_MsgCancelFeeResponse>

  func updateFee(
    _ request: Canto_Fees_V1_MsgUpdateFee,
    callOptions: CallOptions?
  ) -> UnaryCall<Canto_Fees_V1_MsgUpdateFee, Canto_Fees_V1_MsgUpdateFeeResponse>
}

extension Canto_Fees_V1_MsgClientProtocol {
  internal var serviceName: String {
    return "canto.fees.v1.Msg"
  }

  /// RegisterFee registers a new contract for receiving transaction fees
  ///
  /// - Parameters:
  ///   - request: Request to send to RegisterFee.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func registerFee(
    _ request: Canto_Fees_V1_MsgRegisterFee,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Canto_Fees_V1_MsgRegisterFee, Canto_Fees_V1_MsgRegisterFeeResponse> {
    return self.makeUnaryCall(
      path: Canto_Fees_V1_MsgClientMetadata.Methods.registerFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterFeeInterceptors() ?? []
    )
  }

  /// CancelFee cancels a contract's fee registration and further receival of
  /// transaction fees
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelFee.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func cancelFee(
    _ request: Canto_Fees_V1_MsgCancelFee,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Canto_Fees_V1_MsgCancelFee, Canto_Fees_V1_MsgCancelFeeResponse> {
    return self.makeUnaryCall(
      path: Canto_Fees_V1_MsgClientMetadata.Methods.cancelFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelFeeInterceptors() ?? []
    )
  }

  /// UpdateFee updates the withdraw address
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateFee.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateFee(
    _ request: Canto_Fees_V1_MsgUpdateFee,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Canto_Fees_V1_MsgUpdateFee, Canto_Fees_V1_MsgUpdateFeeResponse> {
    return self.makeUnaryCall(
      path: Canto_Fees_V1_MsgClientMetadata.Methods.updateFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateFeeInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Canto_Fees_V1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Canto_Fees_V1_MsgNIOClient")
internal final class Canto_Fees_V1_MsgClient: Canto_Fees_V1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Canto_Fees_V1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Canto_Fees_V1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the canto.fees.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Canto_Fees_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Canto_Fees_V1_MsgNIOClient: Canto_Fees_V1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Canto_Fees_V1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the canto.fees.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Canto_Fees_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the fees Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Canto_Fees_V1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Canto_Fees_V1_MsgClientInterceptorFactoryProtocol? { get }

  func makeRegisterFeeCall(
    _ request: Canto_Fees_V1_MsgRegisterFee,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Canto_Fees_V1_MsgRegisterFee, Canto_Fees_V1_MsgRegisterFeeResponse>

  func makeCancelFeeCall(
    _ request: Canto_Fees_V1_MsgCancelFee,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Canto_Fees_V1_MsgCancelFee, Canto_Fees_V1_MsgCancelFeeResponse>

  func makeUpdateFeeCall(
    _ request: Canto_Fees_V1_MsgUpdateFee,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Canto_Fees_V1_MsgUpdateFee, Canto_Fees_V1_MsgUpdateFeeResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Canto_Fees_V1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Canto_Fees_V1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Canto_Fees_V1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeRegisterFeeCall(
    _ request: Canto_Fees_V1_MsgRegisterFee,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Canto_Fees_V1_MsgRegisterFee, Canto_Fees_V1_MsgRegisterFeeResponse> {
    return self.makeAsyncUnaryCall(
      path: Canto_Fees_V1_MsgClientMetadata.Methods.registerFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterFeeInterceptors() ?? []
    )
  }

  internal func makeCancelFeeCall(
    _ request: Canto_Fees_V1_MsgCancelFee,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Canto_Fees_V1_MsgCancelFee, Canto_Fees_V1_MsgCancelFeeResponse> {
    return self.makeAsyncUnaryCall(
      path: Canto_Fees_V1_MsgClientMetadata.Methods.cancelFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelFeeInterceptors() ?? []
    )
  }

  internal func makeUpdateFeeCall(
    _ request: Canto_Fees_V1_MsgUpdateFee,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Canto_Fees_V1_MsgUpdateFee, Canto_Fees_V1_MsgUpdateFeeResponse> {
    return self.makeAsyncUnaryCall(
      path: Canto_Fees_V1_MsgClientMetadata.Methods.updateFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateFeeInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Canto_Fees_V1_MsgAsyncClientProtocol {
  internal func registerFee(
    _ request: Canto_Fees_V1_MsgRegisterFee,
    callOptions: CallOptions? = nil
  ) async throws -> Canto_Fees_V1_MsgRegisterFeeResponse {
    return try await self.performAsyncUnaryCall(
      path: Canto_Fees_V1_MsgClientMetadata.Methods.registerFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRegisterFeeInterceptors() ?? []
    )
  }

  internal func cancelFee(
    _ request: Canto_Fees_V1_MsgCancelFee,
    callOptions: CallOptions? = nil
  ) async throws -> Canto_Fees_V1_MsgCancelFeeResponse {
    return try await self.performAsyncUnaryCall(
      path: Canto_Fees_V1_MsgClientMetadata.Methods.cancelFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelFeeInterceptors() ?? []
    )
  }

  internal func updateFee(
    _ request: Canto_Fees_V1_MsgUpdateFee,
    callOptions: CallOptions? = nil
  ) async throws -> Canto_Fees_V1_MsgUpdateFeeResponse {
    return try await self.performAsyncUnaryCall(
      path: Canto_Fees_V1_MsgClientMetadata.Methods.updateFee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateFeeInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Canto_Fees_V1_MsgAsyncClient: Canto_Fees_V1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Canto_Fees_V1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Canto_Fees_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Canto_Fees_V1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'registerFee'.
  func makeRegisterFeeInterceptors() -> [ClientInterceptor<Canto_Fees_V1_MsgRegisterFee, Canto_Fees_V1_MsgRegisterFeeResponse>]

  /// - Returns: Interceptors to use when invoking 'cancelFee'.
  func makeCancelFeeInterceptors() -> [ClientInterceptor<Canto_Fees_V1_MsgCancelFee, Canto_Fees_V1_MsgCancelFeeResponse>]

  /// - Returns: Interceptors to use when invoking 'updateFee'.
  func makeUpdateFeeInterceptors() -> [ClientInterceptor<Canto_Fees_V1_MsgUpdateFee, Canto_Fees_V1_MsgUpdateFeeResponse>]
}

internal enum Canto_Fees_V1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "canto.fees.v1.Msg",
    methods: [
      Canto_Fees_V1_MsgClientMetadata.Methods.registerFee,
      Canto_Fees_V1_MsgClientMetadata.Methods.cancelFee,
      Canto_Fees_V1_MsgClientMetadata.Methods.updateFee,
    ]
  )

  internal enum Methods {
    internal static let registerFee = GRPCMethodDescriptor(
      name: "RegisterFee",
      path: "/canto.fees.v1.Msg/RegisterFee",
      type: GRPCCallType.unary
    )

    internal static let cancelFee = GRPCMethodDescriptor(
      name: "CancelFee",
      path: "/canto.fees.v1.Msg/CancelFee",
      type: GRPCCallType.unary
    )

    internal static let updateFee = GRPCMethodDescriptor(
      name: "UpdateFee",
      path: "/canto.fees.v1.Msg/UpdateFee",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the fees Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Canto_Fees_V1_MsgProvider: CallHandlerProvider {
  var interceptors: Canto_Fees_V1_MsgServerInterceptorFactoryProtocol? { get }

  /// RegisterFee registers a new contract for receiving transaction fees
  func registerFee(request: Canto_Fees_V1_MsgRegisterFee, context: StatusOnlyCallContext) -> EventLoopFuture<Canto_Fees_V1_MsgRegisterFeeResponse>

  /// CancelFee cancels a contract's fee registration and further receival of
  /// transaction fees
  func cancelFee(request: Canto_Fees_V1_MsgCancelFee, context: StatusOnlyCallContext) -> EventLoopFuture<Canto_Fees_V1_MsgCancelFeeResponse>

  /// UpdateFee updates the withdraw address
  func updateFee(request: Canto_Fees_V1_MsgUpdateFee, context: StatusOnlyCallContext) -> EventLoopFuture<Canto_Fees_V1_MsgUpdateFeeResponse>
}

extension Canto_Fees_V1_MsgProvider {
  internal var serviceName: Substring {
    return Canto_Fees_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "RegisterFee":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Canto_Fees_V1_MsgRegisterFee>(),
        responseSerializer: ProtobufSerializer<Canto_Fees_V1_MsgRegisterFeeResponse>(),
        interceptors: self.interceptors?.makeRegisterFeeInterceptors() ?? [],
        userFunction: self.registerFee(request:context:)
      )

    case "CancelFee":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Canto_Fees_V1_MsgCancelFee>(),
        responseSerializer: ProtobufSerializer<Canto_Fees_V1_MsgCancelFeeResponse>(),
        interceptors: self.interceptors?.makeCancelFeeInterceptors() ?? [],
        userFunction: self.cancelFee(request:context:)
      )

    case "UpdateFee":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Canto_Fees_V1_MsgUpdateFee>(),
        responseSerializer: ProtobufSerializer<Canto_Fees_V1_MsgUpdateFeeResponse>(),
        interceptors: self.interceptors?.makeUpdateFeeInterceptors() ?? [],
        userFunction: self.updateFee(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the fees Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Canto_Fees_V1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Canto_Fees_V1_MsgServerInterceptorFactoryProtocol? { get }

  /// RegisterFee registers a new contract for receiving transaction fees
  @Sendable func registerFee(
    request: Canto_Fees_V1_MsgRegisterFee,
    context: GRPCAsyncServerCallContext
  ) async throws -> Canto_Fees_V1_MsgRegisterFeeResponse

  /// CancelFee cancels a contract's fee registration and further receival of
  /// transaction fees
  @Sendable func cancelFee(
    request: Canto_Fees_V1_MsgCancelFee,
    context: GRPCAsyncServerCallContext
  ) async throws -> Canto_Fees_V1_MsgCancelFeeResponse

  /// UpdateFee updates the withdraw address
  @Sendable func updateFee(
    request: Canto_Fees_V1_MsgUpdateFee,
    context: GRPCAsyncServerCallContext
  ) async throws -> Canto_Fees_V1_MsgUpdateFeeResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Canto_Fees_V1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Canto_Fees_V1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Canto_Fees_V1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Canto_Fees_V1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "RegisterFee":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Canto_Fees_V1_MsgRegisterFee>(),
        responseSerializer: ProtobufSerializer<Canto_Fees_V1_MsgRegisterFeeResponse>(),
        interceptors: self.interceptors?.makeRegisterFeeInterceptors() ?? [],
        wrapping: self.registerFee(request:context:)
      )

    case "CancelFee":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Canto_Fees_V1_MsgCancelFee>(),
        responseSerializer: ProtobufSerializer<Canto_Fees_V1_MsgCancelFeeResponse>(),
        interceptors: self.interceptors?.makeCancelFeeInterceptors() ?? [],
        wrapping: self.cancelFee(request:context:)
      )

    case "UpdateFee":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Canto_Fees_V1_MsgUpdateFee>(),
        responseSerializer: ProtobufSerializer<Canto_Fees_V1_MsgUpdateFeeResponse>(),
        interceptors: self.interceptors?.makeUpdateFeeInterceptors() ?? [],
        wrapping: self.updateFee(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Canto_Fees_V1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'registerFee'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRegisterFeeInterceptors() -> [ServerInterceptor<Canto_Fees_V1_MsgRegisterFee, Canto_Fees_V1_MsgRegisterFeeResponse>]

  /// - Returns: Interceptors to use when handling 'cancelFee'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelFeeInterceptors() -> [ServerInterceptor<Canto_Fees_V1_MsgCancelFee, Canto_Fees_V1_MsgCancelFeeResponse>]

  /// - Returns: Interceptors to use when handling 'updateFee'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateFeeInterceptors() -> [ServerInterceptor<Canto_Fees_V1_MsgUpdateFee, Canto_Fees_V1_MsgUpdateFeeResponse>]
}

internal enum Canto_Fees_V1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "canto.fees.v1.Msg",
    methods: [
      Canto_Fees_V1_MsgServerMetadata.Methods.registerFee,
      Canto_Fees_V1_MsgServerMetadata.Methods.cancelFee,
      Canto_Fees_V1_MsgServerMetadata.Methods.updateFee,
    ]
  )

  internal enum Methods {
    internal static let registerFee = GRPCMethodDescriptor(
      name: "RegisterFee",
      path: "/canto.fees.v1.Msg/RegisterFee",
      type: GRPCCallType.unary
    )

    internal static let cancelFee = GRPCMethodDescriptor(
      name: "CancelFee",
      path: "/canto.fees.v1.Msg/CancelFee",
      type: GRPCCallType.unary
    )

    internal static let updateFee = GRPCMethodDescriptor(
      name: "UpdateFee",
      path: "/canto.fees.v1.Msg/UpdateFee",
      type: GRPCCallType.unary
    )
  }
}

// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: dymension/delayedack/rollapp_packet.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct Dymensionxyz_Dymension_Delayedack_RollappPacket {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var rollappID: String = String()

  var packet: Ibc_Core_Channel_V1_Packet {
    get {return _packet ?? Ibc_Core_Channel_V1_Packet()}
    set {_packet = newValue}
  }
  /// Returns true if `packet` has been explicitly set.
  var hasPacket: Bool {return self._packet != nil}
  /// Clears the value of `packet`. Subsequent reads from it will return its default value.
  mutating func clearPacket() {self._packet = nil}

  var acknowledgement: Data = Data()

  var status: Dymensionxyz_Dymension_Delayedack_RollappPacket.Status = .pending

  var proofHeight: UInt64 = 0

  var error: String = String()

  var relayer: Data = Data()

  var type: Dymensionxyz_Dymension_Delayedack_RollappPacket.TypeEnum = .onRecv

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Status: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case pending // = 0
    case accepted // = 1
    case rejected // = 2
    case UNRECOGNIZED(Int)

    init() {
      self = .pending
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .pending
      case 1: self = .accepted
      case 2: self = .rejected
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .pending: return 0
      case .accepted: return 1
      case .rejected: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  enum TypeEnum: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case onRecv // = 0
    case onAck // = 1
    case onTimeout // = 2
    case UNRECOGNIZED(Int)

    init() {
      self = .onRecv
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .onRecv
      case 1: self = .onAck
      case 2: self = .onTimeout
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .onRecv: return 0
      case .onAck: return 1
      case .onTimeout: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}

  fileprivate var _packet: Ibc_Core_Channel_V1_Packet? = nil
}

#if swift(>=4.2)

extension Dymensionxyz_Dymension_Delayedack_RollappPacket.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [Dymensionxyz_Dymension_Delayedack_RollappPacket.Status] = [
    .pending,
    .accepted,
    .rejected,
  ]
}

extension Dymensionxyz_Dymension_Delayedack_RollappPacket.TypeEnum: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [Dymensionxyz_Dymension_Delayedack_RollappPacket.TypeEnum] = [
    .onRecv,
    .onAck,
    .onTimeout,
  ]
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension Dymensionxyz_Dymension_Delayedack_RollappPacket: @unchecked Sendable {}
extension Dymensionxyz_Dymension_Delayedack_RollappPacket.Status: @unchecked Sendable {}
extension Dymensionxyz_Dymension_Delayedack_RollappPacket.TypeEnum: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "dymensionxyz.dymension.delayedack"

extension Dymensionxyz_Dymension_Delayedack_RollappPacket: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".RollappPacket"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "rollapp_id"),
    2: .same(proto: "packet"),
    3: .same(proto: "acknowledgement"),
    4: .same(proto: "status"),
    5: .same(proto: "ProofHeight"),
    6: .same(proto: "error"),
    7: .same(proto: "relayer"),
    8: .same(proto: "type"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.rollappID) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._packet) }()
      case 3: try { try decoder.decodeSingularBytesField(value: &self.acknowledgement) }()
      case 4: try { try decoder.decodeSingularEnumField(value: &self.status) }()
      case 5: try { try decoder.decodeSingularUInt64Field(value: &self.proofHeight) }()
      case 6: try { try decoder.decodeSingularStringField(value: &self.error) }()
      case 7: try { try decoder.decodeSingularBytesField(value: &self.relayer) }()
      case 8: try { try decoder.decodeSingularEnumField(value: &self.type) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.rollappID.isEmpty {
      try visitor.visitSingularStringField(value: self.rollappID, fieldNumber: 1)
    }
    try { if let v = self._packet {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    } }()
    if !self.acknowledgement.isEmpty {
      try visitor.visitSingularBytesField(value: self.acknowledgement, fieldNumber: 3)
    }
    if self.status != .pending {
      try visitor.visitSingularEnumField(value: self.status, fieldNumber: 4)
    }
    if self.proofHeight != 0 {
      try visitor.visitSingularUInt64Field(value: self.proofHeight, fieldNumber: 5)
    }
    if !self.error.isEmpty {
      try visitor.visitSingularStringField(value: self.error, fieldNumber: 6)
    }
    if !self.relayer.isEmpty {
      try visitor.visitSingularBytesField(value: self.relayer, fieldNumber: 7)
    }
    if self.type != .onRecv {
      try visitor.visitSingularEnumField(value: self.type, fieldNumber: 8)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Dymensionxyz_Dymension_Delayedack_RollappPacket, rhs: Dymensionxyz_Dymension_Delayedack_RollappPacket) -> Bool {
    if lhs.rollappID != rhs.rollappID {return false}
    if lhs._packet != rhs._packet {return false}
    if lhs.acknowledgement != rhs.acknowledgement {return false}
    if lhs.status != rhs.status {return false}
    if lhs.proofHeight != rhs.proofHeight {return false}
    if lhs.error != rhs.error {return false}
    if lhs.relayer != rhs.relayer {return false}
    if lhs.type != rhs.type {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Dymensionxyz_Dymension_Delayedack_RollappPacket.Status: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "PENDING"),
    1: .same(proto: "ACCEPTED"),
    2: .same(proto: "REJECTED"),
  ]
}

extension Dymensionxyz_Dymension_Delayedack_RollappPacket.TypeEnum: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "ON_RECV"),
    1: .same(proto: "ON_ACK"),
    2: .same(proto: "ON_TIMEOUT"),
  ]
}

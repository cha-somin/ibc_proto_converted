//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: zrchain/validation/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the staking Msg service.
///
/// Usage: instantiate `Zrchain_Validation_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Zrchain_Validation_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Zrchain_Validation_MsgClientInterceptorFactoryProtocol? { get }

  func createValidator(
    _ request: Zrchain_Validation_MsgCreateValidator,
    callOptions: CallOptions?
  ) -> UnaryCall<Zrchain_Validation_MsgCreateValidator, Zrchain_Validation_MsgCreateValidatorResponse>

  func editValidator(
    _ request: Zrchain_Validation_MsgEditValidator,
    callOptions: CallOptions?
  ) -> UnaryCall<Zrchain_Validation_MsgEditValidator, Zrchain_Validation_MsgEditValidatorResponse>

  func delegate(
    _ request: Zrchain_Validation_MsgDelegate,
    callOptions: CallOptions?
  ) -> UnaryCall<Zrchain_Validation_MsgDelegate, Zrchain_Validation_MsgDelegateResponse>

  func beginRedelegate(
    _ request: Zrchain_Validation_MsgBeginRedelegate,
    callOptions: CallOptions?
  ) -> UnaryCall<Zrchain_Validation_MsgBeginRedelegate, Zrchain_Validation_MsgBeginRedelegateResponse>

  func undelegate(
    _ request: Zrchain_Validation_MsgUndelegate,
    callOptions: CallOptions?
  ) -> UnaryCall<Zrchain_Validation_MsgUndelegate, Zrchain_Validation_MsgUndelegateResponse>

  func cancelUnbondingDelegation(
    _ request: Zrchain_Validation_MsgCancelUnbondingDelegation,
    callOptions: CallOptions?
  ) -> UnaryCall<Zrchain_Validation_MsgCancelUnbondingDelegation, Zrchain_Validation_MsgCancelUnbondingDelegationResponse>

  func updateParams(
    _ request: Zrchain_Validation_MsgUpdateParams,
    callOptions: CallOptions?
  ) -> UnaryCall<Zrchain_Validation_MsgUpdateParams, Zrchain_Validation_MsgUpdateParamsResponse>

  func updateHVParams(
    _ request: Zrchain_Validation_MsgUpdateHVParams,
    callOptions: CallOptions?
  ) -> UnaryCall<Zrchain_Validation_MsgUpdateHVParams, Zrchain_Validation_MsgUpdateHVParamsResponse>
}

extension Zrchain_Validation_MsgClientProtocol {
  internal var serviceName: String {
    return "zrchain.validation.Msg"
  }

  /// CreateValidator defines a method for creating a new validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateValidator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createValidator(
    _ request: Zrchain_Validation_MsgCreateValidator,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Zrchain_Validation_MsgCreateValidator, Zrchain_Validation_MsgCreateValidatorResponse> {
    return self.makeUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.createValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateValidatorInterceptors() ?? []
    )
  }

  /// EditValidator defines a method for editing an existing validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to EditValidator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func editValidator(
    _ request: Zrchain_Validation_MsgEditValidator,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Zrchain_Validation_MsgEditValidator, Zrchain_Validation_MsgEditValidatorResponse> {
    return self.makeUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.editValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditValidatorInterceptors() ?? []
    )
  }

  /// Delegate defines a method for performing a delegation of coins
  /// from a delegator to a validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to Delegate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func delegate(
    _ request: Zrchain_Validation_MsgDelegate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Zrchain_Validation_MsgDelegate, Zrchain_Validation_MsgDelegateResponse> {
    return self.makeUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.delegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateInterceptors() ?? []
    )
  }

  /// BeginRedelegate defines a method for performing a redelegation
  /// of coins from a delegator and source validator to a destination validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to BeginRedelegate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func beginRedelegate(
    _ request: Zrchain_Validation_MsgBeginRedelegate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Zrchain_Validation_MsgBeginRedelegate, Zrchain_Validation_MsgBeginRedelegateResponse> {
    return self.makeUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.beginRedelegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBeginRedelegateInterceptors() ?? []
    )
  }

  /// Undelegate defines a method for performing an undelegation from a
  /// delegate and a validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to Undelegate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func undelegate(
    _ request: Zrchain_Validation_MsgUndelegate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Zrchain_Validation_MsgUndelegate, Zrchain_Validation_MsgUndelegateResponse> {
    return self.makeUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.undelegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndelegateInterceptors() ?? []
    )
  }

  /// Since: cosmos-sdk 0.46
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelUnbondingDelegation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func cancelUnbondingDelegation(
    _ request: Zrchain_Validation_MsgCancelUnbondingDelegation,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Zrchain_Validation_MsgCancelUnbondingDelegation, Zrchain_Validation_MsgCancelUnbondingDelegationResponse> {
    return self.makeUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.cancelUnbondingDelegation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelUnbondingDelegationInterceptors() ?? []
    )
  }

  /// UpdateParams defines an operation for updating the x/staking module
  /// parameters.
  /// Since: cosmos-sdk 0.47
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateParams.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateParams(
    _ request: Zrchain_Validation_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Zrchain_Validation_MsgUpdateParams, Zrchain_Validation_MsgUpdateParamsResponse> {
    return self.makeUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.updateParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? []
    )
  }

  /// Unary call to UpdateHVParams
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateHVParams.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateHVParams(
    _ request: Zrchain_Validation_MsgUpdateHVParams,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Zrchain_Validation_MsgUpdateHVParams, Zrchain_Validation_MsgUpdateHVParamsResponse> {
    return self.makeUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.updateHVParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateHVParamsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Zrchain_Validation_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Zrchain_Validation_MsgNIOClient")
internal final class Zrchain_Validation_MsgClient: Zrchain_Validation_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Zrchain_Validation_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Zrchain_Validation_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the zrchain.validation.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Zrchain_Validation_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Zrchain_Validation_MsgNIOClient: Zrchain_Validation_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Zrchain_Validation_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the zrchain.validation.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Zrchain_Validation_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the staking Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Zrchain_Validation_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Zrchain_Validation_MsgClientInterceptorFactoryProtocol? { get }

  func makeCreateValidatorCall(
    _ request: Zrchain_Validation_MsgCreateValidator,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgCreateValidator, Zrchain_Validation_MsgCreateValidatorResponse>

  func makeEditValidatorCall(
    _ request: Zrchain_Validation_MsgEditValidator,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgEditValidator, Zrchain_Validation_MsgEditValidatorResponse>

  func makeDelegateCall(
    _ request: Zrchain_Validation_MsgDelegate,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgDelegate, Zrchain_Validation_MsgDelegateResponse>

  func makeBeginRedelegateCall(
    _ request: Zrchain_Validation_MsgBeginRedelegate,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgBeginRedelegate, Zrchain_Validation_MsgBeginRedelegateResponse>

  func makeUndelegateCall(
    _ request: Zrchain_Validation_MsgUndelegate,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgUndelegate, Zrchain_Validation_MsgUndelegateResponse>

  func makeCancelUnbondingDelegationCall(
    _ request: Zrchain_Validation_MsgCancelUnbondingDelegation,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgCancelUnbondingDelegation, Zrchain_Validation_MsgCancelUnbondingDelegationResponse>

  func makeUpdateParamsCall(
    _ request: Zrchain_Validation_MsgUpdateParams,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgUpdateParams, Zrchain_Validation_MsgUpdateParamsResponse>

  func makeUpdateHvparamsCall(
    _ request: Zrchain_Validation_MsgUpdateHVParams,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgUpdateHVParams, Zrchain_Validation_MsgUpdateHVParamsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Zrchain_Validation_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Zrchain_Validation_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Zrchain_Validation_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeCreateValidatorCall(
    _ request: Zrchain_Validation_MsgCreateValidator,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgCreateValidator, Zrchain_Validation_MsgCreateValidatorResponse> {
    return self.makeAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.createValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateValidatorInterceptors() ?? []
    )
  }

  internal func makeEditValidatorCall(
    _ request: Zrchain_Validation_MsgEditValidator,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgEditValidator, Zrchain_Validation_MsgEditValidatorResponse> {
    return self.makeAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.editValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditValidatorInterceptors() ?? []
    )
  }

  internal func makeDelegateCall(
    _ request: Zrchain_Validation_MsgDelegate,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgDelegate, Zrchain_Validation_MsgDelegateResponse> {
    return self.makeAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.delegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateInterceptors() ?? []
    )
  }

  internal func makeBeginRedelegateCall(
    _ request: Zrchain_Validation_MsgBeginRedelegate,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgBeginRedelegate, Zrchain_Validation_MsgBeginRedelegateResponse> {
    return self.makeAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.beginRedelegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBeginRedelegateInterceptors() ?? []
    )
  }

  internal func makeUndelegateCall(
    _ request: Zrchain_Validation_MsgUndelegate,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgUndelegate, Zrchain_Validation_MsgUndelegateResponse> {
    return self.makeAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.undelegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndelegateInterceptors() ?? []
    )
  }

  internal func makeCancelUnbondingDelegationCall(
    _ request: Zrchain_Validation_MsgCancelUnbondingDelegation,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgCancelUnbondingDelegation, Zrchain_Validation_MsgCancelUnbondingDelegationResponse> {
    return self.makeAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.cancelUnbondingDelegation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelUnbondingDelegationInterceptors() ?? []
    )
  }

  internal func makeUpdateParamsCall(
    _ request: Zrchain_Validation_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgUpdateParams, Zrchain_Validation_MsgUpdateParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.updateParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? []
    )
  }

  internal func makeUpdateHvparamsCall(
    _ request: Zrchain_Validation_MsgUpdateHVParams,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Zrchain_Validation_MsgUpdateHVParams, Zrchain_Validation_MsgUpdateHVParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.updateHVParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateHVParamsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Zrchain_Validation_MsgAsyncClientProtocol {
  internal func createValidator(
    _ request: Zrchain_Validation_MsgCreateValidator,
    callOptions: CallOptions? = nil
  ) async throws -> Zrchain_Validation_MsgCreateValidatorResponse {
    return try await self.performAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.createValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateValidatorInterceptors() ?? []
    )
  }

  internal func editValidator(
    _ request: Zrchain_Validation_MsgEditValidator,
    callOptions: CallOptions? = nil
  ) async throws -> Zrchain_Validation_MsgEditValidatorResponse {
    return try await self.performAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.editValidator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditValidatorInterceptors() ?? []
    )
  }

  internal func delegate(
    _ request: Zrchain_Validation_MsgDelegate,
    callOptions: CallOptions? = nil
  ) async throws -> Zrchain_Validation_MsgDelegateResponse {
    return try await self.performAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.delegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateInterceptors() ?? []
    )
  }

  internal func beginRedelegate(
    _ request: Zrchain_Validation_MsgBeginRedelegate,
    callOptions: CallOptions? = nil
  ) async throws -> Zrchain_Validation_MsgBeginRedelegateResponse {
    return try await self.performAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.beginRedelegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBeginRedelegateInterceptors() ?? []
    )
  }

  internal func undelegate(
    _ request: Zrchain_Validation_MsgUndelegate,
    callOptions: CallOptions? = nil
  ) async throws -> Zrchain_Validation_MsgUndelegateResponse {
    return try await self.performAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.undelegate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndelegateInterceptors() ?? []
    )
  }

  internal func cancelUnbondingDelegation(
    _ request: Zrchain_Validation_MsgCancelUnbondingDelegation,
    callOptions: CallOptions? = nil
  ) async throws -> Zrchain_Validation_MsgCancelUnbondingDelegationResponse {
    return try await self.performAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.cancelUnbondingDelegation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelUnbondingDelegationInterceptors() ?? []
    )
  }

  internal func updateParams(
    _ request: Zrchain_Validation_MsgUpdateParams,
    callOptions: CallOptions? = nil
  ) async throws -> Zrchain_Validation_MsgUpdateParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.updateParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? []
    )
  }

  internal func updateHVParams(
    _ request: Zrchain_Validation_MsgUpdateHVParams,
    callOptions: CallOptions? = nil
  ) async throws -> Zrchain_Validation_MsgUpdateHVParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Zrchain_Validation_MsgClientMetadata.Methods.updateHVParams.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateHVParamsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Zrchain_Validation_MsgAsyncClient: Zrchain_Validation_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Zrchain_Validation_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Zrchain_Validation_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Zrchain_Validation_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'createValidator'.
  func makeCreateValidatorInterceptors() -> [ClientInterceptor<Zrchain_Validation_MsgCreateValidator, Zrchain_Validation_MsgCreateValidatorResponse>]

  /// - Returns: Interceptors to use when invoking 'editValidator'.
  func makeEditValidatorInterceptors() -> [ClientInterceptor<Zrchain_Validation_MsgEditValidator, Zrchain_Validation_MsgEditValidatorResponse>]

  /// - Returns: Interceptors to use when invoking 'delegate'.
  func makeDelegateInterceptors() -> [ClientInterceptor<Zrchain_Validation_MsgDelegate, Zrchain_Validation_MsgDelegateResponse>]

  /// - Returns: Interceptors to use when invoking 'beginRedelegate'.
  func makeBeginRedelegateInterceptors() -> [ClientInterceptor<Zrchain_Validation_MsgBeginRedelegate, Zrchain_Validation_MsgBeginRedelegateResponse>]

  /// - Returns: Interceptors to use when invoking 'undelegate'.
  func makeUndelegateInterceptors() -> [ClientInterceptor<Zrchain_Validation_MsgUndelegate, Zrchain_Validation_MsgUndelegateResponse>]

  /// - Returns: Interceptors to use when invoking 'cancelUnbondingDelegation'.
  func makeCancelUnbondingDelegationInterceptors() -> [ClientInterceptor<Zrchain_Validation_MsgCancelUnbondingDelegation, Zrchain_Validation_MsgCancelUnbondingDelegationResponse>]

  /// - Returns: Interceptors to use when invoking 'updateParams'.
  func makeUpdateParamsInterceptors() -> [ClientInterceptor<Zrchain_Validation_MsgUpdateParams, Zrchain_Validation_MsgUpdateParamsResponse>]

  /// - Returns: Interceptors to use when invoking 'updateHVParams'.
  func makeUpdateHVParamsInterceptors() -> [ClientInterceptor<Zrchain_Validation_MsgUpdateHVParams, Zrchain_Validation_MsgUpdateHVParamsResponse>]
}

internal enum Zrchain_Validation_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "zrchain.validation.Msg",
    methods: [
      Zrchain_Validation_MsgClientMetadata.Methods.createValidator,
      Zrchain_Validation_MsgClientMetadata.Methods.editValidator,
      Zrchain_Validation_MsgClientMetadata.Methods.delegate,
      Zrchain_Validation_MsgClientMetadata.Methods.beginRedelegate,
      Zrchain_Validation_MsgClientMetadata.Methods.undelegate,
      Zrchain_Validation_MsgClientMetadata.Methods.cancelUnbondingDelegation,
      Zrchain_Validation_MsgClientMetadata.Methods.updateParams,
      Zrchain_Validation_MsgClientMetadata.Methods.updateHVParams,
    ]
  )

  internal enum Methods {
    internal static let createValidator = GRPCMethodDescriptor(
      name: "CreateValidator",
      path: "/zrchain.validation.Msg/CreateValidator",
      type: GRPCCallType.unary
    )

    internal static let editValidator = GRPCMethodDescriptor(
      name: "EditValidator",
      path: "/zrchain.validation.Msg/EditValidator",
      type: GRPCCallType.unary
    )

    internal static let delegate = GRPCMethodDescriptor(
      name: "Delegate",
      path: "/zrchain.validation.Msg/Delegate",
      type: GRPCCallType.unary
    )

    internal static let beginRedelegate = GRPCMethodDescriptor(
      name: "BeginRedelegate",
      path: "/zrchain.validation.Msg/BeginRedelegate",
      type: GRPCCallType.unary
    )

    internal static let undelegate = GRPCMethodDescriptor(
      name: "Undelegate",
      path: "/zrchain.validation.Msg/Undelegate",
      type: GRPCCallType.unary
    )

    internal static let cancelUnbondingDelegation = GRPCMethodDescriptor(
      name: "CancelUnbondingDelegation",
      path: "/zrchain.validation.Msg/CancelUnbondingDelegation",
      type: GRPCCallType.unary
    )

    internal static let updateParams = GRPCMethodDescriptor(
      name: "UpdateParams",
      path: "/zrchain.validation.Msg/UpdateParams",
      type: GRPCCallType.unary
    )

    internal static let updateHVParams = GRPCMethodDescriptor(
      name: "UpdateHVParams",
      path: "/zrchain.validation.Msg/UpdateHVParams",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the staking Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Zrchain_Validation_MsgProvider: CallHandlerProvider {
  var interceptors: Zrchain_Validation_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateValidator defines a method for creating a new validator.
  func createValidator(request: Zrchain_Validation_MsgCreateValidator, context: StatusOnlyCallContext) -> EventLoopFuture<Zrchain_Validation_MsgCreateValidatorResponse>

  /// EditValidator defines a method for editing an existing validator.
  func editValidator(request: Zrchain_Validation_MsgEditValidator, context: StatusOnlyCallContext) -> EventLoopFuture<Zrchain_Validation_MsgEditValidatorResponse>

  /// Delegate defines a method for performing a delegation of coins
  /// from a delegator to a validator.
  func delegate(request: Zrchain_Validation_MsgDelegate, context: StatusOnlyCallContext) -> EventLoopFuture<Zrchain_Validation_MsgDelegateResponse>

  /// BeginRedelegate defines a method for performing a redelegation
  /// of coins from a delegator and source validator to a destination validator.
  func beginRedelegate(request: Zrchain_Validation_MsgBeginRedelegate, context: StatusOnlyCallContext) -> EventLoopFuture<Zrchain_Validation_MsgBeginRedelegateResponse>

  /// Undelegate defines a method for performing an undelegation from a
  /// delegate and a validator.
  func undelegate(request: Zrchain_Validation_MsgUndelegate, context: StatusOnlyCallContext) -> EventLoopFuture<Zrchain_Validation_MsgUndelegateResponse>

  /// Since: cosmos-sdk 0.46
  func cancelUnbondingDelegation(request: Zrchain_Validation_MsgCancelUnbondingDelegation, context: StatusOnlyCallContext) -> EventLoopFuture<Zrchain_Validation_MsgCancelUnbondingDelegationResponse>

  /// UpdateParams defines an operation for updating the x/staking module
  /// parameters.
  /// Since: cosmos-sdk 0.47
  func updateParams(request: Zrchain_Validation_MsgUpdateParams, context: StatusOnlyCallContext) -> EventLoopFuture<Zrchain_Validation_MsgUpdateParamsResponse>

  func updateHVParams(request: Zrchain_Validation_MsgUpdateHVParams, context: StatusOnlyCallContext) -> EventLoopFuture<Zrchain_Validation_MsgUpdateHVParamsResponse>
}

extension Zrchain_Validation_MsgProvider {
  internal var serviceName: Substring {
    return Zrchain_Validation_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateValidator":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgCreateValidator>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgCreateValidatorResponse>(),
        interceptors: self.interceptors?.makeCreateValidatorInterceptors() ?? [],
        userFunction: self.createValidator(request:context:)
      )

    case "EditValidator":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgEditValidator>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgEditValidatorResponse>(),
        interceptors: self.interceptors?.makeEditValidatorInterceptors() ?? [],
        userFunction: self.editValidator(request:context:)
      )

    case "Delegate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgDelegate>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgDelegateResponse>(),
        interceptors: self.interceptors?.makeDelegateInterceptors() ?? [],
        userFunction: self.delegate(request:context:)
      )

    case "BeginRedelegate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgBeginRedelegate>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgBeginRedelegateResponse>(),
        interceptors: self.interceptors?.makeBeginRedelegateInterceptors() ?? [],
        userFunction: self.beginRedelegate(request:context:)
      )

    case "Undelegate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgUndelegate>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgUndelegateResponse>(),
        interceptors: self.interceptors?.makeUndelegateInterceptors() ?? [],
        userFunction: self.undelegate(request:context:)
      )

    case "CancelUnbondingDelegation":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgCancelUnbondingDelegation>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgCancelUnbondingDelegationResponse>(),
        interceptors: self.interceptors?.makeCancelUnbondingDelegationInterceptors() ?? [],
        userFunction: self.cancelUnbondingDelegation(request:context:)
      )

    case "UpdateParams":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgUpdateParams>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgUpdateParamsResponse>(),
        interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? [],
        userFunction: self.updateParams(request:context:)
      )

    case "UpdateHVParams":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgUpdateHVParams>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgUpdateHVParamsResponse>(),
        interceptors: self.interceptors?.makeUpdateHVParamsInterceptors() ?? [],
        userFunction: self.updateHVParams(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the staking Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Zrchain_Validation_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Zrchain_Validation_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateValidator defines a method for creating a new validator.
  @Sendable func createValidator(
    request: Zrchain_Validation_MsgCreateValidator,
    context: GRPCAsyncServerCallContext
  ) async throws -> Zrchain_Validation_MsgCreateValidatorResponse

  /// EditValidator defines a method for editing an existing validator.
  @Sendable func editValidator(
    request: Zrchain_Validation_MsgEditValidator,
    context: GRPCAsyncServerCallContext
  ) async throws -> Zrchain_Validation_MsgEditValidatorResponse

  /// Delegate defines a method for performing a delegation of coins
  /// from a delegator to a validator.
  @Sendable func delegate(
    request: Zrchain_Validation_MsgDelegate,
    context: GRPCAsyncServerCallContext
  ) async throws -> Zrchain_Validation_MsgDelegateResponse

  /// BeginRedelegate defines a method for performing a redelegation
  /// of coins from a delegator and source validator to a destination validator.
  @Sendable func beginRedelegate(
    request: Zrchain_Validation_MsgBeginRedelegate,
    context: GRPCAsyncServerCallContext
  ) async throws -> Zrchain_Validation_MsgBeginRedelegateResponse

  /// Undelegate defines a method for performing an undelegation from a
  /// delegate and a validator.
  @Sendable func undelegate(
    request: Zrchain_Validation_MsgUndelegate,
    context: GRPCAsyncServerCallContext
  ) async throws -> Zrchain_Validation_MsgUndelegateResponse

  /// Since: cosmos-sdk 0.46
  @Sendable func cancelUnbondingDelegation(
    request: Zrchain_Validation_MsgCancelUnbondingDelegation,
    context: GRPCAsyncServerCallContext
  ) async throws -> Zrchain_Validation_MsgCancelUnbondingDelegationResponse

  /// UpdateParams defines an operation for updating the x/staking module
  /// parameters.
  /// Since: cosmos-sdk 0.47
  @Sendable func updateParams(
    request: Zrchain_Validation_MsgUpdateParams,
    context: GRPCAsyncServerCallContext
  ) async throws -> Zrchain_Validation_MsgUpdateParamsResponse

  @Sendable func updateHVParams(
    request: Zrchain_Validation_MsgUpdateHVParams,
    context: GRPCAsyncServerCallContext
  ) async throws -> Zrchain_Validation_MsgUpdateHVParamsResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Zrchain_Validation_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Zrchain_Validation_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Zrchain_Validation_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Zrchain_Validation_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateValidator":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgCreateValidator>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgCreateValidatorResponse>(),
        interceptors: self.interceptors?.makeCreateValidatorInterceptors() ?? [],
        wrapping: self.createValidator(request:context:)
      )

    case "EditValidator":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgEditValidator>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgEditValidatorResponse>(),
        interceptors: self.interceptors?.makeEditValidatorInterceptors() ?? [],
        wrapping: self.editValidator(request:context:)
      )

    case "Delegate":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgDelegate>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgDelegateResponse>(),
        interceptors: self.interceptors?.makeDelegateInterceptors() ?? [],
        wrapping: self.delegate(request:context:)
      )

    case "BeginRedelegate":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgBeginRedelegate>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgBeginRedelegateResponse>(),
        interceptors: self.interceptors?.makeBeginRedelegateInterceptors() ?? [],
        wrapping: self.beginRedelegate(request:context:)
      )

    case "Undelegate":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgUndelegate>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgUndelegateResponse>(),
        interceptors: self.interceptors?.makeUndelegateInterceptors() ?? [],
        wrapping: self.undelegate(request:context:)
      )

    case "CancelUnbondingDelegation":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgCancelUnbondingDelegation>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgCancelUnbondingDelegationResponse>(),
        interceptors: self.interceptors?.makeCancelUnbondingDelegationInterceptors() ?? [],
        wrapping: self.cancelUnbondingDelegation(request:context:)
      )

    case "UpdateParams":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgUpdateParams>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgUpdateParamsResponse>(),
        interceptors: self.interceptors?.makeUpdateParamsInterceptors() ?? [],
        wrapping: self.updateParams(request:context:)
      )

    case "UpdateHVParams":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Zrchain_Validation_MsgUpdateHVParams>(),
        responseSerializer: ProtobufSerializer<Zrchain_Validation_MsgUpdateHVParamsResponse>(),
        interceptors: self.interceptors?.makeUpdateHVParamsInterceptors() ?? [],
        wrapping: self.updateHVParams(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Zrchain_Validation_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'createValidator'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateValidatorInterceptors() -> [ServerInterceptor<Zrchain_Validation_MsgCreateValidator, Zrchain_Validation_MsgCreateValidatorResponse>]

  /// - Returns: Interceptors to use when handling 'editValidator'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEditValidatorInterceptors() -> [ServerInterceptor<Zrchain_Validation_MsgEditValidator, Zrchain_Validation_MsgEditValidatorResponse>]

  /// - Returns: Interceptors to use when handling 'delegate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDelegateInterceptors() -> [ServerInterceptor<Zrchain_Validation_MsgDelegate, Zrchain_Validation_MsgDelegateResponse>]

  /// - Returns: Interceptors to use when handling 'beginRedelegate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBeginRedelegateInterceptors() -> [ServerInterceptor<Zrchain_Validation_MsgBeginRedelegate, Zrchain_Validation_MsgBeginRedelegateResponse>]

  /// - Returns: Interceptors to use when handling 'undelegate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUndelegateInterceptors() -> [ServerInterceptor<Zrchain_Validation_MsgUndelegate, Zrchain_Validation_MsgUndelegateResponse>]

  /// - Returns: Interceptors to use when handling 'cancelUnbondingDelegation'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelUnbondingDelegationInterceptors() -> [ServerInterceptor<Zrchain_Validation_MsgCancelUnbondingDelegation, Zrchain_Validation_MsgCancelUnbondingDelegationResponse>]

  /// - Returns: Interceptors to use when handling 'updateParams'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateParamsInterceptors() -> [ServerInterceptor<Zrchain_Validation_MsgUpdateParams, Zrchain_Validation_MsgUpdateParamsResponse>]

  /// - Returns: Interceptors to use when handling 'updateHVParams'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateHVParamsInterceptors() -> [ServerInterceptor<Zrchain_Validation_MsgUpdateHVParams, Zrchain_Validation_MsgUpdateHVParamsResponse>]
}

internal enum Zrchain_Validation_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "zrchain.validation.Msg",
    methods: [
      Zrchain_Validation_MsgServerMetadata.Methods.createValidator,
      Zrchain_Validation_MsgServerMetadata.Methods.editValidator,
      Zrchain_Validation_MsgServerMetadata.Methods.delegate,
      Zrchain_Validation_MsgServerMetadata.Methods.beginRedelegate,
      Zrchain_Validation_MsgServerMetadata.Methods.undelegate,
      Zrchain_Validation_MsgServerMetadata.Methods.cancelUnbondingDelegation,
      Zrchain_Validation_MsgServerMetadata.Methods.updateParams,
      Zrchain_Validation_MsgServerMetadata.Methods.updateHVParams,
    ]
  )

  internal enum Methods {
    internal static let createValidator = GRPCMethodDescriptor(
      name: "CreateValidator",
      path: "/zrchain.validation.Msg/CreateValidator",
      type: GRPCCallType.unary
    )

    internal static let editValidator = GRPCMethodDescriptor(
      name: "EditValidator",
      path: "/zrchain.validation.Msg/EditValidator",
      type: GRPCCallType.unary
    )

    internal static let delegate = GRPCMethodDescriptor(
      name: "Delegate",
      path: "/zrchain.validation.Msg/Delegate",
      type: GRPCCallType.unary
    )

    internal static let beginRedelegate = GRPCMethodDescriptor(
      name: "BeginRedelegate",
      path: "/zrchain.validation.Msg/BeginRedelegate",
      type: GRPCCallType.unary
    )

    internal static let undelegate = GRPCMethodDescriptor(
      name: "Undelegate",
      path: "/zrchain.validation.Msg/Undelegate",
      type: GRPCCallType.unary
    )

    internal static let cancelUnbondingDelegation = GRPCMethodDescriptor(
      name: "CancelUnbondingDelegation",
      path: "/zrchain.validation.Msg/CancelUnbondingDelegation",
      type: GRPCCallType.unary
    )

    internal static let updateParams = GRPCMethodDescriptor(
      name: "UpdateParams",
      path: "/zrchain.validation.Msg/UpdateParams",
      type: GRPCCallType.unary
    )

    internal static let updateHVParams = GRPCMethodDescriptor(
      name: "UpdateHVParams",
      path: "/zrchain.validation.Msg/UpdateHVParams",
      type: GRPCCallType.unary
    )
  }
}

//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: confio/poe/v1beta1/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Query defines the gRPC querier service.
///
/// Usage: instantiate `Confio_Poe_V1beta1_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Confio_Poe_V1beta1_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Confio_Poe_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func contractAddress(
    _ request: Confio_Poe_V1beta1_QueryContractAddressRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Confio_Poe_V1beta1_QueryContractAddressRequest, Confio_Poe_V1beta1_QueryContractAddressResponse>

  func validators(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryValidatorsRequest, Cosmos_Staking_V1beta1_QueryValidatorsResponse>

  func validator(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryValidatorRequest, Cosmos_Staking_V1beta1_QueryValidatorResponse>

  func unbondingPeriod(
    _ request: Confio_Poe_V1beta1_QueryUnbondingPeriodRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Confio_Poe_V1beta1_QueryUnbondingPeriodRequest, Confio_Poe_V1beta1_QueryUnbondingPeriodResponse>

  func validatorDelegation(
    _ request: Confio_Poe_V1beta1_QueryValidatorDelegationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Confio_Poe_V1beta1_QueryValidatorDelegationRequest, Confio_Poe_V1beta1_QueryValidatorDelegationResponse>

  func validatorUnbondingDelegations(
    _ request: Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest, Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsResponse>

  func historicalInfo(
    _ request: Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest, Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse>

  func validatorOutstandingReward(
    _ request: Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest, Confio_Poe_V1beta1_QueryValidatorOutstandingRewardResponse>

  func validatorEngagementReward(
    _ request: Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest, Confio_Poe_V1beta1_QueryValidatorEngagementRewardResponse>
}

extension Confio_Poe_V1beta1_QueryClientProtocol {
  internal var serviceName: String {
    return "confio.poe.v1beta1.Query"
  }

  /// ContractAddress queries the address for one of the PoE contracts
  ///
  /// - Parameters:
  ///   - request: Request to send to ContractAddress.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func contractAddress(
    _ request: Confio_Poe_V1beta1_QueryContractAddressRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Confio_Poe_V1beta1_QueryContractAddressRequest, Confio_Poe_V1beta1_QueryContractAddressResponse> {
    return self.makeUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.contractAddress.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeContractAddressInterceptors() ?? []
    )
  }

  /// Validators queries all validators that match the given status.
  ///
  /// - Parameters:
  ///   - request: Request to send to Validators.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func validators(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryValidatorsRequest, Cosmos_Staking_V1beta1_QueryValidatorsResponse> {
    return self.makeUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validators.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorsInterceptors() ?? []
    )
  }

  /// Validator queries validator info for given validator address.
  ///
  /// - Parameters:
  ///   - request: Request to send to Validator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func validator(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryValidatorRequest, Cosmos_Staking_V1beta1_QueryValidatorResponse> {
    return self.makeUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorInterceptors() ?? []
    )
  }

  /// Validator queries validator info for given validator address.
  ///
  /// - Parameters:
  ///   - request: Request to send to UnbondingPeriod.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func unbondingPeriod(
    _ request: Confio_Poe_V1beta1_QueryUnbondingPeriodRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Confio_Poe_V1beta1_QueryUnbondingPeriodRequest, Confio_Poe_V1beta1_QueryUnbondingPeriodResponse> {
    return self.makeUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.unbondingPeriod.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbondingPeriodInterceptors() ?? []
    )
  }

  /// ValidatorDelegation queries self delegated amount for given validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to ValidatorDelegation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func validatorDelegation(
    _ request: Confio_Poe_V1beta1_QueryValidatorDelegationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Confio_Poe_V1beta1_QueryValidatorDelegationRequest, Confio_Poe_V1beta1_QueryValidatorDelegationResponse> {
    return self.makeUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorDelegation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorDelegationInterceptors() ?? []
    )
  }

  /// ValidatorUnbondingDelegations queries unbonding delegations of a validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to ValidatorUnbondingDelegations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func validatorUnbondingDelegations(
    _ request: Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest, Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsResponse> {
    return self.makeUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorUnbondingDelegations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorUnbondingDelegationsInterceptors() ?? []
    )
  }

  /// HistoricalInfo queries the historical info for given height.
  ///
  /// - Parameters:
  ///   - request: Request to send to HistoricalInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func historicalInfo(
    _ request: Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest, Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse> {
    return self.makeUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.historicalInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHistoricalInfoInterceptors() ?? []
    )
  }

  /// ValidatorOutstandingRewards queries rewards of a validator address.
  ///
  /// - Parameters:
  ///   - request: Request to send to ValidatorOutstandingReward.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func validatorOutstandingReward(
    _ request: Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest, Confio_Poe_V1beta1_QueryValidatorOutstandingRewardResponse> {
    return self.makeUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorOutstandingReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorOutstandingRewardInterceptors() ?? []
    )
  }

  /// ValidatorEngagementReward queries rewards of a validator address.
  ///
  /// - Parameters:
  ///   - request: Request to send to ValidatorEngagementReward.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func validatorEngagementReward(
    _ request: Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest, Confio_Poe_V1beta1_QueryValidatorEngagementRewardResponse> {
    return self.makeUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorEngagementReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorEngagementRewardInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Confio_Poe_V1beta1_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Confio_Poe_V1beta1_QueryNIOClient")
internal final class Confio_Poe_V1beta1_QueryClient: Confio_Poe_V1beta1_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Confio_Poe_V1beta1_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Confio_Poe_V1beta1_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the confio.poe.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Confio_Poe_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Confio_Poe_V1beta1_QueryNIOClient: Confio_Poe_V1beta1_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Confio_Poe_V1beta1_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the confio.poe.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Confio_Poe_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Query defines the gRPC querier service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Confio_Poe_V1beta1_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Confio_Poe_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func makeContractAddressCall(
    _ request: Confio_Poe_V1beta1_QueryContractAddressRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Confio_Poe_V1beta1_QueryContractAddressRequest, Confio_Poe_V1beta1_QueryContractAddressResponse>

  func makeValidatorsCall(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cosmos_Staking_V1beta1_QueryValidatorsRequest, Cosmos_Staking_V1beta1_QueryValidatorsResponse>

  func makeValidatorCall(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cosmos_Staking_V1beta1_QueryValidatorRequest, Cosmos_Staking_V1beta1_QueryValidatorResponse>

  func makeUnbondingPeriodCall(
    _ request: Confio_Poe_V1beta1_QueryUnbondingPeriodRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Confio_Poe_V1beta1_QueryUnbondingPeriodRequest, Confio_Poe_V1beta1_QueryUnbondingPeriodResponse>

  func makeValidatorDelegationCall(
    _ request: Confio_Poe_V1beta1_QueryValidatorDelegationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Confio_Poe_V1beta1_QueryValidatorDelegationRequest, Confio_Poe_V1beta1_QueryValidatorDelegationResponse>

  func makeValidatorUnbondingDelegationsCall(
    _ request: Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest, Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsResponse>

  func makeHistoricalInfoCall(
    _ request: Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest, Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse>

  func makeValidatorOutstandingRewardCall(
    _ request: Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest, Confio_Poe_V1beta1_QueryValidatorOutstandingRewardResponse>

  func makeValidatorEngagementRewardCall(
    _ request: Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest, Confio_Poe_V1beta1_QueryValidatorEngagementRewardResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Confio_Poe_V1beta1_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Confio_Poe_V1beta1_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Confio_Poe_V1beta1_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeContractAddressCall(
    _ request: Confio_Poe_V1beta1_QueryContractAddressRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Confio_Poe_V1beta1_QueryContractAddressRequest, Confio_Poe_V1beta1_QueryContractAddressResponse> {
    return self.makeAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.contractAddress.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeContractAddressInterceptors() ?? []
    )
  }

  internal func makeValidatorsCall(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cosmos_Staking_V1beta1_QueryValidatorsRequest, Cosmos_Staking_V1beta1_QueryValidatorsResponse> {
    return self.makeAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validators.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorsInterceptors() ?? []
    )
  }

  internal func makeValidatorCall(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cosmos_Staking_V1beta1_QueryValidatorRequest, Cosmos_Staking_V1beta1_QueryValidatorResponse> {
    return self.makeAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorInterceptors() ?? []
    )
  }

  internal func makeUnbondingPeriodCall(
    _ request: Confio_Poe_V1beta1_QueryUnbondingPeriodRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Confio_Poe_V1beta1_QueryUnbondingPeriodRequest, Confio_Poe_V1beta1_QueryUnbondingPeriodResponse> {
    return self.makeAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.unbondingPeriod.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbondingPeriodInterceptors() ?? []
    )
  }

  internal func makeValidatorDelegationCall(
    _ request: Confio_Poe_V1beta1_QueryValidatorDelegationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Confio_Poe_V1beta1_QueryValidatorDelegationRequest, Confio_Poe_V1beta1_QueryValidatorDelegationResponse> {
    return self.makeAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorDelegation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorDelegationInterceptors() ?? []
    )
  }

  internal func makeValidatorUnbondingDelegationsCall(
    _ request: Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest, Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsResponse> {
    return self.makeAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorUnbondingDelegations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorUnbondingDelegationsInterceptors() ?? []
    )
  }

  internal func makeHistoricalInfoCall(
    _ request: Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest, Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse> {
    return self.makeAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.historicalInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHistoricalInfoInterceptors() ?? []
    )
  }

  internal func makeValidatorOutstandingRewardCall(
    _ request: Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest, Confio_Poe_V1beta1_QueryValidatorOutstandingRewardResponse> {
    return self.makeAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorOutstandingReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorOutstandingRewardInterceptors() ?? []
    )
  }

  internal func makeValidatorEngagementRewardCall(
    _ request: Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest, Confio_Poe_V1beta1_QueryValidatorEngagementRewardResponse> {
    return self.makeAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorEngagementReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorEngagementRewardInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Confio_Poe_V1beta1_QueryAsyncClientProtocol {
  internal func contractAddress(
    _ request: Confio_Poe_V1beta1_QueryContractAddressRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Confio_Poe_V1beta1_QueryContractAddressResponse {
    return try await self.performAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.contractAddress.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeContractAddressInterceptors() ?? []
    )
  }

  internal func validators(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Cosmos_Staking_V1beta1_QueryValidatorsResponse {
    return try await self.performAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validators.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorsInterceptors() ?? []
    )
  }

  internal func validator(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Cosmos_Staking_V1beta1_QueryValidatorResponse {
    return try await self.performAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validator.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorInterceptors() ?? []
    )
  }

  internal func unbondingPeriod(
    _ request: Confio_Poe_V1beta1_QueryUnbondingPeriodRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Confio_Poe_V1beta1_QueryUnbondingPeriodResponse {
    return try await self.performAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.unbondingPeriod.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbondingPeriodInterceptors() ?? []
    )
  }

  internal func validatorDelegation(
    _ request: Confio_Poe_V1beta1_QueryValidatorDelegationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Confio_Poe_V1beta1_QueryValidatorDelegationResponse {
    return try await self.performAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorDelegation.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorDelegationInterceptors() ?? []
    )
  }

  internal func validatorUnbondingDelegations(
    _ request: Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsResponse {
    return try await self.performAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorUnbondingDelegations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorUnbondingDelegationsInterceptors() ?? []
    )
  }

  internal func historicalInfo(
    _ request: Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse {
    return try await self.performAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.historicalInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHistoricalInfoInterceptors() ?? []
    )
  }

  internal func validatorOutstandingReward(
    _ request: Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Confio_Poe_V1beta1_QueryValidatorOutstandingRewardResponse {
    return try await self.performAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorOutstandingReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorOutstandingRewardInterceptors() ?? []
    )
  }

  internal func validatorEngagementReward(
    _ request: Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Confio_Poe_V1beta1_QueryValidatorEngagementRewardResponse {
    return try await self.performAsyncUnaryCall(
      path: Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorEngagementReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorEngagementRewardInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Confio_Poe_V1beta1_QueryAsyncClient: Confio_Poe_V1beta1_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Confio_Poe_V1beta1_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Confio_Poe_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Confio_Poe_V1beta1_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'contractAddress'.
  func makeContractAddressInterceptors() -> [ClientInterceptor<Confio_Poe_V1beta1_QueryContractAddressRequest, Confio_Poe_V1beta1_QueryContractAddressResponse>]

  /// - Returns: Interceptors to use when invoking 'validators'.
  func makeValidatorsInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryValidatorsRequest, Cosmos_Staking_V1beta1_QueryValidatorsResponse>]

  /// - Returns: Interceptors to use when invoking 'validator'.
  func makeValidatorInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryValidatorRequest, Cosmos_Staking_V1beta1_QueryValidatorResponse>]

  /// - Returns: Interceptors to use when invoking 'unbondingPeriod'.
  func makeUnbondingPeriodInterceptors() -> [ClientInterceptor<Confio_Poe_V1beta1_QueryUnbondingPeriodRequest, Confio_Poe_V1beta1_QueryUnbondingPeriodResponse>]

  /// - Returns: Interceptors to use when invoking 'validatorDelegation'.
  func makeValidatorDelegationInterceptors() -> [ClientInterceptor<Confio_Poe_V1beta1_QueryValidatorDelegationRequest, Confio_Poe_V1beta1_QueryValidatorDelegationResponse>]

  /// - Returns: Interceptors to use when invoking 'validatorUnbondingDelegations'.
  func makeValidatorUnbondingDelegationsInterceptors() -> [ClientInterceptor<Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest, Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsResponse>]

  /// - Returns: Interceptors to use when invoking 'historicalInfo'.
  func makeHistoricalInfoInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest, Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse>]

  /// - Returns: Interceptors to use when invoking 'validatorOutstandingReward'.
  func makeValidatorOutstandingRewardInterceptors() -> [ClientInterceptor<Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest, Confio_Poe_V1beta1_QueryValidatorOutstandingRewardResponse>]

  /// - Returns: Interceptors to use when invoking 'validatorEngagementReward'.
  func makeValidatorEngagementRewardInterceptors() -> [ClientInterceptor<Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest, Confio_Poe_V1beta1_QueryValidatorEngagementRewardResponse>]
}

internal enum Confio_Poe_V1beta1_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "confio.poe.v1beta1.Query",
    methods: [
      Confio_Poe_V1beta1_QueryClientMetadata.Methods.contractAddress,
      Confio_Poe_V1beta1_QueryClientMetadata.Methods.validators,
      Confio_Poe_V1beta1_QueryClientMetadata.Methods.validator,
      Confio_Poe_V1beta1_QueryClientMetadata.Methods.unbondingPeriod,
      Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorDelegation,
      Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorUnbondingDelegations,
      Confio_Poe_V1beta1_QueryClientMetadata.Methods.historicalInfo,
      Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorOutstandingReward,
      Confio_Poe_V1beta1_QueryClientMetadata.Methods.validatorEngagementReward,
    ]
  )

  internal enum Methods {
    internal static let contractAddress = GRPCMethodDescriptor(
      name: "ContractAddress",
      path: "/confio.poe.v1beta1.Query/ContractAddress",
      type: GRPCCallType.unary
    )

    internal static let validators = GRPCMethodDescriptor(
      name: "Validators",
      path: "/confio.poe.v1beta1.Query/Validators",
      type: GRPCCallType.unary
    )

    internal static let validator = GRPCMethodDescriptor(
      name: "Validator",
      path: "/confio.poe.v1beta1.Query/Validator",
      type: GRPCCallType.unary
    )

    internal static let unbondingPeriod = GRPCMethodDescriptor(
      name: "UnbondingPeriod",
      path: "/confio.poe.v1beta1.Query/UnbondingPeriod",
      type: GRPCCallType.unary
    )

    internal static let validatorDelegation = GRPCMethodDescriptor(
      name: "ValidatorDelegation",
      path: "/confio.poe.v1beta1.Query/ValidatorDelegation",
      type: GRPCCallType.unary
    )

    internal static let validatorUnbondingDelegations = GRPCMethodDescriptor(
      name: "ValidatorUnbondingDelegations",
      path: "/confio.poe.v1beta1.Query/ValidatorUnbondingDelegations",
      type: GRPCCallType.unary
    )

    internal static let historicalInfo = GRPCMethodDescriptor(
      name: "HistoricalInfo",
      path: "/confio.poe.v1beta1.Query/HistoricalInfo",
      type: GRPCCallType.unary
    )

    internal static let validatorOutstandingReward = GRPCMethodDescriptor(
      name: "ValidatorOutstandingReward",
      path: "/confio.poe.v1beta1.Query/ValidatorOutstandingReward",
      type: GRPCCallType.unary
    )

    internal static let validatorEngagementReward = GRPCMethodDescriptor(
      name: "ValidatorEngagementReward",
      path: "/confio.poe.v1beta1.Query/ValidatorEngagementReward",
      type: GRPCCallType.unary
    )
  }
}

/// Query defines the gRPC querier service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Confio_Poe_V1beta1_QueryProvider: CallHandlerProvider {
  var interceptors: Confio_Poe_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  /// ContractAddress queries the address for one of the PoE contracts
  func contractAddress(request: Confio_Poe_V1beta1_QueryContractAddressRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Confio_Poe_V1beta1_QueryContractAddressResponse>

  /// Validators queries all validators that match the given status.
  func validators(request: Cosmos_Staking_V1beta1_QueryValidatorsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmos_Staking_V1beta1_QueryValidatorsResponse>

  /// Validator queries validator info for given validator address.
  func validator(request: Cosmos_Staking_V1beta1_QueryValidatorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmos_Staking_V1beta1_QueryValidatorResponse>

  /// Validator queries validator info for given validator address.
  func unbondingPeriod(request: Confio_Poe_V1beta1_QueryUnbondingPeriodRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Confio_Poe_V1beta1_QueryUnbondingPeriodResponse>

  /// ValidatorDelegation queries self delegated amount for given validator.
  func validatorDelegation(request: Confio_Poe_V1beta1_QueryValidatorDelegationRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Confio_Poe_V1beta1_QueryValidatorDelegationResponse>

  /// ValidatorUnbondingDelegations queries unbonding delegations of a validator.
  func validatorUnbondingDelegations(request: Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsResponse>

  /// HistoricalInfo queries the historical info for given height.
  func historicalInfo(request: Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse>

  /// ValidatorOutstandingRewards queries rewards of a validator address.
  func validatorOutstandingReward(request: Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Confio_Poe_V1beta1_QueryValidatorOutstandingRewardResponse>

  /// ValidatorEngagementReward queries rewards of a validator address.
  func validatorEngagementReward(request: Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Confio_Poe_V1beta1_QueryValidatorEngagementRewardResponse>
}

extension Confio_Poe_V1beta1_QueryProvider {
  internal var serviceName: Substring {
    return Confio_Poe_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "ContractAddress":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Confio_Poe_V1beta1_QueryContractAddressRequest>(),
        responseSerializer: ProtobufSerializer<Confio_Poe_V1beta1_QueryContractAddressResponse>(),
        interceptors: self.interceptors?.makeContractAddressInterceptors() ?? [],
        userFunction: self.contractAddress(request:context:)
      )

    case "Validators":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmos_Staking_V1beta1_QueryValidatorsRequest>(),
        responseSerializer: ProtobufSerializer<Cosmos_Staking_V1beta1_QueryValidatorsResponse>(),
        interceptors: self.interceptors?.makeValidatorsInterceptors() ?? [],
        userFunction: self.validators(request:context:)
      )

    case "Validator":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmos_Staking_V1beta1_QueryValidatorRequest>(),
        responseSerializer: ProtobufSerializer<Cosmos_Staking_V1beta1_QueryValidatorResponse>(),
        interceptors: self.interceptors?.makeValidatorInterceptors() ?? [],
        userFunction: self.validator(request:context:)
      )

    case "UnbondingPeriod":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Confio_Poe_V1beta1_QueryUnbondingPeriodRequest>(),
        responseSerializer: ProtobufSerializer<Confio_Poe_V1beta1_QueryUnbondingPeriodResponse>(),
        interceptors: self.interceptors?.makeUnbondingPeriodInterceptors() ?? [],
        userFunction: self.unbondingPeriod(request:context:)
      )

    case "ValidatorDelegation":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Confio_Poe_V1beta1_QueryValidatorDelegationRequest>(),
        responseSerializer: ProtobufSerializer<Confio_Poe_V1beta1_QueryValidatorDelegationResponse>(),
        interceptors: self.interceptors?.makeValidatorDelegationInterceptors() ?? [],
        userFunction: self.validatorDelegation(request:context:)
      )

    case "ValidatorUnbondingDelegations":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest>(),
        responseSerializer: ProtobufSerializer<Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsResponse>(),
        interceptors: self.interceptors?.makeValidatorUnbondingDelegationsInterceptors() ?? [],
        userFunction: self.validatorUnbondingDelegations(request:context:)
      )

    case "HistoricalInfo":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest>(),
        responseSerializer: ProtobufSerializer<Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse>(),
        interceptors: self.interceptors?.makeHistoricalInfoInterceptors() ?? [],
        userFunction: self.historicalInfo(request:context:)
      )

    case "ValidatorOutstandingReward":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest>(),
        responseSerializer: ProtobufSerializer<Confio_Poe_V1beta1_QueryValidatorOutstandingRewardResponse>(),
        interceptors: self.interceptors?.makeValidatorOutstandingRewardInterceptors() ?? [],
        userFunction: self.validatorOutstandingReward(request:context:)
      )

    case "ValidatorEngagementReward":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest>(),
        responseSerializer: ProtobufSerializer<Confio_Poe_V1beta1_QueryValidatorEngagementRewardResponse>(),
        interceptors: self.interceptors?.makeValidatorEngagementRewardInterceptors() ?? [],
        userFunction: self.validatorEngagementReward(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Query defines the gRPC querier service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Confio_Poe_V1beta1_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Confio_Poe_V1beta1_QueryServerInterceptorFactoryProtocol? { get }

  /// ContractAddress queries the address for one of the PoE contracts
  @Sendable func contractAddress(
    request: Confio_Poe_V1beta1_QueryContractAddressRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Confio_Poe_V1beta1_QueryContractAddressResponse

  /// Validators queries all validators that match the given status.
  @Sendable func validators(
    request: Cosmos_Staking_V1beta1_QueryValidatorsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cosmos_Staking_V1beta1_QueryValidatorsResponse

  /// Validator queries validator info for given validator address.
  @Sendable func validator(
    request: Cosmos_Staking_V1beta1_QueryValidatorRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cosmos_Staking_V1beta1_QueryValidatorResponse

  /// Validator queries validator info for given validator address.
  @Sendable func unbondingPeriod(
    request: Confio_Poe_V1beta1_QueryUnbondingPeriodRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Confio_Poe_V1beta1_QueryUnbondingPeriodResponse

  /// ValidatorDelegation queries self delegated amount for given validator.
  @Sendable func validatorDelegation(
    request: Confio_Poe_V1beta1_QueryValidatorDelegationRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Confio_Poe_V1beta1_QueryValidatorDelegationResponse

  /// ValidatorUnbondingDelegations queries unbonding delegations of a validator.
  @Sendable func validatorUnbondingDelegations(
    request: Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsResponse

  /// HistoricalInfo queries the historical info for given height.
  @Sendable func historicalInfo(
    request: Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse

  /// ValidatorOutstandingRewards queries rewards of a validator address.
  @Sendable func validatorOutstandingReward(
    request: Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Confio_Poe_V1beta1_QueryValidatorOutstandingRewardResponse

  /// ValidatorEngagementReward queries rewards of a validator address.
  @Sendable func validatorEngagementReward(
    request: Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Confio_Poe_V1beta1_QueryValidatorEngagementRewardResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Confio_Poe_V1beta1_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Confio_Poe_V1beta1_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Confio_Poe_V1beta1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Confio_Poe_V1beta1_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "ContractAddress":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Confio_Poe_V1beta1_QueryContractAddressRequest>(),
        responseSerializer: ProtobufSerializer<Confio_Poe_V1beta1_QueryContractAddressResponse>(),
        interceptors: self.interceptors?.makeContractAddressInterceptors() ?? [],
        wrapping: self.contractAddress(request:context:)
      )

    case "Validators":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmos_Staking_V1beta1_QueryValidatorsRequest>(),
        responseSerializer: ProtobufSerializer<Cosmos_Staking_V1beta1_QueryValidatorsResponse>(),
        interceptors: self.interceptors?.makeValidatorsInterceptors() ?? [],
        wrapping: self.validators(request:context:)
      )

    case "Validator":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmos_Staking_V1beta1_QueryValidatorRequest>(),
        responseSerializer: ProtobufSerializer<Cosmos_Staking_V1beta1_QueryValidatorResponse>(),
        interceptors: self.interceptors?.makeValidatorInterceptors() ?? [],
        wrapping: self.validator(request:context:)
      )

    case "UnbondingPeriod":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Confio_Poe_V1beta1_QueryUnbondingPeriodRequest>(),
        responseSerializer: ProtobufSerializer<Confio_Poe_V1beta1_QueryUnbondingPeriodResponse>(),
        interceptors: self.interceptors?.makeUnbondingPeriodInterceptors() ?? [],
        wrapping: self.unbondingPeriod(request:context:)
      )

    case "ValidatorDelegation":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Confio_Poe_V1beta1_QueryValidatorDelegationRequest>(),
        responseSerializer: ProtobufSerializer<Confio_Poe_V1beta1_QueryValidatorDelegationResponse>(),
        interceptors: self.interceptors?.makeValidatorDelegationInterceptors() ?? [],
        wrapping: self.validatorDelegation(request:context:)
      )

    case "ValidatorUnbondingDelegations":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest>(),
        responseSerializer: ProtobufSerializer<Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsResponse>(),
        interceptors: self.interceptors?.makeValidatorUnbondingDelegationsInterceptors() ?? [],
        wrapping: self.validatorUnbondingDelegations(request:context:)
      )

    case "HistoricalInfo":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest>(),
        responseSerializer: ProtobufSerializer<Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse>(),
        interceptors: self.interceptors?.makeHistoricalInfoInterceptors() ?? [],
        wrapping: self.historicalInfo(request:context:)
      )

    case "ValidatorOutstandingReward":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest>(),
        responseSerializer: ProtobufSerializer<Confio_Poe_V1beta1_QueryValidatorOutstandingRewardResponse>(),
        interceptors: self.interceptors?.makeValidatorOutstandingRewardInterceptors() ?? [],
        wrapping: self.validatorOutstandingReward(request:context:)
      )

    case "ValidatorEngagementReward":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest>(),
        responseSerializer: ProtobufSerializer<Confio_Poe_V1beta1_QueryValidatorEngagementRewardResponse>(),
        interceptors: self.interceptors?.makeValidatorEngagementRewardInterceptors() ?? [],
        wrapping: self.validatorEngagementReward(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Confio_Poe_V1beta1_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'contractAddress'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeContractAddressInterceptors() -> [ServerInterceptor<Confio_Poe_V1beta1_QueryContractAddressRequest, Confio_Poe_V1beta1_QueryContractAddressResponse>]

  /// - Returns: Interceptors to use when handling 'validators'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeValidatorsInterceptors() -> [ServerInterceptor<Cosmos_Staking_V1beta1_QueryValidatorsRequest, Cosmos_Staking_V1beta1_QueryValidatorsResponse>]

  /// - Returns: Interceptors to use when handling 'validator'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeValidatorInterceptors() -> [ServerInterceptor<Cosmos_Staking_V1beta1_QueryValidatorRequest, Cosmos_Staking_V1beta1_QueryValidatorResponse>]

  /// - Returns: Interceptors to use when handling 'unbondingPeriod'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUnbondingPeriodInterceptors() -> [ServerInterceptor<Confio_Poe_V1beta1_QueryUnbondingPeriodRequest, Confio_Poe_V1beta1_QueryUnbondingPeriodResponse>]

  /// - Returns: Interceptors to use when handling 'validatorDelegation'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeValidatorDelegationInterceptors() -> [ServerInterceptor<Confio_Poe_V1beta1_QueryValidatorDelegationRequest, Confio_Poe_V1beta1_QueryValidatorDelegationResponse>]

  /// - Returns: Interceptors to use when handling 'validatorUnbondingDelegations'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeValidatorUnbondingDelegationsInterceptors() -> [ServerInterceptor<Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsRequest, Confio_Poe_V1beta1_QueryValidatorUnbondingDelegationsResponse>]

  /// - Returns: Interceptors to use when handling 'historicalInfo'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeHistoricalInfoInterceptors() -> [ServerInterceptor<Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest, Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse>]

  /// - Returns: Interceptors to use when handling 'validatorOutstandingReward'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeValidatorOutstandingRewardInterceptors() -> [ServerInterceptor<Confio_Poe_V1beta1_QueryValidatorOutstandingRewardRequest, Confio_Poe_V1beta1_QueryValidatorOutstandingRewardResponse>]

  /// - Returns: Interceptors to use when handling 'validatorEngagementReward'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeValidatorEngagementRewardInterceptors() -> [ServerInterceptor<Confio_Poe_V1beta1_QueryValidatorEngagementRewardRequest, Confio_Poe_V1beta1_QueryValidatorEngagementRewardResponse>]
}

internal enum Confio_Poe_V1beta1_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "confio.poe.v1beta1.Query",
    methods: [
      Confio_Poe_V1beta1_QueryServerMetadata.Methods.contractAddress,
      Confio_Poe_V1beta1_QueryServerMetadata.Methods.validators,
      Confio_Poe_V1beta1_QueryServerMetadata.Methods.validator,
      Confio_Poe_V1beta1_QueryServerMetadata.Methods.unbondingPeriod,
      Confio_Poe_V1beta1_QueryServerMetadata.Methods.validatorDelegation,
      Confio_Poe_V1beta1_QueryServerMetadata.Methods.validatorUnbondingDelegations,
      Confio_Poe_V1beta1_QueryServerMetadata.Methods.historicalInfo,
      Confio_Poe_V1beta1_QueryServerMetadata.Methods.validatorOutstandingReward,
      Confio_Poe_V1beta1_QueryServerMetadata.Methods.validatorEngagementReward,
    ]
  )

  internal enum Methods {
    internal static let contractAddress = GRPCMethodDescriptor(
      name: "ContractAddress",
      path: "/confio.poe.v1beta1.Query/ContractAddress",
      type: GRPCCallType.unary
    )

    internal static let validators = GRPCMethodDescriptor(
      name: "Validators",
      path: "/confio.poe.v1beta1.Query/Validators",
      type: GRPCCallType.unary
    )

    internal static let validator = GRPCMethodDescriptor(
      name: "Validator",
      path: "/confio.poe.v1beta1.Query/Validator",
      type: GRPCCallType.unary
    )

    internal static let unbondingPeriod = GRPCMethodDescriptor(
      name: "UnbondingPeriod",
      path: "/confio.poe.v1beta1.Query/UnbondingPeriod",
      type: GRPCCallType.unary
    )

    internal static let validatorDelegation = GRPCMethodDescriptor(
      name: "ValidatorDelegation",
      path: "/confio.poe.v1beta1.Query/ValidatorDelegation",
      type: GRPCCallType.unary
    )

    internal static let validatorUnbondingDelegations = GRPCMethodDescriptor(
      name: "ValidatorUnbondingDelegations",
      path: "/confio.poe.v1beta1.Query/ValidatorUnbondingDelegations",
      type: GRPCCallType.unary
    )

    internal static let historicalInfo = GRPCMethodDescriptor(
      name: "HistoricalInfo",
      path: "/confio.poe.v1beta1.Query/HistoricalInfo",
      type: GRPCCallType.unary
    )

    internal static let validatorOutstandingReward = GRPCMethodDescriptor(
      name: "ValidatorOutstandingReward",
      path: "/confio.poe.v1beta1.Query/ValidatorOutstandingReward",
      type: GRPCCallType.unary
    )

    internal static let validatorEngagementReward = GRPCMethodDescriptor(
      name: "ValidatorEngagementReward",
      path: "/confio.poe.v1beta1.Query/ValidatorEngagementReward",
      type: GRPCCallType.unary
    )
  }
}

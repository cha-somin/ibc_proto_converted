//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: ixo/bonds/v1beta1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the bonds Msg service.
///
/// Usage: instantiate `Ixo_Bonds_V1beta1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Ixo_Bonds_V1beta1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Ixo_Bonds_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func createBond(
    _ request: Ixo_Bonds_V1beta1_MsgCreateBond,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgCreateBond, Ixo_Bonds_V1beta1_MsgCreateBondResponse>

  func editBond(
    _ request: Ixo_Bonds_V1beta1_MsgEditBond,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgEditBond, Ixo_Bonds_V1beta1_MsgEditBondResponse>

  func setNextAlpha(
    _ request: Ixo_Bonds_V1beta1_MsgSetNextAlpha,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgSetNextAlpha, Ixo_Bonds_V1beta1_MsgSetNextAlphaResponse>

  func updateBondState(
    _ request: Ixo_Bonds_V1beta1_MsgUpdateBondState,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgUpdateBondState, Ixo_Bonds_V1beta1_MsgUpdateBondStateResponse>

  func buy(
    _ request: Ixo_Bonds_V1beta1_MsgBuy,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgBuy, Ixo_Bonds_V1beta1_MsgBuyResponse>

  func sell(
    _ request: Ixo_Bonds_V1beta1_MsgSell,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgSell, Ixo_Bonds_V1beta1_MsgSellResponse>

  func swap(
    _ request: Ixo_Bonds_V1beta1_MsgSwap,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgSwap, Ixo_Bonds_V1beta1_MsgSwapResponse>

  func makeOutcomePayment(
    _ request: Ixo_Bonds_V1beta1_MsgMakeOutcomePayment,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgMakeOutcomePayment, Ixo_Bonds_V1beta1_MsgMakeOutcomePaymentResponse>

  func withdrawShare(
    _ request: Ixo_Bonds_V1beta1_MsgWithdrawShare,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgWithdrawShare, Ixo_Bonds_V1beta1_MsgWithdrawShareResponse>

  func withdrawReserve(
    _ request: Ixo_Bonds_V1beta1_MsgWithdrawReserve,
    callOptions: CallOptions?
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgWithdrawReserve, Ixo_Bonds_V1beta1_MsgWithdrawReserveResponse>
}

extension Ixo_Bonds_V1beta1_MsgClientProtocol {
  internal var serviceName: String {
    return "ixo.bonds.v1beta1.Msg"
  }

  /// CreateBond defines a method for creating a bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateBond.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createBond(
    _ request: Ixo_Bonds_V1beta1_MsgCreateBond,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgCreateBond, Ixo_Bonds_V1beta1_MsgCreateBondResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.createBond.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateBondInterceptors() ?? []
    )
  }

  /// EditBond defines a method for editing a bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to EditBond.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func editBond(
    _ request: Ixo_Bonds_V1beta1_MsgEditBond,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgEditBond, Ixo_Bonds_V1beta1_MsgEditBondResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.editBond.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditBondInterceptors() ?? []
    )
  }

  /// SetNextAlpha defines a method for editing a bond's alpha parameter.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetNextAlpha.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setNextAlpha(
    _ request: Ixo_Bonds_V1beta1_MsgSetNextAlpha,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgSetNextAlpha, Ixo_Bonds_V1beta1_MsgSetNextAlphaResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.setNextAlpha.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetNextAlphaInterceptors() ?? []
    )
  }

  /// UpdateBondState defines a method for updating a bond's current state.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateBondState.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateBondState(
    _ request: Ixo_Bonds_V1beta1_MsgUpdateBondState,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgUpdateBondState, Ixo_Bonds_V1beta1_MsgUpdateBondStateResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.updateBondState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateBondStateInterceptors() ?? []
    )
  }

  /// Buy defines a method for buying from a bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to Buy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func buy(
    _ request: Ixo_Bonds_V1beta1_MsgBuy,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgBuy, Ixo_Bonds_V1beta1_MsgBuyResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.buy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBuyInterceptors() ?? []
    )
  }

  /// Sell defines a method for selling from a bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to Sell.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func sell(
    _ request: Ixo_Bonds_V1beta1_MsgSell,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgSell, Ixo_Bonds_V1beta1_MsgSellResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.sell.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSellInterceptors() ?? []
    )
  }

  /// Swap defines a method for swapping from one reserve bond token to another.
  ///
  /// - Parameters:
  ///   - request: Request to send to Swap.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func swap(
    _ request: Ixo_Bonds_V1beta1_MsgSwap,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgSwap, Ixo_Bonds_V1beta1_MsgSwapResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.swap.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapInterceptors() ?? []
    )
  }

  /// MakeOutcomePayment defines a method for making an outcome payment to a
  /// bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to MakeOutcomePayment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func makeOutcomePayment(
    _ request: Ixo_Bonds_V1beta1_MsgMakeOutcomePayment,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgMakeOutcomePayment, Ixo_Bonds_V1beta1_MsgMakeOutcomePaymentResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.makeOutcomePayment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMakeOutcomePaymentInterceptors() ?? []
    )
  }

  /// WithdrawShare defines a method for withdrawing a share from a bond that is
  /// in the SETTLE stage.
  ///
  /// - Parameters:
  ///   - request: Request to send to WithdrawShare.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func withdrawShare(
    _ request: Ixo_Bonds_V1beta1_MsgWithdrawShare,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgWithdrawShare, Ixo_Bonds_V1beta1_MsgWithdrawShareResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.withdrawShare.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawShareInterceptors() ?? []
    )
  }

  /// WithdrawReserve defines a method for withdrawing reserve from a bond.
  ///
  /// - Parameters:
  ///   - request: Request to send to WithdrawReserve.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func withdrawReserve(
    _ request: Ixo_Bonds_V1beta1_MsgWithdrawReserve,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ixo_Bonds_V1beta1_MsgWithdrawReserve, Ixo_Bonds_V1beta1_MsgWithdrawReserveResponse> {
    return self.makeUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.withdrawReserve.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawReserveInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Ixo_Bonds_V1beta1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Ixo_Bonds_V1beta1_MsgNIOClient")
internal final class Ixo_Bonds_V1beta1_MsgClient: Ixo_Bonds_V1beta1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Ixo_Bonds_V1beta1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Ixo_Bonds_V1beta1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the ixo.bonds.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ixo_Bonds_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Ixo_Bonds_V1beta1_MsgNIOClient: Ixo_Bonds_V1beta1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Ixo_Bonds_V1beta1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the ixo.bonds.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ixo_Bonds_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the bonds Msg service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Ixo_Bonds_V1beta1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Ixo_Bonds_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func makeCreateBondCall(
    _ request: Ixo_Bonds_V1beta1_MsgCreateBond,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgCreateBond, Ixo_Bonds_V1beta1_MsgCreateBondResponse>

  func makeEditBondCall(
    _ request: Ixo_Bonds_V1beta1_MsgEditBond,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgEditBond, Ixo_Bonds_V1beta1_MsgEditBondResponse>

  func makeSetNextAlphaCall(
    _ request: Ixo_Bonds_V1beta1_MsgSetNextAlpha,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgSetNextAlpha, Ixo_Bonds_V1beta1_MsgSetNextAlphaResponse>

  func makeUpdateBondStateCall(
    _ request: Ixo_Bonds_V1beta1_MsgUpdateBondState,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgUpdateBondState, Ixo_Bonds_V1beta1_MsgUpdateBondStateResponse>

  func makeBuyCall(
    _ request: Ixo_Bonds_V1beta1_MsgBuy,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgBuy, Ixo_Bonds_V1beta1_MsgBuyResponse>

  func makeSellCall(
    _ request: Ixo_Bonds_V1beta1_MsgSell,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgSell, Ixo_Bonds_V1beta1_MsgSellResponse>

  func makeSwapCall(
    _ request: Ixo_Bonds_V1beta1_MsgSwap,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgSwap, Ixo_Bonds_V1beta1_MsgSwapResponse>

  func makeMakeOutcomePaymentCall(
    _ request: Ixo_Bonds_V1beta1_MsgMakeOutcomePayment,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgMakeOutcomePayment, Ixo_Bonds_V1beta1_MsgMakeOutcomePaymentResponse>

  func makeWithdrawShareCall(
    _ request: Ixo_Bonds_V1beta1_MsgWithdrawShare,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgWithdrawShare, Ixo_Bonds_V1beta1_MsgWithdrawShareResponse>

  func makeWithdrawReserveCall(
    _ request: Ixo_Bonds_V1beta1_MsgWithdrawReserve,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgWithdrawReserve, Ixo_Bonds_V1beta1_MsgWithdrawReserveResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ixo_Bonds_V1beta1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Ixo_Bonds_V1beta1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Ixo_Bonds_V1beta1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeCreateBondCall(
    _ request: Ixo_Bonds_V1beta1_MsgCreateBond,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgCreateBond, Ixo_Bonds_V1beta1_MsgCreateBondResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.createBond.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateBondInterceptors() ?? []
    )
  }

  internal func makeEditBondCall(
    _ request: Ixo_Bonds_V1beta1_MsgEditBond,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgEditBond, Ixo_Bonds_V1beta1_MsgEditBondResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.editBond.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditBondInterceptors() ?? []
    )
  }

  internal func makeSetNextAlphaCall(
    _ request: Ixo_Bonds_V1beta1_MsgSetNextAlpha,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgSetNextAlpha, Ixo_Bonds_V1beta1_MsgSetNextAlphaResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.setNextAlpha.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetNextAlphaInterceptors() ?? []
    )
  }

  internal func makeUpdateBondStateCall(
    _ request: Ixo_Bonds_V1beta1_MsgUpdateBondState,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgUpdateBondState, Ixo_Bonds_V1beta1_MsgUpdateBondStateResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.updateBondState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateBondStateInterceptors() ?? []
    )
  }

  internal func makeBuyCall(
    _ request: Ixo_Bonds_V1beta1_MsgBuy,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgBuy, Ixo_Bonds_V1beta1_MsgBuyResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.buy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBuyInterceptors() ?? []
    )
  }

  internal func makeSellCall(
    _ request: Ixo_Bonds_V1beta1_MsgSell,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgSell, Ixo_Bonds_V1beta1_MsgSellResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.sell.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSellInterceptors() ?? []
    )
  }

  internal func makeSwapCall(
    _ request: Ixo_Bonds_V1beta1_MsgSwap,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgSwap, Ixo_Bonds_V1beta1_MsgSwapResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.swap.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapInterceptors() ?? []
    )
  }

  internal func makeMakeOutcomePaymentCall(
    _ request: Ixo_Bonds_V1beta1_MsgMakeOutcomePayment,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgMakeOutcomePayment, Ixo_Bonds_V1beta1_MsgMakeOutcomePaymentResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.makeOutcomePayment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMakeOutcomePaymentInterceptors() ?? []
    )
  }

  internal func makeWithdrawShareCall(
    _ request: Ixo_Bonds_V1beta1_MsgWithdrawShare,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgWithdrawShare, Ixo_Bonds_V1beta1_MsgWithdrawShareResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.withdrawShare.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawShareInterceptors() ?? []
    )
  }

  internal func makeWithdrawReserveCall(
    _ request: Ixo_Bonds_V1beta1_MsgWithdrawReserve,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ixo_Bonds_V1beta1_MsgWithdrawReserve, Ixo_Bonds_V1beta1_MsgWithdrawReserveResponse> {
    return self.makeAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.withdrawReserve.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawReserveInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ixo_Bonds_V1beta1_MsgAsyncClientProtocol {
  internal func createBond(
    _ request: Ixo_Bonds_V1beta1_MsgCreateBond,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_MsgCreateBondResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.createBond.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateBondInterceptors() ?? []
    )
  }

  internal func editBond(
    _ request: Ixo_Bonds_V1beta1_MsgEditBond,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_MsgEditBondResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.editBond.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditBondInterceptors() ?? []
    )
  }

  internal func setNextAlpha(
    _ request: Ixo_Bonds_V1beta1_MsgSetNextAlpha,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_MsgSetNextAlphaResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.setNextAlpha.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetNextAlphaInterceptors() ?? []
    )
  }

  internal func updateBondState(
    _ request: Ixo_Bonds_V1beta1_MsgUpdateBondState,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_MsgUpdateBondStateResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.updateBondState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateBondStateInterceptors() ?? []
    )
  }

  internal func buy(
    _ request: Ixo_Bonds_V1beta1_MsgBuy,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_MsgBuyResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.buy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBuyInterceptors() ?? []
    )
  }

  internal func sell(
    _ request: Ixo_Bonds_V1beta1_MsgSell,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_MsgSellResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.sell.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSellInterceptors() ?? []
    )
  }

  internal func swap(
    _ request: Ixo_Bonds_V1beta1_MsgSwap,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_MsgSwapResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.swap.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapInterceptors() ?? []
    )
  }

  internal func makeOutcomePayment(
    _ request: Ixo_Bonds_V1beta1_MsgMakeOutcomePayment,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_MsgMakeOutcomePaymentResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.makeOutcomePayment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMakeOutcomePaymentInterceptors() ?? []
    )
  }

  internal func withdrawShare(
    _ request: Ixo_Bonds_V1beta1_MsgWithdrawShare,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_MsgWithdrawShareResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.withdrawShare.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawShareInterceptors() ?? []
    )
  }

  internal func withdrawReserve(
    _ request: Ixo_Bonds_V1beta1_MsgWithdrawReserve,
    callOptions: CallOptions? = nil
  ) async throws -> Ixo_Bonds_V1beta1_MsgWithdrawReserveResponse {
    return try await self.performAsyncUnaryCall(
      path: Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.withdrawReserve.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawReserveInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Ixo_Bonds_V1beta1_MsgAsyncClient: Ixo_Bonds_V1beta1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Ixo_Bonds_V1beta1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ixo_Bonds_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Ixo_Bonds_V1beta1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'createBond'.
  func makeCreateBondInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_MsgCreateBond, Ixo_Bonds_V1beta1_MsgCreateBondResponse>]

  /// - Returns: Interceptors to use when invoking 'editBond'.
  func makeEditBondInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_MsgEditBond, Ixo_Bonds_V1beta1_MsgEditBondResponse>]

  /// - Returns: Interceptors to use when invoking 'setNextAlpha'.
  func makeSetNextAlphaInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_MsgSetNextAlpha, Ixo_Bonds_V1beta1_MsgSetNextAlphaResponse>]

  /// - Returns: Interceptors to use when invoking 'updateBondState'.
  func makeUpdateBondStateInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_MsgUpdateBondState, Ixo_Bonds_V1beta1_MsgUpdateBondStateResponse>]

  /// - Returns: Interceptors to use when invoking 'buy'.
  func makeBuyInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_MsgBuy, Ixo_Bonds_V1beta1_MsgBuyResponse>]

  /// - Returns: Interceptors to use when invoking 'sell'.
  func makeSellInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_MsgSell, Ixo_Bonds_V1beta1_MsgSellResponse>]

  /// - Returns: Interceptors to use when invoking 'swap'.
  func makeSwapInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_MsgSwap, Ixo_Bonds_V1beta1_MsgSwapResponse>]

  /// - Returns: Interceptors to use when invoking 'makeOutcomePayment'.
  func makeMakeOutcomePaymentInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_MsgMakeOutcomePayment, Ixo_Bonds_V1beta1_MsgMakeOutcomePaymentResponse>]

  /// - Returns: Interceptors to use when invoking 'withdrawShare'.
  func makeWithdrawShareInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_MsgWithdrawShare, Ixo_Bonds_V1beta1_MsgWithdrawShareResponse>]

  /// - Returns: Interceptors to use when invoking 'withdrawReserve'.
  func makeWithdrawReserveInterceptors() -> [ClientInterceptor<Ixo_Bonds_V1beta1_MsgWithdrawReserve, Ixo_Bonds_V1beta1_MsgWithdrawReserveResponse>]
}

internal enum Ixo_Bonds_V1beta1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "ixo.bonds.v1beta1.Msg",
    methods: [
      Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.createBond,
      Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.editBond,
      Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.setNextAlpha,
      Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.updateBondState,
      Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.buy,
      Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.sell,
      Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.swap,
      Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.makeOutcomePayment,
      Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.withdrawShare,
      Ixo_Bonds_V1beta1_MsgClientMetadata.Methods.withdrawReserve,
    ]
  )

  internal enum Methods {
    internal static let createBond = GRPCMethodDescriptor(
      name: "CreateBond",
      path: "/ixo.bonds.v1beta1.Msg/CreateBond",
      type: GRPCCallType.unary
    )

    internal static let editBond = GRPCMethodDescriptor(
      name: "EditBond",
      path: "/ixo.bonds.v1beta1.Msg/EditBond",
      type: GRPCCallType.unary
    )

    internal static let setNextAlpha = GRPCMethodDescriptor(
      name: "SetNextAlpha",
      path: "/ixo.bonds.v1beta1.Msg/SetNextAlpha",
      type: GRPCCallType.unary
    )

    internal static let updateBondState = GRPCMethodDescriptor(
      name: "UpdateBondState",
      path: "/ixo.bonds.v1beta1.Msg/UpdateBondState",
      type: GRPCCallType.unary
    )

    internal static let buy = GRPCMethodDescriptor(
      name: "Buy",
      path: "/ixo.bonds.v1beta1.Msg/Buy",
      type: GRPCCallType.unary
    )

    internal static let sell = GRPCMethodDescriptor(
      name: "Sell",
      path: "/ixo.bonds.v1beta1.Msg/Sell",
      type: GRPCCallType.unary
    )

    internal static let swap = GRPCMethodDescriptor(
      name: "Swap",
      path: "/ixo.bonds.v1beta1.Msg/Swap",
      type: GRPCCallType.unary
    )

    internal static let makeOutcomePayment = GRPCMethodDescriptor(
      name: "MakeOutcomePayment",
      path: "/ixo.bonds.v1beta1.Msg/MakeOutcomePayment",
      type: GRPCCallType.unary
    )

    internal static let withdrawShare = GRPCMethodDescriptor(
      name: "WithdrawShare",
      path: "/ixo.bonds.v1beta1.Msg/WithdrawShare",
      type: GRPCCallType.unary
    )

    internal static let withdrawReserve = GRPCMethodDescriptor(
      name: "WithdrawReserve",
      path: "/ixo.bonds.v1beta1.Msg/WithdrawReserve",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the bonds Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Ixo_Bonds_V1beta1_MsgProvider: CallHandlerProvider {
  var interceptors: Ixo_Bonds_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateBond defines a method for creating a bond.
  func createBond(request: Ixo_Bonds_V1beta1_MsgCreateBond, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_MsgCreateBondResponse>

  /// EditBond defines a method for editing a bond.
  func editBond(request: Ixo_Bonds_V1beta1_MsgEditBond, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_MsgEditBondResponse>

  /// SetNextAlpha defines a method for editing a bond's alpha parameter.
  func setNextAlpha(request: Ixo_Bonds_V1beta1_MsgSetNextAlpha, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_MsgSetNextAlphaResponse>

  /// UpdateBondState defines a method for updating a bond's current state.
  func updateBondState(request: Ixo_Bonds_V1beta1_MsgUpdateBondState, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_MsgUpdateBondStateResponse>

  /// Buy defines a method for buying from a bond.
  func buy(request: Ixo_Bonds_V1beta1_MsgBuy, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_MsgBuyResponse>

  /// Sell defines a method for selling from a bond.
  func sell(request: Ixo_Bonds_V1beta1_MsgSell, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_MsgSellResponse>

  /// Swap defines a method for swapping from one reserve bond token to another.
  func swap(request: Ixo_Bonds_V1beta1_MsgSwap, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_MsgSwapResponse>

  /// MakeOutcomePayment defines a method for making an outcome payment to a
  /// bond.
  func makeOutcomePayment(request: Ixo_Bonds_V1beta1_MsgMakeOutcomePayment, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_MsgMakeOutcomePaymentResponse>

  /// WithdrawShare defines a method for withdrawing a share from a bond that is
  /// in the SETTLE stage.
  func withdrawShare(request: Ixo_Bonds_V1beta1_MsgWithdrawShare, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_MsgWithdrawShareResponse>

  /// WithdrawReserve defines a method for withdrawing reserve from a bond.
  func withdrawReserve(request: Ixo_Bonds_V1beta1_MsgWithdrawReserve, context: StatusOnlyCallContext) -> EventLoopFuture<Ixo_Bonds_V1beta1_MsgWithdrawReserveResponse>
}

extension Ixo_Bonds_V1beta1_MsgProvider {
  internal var serviceName: Substring {
    return Ixo_Bonds_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateBond":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgCreateBond>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgCreateBondResponse>(),
        interceptors: self.interceptors?.makeCreateBondInterceptors() ?? [],
        userFunction: self.createBond(request:context:)
      )

    case "EditBond":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgEditBond>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgEditBondResponse>(),
        interceptors: self.interceptors?.makeEditBondInterceptors() ?? [],
        userFunction: self.editBond(request:context:)
      )

    case "SetNextAlpha":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgSetNextAlpha>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgSetNextAlphaResponse>(),
        interceptors: self.interceptors?.makeSetNextAlphaInterceptors() ?? [],
        userFunction: self.setNextAlpha(request:context:)
      )

    case "UpdateBondState":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgUpdateBondState>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgUpdateBondStateResponse>(),
        interceptors: self.interceptors?.makeUpdateBondStateInterceptors() ?? [],
        userFunction: self.updateBondState(request:context:)
      )

    case "Buy":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgBuy>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgBuyResponse>(),
        interceptors: self.interceptors?.makeBuyInterceptors() ?? [],
        userFunction: self.buy(request:context:)
      )

    case "Sell":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgSell>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgSellResponse>(),
        interceptors: self.interceptors?.makeSellInterceptors() ?? [],
        userFunction: self.sell(request:context:)
      )

    case "Swap":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgSwap>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgSwapResponse>(),
        interceptors: self.interceptors?.makeSwapInterceptors() ?? [],
        userFunction: self.swap(request:context:)
      )

    case "MakeOutcomePayment":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgMakeOutcomePayment>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgMakeOutcomePaymentResponse>(),
        interceptors: self.interceptors?.makeMakeOutcomePaymentInterceptors() ?? [],
        userFunction: self.makeOutcomePayment(request:context:)
      )

    case "WithdrawShare":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgWithdrawShare>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgWithdrawShareResponse>(),
        interceptors: self.interceptors?.makeWithdrawShareInterceptors() ?? [],
        userFunction: self.withdrawShare(request:context:)
      )

    case "WithdrawReserve":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgWithdrawReserve>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgWithdrawReserveResponse>(),
        interceptors: self.interceptors?.makeWithdrawReserveInterceptors() ?? [],
        userFunction: self.withdrawReserve(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the bonds Msg service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Ixo_Bonds_V1beta1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Ixo_Bonds_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateBond defines a method for creating a bond.
  @Sendable func createBond(
    request: Ixo_Bonds_V1beta1_MsgCreateBond,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_MsgCreateBondResponse

  /// EditBond defines a method for editing a bond.
  @Sendable func editBond(
    request: Ixo_Bonds_V1beta1_MsgEditBond,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_MsgEditBondResponse

  /// SetNextAlpha defines a method for editing a bond's alpha parameter.
  @Sendable func setNextAlpha(
    request: Ixo_Bonds_V1beta1_MsgSetNextAlpha,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_MsgSetNextAlphaResponse

  /// UpdateBondState defines a method for updating a bond's current state.
  @Sendable func updateBondState(
    request: Ixo_Bonds_V1beta1_MsgUpdateBondState,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_MsgUpdateBondStateResponse

  /// Buy defines a method for buying from a bond.
  @Sendable func buy(
    request: Ixo_Bonds_V1beta1_MsgBuy,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_MsgBuyResponse

  /// Sell defines a method for selling from a bond.
  @Sendable func sell(
    request: Ixo_Bonds_V1beta1_MsgSell,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_MsgSellResponse

  /// Swap defines a method for swapping from one reserve bond token to another.
  @Sendable func swap(
    request: Ixo_Bonds_V1beta1_MsgSwap,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_MsgSwapResponse

  /// MakeOutcomePayment defines a method for making an outcome payment to a
  /// bond.
  @Sendable func makeOutcomePayment(
    request: Ixo_Bonds_V1beta1_MsgMakeOutcomePayment,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_MsgMakeOutcomePaymentResponse

  /// WithdrawShare defines a method for withdrawing a share from a bond that is
  /// in the SETTLE stage.
  @Sendable func withdrawShare(
    request: Ixo_Bonds_V1beta1_MsgWithdrawShare,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_MsgWithdrawShareResponse

  /// WithdrawReserve defines a method for withdrawing reserve from a bond.
  @Sendable func withdrawReserve(
    request: Ixo_Bonds_V1beta1_MsgWithdrawReserve,
    context: GRPCAsyncServerCallContext
  ) async throws -> Ixo_Bonds_V1beta1_MsgWithdrawReserveResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ixo_Bonds_V1beta1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Ixo_Bonds_V1beta1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Ixo_Bonds_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Ixo_Bonds_V1beta1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateBond":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgCreateBond>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgCreateBondResponse>(),
        interceptors: self.interceptors?.makeCreateBondInterceptors() ?? [],
        wrapping: self.createBond(request:context:)
      )

    case "EditBond":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgEditBond>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgEditBondResponse>(),
        interceptors: self.interceptors?.makeEditBondInterceptors() ?? [],
        wrapping: self.editBond(request:context:)
      )

    case "SetNextAlpha":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgSetNextAlpha>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgSetNextAlphaResponse>(),
        interceptors: self.interceptors?.makeSetNextAlphaInterceptors() ?? [],
        wrapping: self.setNextAlpha(request:context:)
      )

    case "UpdateBondState":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgUpdateBondState>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgUpdateBondStateResponse>(),
        interceptors: self.interceptors?.makeUpdateBondStateInterceptors() ?? [],
        wrapping: self.updateBondState(request:context:)
      )

    case "Buy":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgBuy>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgBuyResponse>(),
        interceptors: self.interceptors?.makeBuyInterceptors() ?? [],
        wrapping: self.buy(request:context:)
      )

    case "Sell":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgSell>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgSellResponse>(),
        interceptors: self.interceptors?.makeSellInterceptors() ?? [],
        wrapping: self.sell(request:context:)
      )

    case "Swap":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgSwap>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgSwapResponse>(),
        interceptors: self.interceptors?.makeSwapInterceptors() ?? [],
        wrapping: self.swap(request:context:)
      )

    case "MakeOutcomePayment":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgMakeOutcomePayment>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgMakeOutcomePaymentResponse>(),
        interceptors: self.interceptors?.makeMakeOutcomePaymentInterceptors() ?? [],
        wrapping: self.makeOutcomePayment(request:context:)
      )

    case "WithdrawShare":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgWithdrawShare>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgWithdrawShareResponse>(),
        interceptors: self.interceptors?.makeWithdrawShareInterceptors() ?? [],
        wrapping: self.withdrawShare(request:context:)
      )

    case "WithdrawReserve":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Ixo_Bonds_V1beta1_MsgWithdrawReserve>(),
        responseSerializer: ProtobufSerializer<Ixo_Bonds_V1beta1_MsgWithdrawReserveResponse>(),
        interceptors: self.interceptors?.makeWithdrawReserveInterceptors() ?? [],
        wrapping: self.withdrawReserve(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Ixo_Bonds_V1beta1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'createBond'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateBondInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_MsgCreateBond, Ixo_Bonds_V1beta1_MsgCreateBondResponse>]

  /// - Returns: Interceptors to use when handling 'editBond'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEditBondInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_MsgEditBond, Ixo_Bonds_V1beta1_MsgEditBondResponse>]

  /// - Returns: Interceptors to use when handling 'setNextAlpha'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetNextAlphaInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_MsgSetNextAlpha, Ixo_Bonds_V1beta1_MsgSetNextAlphaResponse>]

  /// - Returns: Interceptors to use when handling 'updateBondState'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateBondStateInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_MsgUpdateBondState, Ixo_Bonds_V1beta1_MsgUpdateBondStateResponse>]

  /// - Returns: Interceptors to use when handling 'buy'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBuyInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_MsgBuy, Ixo_Bonds_V1beta1_MsgBuyResponse>]

  /// - Returns: Interceptors to use when handling 'sell'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSellInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_MsgSell, Ixo_Bonds_V1beta1_MsgSellResponse>]

  /// - Returns: Interceptors to use when handling 'swap'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSwapInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_MsgSwap, Ixo_Bonds_V1beta1_MsgSwapResponse>]

  /// - Returns: Interceptors to use when handling 'makeOutcomePayment'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMakeOutcomePaymentInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_MsgMakeOutcomePayment, Ixo_Bonds_V1beta1_MsgMakeOutcomePaymentResponse>]

  /// - Returns: Interceptors to use when handling 'withdrawShare'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWithdrawShareInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_MsgWithdrawShare, Ixo_Bonds_V1beta1_MsgWithdrawShareResponse>]

  /// - Returns: Interceptors to use when handling 'withdrawReserve'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWithdrawReserveInterceptors() -> [ServerInterceptor<Ixo_Bonds_V1beta1_MsgWithdrawReserve, Ixo_Bonds_V1beta1_MsgWithdrawReserveResponse>]
}

internal enum Ixo_Bonds_V1beta1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "ixo.bonds.v1beta1.Msg",
    methods: [
      Ixo_Bonds_V1beta1_MsgServerMetadata.Methods.createBond,
      Ixo_Bonds_V1beta1_MsgServerMetadata.Methods.editBond,
      Ixo_Bonds_V1beta1_MsgServerMetadata.Methods.setNextAlpha,
      Ixo_Bonds_V1beta1_MsgServerMetadata.Methods.updateBondState,
      Ixo_Bonds_V1beta1_MsgServerMetadata.Methods.buy,
      Ixo_Bonds_V1beta1_MsgServerMetadata.Methods.sell,
      Ixo_Bonds_V1beta1_MsgServerMetadata.Methods.swap,
      Ixo_Bonds_V1beta1_MsgServerMetadata.Methods.makeOutcomePayment,
      Ixo_Bonds_V1beta1_MsgServerMetadata.Methods.withdrawShare,
      Ixo_Bonds_V1beta1_MsgServerMetadata.Methods.withdrawReserve,
    ]
  )

  internal enum Methods {
    internal static let createBond = GRPCMethodDescriptor(
      name: "CreateBond",
      path: "/ixo.bonds.v1beta1.Msg/CreateBond",
      type: GRPCCallType.unary
    )

    internal static let editBond = GRPCMethodDescriptor(
      name: "EditBond",
      path: "/ixo.bonds.v1beta1.Msg/EditBond",
      type: GRPCCallType.unary
    )

    internal static let setNextAlpha = GRPCMethodDescriptor(
      name: "SetNextAlpha",
      path: "/ixo.bonds.v1beta1.Msg/SetNextAlpha",
      type: GRPCCallType.unary
    )

    internal static let updateBondState = GRPCMethodDescriptor(
      name: "UpdateBondState",
      path: "/ixo.bonds.v1beta1.Msg/UpdateBondState",
      type: GRPCCallType.unary
    )

    internal static let buy = GRPCMethodDescriptor(
      name: "Buy",
      path: "/ixo.bonds.v1beta1.Msg/Buy",
      type: GRPCCallType.unary
    )

    internal static let sell = GRPCMethodDescriptor(
      name: "Sell",
      path: "/ixo.bonds.v1beta1.Msg/Sell",
      type: GRPCCallType.unary
    )

    internal static let swap = GRPCMethodDescriptor(
      name: "Swap",
      path: "/ixo.bonds.v1beta1.Msg/Swap",
      type: GRPCCallType.unary
    )

    internal static let makeOutcomePayment = GRPCMethodDescriptor(
      name: "MakeOutcomePayment",
      path: "/ixo.bonds.v1beta1.Msg/MakeOutcomePayment",
      type: GRPCCallType.unary
    )

    internal static let withdrawShare = GRPCMethodDescriptor(
      name: "WithdrawShare",
      path: "/ixo.bonds.v1beta1.Msg/WithdrawShare",
      type: GRPCCallType.unary
    )

    internal static let withdrawReserve = GRPCMethodDescriptor(
      name: "WithdrawReserve",
      path: "/ixo.bonds.v1beta1.Msg/WithdrawReserve",
      type: GRPCCallType.unary
    )
  }
}

// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pstake/lscosmos/v1beta1/genesis.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// GenesisState defines the lscosmos module's genesis state.
struct Pstake_Lscosmos_V1beta1_GenesisState {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var params: Pstake_Lscosmos_V1beta1_Params {
    get {return _storage._params ?? Pstake_Lscosmos_V1beta1_Params()}
    set {_uniqueStorage()._params = newValue}
  }
  /// Returns true if `params` has been explicitly set.
  var hasParams: Bool {return _storage._params != nil}
  /// Clears the value of `params`. Subsequent reads from it will return its default value.
  mutating func clearParams() {_uniqueStorage()._params = nil}

  /// this line is used by starport scaffolding # genesis/proto/state
  var moduleEnabled: Bool {
    get {return _storage._moduleEnabled}
    set {_uniqueStorage()._moduleEnabled = newValue}
  }

  var hostChainParams: Pstake_Lscosmos_V1beta1_HostChainParams {
    get {return _storage._hostChainParams ?? Pstake_Lscosmos_V1beta1_HostChainParams()}
    set {_uniqueStorage()._hostChainParams = newValue}
  }
  /// Returns true if `hostChainParams` has been explicitly set.
  var hasHostChainParams: Bool {return _storage._hostChainParams != nil}
  /// Clears the value of `hostChainParams`. Subsequent reads from it will return its default value.
  mutating func clearHostChainParams() {_uniqueStorage()._hostChainParams = nil}

  var allowListedValidators: Pstake_Lscosmos_V1beta1_AllowListedValidators {
    get {return _storage._allowListedValidators ?? Pstake_Lscosmos_V1beta1_AllowListedValidators()}
    set {_uniqueStorage()._allowListedValidators = newValue}
  }
  /// Returns true if `allowListedValidators` has been explicitly set.
  var hasAllowListedValidators: Bool {return _storage._allowListedValidators != nil}
  /// Clears the value of `allowListedValidators`. Subsequent reads from it will return its default value.
  mutating func clearAllowListedValidators() {_uniqueStorage()._allowListedValidators = nil}

  var delegationState: Pstake_Lscosmos_V1beta1_DelegationState {
    get {return _storage._delegationState ?? Pstake_Lscosmos_V1beta1_DelegationState()}
    set {_uniqueStorage()._delegationState = newValue}
  }
  /// Returns true if `delegationState` has been explicitly set.
  var hasDelegationState: Bool {return _storage._delegationState != nil}
  /// Clears the value of `delegationState`. Subsequent reads from it will return its default value.
  mutating func clearDelegationState() {_uniqueStorage()._delegationState = nil}

  var hostChainRewardAddress: Pstake_Lscosmos_V1beta1_HostChainRewardAddress {
    get {return _storage._hostChainRewardAddress ?? Pstake_Lscosmos_V1beta1_HostChainRewardAddress()}
    set {_uniqueStorage()._hostChainRewardAddress = newValue}
  }
  /// Returns true if `hostChainRewardAddress` has been explicitly set.
  var hasHostChainRewardAddress: Bool {return _storage._hostChainRewardAddress != nil}
  /// Clears the value of `hostChainRewardAddress`. Subsequent reads from it will return its default value.
  mutating func clearHostChainRewardAddress() {_uniqueStorage()._hostChainRewardAddress = nil}

  var iBCAmountTransientStore: Pstake_Lscosmos_V1beta1_IBCAmountTransientStore {
    get {return _storage._iBCAmountTransientStore ?? Pstake_Lscosmos_V1beta1_IBCAmountTransientStore()}
    set {_uniqueStorage()._iBCAmountTransientStore = newValue}
  }
  /// Returns true if `iBCAmountTransientStore` has been explicitly set.
  var hasIBCAmountTransientStore: Bool {return _storage._iBCAmountTransientStore != nil}
  /// Clears the value of `iBCAmountTransientStore`. Subsequent reads from it will return its default value.
  mutating func clearIBCAmountTransientStore() {_uniqueStorage()._iBCAmountTransientStore = nil}

  var unbondingEpochCValues: [Pstake_Lscosmos_V1beta1_UnbondingEpochCValue] {
    get {return _storage._unbondingEpochCValues}
    set {_uniqueStorage()._unbondingEpochCValues = newValue}
  }

  var delegatorUnbondingEpochEntries: [Pstake_Lscosmos_V1beta1_DelegatorUnbondingEpochEntry] {
    get {return _storage._delegatorUnbondingEpochEntries}
    set {_uniqueStorage()._delegatorUnbondingEpochEntries = newValue}
  }

  var hostAccounts: Pstake_Lscosmos_V1beta1_HostAccounts {
    get {return _storage._hostAccounts ?? Pstake_Lscosmos_V1beta1_HostAccounts()}
    set {_uniqueStorage()._hostAccounts = newValue}
  }
  /// Returns true if `hostAccounts` has been explicitly set.
  var hasHostAccounts: Bool {return _storage._hostAccounts != nil}
  /// Clears the value of `hostAccounts`. Subsequent reads from it will return its default value.
  mutating func clearHostAccounts() {_uniqueStorage()._hostAccounts = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

#if swift(>=5.5) && canImport(_Concurrency)
extension Pstake_Lscosmos_V1beta1_GenesisState: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "pstake.lscosmos.v1beta1"

extension Pstake_Lscosmos_V1beta1_GenesisState: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".GenesisState"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "params"),
    2: .standard(proto: "module_enabled"),
    3: .standard(proto: "host_chain_params"),
    4: .standard(proto: "allow_listed_validators"),
    5: .standard(proto: "delegation_state"),
    6: .standard(proto: "host_chain_reward_address"),
    7: .standard(proto: "i_b_c_amount_transient_store"),
    8: .standard(proto: "unbonding_epoch_c_values"),
    9: .standard(proto: "delegator_unbonding_epoch_entries"),
    10: .standard(proto: "host_accounts"),
  ]

  fileprivate class _StorageClass {
    var _params: Pstake_Lscosmos_V1beta1_Params? = nil
    var _moduleEnabled: Bool = false
    var _hostChainParams: Pstake_Lscosmos_V1beta1_HostChainParams? = nil
    var _allowListedValidators: Pstake_Lscosmos_V1beta1_AllowListedValidators? = nil
    var _delegationState: Pstake_Lscosmos_V1beta1_DelegationState? = nil
    var _hostChainRewardAddress: Pstake_Lscosmos_V1beta1_HostChainRewardAddress? = nil
    var _iBCAmountTransientStore: Pstake_Lscosmos_V1beta1_IBCAmountTransientStore? = nil
    var _unbondingEpochCValues: [Pstake_Lscosmos_V1beta1_UnbondingEpochCValue] = []
    var _delegatorUnbondingEpochEntries: [Pstake_Lscosmos_V1beta1_DelegatorUnbondingEpochEntry] = []
    var _hostAccounts: Pstake_Lscosmos_V1beta1_HostAccounts? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _params = source._params
      _moduleEnabled = source._moduleEnabled
      _hostChainParams = source._hostChainParams
      _allowListedValidators = source._allowListedValidators
      _delegationState = source._delegationState
      _hostChainRewardAddress = source._hostChainRewardAddress
      _iBCAmountTransientStore = source._iBCAmountTransientStore
      _unbondingEpochCValues = source._unbondingEpochCValues
      _delegatorUnbondingEpochEntries = source._delegatorUnbondingEpochEntries
      _hostAccounts = source._hostAccounts
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularMessageField(value: &_storage._params) }()
        case 2: try { try decoder.decodeSingularBoolField(value: &_storage._moduleEnabled) }()
        case 3: try { try decoder.decodeSingularMessageField(value: &_storage._hostChainParams) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._allowListedValidators) }()
        case 5: try { try decoder.decodeSingularMessageField(value: &_storage._delegationState) }()
        case 6: try { try decoder.decodeSingularMessageField(value: &_storage._hostChainRewardAddress) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._iBCAmountTransientStore) }()
        case 8: try { try decoder.decodeRepeatedMessageField(value: &_storage._unbondingEpochCValues) }()
        case 9: try { try decoder.decodeRepeatedMessageField(value: &_storage._delegatorUnbondingEpochEntries) }()
        case 10: try { try decoder.decodeSingularMessageField(value: &_storage._hostAccounts) }()
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      try { if let v = _storage._params {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      } }()
      if _storage._moduleEnabled != false {
        try visitor.visitSingularBoolField(value: _storage._moduleEnabled, fieldNumber: 2)
      }
      try { if let v = _storage._hostChainParams {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      } }()
      try { if let v = _storage._allowListedValidators {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      } }()
      try { if let v = _storage._delegationState {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      } }()
      try { if let v = _storage._hostChainRewardAddress {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      } }()
      try { if let v = _storage._iBCAmountTransientStore {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      } }()
      if !_storage._unbondingEpochCValues.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._unbondingEpochCValues, fieldNumber: 8)
      }
      if !_storage._delegatorUnbondingEpochEntries.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._delegatorUnbondingEpochEntries, fieldNumber: 9)
      }
      try { if let v = _storage._hostAccounts {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      } }()
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Pstake_Lscosmos_V1beta1_GenesisState, rhs: Pstake_Lscosmos_V1beta1_GenesisState) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._params != rhs_storage._params {return false}
        if _storage._moduleEnabled != rhs_storage._moduleEnabled {return false}
        if _storage._hostChainParams != rhs_storage._hostChainParams {return false}
        if _storage._allowListedValidators != rhs_storage._allowListedValidators {return false}
        if _storage._delegationState != rhs_storage._delegationState {return false}
        if _storage._hostChainRewardAddress != rhs_storage._hostChainRewardAddress {return false}
        if _storage._iBCAmountTransientStore != rhs_storage._iBCAmountTransientStore {return false}
        if _storage._unbondingEpochCValues != rhs_storage._unbondingEpochCValues {return false}
        if _storage._delegatorUnbondingEpochEntries != rhs_storage._delegatorUnbondingEpochEntries {return false}
        if _storage._hostAccounts != rhs_storage._hostAccounts {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
